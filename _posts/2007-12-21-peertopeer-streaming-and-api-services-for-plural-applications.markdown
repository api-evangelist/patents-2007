---

title: Peer-to-peer streaming and API services for plural applications
abstract: Embodiments of apparatuses with a universal P2P service platform are disclosed herein. A unified infrastructure is built in such apparatuses and a unified P2P network may be established with such apparatuses. In various embodiments, such an apparatus comprises a P2P operating system (OS) virtual machine (VM)  and a client guest operating system (OS) virtual machine (VM) . There is a collection of P2P services in the P2P OS VM  and this VM  works as a peer node in the P2P network. There is a collection of API services in the client guest OS VM  and this VM  interacts with various P2P applications. The two VMs communicate with each other via a shared memory  and a virtual machine manager . In various embodiments, the apparatus further includes a security checker  located in the P2P OS VM . Other embodiments are also described.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09535733&OS=09535733&RS=09535733
owner: INTEL CORPORATION
number: 09535733
owner_city: Santa Clara
owner_country: US
publication_date: 20071221
---
Embodiments of the present invention relate to field of networking in particular to peer to peer streaming and API services for providing peer to peer networking to multiple applications on a platform.

Peer to peer P2P technology has generated a revolution in the area of network communication and continues drawing more and more attention. P2P computing provides an alternative to the traditional client server network architecture. In a P2P network each peer node such as a computer works as a client or as a server within the context of a given application. P2P applications build functions such as storage computation messaging security and file distribution through direct exchanges between peer nodes. A peer node may initiate requests and may respond to requests from other peer nodes in the network. P2P technology provides many benefits to network communications such as broader sharing scope of information and efficient utilization of network resources.

Though P2P technology is demonstrated to be extremely promising several issues remain unsolved. One of the problems is that P2P applications that originate from different sources are usually not interoperable with one another and each may have its own set of basic services and plug ins. A more significant problem is that developers of new P2P applications cannot readily benefit from the experience of other P2P developers. Therefore all the developers of new P2P applications have to pretty much start from setting up their own P2P network and building up their own libraries which may have been successfully accomplished before by others already. Such efforts wasted in repetition could be better spent in developing features and functionality for new applications.

Besides the interoperability issue there are other concerns about P2P networks for example peer nodes may be infected by virus or malwares contained in data shared contents shared between peer nodes may not have authentic digital copyright management DRM information.

Illustrative embodiments of the present invention include but are not limited to apparatuses with a universal P2P service platform and P2P networks formed with such apparatuses.

Various aspects of the illustrative embodiments will be described using terms commonly employed by those skilled in the art to convey the substance of their work to others skilled in the art. However it will be apparent to those skilled in the art that alternate embodiments may be practiced with only some of the described aspects. For purposes of explanation specific numbers materials and configurations are set forth in order to provide a thorough understanding of the illustrative embodiments. However it will be apparent to one skilled in the art that alternate embodiments may be practiced without the specific details. In other instances well known features are omitted or simplified in order not to obscure the illustrative embodiments.

Further various operations will be described as multiple discrete operations in turn in a manner that is most helpful in understanding the illustrative embodiments however the order of description should not be construed as to imply that these operations are necessarily order dependent. In particular these operations need not be performed in the order of presentation.

The phrase in one embodiment is used repeatedly. The phrase generally does not refer to the same embodiment however it may. The terms comprising having and including are synonymous unless the context dictates otherwise.

In various embodiments P2P Streaming Services comprise a super set of the low level infrastructure P2P network services that application designers have to provide their applications to form a P2P network with other nodes. These P2P network services are known in the art and accordingly would not be further described. In various embodiments P2P API Services comprise a number of API calls for applications to invoke the services of P2P Streaming Services . The organization of the API calls is implementation dependent and may vary from implementations to implementations.

Thus under embodiments of the invention developers of P2P applications do not have to provide their own P2P services but may utilize P2P Streaming Services through P2P API services . Accordingly unlike the prior art where different applications executing on the different nodes forming different P2P networks under embodiments of the invention the various P2P networks are integrated into unified P2P network . Under embodiments of the invention unified P2P network provides for among other things better data sharing and network resource utilization. In various embodiments in lieu of a software implementation in whole or in part all or portion of P2P Streaming Services may be implemented in firmware instead.

As will be described in more detail below with reference to in various embodiments P2P API Services P2P applications and Operating System OS operate in one virtual machine while P2P Streaming Services operate in another virtual machine. Further in various embodiments P2P Streaming Services operate as part of a manageability engine within a virtual machine dedicated to managing the particular node. Except for P2P API Services and P2P Streaming Services P2P Applications OS and the platforms they operate on these elements may be any one of a number of implementations known in the art or to be designed. Example of P2P Applications may include but are not limited to files and or multi media content sharing application. Example of OS may include an implementation of the open source Linux operating system or a member of the Window Operating System family available from Microsoft of Redmond Wash.

P2P service OS VM comprises P2P Streaming Services and for the embodiments a back end virtual driver whereas client guest OS VM comprises applications API Services and for the embodiments front end virtual driver . The elements are coupled to each other as shown.

The P2P Streaming Services as alluded to earlier implement a super set of P2P streaming services as well as network services such as routing searching and communicating within the P2P network. Through the P2P Streaming Service the P2P service OS VM can work as a peer node in the unified P2P streaming network on behalf of the various applications . The back end virtual driver is configured to work with a front end virtual driver in the client guest OS VM for instruction or data communication between the two VMs.

The API Services communicates with user applications and translates APIs into primitive instructions and data. The API Services also calls the front end virtual driver to notify the back end virtual driver for instruction or data communication. The API Services supply unified P2P streaming service APIs and transparent P2P streaming services to various user applications . The front end virtual driver is configured to work with the back end virtual driver to transmit instructions or data between the client guest OS VM and the P2P service OS VM .

In various embodiments virtual machine manager VMM is configured to perform the conventional functions for facilitating the concurrent operations of the VMs. In various embodiments event notifications between the VMs are transmitted via event channels in the VMM . Similarly shared memory is configured to perform the conventional storage function for multiple ones of the VMs. Stream media data or instructions may be stored in this shared memory and accessed by user applications API Services and or P2P Streaming Services through the front end virtual driver or the back end virtual driver .

However additionally for the embodiment of P2P Service OS VM further includes a security checker configured to provide security functions for P2P networking. Security checker may comprise several subordinate functional units. For the illustrated embodiments the subordinate units may include a digital rights management DRM checker configured to provide digit right management on the universal P2P network. The DRM checker may be configured to check the DRM information of contents before they are shared in the P2P network or accepted into a node for the node s applications. Furthermore in various embodiments DRM checker may be configure to record the result of DRM checking as references to evaluate the credibility of a peer node.

In various embodiments the subordinate units may include a peer credit management unit configured to manage credibility of a peer node. Peer credit management unit may be configured to operate a credit record system based on e.g. behaviors of each peer node. Such a credit management unit may improve the reliability of a P2P system by forecasting the status of the P2P network. Various ways may be employed to calculate and manage the credit records. Factors like DRM information or upload download speed may affect the credit record of a peer node.

In various embodiments a virus filter may be another subordinate unit of the security checker . This virus filter may be configured to monitor the data transferred and detect for the presence of virus and or other malicious data. This virus filter may be configured to isolate a peer node from the P2P network if any data with virus or other malicious are found to be present in the data transmitted by the peer node.

In various embodiments the security checker may further include a privacy controller configured to provide privacy on the universal P2P network enabling certain applications to ensure private or confidential data are shared within a trusted peer group only. In various embodiments privacy controller may use security mechanisms such as X.509 etc to build a trusted peer group within which all sessions are secured for private contents sharing.

Additionally those skilled in the art would appreciate that besides the security accorded by security checker the implementation of the universal P2P service platform in virtual machines further provide additional security by virtual of the separation of the P2P operations from the operations of the local operating system and its applications. illustrates an example computer system suitable for use to practice various embodiments of the present invention. As shown computing system includes one or more processors and system memory . Additionally computing system includes mass storage devices such as diskette hard drive CDROM and so forth input output devices such as keyboard cursor control and so forth and communication interfaces such as network interface cards modems and so forth . The elements are coupled to each other via system bus which represents one or more buses. In the case of multiple buses they are bridged by one or more bus bridges not shown .

Each of these elements performs its conventional functions known in the art. In particular system memory and mass storage may be employed to store a working copy and a permanent copy of the programming instructions implementing some or all of the earlier described functions such as applications API services P2P Streaming Services front end and back end drivers and VMM and or security checker collectively denoted as instructions . The various components may be implemented as assembler instructions supported by processor s or high level languages such as C that can be compiled into such instructions.

The permanent copy of the programming instructions may be placed into permanent storage in the factory or in the field through for example a distribution medium not shown such as a compact disc CD or through communication interface from a distribution server not shown .

In various embodiments computer system may be a server a desktop computer a laptop computer a tablet computer or a smart phone. In other embodiments the universal P2P service platform may also be embedded in a media player a game console a set top box or a digital recorder. For example if the platform is a PC the user may make a selection between the OS of the PC or P2P for different operations and different types of P2P services will be searchable and available for user selections.

Because of the integration of network resource the unified P2P network may be further adapted to deal with high performance computing application. Service providers may lease the P2P computing resources to high performance computing applications which pay credits according to the amount of calculation and then service provider allocates credits according to participation of each peer node. Based on the unified P2P network a simpler high performance computing model may be built and further contributes to the grid computing application service.

Although specific embodiments have been illustrated and described herein it will be appreciated by those of ordinary skill in the art that a wide variety of alternate and or equivalent implementations may be substituted for the specific embodiments shown and described without departing from the scope of the embodiments of the present invention. This application is intended to cover any adaptations or variations of the embodiments discussed herein. Therefore it is manifestly intended that the embodiments of the present invention be limited only by the claims and the equivalents thereof.

