---

title: Conditional actions based on runtime conditions of a computer system environment
abstract: Conditionally performing delegated actions based on runtime conditions of the environment. A component of an Information Technology environment conditionally performs an action, such as its own recovery, based on whether the component can have such action delegated to it and/or whether that component is currently being shared by multiple business applications of the environment.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07958393&OS=07958393&RS=07958393
owner: International Business Machines Corporation
number: 07958393
owner_city: Armonk
owner_country: US
publication_date: 20071228
---
This invention relates in general to managing customer environments to provide support for business resiliency and in particular to conditionally controlling performance of actions by components of the environment based on runtime conditions of the environment.

Today customers attempt to manually manage and align their availability management with their information technology IT infrastructure. Changes in either business needs or the underlying infrastructure are often not captured in a timely manner and require considerable rework leading to an inflexible environment.

Often high availability solutions and disaster recovery technologies are handled via a number of disparate point products that target specific scopes of failure platforms or applications. Integrating these solutions into an end to end solution is a complex task left to the customer with results being either proprietary and very specific or unsuccessful.

Customers do not have the tools and infrastructure in place to customize their availability management infrastructure to respond to failures in a way that allows for a more graceful degradation of their environments. As a result more drastic and costly actions may be taken such as a site switch when other options such as disabling a set of applications or users could have been offered depending on business needs.

Coordination across availability management and other systems management disciplines is either nonexistent or accomplished via non reusable proprietary custom technology.

There is little predictability as to whether the desired recovery objective will be achieved prior to time of failure. There are only manual labor intensive techniques to connect recovery actions with the business impact of failures and degradations.

Any change in the underlying application technologies business recovery objectives resources or their interrelationships require a manual assessment of impact to the hand crafted recovery scheme.

Based on the foregoing a need exists for a capability that facilitates management of an IT environment. In particular a need exists for a capability that enables the performance of actions e.g. recovery by a component of the environment to be conditionally controlled based on runtime conditions of the environment.

The shortcomings of the prior art are overcome and additional advantages are provided through the provision of a computer implemented method of controlling performance of actions within an Information Technology IT environment. The method includes for instance determining during runtime of an IT environment whether a given component of the IT environment is being shared at a selected point in time during runtime and directing the component to take action based on the determining wherein the action is dependent on whether the resource is being shared at the selected point in time.

Computer program products and systems relating to one or more aspects of the present invention are also described and claimed herein.

Additional features and advantages are realized through the techniques of the present invention. Other embodiments and aspects of the invention are described in detail herein and are considered a part of the claimed invention.

In managing a customer s environment such as its business environment there is a set of requirements unaddressed by existing technology which causes unpredictable down time large impact failures and recoveries and significant extra labor cost with resulting loss of business revenue. These requirements include for instance 

The above set of requirements is addressed however by a Business Resiliency BR Management System of which one or more aspects of the present invention are included. The Business Resiliency Management System provides for instance 

One goal of the BR system is to allow customers to align their supporting information technology systems with their business goals for handling failures of various scopes and to offer a continuum of recovery services from finer grained process failures to broader scoped site outages. The BR system is built around the idea of identifying the components that constitute a business function and identifying successive levels of recovery that lead to more complex constructs as the solution evolves. The various recovery options are connected by an overall BR management capability that is driven by policy controls.

A Business Resilience System is capable of being incorporated in and used by many types of environments. One example of a processing environment to incorporate and use aspects of a BR system including one or more aspects of the present invention is described with reference to .

Processing environment includes for instance a central processing unit CPU coupled to memory and executing an operating system . Examples of operating systems include AIX and z OS offered by International Business Machines Corporation Linux etc. AIX and z OS are registered trademarks of International Business Machines Corporation Armonk N.Y. U.S.A. Other names used herein may be registered trademarks trademarks or product names of International Business Machines Corporation or other companies.

The operating system manages execution of a Business Resilience Runtime Component of a Business Resilience System described herein and one or more applications of an application container .

As examples processing environment includes an IBM System z processor or a pSeries server offered by International Business Machines Corporation a Linux server or other servers processors etc. Processing environment may include more less and or different components than described herein. pSeries is a registered trademark of International Business Machines Corporation Armonk N.Y. USA. 

Another example of a processing environment to incorporate and use aspects of a BR System including one or more aspects of the present invention is described with reference to .

As shown a processing environment includes for instance a central processing complex coupled to an input output I O subsystem . Central processing complex includes for instance a central processing unit memory an operating system a database management system a Business Resilience Runtime Component an application container including one or more applications and an I O facility .

I O facility couples central processing complex to I O subsystem via for example a dynamic switch . Dynamic switch is coupled to a control unit which is further coupled to one or more I O devices such as one or more direct access storage devices DASD .

Processing environments and or may include in other embodiments more less and or different components.

In yet another embodiment a central processing complex further includes a network service which is used to couple a central processing complex to a processing environment via a network subsystem .

For example network service of central processing complex is coupled to a switch of network subsystem . Switch is coupled to a switch via routers and firewalls . Switch is further coupled to a network service of processing environment .

Processing environment further includes for instance a central processing unit a memory an operating system and an application container including one or more applications . In other embodiments it can include more less and or different components.

Moreover CPC further includes in one embodiment a central processing unit a memory an operating system a database management system a Business Resilience Runtime Component an application container including one or more applications and an I O facility . It also may include more less and or different components.

I O facility is coupled to a dynamic switch of an I O subsystem . Dynamic switch is further coupled to a control unit which is coupled to one or more I O devices .

Although examples of various environments are provided herein these are only examples. Many variations to the above environments are possible and are considered within the scope of the present invention.

In the above described environments a Business Resilience Runtime Component of a Business Resilience System is included. Further details associated with a Business Resilience Runtime Component and a Business Resilience System are described with reference to .

In one example a Business Resilience System is a component that represents the management of recovery operations and configurations across an IT environment. Within that Business Resilience System there is a Business Resilience Runtime Component that represents the management functionality across multiple distinct Recovery Segments and provides the service level automation and the support of creation of the recovery sequences. In addition there are user interface administration installation and configuration template components within the Business Resilience System that enable the administrative operations that are to be performed. Each of these components is described in further detail below.

Business Resilience Runtime Component includes a plurality of components of the BR System that are directly responsible for the collection of observations creation of PSEs policy acceptance validation error detection and formulation of recovery sequences. As one example Business Resilience Runtime Component includes the following components 

In addition to the Business Resilience Runtime Component of the BR system the BR system includes the following components previously mentioned above.

The user interface admin mailbox install logic and or template components can be part of the same computing unit executing BR Runtime or executed on one or more other distributed computing units.

To further understand the use of some of the above components and their interrelationships the following example is offered. This example is only offered for clarification purposes and is not meant to be limiting in any way.

As a result of these conditions leading up to runtime the following subscriptions have already taken place 

In addition to the above BR includes a set of design points that help in the understanding of the system. These design points include for instance 

BR is targeted towards goal based policies the customer configures his target availability goal and BR determines the preparatory actions and recovery actions to achieve that goal e.g. automatically .

Availability management of the IT infrastructure through goal based policy is introduced by this design. The BR system includes the ability to author and associate goal based availability policy with the resource Recovery Segments described herein. In addition support is provided to decompose the goal policy into configuration settings preparatory actions and runtime procedures in order to execute against the deployed availability goal. In one implementation of the BR system the Recovery Time Objective RTO time to recover post outage is a supported goal policy. Additional goal policies of data currency e.g. Recovery Point Objective and downtime maximums as well as others can also be implemented with the BR system. Recovery Segments provide the context for association of goal based availability policies and are the scope for goal policy expression supported in the BR design. The BR system manages the RTO through an understanding of historical information metrics recovery time formulas if available and actions that affect the recovery time for IT resources.

RTO goals are specified by the customer at a Recovery Segment level and apportioned to the various component resources grouped within the RS. In one example RTO goals are expressed as units of time intervals such as seconds minutes and hours. Each RS can have one RTO goal per Pattern System Environment associated with the RS. Based on the metrics available from the IT resources and based on observed history and or data from the customer the RTO goal associated with the RS is evaluated for achievability taking into account which resources are able to be recovered in parallel.

Based on the RTO for the RS a set of preparatory actions expressed as a workflow is generated. This preparatory workflow configures the environment or makes alterations in the current configuration to achieve the RTO goal or to attempt to achieve the goal.

In terms of optimizing RTO there are tradeoffs associated with the choices that are possible for preparatory and recovery actions. Optimization of recovery choice is performed by BR and may include interaction at various levels of sophistication with IT resources. In some cases BR may set specific configuration parameters that are surfaced by the IT resource to align with the stated RTO. In other cases BR may request that an IT resource itself alter its management functions to achieve some portion of the overall RS RTO. In either case BR aligns availability management of the IT resources contained in the RS with the stated RTO.

In this design as one example there is an approach to collecting the required or desired metrics data both observed and key varying factors system profile information that is slow or non moving as well as potential formulas that reflect a specific resource s use of the key factors in assessing and performing recovery and preparatory actions historical data and system information. The information and raw metrics that BR uses to perform analysis and RTO projections are expressed as part of the IT resources as resource properties. BR specific interpretations and results of statistical analysis of key factors correlated to recovery time are kept as BR Specific Management data BRMD .

BR maintains specific information about the BR management of each resource pairing or relationship between resources. Information regarding the BR specific data for a resource pairing is kept by BR including information such as ordering of operations across resources impact assessment information operation effect on availability state constraint analysis of actions to be performed effects of preparatory actions on resources and requirements for resources to co locate or anti co locate.

One feature of the BR function is the ability to identify the scope and impact of a failure. The BR design uses a Containment Region to identify the resources affected by an incident. The Containment Region is initially formed with a fairly tight restriction on the scope of impact but is expanded on receiving errors related to the first incident. The impact and scope of the failure is evaluated by traversing the resource relationships evaluating information on BR specific resource pairing information and determining most current state of the resources impacted.

Various types of preparatory and recovery processes are formulated and in some cases optionally initiated. Workflows used by BR are dynamically generated based on for instance customer requirements for RTO goal based on actual scope of failure and based on any configuration settings customers have set for the BR system.

A workflow includes one or more operations to be performed such as Start CICS etc. Each operation takes time to execute and this amount of time is learned based on execution of the workflows based on historical data in the observation log or from customer specification of execution time for operations. The workflows formalize in a machine readable machine editable form the operations to be performed.

In one example the processes are generated into Business Process Execution Language BPEL compliant workflows with activities that are operations on IT resources or specified manual human activities. For example BRM automatically generates the workflows in BPEL. This automatic generation includes invoking routines to insert activities to build the workflow or forming the activities and building the XML Extensible Mark Up Language . Since these workflows are BPEL standard compliant they can be integrated with other BPEL defined workflows which may incorporate manual activities performed by the operations staff. These BR related workflows are categorized as follows in one example 

Since the set of BR actions described above modify existing IT environments visibility to the actions that are taken by BR prior to the actual execution is provided. To gain trust in the decisions and recommendations produced by BR the BR System can run in advisory mode . As part of advisory mode the possible actions that would be taken are constructed into a workflow similar to what would be done to actually execute the processes. The workflows are then made visible through standard workflow authoring tooling for customers to inspect or modify. Examples of BPEL tooling include 

BR tooling spans the availability management lifecycle from definition of business objectives IT resource selection availability policy authoring and deployment development and deployment of runtime monitors etc. In one example support for the following is captured in the tooling environment for the BR system 

One of the points in determining operational state of a Recovery Segment is that this design allows for customers to configure a definition of specific aggregated states using properties of individual IT resources. A Recovery Segment is an availability management context in one example which may include a diverse set of IT resources.

The customer may provide the rules logic used within the Recovery Segment to consume the relevant IT resource properties and determine the overall state of the RS available degraded and unavailable etc . The customer can develop and deploy these rules as part of the Recovery Segment availability policy. For example if there is a database included in the Recovery Segment along with the supporting operating system storage and network resources a customer may configure one set of rules that requires that the database must have completed the recovery of in flight work in order to consider the overall Recovery Segment available. As another example customers may choose to configure a definition of availability based on transaction rate metrics for a database so that if the rate falls below some value the RS is considered unavailable or degraded and evaluation of failure impact will be triggered within the BR system. Using these configurations customers can tailor both the definitions of availability as well as the rapidity with which problems are detected since any IT resource property can be used as input to the aggregation not just the operational state of IT resources.

Failures occurring during sequences of operations executed within a BPEL compliant process workflow are intended to be handled through use of BPEL declared compensation actions associated with the workflow activities that took a failure. The BR System creates associated undo workflows that are then submitted to compensate and reset the environment to a stable state based on where in the workflow the failure occurred.

The following set of customer values as examples are derived from the BR system functions described above listed here with supporting technologies from the BR system 

Management of the IT environment is adaptively performed as described herein and in a U.S. patent application Ser. No. 11 966 495 Adaptive Business Resiliency Computer System for Information Technology Environments Bobak et al. co filed herewith which is hereby incorporated herein by reference in its entirety.

Many different sequences of activities can be undertaken in creating a BR environment. The following represents one possible sequence however many other sequences are possible. This sequence is provided merely to facilitate an understanding of a BR system and one or more aspects of the present invention. This sequence is not meant to be limiting in any way. In the following description reference is made to various U.S. Patent Applications which are co filed herewith.

On receiving the BR and related product offerings an installation process is undertaken. Subsequent to installation of the products a BR administrator may define the configuration for BR manager instances with the aid of BRM configuration templates.

Having defined the BRM configuration a next step could be to define Recovery Segments as described in Recovery Segments for Computer Business Applications Ser. No. 11 965 855 Bobak et al. which is hereby incorporated herein by reference in its entirety.

Definition of a RS may use a representation of resources in a topology graph as described in Use of Graphs in Managing Computing Environments Ser. No. 11 965 906 Bobak et al. which is hereby incorporated herein by reference in its entirety.

It is expected that customers will enable BR operation in observation mode for a period of time to gather information regarding key metrics and operation execution duration associated with resources in a RS.

At some point sufficient observation data will have been gathered or a customer may have sufficient knowledge of the environment to be managed by BR. A series of activities may then be undertaken to prepare the RS for availability management by BR. As one example the following steps may be performed iteratively.

A set of functionally equivalent resources may be defined as described in Use of Redundancy Groups in Runtime Computer Management of Business Applications Ser. No. 11 965 877 Bobak et al. which is hereby incorporated herein by reference in its entirety.

Specification of the availability state for individual resources redundancy groups and Recovery Segments may be performed as described in Use of Multi Level State Assessment in Computer Business Environments Ser. No. 11 965 832 Bobak et al. which is hereby incorporated herein by reference in its entirety.

Representations for the IT environment in which BR is to operate may be created from historical information captured during observation mode as described in Computer Pattern System Environment Supporting Business Resiliency Ser. No. 11 965 851 Bobak et al. which is hereby incorporated herein by reference in its entirety. These definitions provide the context for understanding how long it takes to perform operations which change the configuration especially during recovery periods.

Information on relationships between resources may be specified based on recommended best practices expressed in templates or based on customer knowledge of their IT environment as described in Conditional Computer Runtime Control of an Information Technology Environment Based on Pairing Constructs Ser. No. 11 965 874 Bobak et al. which is hereby incorporated herein by reference in its entirety. Pairing processing provides the mechanism for reflecting required or desired order of execution for operations the impact of state change for one resource on another the effect execution of an operation is expected to have on a resource state desire to have one subsystem located on the same system as another and the effect an operation has on preparing the environment for availability management.

With preliminary definitions in place a next activity of the BR administrator might be to define the goals for availability of the business application represented by a Recovery Segment as described in Programmatic Validation in an Information Technology Environment Ser. No. 11 966 619 Bobak et al. which is hereby incorporated herein by reference in its entirety.

Managing the IT environment to meet availability goals includes having the BR system prioritize internal operations. The mechanism utilized to achieve the prioritization is described in Serialization in Computer Management Ser. No. 11 965 978 Bobak et al. which is hereby incorporated herein by reference in its entirety.

Multiple operations are performed to prepare an IT environment to meet a business application s availability goal or to perform recovery when a failure occurs. The BR system creates workflows to achieve the required or desired ordering of operations as described in Dynamic Generation of Processes in Computing Environments Ser. No. 11 965 894 Bobak et al. which is hereby incorporated herein by reference in its entirety.

A next activity in achieving a BR environment might be execution of the ordered set of operations used to prepare the IT environment as described in Dynamic Selection of Actions in an Information Technology Environment Ser. No. 11 965 951 Bobak et al. which is hereby incorporated herein by reference in its entirety.

Management by BR to achieve availability goals may be initiated which may initiate or continue monitoring of resources to detect changes in their operational state as described in Real Time Information Technology Environments Ser. No. 11 965 930 Bobak et al. which is hereby incorporated herein by reference in its entirety. Monitoring of resources may have already been initiated as a result of observation mode processing.

Changes in resource or redundancy group state may result in impacting the availability of a business application represented by a Recovery Segment. Analysis of the environment following an error is performed. The analysis allows sufficient time for related errors to be reported insures gathering of resource state completes in a timely manner and insures sufficient time is provided for building and executing the recovery operations all within the recovery time goal as described in Management Based on Computer Dynamically Adjusted Discrete Phases of Event Correlation Ser. No. 11 965 838 Bobak et al. which is hereby incorporated herein by reference in its entirety.

A mechanism is provided for determining if events impacting the availability of the IT environment are related and if so aggregating the failures to optimally scope the outage as described in Management of Computer Events in a Computer Environment Ser. No. 11 965 902 Bobak et al. which is hereby incorporated herein by reference in its entirety.

Ideally current resource state can be gathered after scoping of a failure. However provisions are made to insure management to the availability goal is achievable in the presence of non responsive components in the IT environment as described in Managing the Computer Collection of Information in an Information Technology Environment Ser. No. 11 965 917 Bobak et al. which is hereby incorporated herein by reference in its entirety.

With the outage scoped and current resource state evaluated the BR environment can formulate an optimized recovery set of operations to meet the availability goal as described in Defining a Computer Recovery Process that Matches the Scope of Outage Ser. No. 11 965 862 Bobak et al. which is hereby incorporated herein by reference in its entirety.

Formulation of a recovery plan is to uphold customer specification regarding the impact recovery operations can have between different business applications as described in Managing Execution Within a Computing Environment Ser. No. 11 965 913 Bobak et al. which is hereby incorporated herein by reference in its entirety.

Varying levels of recovery capability exist with resources used to support a business application. Some resources possess the ability to perform detailed recovery actions while others do not. For resources capable of performing recovery operations the BR system provides for delegation of recovery if the resource is not shared by two or more business applications as described herein in accordance with one or more aspects of the present invention.

Having evaluated the outage and formulated a set of recovery operations the BR system resumes monitoring for subsequent changes to the IT environment.

In order to build a BR environment that meets recovery time objectives IT configurations within a customer s location are to be characterized and knowledge about the duration of execution for recovery time operations within those configurations is to be gained. IT configurations and the durations for operation execution vary by time constituent resources quantity and quality of application invocations as examples. Customer environments vary widely in configuration of IT resources in support of business applications. Understanding the customer environment and the duration of operations within those environments aids in insuring a Recovery Time Objective is achievable and in building workflows to alter the customer configuration of IT resources in advance of a failure and or when a failure occurs.

A characterization of IT configurations within a customer location is built by having knowledge of the key recovery time characteristics for individual resources i.e. the resources that are part of the IT configuration being managed also referred to as managed resources . Utilizing the representation for a resource a set of key recovery time objective RTO metrics are specified by the resource owner. During ongoing operations the BR manager gathers values for these key RTO metrics and gathers timings for the operations that are used to alter the configuration. It is expected that customers will run the BR function in observation mode prior to having provided a BR policy for availability management or other management. While executing in observation mode the BR manager periodically gathers RTO metrics and operation execution durations from resource representations. The key RTO metrics properties associated values and operation execution times are recorded in an Observation log for later analysis through tooling. Key RTO metrics and operation execution timings continue to be gathered during active BR policy management in order to maintain currency and iteratively refine data used to characterize customer IT configurations and operation timings within those configurations.

Examples of RTO properties and value range information by resource type are provided in the below table. It will be apparent to those skilled in the art that additional less and or different resource types properties and or value ranges may be provided.

A specific example of key RTO properties for a z OS image is depicted in . As shown for a z OS image the following properties are identified GRS mode CLPA i.e. Was the link pack area page space initialized I O bytes moved real memory size CPs CPU speed and CPU delay as examples.

The z OS image has a set of RTO metrics associated therewith as described above. Other resources may also have its own set of metrics. An example of this is depicted in in which a Recovery Segment is shown that includes a plurality of resources each having its own set of metrics as indicated by the shading.

Further in one example the RTO properties from each of the resources that are part of the Recovery Segment for App A have been gathered by BR and formed into an observation for recording to the Observation log as depicted at .

Resources have varying degrees of functionality to support RTO goal policy. Such capacity is evaluated by BR and expressed in resource property RTOGoalCapability in the BRMD entry for the resource. Two options for BR to receive information operation execution timings are use of historical data or use of explicitly customer configured data. If BR relies on historical data to make recovery time projections then before a statistically meaningful set of data is collected this resource is not capable of supporting goal policy. A mix of resources can appear in a given RS some have a set of observations that allow classification of the operation execution times and others are explicitly configured by the customer.

Calculation of projected recovery time can be accomplished in two ways depending on customer choice use of historical observations or use of customers input timings. The following is an example of values for the RTOGoalCapability metadata that is found in the BRMD entry for the resource that indicates this choice 

If the customer is in observation mode then historical information is captured regardless of whether the customer has indicated use of explicitly input timings or use of historical information.

The administrator can alter on a resource basis which set of timings BR is to use. The default is to use historical observations. In particular a change source of resource timing logic is provided that alters the source that BR uses to retrieve resource timings. The two options for retrieving timings are from observed histories or explicitly from admin defined times for operation execution. The default uses information from the observed histories gathered from periodic polls. If the customer defines times explicitly the customer can direct BR to use those times for a given resource. If activated observation mode continues and captures information as well as running averages and standard deviations. The impact to this logic is to alter the source of information for policy validation and formulation of recovery plan.

With respect to the historical observations there may be a statistically meaningful set of observations to verify. The sample size should be large enough so that a time range for each operation execution can be calculated with a sufficient confidence interval. The acceptable number of observations to qualify as statistically meaningful and the desired confidence interval are customer configurable using BR UI but provided as defaults in the BRMD entry for the resource. The default confidence interval is 95 in one example.

There are metrics from a resource that are employed by BR to enable and perform goal management. These include for instance 

There is also a set of information about the resource that is employed this information is provided as defaults in the BRMD entry for the resource but provided to the BR team in the form of best practices information defaults by the domain owners 

In addition to the resources defined herein as part of the IT configuration that is managed there are other resources referred to herein as assessed resources. Assessed resources are present primarily to provide observation data for PSE formation and to understand impact s on managed resources. They do not have a decomposed RTO associated with them nor are they acted on for availability by BR. Assessed resources have the following characteristics as examples 

Similarly there are likely scenarios where a resource exists in a customer environment that already has an alternative availability management solution and does not require BR for its availability. However since other resources that are managed by BR may be dependent on them they are observed and assessed in order to collect observation data and understand their impacts on managed resources. Additionally there may be resources that do not have alternative management solutions but the customer simply does not want them managed by BR but other managed resources are dependent upon them. They too are classified as assessed resources.

These assessed resources share many of the same characteristics of managed resources such as for example 

To facilitate the building of the customer s IT configuration observations regarding the customer s environment are gathered and stored in an observation log. In particular the observation log is used to store observations gathered during runtime in customer environments where each observation is a collection of various data points. They are created for each of the Recovery Segments that are in observation mode. These observations are used for numerous runtime and administrative purposes in the BR environment. As examples the observations are used 

BR gathers observations during runtime when observation mode is enabled at the Recovery Segment level. There are two means for enabling observation mode as examples 

The administrator may also disable observation mode for a Recovery Segment which stops it from polling for data and creating subsequent observation records for insertion in the log. However the accumulated observation log is not deleted. In one example an RS remains in observation mode throughout its lifecycle. The UI displays the implications of disabling observation mode.

In BR the observations that are collected by BR during runtime can be grouped into two categories as examples 

A periodic poll observation is a point in time snapshot of the constituent resources in a Recovery Segment. Observation data points are collected for those resources in the Recovery Segment s which have associated BR management data for any of the following reasons as examples 

The full value of these observations is derived for an RS when they include data that has been gathered for its constituent resources plus the resources that those are dependent upon. In one embodiment the administrator is not forced to include all dependent resources when defining a Recovery Segment and even if that were the case there is nothing that prevents them from deleting various dependent resources. When defining a Recovery Segment the BR UI provides an option that allows the customer to display the dependency graph for those resources already in the Recovery Segment. This displays the topology from the seed node s in the Recovery Segment down to and including the dependent leaf nodes. The purpose of this capability is to give the customer the opportunity to display the dependent nodes and recommend that they be included in the Recovery Segment.

Preparatory and recovery workflows are built by the BR manager to achieve the customer requested RTO policy based on resource operations timings. During active policy monitoring by the BR manager measurements of achieved time for operations are recorded in observations to the log and used to maintain the running statistical data on operation execution times. Observations written to the log may vary in the contained resource RTO metrics and operation execution timings.

Observations are also collected from any of the BPEL workflows created by BR in the customer s environment. There is a standard template that each BR BPEL workflow uses. As part of that template observation data is captured at the start of during and at the completion of each workflow. Specifically in one example one observation is created at the end of the workflow with data accumulated from completion of each activity. This information is used to gather timings for workflow execution for use in creating subsequent workflows at time of failure.

In accordance with an aspect of the present invention a component of an IT environment conditionally performs an action e.g. its own recovery based upon whether the component can have such action delegated to it and or whether that component is currently being shared by multiple business applications.

One example of a component that may be selected for delegation is a resource of an IT environment. In particular certain types of resources support the ability to have a set of actions or policy delegated to them from a higher level management scope. There are cases where these resources are not shared by more than one business application and there are cases where these resources are shared by more than one application. Management of an IT infrastructure is to handle both cases and is to take into account customer specified tailored information of the effect that one resource s action e.g. recovery is allowed to have on another.

Some resources can also assess errors and formulate recovery actions within a defined scope. The actions taken by these resources are in the context of recovering a scope of failure which may be significantly more narrow than the set of IT resources operating to achieve ongoing operation for an enterprise business application. Moreover the recovery actions taken by these resources may need to be varied dependent on the criticality of the business application that is utilizing the resource. Increased complexity occurs if such a resource is utilized by more than one business application where there is a disparity in criticality between the two or more business applications. Customers require the ability to determine and manage 

Existing services do not provide the level of control required or desired by customers for IT resources shared by two or more business applications of different criticality or for IT resources on which operations are to be executed on behalf of two or more management disciplines acting on independent policy directives. Specifically adequate level of control is not provided where resources have built in operations to perform recovery and where that needs to be coordinated across an entire business application s recovery.

In accordance with an aspect of the present invention a structure of resource and resource relationship information is utilized in support of BR processing to determine for example 

BR performs analysis of resource capabilities and based on resource capabilities and the current runtime environment 

Support for delegation of recovery decisions is built on representations of resources and their relationship s to Recovery Segments RS s . In one implementation a business application is programmatically represented by a RS. When a RS is defined resources are associated with the RS. If a resource is shared among two or more RSs there exists the possibility of conflicts in recovery decisions or other actions as the resource is associated with two or more business applications which may have different quantitative management goals such as Recovery Time Objective RTO goals. Determination of recovery actions are performed by BR for shared resources utilizing the context of the business applications which are utilizing the shared resource.

RTO goals are specified by the customer at a Recovery Segment level and apportioned to the various component resources grouped within the RS by the BR system. There are RTO goals expressed as units of time intervals such as seconds minutes and hours. RTO at the RS level is apportioned to the individual resources as target recovery times taking into account parallel or overlapping restart capability. Optimization of recovery choice is performed by BR and may include interaction at various levels of sophistication with a managed resource. In some cases BR may set specific configuration parameters that are surfaced by the manageable resource to align with the stated RTO. In other cases BR may request that a manageable resource itself alter its management functions to achieve some portion of the overall RS RTO. Functional capabilities of a resource are expressed as BR management data on the resource. A resource which is capable of being delegated recovery assessment and recovery actions may support one or more of multiple interfaces. These interfaces are for instance programmatic interfaces that indicate to the resource that a particular action is to be taken. These interfaces can be implemented in a number of ways including but not limited to as application programming interfaces APIs invoked through macros as events that are listened for as messages that are monitored for etc. Examples of supported interfaces include for instance 

Resources which can be shared by two or more business applications may enable two interfaces if those resources support delegation for independent error assessment and error recovery. One interface indicates that the resource is capable of being delegated to. An interface may be provided which accepts specification of an apportioned RTO time for the resource to attempt to achieve. Another interface which supports enabling or disabling of recovery decision and recovery action taken by the resource may be provided. BR examines each resource in a RS when the RS is made actively monitored for RTO goal management. For resource s which support being delegated to BR attempts to determine what the apportionment of RTO to the resource can be while still meeting the overall RTO for the RS. BR determines if the resource is associated with a single RS or multiple RS s . If a resource is associated with a single RS and supports being delegated to BR utilizes the resource supported interface enabling delegation when the RS is made actively monitored for RTO goal management. Otherwise BR does not enable the resource for delegated recovery decision and recovery action processing. If a resource becomes shared between two RSs by being added to a RS BR utilizes the resource supported interface disabling delegation to the resource.

If a resource is not shared and does support delegation of recovery decisions and recovery actions it may recover from error conditions or may fail to recover from error conditions.

If a resource recovers an error condition its state reflects that recovery is in progress and if recovery was successful or failed. If recovery is successful and assuming no impact to other resource s is caused by recovery BR takes no further action. If a resource delegated to fails to recover BR is notified of the state change of the resource and take actions in accordance with error processing.

If a resource is shared and is capable of being delegated to for recovery decisions and recovery actions but has been prohibited from doing so by BR invoking the interface to disable delegated actions the resource is obligated to transition state to reflect the error rather than attempt recovery. When the resource transitions state BR initiates error processing which includes forming recovery operations.

The following customer example highlights one case where delegation is critical to a large enterprise financial sector customer here called ABC. At ABC there exists two business applications which use a common set of data. A mission critical application relies on a large collection of storage volumes. A non mission critical application also uses these same storage volumes as well as a few additional storage volumes. ABC chooses to have the total set of these storage volumes replicated using a synchronous replication technology such as IBM s Peer to Peer Remote Copy PPRC facility to insure there is data consistency if a switch from the primary to the alternate is required. However if the only failure is with a volume required solely by the non mission critical business application ABC will not tolerate the hyperswap time required to move to the alternate volumes of the PPRC session. This is because the hyperswap time puts at risk losing the subsystem e.g. CICS regions for the mission critical business application. During the time I O is frozen for the hyperswap transactions back up on the subsystem region causing it to go short on storage SOS which will likely cause a region failure. So the objective stated is to have a RTO for the case where both applications are to be recovered but preclude the non critical application from compromising the business critical application.

Validation of achievability of a goal policy such as an availability goal policy may be initiated by the BR administrator through the BR UI and may be achieved in multiple ways. In one implementation policy validation may occur in multiple discrete steps including for example 

Alternatively validation may be manually performed by inspection of IT resource capabilities including current state and measured timings for execution of recovery operations.

Evaluation of recovery operations for a resource establishes acceptable time duration for recovery of the business application represented by an RS. If a resource can have recovery processing delegated to it the acceptable recovery processing execution duration is provided to enable the resource to comply. To insure a resource can comply with required recovery operation time changes to the configuration of the resource may also be performed by the resource. For example a database resource may alter the log frequency in order to insure achievability of recovery time processing.

Policy activation is driven by an administrator when the administrator wants to make a policy current for monitoring of the RTO goal associated with the policy. An RS with active monitoring for RTO achievement receives notification of changes to resource state property value pairs and operation execution timings to be initiated as examples. Queries can be achieved through multiple means including directly invoking interfaces provided by the resource to return data. Any suitable communications mechanism for requesting and receiving resource data may be acceptable. In one implementation BR may use asynchronous data gathering an implementation of which is described in Managing the Computer Collection of Information in an Information Technology Environment Bobak et al. Ser. No. 11 965 917 which is hereby incorporated herein by reference in its entirety. Data returned on operation execution duration may be utilized during policy validation when establishing achievability of a desired availability goal.

Activation processing determines if resources are shared and if delegation for recovery processing is to be performed. One embodiment of the logic to activate resource delegation is described with reference to . As one example RS performs this logic.

Referring to processing retrieves the topology reflecting the resources which are part of the RS STEP . For each resource in the topology DAG from leaf resources to root resources STEP the BR management data associated with the resource is retrieved from the BRMD table STEP . In another embodiment a DAG is not used but instead a list of resources is provided or any other mechanism that indicates the appropriate resources. 

If the resource can be delegated to as indicated by the retrieved data INQUIRY and if the resource is part of two or more RS s as also indicated by the retrieved data INQUIRY the resource interface disabling recovery operations is invoked STEP and processing continues at STEP . This interface indicates to the resource that it is to turn off its own recovery processing. The manner in which recovery is disabled is resource dependent.

Otherwise if the resource is not part of two or more RS s INQUIRY the resource interface enabling recovery operations is invoked and the allowable time for the resource to complete recovery is provided as an apportionment of the overall RTO STEP . As one example the apportioned time for recovery is the time used for recovery of the resource in validation of the RTO. Specifically this interface indicates to the resource that it is to perform its own recovery. Again the manner in which recovery is performed is resource dependent. However no matter how recovery is performed it is to be within the specified goal or an error as one example is presented.

Resources can be removed from a RS if they are no longer associated with providing the business application s function. One embodiment of the logic associated with removing a resource is described with reference to . As one example the RS component of the BR performs this logic.

Referring to for each resource being removed from a RS STEP the BRMD entry is retrieved STEP . If the resource is part of two or more RS s other than the one it is being removed from INQUIRY processing proceeds with the next resource STEP . Otherwise the resource is part of one or no RS. If the resource can be delegated to INQUIRY the resource interface enabling recovery operations is invoked STEP . As one example the apportioned time for recovery is the time used for recovery of the resource in validation of the RTO. Processing then continues with STEP .

Resources can be added to a RS if they are utilized to provide the function of the business application. One embodiment of the logic to add a resource is described with reference to . As one example the RS component of the BR system performs this logic.

Referring to the RS topology of resources is retrieved STEP and each added resource in the topology DAG is evaluated from leaf resources to root resources STEP . For instance the BRMD associated with the resource is retrieved STEP and a determination is made as to whether the resource can be delegated to INQUIRY . If the resource can be delegated to a determination is made on the number of RS s in which the resource participates INQUIRY . If the resource is part of two or more RS s the resource interface disabling recovery operation is invoked STEP and processing continues at STEP . Otherwise the resource interface enabling recovery operations is invoked STEP and an apportioned recovery time within which the resource is to complete recovery processing is provided. As one example the apportioned time for recovery is the time used for recovery of the resource in validation of the RTO. Processing then continues at STEP .

Through the UI the BR administrator may initiate termination of active monitoring of a RS to achieve an availability goal. One embodiment of the logic to deactivate RS monitoring is described with reference to . As one example this logic is performed by the RS component of the BR system.

Referring to processing performed by the RS for delegation begins by accessing the RS topology STEP . For each resource in the topology DAG from leaf resource to root resource STEP the BRMD for the resource is retrieved STEP . If the resource is part of two or more RS s after monitoring is discontinued for the RS processing the BR administrator s request INQUIRY the next resource is evaluated STEP . Otherwise if the resource can be delegated to INQUIRY the resource interface enabling recovery operations is invoked STEP . As one example the apportioned time for recovery is the time used for recovery of the resource in validation of the RTO. Processing then continues at STEP .

Returning to INQUIRY if the resource cannot be delegated to processing returns to STEP . This concludes deactivate RS monitoring.

Described in detail herein is a capability for conditionally controlling based on current state of a runtime environment when a resource is to take a particular action such as its own recovery.

One or more aspects of the present invention can be included in an article of manufacture e.g. one or more computer program products having for instance computer usable media. The media has therein for instance computer readable program code means or logic e.g. instructions code commands etc. to provide and facilitate the capabilities of the present invention. The article of manufacture can be included as a part of a computer system or sold separately.

One example of an article of manufacture or a computer program product incorporating one or more aspects of the present invention is described with reference to . A computer program product includes for instance one or more computer usable media to store computer readable program code means or logic thereon to provide and facilitate one or more aspects of the present invention. The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

A sequence of program instructions or a logical assembly of one or more interrelated modules defined by one or more computer readable program code means or logic direct the performance of one or more aspects of the present invention.

Advantageously a capability is provided for conditionally controlling when a resource of an IT environment is to take a particular action such as its own recovery. The delegation of such an action is based on for instance whether the resource can be delegated to and whether it is being shared at a selected point in time during runtime e.g. when the RS associated with the resource is activated for monitoring or deactivated for monitoring or when a resource is added or removed from a RS associated with the resource or at other times in other embodiments . This ensures that one resource does not unexpectedly affect another resource. Advantageously this capability is dynamic allowing decisions by the delegated to resource to be made at runtime and more specifically at the time recovery is needed. Additionally the decisions are dynamically determined as resources change in their use and support of one or more business applications.

Although various embodiments are described above these are only examples. For example the processing environments described herein are only examples of environments that may incorporate and use one or more aspects of the present invention. Environments may include other types of processing units or servers or the components in each processing environment may be different than described herein. Each processing environment may include additional less and or different components than described herein. Further the types of central processing units and or operating systems or other types of components may be different than described herein. Again these are only provided as examples.

Moreover an environment may include an emulator e.g. software or other emulation mechanisms in which a particular architecture or subset thereof is emulated. In such an environment one or more emulation functions of the emulator can implement one or more aspects of the present invention even though a computer executing the emulator may have a different architecture than the capabilities being emulated. As one example in emulation mode the specific instruction or operation being emulated is decoded and an appropriate emulation function is built to implement the individual instruction or operation.

In an emulation environment a host computer includes for instance a memory to store instructions and data an instruction fetch unit to obtain instructions from memory and to optionally provide local buffering for the obtained instruction an instruction decode unit to receive the instruction fetched and to determine the type of instructions that have been fetched and an instruction execution unit to execute the instructions. Execution may include loading data into a register for memory storing data back to memory from a register or performing some type of arithmetic or logical operation as determined by the decode unit. In one example each unit is implemented in software. For instance the operations being performed by the units are implemented as one or more subroutines within emulator software.

Further a data processing system suitable for storing and or executing program code is usable that includes at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements include for instance local memory employed during actual execution of the program code bulk storage and cache memory which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input Output or I O devices including but not limited to keyboards displays pointing devices DASD tape CDs DVDs thumb drives and other memory media etc. can be coupled to the system either directly or through intervening I O controllers. Network adapters may also be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modems and Ethernet cards are just a few of the available types of network adapters.

Further although the environments described herein are related to the management of availability of a customer s environment one or more aspects of the present invention may be used to manage aspects other than or in addition to availability. Further one or more aspects of the present invention can be used in environments other than a business resiliency environment.

Yet further many examples are provided herein and these examples may be revised without departing from the spirit of the present invention. For example in one embodiment the description is described in terms of availability and recovery however other goals and or objectives may be specified in lieu of or in addition thereto. Additionally the resources may be other than IT resources. Further there may be references to particular products offered by International Business Machines Corporation or other companies. These again are only offered as examples and other products may also be used. Additionally although tables and databases are described herein any suitable data structure may be used. There are many other variations that can be included in the description described herein and all of these variations are considered a part of the claimed invention.

Further for completeness in describing one example of an environment in which one or more aspects of the present invention may be utilized certain components and or information is described that is not needed for one or more aspects of the present invention. These are not meant to limit the aspects of the present invention in any way.

One or more aspects of the present invention can be provided offered deployed managed serviced etc. by a service provider who offers management of customer environments. For instance the service provider can create maintain support etc. computer code and or a computer infrastructure that performs one or more aspects of the present invention for one or more customers. In return the service provider can receive payment from the customer under a subscription and or fee agreement as examples. Additionally or alternatively the service provider can receive payment from the sale of advertising content to one or more third parties.

In one aspect of the present invention an application can be deployed for performing one or more aspects of the present invention. As one example the deploying of an application comprises providing computer infrastructure operable to perform one or more aspects of the present invention.

As a further aspect of the present invention a computing infrastructure can be deployed comprising integrating computer readable code into a computing system in which the code in combination with the computing system is capable of performing one or more aspects of the present invention.

As yet a further aspect of the present invention a process for integrating computing infrastructure comprising integrating computer readable code into a computer system may be provided. The computer system comprises a computer usable medium in which the computer usable medium comprises one or more aspects of the present invention. The code in combination with the computer system is capable of performing one or more aspects of the present invention.

The capabilities of one or more aspects of the present invention can be implemented in software firmware hardware or some combination thereof. At least one program storage device readable by a machine embodying at least one program of instructions executable by the machine to perform the capabilities of the present invention can be provided.

The flow diagrams depicted herein are just examples. There may be many variations to these diagrams or the steps or operations described therein without departing from the spirit of the invention. For instance the steps may be performed in a differing order or steps may be added deleted or modified. All of these variations are considered a part of the claimed invention.

Although embodiments have been depicted and described in detail herein it will be apparent to those skilled in the relevant art that various modifications additions substitutions and the like can be made without departing from the spirit of the invention and these are therefore considered to be within the scope of the invention as defined in the following claims.

