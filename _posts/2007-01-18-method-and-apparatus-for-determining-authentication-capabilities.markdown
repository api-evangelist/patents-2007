---

title: Method and apparatus for determining authentication capabilities
abstract: A method is disclosed for determining the authentication capabilities of a supplicant before initiating an authentication conversation with a client, for example, using Extensible Authentication Protocol (EAP). In one aspect, the method provides for sending, to a supplicant that is requesting access to a computer network subject to authentication of a user of the supplicant, a list of first authentication methods that are supported by an authentication server; receiving, from the supplicant, a counter-list of second authentication methods that are supported by the supplicant; determining how many second authentication methods in the counter-list match the first authentication methods; and performing an authentication policy action based on how many of the second authentication methods match the first authentication methods. Policy actions can include blocking access, re-directing to sources of acceptable authentication methods, granting one of several levels of network access, etc.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08555340&OS=08555340&RS=08555340
owner: Cisco Technology, Inc.
number: 08555340
owner_city: San Jose
owner_country: US
publication_date: 20070118
---
This application claims benefit as a Continuation of U.S. patent application Ser. No. 10 910 006 entitled METHOD AND APPARATUS FOR DETERMINING AUTHENTICATION CAPABILITIES filed Aug. 2 2004 now U.S. Pat. No. 7 194 763 by Potter et al. the entire contents of which is hereby incorporated by reference as if fully set forth herein under 35 U.S.C. 120.

The present invention generally relates to data processing in the field of user authentication in networks. The invention relates more specifically to a method and apparatus for determining authentication capabilities of a client or supplicant.

The approaches described in this section could be pursued but are not necessarily approaches that have been previously conceived or pursued. Therefore unless otherwise indicated herein the approaches described in this section are not prior art to the claims in this application and are not admitted to be prior art by inclusion in this section.

A user authentication process is normally used in networks that carry data voice or other information to determine whether a user or client seeking to access a network actually is who the user purports to be. Numerous message protocols have been developed to specify how to perform authentication with network devices such as switches routers gateways and gatekeepers. Typically an authentication protocol requires a client to prove its identity by offering a data credential that is verified in a secure manner by an authentication server. Some such servers also perform network access control and accounting functions and therefore are termed authentication authorization and accounting AAA servers. A commercial example is CiscoSecure Access Control Server from Cisco Systems Inc.

The emergence of numerous diverse authentication protocols spurred a movement toward developing a generalized authentication protocol that could be extended to support various platforms and purposes. An authentication approach for network devices is described in L. Blunk et al. PPP Extensible Authentication Protocol IETF Request for Comments 2284 March 1998 and other aspects of EAP are described in RFC 2716 3579 etc. The EAP approach of RFC 2284 provides a generalized way for a first network element to authenticate the identity of a second network element. EAP is becoming the preferred user authentication protocol for most types of network sessions across different network devices. In large part this popularity stems from the extensible nature of EAP which allows any device that provides generic support for the protocol to transparently support new authentication protocols known as EAP methods.

EAP implementations have been developed for many specific contexts. For example in the context of mobile wireless devices that use the Global System for Mobile communications GSM an approach for authentication and deriving session keys using the GSM Subscriber Identity Module SIM is described in H. Haverinen et al. EAP SIM Authentication IETF Internet Draft February 2003. In these contexts EAP generally results in exchanging authentication credentials and may include a key exchange in which peers acquire keys needed to decipher packets sent under a link layer protocol such as IEEE 802.11.

Wireless local area networks such as those that use the 802.1x protocol for wireless communications now commonly use EAP for user authentication. A wireless client device such as a laptop computer that is seeking to obtain network access is termed a supplicant. An AAA server provides user authentication services to an access router that intercepts requests of the supplicant the access router has the role of a client with respect to the AAA server.

EAP supplicants and servers are typically used in a relatively simple operational configuration in which one encrypted outer EAP method protects messages communicated using one inner EAP method. For example the outer method may be EAP PEAP and the inside method may comprise EAP GTC in which the user uses a cryptographic token card to supply a user credential or the inside method may comprise Microsoft Challenge Authentication Protocol MS CHAP .

However EAP sequences are becoming more widely deployed inside tunneled EAP methods such as EAP PEAPv2 and EAP FAST to provide authentication using more than one authentication factor user authorization validating that the supplicant has a required software configuration posture validation and other processes. These approaches introduce a greater burden on AAA servers as these new methods require multiple cycles of challenge and response messages and each message may require breaking into small fragments because they exceed the maximum transportable unit size of the transport medium e.g. a WLAN or transport protocol. Therefore it is desirable not to burden an AAA server with a user authentication transaction unless it is relatively certain that the supplicant can perform as required in the transaction.

Further new AAA server features may include more flexible policy based access control. For example authentication protocols no longer need to be statically pre programmed into devices and supplicants. However the whole authentication message sequence can fail at the last stage if the supplicant is not configured correctly. For this further reason it is desirable not to initiate a message sequence if the supplicant cannot complete the sequence.

Type length value triplets TLVs are now used inside tunneled EAP methods to create sequences of EAP methods. This approach is required because the EAP specification states that top level EAP methods cannot be chained. Hence an EAP method only receives an EAP TLV and a sequence of methods occurs conceptually inside the EAP TLV exchange. As defined in RFC 2284 each EAP message includes a Type field which indicates the EAP method being used for the authentication of the session. The Type field is required regardless of which encapsulation type is used to transport the EAP message such as Remote Authentication Dial In User Service RADIUS which is defined in IETF RFC 2138 point to point protocol PPP as defined in RFC 1661 EAPOL etc. EAP TLV is EAP type 33. A protected version of EAP using TLS is also available and is effectively the same as using a TLV inside EAP PEAP or EAP FAST.

Co pending U.S. application Ser. No. 10 071 455 filed Feb. 8 2002 claims a security capability negotiation in the context of SSL ciphersuites and has the following abstract A method and apparatus are disclosed for providing data from a service to a client based on the encryption capabilities of the client. Cipher suite lists are exchanged between a client and an endpoint. On the endpoint the cipher suite list incorporates a mapping of cipher suite names to services. The endpoint uses the client s list of cipher suites in conjunction with the mapping of cipher suite names to services to determine a cipher suite match. A service is selected based on the cipher suite match. A server farm is selected based on the service. The client is informed of this cipher suite match and the endpoint retains knowledge of the cipher suite match throughout the session. Therefore the encrypted connection between the client and the endpoint can be disconnected and later reestablished to provide data from the particular server. Other handshake mechanisms and negotiation protocols have been used in other contexts but they do not address the needs identified here.

Based on the foregoing there is a clear need for an approach for determining the authentication capabilities of a supplicant before initiating a authentication process that may consume significant server resources. It would be useful to have such a mechanism that is compatible with existing protocol infrastructure in general and compatible with EAP in particular.

A method and apparatus for providing multiple authentication types within an authentication protocol that supports a single type of authentication is described. In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be apparent however to one skilled in the art that the present invention may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention.

The needs identified in the foregoing Background and other needs and objects that will become apparent for the following description are achieved in the present invention which comprises in one aspect a method for determining the authentication capabilities of a supplicant before initiating an authentication conversation with a client for example using Extensible Authentication Protocol EAP . As an example the method provides for sending to a supplicant that is requesting access to a computer network subject to authentication of a user of the supplicant a list of first authentication methods that are supported by an authentication server receiving from the supplicant a counter list of second authentication methods that are supported by the supplicant determining how many second authentication methods in the counter list match the first authentication methods and performing an authentication policy action based on how many of the second authentication methods match the first authentication methods. Policy actions can include blocking access re directing to sources of acceptable authentication methods granting one of several levels of network access etc.

In one feature the determining and performing steps comprise determining whether the counter list identifies enough second authentication methods that match the first authentication methods based on a policy applicable to the supplicant and initiating an authentication conversation with the supplicant only when the counter list identifies enough matching second authentication methods.

In another feature the authentication policy action comprises sending an authentication failure message to the supplicant when the counter list fails to identify enough matching second authentication methods. Additionally or alternatively the authentication policy action comprises re directing the supplicant to an authentication method provisioning system that contains one or more of the first authentication methods. In another embodiment the authentication policy action comprises initiating an authentication conversation with the supplicant based on one of the first authentication methods that matches and if the authentication conversation is successful granting one of a plurality of levels of access to the computer network based on how many second authentication methods in the counter list match the first authentication methods.

According to another feature the authentication policy action comprises initiating a plurality of authentication conversations with the supplicant based on a plurality of the first authentication methods that match determining respective results for each of the plurality of authentication conversations and determining whether to grant access to one or more network resources based on results of each of the plurality of authentication conversations.

In yet another feature determining whether to grant access comprises granting one of a plurality of levels of access to the computer network based on the results of the plurality of authentication conversations. The authentication conversations may comprise receiving and evaluating machine certificates machine identity information software or policy compliance information machine or user governance information or performing other user or machine credential checks. In still another feature the authentication methods are Extensible Authentication Protocol EAP methods. The list of first authentication methods may be sent in an EAP type length value TLV request. The list of first authentication methods may comprise one or more octet pairs wherein a first octet of an octet pair comprises a number of an EAP method and a second octet comprises a mandatory flag. The first list may be an ordered list.

In still another feature the method further involves establishing before performing the other steps an outer EAP tunnel authentication conversation between the supplicant and the authentication server. Moreover complex policy rules may define how to apply multiple authentication methods to a particular client or user for example based on the results of a determination of the authentication capabilities of the supplicant. As a result a network can apply multiple levels of network access to a client or user based on whether the client or user succeeds in one all or multiple authentication processes.

In other aspects the invention encompasses a computer apparatus and a computer readable medium configured to carry out the foregoing steps.

Client is any network compatible end station such as a personal computer or workstation. Network may be any local area network wide area network or one or more internetworks. Enterprise network is any network including a WLAN that holds one or more network resources that client is seeking to access. In certain embodiments networks may be the same thus is intended to broadly encompass any network arrangement in which an untrusted client is seeking access to a resource that is held in a secure network.

Access server is in one embodiment a network router that is configured to perform access control functions. An example is Cisco Access Server AS5300 commercially available from Cisco Systems Inc. San Jose Calif. The EAP compliant embodiments described herein may be implemented using any EAP capable platform including switches routers network elements that support VPN wireless gateways firewalls etc.

Authentication server is a server class computer that is configured to securely store user authentication information such as usernames and passwords and to perform authentication protocols algorithms and supporting processes such as one time password OTP validation encryption and decryption message digest evaluation etc. In one embodiment authentication server communicates with access server using a secure protocol that is optimized for use in authentication. An example of a suitable protocol is RADIUS.

Optionally a policy server is communicatively coupled to network and or to authentication server or is integrated with the authentication server. The policy server provides a repository of authentication policies that the authentication server may consult to determine how to interact with client . For example policy server may specify a minimum required authentication method that client must be capable of using for authentication a particular kind of credential that the client must present in addition to completing successful authentication etc.

In this arrangement client must successfully authenticate itself to access server in cooperation with authentication server to gain access to resource . Any of several authentication protocols may be used to perform authentication. An example of a suitable authentication protocol is PEAP which is an EAP compliant protocol that is performed as part of establishing a PPP connection between client and access server . In an object oriented environment logic that defines messages and actions performed as part of the authentication protocol can be structured as an authentication method A that client accesses or calls using an application programming interface API A. A compatible authentication method B is callable by authentication server using API B.

In general under EAP when client attempts to access enterprise network access server contacts the client and requests identity information which the client provides in a response. Thus client and access server establish a logical connection A. Access server then passes all subsequent messages involved in the authentication protocol and issued by client to authentication server and forwards related messages directed from the authentication server to the client. Accordingly client and authentication server effectively establish a logical connection B until the authentication protocol terminates. As a result authentication server can use authentication method B to determine its authentication behavior since it represents the logical endpoint of the authentication protocol conversation.

For purposes of illustrating a clear example the following discussion of . C and references communications among elements of . However represents merely one example of a network arrangement and the techniques described herein may be used in many other network arrangements.

In step the supplicant sends a counter list of second authentication methods. The counter list may comprise all authentication methods that are supported by the supplicant. Alternatively the counter list may comprise only those authentication methods that are supported by the supplicant and that are also in the list of first authentication methods supported by the authentication server representing an intersection of lists maintained by the supplicant and authentication server.

In step the authentication server determines how many of the second authentication methods match the list of first authentication methods or are supported by the authentication server. Thus step generally involves determining how the authentication capabilities asserted by the supplicant match the requirements of the authentication server. To perform step authentication server may compare its list to the list received from client independently or using further consultation with the policy server .

In step an authentication policy action is performed based on how many of the second authentication methods match the list of first authentication methods or are supported by the authentication server. Step encompasses a variety of possible actions as shown for example in block and . Example actions may include refusing network access if the supplicant does not support a required authentication method block . The authentication server may re direct the supplicant to a network resource that contains one or more of the authentication methods that the authentication server requires as in block so that the supplicant can download and install the required authentication method.

Further as shown in block the authentication server may instruct the access server to grant a selected level of network access based on how well the authentication capabilities of the supplicant match requirements of the authentication server. For example authentication server can configure an access control list ACL of a particular type on access server to limit what resources supplicant can access. As shown in block the authentication server may request and evaluate other credentials from the supplicant. The authentication server may determine which other credentials to request based on consultation with the policy server or based on information about the user client location of the user or client time of day type of machine type of connection etc. Block also may involve initiating a RADIUS conversation performing an MS CHAP challenge etc.

Step also may involve creating a log entry at the authentication server if the supplicant is determined not to support a required authentication method. In one embodiment such log entries are specifically labeled as capability assertion failures. This technique makes the authentication server log easier for an administrator to interpret as an administrator can to determine from the log that an authentication failure specifically occurred because of inadequate configuration of the supplicant.

Using this approach policy negotiation of logins can be achieved. For instance a user could request network access from a remote location or home location on a work day or weekend using a work configured laptop or home machine from a wired connection wireless connection VPN connection etc. Based on information identifying these characteristics policy server or authentication server can require the supplicant to present any of several different types of credentials such as a machine identifier token card value information about a software configuration of the user machine such as whether the user machine has antivirus software a personal firewall a particular operating system software image certain required operating system security patches etc. Thus the approach disclosed herein facilitates complex policy negotiations involving one or more iterations sequencing and timing to address myriad authentication scenarios and permutations that may be required according to various policies.

3.0 Extensible Authentication Protocol Implementation of Method of Determining Authentication Capabilities

The preceding description of is protocol independent. However specific embodiments may implement the general techniques of in the context of a specific authentication protocol such as PEAP or any other EAP compliant protocol.

Referring first to a supplicant such as client of initiates an EAP conversation by sending an EAP over LAN EAPOL Start message to access server which has the role of an authenticator in . Typically EAPOL Start message is sent by supplicant after the supplicant seeks to access a protected resource such as resource and receives a response from access server indicating that access is denied.

The authenticator which may be an edge router firewall gateway or server then issues an EAP Request message with subtype Identity. The message operates as a request for the supplicant to identify itself. In response supplicant sends an EAP Response message with subtype Identity and includes identifying information in a message attribute. For example when the client is a mobile wireless device operating in a GSM network the identifying information could be the user s International Mobile Subscriber Identity IMSI value or a temporary identity value. However a separate identity exchange is not always required for EAP SIM and AKA.

Authenticator forwards message to authentication server as indicated by arrow . In response authentication server forms a Capability Assertion Request containing a list of supported EAP method types and sends the request to supplicant as shown in step . Authentication server may determine the specific method types that are contained in the Capability Assertion Request by querying policy server for authentication policies applicable to supplicant based for example on the identity information received from the supplicant.

In one embodiment the Capability Assertion Request is carried within an EAP type length value TLV attribute. EAP TLVs are described in T. Hiller et al. A Container Type for the Extensible Authentication Protocol EAP IETF internet draft of May 2003. If additional security is desired then alternatively the Capability Assertion Request is carried in a protected EAP TLV. The use of EAP protected TLV attributes is described in J. Salowey Protected EAP TLV March 2003 available at the time of this writing in the document draft salowey eap protectedtlv 01.txt at the internet drafts directory of the IETF.org domain on the World Wide Web.

Unlike conventional PEAP or other EAP compliant protocols according to an embodiment the Type field carries a value specifying that multiple authentications is in use. Any value that uniquely identifies multiple authentications may be used. IETF RFC 2284 defines Type values 1 through 6 and other later RFCs may define other Type values thus a Type value other than those previously defined should be selected. As an example in a Type value of 8 indicates that the packet is a Capability Assertion Request according to the techniques herein.

Further unlike conventional PEAP or other EAP compliant protocols according to an embodiment the Type Data field carries a value that is structured as an EAP compliant TLV object. The TLV object comprises Mandatory flag Reserved flag Type value Length field and Value field . The Mandatory flag indicates whether processing the TLV object is mandatory and normally always has a value of 1 to indicate mandatory processing. The Reserved flag is reserved for future use in the EAP specifications and is undefined for the techniques herein. The Type value carries a value indicating that the TLV object is a list of supported authentication methods for a Capability Assertion Request. The Length field indicates the length of the Value field .

Value field comprises a list of octet pairs that identify authentication methods. As an example in a first octet pair a first octet A specifies an EAP method type using a value from 0 to 255 and a Mandatory octet A carries a flag value indicating whether support for the associated EAP type is mandatory. For example a value of 1 indicates mandatory use. There may be any number of octet pairs in the Value field . The octet pairs may be ordered according to an order of priority of support by a supplicant.

Referring again to in step the supplicant replies to message by forming and sending to the authentication server an EAP TLV Capability Assertion Response that contains a list of EAP method types that are supported by the supplicant. Optionally step may further involve the supplicant prompting the user to specify which EAP method the user wishes to use in interacting with the authentication server receiving user input selecting of a method and forming a Capability Assertion Response that identifies the selected method.

In step the authentication server performs any of the authentication policy actions described above with respect to step and blocks . As an example in step comprises determining whether the supported EAP method types identified in message are sufficient. If not then authentication server sends an EAP FAIL message A to supplicant . Thus the authentication server can immediately reject the authentication transaction if the supplicant is not configured adequately. Because the supplicant already knows the EAP methods that it was asked for but could not support software or processes at the supplicant can generate user interface messages create log entries or perform other user feedback actions that give the user a better understanding about why authentication failed than is available in prior approaches. For example in a Windows XP environment authentication failure can result in supplicant presenting a pop up message to user in the Windows system tray area.

Additionally authentication server may re direct the supplicant to an authentication provisioning system as shown in step B. An authentication provisioning system may be provided in the network arrangement of to provide a source for the supplicant to download one or more authentication methods that the authentication server requires but that are not currently supported by the supplicant. After downloading the required methods the supplicant can attempt authentication again.

If the test of step has a positive result then control passes to . In one embodiment in step the authentication server issues a Start message for a selected EAP authentication method in the list received in message . As a result the supplicant and authentication server perform an inner EAP method conversation step using an EAP method selected from an intersection of the two lists respectively proposed by the authentication server and the supplicant.

In step based on results of the conversation of step the authentication server sends either a success or failure message to the supplicant . At step the authentication server determines whether to initiate another inner authentication conversation. Step may involve the authentication server consulting policy information obtained from policy server to determine whether additional authentication methods must be performed. Step also may involve performing tests to determine whether the client has an acceptable security posture including a particular type of required software a required connection type location time of day for login etc. collectively termed client posture validation .

At step after all required EAP methods or other authentication checks are performed successfully processing may continue with performing the PPP network layer protocol phase according to known techniques.

For example referring to in one embodiment steps and are performed as described above for and then as shown in step a conventional outer EAP method conversation is performed to establish a secure tunnel between the supplicant and the authentication server . Within the secure tunnel in step a capability assertion conversation is performed as shown in step to step inclusive of . B. Optionally at step one or more inner method conversations authentication actions credential challenges supplicant configuration checks or posture validation policy server interactions etc. may be performed. Thus any number of authentication mechanisms may be chained together. When 802.1x is used no network traffic can flow from the enterprise network to the supplicant until the entire chain completes successfully.

Embodiments may be used with a variety of inner and outer EAP authentication protocols. For example one embodiment may use EAP SIM authentication as described in Haverinen et al. Alternatively embodiments may use EAP AKA authentication which is described in J. Arkko EAP AKA Authentication February 2003 available at the time of this writing in the document draft arkko pppext eap aka 09.txt in directory Internet Drafts of the IETF.org domain on the World Wide Web.

Thus using one embodiment of the general techniques described herein an AAA server sends to the supplicant an n ordered list of EAP types that are supported or required by the server. The list is provided in a Capability Assertion Request CAR . The supplicant responds with a list of EAP types for which it is configured or that the end user has selected in response to a prompt as its Capability Assertion Response. The AAA server and client negotiate within an EAP TLV dialog an acceptable EAP type that meets requirements of the server. In effect these techniques allow the AAA server to query the supplicant about its identity and capabilities before expending server resources on actually performing an authentication conversation. As a result the techniques herein can result in fewer wasted server CPU cycles involved in processing authentication requests that ultimately will fail.

Further various embodiments provide more intuitive feedback to the supplicant and end user AAA server logs that are easier to interpret because Capability Assertion Request failures will be logged as such enabling an administrator to specifically determine that an authentication failure occurred because of inadequate configuration of the supplicant and convenient re direction of the end user when insufficient credential matching occurs.

Computer system may be coupled via bus to a display such as a cathode ray tube CRT for displaying information to a computer user. An input device including alphanumeric and other keys is coupled to bus for communicating information and command selections to processor . Another type of user input device is cursor control such as a mouse trackball stylus or cursor direction keys for communicating direction information and command selections to processor and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes a first axis e.g. x and a second axis e.g. y that allows the device to specify positions in a plane.

The invention is related to the use of computer system for providing multiple authentication types within an authentication protocol that supports a single type. According to one embodiment of the invention providing multiple authentication types within an authentication protocol that supports a single type is provided by computer system in response to processor executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory from another computer readable medium such as storage device . Execution of the sequences of instructions contained in main memory causes processor to perform the process steps described herein. In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement the invention. Thus embodiments of the invention are not limited to any specific combination of hardware circuitry and software.

The term computer readable medium as used herein refers to any medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media. Non volatile media includes for example optical or magnetic disks such as storage device . Volatile media includes dynamic memory such as main memory .

Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape or any other magnetic medium a CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes a RAM a PROM and EPROM a FLASH EPROM any other memory chip or cartridge or any other medium from which a computer can read.

Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to processor for execution. For example the instructions may initially be carried on a magnetic disk of a remote computer. The instructions received by main memory may optionally be stored on storage device either before or after execution by processor .

Computer system also includes a communication interface coupled to bus . Communication interface provides a two way data communication coupling to a network link that is connected to a local network . For example communication interface may be an integrated services digital network ISDN card or a modem to provide a data communication connection to a corresponding type of telephone line. As another example communication interface may be a local area network LAN card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation communication interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information.

Network link typically provides data communication through one or more networks to other data devices. For example network link may provide a connection through local network to a host computer or to data equipment operated by an Internet Service Provider ISP . ISP in turn provides data communication services through the worldwide packet data communication network now commonly referred to as the Internet . Local network and Internet both use electrical electromagnetic or optical signals that carry digital data streams. The signals through the various networks and the signals on network link and through communication interface which carry the digital data to and from computer system are exemplary forms of carrier waves transporting the information.

In the foregoing specification the invention has been described with reference to specific embodiments thereof. It will however be evident that various modifications and changes may be made thereto without departing from the broader spirit and scope of the invention. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense.

