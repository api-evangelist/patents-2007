---

title: Universal schema for representing management policy
abstract: A computer-readable storage medium has a data structure stored thereon for constructing expressions representing software configurations to be applied to software. The data structure includes a first data field including data identifying a name of software setting for the application. A second data field includes data representing an assertion portion of an policy rule for configuring the configurations identified in the first data field to be applied to the software. The data structure also includes a third data field storing data representing an action portion of the policy rule. The second data field and the third data field form the policy rule. A fourth data field stores metadata describing the policy rule represented by the first data field, the second data field, and the third data field.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08104080&OS=08104080&RS=08104080
owner: Microsoft Corporation
number: 08104080
owner_city: Redmod
owner_country: US
publication_date: 20070126
---
In a distributed computing network software is installed on devices connected in the network. As users become familiar with the software running on their computers they often alter the configuration of software to personalize it secure it etc. For example a user may wish to change the appearances of the graphical user interface GUI for particular software while another user may wish to set a specific timer for the screen saver program. A third user may wish to configure the media player appearance mode by hiding the media player toolbar and so forth.

While software may be personalized or customized to suit each user s taste or preference network administrators typically wish to configure all software installed on each of the devices in the network with identical or uniform configurations. A uniform configuration not only makes deployment of the software more convenient it also makes troubleshooting and maintenance tasks easier.

Typically network administrators information technology IT managers and the like collectively referred to as IT management create a management policy that includes the intention and the goal of the IT management. Each individual device or system is responsible for regulating itself to comply with the policy. Currently the IT management may create a policy rule such as activating the screen saver program after a computer is idle for fifteen minutes to be deployed to the computer. The IT management may place the policy in a policy authority of which some embodiments may refer to as a policy authority and the policy authority periodically broadcasts a notification to the computer indicating a policy is to be received. The computer would need to be in an active connection with the policy authority for the policy to be executed on the computer.

In another practice the policy authority may notify a listening component of the computer indicating that a policy is to be downloaded. Once an active connection is made with the policy authority the computer downloads the policy and saves the policy in a memory area of the computer to be executed with or without having an active connection with the policy authority.

While these practices have been sufficient for performing certain tasks such as deployment of policies managing the software configuration there are drawbacks. For example some of the devices to be managed in the network may be complex and may need a customized format or syntax for the policy expression or rules. Therefore a special set of policies may be required.

Another shortfall includes that after the policy is deployed the IT management lacks the ability to determine whether similar policies for the same target device create a conflict. For example suppose an IT management staff A creates a policy for configuring the screen saver program to be activated after 15 minutes while at the same time another IT management staff B attempts to create a different policy for 20 minutes for the screen saver activation time. At the time of deployment the IT management staff A would not know there might be a conflict with the different policy created by the IT management staff B. For the target device the software would just adopt the policy from both and keeps on changing the configuration. Alternatively a hardcoded rule such as based on the time when the rules are received may choose that the policy created by the IT management staff A overrides the policy by the IT management staff B.

Additionally existing policies are imperative in which each of the policies are a set of instructions that the target devices of the policies is supposed to execute. The existing policy deployment framework also lacks a feedback loop wherein the target device of a policy can report its compliance with that policy to the policy authority or the IT management staff.

Embodiments of the invention overcome deficiencies of existing systems or practices by defining a schema for policy rules or executable expressions for managing software configuration. Embodiments of the invention further establish conflict detection of conflict policy rules before the rules are deployed to the target devices. In addition aspects of the invention further receive responses from each of the target devices indicating the status or state of the software after the policy rules are applied.

In addition aspects of the invention provide a declarative paradigm in the policy implementation in which each of the policies having schemas associated therewith describes the valid end state of the target devices and the target devices decide how to reach that state. This declarative feature at least enables the means by which the desired end state is reached to evolve over time without need of changing the expression of the policy and enables expressing the policies in a form that is more readily machine processed so as to enhance the conflict detection resolution capability. Furthermore aspects of the invention provide a feedback loop for the target devices to report their compliance with that policy to the policy authority. Moreover embodiments of the invention enhance extensibility of deployment of policy documents by employing a proxy server may perform tasks such as policy requesting for the target devices.

According to alternative aspects of the invention schemas or document formats define uniform or standard relationships between objects and or rules for configuring software configuration and or settings and or states. Embodiments of the invention also enhance representation of software states before the policy documents are applied.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Appendix A illustrates an exemplary definition for data types applicable in embodiments of the invention.

Appendix B illustrates an exemplary list of operators on scalar types used in the policy rules definition appearing in the policy document according to an embodiment of the invention.

Appendix C illustrates one or more exemplary operators on aggregate types used in the definition of policy rules according to an embodiment of the invention.

Appendix D illustrates an exemplary set of action types to be used in a policy document according to an embodiment of the invention.

Embodiments of the invention establish a platform for efficient management of configurations and states of software installed on one or more target devices available throughout a computer network. Rather than limiting policy applications to patches or to just data stored in a specific location as with current technologies embodiments of the invention provide a common platform or schema to apply the policies throughout the networked environment. Thus many disparate and non cooperating systems are no longer needed to provide a comprehensive management by policy solution. Furthermore aspects of the invention provide conflict resolution and or detection capabilities to resolve conflicts between rules in a policy document and permit adequate report or feedback from the target devices with respect to the status or state of the target devices before and after the policy rules are applied.

Referring now to a block diagram illustrates a system for managing configurations for software using a policy document installed on target devices in a distributed computer network according to an embodiment of the invention. The system includes a policy authority for providing services to one or more target devices . The policy authority may be a computer a server computer a computing device a cluster of computers a cluster of computing devices or a cluster of processing units such as a processing unit or a processor . For the sake of simplicity and without limitation the policy authority illustrated below is embodied in a policy authority. It is to be understood that the policy authority may be implemented or embodied in other managed devices such as target devices without departing from the scope of the invention. The policy authority is also associated with or coupled to a memory area or a data store . For example the data store may include a database a memory storage area and or a collection of memory storage units. In an alternative embodiment the data store is connected by various networking means such as a wired network connection or a wireless network connection. In another example communication media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. Those skilled in the art are familiar with the modulated data signal which has one or more of its characteristics set or changed in such a manner as to encode information in the signal. Combinations of any of the above are also included within the scope of computer readable media.

Aspects of the invention may be illustrated by using as a starting point. illustrates an exemplary graphical screen shot illustrating a policy generation user interface e.g. user interface according to an embodiment of the invention. It is to be understood that the content of the graphical screen shot may be represented by other means such as a script based or text based interface. The graphical screen shot includes a field for administrator identification input. For example an administrator may enter his or her name in the field to identify who is creating the policy document . The graphical screen shot also includes a field for details about policy rules. Using the simplistic example of setting screen saver time period above a user may define a set of policy rules for software. In one embodiment software includes an application such as a screen saver program a collection of applications or components of applications an operating system or the like in the field . The rule may be complex with operators operands and other values for defining a set of policy rules. In an alternative embodiment the user may use one or more defined data types for describing data to be included in the policy document as shown in Appendix A one or more exemplary operators on scalar types used in the policy rules definition appearing in the policy document illustrated in Appendix B one or more exemplary operators on aggregate types used in the definition of policy rules in Appendix C and one or more exemplary action types in Appendix D. In another alternative embodiment the user may compose the rule in XML format or other format or schema such that the policy rules may be executed and evaluated by the policy authority . Other format or schema for creating or defining executable expressions for universal application to various software may be used without departing from the scope of the invention. For example illustrates a relatively simplistic example of the policy document in XML according to an embodiment of the invention.

Referring further to the example of the graphical screen shot also includes a target selection section in which the user may define or select a set of target devices. For example as shown in an existing selection the following target group is available Group 1 Building K Building 15 All and Accounting. Each of the groups defines its membership information of the target devices. For example Group 1 may include target devices associated with the IT management while Accounting group may include all target devices in the accounting department. In an alternative embodiment the graphical screen shot may include additional operations to provide additional information relating to each member in a group or each group. For instance the user may use the right button on a common mouse input device to see additional details about each group or each member within a group. In a further embodiment the graphical screen shot includes a button to enable the user to create additional group for the target devices .

The graphical screen shot also includes one or more delivery options in a field . For example the user may select an immediate or expedited delivery of the policy document to the set of selected target devices or a scheduled delivery of the policy document to the set of selected target devices. In one embodiment when the immediate or expedited delivery option is selected a notification may be issued to the set of selected target devices indicating that the policy document is to be retrieved. In the embodiment when a scheduled delivery is selected the policy authority may provide the policy document via an interface or temporarily store the policy document in a content distribution data store to be retrieved at a scheduled time period and after the conflict resolution. Other delivery options may be provided without departing from the scope of the invention.

The graphical screen shot includes a set of conflict resolution preferences in which the user may set preferences to resolve conflicts between to policy rules. For example suppose an IT management staff member attempts to set a rule to activate the screen saver program after a 15 minute idle time period while another IT management staff member attempts to set a rule to active the screen saver program after 10 minutes of idle time. Under existing technologies these rules are executed as defined without either staff member knowing there was a conflict. Embodiments of the invention enable a federated conflict detection resolution and provide both conflict detection and conflict resolution as illustrated in section . For example illustrates that the policy authority or components of the policy authority detected a conflict between the created policy document and an existing rule Rule 120 created by an administrator with an ID AA on Dec. 14 2006. The user may obtain additional or further information by click a button .

The user may also select one or more exemplary conflict resolution preferences as listed in section overriding the previously created rule yielding to the previously created rule or executing a customized rule. It is to be understood that other options to resolve conflict may be available without departing from the scope of the invention. For example describes other conflict resolution preferences and will be described in further detail below. A box provides an input field for the user to define the customized rule to resolve conflicts. As such aspects of the invention provide automatic conflict detection when policies are assigned to targets and enable administrators to know as soon as possible when their newly assigned policy conflicts with an existing one. In addition administrators will have some flexibility in determining if and how conflicts are automatically resolved by the system or arbitrarily according to the user . Moreover embodiments of the invention may establish an execution order or hierarchy for the one or more policy rules.

It is also to be understood that while the graphical screen shot in illustrates one or more selectable operations for using embodiments of the invention other means of expressing the operations discussed above may be used. For example a free form template may be used in which the operations are to be selected and corresponding tags are automatically inserted in a draft policy document in real time after the operations are selected. In this example the user may select e.g. using an input device any operations such as Select Target and the corresponding tags may be inserted in to a draft policy document in real time. In a further alternative embodiment drop down menus or other dynamic GUI techniques may be employed to further the generation of the policy document according to an embodiment of the invention.

Referring again to and as illustrated above in the policy document is generated in response to instructions and preferences of the user . In one example a collection of the policy document may be provided to the policy authority via automated means such as in a batch. In another embodiment the graphical screen shot shown in is provided by a policy generator which receives instructions or input from the user to generate the policy document. An association component associates a selected set of target devices with the policy document based on the instructions from the user . The association component also associates a set of target information with the policy document . In one embodiment the information about the selected set of target devices include information about the software installed on the target devices and information relating to characteristics of each software of the selected set of target devices. For example the information may include whether the software is based on legacy system or the like.

Once the selected set of target devices is associated with the policy document a rule evaluator compares the set of policy rules included in the policy document with other policy rules for the software with respect to the target devices. For example and again referring to the rule evaluator compares the policy document with existing or pending policy documents yet to be applied to the selected set of target devices. For example the rule evaluator compares the policy document with the existing or pending policy documents created by a second instruction e.g. from a user or pre configured in an operating system policy authority client or other automated sources . In another embodiment a detection component scans the content of the policy documents and compares the policy rules in each of the policy documents to determine whether there is a conflict between two policy rules within the policy document. In another alternative embodiment the policy document may be modified either by the user or by components of the policy authority to resolve the conflict. For example discusses at least one method of resolving conflicts based on the conflict resolution preferences.

Once the policy document is validated the policy document is compared by the rule evaluator the policy document is made available by the policy authority to the selected set of target devices . An interface receives the policy document from the policy authority and the selected set of target devices may retrieve the policy document from the policy authority via the interface or received a notification first before retrieving the policy document . In one embodiment the interface may be stateless such as acting as a gateway between the policy authority and the target devices and does not store the policy document . For example the policy authority includes a notification component for transmitting the notification to the target devices. In yet another embodiment the policy authority may include a proxy server for performing part of the operations for notifying the selected set of target devices to be discussed further in . In yet another alternative embodiment the policy generator the association component the rule evaluator and the detection component are computer executable components embodied in one or more computer readable media.

Referring now to a block diagram illustrates exemplary components associated with the target device according to an embodiment of the invention. The target device includes a collection of local memory area which includes storage area for storing the policy document transmitted from the policy authority cache of the policy document and a data store storing configuration settings e.g. a configuration store . The target device also includes a processor for executing computer executable instructions codes executable expressions or the like. The target device also includes a notification receiver or a listener for periodically monitoring a notification or availability of the policy document from the policy authority. In one example the notification receiver may contact the policy authority at a predetermined time for example every 10 days or the like for the policy document . In the instance described above in when an immediate delivery is requested the notification receiver may monitor the policy authority periodically for the policy document . Once the policy document is available for the target device the policy document is stored locally on the memory area associated with the target device . In one embodiment the target device may establish a first connection with the policy authority when retrieving the policy document from the policy authority and may terminate the first connection after completing the policy document retrieval.

Once the policy document is stored locally on the target device the target device evaluates the policy rules based on the software states of the software . For example software configurations includes configurable parameter such as screen saver timer value or value for enabling word wrap for a text editing software. In another example software configurations state is stored in various forms in various local memory or data storage areas. These settings state may include state that is a configurable parameter or other state like the last window size and position of an application window. For simplicity all forms of such storage are depicted as a single software configuration store e.g. memory area . As such the target device reviews or examines the policy rules with the current software state to determine whether the software complies with the rules defined in the policy document . In an alternative embodiment one or more settings providers to be discussed in further details below are used to retrieve and set current software state from the memory area . 

An alternative embodiment of the invention includes an enactment engine for applying the policy rules included in the policy document to the software on the target device . For example the enactment engine includes one or more computer executable components for processing the policy rules. In one example illustrates an exemplary document generated on a managed target device as part of the enactment of policies by the enactment engine on the target device according to an embodiment of the invention. In another embodiment a management interface exposes or provides an application programming interface API for the enactment engine to be used by the user to create locally policy documents for the managed target device. As such the target device may receive the policies from the policy authority or the target device may receive the policies from the user of the target device . All policies retrieved are stored in the memory area regardless of the source.

In a further embodiment the target device also includes a reporter for reporting to the policy authority or the proxy server information associated with the status of the implementation or application of policy rules included in the policy document . Embodiments of the invention overcome shortcomings of existing technologies by establishing a common reporting system enabling an easy auditing of the compliance status e.g. via a change notifier of the software installed on the target device within a distributed computer network.

Alternatively embodiments of the invention enable the target device to include at least one settings provider for properly applying the software configurations to the software . For example the settings provider reviews the policy rules in the policy document and determines where the settings for the software are located. As such the settings provider determines in order to make the software comply with the policy rules in the policy document which part of the software is to be configured. The settings provider next prepares the determined information such as setting parameter locations and convert the information to a document with the software configuration values in XML format or other executable expression formats. In another embodiment the settings providers may act as an interface or intermediary between the enactment engine and the memory area and may translate data in the memory area to and from the common form according to the schema of the invention.

In another embodiment the target device may include a mobile device or a portable not shown and the proxy server in may perform portions or parts of the operations described above in . For example due to the processing and or memory limitation of the portable or mobile device the proxy server may request the policy document for the portable or mobile device. The proxy server retrieves the policy document on behalf of the portable or mobile device and the enactment engine on the portable or mobile device executes the policy rules. The reporter reports the status or state of the application to the policy authority . In yet another aspect of the invention the target device may include a client requestor for actively requesting the policy document from the policy authority .

In one other aspect of the invention the reporter the notification receiver the enactment engine the management the setting providers the change notifier or the client requester may be embodied in one or more computer readable media as computer executable components coupled to the target device . In a further embodiment the policy authority may be physically embodied with the client on the same hardware or may be co resident on the same hardware with the client as illustrated by the broken lines in .

In a further embodiment if the device uses a different data store for storing policy documents and or policy rules the policy authority may provide codes computer executable instructions or other executable expressions as a configuration provider e.g. configuration providers . In addition the policy authority in this situation also provides a schema to describe its configuration possibilities. Based on this setup the policy authority may interact with the policy aware software or the software may interact with a backing store to identify or extract effective values within the policy rules policy documents.

In an alternative embodiment embodiments of the invention provide effective constraints features in which the software wishes to identify not just a single value but also the rules that restrict what the values can be. In one example the operations described in may be embodied in an API for the policy aware application e.g. software . For instance the software receives a request from the device to configure the application such as through the policy document . The API e.g. the management interface identifies a constraint included in the received request. The identified constraints including values intending to modify software state of the application. For example the identified constraints intend modify the screen saver timer to 300 minutes. The API provides from the application the configuration constraints in response to the identification and the configuration constraint identifies an effective constraint for modifying the application state of the application. For example the effective constraint maybe 30 minutes because the effective may provide a maximum allowable value for configuring software configuration. In another embodiment the effective constraint may be returned as a range of value via a user interface e.g. interface . For example the effective constraint may specify that the allowable value for configuring the screen saver function may be an integer value between 0 and 30.

In one embodiment the software may display its own configuration UI and wish to take policy restrictions into account when generating that UI. In this example the software may receive input from the user specifying an additional policy rule and the additional policy rule includes another constraint to be identified. In yet another alternative embodiment the API may merge additional policy rule with the policy rule and the constraints in the additional policy rule and the policy rule are identified. In yet a further embodiment the API may replace or modify the identified constraint as a function of the effective constraint.

In another alternative embodiment the received request is transmitted to a translator at and the translator generates an XML based custom grammar from the received request. For example the software may only process expressions written in a specific programming format and the translator may modify the request to form an XML based custom grammar to be returned to the software . For example the policy document generated by the user is applied to the policy aware software in XML format which includes XPath expressions.

Referring now to an exemplary flow chart illustrates operation of managing configurations for software installed on target devices according to an embodiment of the invention. For example the policy authority and or various components e.g. policy generator association component rule evaluator detection component and or notification component perform one of the operations described in . At a first policy document is created. The first policy document e.g. the policy document includes a set of policy rules defining the desired configuration of one or more pieces of software on the target device. The set of target information is associated with the first policy document and the set of target information corresponds to a selected set of the target devices and includes information relating to characteristics of each software of the selected set of target devices at . At the set of policy rules included in the first policy document is compared with other policy rules for the software. For example if it is determined at that there is a conflict between the first policy document and another policy document the first policy document is modified as a function of the comparison and conflict resolution preferences at .

In another embodiment other preferences or options such as altering the target association of one of the documents at or ignoring or deactivating one of the conflicting documents at may be chosen for resolving the conflict. The conflict resolution preferences include factors to determine which policy document to be provided to the software. The modified policy document is provided to the selected set of target devices at . If on the other hand there is no conflict as determined at the first policy document is provided for deployment to the selected set of the target devices.

Referring now to an exemplary flow chart illustrates operations of applying software configurations to software installed on a device according to an embodiment of the invention. For example the receiver the reporter the notification receiver the enactment engine the settings provider and the management interface perform at least one or more of the operations described in . In one embodiment where the policy authority and the target device are connected or coupled via a network at a first connection is established with the policy authority e.g. policy authority . The connection may be instant such as via the network through an interface component e.g. interface .

In an alternative embodiment where the policy authority and the target device are embodied in one single unit one or more policy documents are stored in a computer readable medium e.g. a memory area and are available to the target device. In a further alternative embodiment a package or a collection of all policy documents associated with a target device is stored on a computer readable medium e.g. a CD ROM or a DVD ROM and is made available or accessible to the target device when the computer readable medium is next delivered to the target device.

At the policy authority specifies a target device or a group of target devices to receive a policy document. For example as illustrated above in the user may provide instructions to specify a target device or a group of target devices to receive the policy document. For each specified group the policy authority enumerates or identifies the target devices belonging to the group at . At the policy authority enumerates or identifies the set of policy rules assigned to the target devices for each group. At the policy rules are aggregated into one or more plurality of policy documents.

Under the instant connection scenario the device e.g. target device receives the policy document from the policy authority through the first connection via the network at In one embodiment the receiver receives the policy document for the target device. In another embodiment the receiver may be part of the interface . In another embodiment the policy document is stored on a computer readable medium and the target device receives the policy document through the computer readable medium.

At the policy document is stored in a data store e.g. data store associated with the device. The set of policy rules specified in the policy document is applied to the software e.g. software installed on the device at . For example suppose the set of policy rules define the length of time for the screen saver the policy rules are to be applied to the software. A reporter e.g. reporter provides feedback to the policy authority indicating whether the set of policy rules is applied successfully to the software at .

In the alternative embodiment where a delayed connection is employed the feedback is stored in another computer readable medium and the computer readable medium is sent e.g. via mail delivery to the IT management operating managing the policy authority .

In an alternative embodiment the interface terminates the first connection with the policy authority after retrieving the policy document from the policy authority. In yet another embodiment the management interface which provides an API to identify parameters and functions of the software provides additional UI to a user of the device for additional configuration or modifications. For example suppose an administrator is stationed at the device and wishes to troubleshoot the device . With the management interface the administrator may diagnose or troubleshoot the problems and review how the software configurations are applied to the software.

Referring now to a data structure stored on a computer readable medium or a computer readable storage medium for constructing expressions representing software configurations to be applied to software. In one embodiment the expressions may be XML expressions. The data structure includes a first data field including data identifying a name of software setting for the application. For example the name of the software configuration may be screen saver toolbar location or the like. A second data field includes data representing the assertion portion of a rule e.g. rule included in the policy document about the configuration data identified in the first data field . In one embodiment Appendices B and C illustrate exemplary rule assertion operators both in simple form and aggregated form may be used according to an embodiment of the invention. In one embodiment Appendix D illustrate exemplary rule actions both in simple form and aggregated form that may be used according to an embodiment of the invention.

In an alternative embodiment the second data field includes data representing an operator included in the policy rule represented in the data structure . In a further embodiment the second data field may include data representing a translated expression from the assertion portion of the rule included in the second data field to a custom grammar. In one example the translated expression may be in the XPath language. The data structure also includes a third data field storing data representing an action portion of a rule. For example a few types of actions as shown in appendix D is described below. In the example 10 in the third data field illustrates replace value e.g. set value to 10 when the assertion fails. 

In yet another alternative embodiment the data structure may include one or more data fields for declaration for parametric metadata. For example the data structure may include a reference to a separate data structure or file including metadata or annotation to supplement or note the data structure . For example an IT management staff X may generate a policy document A represented by the data structure to be applied to one or more target devices while another IT management staff Y may create a separate file annotating or including metadata about the policy document A. By annotating the policy document A in the separate file the IT management staff Y may define appropriate or customized annotations or descriptions such as metadata without altering or modifying the original policy document A.

In one embodiment the data structure may include data about the types of policy metadata in a fourth data field . For example the fourth data field may include a precondition rule in effect rule. The metadata in the fourth data field may describe or identify conditions that must be true before the assertions on a policy are evaluated. Examples of the metadata of such rules may be SQL server must be installed or Free disk space must be greater than 100 MB or It must be a weekday between 6 pm and 6 am or a weekend. Other types of metadata may be used or described in the fourth data field of the data structure without departing from the scope of the invention.

In one embodiment the metadata in the fourth data field may include data or information other than actions associated with the policy rule. In yet a further embodiment a feedback different from the feedback provided by the reporter may be sent to the policy authority when the pre conditions fail.

In operation a computer such as the policy authority executes computer executable instructions such as those illustrated in the figures e.g. may be employed to implement aspects of the invention.

The order of execution or performance of the operations in embodiments of the invention illustrated and described herein is not essential unless otherwise specified. That is the operations may be performed in any order unless otherwise specified and embodiments of the invention may include additional or fewer operations than those disclosed herein. For example it is contemplated that executing or performing a particular operation before contemporaneously with or after another operation is within the scope of aspects of the invention.

Embodiments of the invention may be implemented with computer executable instructions. The computer executable instructions may be organized into one or more computer executable components or modules. Aspects of the invention may be implemented with any number and organization of such components or modules. For example aspects of the invention are not limited to the specific computer executable instructions or the specific components or modules illustrated in the figures and described herein. Other embodiments of the invention may include different computer executable instructions or components having more or less functionality than illustrated and described herein.

When introducing elements of aspects of the invention or the embodiments thereof the articles a an the and said are intended to mean that there are one or more of the elements. The terms comprising including and having are intended to be inclusive and mean that there may be additional elements other than the listed elements.

Having described aspects of the invention in detail it will be apparent that modifications and variations are possible without departing from the scope of aspects of the invention as defined in the appended claims. As various changes could be made in the above constructions products and methods without departing from the scope of aspects of the invention it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.

In the below table P represents the value of a property variable a SettingValue v represents a scalar literal value and V represents an aggregate literal value 

3. Expressions are evaluated left to right and in an alternative embodiment some or all of expressions may not be evaluated in a policy document.

4. IsOneOf may allow restriction of values to a degree even finer than possible by that of an enumeration. For example the developer may define the enumeration as Low Medium High Very High but the allowed values per the admin intent are Low and Medium. Therefore the administrator s policy is expressed as an assertion like P.IsOneOf Low Medium. Note that IsOneOf may be used with other scalar types than enums. For instance the developer may say that the setting is an int between 0 and 100 but the admin can use IsOneOf to restrict the setting to say 10 42 50 and 85.

5. In one alternative embodiment the conflict detection may be employed as a static analysis of assertion expressions.

6. An aggregate Matches operator may be defined for aggregates of scalar string types by saying that all elements of the aggregate must match the pattern.

In an alternative embodiment exemplary operators on aggregate types used in the definition of policy rules may be represented as below 

