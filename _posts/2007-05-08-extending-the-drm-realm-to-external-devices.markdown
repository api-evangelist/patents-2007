---

title: Extending the DRM realm to external devices
abstract: Disclosed is a method and a system for rendering content on external devices securely. The method comprises setting up a communication channel between a proxy rendering server of a mobile device and an external rendering server of an external device, authenticating at least the external rendering server and upon successful authentication transferring a key from the proxy rendering server to the external rendering server, transferring the content encrypted with the transferred key from the proxy rendering server to the external rendering server for rendering the content, wherein the rendering of the content is performed in one of two modes, either in a preprocessing mode or in a non-preprocessing mode, and wherein a DRM agent is only present in the mobile device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08166300&OS=08166300&RS=08166300
owner: Telefonaktiebolaget LM Ericsson (publ)
number: 08166300
owner_city: Stockholm
owner_country: SE
publication_date: 20070508
---
This application claims the benefit of U.S. Provisional Application No. 60 747 461 filed May 17 2006 the disclosure of which is fully incorporated herein by reference.

The present invention relates to an extension of the DRM realm to include external devices. More particularly the invention relates to a method for rendering content on external devices securely.

With increasing functionality and capability of mobile devices rich media content of high quality and value will also become available. Typically content such as applications or multimedia can be presented executed or even be used to customize the end user experience of a device and its applications.

With an expanding set of media formats content can be combined into a single presentation e.g. using a video projector or be deployed simultaneously over multiple media interfaces such as audio video and whiteboard in a video conference call.

It is also possible that more complex usage patterns will start to emerge and content be consumed in new ways e.g. using existing content rendering tools but with upgraded user interface UI hardware or the entire media stream be directed to an external device to render the content on a large display projector printing device audio device monitor computer workstation or any other presentation device.

An external device could be any external device including rendering capabilities with a digital link to a mobile device for receiving content in a digital format and for rendering the content in a non digital or analogue format e.g. multimedia such as images video audio etc. Content can be defined as any data item in a digital format that can be rendered i.e. transformed to and or presented in a non digital or analogue format.

For content protected with Digital Rights Management DRM this requires that the scope for where the content should be protected according to the DRM rules hereinafter denoted as the DRM realm need to be extended to devices with rendering capabilities external to a mobile device.

To securely provision and manage the distribution and usage of valuable content it is common to employ a DRM solution e.g. as defined by the OMA DRM standards see e.g. OMA DRM v2. With DRM the device implementation handling the presentation needs to be trusted and be certified to comply with a rule set defined by a DRM rights object i.e. the collection of permissions and other attributes which are linked to protected content. Protected content can be described as digital work that is consumed according to a set of permissions in a rights object and wherein permissions are the actual usage or activity allowed over protected content.

DRM has two main objectives to prevent unauthorized access to the content and to control the usage of the content. These objectives are commonly defined to be valid to the point where the content is transformed from its digital representation to a non digital or analogue representation e.g. images on a screen or music from a loud speaker etc.

In current implementations of DRM a DRM agent the entity in the mobile device that manages permissions for protected content in the mobile device i.e. the software entity implementing and controlling that the DRM rules are fulfilled and Rendering Servers i.e. the software entities transforming the digital representation to a non digital or analogue format are implemented as one integral part in view of its physical design as well as its software control system.

Therefore the DRM realm needs to be extended to also include external devices comprising rendering servers and thereby rendering capabilities hereinafter denoted as external rendering servers which are not part of the same physical device or software control system as the entity where the DRM agent resides e.g. an entity such as a mobile device such as a mobile telephone or communicator i.e. electronic organizer smart phone personal digital assistant PDA handheld computer etc. The mobile device can be described as an entity hardware software or a combination thereof within a user equipment that implements a DRM agent.

As existing DRM solutions only work end to end assuming a mobile device is the final end point there is consequently no provisioning for the fact that the mobile device could be upgraded with new hardware not from the original device manufacturer or the DRM protected content being exposed in an un protected manor while being in transit between a mobile device and an external device such as a presentation device.

There is also nothing that prevents an adversary peripheral device to expose itself as e.g. a harmless printing device while hiding an elaborate solution for reverse engineering content into a content format that could be redistributed strictly against the intention of the DRM protected realm.

US 2004 0158712 discloses a system and method for managing non free multimedia contents in an intranet. The system includes proxy managers provided in a server of the intranet for example a media center or set top box and clients for example DRM smart clients in wired wireless digital information appliances such as Digital TVs or PDAs. Various kinds of encrypted multimedia contents and license information are converted by the proxy managers into multimedia contents and license information having a format executable by the DRM smart clients.

Even though the above prior art method provides a method for managing non free multimedia content in an intranet the above method still requires the appliances to include DRM smart clients. Hence since the above method still requires the appliances to include DRM smart clients a high DRM complexity is yielded in the appliances. Therefore it remains a problem to provide a method for rendering content on an external device with limited DRM complexity and capabilities such as a printing device or a video projector that solves the above problems.

In particular application of the above prior art method would require the proxy manager to receive both protected content and license information from a content provider which it converts and transfers to the client and wherein the client subsequently validates the license information requiring a DRM agent in the client. Furthermore the above prior art method discloses that no license validation is performed before the content is further converted and transferred to the client.

It is a problem of the above prior art system that the complexity is inevitably increased by the extension of the DRM realm more specifically the complexity is increased by the need to obtain information regarding e.g. license credentials information and or permissions associated to the content and or which particular DRM scheme that is used in the mobile device and further the complexity is also increased by the DRM functionality which is required in the external device.

The method described herein relates to firstly protecting the communication channel secondly authenticating the rendering servers and thirdly limiting the complexity in the external devices.

In one embodiment the above and other problems are solved by a method for rendering content comprising setting up a communication channel between a proxy rendering server of a mobile device and an external rendering server of an external device authenticating at least the external rendering server and upon successful authentication transferring a key from the proxy rendering server to the external rendering server transferring the content encrypted with the transferred key from the proxy rendering server to the external rendering server for rendering the content wherein the rendering of the content is performed in one of two modes either in a preprocessing mode for performing processing of the content by the mobile device prior to transferring the content to the external rendering server or in a non preprocessing mode for performing processing of the content by the external device subsequent to receiving the content and wherein a DRM agent for digitally managing permissions associated with the content is only present in the mobile device.

In another embodiment the above and other problems are solved by a system adapted for rendering content the system comprising a mobile device including application software a device rendering server a proxy rendering server a Digital Rights Management DRM Agent wherein the application software is adapted to direct a request for rendering content to the device rendering server or the proxy rendering server wherein the DRM agent is adapted to verify license credentials and an external device including an external rendering server for rendering the content wherein the system is adapted to perform the rendering of the content in one of two modes either in a preprocessing mode for performing processing of the content by the mobile device prior to transferring the content to the external rendering server or in a non preprocessing mode for performing processing of the content by the external device subsequent to receiving the content and wherein the DRM agent for digitally managing credentials associated with the content is only present in the mobile device.

In a further embodiment the above and other problems are solved by an electronic device for facilitating rendering of content in an external device the electronic device comprising application software for generating a request for rendering content a rendering server for receiving the request for rendering content a Digital Rights Management Agent DRM Agent for verifying license credentials a proxy rendering server for setting up a communication channel with the external device and transferring content wherein the electronic device is adapted to facilitate the content rendering in one of two modes either in a preprocessing mode for performing processing of content by the electronic device prior to transferring the content to the external rendering server or in a non preprocessing mode for performing processing of content by the external device subsequent to receiving the content and wherein the DRM agent for digitally managing credentials associated with the content is only present in the electronic device.

Two different modes a preprocessing mode and a non preprocessing mode can be distinguished in the rendering operations. An advantage of having a preprocessing mode is that the mobile device then can alleviate the processing requirements on the external rendering server by taking care of possible processing tasks. Further in the preprocessing mode the proxy rendering server is involved in manipulations of the data manipulations such as modification of a format or filtering of content or extension of content by adding rendering parameters or synchronisation of content according to a presentation time followed by re encryption and transfer to the external rendering server. However in the non preprocessing mode the proxy rendering server transfers the data without any other data manipulations. An advantage of manipulating the data in the preprocessing mode is that the external device can remain agnostic of the particular DRM scheme used in the mobile device and thereby reduce the DRM complexity in the external device. Another advantage of manipulating the data in the preprocessing mode is that the mobile device prepares the content for rendering in the external device which decreases the overall complexity and processing requirements in the external device.

Moreover switching or selection between the two different modes may be performed by means of a capability discovery procedure e.g. when an external device is connected to a mobile device wherein the capability discovery procedure indicates which mode to use for the external device or by means of a policy stored in the mobile device or by an active decision by an end user. An advantage of implementing and switching or selecting between these two modes is that the method provides support for most formats and external devices. Further the combination of the two modes provides flexibility and optimization of processing.

In some embodiments the preprocessing and the non preprocessing modes further comprise the steps of authenticating at least the external rendering server via an authentication protocol and in some embodiments a mutual authentication of the proxy rendering server and the external rendering server is performed and upon successful authentication transferring a key from the proxy rendering server to the external rendering server via a key provisioning protocol. It is an advantage of the method described herein that an external device can dispense with a DRM agent whereby the external device instead can benefit from the functions and capabilities of the DRM agent in the mobile device. Another advantage of this method is the enabling of the key exchange via the key provisioning protocol which is a secure exchange that minimizes the risk for intercepting any keys at the exchange.

In some embodiments the authentication and key provisioning protocols can be preceded by a step of sending rendering parameters or by a cipher suite negotiation protocol. The rendering parameters are chosen from a group comprising encryption cipher encryption key initialization vector IV padding scheme offset to byte in content file where decryption should start and the size of the encrypted content. The cipher suite protocol comprises the steps of the external rendering server sending a cipher suite list to the proxy rendering server and in response the proxy rendering server responds by sending a random number and the chosen cipher suite to the external rendering server and wherein the external rendering server verifies the chosen cipher suite and upon successful verification accepting a commonly negotiated cipher suite. An advantage of sending rendering parameters and running the cipher suite negotiation protocol is the limitation of DRM complexity in the external device and again the external device can remain agnostic of the particular DRM scheme used in the mobile device.

Moreover according to the method described herein there is no need to forward DRM rights i.e. license information to the external device. Hence an advantage of the method is that the overall complexity processing power and cost of the external device is reduced due to the limited DRM functionality and DRM complexity which is needed.

The invention will now be described more in detail with the aid of preferred embodiments in connection with the enclosed drawings.

To facilitate an understanding of the following embodiments many aspects are described in terms of sequences of actions that can be performed by elements of a computer system. For example it will be recognized that in each of the embodiments the various actions can be performed by specialized circuits or circuitry e.g. discrete logic gates interconnected to perform a specialized function by program instructions being executed by one or more processors or by a combination of both.

Moreover the sequences of actions can be embodied in any computer readable medium for use by or in connection with an instruction execution system apparatus or device such as a computer based system processor containing system or other system that can fetch the instructions from a computer readable medium and execute the instructions.

As used herein a computer readable medium can be any means that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device. The computer readable medium can be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or propagation medium. More specific examples a non exhaustive list of the computer readable medium can include the following an electrical connection having one or more wires a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory and an optical fiber.

From this stage in the rendering two different modes can be distinguished in the rendering operations involving a Proxy RS and Ext RS the preprocessing mode and the non preprocessing mode. An advantage of having a preprocessing mode is that the mobile device then can alleviate the processing requirements on the Ext RS by taking care of possible processing tasks. In the preprocessing mode the Proxy RS is involved in manipulations of the decrypted data stream such as modification of a format or filtering of the content or extension of the content by adding rendering parameters or synchronisation of the content according to a presentation time followed by re encryption and transfer to the Ext RS while in the non preprocessing mode the Proxy RS transfers the encrypted data stream without any other data manipulations.

Switching or selection between the two modes the preprocessing mode and the non preprocessing mode can occur at a capability discovery procedure e.g. when an external device is connecting to a mobile device wherein the capability discovery procedure indicates which mode to use for the external device . The mode selection may also be done as a result of a global device setting set up in advance or defined at the time of connecting or use of the external device . Further what mode to use for an external device may also be selected based on a policy stored in the mobile device or though an active decision by an end user.

The modes are described in further detail below. illustrates a flowchart of an embodiment in the preprocessing mode After completing a successful file open request indicating that a valid license was available for the protected content the Proxy RS in step then sets up a communication channel with the Ext RS and continues in step with carrying out an authentication protocol together with a key provisioning protocol to securely transfer a temporary key. The content data transfer from the mobile device to the Ext RS then consists of the following steps that in step the Proxy RS accesses decrypted data from the DRM agent in step preprocesses the decrypted data and in step re encrypts the decrypted data before in step transferring it to the Ext RS . The flow control for these operations can have either the Ext RS as responsible via data pull or the Proxy RS as responsible via data push. Depending on which is the case the request methods involved in the interface between the Ext RS and the Proxy RS may have different designs which is well understood by the skilled person in the art.

The authentication and key negotiation between the Proxy RS and the Ext RS is similar for both the preprocessing and non preprocessing modes. In both modes the Proxy RS authenticates the Ext RS . In one embodiment the Ext RS is provisioned with a private public key pair that is used both for authentication and key provisioning. For example the key pair can be stored in the Ext RS itself or in a smart card attached to the Ext RS . The public key is certified by a certificate authority CA trusted by the DRM device . For example a Rights Issuer RI or a Content Issuer CI might act as the CA and the CA is typically the same as who issued certificates for the DRM device RI and CI if such certificates are part of the DRM solution e.g. according to OMA DRM v2. The certificate is stored together with the private key in the Ext RS or in the smart card attached to Ext RS .

Depending on the mode if it is non preprocessing or preprocessing mode the encryption key used to protect the content when transferred from the Proxy RS to the Ext RS is either the original content encryption key CEK or chosen at random by the Proxy RS .

The use of random numbers provides a protection against replay attacks. The random number R is used as a challenge to ensure that the device really has the private key corresponding to the certificate. The random number R provides protection against e.g. a hacker that has recorded all traffic between the Proxy RS and Ext RS cannot just send the messages all over again to the Ext RS . Since the Ext RS chooses R at random every time such an attack will be discovered in step 5 where the decrypted random value will not be equal to the new R.

Depending on the mode if it is non preprocessing or preprocessing mode the encryption key used to protect the content when transferred from the Proxy RS to the Ext RS is either the original content encryption key CEK or chosen at random by the Proxy RS .

An example of an algorithm to be used for such authentication and key provisioning in the protocol above is the RSA algorithm with SHA 1 hashing. This algorithm is already used in OMA DRM v2.

Further another example of authentication and key provisioning could be realized with a shared secret i.e. a symmetrical key between the Proxy RS and the Ext RS .

With the above method both parties are authenticated and share the key K with which one can decrypt DRM content which has been transferred.

Which example of algorithm that is used depends greatly on the computational capacity of the Ext RS e.g. asymmetrical encryption is more computationally demanding than symmetrical encryption.

After the authentication and key provisioning performed as described above the Proxy RS sends the content in encrypted form to the Ext RS . In preprocessing mode the Proxy RS obtains decrypted DRM data via the DRM agent as a device RS . The Proxy RS then processes the content and encrypts the processed content using the negotiated encryption key K. In non preprocessing mode the Proxy RS reads originally encrypted DRM data directly from the internal file system and sends it to the Ext RS . The Ext RS decrypts the data using the negotiated key K. For example the AES algorithm which is also used in OMA DRM v2 can be used as the encryption algorithm.

In order to provide full transparency for the Ext RS regarding which DRM solution that is used in the mobile device certain information i.e. rendering parameters may need to be provided to the Ext RS . Information such as encryption cipher used encryption key initialization vector IV padding scheme offset to byte in content file where decryption should start and the size of the encrypted content etc.

The needed information is provided by means of a protocol where the encryption cipher is negotiated i.e. if the Ext RS does not support the initially used encryption cipher the content is decrypted and re encrypted by the DRM agent to the encryption cipher that was negotiated to in the pre processing mode.

Further the IV is often transmitted as part of the content file normally placed immediately in front of the start of the encrypted content. The IV could also be clarified and or defined in the protocol.

A DRM protected file normally includes some content metadata and other DRM specific parameters e.g. the content ID which is used to link it to license s . This data is often placed in front of the encrypted content and with an offset parameter provided hence the Ext RS does not need to have knowledge of the location and size of this other data. The size of the encrypted content could also be provided as it is not always the case that the encrypted data extends to the end of the file i.e. there may be other data after the end of the encrypted media data.

In the pre processing mode the DRM specific parts are automatically separated out as the Proxy RS is only receiving the decrypted content data from the device DRM agent . However in the non preprocessing mode this data is included in the file transmitted to the Ext RS . Further for the non preprocessing mode there is also a possibility for the Proxy RS to remove any non essential data in the file to be transmitted.

In the protocol the Ext RS states which cipher suites CS including e.g. signature algorithm and crypto algorithm which the Ext RS supports. The Proxy RS then chooses from the list provided by the Ext RS the CS to be used. The protocol comprises the following preceding steps to the authentication and key provisioning steps.

Step Optionally the Proxy RS sends an initial message to the Ext RS in order to initiate the protocol. This step could be omitted and the flow could instead start at step .

Step In addition to random number R the Proxy RS sends the chosen CS which is supported by the DRM agent to the Ext RS .

Step If the verification in step is successful the Ext RS responds with its certificate random number R and a signature. The signature is over the concatenation of R R and chosen CS.

Step The Proxy RS then verifies the signature and hence both parties have negotiated a CS and no man in the middle can manipulate the parties to e.g. use different algorithms.

The subsequent steps in the authentication and key provisioning procedures are the same as for the other embodiments.

The Ext RS needs to be trusted that it will not leak the private key encryption key K or DRM content. Therefore only Ext RS from a trusted manufacturer will be issued certificates.

Above described solution fits well into the architecture of for example OMA DRM v2 where all building blocks are already there. It can be built upon standard cryptography techniques using for example the well known RSA algorithm.

Further the invention provides for different media types formats and use cases a seamless extension of the DRM realm to devices external to the DRM agent device without requiring that a complete DRM agent is implemented in these external devices . For example all knowledge and handling of DRM licenses is kept within the DRM agent .

It will be appreciated by those of ordinary skill in the art that the invention can be embodied in various specific forms without departing from its essential characteristics. The disclosed embodiments are considered in all respects to be illustrative and not restrictive. The scope of the invention is indicated by the appended claims rather than the foregoing description and all changes that come within the meaning and range of equivalents thereof are intended to be embraced thereby.

It should be emphasized that the terms comprises and comprising when used in this description and claims are taken to specify the presence of stated features steps or components but the use of these terms does not preclude the presence or addition of one or more other features steps components or groups thereof.

