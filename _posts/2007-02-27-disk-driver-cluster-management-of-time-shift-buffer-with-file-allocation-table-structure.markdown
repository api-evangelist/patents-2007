---

title: Disk driver cluster management of time shift buffer with file allocation table structure
abstract: A file allocation system for a hard disk drive includes a memory with driver logic and a processor configured with the driver logic to receive a request to allocate hard disk space of a defined size for a buffer file. In some embodiments, the processor is configured with the driver logic to allocate clusters for the buffer file from a plurality of clusters on the hard disk, wherein the clusters for the buffer file store media content instances. In some embodiments, the processor is configured with the driver logic to designate a portion of the clusters of the buffer file for at least one non-buffer file such that the non-buffer file is permitted to share the portion of the clusters of the buffer file with the buffer file.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07779181&OS=07779181&RS=07779181
owner: Scientific-Atlanta, LLC
number: 07779181
owner_city: Lawrenceville
owner_country: US
publication_date: 20070227
---
This application is a continuation of U.S. utility application entitled Disk Driver Cluster Management of Time Shift Buffer with File Allocation Table Structure having Ser. No. 10 005 628 filed Dec. 05 2001 now U.S. Pat. No. 7 194 563 which is entirely incorporated herein by reference.

The present invention is generally related to television systems and more particularly is related to a system and method for maintaining storage for media content.

With recent advances in digital transmission technology subscriber television systems are now capable of providing much more than the traditional analog broadcast video. In implementing enhanced programming the home communication terminal device HCT otherwise known as the set top box has become an important computing device for accessing media content services and media content within those services and navigating a user through a maze of available services. In addition to supporting traditional analog broadcast video functionality digital HCTs or DHCTs now also support an increasing number of two way digital services such as video on demand and personal video recording.

Typically a DHCT is connected to a cable or satellite or generally a subscriber television system and includes hardware and software necessary to provide the functionality of the digital television system at a user site. Typically some of the software executed by a DHCT is downloaded and or updated via the subscriber television system. Each DHCT also typically includes a processor communication components and memory and is connected to a television or other display device such as a personal computer. While many conventional DHCTs are stand alone devices that are externally connected to a television a DHCT and or its functionality may be integrated into a television or personal computer or even an audio device such as a programmable radio as will be appreciated by those of ordinary skill in the art.

DHCTs are typically capable of providing users with a very large number and variety of media content choices. As the number of available media content choices increases viewing conflicts arise whereby the user must choose between watching two or more media content instances e.g. discrete individual instances of media content such as for a non limiting example a particular television show or program all of which the user would like to view. Further because of the large number of viewing choices the user may miss viewing opportunities. Storage devices coupled to the DHCT help alleviate this problem by providing a mechanism to store media content for later retrieval for viewing. However media content storage systems are often inefficient. Therefore there exists a need to efficiently store media content

Thus a heretofore unaddressed need exists in the industry to address the aforementioned deficiencies and inadequacies.

The preferred embodiments of the invention now will be described more fully hereinafter with reference to the accompanying drawings in which preferred embodiments of the invention are shown. The invention may however be embodied in many different forms and should not be construed as limited to the embodiments set forth herein rather these embodiments are provided so that this disclosure will be thorough and complete and will fully convey the scope of the invention to those having ordinary skill in the art. Furthermore all examples given herein are intended to be non limiting and among others.

One embodiment of the present invention is generally implemented as part of a subscriber television system STS which includes digital broadband delivery systems DBDS and cable television systems CTS . As a non limiting example a subscriber television system STS and its operation will be described initially with the understanding that other conventional data delivery systems are within the scope of the preferred embodiments of the invention. shows a block diagram view of a STS which is generally a high quality reliable and integrated network system that is typically capable of delivering video audio voice and data services to digital home communication terminals DHCTs . Although depicts a high level view of a STS it should be appreciated that a plurality of subscriber television systems can tie together a plurality of regional networks into an integrated global network so that DHCT users can receive media content provided from anywhere in the world.

Further it will be appreciated that the STS shown in is merely illustrative and should not be construed as implying any limitations upon the scope of the preferred embodiments of the present invention. For instance subscriber television systems also included within the scope of the preferred embodiments of the invention include systems not utilizing physical structured cabling for transmission such as but not limited to satellite systems. Further transmission media included within the scope of the preferred embodiments of the invention include but are not limited to HFC optical satellite RF FM and microwave. Further data provided from the headend to the DHCTs and programming necessary to perform the functions discussed below will be understood to be present in the STS in accordance with the description below.

The STS typically delivers broadcast video signals as digitally formatted signals in addition to delivering traditional broadcast analog video signals. Furthermore the system can typically support one way broadcast services as well as both one way data services and two way media content and data services. The two way operation of the network typically allows for user interactivity with services such as Pay Per View programming Near Video On Demand NVOD programming according to any of several known NVOD implementation methods Video on Demand VOD programming according to any of several VOD implementation methods and interactive applications such as Internet connections.

The STS also provides the interfaces network control transport control session control and servers to access media content from media content services and distributes media content to DHCT users. As shown in a typical STS comprises a headend hubs an HFC access network and DHCTs . It should be appreciated that although a single component e.g. a headend is illustrated in a STS can feature a plurality of any one of the illustrated components or may be configured with alternative embodiments for any one of the individual components or with yet other additional components not enumerated above.

Media content provided by one or more content providers not shown is communicated by the content providers to one or more headends . From those headends the media content is then communicated over a communications network that includes a plurality of HFC access networks only one HFC access network is illustrated . The HFC access network typically comprises a plurality of HFC nodes each of which may serve a local geographical area. The hub connects to the HFC node through a fiber portion of the HFC access network . The HFC node is connected to a tap which in one embodiment is connected to a network interface unit NIU which is connected to a digital home communication terminal DHCT . In other embodiments the tap is connected directly to a digital home communication terminal DHCT . The NIU when implemented is normally located at the property of a subscriber and provides a transparent interface between the HFC node and the user property internal wiring. Coaxial cables are typically used to couple nodes taps and NIUs because the electrical signals can be easily repeated with radio frequency RF amplifiers.

As the high level operations of many of the functions of a STS are well known to those of ordinary skill in the art further high level description of the overall STS of will not be contained herein

As depicted in the STS can simultaneously support a number of transmission signal types transmission rates and modulation formats. The ability to carry analog and digital signals over a large bandwidth are characteristics of a Hybrid Fiber Coax HFC Network typically employed in a STS as in the STS of . As will be appreciated by those of ordinary skill in the art analog and digital signals in HFC networks can be multiplexed using Frequency Division Multiplexing FDM which enables many different types of signals to be transmitted over the STS to the DHCT . Typically a STS using HFC supports downstream i.e. in the direction from the headend to the DHCT frequencies from 50 MHz to 870 MHz whereas upstream frequencies i.e. in the direction from the DHCT to higher levels of the system are in the 5 MHz to 42 MHz band. Generally the radio frequency RF bandwidth spacing for analog and digital services is 6 MHz. Furthermore for a typical 870 MHz system in the U.S. a possible downstream RF spectrum subdivision plan uses 6 MHz frequency subdivisions or spans within the 50 MHz to 550 MHz band for analog video transmission signals and within the 550 MHz to 870 MHz range for digital transmission signals. The Analog Transmission Signals ATSs shown in are typically broadcast in 6 MHz frequency subdivisions typically referred to in analog broadcasting as channels having an analog broadcast signal composed of analog video and analog audio and include Broadcast TV Systems Committee BTSC stereo and Secondary Audio Program SAP audio. Referring again to the downstream direction transmission signals having been multiplexed and in one embodiment using frequency division multiplexing FDM are often referred to as in band transmission signals and include Analog Transmission Signals ATSs and Digital Transmission Signals DTSs also known as Digital Transport Signals . These transmission signals carry video audio and data services. For example these transmission signals may carry television signals Internet data or any additional types of data such as Electronic Program Guide EPG data. Additionally as will be appreciated by those of ordinary skill in the art additional data can be sent with the analog video image in the Vertical Blanking Interval VBI of the video signal and stored in DHCT memory or a DHCT local physical storage device not shown . It should be appreciated however that the amount of data that can be transmitted in the VBI of the analog video signal is typically significantly less than data transmitted in a DTS.

Like the ATSs the DTSs each occupies 6 MHz of the RF spectrum. However the DTSs are digital transmission signals consisting of 64 or 256 Quadrature Amplitude Modulated QAM digital signals formatted as MPEG 2 transport streams allocated in a separate frequency range. As will be described in more detail below the MPEG 2 transport stream enables transmission of a plurality of DTS types over each 6 MHz RF subdivision as compared to a 6 MHz ATS. The three types of digital transport signals illustrated in include broadcast digital transmission signals carousel digital transmission signals and on demand transmission signals .

MPEG 2 transport may be used to multiplex video audio and data in each of these Digital Transmission Signals DTSs . However because an MPEG 2 transport stream allows for multiplexed video audio and data into the same stream the DTSs do not necessarily have to be allocated in separate 6 MHz RF frequencies unlike ATSs . On the other hand each DTS is capable of carrying multiple broadcast digital video media content instances multiple cycling data carousels containing broadcast data and data requested on demand by the subscriber. Data is formatted such as in Internet Protocol IP mapped into MPEG 2 packets and inserted into the multiplexed MPEG 2 transport stream. Encryption can be applied to the data stream for security so that the data may be received only by authorized DHCTs. The authorized DHCT is provided with the mechanisms to receive among other things additional data or enhanced services. Such mechanisms can include keys that are required to decrypt encrypted data.

Each 6 MHz RF subdivision assigned to a digital transmission signal can carry the video and audio streams of the media content instances of multiple television TV stations as well as media content and data that is not necessarily related to those TV media content instances as compared to one TV channel broadcast over one ATS that consumes the entire 6 MHz. The digital data is inserted into MPEG transport streams carried through each 6 MHz frequency subdivision assigned for digital transmission and then de multiplexed at the subscriber DHCT so that multiple sets of data can be produced within each tuned 6 MHz frequency span or subdivision.

Although broadcast in nature the carousel DTSs and on demand DTSs offer different functionality. Continuing with the broadcast DTSs and carousel DTSs typically function as continuous feeds for indefinite time whereas the on demand DTSs are continuous feeds sessions for a limited time. All DTS types are capable of being transmitted at high data rates. The broadcast DTSs carry typical data comprising multiple digitally MPEG 2 compressed and formatted TV source signals and other continuously fed data information. The carousel DTSs carry broadcast media content or data that is systematically broadcast in a cycling fashion but updated and revised as needed. Thus the carousel DTSs serve to carry high volume data such as media content and data and possibly other data at high data rates. The carousel DTSs preferably carry data formatted in directories and files by a Broadcast File System BFS not shown which is used for producing and transmitting data streams throughout the STS and which provides an efficient means for the delivery of application executables and application media content and data to the DHCT as will be described below. Media content and data received by the DHCT in such manner can then be saved in the DHCT memory and or transferred to the DHCT storage device for later use. The on demand DTSs on the other hand can carry particular information such as compressed video and audio pertaining to subscriber requested media content instance preview and or media content instance descriptions as well as other specialized data information.

The User to Network Download Protocol of the MPEG 2 standard s DSM CC specification Digital Storage Media Command and Control provides the data carousel protocol used for broadcasting data from a server located at headend or elsewhere. It also provides the interactive download protocol for reliable downloading of data from a server possibly the same server to an individual DHCT through the on demand DTSs. Each carousel and on demand DTS is defined by a DSM CC session. Therefore some of the basic functionality reflected in the DHCT when the DHCT does not have a local physical storage device is somewhat similar to a networked computer i.e. a computer without a persistent storage device in addition to traditional set top box functionality as is well known to those of ordinary skill in the art. A DHCT with a storage device reduces data access latency when the data is stored in the local physical storage device ahead of time.

Also shown in are Out Of Band OOB signals that provide continuously available two way signaling to the subscribers DHCT regardless of which in band signals are tuned to by the individual DHCT in band tuners as described below. The OOB signals consist of a Forward Data Signal FDS and a Reverse Data Signal RDS . The OOB signals can comply to any one of a number of well known transport protocols but preferably comply to either a DAVIC 1.1 Transport Protocol with FDS of 1.544 mega bits per second Mbps or more using quadrature phase shift keying QPSK modulation and an RDS of 1.544 Mbps or more using QPSK modulation or to a DOCSIS Transport Protocol with FDS of 27 Mbps using 64 QAM modulation and a RDS of 1.544 Mbps or more using QPSK modulation or 16 QAM modulation. The OOB signals provide the two way operation of the network which allows for subscriber interactivity with the applications and services provided by the network. Furthermore the OOB signals are not limited to a 6 MHz spectrum but generally to a smaller spectrum such as 1.5 or 3 MHz.

In a typical system the programming services and other information from content providers can be distributed according to a variety of mechanisms. The input signals may be transmitted from sources to the headend via a variety of transmission paths including satellites not shown and terrestrial broadcast transmitters and antennas not shown . The headend can also receive content from a direct feed source via a direct line . Other input sources from content providers include a video camera analog input source or an application server . The application server may include more than one line of communication. One or more components such as analog input source input source video camera and application server can be located external to the headend as shown or internal to the headend as would be appreciated by one having ordinary skill in the art. The signals provided by the content or programming input sources can include a single media content instance i.e. individual instances of media content such as an episode of a television show a movie or a web page etc. or a multiplex that includes several media content instances.

The headend generally includes one or more receivers that are each associated with a content source. MPEG encoders such as encoder are included for digitally encoding at least some local programming or a real time feed from video camera or the like. The encoder outputs the respective compressed video and audio streams corresponding to the analog audio video signal received at its input. For example encoder can output formatted MPEG 2 or MPEG 1 packetized elementary PES streams or transport streams compliant to the syntax and semantics of the ISO MPEG 2 standard respectively. The PES or transport streams may be multiplexed with input signals from switch receiver and control system . The multiplexing logic processes the input signals and multiplexes at least a portion of the input signals into transport stream . Analog input source can provide an analog audio video broadcast signal which can be input into modulator . From modulator a modulated analog output signal can be combined at combiner along with other modulated signals for transmission into transmission medium . Alternatively analog audio video broadcast signal from analog input source can be input into modulator . Alternatively analog audio video broadcast signal can be input directly from modulator to transmission medium . The analog broadcast media content instances are transmitted via respective radio frequency RF channels each assigned for transmission of an analog audio video signal such as NTSC video as described in association with .

The switch such as asynchronous transfer mode ATM switch provides an interface to an application server . There can be multiple application servers providing a variety of services such as a Pay Per View service including video on demand VOD a data service an Internet service a network system or a telephone system. Service and content providers may download content to an application server located within the STS . The application server may also be located within the headend or elsewhere within the STS such as in a hub . The various inputs into the headend are then combined with the other information from the control system which is specific to the STS such as local programming and control information which can include among other things conditional access information. The headend contains one or more modulators to convert the received transport streams into modulated output signals suitable for transmission over the transmission medium through the network . Each modulator may be a multimodulator including a plurality of modulators such as but not limited to QAM modulators that radio frequency modulate at least a portion of the transport streams to become output transport streams . The output signals from the various modulators or multimodulators are combined using equipment such as a combiner for input into the transmission medium which is sent via the in band delivery path to subscriber locations not shown . In band delivery path can include DTS and ATS as described with . In one embodiment the server also provides various types of data to the headend . The data in part is received by the media access control functions that output MPEG transport packets containing data instead of digital audio video MPEG streams. The control system enables the television system operator to control and monitor the functions and performance of the STS . The control system interfaces with various components via communication link in order to monitor and or control a variety of functions including the frequency spectrum lineup of the programming for the STS billing for each subscriber and conditional access for the content distributed to subscribers. Information such as conditional access information is communicated from the control system to the multiplexing logic where it is multiplexed into a transport stream .

Among other things the control system provides input to the modulator for setting the operating parameters such as selecting certain media content instances or portions of transport streams for inclusion in one or more output transport stream system specific MPEG table packet organization and or conditional access information. Control information and other data can be communicated to hubs and DHCTs via an in band delivery path or via an out of band delivery path .

The out of band data is transmitted via the out of band FDS of transmission medium by means such as but not limited to a Quadrature Phase Shift Keying QPSK modem array . Two way communication utilizes the RDS of the out of band delivery path . Hubs and DHCTs transmit out of band data through the transmission medium and the out of band data is received in headend via out of band RDS . The out of band data is routed through router to an application server or to control system . The out of band control information includes such information as a pay per view purchase instruction and a pause viewing command from the subscriber location to a video on demand type application server located internally or external to the headend such as application server as well as any other data sent from the DHCT or hubs all of which will preferably be properly timed. The control system also monitors controls and coordinates all communications in the subscriber television system including video audio and data. The control system can be located at the headend or remotely.

The transmission medium distributes signals from the headend to the other elements in the subscriber television system such as a hub a node and subscriber locations . The transmission medium can incorporate one or more of a variety of media such as optical fiber coaxial cable and hybrid fiber coax HFC satellite direct broadcast or other transmission media.

The DHCT further preferably includes at least one processor for controlling operations of the DHCT an output system for driving the television display and at least one tuner system for tuning into a particular television channel or frequency to be displayed and for sending and receiving various types of data or media content to and from the headend . The DHCT may include in other embodiments multiple tuners for receiving downloaded or transmitted media content. Tuner system can select from a plurality of transmission signals provided by the subscriber television system. Tuner system enables the DHCT to tune to downstream media and data transmissions thereby allowing a user to receive digital or analog media content delivered in the downstream transmission via the subscriber television system. The tuner system includes in one implementation an out of band tuner for bi directional quadrature phase shift keying QPSK data communication and a quadrature amplitude modulation QAM tuner in band for receiving television signals. Additionally a receiver receives externally generated information such as user inputs or commands from an input device such as remote control device or other devices.

According to another embodiment of the invention a telephone modem not shown in the DHCT can be utilized for upstream data transmission and a headend hub or other component located upstream in the STS can receive data from a telephone network corresponding with the telephone modem and can route the upstream data to a destination internal or external to the STS such as an application data server in the headend or content provider.

The DHCT includes signal processing system which comprises demodulating system and transport demultiplexing and parsing system herein demultiplexing system to process broadcast media content and or data. One or more of the systems of signal processing system can be implemented with software a combination of software and hardware or preferably in hardware. Demodulating system comprises functionality for RF signal demodulation either an analog transmission signal or a digital transmission signal. For instance demodulating system can demodulate a digital transmission signal in a carrier frequency that was modulated among others as a QAM modulated signal. When tuned to a carrier frequency corresponding to an analog TV signal transmission demultiplexing system is bypassed and the demodulated analog TV signal that is output by demodulating system is instead routed to analog video decoder . Analog video decoder converts the analog video signal i.e. the video portion of a media content instance that comprises a video portion and an audio portion received at its input into a respective non compressed digital representation comprising a sequence of digitized pictures and their respective digitized audio. Presented at the input to analog video decoder is an analog video signal such as NTSC video comprising of audio and video. In one implementation the video consists of a sequence of fields spaced apart at approximately one sixtieth of a second. A pair of consecutive fields constitutes a picture. The odd field contains the odd numbered lines of the picture and the even field contains the even numbered lines of the picture. Analog video decoder outputs the corresponding sequence of digitized pictures and respective digitized audio. Each picture is a two dimensional entity of picture elements and each picture element contains a respective set of values. A picture element value comprises luminance and chrominance information that are representative of brightness and color information at the spatial location of the picture element within the picture.

Digitized pictures and respective audio output by analog video decoder are presented at the input of compression engine . Digitized pictures and respective audio output by analog video decoder can also be presented to an input of media engine via an interface not shown dedicated for non compressed digitized analog video and audio such as ITU for display on TV . Compression engine is coupled to localized memory preferably DRAM for input and processing of the input digitized pictures and their respective digitized audio. Alternatively compression engine can have its own integrated memory not shown . Compression engine processes the sequence of digitized pictures and digitized audio and converts them into a video compressed stream and an audio compressed stream respectively. The compressed audio and video streams are produced in accordance with the syntax and semantics of a designated audio and video coding method such as specified by the MPEG 2 audio and MPEG 2 video ISO standard so that they can be interpreted by video decoder and audio decoder for decompression and reconstruction at a future time. Each compressed stream consists of a sequence of data packets containing a header and a payload. Each header contains a unique program identification or PID associated with the respective compressed stream.

Compression engine multiplexes the audio and video compressed streams into a transport stream such as an MPEG 2 transport stream for output. Furthermore compression engine can preferably compress audio and video corresponding to more than one program in parallel e.g. two tuned analog TV signals and to multiplex the respective audio and video compressed streams into a single transport stream. Output of compressed streams and or transport streams produced by compression engine is input to signal processing system . Parsing capabilities within signal processing allow for interpretation of sequence and picture headers for instance annotating their locations within their respective compressed stream for future retrieval from storage device . A compressed analog media content instance e.g. TV program episode or show corresponding to a tuned analog transmission channel can be output as a transport stream by signal processing and presented as input for storage in storage device via interface as will be described below. The packetized compressed streams can be also output by signal processing and presented as input to media engine for decompression by video decompression engine and audio decompression engine for its display on TV as will be described below.

Demultiplexing system can include MPEG 2 transport demultiplexing. When tuned to carrier frequencies carrying a digital transmission signal demultiplexing system enables the separation of packets of data corresponding to the compressed streams of information belonging to the desired media content instances for further processing. Concurrently demultiplexing system precludes packets in the multiplexed transport stream that are irrelevant or not desired such as packets of data corresponding to compressed streams of media content instances of other media content signal sources e.g. other TV channels from further processing.

Parsing capabilities of demultiplexing system include reading and interpreting the received transport stream without disturbing its content such as to interpret sequence and picture headers for instance to annotate their locations within their respective compressed stream for future retrieval from storage device . Thus the components of signal processing system are capable of QAM demodulation forward error correction and demultiplexing MPEG 2 transport streams and parsing packetized elementary streams and elementary streams. A compressed media content instance corresponding to a tuned carrier frequency carrying a digital transmission signal can be output as a transport stream by signal processing and presented as input for storage in storage device via interface as will be described below. The packetized compressed streams can be also output by signal processing and presented as input to media engine for decompression by video decompression engine and audio decompression engine as will be described below.

One having ordinary skill in the art will appreciate that signal processing system will preferably include other components not shown including memory decryptors samplers digitizers e.g. analog to digital converters and multiplexers among others. Further other embodiments will be understood by those having ordinary skill in the art to be within the scope of the preferred embodiments of the present invention including analog signals e.g. NTSC that bypass one or more elements of the signal processing system and are forwarded directly to the output system . Further outputs presented at corresponding next stage inputs for the aforementioned signal processing flow may be connected via accessible memory in which the outputting device stores the output data and the inputting device thereafter inputs the output data written to memory by the respective outputting device. Outputting and inputting devices include analog video decoder compression engine media engine signal processing system and components or subcomponents thereof. Further it will be understood by those having ordinary skill in the art that components of signal processing system can be spatially located in different areas of the DHCT . Further it will be understood by those having ordinary skill in the art that although the components of signal processing system are illustrated as being in communication with an incoming signal from the communications interface the signal may not necessarily be in the order shown for all signals.

The DHCT also includes media engine which includes digital video decoder also known as video decompression engine and digital audio decoder also known as audio decompression engine and other digital signal processing components not shown as would be appreciated by those having ordinary skill in the art. For example demultiplexing system is in communication with tuner system and processor to effect reception of digital compressed video streams digital compressed audio streams and data streams corresponding to one or more media content instances to be separated from other media content instances and or streams transported in the tuned transmission channel and to be stored in a first part not shown of DRAM of DHCT assigned to receive packets of one or more media content instances. Other dedicated memory may also be used for media content instance packets.

Furthermore while conducting this process demultiplexing system demultiplexes and separates desired compressed streams from the received transport stream without disturbing its content. Further parser parses i.e. reads and interprets compressed streams such as to interpret sequence headers and picture headers and deposits a transport stream carrying compressed streams of a first media content instance into DRAM . Processor causes transport stream in DRAM to be transferred to the storage device via interface . Under program control by processor the demultiplexing system in communication with the digital video decoder storage device and processor effect notification and or transfer of received packets of one or more compressed streams corresponding to one or more media content instances from a first part of DRAM to a second part not shown of DRAM assigned to the digital video decoder and the digital audio decoder . Alternatively media engine can have access to a dedicated localized DRAM not shown . Upon demultiplexing and parsing the transport stream carrying one or more media content instances signal processing system outputs to DRAM ancillary data in the form of a table or data structure not shown comprising the relative or absolute location of the beginning of certain pictures in the compressed media content instance for convenience in retrieval during future operations.

In another embodiment according to a plurality of tuners and respective number of demodulating systems demultiplexing systems and signal processing systems a respective number of broadcast digital media content instances are received and routed to the hard disk of storage device simultaneously. Alternatively a single demodulating system a single demultiplexing system and a single signal processing system each with sufficient processing capabilities can serve to process more than one digital media content instance.

In another embodiment according to the aforementioned description a first tuner of tuning system receives an analog video signal corresponding to a first media content instance and a second tuner simultaneously receives a digital compressed stream corresponding to a second media content instance. First media content instance is processed as an analog video signal and second media content instance is processed as a digital compressed stream as described above.

In one implementation compression engine can output formatted MPEG 2 or MPEG 1 packetized elementary streams PES inside a transport stream all compliant to the syntax and semantics of the ISO MPEG 2 standard. Alternatively compression engine can output other digital formats that are compliant to other standards. The digital compressed streams output by compression engine corresponding to a media content instance are deposited in local memory for compression engine and routed to demultiplexing system . Demultiplexing system parses i.e. reads and interprets the transport stream generated by compression engine without disturbing its content such as to interpret picture headers and deposits the transport stream into DRAM . Processor causes transport stream in DRAM to be transferred to the storage device . While parsing the transport stream demultiplexing system outputs to memory ancillary data in the form of a table or data structure not shown comprising the relative or absolute location of the beginning of certain pictures in the compressed media content stream for the media content instance for convenience in retrieval during future operations. In this way random access operations such as fast forward rewind and jumping to a location in the compressed media content instance can be attained.

In another embodiment according to a plurality of tuners a respective number of analog video decoders and a respective number of compression engines the aforementioned compression of analog video and audio is performed and routed to hard disk of the storage device simultaneously for a respective number of analog media content instances. Alternatively a single compression engine with sufficient processing capabilities can serve to compress more than one analog media content instance.

The DHCT may also include one or more wireless or wired interfaces also called communication ports for receiving and or transmitting data to other devices. For instance the DHCT may feature USB Universal Serial Bus Ethernet for connection to a computer IEEE 1394 for connection to media content devices in an entertainment center serial and or parallel ports. The user inputs may be for example provided by an input device including a computer or transmitter with buttons or keys located either on the exterior of the terminal or by a hand held remote control device or keyboard that includes user actuated buttons or even aural input.

The DHCT includes at least one storage device to provide storage for downloaded media content. Storage device can be an optical storage device or a magnetic storage device among others and is preferably a hard disk drive. Storage device comprises storage for media content and or data that can be written to for storage and later read from for retrieval for presentation. The storage device preferably includes at least one hard disk . Throughout this disclosure references relating to writing to or reading from the storage device or references regarding recordings from or to the storage device will be understood to mean that such read or write operations are occurring to the actual medium for example the hard disk of the storage device . Preferably located in each hard disk is one or more time shift buffers TSBs which comprise a plurality of clusters as described below for temporarily receiving media content and or data. The storage device is also comprised of a controller that receives operating instructions from the device driver of the operating system as described below and implements those instructions to cause read and or write operations to the hard disk . The device driver communicates with the storage device controller to format the hard disk causing the hard disk to be divided radially into sectors and concentric circles called tracks as illustrated by the block diagram illustration of the example hard disk in . Note from that the same number of sectors per track are illustrated but other embodiments with a different number of tracks per side sectors per track bytes per sector and in different zones of tracks are within the scope of the preferred embodiments of the invention. The sector is the basic unit of storage on the hard disk . In one implementation each sector of a hard disk can store 512 bytes of user data. While data is stored in 512 byte sectors on the hard disk the cluster such as example cluster is typically the minimum unit of data storage the operating system uses to store information. Two or more sectors on a single track make up a cluster.

Referring again to storage device is preferably internal to DHCT coupled to a common bus through a communication interface preferably an integrated drive electronics IDE or small computer system interface SCSI although IEEE 1394 or USB among others can be used. In other embodiments the storage device can be externally connected to and thus removable from the DHCT via a communication port implemented as IEEE 1394 or USB or as a data interface port such as a SCSI or an IDE interface. In one implementation under the auspices of the real time operating system as described below and executed by processor and in coordination with the personal video recording PVR application client and the device driver the latter two components described below downloaded media content herein understood to also refer to other types of data in addition to or instead of media content instances are received in DHCT via communications interface and stored in a temporary cache not shown in memory . The temporary cache is implemented and managed to enable media content transfers from the temporary cache to storage device or in concert with the insertion of a newly arriving media content into the temporary cache. In one implementation the fast access time and high data transfer rate characteristics of the storage device enables media content to be read from the temporary cache in memory and written to storage device in a sufficiently fast manner. Orchestration of multiple simultaneous data transfer operations is effected so that while media content is being transferred from the cache in memory to storage device new media content is received and stored in the temporary cache of memory . In other implementations the downloaded media content is received through communications port in the DHCT and then transferred directly to storage device thus bypassing the temporary cache.

Processor in communication generally with device driver and storage device controller and demultiplexing system effect retrieval of compressed video streams compressed audio streams and data streams corresponding to one or more media content instances from storage device . Retrieved streams are deposited in an output cache in storage device and transferred to memory and then processed for playback according to mechanisms that would be understood by those having ordinary skill in the art. In some embodiments the media content instances are retrieved and routed from the hard disk to the video and audio decoding system simultaneously and then further processed for eventual presentation on a display device or other device.

In one implementation the DHCT includes system memory which includes FLASH memory and dynamic random access memory DRAM for storing various applications modules and data for execution and use by the processor . Basic functionality of the DHCT is provided by an operating system that is primarily stored in FLASH memory . The operating system includes among other elements at least one resource manager that provides an interface to resources of the DHCT such as for example computing resources. Also included within operating system is one or more device drivers that provides operating instructions to an internal or external storage device such as storage device and other peripheral devices not shown. In one implementation device driver provides operating instructions to the storage device controller of the storage device to effect among other functions read and or write operations to the hard disk of the storage device . The device driver includes several driver modules including MPEG transport audio video A V File System Manager and DVR Manager . MPEG transport provides functionality for decoding i.e. providing operating instructions to the media engine for MPEG A V decoding and playing A V encoded in MPEG transport streams. A V File System Manager under control of the DVR Manager enables MPEG transport to effect the decoding and playback functionality by effecting retrieval of MPEG A V media content from the storage device and providing the content to the audio decoder and video decoder of media engine . AV File System Manager also provides functionality for the recording of MPEG streams. The AV File System Manager manages data about each recorded media content instance including where it is stored physically i.e. cluster management as described below and the locations of I Frames a series of still pictures of an MPEG transport stream that the DHCT can use to provide a display during rewind or fast forward operations .

The AV File System Manager also provides a software generated pointer called Normal Play Time NPT which points to locations within files and locations within media content instances within those files. Based on the Lightweight Stream Control Protocol NPT can be thought of as the clock associated with a video asset as distinguished from real time clock not shown for the DHCT . For every file that is created for media content downloaded to the storage device an NPT is generated. There is an NPT for the read head of the storage device and for the write head of the storage device . For writing content to the storage device for a newly created file e.g. a TSB file an NPT is created for the write head of the storage device with an initial value of zero. In one implementation the AV File System Manager receives a periodic interrupt for example every 5 10 msec set up by the PVR application through the computer services of the operating system . This interrupt is synchronized with the internal real time clock not shown of the DHCT in order to advance the pointer i.e. the NPT at a substantially constant rate. The NPT continues to increase in value from an initial value of zero until the associated file is closed. For the read head of the storage device the NPT starts at 0 at the start of the file advances in real time in normal play mode advances faster than real time in fast forward mode decrements in rewind mode and is fixed when the video is paused. The DVR Manager is the driver module that controls the operation of the MPEG encoding and MPEG decoding through MPEG transport and uses the services of the AV File System Manager to store and provide functionality for the playback of files. It will be understood that references to the device driver will include one or more or a combination of one or more of the aforementioned device driver modules.

One or more programmed software applications herein referred to as applications are executed by utilizing the computing resources in the DHCT . The applications or application clients may be resident in FLASH memory or downloaded or uploaded into DRAM . Applications stored in FLASH memory or DRAM are executed by processor e.g. a central processing unit or digital signal processor under the auspices of the operating system . Data required as input by an application is stored in DRAM or FLASH memory and read by processor as need be during the course of application execution. Input data may be data stored in DRAM by a secondary application or other source either internal or external to the DHCT or possibly anticipated by the application and thus created with the application at the time it was generated as a software application in which case it is stored in FLASH memory . Data generated by an application is stored in DRAM by processor during the course of application execution. DRAM also includes application memory that various applications may use for storing and or retrieving data.

An application referred to as navigator is also resident in FLASH memory for providing a navigation framework for services provided by the DHCT . The navigator registers for and in some cases reserves certain user inputs related to navigational keys such as channel increment decrement last channel favorite channel etc. The navigator also provides users with television related menu options that correspond to DHCT functions such as for example blocking a channel or a group of channels from being displayed in a channel menu.

The FLASH memory also contains a platform library . The platform library is a collection of utilities useful to applications such as a timer manager a compression manager a configuration manager an HTML parser a database manager a widget toolkit a string manager and other utilities not shown . These utilities are accessed by applications via application programming interfaces APIs as necessary so that each application does not have to contain these utilities. Two components of the platform library that are shown in are a window manager and a service application manager SAM client .

The window manager provides a mechanism for implementing the sharing of the screen regions and user input. The window manager on the DHCT is responsible for as directed by one or more applications implementing the creation display and de allocation of the limited DHCT screen resources. It allows multiple applications to share the screen by assigning ownership of screen regions or windows. The window manager also maintains among other things a user input registry in DRAM so that when a user enters a key or a command via the remote control device or another input device such as a keyboard or mouse the user input registry is accessed to determine which of various applications running on the DHCT should receive data corresponding to the input key and in which order. As an application is executed it registers a request to receive certain user input keys or commands. When the user presses a key corresponding to one of the commands on the remote control device the command is received by the receiver and relayed to the processor . The processor dispatches the event to the operating system where it is forwarded to the window manager which ultimately accesses the user input registry and routes data corresponding to the incoming command to the appropriate application.

The SAM client is a client component of a client server pair of components with the server component not shown being located on the headend preferably in the control system . A SAM database i.e. structured data such as a database or data structure in DRAM includes a data structure of services and a data structure of channels that are created and updated by the headend . Herein database will refer to a database structured data or other data structures as is well known to those of ordinary skill in the art. Many services can be defined using the same application component with different parameters. Examples of services include without limitation and in accordance with one implementation presenting television programs available through a WatchTV application pay per view events available through a PPV application digital music not shown media on demand available through an MOD application and an interactive program guide IPG . In general the identification of a service includes the identification of an executable application that provides the service along with a set of application dependent parameters that indicate to the application the service to be provided. As an example a service of presenting a television program media content instance could be executed by the WatchTV application with a set of parameters specifying the HBO to view HBO or with a separate set of parameters to view CNN. Each association of the application component tune video and one parameter component HBO or CNN represents a particular service that has a unique service I.D. The SAM client also interfaces with the resource manager as discussed below to control resources of the DHCT .

Application clients can also be downloaded into DRAM at the request of the SAM client typically in response to a request by the user or in response to a message from the headend . In the example DHCT illustrated in DRAM includes a media on demand application MOD an e mail application PVR application and a web browser application . It should be clear to one with ordinary skill in the art that these applications are not limiting and merely serve as examples for embodiments of the invention. Furthermore one or more DRAM based applications may be resident as an alternative embodiment in FLASH memory . These applications and others provided by the subscriber television system operator are top level software entities on the network for providing services to the user.

In one implementation applications executing on the DHCT work with the navigator by abiding by several guidelines. First an application utilizes the SAM client for the provision activation and suspension of services. Second an application shares DHCT resources with other applications and abides by the resource management policies of the SAM client the operating system and the DHCT . Third an application handles situations where resources are only available with navigator intervention. Fourth when an application loses service authorization while providing a service the application suspends the service via the SAM the navigator will reactivate an individual service application when it later becomes authorized . Finally an application client or application is designed to not have access to certain user input keys reserved by the navigator i.e. power channel volume etc. .

The MOD client application provides the user with lists of available media content titles for each media content instance to choose from and with media content instances requested by the user. The MOD client application provides media content to the user by engaging typically in a direct two way IP Internet Protocol connection with VOD content servers not shown that would be located in one embodiment in the headend .

An executable program or algorithm corresponding to an operating system OS component or to a client platform component or to an application client or to respective parts thereof can reside in and execute out of DRAM and or FLASH memory . Likewise data input into or output from any executable program can reside in DRAM or FLASH memory . Furthermore an executable program or algorithm corresponding to an operating system component or to a client platform component or to an application client or to respective parts thereof can reside in FLASH memory or in a local storage device such as storage device externally connected to or integrated into DHCT and be transferred into DRAM for execution. Likewise data input for an executable program can reside in FLASH memory or a storage device and be transferred into DRAM for use by an executable program or algorithm. In addition data output by an executable program can be written into DRAM by an executable program or algorithm and be transferred into FLASH memory or into a storage device. In other embodiments the executable code is not transferred but instead functionality is effected by other mechanisms.

Permanent recordings and other write operations of media content to the storage device are primarily effected by a PVR architecture comprising the PVR application and the device driver . At one level of abstraction the PVR application provides high level control for writing of digital data from multiple input streams to the storage device for both scheduled permanent recordings and permanent recordings from a time shift buffer TSB or writes to the TSB . The TSB is a configurable allocation of hard disk clusters that store the data downloaded from the data streams. More than one TSB may be used for instance one TSB per tuner in the case of a DHCT with multiple tuners. Through mechanisms explained below media content received into the TSB will have a temporary recording designation. That is media content stored in clusters of the TSB will have a temporary residence. This receiving of media content into the TSB for temporary residence will also be referred to as buffering. The media content stored in the TSB will either be deleted i.e. the clusters storing the media content will be configured as writeable for eventual write operations that overwrite the media content within those clusters or retained through election by the user as a permanent recording. A permanent recording will be understood to mean media content that is stored for an extended period of time as decided by the user. Permanent recordings are stored in non buffer clusters i.e. not in clusters of the TSB that are not used for the TSB in instances when the user elects in advance to make a scheduled recording of a media content instance that has not yet been tuned to at the DHCT . A permanent recording can also be achieved by selecting a media content instance stored in the TSB and designating the media content instance as permanent. Further when the media content instance is designated as permanent the associated TSB clusters are configured for eventual designation as non buffer clusters i.e. permanent recording clusters . Thus permanent recordings will preferably be more permanent than media content in the TSB and permanent recordings can eventually be deleted from the disk space typically at the explicit request of a user as one example. This deletion occurs in one implementation by configuring the associated non buffer clusters as writeable and thus eventually available for the TSB or scheduled recordings. As part of the high level control provided by the PVR application the PVR application also provides media content instance data management and user interfaces. With respect to media content instance data management the PVR application maintains the media content instance guide data on the hard disk for all permanently recorded files and TSB files with their associated media content.

If the user does not choose to designate the desired media content instance as a permanent recording when the instance was first received into the TSB the user has up until immediately before the time the device driver deallocates the clusters storing the desired media content instance from the TSB to choose to designate the desired media content instance as a permanent recording. Line corresponds to the handle or reference of the TSB file. The handle is a mechanism by which the device driver can access the TSB file information when the TSB file is open. Line is a pointer to database records or other data structures containing media content instance guide information. Line and line correspond to the download start and end clock time i.e. real time respectively of the media content instance. Line and line corresponds to the starting and stopping location in terms of NPT of the downloaded media content instance. The device driver maintains the mapping between NPT and the cluster sector locations of media content in a separate look up table data structure not shown located on the hard disk . In one embodiment the device driver can sample the current write location i.e. cluster and sector location provided by the storage device controller of as the write head of the storage device advances and store that cluster and sector location in the look up table data structure along with a corresponding NPT value. This sampling can occur for example every 5 10 msec. In an alternative embodiment the device driver can record an initial sample and through an interpolation algorithm estimate file locations and locations within said files. When the PVR application references a particular media content instance the PVR application passes the stored start and stop NPT values from line and to the device driver and the device driver determines the hard disk locations from the look up table data structure. Line represents an integer value corresponding to the handle value explained below for the TSB file. Line items and correspond to the integer values for the start and stop NPT respectively for the TSB file containing the downloaded media content instances. Note that the programming structure described above is for every media content instance currently residing in the TSB . This structure can change once the buffered media content instance is made relatively permanent and eventually becomes no longer part of the TSB . For example the fields tsbHandle line tsbStartNPT line and tsbStopNPT line would not necessarily be part of a programming structure describing permanently recorded media content instances that are not part of the TSB . is a programming diagram of example software programming code in conventional C computer language that can be used to create and maintain a data structure consisting of an ordered list of media content instance characterizing data for each media content instance in the TSB . Line item provides an integer value for the handle with 0 corresponding to a closed file. Line item provides a list of data corresponding to the data structure depicted in . Line item provides an integer value for the starting location NPT of the TSB . Line item provides the live point or current write location to the TSB .

At a lower level of abstraction of the PVR architecture i.e. for recording and read write functionality to the storage device of is the device driver . The device driver as part of the PVR architecture provides for a file allocation system that provides cluster level management at the hard disk . More specifically the device driver promotes the use of cross linked clusters. Cross linked clusters describe a situation that occurs when two files reference the same cluster. In one embodiment the device driver creates and manages a special file allocation table FAT to promote file sharing in individual clusters. In one embodiment this file sharing aspect enables one or more permanently recorded files to be created from the TSB file and according to mechanisms described below enables a substantially constant TSB to be maintained. Other benefits of file sharing include among others recording of full contiguous media content instances directly from the TSB while preserving disk space and allowing the user to traverse the entire TSB including shows i.e. media content instances designated as permanently recorded.

The operating system maintains a directory of files and pointers to file entries in the FAT . The operating system also synchronizes the DHCT internal clock not shown with the real time received from messages from the headend . The device driver is often considered a sub set of the operating system and one or more functions described as being performed by the device driver can be in some embodiments performed by the operating system . The example FAT comprises two data structures. First data structure comprises a data structure of several column entries including a filename a cluster list and a starting sector and ending sector . As the TSB uses all of the sectors of the TSB unlike a permanently recorded media content instance that may be carved out of sectors of a particular cluster as explained below there are no sector values maintained in or for TSB files. A file is created for every TSB and every permanently recorded media content instance as requested by a user or designated for permanent recording through a preference filter . The device driver maintains a list of clusters for each file in the first data structure as indicated by cluster list . Second data structure of the FAT comprises a list of all of the clusters of the storage device disk. The cluster entry references the cluster number on the disk. Although described with two data structures the FAT may be implemented with a single data structure or more than two data structures without diverging from the scope of the preferred embodiments. Note also that in other embodiments the filename entry may be excluded from the FAT and the directory entry maintained by the operating system which may include pointers to the cluster list for every file on the hard disk may be used to associate files to the list of clusters. The LinkedFiles entry indicates the number of files that share a particular cluster number. For example if no clusters were allocated to a file the LinkedFiles entry for a particular cluster number in the cluster entry would be zero 0 . If a cluster was allocated for one file or a portion of one file the LinkedFiles entry for that particular cluster number would be 1 . If two files share the same cluster the LinkedFiles entry for that cluster number would be 2 and so on.

To illustrate the operative features of the FAT assume the initial creation of a time shift buffer TSB file or buffer file corresponding to the buffer space or TSB of the storage device disk space. When a TSB is created a specified number of free or available clusters based on the desired TSB size e.g. gigabytes are allocated by the device driver . In one implementation this size allocation of the TSB can be user configurable via a user interface screen generated as part of a system settings menu not shown . A default value can be communicated from the headend or contained as a setting within the PVR application . In response to the request of the PVR application to allocate disk space for the TSB under a TSB filename the device driver in communication with processor causes the FAT stored in one or more sectors in the disk to be mirrored in DRAM to effect operations to the FAT . Periodically for example every 3 4 seconds the processor causes the updated FAT to be flushed or mirrored back to the hard disk . The device driver searches the second data structure of the FAT for available clusters to allocate for the TSB based on the size requirements provided by the PVR application . Assume in one example the size requirements correspond to the amount of space corresponding to clusters. From the example second data structure of the FAT it is noted from cluster entry that clusters and each have a LinkedFiles entry of 0 and thus are available. Note that the LinkedFiles entries for some of the other clusters include a 1 for example cluster signifying the use of that cluster for another file not shown or an inoperable cluster . The device driver allocates clusters and for the TSB and increments the LinkedFiles entry for each cluster as shown in .

The clusters allocated in this example of are not all adjacent clusters on the disk e.g. and . Thus write operations and read operations are not necessarily to or read from contiguous clusters on a disk. Instead clusters may be fragmented throughout the disk space for a particular file. Fragmentation is especially evident as files are shared or deleted. Although conventional software is available to defragment clusters as is well known to those having ordinary skill in the art the use or absence of defragmenting mechanisms do not effect the scope of the preferred embodiments of the invention. The device driver updates the first data structure to reflect that a TSB is allocated in the disc space under the filename TSBfile comprising clusters and . When the TSBfile is open the operating system assigns a handle to the TSBfile or any open file of the hard disk . The handle is assigned and removed when the file is closed by the operating system such that the handle exists in the operating system directory while the associated file is open and the handle is deleted from the directory when the file is closed. The operating system also maintains a pointer to the FAT first data structure that includes the filename and clusters associated with the handle in the directory. Thus when the device driver allocates clusters upon receiving the command to allocate space in terms of size as described above from the PVR application the device driver allocates the required clusters the operating system assigns a handle to these clusters and communicates the handle to the PVR application .

The handle is a pointer to a file such as TSBfile which enables the PVR application to reference the location of the file. When the PVR application seeks to identify a file to the device driver the PVR application passes the handle to the device driver . When the TSBfile is closed for example when the user tunes to another channel the data structure or record maintaining among other data the variable for the handle for that file is deleted and the handle is removed from the operating system directory. It will be understood that in the case of multiple TSBs for example for multiple tuners the same or similar aforementioned allocation and FAT updating process will occur as it does for one TSB .

Media content instances are sequentially written to the allocated clusters and of the TSBfile. At media content instance breaks i.e. end of a media content instance and when the device driver starts writing to a new cluster the PVR application queries the device driver for certain information. The PVR application makes the determination as to when a particular show i.e. media content instance is over in one embodiment based on media content instance guide data the PVR application stores as will be explained in further detail below. When the PVR application receives and stores the media content instance guide data the PVR application sets up a timer interrupt or in other embodiments polls the operating system with the operating system . The operating system in coordination with a real time clock not shown within the DHCT alerts the PVR application to the scheduled end time of the received media content instance and the start of the next media content instance . The PVR application passes to the device driver the handle of the file being written to in this example 1 for the TSBfile and the device driver responsively communicates to the PVR application the current write location in NPT and the stopping and starting location in NPT corresponding to the stop location of the completed media content instance and the start of a new media content instance respectively. Assume a user has decided to permanently record one of the media content instances out of the TSB . The user can rewind through the TSB to view the buffered i.e. temporarily recorded media content instances on a screen display as will be described in greater detail below . Alternatively the user can be presented with a list of buffered media content instances resident in the TSB and encompassed by TSBfile with a selection entry to request a permanent recording.

Once the user reaches the real time playback position of a media content instance in the TSB the user can select playback or record from for example an input device such as remote control device . The PVR application provides the device driver with the TSBfile handle and the start and end location in NPT of the requested media content instance as previously provided by the device driver . The PVR application requests that the desired media content instance be recorded under a filename for example filerecord. The operating system returns to the PVR application the handle to filerecord and the device driver returns the start and calculated stop location in NPT as described below of the permanently recorded media content instance to the PVR application as well. As shown in the device driver uses the location information of the desired media content instance from the PVR application and updates the FAT . The update includes entering the filename filerecord and the clusters and sectors corresponding to the start and end location of the permanently recorded media content instance assume the desired media content instance is encompassed by clusters and . It will be understood that the choice of sector location values and clusters in are arbitrary and chosen for the sake of illustrating that the FAT is continuously updated upon allocation and deallocation of clusters. Further the device driver updates the second data structure by incrementing the LinkedFiles entry to 2 for the affected cluster entries here and reflecting the fact that the corresponding clusters are shared by two files TSBfile and recordfile . The 2 or any LinkedFiles entry greater than 1 for a cluster in the TSB will alert the device driver that no attempts should be made by the device driver to automatically delete the media content instance stored in that cluster after a shift in the TSB i.e. as new clusters are written to .

As the TSB shifts i.e. herein understood to mean as the device driver advances its write position to the hard disk FIG. B the device driver will continuously update the FAT first data structure cluster list to reflect the fact that new clusters are continuously being allocated for the TSB . When the TSB capacity is about to be exceeded the device driver will allocate new clusters to replace the oldest deallocated clusters. For example and referring to cluster has a LinkedFiles entry of 1 thus indicating to the device driver that cluster shares no other files with TSBfile i.e. no permanently recorded files . Thus once the TSB capacity is substantially reached cluster will be deallocated and decremented i.e. its LinkedFiles entry decremented by the device driver . Further the device driver searches the FAT for another available cluster i.e. a cluster with a LinkedFiles entry of 0 . Cluster is the next available cluster i.e. it has a LinkedFiles entry of zero and thus cluster will be allocated for the TSB . Alternatively cluster now with a LinkedFiles entry of 0 could be re allocated to the TSB . illustrates the changes to the FAT resulting from the device driver deallocating cluster and allocating cluster for the TSB . As noted the device driver decrements the LinkedFiles entry of cluster to zero making it available for later write operations and increments the LinkedFiles entry of cluster to 1 . Further the first data structure is also updated with the new cluster list.

As the TSB shifts the device driver notes from the FAT that the next cluster i.e. cluster includes a LinkedFiles entry of 2 as a result of part of filerecord sharing cluster with TSBfile. The 2 in the LinkedFiles entry is a notice to the device driver that the media content instance encompassed by this cluster is not to be deleted. The device driver searches the FAT for an available replacement cluster for cluster . As indicated in the second data structure of cluster is available i.e. has a LinkedFiles entry of 0 . The device driver allocates cluster as a TSB cluster i.e. encompassed by TSBfile and increments the LinkedFiles entry for cluster to 1 as indicated in . Cluster is removed by the device driver from the TSB and its LinkedFiles entry is decremented from 2 to 1 . Cluster list in first data structure is also updated by the device driver to reflect the removal of cluster and the allocation of the cluster replacement cluster . As the TSB shifts cluster is eventually removed and its LinkedFiles entry decremented to 1 with a corresponding allocation of another cluster cluster and a FAT update as illustrated in . Thus through a combination of this file sharing aspect and the allocation and deallocation of clusters based on maintaining this file sharing counter or file sharing count e.g. LinkedFiles entry permanently recorded files are created from the TSB file while maintaining the TSB as substantially constant.

To create a TSB the PVR application invokes a driver applications programming interface API which returns a handle i.e. pointer to the TSB as described above. is an example driver API to accomplish this function. The API of is a call made by the PVR application to the device driver . The device driver in one implementation creates a TSBfileInfo data structure in response to the API of and the operating system assigns a handle which can be returned to the PVR application . The PVR application can save this handle in its data structure Line . The API of also causes the device driver to allocate the clusters and update the FAT for the clusters allocated to the TSB . Note that the ui32 is the data type for the handle. It represents an unsigned integer of 32 bits. The element tvId is a variable of type TV ID which contains data the device driver uses to ascertain the source of the data to the TSB .

To create a file for stand alone or scheduled permanent recordings another device driver API can be invoked by the PVR application such as example API in . Generally this stand alone recording API takes a filename and a quality level and returns a handle to the created file. Similar to the implementation discussed for the API of the device driver creates a RecordedFileInfo data structure in response to the API of and the operating system assigns a handle which can be returned to the PVR application . The PVR application can save this handle in a scheduled recording data structure not shown . A filename is the name of the file that is specifically recorded to for the scheduled recording. The filename is specified to the device driver by the PVR application and the operating system returns a handle to the PVR application . The handle is used for all subsequent calls to the device driver pertaining to that file. The quality element specifies the encoding quality or bit rate good better best similar to LP SLP and SP for conventional video taping. The ui32 and tvId elements are as described with regards to .

An API which creates a new file from existing clusters in the TSB could be represented by the example C programming structure illustrated in . As will be explained below the user can rewind into the TSB and choose to permanently record a media content instance i.e. designate a media content instance as a permanent recording . The PVR application receives a key press event from a remote control device corresponding to the user selecting the record button and processed by the operating system and window manager as described in association with . The PVR application invokes the API in which passes the open TSB file handle tsbHandle and the start startNPT and stop stopNPT location of the desired media content instance i.e. media content instance targeted to be designated as a permanent recording to the device driver . The API of creates a new permanent recording file filename and causes the device driver to create a corresponding entry in the FAT with the assigned clusters from the TSB file and the operating system returns the handle for the permanent recording file to the PVR application . In other words the device driver creates a RecordedFilelnfo structure as depicted in for this new permanent recording file based on the start and stop NPT of the media content instance and the handle of the TSB . The pointer to the TSB location is represented by tsbHandle . The handle is used to specify which TSB to make the recording from. The device driver passes back the calculative location NPT values for the new permanent recording file to the PVR application as requested by the PVR application . The device driver calculates the new values based on the NPT values passed by the PVR application . The device driver determines the duration of the permanently recorded file by subtracting the startNPT from the stopNPT value. Then the device driver assigns the NPT duration to the stopNPT of this new file and assigns the startNPT to zero. The device driver then passes the new locations back to the PVR application for storage in a data structure for permanent recordings similar in structure to that described for the data structure of . After the new permanently recorded file is created the active playback file is still the TSB file e.g. TSBfile . The newly created permanently recorded file is open also. Although it is not actively being written to or read from it can share clusters with the TSB file that is being read from. The user can still perform trick modes and play from the same TSB including data that is in the new permanently recorded file. Thus the user can navigate through the TSB e.g. using trick modes and still view material that the user has marked as permanently recorded.

The device driver automatically maintains the TSB as substantially constant in size through a process of tracking the write locations and deallocating and allocating clusters. The device driver maintains an ordered list of clusters in the FAT as described above and thus knows based on the TSB size requirement or capacity to automatically deallocate clusters storing media content in the TSB file and allocate replacement clusters to continue writing media content to the TSB file when the TSB capacity is about to be exceeded. After writing Program to cluster the device driver automatically advances its write position and automatically deallocates the cluster storing the oldest downloaded media content instance in the TSB and reallocates a replacement cluster to continue the writing of Program as illustrated in . This process occurs without intervention or further instruction i.e. autonomously from the PVR application . Cluster has a value for the LinkedFiles entry of 1 as shown in and thus as the TSB capacity is about to be exceeded the device driver will deallocate cluster from the TSB and decrement the value in its LinkedFiles entry herein LinkedFiles value resulting in a LinkedFiles value of 0 . Note that the use of the phrase TSB capacity will be understood to mean that the allocated TSB size from the first or oldest allocated cluster to the most recently allocated cluster is about to be exceeded requiring the deallocation of the oldest cluster and making it writeable from the TSB and the reallocation of a replacement cluster. It will be understood in the context of TSB capacity that in the preferred embodiments of the invention clusters are dynamically allocated and deallocated resulting in not necessarily having a first and last cluster but more accurately having an ever changing oldest cluster and most recently allocated cluster such that the size of the TSB is always maintained as substantially constant. Thus cluster is now available to be allocated for the TSB file or for other files. Further device driver seeks to allocate another cluster from the available pool of clusters listed in the FAT i.e. those clusters with LinkedFiles values of 0 to replace cluster . Assume that cluster is the next available cluster i.e. cluster initially has a zero value . Once the device driver allocates cluster the device driver increments the cluster LinkedFiles value from 0 to 1 . Alternatively device driver can keep the LinkedFiles value of cluster equal to a value of one and cause an overwrite with another media content instance providing for a circular style overwriting buffer arrangement.

When the writing of Program is completed the next media content instance program is written to the available sectors of cluster . The live point L in the TSBar represents that Program is currently being written to cluster . As the TSB shifts i.e. the write location advances and cluster is full the device driver seeks the next cluster in the TSB to write program . Following a similar procedure as described above device driver will deallocate cluster and decrement its corresponding LinkedFiles value and allocate another cluster for example cluster and increment its corresponding LinkedFiles value from 0 to 1 . Further device driver will start writing Program to the newly allocated cluster as illustrated in . At this point the amount of data for Program is reduced by the amount that was previously in cluster I and cluster . As the TSB shifts this process of deallocation and allocation continues for the balance of the write of Program and for writing more media content instances into the TSB . At least at program breaks and at the start of writing to a new cluster the PVR application requests update information from the device driver and as well the FAT is updated by the device driver . This updating can occur at an even greater frequency through several mechanisms. In one embodiment the updating can occur upon request for example an API invocation every 10 msec from the PVR application . In other embodiments the PVR application sets up a timer interrupt in cooperation with the operating system synched to 10 msec intervals of the internal real time clock not shown of the DHCT to provide the NPT update. In other embodiments a greater or lesser frequency of update can be used. In other embodiments updates can occur at other times or during other events as well.

In addition to the stop and start locations for each media content instance the PVR application maintains the complete guide data for the buffered and recorded media content instances. This data is provided by either maintaining a pointer to a media content instance guide database not shown in the PVR application or by copying the particular media content instance information from a media content instance guide database such as an EPG database or a database maintained in application memory to the database of the PVR application . Alternatively the PVR application may use the applications database in lieu of providing its own database. Preferably the PVR application uses the storage device for storing the media content instance guide data. The media content instance guide data provides a source for the PVR application to display to a user a list of media content instances currently in the storage device that have guide data available.

Referring to when the TSB shifts the data for cluster persists. Because the device driver recognizes that cluster has a LinkedFiles value of 2 it will not delete that cluster but instead allocates a new cluster cluster to its list for continually writing Program . Cluster is eventually removed e.g. as the writing progresses from the TSB cluster list and its LinkedFiles value decremented to 1 . Data in cluster for Program though it also exists is essentially lost because Program was never marked as recorded i.e. designated with a LinkedFiles value greater than 1 . Thus the LinkedFiles value provides a notice to the device driver that prevents the device driver configuring the associated cluster as writeable. The LinkedFiles value also provides a notice to the device driver to allocate replacement clusters in order to maintain a substantially constant TSB .

After the new permanently recorded file is created the active playback file is still the TSB file e.g. TSBfile . The newly created permanently recorded file is open also. Although the new permanently recorded file is not actively being written to or read from it can share clusters with the TSB file that are being read. The user can still perform trick modes and play from the same TSB file. depicts a possible state when the user decided to permanently record Program . Note that the cluster entry and LinkedFiles entry of have been removed for to simplify discussion. In this example the playback point is within the range of the TSB file as denoted by the TSBar and the user can move through any part of the TSB file. If the playback point falls outside of the bounds of the TSB file as represented by TSBar as illustrated in the active playback file transitions to the permanently recorded file. This latter situation can occur if the user is in a paused mode while the device driver is continually writing real time media content to the TSB . Eventually if paused long enough the read location corresponding to the paused position can be at a cluster location that has been deallocated from the TSB . At this point the PVR application handles the playback as a normal playback from a permanently recorded file.

Because the PVR application is aware of the TSB and the permanently recorded file boundaries it can handle the aforementioned transitions according to the flowchart depicted in in accordance with one embodiment of the invention. As noted in step provides that the PVR application receives an event notification from the device driver that the TSB is going to shift and updates the TSB starting location e.g. startNPF in example C programming depicted in . This event can be anything that causes the shift including a continued write of a media content instance to a new cluster of the TSB or a new media content instance write to a new cluster of the TSB when the TSB is at capacity. Step provides that the PVR application invokes a driver API to retrieve status of current playback position from the device driver . The example driver API illustrated in returns the current NPT for the specified handle TSB in this example . The handle indicated is the handle previously returned by a call to open the TSB file or to make a scheduled stand alone permanent recording. Npt is the current position in the recording. Scale is the current rate and direction of play. Mode indicates PAUSED PLAYING or RECORDING . Referring again to step provides that the PVR application compares the current playback location NPT with the shifted TSB start location NPT . If the current playback location is greater than the shifted TSB start location then playback continues from the TSB step . If the current playback location is less than the shifted TSB start location step provides that the PVR application finds any active permanently recorded file that contains the current playback NPT. In the example depicted in the permanently recorded file for Program contains the current playback NPT. Step provides that the application calls a driver API which makes the permanently recorded file act as the active file without disrupting the playback. An example signature for this API is illustrated in . In this API tsbHandle is the handle for the TSB . Handle is the handle for the permanently recorded file.

In one embodiment contiguous media content instances can be stored without losing any beginning or end of media content instance or media content instance data. This is because two contiguous media content instances can share a cluster which contains data for both media content instances. is a block diagram depicting an example of when a user decides to record more than one media content instance before the last TSB shift depicted in . Program and are requested media content instances for designation as permanent recordings. In this example cluster now has a LinkedFiles value of 3. It is shared by the permanently recorded files of Program Program and the TSB file for TSB thus the 3 value . As shown in at the next shift point cluster is removed from the TSB and its LinkedFiles value is decremented to 2 by the device driver . Further the device driver allocates cluster as a replacement to the deallocated cluster cluster . At the next shift point illustrated by Cluster is deallocated from the TSB and its LinkedFiles value decremented while cluster is allocated.

As described earlier the user permanently records from the TSB by returning to any part of a media content instance in the TSB and selecting playback and then record from a remote device described below or alternatively from selecting record from a pre configured table or list entry in a user interface screen generated on a screen display. An example remote control device to provide input to the DHCT is illustrated in . Rewind and fast forward buttons enable a user to access buffered media content instances in the TSB . Record button enables the user to permanently record any media content instance buffered into the TSB as described below. Pause button enables the user to pause a media content instance or pause during a search for a particular media content instance. Playback enables the playback of a media content instance. Many alternative methods of providing user input may be used including a remote control device with different buttons and or button layouts a keyboard device a voice activated device etc. Further a user interface may present screen symbols corresponding to buttons on the remote control device which suggest recording functionality. The embodiments of the present invention described herein are not limited by the type of device used to provide user input.

The PVR application provides a user interface that assists the user in navigating to and between buffered media content instances. Specifically the user interface provides a display of the user s current position in a buffered media content instance e.g. TV program relative to the currently viewed time shifted media content instance. The currently viewed time shifted media content instance length is represented by a progress bar displayed at the bottom of the screen. Thus the progress bar indicates the media content instance time boundaries and is labeled with the media content instance information as will be described below. are screen diagrams that illustrate an example user interface screen display that can be presented on for example a television or other display device. These example screen displays depict a progression through three media content instances of a TSB including a short rewind between the beginning of one media content instance and the end of the media content instance before it. During rewind of the TSB one or more media content instances may be available for playback or recording depending on the length of time the channel was tuned.

First portion depicted with hash lines indicates the amount of the current media content instance that is buffered i.e. written to the TSB . Thus first portion provides the user with an indication as to what portion of the current media content instance is available for rewinding and fast forwarding. Second portion indicated with reverse hash lines indicates that the media content instance is not over as indicated also by the current time in the media content instance i.e. 9 58 pm . For example the user has rewound for 16 minutes. From the current time that places the status arrow at 9 58 minus 16 minutes or at 9 42 within the buffered media content instance Spin City which is reflected by time status . In other words if the user had entered into the room at 9 42 the screen display would show the same media content instance snap shot as it does now. If the user wants to permanently record the user preferably selects the record button on the remote device .

The next example screen display as depicted in is of a display of a media content instance buffered into the TSB before the most recent one and after rewinding it minutes or the whole media content instance length. As noted by title portion and status arrow and time status the user has rewound to the beginning of The Drew Carey Show. The first portion indicates that the entire show was buffered into the TSB . Bar arrows on each end of the progress bar suggest to the user that there are buffered media content instances accessible before and after The Drew Carey Show. Note current time of 10 32 PM further illustrating the ability of the PVR application to access and record buffered media content instances. To permanently record the user typically selects the record button on the remote control device at any point within the Drew Carey Show. Alternatively among other alternatives the user can select the record button while the media content instance is paused.

The next example screen display depicted in is of the display of a media content instance that was buffered just before the media content instance shown in . No rewinding of this media content instance has occurred yet as indicated by status arrow and the time status . As noted by the title portion this buffered media content instance is Who Wants To Be A Millionaire. Note that the progress bar shows only one bar arrow on the right hand side illustrating the fact that there are no other media content instances buffered in the TSB before Who Wants To Be A Millionaire. Also note that unavailable portion indicates the amount of the media content instance that is unavailable to permanently record or view. It would be unavailable for example if the channel with this media content instance were not tuned during this time. Again to permanently record the user preferably selects the record button on the remote control device during any point in Who Wants To Be A Millionaire.

As an alternative to rewinding to the media content instance in the TSB desired for permanently recording a user interface screen not shown may be presented that lists the media content instances currently in the TSB with a mechanism to select which of these media content instances the user desires to permanently record i.e. designate as permanent not part of the TSB . The list of media content instances can be ascertained from the media content instance guide data as described above.

Note that the scope of the preferred embodiments of the invention is not limited to systems where viewing conflicts may arise due to among other reasons the variety and quantity of viewing options. Systems with limited viewing options are also encompassed by the scope of the preferred embodiments.

The PVR application and device driver of the present invention can be implemented in hardware software firmware or a combination thereof. In the preferred embodiment s the PVR application and device driver is implemented in software or firmware that is stored in a memory and that is executed by a suitable instruction execution system. If implemented in hardware as in an alternative embodiment the PVR application and device driver may be implemented with any or a combination of the following technologies which are all well known in the art a discrete logic circuit s having logic gates for implementing logic functions upon data signals an application specific integrated circuit ASIC having appropriate combinational logic gates a programmable gate array s PGA a field programmable gate array FPGA etc.

The PVR application and device driver which comprise an ordered listing of executable instructions for implementing logical functions can be embodied in any computer readable medium for use by or in connection with an instruction execution system apparatus or device such as a computer based system processor containing system or other system that can fetch the instructions from the instruction execution system apparatus or device and execute the instructions. In the context of this document a computer readable medium can be any means that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device. The computer readable medium can be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus device or propagation medium. More specific examples a nonexhaustive list of the computer readable medium would include the following an electrical connection electronic having one or more wires a portable computer diskette magnetic a random access memory RAM electronic a read only memory ROM electronic an erasable programmable read only memory EPROM or Flash memory electronic an optical fiber optical and a portable compact disc read only memory CDROM optical . Note that the computer readable medium could even be paper or another suitable medium upon which the program is printed as the program can be electronically captured via for instance optical scanning of the paper or other medium then compiled interpreted or otherwise processed in a suitable manner if necessary and then stored in a computer memory.

Blocks in the flow chart of should be understood as representing modules segments or portions of code which include one or more executable instructions for implementing specific logical functions or steps in the process and alternate implementations are included within the scope of the preferred embodiment of the present invention in which functions may be executed out of order from that shown or discussed including substantially concurrently or in reverse order depending on the functionality involved as would be understood by those reasonably skilled in the art of the present invention.

It should be emphasized that the above described embodiments of the present invention particularly any preferred embodiments are merely possible examples of implementations merely setting forth a clear understanding of the principles of the inventions. Many variations and modifications may be made to the above described embodiments of the invention without departing substantially from the spirit of the principles of the invention. All such modifications and variations are intended to be included herein within the scope of the disclosure and present invention and protected by the following claims.

