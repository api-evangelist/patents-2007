---

title: Method and apparatus for planning air refueling for aircraft
abstract: A method, apparatus, and computer usable program code for planning refueling. In one advantageous embodiment, the apparatus includes an air refueling plug-in application capable of calculating air refueling routes for a formation of aircraft and a plurality of plug-in applications. A framework capable of providing framework services to the air refueling plug-in application and the plurality of plug-in applications is present. The apparatus also includes a first interface for the air refueling plug-in application and the plurality of plug-in applications to receive the framework services from the framework. The apparatus also has a second interface for the air refueling plug-in application and plurality of plug-in applications to provide services from one plug-in application to another plug-in application. The first interface and the second interface are independent of the air refueling plug-in application and plurality of plug-in applications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09437113&OS=09437113&RS=09437113
owner: THE BOEING COMPANY
number: 09437113
owner_city: Chicago
owner_country: US
publication_date: 20070802
---
This application claims the benefit of the filing date of corresponding U.S. Provisional Patent Application No. 60 922 278 entitled Advanced Arial Refueling Planning and On Board Management Systems filed Apr. 4 2007 which is incorporated herein by reference.

The present disclosure relates generally to an improved data processing system and in particular to a method and apparatus for processing data. Still more particularly the present disclosure relates to a computer implemented method apparatus and computer usable program code for planning air refueling for aircraft.

Air refueling is a process of transferring fuel from one aircraft to another aircraft during flight. The aircraft providing the fuel is referred to as a tanker aircraft while the aircraft receiving the fuel is referred to as a receiver aircraft. This air refueling process allows the receiver aircraft to remain airborne longer. In other words the receiver aircraft may extend its range or radius of deployment. A series of air refuelings can increase the range almost indefinitely with the range being limited by crew fatigue and engineering factors such as engine oil consumption. cargo or personnel. This balancing of the larger payload with less fuel maintains the maximum takeoff weight for an aircraft. Thus refueling in the air the receiver aircraft may extend its range and increase the payload that may be carried.

Typically a tanker aircraft providing fuel is especially designed for the task. The tanker aircraft is typically provided with a boom or flexible hose which trails behind the tanker aircraft. This boom or hose is used to make a physical connection with the receiver aircraft to be refueled.

Currently fuel cost is becoming an important factor in air refueling. Minimizing the use of fuel by the receiver aircraft is desirable. Further in some cases the amount of fuel available for a receiver aircraft may be limited. For example a limited number of tanker aircraft may be present to refuel one or more receiver aircraft. As a result it is desirable to maximize the efficient use of fuel by the receiver aircraft. In other instances limits to total fuel used by all aircraft receiver aircraft and tanker aircraft may be desirable. Various factors such as the speed of the aircraft the time at which refueling occurs and others are important for increasing fuel efficiency.

Therefore it would be advantageous to have an improved method apparatus and computer usable program product for planning air refueling.

The different advantageous embodiments provide a method apparatus and computer usable program code for planning refueling. In one advantageous embodiment the apparatus includes an air refueling plug in application capable of calculating air refueling routes for a formation of aircraft and a plurality of plug in applications. A framework capable of providing framework services to the air refueling plug in application and the plurality of plug in applications is present. The apparatus also includes a first interface for the air refueling plug in application and the plurality of plug in applications to receive the framework services from the framework. The apparatus also has a second interface for the air refueling plug in application and plurality of plug in applications to provide services from one plug in application to another plug in application. The first interface and the second interface are independent of the air refueling plug in application and plurality of plug in applications.

In another advantageous embodiment a method is present for planning air refueling. First data for a plurality of receiver aircraft is received to form received receiver data. Second data for a set of tanker aircraft is received to form received tanker data. A refueling plan for use between a starting point and a destination point for the plurality of receiver aircraft is generated using the received formation data and the received tanker data in which fuel efficiency is optimized for the plurality of the receiver aircraft and the set of tanker aircraft as a group.

A computer program product is present in another embodiment. The computer program product comprises a computer usable medium having computer usable program code for planning refueling. Computer usable program code is present for receiving first data for a plurality of receiver aircraft to form received receiver data. The computer usable program code includes computer usable program code for receiving second data for a set of tanker aircraft to form received tanker data. Computer usable program code is present for generating a refueling plan for use between a starting point and a destination point for the plurality of receiver aircraft using the received formation data and the received tanker data in which fuel efficiency is optimized for a set of aircraft as a group in the plurality of the receiver aircraft and the set of tanker aircraft.

In yet another advantageous embodiment a data processing system comprises a bus a communications unit connected to the bus a storage device connected to the bus wherein the storage device includes computer usable program code and a processor unit connected to the bus. The processor unit executes the computer usable program to receive first data for a plurality of receiver aircraft to form received receiver data receive second data for a set of tanker aircraft to form received tanker data and generate a refueling plan for use between a starting point and a destination point for the plurality of receiver aircraft using the received formation data and the received tanker data in which fuel efficiency is optimized for a set of aircraft as a group in the plurality of the receiver aircraft and the set of tanker aircraft.

The features functions and advantages can be achieved independently in various embodiments of the present disclosure or may be combined in yet other embodiments in which further details can be seen with reference to the following description and drawings.

With reference now to the figures and in particular with reference to exemplary diagrams of data processing environments are provided in which the advantageous embodiments of the present invention may be implemented. It should be appreciated that are only exemplary and are not intended to assert or imply any limitation with regard to the environments in which different embodiments may be implemented. Many modifications to the depicted environments may be made.

With reference now to the figures depicts a pictorial representation of a network of data processing systems in which the advantageous embodiments of the present invention may be implemented. Network data processing system is a network of computers in which embodiments may be implemented. Network data processing system contains network which is the medium used to provide communications links between various devices and computers connected together within network data processing system . Network may include connections such as wire wireless communication links or fiber optic cables.

In the depicted example server and server connect to network along with storage unit . In addition clients and connect to network . These clients and may be for example personal computers or network computers. In the depicted example server provides data such as boot files operating system images and applications to clients and . Clients and are clients to server in this example. Aircraft and also are clients that may exchange information with clients and .

Aircraft and are additional examples of clients that also may exchange information with servers and . These aircraft may be part of a formation and may include a tanker aircraft as well as a receiver aircraft in these examples. Aircraft and may exchange data with different computers through a wireless communications link while in flight or any other communications link while on the ground.

In these examples server server client client and client may be computers that provide processes to optimize air refueling for aircraft and . In these examples the aircraft form a formation for which air refueling is planned taking into account each aircraft in the formation. Network data processing system may include additional servers clients aircraft formations of aircraft and other devices not shown.

In the depicted example network data processing system is the Internet with network representing a worldwide collection of networks and gateways that use the Transmission Control Protocol Internet Protocol TCP IP suite of protocols to communicate with one another. Of course network data processing system also may be implemented as a number of different types of networks such as for example an intranet a local area network LAN or a wide area network WAN . is intended as an example and not as an architectural limitation for different advantageous embodiments.

Turning now to a diagram of a data processing system is depicted in accordance with an illustrative embodiment of the present invention. Data processing system is an example of a data processing system that may be used to implement servers and clients such as server and client in . Further data processing system is an example of a data processing system that may be found in aircraft in .

In this illustrative example data processing system includes communications fabric which provides communications between processor unit memory persistent storage communications unit input output I O unit and display .

Processor unit serves to execute instructions for software that may be loaded into memory . Processor unit may be a set of one or more processors or may be a multi processor core depending on the particular implementation. Further processor unit may be implemented using one or more heterogeneous processor systems in which a main processor is present with secondary processors on a single chip. As another illustrative example processor unit may be a symmetric multiprocessor system containing multiple processors of the same type.

Memory in these examples may be for example a random access memory. Persistent storage may take various forms depending on the particular implementation. For example persistent storage may contain one or more components or devices. For example persistent storage may be a hard drive a flash memory a rewritable optical disk a rewritable magnetic tape or some combination of the above. The media used by persistent storage also may be removable. For example a removable hard drive may be used for persistent storage .

Communications unit in these examples provides for communications with other data processing systems or devices. In these examples communications unit is a network interface card. Communications unit may provide communications through the use of either or both physical and wireless communications links.

Input output unit allows for input and output of data with other devices that may be connected to data processing system . For example input output unit may provide a connection for user input through a keyboard and mouse. Further input output unit may send output to a printer. Display provides a mechanism to display information to a user.

Instructions for the operating system and applications or programs are located on persistent storage . These instructions may be loaded into memory for execution by processor unit . The processes of the different embodiments may be performed by processor unit using computer implemented instructions which may be located in a memory such as memory . These instructions are referred to as computer usable program code or computer readable program code that may be read and executed by a processor in processor unit .

The computer readable program code may be embodied on different physical or tangible computer readable media such as memory or persistent storage .

Computer usable program code is located in a functional form on computer readable media and may be loaded onto or transferred to data processing system . Computer usable program code and computer readable media form computer program product in these examples. In one example computer readable media may be for example an optical or magnetic disc that is inserted or placed into a drive or other device to that is part of persistent storage for transfer onto a storage device such as a hard drive that is part of persistent storage . Computer readable media also may take the form of a persistent storage such as a hard drive or a flash memory that is connected to data processing system .

Alternatively computer usable program code may be transferred to data processing system from computer readable media through a communications link to communications unit and or through a connection to input output unit . The communications link and or the connection may be physical or wireless in the illustrative examples. The computer readable media also make take the form of non tangible media such as communications links or wireless transmission containing the computer readable program code.

The different components illustrated for data processing system are not meant to limit the architecture in which different embodiments may be implemented. The different illustrative embodiments may be implemented in a data processing system including components in addition to or in place of those illustrated for data processing system .

The hardware in may vary depending on the implementation. Other internal hardware or peripheral devices such as flash memory equivalent non volatile memory or optical disk drives and the like may be used in addition to or in place of the hardware depicted in . Also the processes of the illustrative embodiments may be applied to a multiprocessor data processing system.

The depicted examples in and above described examples are not meant to imply architectural limitations.

The different advantageous embodiments recognize that in planning refueling for an aircraft more than one aircraft must be taken into account when a formation of aircraft is involved in a particular flight or mission. Thus the different advantageous embodiments provide a computer implemented method apparatus and computer usable program code for optimizing air refueling for a formation of aircraft.

In some of the different advantageous embodiments an apparatus is present for planning refueling of aircraft. The apparatus includes an air refueling plug in application. This application is capable of calculating air refueling routes for a formation of aircraft. A formation of aircraft is two or more aircraft in these examples. In the different advantageous embodiments a formation is a group of aircraft that is part of a refueling plan. The refueling plan includes all routes and their legs and all aircraft that are being jointly planned. This formation also includes legs where the aircraft are in close proximity to each other as well as legs where the aircraft are flying separate legs. The apparatus also includes other plug in applications. A framework is present in the apparatus that is capable of providing services to the air refueling plug in application and the other plug in applications.

In these examples a service is a result of data or other information that is provided in response to a request that is made by a plug in application. Further the apparatus includes a first interface used by the air refueling plug in application and the other plug in applications. This interface is used to receive framework services from the framework. Further a second interface is present for the air refueling plug in application and the pull out of the plug in applications to provide services from one plug in application to another plug in application.

For example the framework may provide information or services to the air refueling plug in application or other plug in applications. As another example a particular plug in application in the plurality of plug in applications may provide services to the air refueling plug in application.

In another advantageous embodiment a method for planning air refueling is present in which data is received for receiver aircraft to form received receiver data. Data also is received for a set of tanker aircraft to form received tanker data. The set of tanker aircraft is a set of one or more tanker aircraft in these examples. The first and second data is used to generate a refueling plan for use between the starting point and a destination point for the plurality of the receiver aircraft.

This refueling plan is generated in a manner to optimize a parameter such as fuel efficiency for the receiver and tanker aircraft as a group. In other words the fuel efficiency is optimized for fuel usage for a set of aircraft as a group in the plurality of the receiver aircraft and the set of tanker aircraft rather than individually. The set of aircraft is a set of one or more aircraft that are selected from the receiver and tanker aircraft. The set of aircraft may be for example all of the receiver and tanker aircraft. The set of aircraft also may be one or more receiver aircraft. As another example the set of aircraft may be a particular receiver aircraft and a selected tanker aircraft. As a result one receiver aircraft may have a lower fuel efficiency than others such that the fuel usage for the receiver and tanker aircraft as a group is optimized to be as low a usage as possible.

Other types of optimizations in addition to or in place of lower fuel usage may be used depending on the implementation. For example speed or arrival at a particular time may be other examples of optimizations that may be taken into account.

In optimizing the fuel usage in these examples other factors also may be taken into account. For example in generating the refueling plan a certain time of arrival or in route time may be required for the formation as a group. Thus the fuel usage is optimized such that the lowest amount of fuel is used in meeting the arrival time or in flight time that is required. As a result the fuel usage may not be as low as compared to a refueling plan that does not take into account or give any priority or weight to other factors other than minimizing fuel usage for the group of aircraft. In this manner the method apparatus and computer usable program product in the different embodiments may be used to manage the refueling of aircraft.

Turning now to a diagram illustrating air refueling application components is depicted in accordance with an advantageous embodiment. In this example air refueling application includes framework components and plug in applications . The different components within framework components make up a framework for air refueling application . The different components illustrated represent an executable program or process for a library.

In these examples framework components include aircraft en route chart objects user interface objects mission objects utility and framework . Plug in applications include in these examples air refueling plug in application weather plug in application math plug in application rehearsal plug in application air refueling tracks plug in application trip kit plug in application aircraft communication plug in application global positioning system GPS plug in application performance model plug in application flite track plug in application airports plug in application and profile plug in application .

In this example framework controls display and functionality for air refueling application . Framework provides interfaces to services that may be provided by other components within framework components or in plug in applications . A plug in application is a computer program or process that interacts with another computer program or process. A plug in application may provide or add functionality to an overall application. A plug in application typically provides a certain or specific function on demand.

For example plug ins may provide access to weather information calculations or specific types of data such as aircraft models. Plug in applications may interface with other plug in applications through a set of interfaces such as an application programming interface. Of course any type of interface may be used in which the plug in application and the other applications use a protocol to exchange data between plug in applications and the application.

Framework may provide features such as creation and editing of user waypoints on an en route chart searching for navigation data objects and return properties about those objects and provide features to build a route using plain language routing. Further framework also may allow for an ability to configure the particular look and feel of an application. In these examples framework allows for different plug in applications to manipulate tool bars change of views and create their own views. Framework also allows for the display creation and editing of route files. The functionality to set anchor points and obtain distance in headings between points is provided through framework .

Further displaying flight information in response to receiving global positioning signal is an example of another feature that may be provided by framework . Also flight information may be customizable and displayed as a transparent box over an en route chart through framework . Additionally interfaces to obtain data such as aircraft position and map orientation heading up or north up features may be provided through framework .

Aircraft is a component in framework components that manages and sets aircraft properties for use in generating a route for air refueling. En route chart controls interaction with a map rendering and drawing engine not shown . This map rendering and drawing engine is used to provide the processes necessary to generate an en route chart to display routes for one or more aircraft as well as the location of these aircraft on the map. In addition en route chart controls access to en route data. In these examples the en route data includes data such as the position of the aircraft the speed of the aircraft as well as other information.

Objects is a component that contains common objects in the application. Examples of objects are chart object LatlonAlt and RangeBearing.

User interface objects contain common user interface objects that may be used to provide a user interface for air refueling application . User interface objects may include for example different objects for windows controls and images. Mission objects contain objects that are used for routing in generating object overlays on an en route chart. Utility contains general utility classes. In these examples these classes include for example unit conversion simple math functions and menu interfacing classes.

Air refueling plug in application controls manages calculates and displays air refueling data in these examples. Further air refueling plug in application also contains air refueling algorithmic processes. The air refueling processes are used to plan the formation route with associated air refueling points. The processes within air refueling plug in application perform calculations with data provided by other plug in applications and framework . This data includes for example aircraft properties refueling rules routes divert bases performance and other information of data.

The processes in this particular component allow the routes for multiple aircraft of different types in a formation to be optimized by various parameters such as fuel time and flight path in a single formation.

Further air refueling plug in application interfaces with framework to generate displays for air refueling data. These displays include for example presentations of aircraft properties routes generation of a formation display of aircraft information and display of air refueling events.

Weather plug in application provides interfaces to weather providers and data access methods. This component may be implemented or used by air refueling plug in application to obtain weather information such as wind temperature and pressure for a specific location and altitude. Further this component also may allow access to real time or current weather data from different providers or sources. In these examples this plug in application does not store data but provides a mechanism or interface to access weather data from other sources.

Math plug in application contains functions used to perform different types of calculations. For example math plug in application includes functions to perform atmospheric calculations that are used by an air refueling algorithm present within air refueling plug in application . Next rehearsal plug in application allows for traversing of a planned formation to see fuel states offloads and other fuel events as they may occur. This particular component allows a user to manipulate a plan through the tables and an en route chart to force recalculations and what if scenarios. In other words this particular plug in application may be used to simulate different events for the air refueling plan.

Air refueling tracks plug in application is a component that allows for the display of air refueling tracks from different types of data such as digital aeronautical flight information file DAFIF data to be rendered on an en route chart. This type of information is up to date aeronautical data including for example information on airports airways air spaces navigation data and other information relevant to flying. Trip kit plug in application provides printing functionality to output data such as routes weather and charts.

Aircraft communication plug in application provides interfaces to retrieve and store data from various communication sources. These sources include for example an aircraft computer or flight system and secure radios. Messages from these systems are parsed into a data stream and stored on the system for generating real time updates to a refueling plan generated by air refueling plug in application . In other words aircraft communication provides a source of dynamic or current data that may be used to dynamically change an air refueling plan. This particular component provides for current or real time type data that allows for changes to a refueling plan to be dynamically made as new data is received.

Global positioning system GPS plug in application is a component that provides global positioning information. In other words this component provides location information for an aircraft. Further this component also may provide speed and directional information. Of course other types of plug in applications may be used to provide location information other than global positioning system plug in application depending on the particular implementation. For example information may be obtained from an inertial navigation system which may use angular accelerometers linear accelerometers or gyroscopes.

Performance model plug in application provides interfaces to models for different aircraft. Further this particular plug in application provides functions to calculate and interpret different performance tables for different aircraft models. In addition performance model plug in application provides performance data to a refueling process within air refueling plug in application to optimize a set of one or more parameters for multiple aircraft. This set of parameters may be a set of one or more parameters. The parameters may include for example fuel usage time or flight path. One or more of these parameters and other parameters may be optimized depending on the particular implementation.

Next flite track plug in application provides for tracking of multiple aircraft from a variety of different data streams. This plug in is used to render data on an en route chart such as that provided by en route chart . Airports plug in application contains an airport list and provides data to other components about available airport selections and charts. Profile plug in application provides a profile view to the interface and allows for querying of information in this particular view. In these examples a profile view is a graph of the altitudes of the ground and the route along the path of the route.

The different components within framework components and plug in applications are described as an example of components that may be used to generate routes for air refueling with plug in applications in air refueling application . The representation of these components and their functions in are not meant to limit the manner in which different plug in applications may be implemented.

For example a particular plug in may include multiple functions depending on the particular implementation. In one example access to data such as data from aircraft and data used to track aircraft may be provided in a single plug in application rather than through aircraft communication plug in application and flite track plug in application .

Additionally depending on the particular implementation and data needed for a particular type of air refueling process to calculate air refueling routes other plug in applications may be used in addition to or in place of the ones illustrated in plug in applications . Moreover framework components may include components in addition to or in place of those illustrated in framework components .

The different components illustrated in framework components in air refueling application are provided as an example of a framework in which an interface is provided to different plug in applications to obtain services from the framework. Further plug in applications may use a second interface in framework to provide services to other plug ins that are used with the framework.

The interfaces in framework may be implemented using a number of different mechanisms. For example a plug in may communicate with other plug ins and with the framework using an application programming interface. Any type of interface in which a standard or expected format to requests and responses to those requests may be implemented to provide the services in these examples.

With air refueling application a refueling plan may be created or formed for a formation of aircraft in which different parameters are optimized. These parameters include fuel usage time of arrival or distance. These parameters may be optimized for the formation as a whole rather than individual aircraft. Further with air refueling application simulations of missions may be made using simulated or historical data. Further air refueling application may be employed in a dynamic manner in which data is received from the different aircraft in the formation as the mission or flight proceeds.

Additionally updates to other types of data such as weather information also may be received based on real time or where the most current data available for these and other factors in air refueling plans. Based on receiving new data as the flight occurs air refueling application may modify or change the air refueling plan generated for the formation to take into account changes.

With reference now to a diagram illustrating data flow components used to create an air refueling plan is depicted in accordance with an advantageous embodiment. The different plug in applications in framework components described in are examples of framework components and plug in applications in air refueling application in . is a specific example of data flow that may occur within an air refueling system such as air refueling application in . Examples of air refueling calculations the sources of data and the providers of data are depicted in these examples.

In this example framework is an example of a framework containing components such as framework components in . Framework provides an interface to plug in applications such as air refueling plug in application weather plug in application aircraft communication plug in application global positioning system plug in application and performance plug in application .

Air refueling plug in application sends a request to framework for one or more services. In these examples multiple services may be requested by air refueling plug in application . In these examples data such as weather data aircraft data global positioning system data and performance data are provided to air refueling plug in application through framework . More specifically other plug in applications provide this information to air refueling plug in application through an interface in framework . Further framework also provides other services such as route data en route data and divert data .

In these examples weather data is provided by weather plug in application . This plug in application requests weather data from a source such as weather controller . Weather controller may provide weather data from sources such as weather feed . Weather controller is a source that may collect the data in various formats and parse the data and place it into a common format for storage in a weather data depository. Weather data is used by air refueling plug in application for different fuel consumption calculations and generating an air refueling route. The data used includes for example wind pressure and temperature data at different altitudes.

Weather data may be obtained from a single source or multiple sources depending on the particular implementation. This data may be static or dynamic data. Static data is historical or data that has been collected for past times. Dynamic data in these examples is current data real time data or forecast data. An example is data obtained from a real time satellite feed. Weather plug in application may request weather data from weather controller and return this information to air refueling plug in application through an interface in framework .

Aircraft communication plug in application receives aircraft data and may store the data in a data store or stream the data to a plug in such as air refueling plug in application through an interface in framework . Aircraft data contains data about an aircraft. This data may be obtained by aircraft communication plug in application from internal data feed located in the aircraft in which an application executes or from external data feed . External data feed may provide data about other aircraft in the formation. The data in aircraft data includes for example speed heading fuel state fuel usage tail number nationality transfer rate transfer degradations latitude and longitude.

Global positioning data may be obtained from global positioning system listener . Global positioning system listener may obtain location information from external data feed or internal data feed . Global positioning system listener may retrieve and search for global positioning system data in a format specified or requested by global positioning system plug in application . Global positioning system data may be stored or streamed to global positioning system plug in application for use by air refueling plug in application . As with other plug ins global positioning system plug in application sends data to air refueling plug in application through an interface in framework .

Performance plug in application obtains performance data for specified aircraft. Performance data in these examples contains data about aircraft models and how the aircraft perform under certain conditions. Performance data may be stored on a remote storage or local storage depending on the particular implementation. This data is sent to air refueling plug in application through an interface in framework .

In these examples route data en route data and divert data may be provided to air refueling plug in application through another interface in framework . Route data contains routes associated with points used by the formation for the aircraft in which air refueling plug in application is generating an air refueling plan. En route data contains navigational vector points in an en route navigational database. This information is used by air refueling plug in application to perform calculations in flight planning. Divert data contains information about airfields used for divert bases in a formation of aircraft.

In these examples this type of data may be obtained from any external source. The divert bases found in divert data are used by air refueling plug in application for use in air refueling calculations. This information may include a number of different parameters such as for example maintenance facilities runway length fuel type location clearances approaches and other information. Divert data is provided to air refueling plug in application through an interface in framework in these examples. In these examples air refueling plug in application also may receive data from other sources such as from user input.

Performance override data may be inputted through an interface to override characteristics that may be found in a performance model of an aircraft in performance data obtained through performance plug in application . This interface to enter performance override data is found in air refueling plug in application in these examples.

Further air refueling plug in application may use formation data . Formation data is data unique to a specified formation. This data is specific to each particular aircraft selected for a formation. Formation data may include for example a compiled route containing calculated air refueling points on the route.

Also included in formation data is for example calculated on load and offload events for a formation. Other types of data found in formation data include for example events for time location maps messages and fuel events. Formation data also may include formation information such as mission name communication frequency and any other notes.

In these examples formation data may be stored in a file that is input and received for use by air refueling plug in application . Other information in performance data may include properties on how the formation is rendered on a map. This information is received directly by air refueling plug in application through interfaces provided by this component in these examples.

As can be seen in real time or current data may be received by the different plug in applications for use by air refueling plug in application . This streaming of information while the flight or mission occurs allows air refueling plug in application to create modifications to an air refueling plan for a formation of aircraft. Further this type of data also may be used to run simulations for different aircraft over different conditions.

Turning now to a diagram illustrating message flow between a plug in and a framework to obtain services from the framework is depicted in accordance with an advantageous embodiment. This series of message flows is depicted for air refueling calculations made by air refueling plug in application . In this example air refueling plug in application is the same as air refueling plug in application in .

As illustrated air refueling plug in application may obtain services from other plug ins through framework . In the depicted example the other plug ins from which services may be obtained are performance model plug in application and weather plug in application . Framework is the same as framework in . Performance model plug in application and weather plug in application are the same as weather plug in application and performance model plug in application in in these examples.

The message flow begins with air refueling plug in application sending a request to framework for a performance model message M . In response framework returns an interface to performance model plug in application to air refueling plug in application message M . The interface is returned to a plug in application in these examples by returning a pointer or address to the interface. In response to receiving the interface to performance model plug in application air refueling plug in application sends a request to performance model plug in application to calculate fuel needs message M .

In this example in identifying the fuel needs performance model plug in application requires weather data and requests a service to obtain weather information from framework message M . In response to receiving the request framework returns an interface to weather plug in application to performance model plug in application message M . Upon receiving the interface to weather plug in application performance model plug in application requests wind information from weather plug in application message M . Weather plug in application returns a result containing the wind information message M . With this information performance model plug in application calculates the fuel needs and returns the result to air refueling plug in application message M .

Turning now to a diagram illustrating the presentation of air refueling information is depicted in accordance with an advantageous embodiment. In this example display is an example of air refueling information that may be presented in the different advantageous embodiments. Display presents various types of air refueling information generated using the different processes in the advantageous embodiment.

Section in display provides a list of tankers in column and a list of receiver aircraft in column . This information in section also includes the onload amount in column as well as estimated time of arrival for start and end points in refueling in columns and . Further the altitude for these particular points also is found in column .

Further display also presents current information regarding the different tanker aircraft and receiver aircraft in section . Column provides tail numbers for the aircraft. Column presents the type of aircraft. The percent of fuel is displayed for each aircraft in column . Offloadable fuel fuel that may be used to refuel another aircraft is presented in column . Divert information is shown in columns and . Information such as altitude and airspeed is shown in columns and . Other air refueling information such as maximum divert time next fuel event and next onload is shown in columns and . The fuel percentage in column is shown as a graphical bar to more easily identify critical situations with respect to fuel consumption.

Section illustrates the different routes and divert points for a portion of a route for which an air refueling plan has been generated. Section presents chart information. In this manner display provides a user with an ability to view air refueling information in a manner that allows for identification of a status of multiple aircraft in a formation.

Turning now to a flowchart of a process for generating an in trail air refueling plan is depicted in accordance with an advantageous embodiment. An in trail air refueling plan is one in which receiver aircraft and tanker aircraft stay together for the entire flight. The process illustrated in may be implemented in an air refueling plug in application such as air refueling plug in application in .

The process begins by making a formation operation . In this example the formation is made by selecting aircraft for the formation. In particular two or more aircraft are selected to form a formation of aircraft in these examples.

Thereafter a formation route object is made from the individual routes for each aircraft in the formation operation . In these examples a formation route object holds and performs operations on a graph formed by nodes and legs. The object is a part of a class that has a list of pointers to all start nodes in the graph for a formation. The functions may include for example planned air refueling calculating diverts or calculating fuel. The formation route object contains all of the nodes and legs for the different aircraft in the formation as created in operation .

The process then initializes the formation route object and the hose manager operation . This operation establishes a list of tankers and receiver aircraft for the formation route object. The hose manager initialized by this operation is used to determine all the hoses that are available and to which tanker aircraft the different hoses belong. Further this operation is used to set the type of air refueling that is to be performed. The air refueling may be for example in trail or rendezvous.

Thereafter the process optimizes the formation route object operation . In this operation the process corrects any climbs or descents that are too steep. This operation is used to identify an optimal speed on all of the different legs. These legs include the legs for a single aircraft as well as legs for multiple aircraft in the formation. This operation is used to establish a joint rate of climb and descent that are compatible with all of the aircraft that are present in a particular leg.

Afterwards old air refueling points are cleared operation . This operation deletes all waypoints in the formation route object that are of any type of air refueling waypoints. In other words any air refueling waypoints that were present in the original routes that were combined into the formation route object are cleared or deleted. Next the process calculates divert change points operation . This operation is used to identify locations and add divert change points to the formation route. A divert change point is a waypoint that specifies that the current divert airport is changing.

After calculating the divert change points an unprocessed receiver aircraft is selected from the formation operation . Thereafter a first receiver abort point is calculated operation . The receiver abort point is a waypoint at which a receiver aircraft must terminate its attempt to attach to a hose and proceed to the current divert airport. This abort point requires the receiver aircraft to abort even if the receiver aircraft has attached but for some reason no fuel flow has yet been established. In other words operation determines the point on the route from which the receiver aircraft can make it to the current divert airport and still meet reserve requirements for fuel. This waypoint is added to the formation route object at the appropriate location.

A divert route also is calculated and constructed from the receiver abort point to the current divert airport. The fuel is calculated along this route and reserves at the divert airport are verified. In this manner the exact location of the receiver abort point may be identified by a combination of estimation and iteration of calculations.

The process then requests a hose allocation operation . In operation the process calls a hose manager to request a hose allocation associated with a receiver abort point. The hose manager determines if a hose is available and makes a new allocation object on the hose and returns a pointer to the hose if one is available. If a hose is unavailable the hose manager may try to allocate a hose ahead of that time or it may return a null response if no hose can be allocated. Further the hose allocation takes into account the previous hose allocations. The duration of a hose allocation may be determined based on an aircraft s fuel state for transferring a specific amount of fuel. Further the proximity of the destination also is taken into account by the hose manager.

The process then places a start and stop point operation . This operation creates begin and end waypoints and inserts these waypoints into the formation route in the proper place based on the hose allocation time. A begin waypoint is a point at which fuel transfer starts. This waypoint is the location and time where an air refueling plan calls for the fuel transfer to begin. An end waypoint is a waypoint at which the fuel transfer stops. At this point the receiver aircraft should disconnect. The end waypoint may change if the begin waypoint is early or late.

The process then optimizes the down stream altitudes and air speeds operation . This operation re optimizes the formation route downstream of the just inserted beginning waypoints for the hose allocation. The weight of the receiver aircraft and the tanker aircraft may change resulting in a different optimum speed and possibly a different altitude.

The process then determines whether additional receiver abort points should be calculated operation . then steps down the remaining route to calculate an additional receiver abort point. It may be that no additional abort points are needed or it may be determined that another one is needed. If an additional receiver abort point is needed the additional receiver abort point is calculated and added into the formation route operation . The process then returns to operation to request a hose allocation. If an additional receiver abort point is not needed the process then determines if more unprocessed receiver aircraft are present operation . If additional receiver aircraft are present the process returns to operation .

A determination is made as to whether additional unprocessed receiver aircraft are present in the formation route object operation . If additional unprocessed receiver aircraft are present the process returns to operation to select another unprocessed receiver aircraft for processing. If no additional unprocessed receiver aircraft are present the process continues at operation .

Otherwise the process recalculates the fuel needed operation . This operation recomputes the fuel burn quantities across the entire formation route. The operation does not re optimize altitudes or speeds. The process then checks all reserves operation . In this operation the process checks all of the specified fuel amounts to determine whether they were met for all legs of the route for the formation. This check includes all divert route legs and receiver abort point divert route legs.

The process then converts the formation route back into individual routes operation with the process terminating thereafter. This operation is an optional one in which the process may extract each aircraft individual route from the formation route. The individual routes may then be sent to the flight management system for each aircraft.

With reference now to a flowchart of a process for generating a rendezvous air refueling plan is depicted in accordance with an advantageous embodiment. A rendezvous air refueling plan is one in which tanker aircraft are based at another airport and will rendezvous or join up with receiver aircraft at some point during the mission. In these examples the tanker aircraft fly less distance than the receiver aircraft in the formation. The process illustrated in is implemented in the software component the air refueling plug in application in .

The process begins by making a formation operation . Operation is used to identify the aircraft that will be in the formation. Thereafter a formation route object is made operation . In this operation existing routes for the different aircraft in the formation are combined into a formation route object. This formation route object contains the information for the route used for the air refueling calculations in these examples.

Next the process initializes the formation route object and a hose manager operation . This operation is used to establish the list of tanker aircraft and receiver aircraft in the formation route object. The hose manager is used to determine all the hoses that are available and which tanker aircraft they belong to. This portion of the process also is used to set the type of air refueling planning that is to occur.

Thereafter the process optimizes the formation route object for altitudes and air speed operation . Next old air refueling points are cleared from the formation route operation . This operation is used to clear any waypoints that are for air refueling. This operation removes prior air refueling waypoints generated for the individual routes prior to making the formation route.

The process then calculates divert change points operation . This operation is used to determine the locations of divert change and add these identified divert change points to the formation route object. The rendezvous air refueling plan is created operation . Thereafter the process recalculates its fuel and estimated time in route operation .

The process then checks reserves operation . This operation checks to ensure that all of the specified reserve fuel amounts were met on all legs of the route in the formation route object. This includes all divert route legs and receiver abort point divert route legs. Then the process converts the formation route object back to the individual routes for each of the aircraft in the formation operation with the process terminating thereafter.

Turning now to a flowchart of a process to generate air refueling points for a rendezvous air refueling plan is depicted in accordance with an advantageous embodiment. The process illustrated in is a more detailed description of operation in .

The process begins by making a split software object of time T 0 operation . The split object holds the value of when air refueling operations switch from using one tanker to the second tanker. As a result all air refueling requests by receivers before the split time will be serviced by the first tanker and all requests after the split time will be processed by the second tanker. Ultimately the fuel used by all aircraft will be compared between all of the split objects and split object with the least total fuel burn will be selected.

Thereafter an air refueling plan is generated with the first tanker used before the split time and the second tanker used after the split time operation . This particular operation is described in more detail below with reference to .

Next the process creates a list of splits by placing a split between an air refueling bracket and changing the order of the tanker aircraft in each split operation . Each split in the list is placed in or takes the form of a split object in these examples. In operation a list of all possible split times to be tried is generated by choosing split times between air refueling brackets. The order of tankers is changed by reversing order in this particular operation. Each split object generated has information needed to define an air refueling plan in these examples.

The process then cleans up the formation route object operation . In this particular operation the air refueling points are deleted from the formation route so that a function to plan air refueling may be called. In these examples this air refueling function is described in more detail with reference to below.

Then an unprocessed split object is selected from the split objects created in operation operation . Thereafter the process calls an air refueling function operation . This air refueling function is described in more detail below with respect to . After the results are returned from the call the total fuel used in the split object is recorded operation . The split object contains information generated from calling the air refueling function.

Next a determination is made as to whether an additional unprocessed split object is present operation . If an unprocessed split object is present the process returns to operation to select another unprocessed split object for processing.

Otherwise the process selects a split object with the minimum fuel burn operation . Thereafter the air refueling function is called operation . This function is called again to regenerate the solution associated with the best split object identified. The process then terminates.

Turning now to a flowchart of a process for generating an air refueling plan is depicted in accordance with an advantageous embodiment. The process illustrated in is a more detailed description of an air refueling function that is called by operations and in .

The process begins by setting a split time operation . The split time is set by extracting a split time the tanker aircraft to be used before the split time and the tanker aircraft to be used after the split time from the split object.

Afterwards all old refueling points are cleared operation . An unprocessed receiver aircraft is selected from the receiver aircraft in the formation operation .

After selecting a receiver aircraft the process calculates a receiver abort point for the selected aircraft operation . Next the process requests a hose from a tanker aircraft based on the estimated time en route and the split time operation . Next begin and end waypoints are placed into the formation route object for the receiver aircraft operation . In operation the begin and end waypoints are created and inserted into the formation route in the location based on the hose allocation time identified in operation .

The process then optimizes the downstream altitude and airspeeds operation . In this operation these parameters are re optimized for the formation route downstream of the begin and end waypoints placed into the formation route in operation . Thereafter a determination is made as to whether another receiver abort point should be calculated operation . The determination in operation is made by identifying whether the end of the route has been reached. If additional receiver abort points should be calculated the process returns to operation as described above.

In determining a receiver abort point location and a route the process determines the point on the route in the formation for which the receiver can make it to a current airport and still meet reserve requirements. This point is identified as the receiver abort point. This point is added to the formation route at the appropriate location. Then a divert route is constructed from this receiver abort point to the current divert airport. Fuel is calculated along this route and reserves at the divert airport are verified.

With reference again to operation if another receiver abort point is not to be calculated this means that all of the air refueling points have been identified for the particular receiver aircraft. Then a determination is made as to whether any additional unprocessed receiver aircraft are present operation .

If an additional unprocessed receiver aircraft is present in the formation the process returns to operation . Otherwise the process checks reserves operation . This operation checks that all of the specified fuel amounts are met on all legs of the route including all divert route legs and receiver abort point divert route legs.

Then the process calculates the total fuel used and saves the value in the split object operation . If the plan does not work with the calculations executed in this process a selected high value or null value may be recorded to indicate a failure to generate an air refueling plan. The solution per the current split object is then marked as a failure and it is not considered when choosing the split object that is best that is the least total fuel burned. In these examples the plan generated by the process does not work if the diverts or the destination does not meet fuel reserves. For example insufficient fuel may be present to reach the destination or to meet the divert requirements during flight.

Turning now to a flowchart of a process for converting the formation route object back into individual routes is depicted in accordance with an advantageous embodiment. The process illustrated in may be implemented in a software component such as air refueling plug in application in .

The process begins by selecting an unprocessed aircraft from the formation route object for processing operation . Thereafter a start node is located for the selected aircraft operation . A primary leg of the aircraft that has not been processed is found from the node operation . A primary leg is a leg along the route of the aircraft from the departure airport to the destination. Specifically the primary leg is not a divert route or an alternate route or another aircraft s route out of the node.

Thereafter the leg is copied to a route segment and connected to the end of the single aircraft route operation . Next The node is advanced to the end node for the leg operation . Then a determination is made as to whether the destination has been reached for the aircraft operation . If the destination has not been reached the process returns to operation . In this manner the process walks down the route to the destination node copying each leg along the way onto the individual route. Divert and alternate routes are ignored so the individual route is a simple linear path from the departure to the destination airport.

If the destination has been reached for the aircraft the processing of the current aircraft has completed. Thereafter a determination is made as to whether additional unprocessed aircraft are present in the formation route object operation . If additional unprocessed aircraft are present the process returns to operation . Otherwise all of the aircraft have been processed and placed into individual routes and the process terminates.

Turning now to a flowchart of a process for optimizing altitude is depicted in accordance with an advantageous embodiment. In these examples the optimization of the altitude may be performed using a software component such as air refueling plug in application in . The optimizations performed in the flowchart in are examples of optimizations that may be performed in operations in in and operation in .

The process begins by selecting an unprocessed leg in the formation route object operation . Thereafter the altitude is set equal to zero for the selected leg operation . An evaluation of the fuel burn or usage is made and recorded in a list for this altitude operation . The altitude is incremented operation . The altitude may be incremented using different values. For example the altitude may be incremented at one foot ten feet or fifty feet each time. The actual value used depends on the particular implementation.

Thereafter a determination is made as to whether the aircraft ceiling has been reached for the aircraft operation . If the aircraft ceiling has not been reached the process returns to operation .

With reference again to operation if the aircraft ceiling has been reached the best altitude is selected from the list operation . In these examples the best altitude is the altitude having the best burn or fuel usage rate.

Next the leg is set using the selected altitude operation . Then a determination is made as to whether additional unprocessed legs are present operation . If additional unprocessed legs are present the process returns to operation to select another unprocessed leg from the formation route object. Otherwise the process terminates.

The flowcharts illustrated above for creating air refueling plans for a formation involve a number of different operations for calculating fuel usage for individual aircraft in the formation. Other operations also are performed with respect to individual aircraft such as identifying a divert point or fuel reserves. Operations directed at individual aircraft may be performed using any desired process or calculation to identify fuel usage and hose allocation. These different functions may be implemented in different manners depending on the particular implementation.

The different advantageous embodiments combine calculations normally performed for individual aircraft into a formation in which parameters such as fuel usage are taken into account for the entire formation rather than the individual aircraft in the formation.

The flowcharts and block diagrams in the different depicted embodiments illustrate the architecture functionality and operation of some possible implementations of apparatus methods and computer program products. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified function or functions. In some alternative implementations the function or functions noted in the block may occur out of the order noted in the figures. For example in some cases two blocks shown in succession may be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved.

Thus the different advantageous embodiments provide a method apparatus and computer usable program code for planning refueling of aircraft. Different embodiments include an air refueling plug in application that is capable of calculating air refueling routes for formation of aircraft. Further a framework is capable of providing framework services to the air refueling plug in application. Further this framework allows for other plug in applications to interact with the framework and provide services to the air refueling plug in application. The apparatus may include a first interface for the air refueling plug in application and the other plug in applications to receive framework services from the framework. A second interface also may be present for the air refueling plug in application and other plug in applications to provide services between the different plug in applications.

Further in different advantageous embodiments air refueling planning may be performed using first data for receiver aircraft and second data for tanker aircraft. A refueling plan is generated for use between starting point and a destination point for the receiver aircraft using the first and second data. The method optimized is the fuel efficiency for the receiver and tanker aircraft as a group. Of course other parameters may be optimized in place of or in addition to fuel efficiency in these examples.

In this manner the method apparatus and computer usable program product in the different embodiments may be used to manage the refueling of aircraft. The flight plans generated in the different embodiments may be used to plan refueling operations for aircraft. In addition the different embodiments may be used to dynamically manage the refueling of aircraft during a flight or mission. Also simulations of refueling operations may be run to plan future refueling operations.

The different embodiments can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. One embodiment may be implemented in software which includes but is not limited to firmware resident software microcode or other forms.

Furthermore the different embodiments can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any tangible apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or a propagation medium. The medium also may be physical medium or tangible medium on which computer readable program code can be stored. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk an optical disk or some other physical storage device configured to hold computer readable program code. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

Further a computer storage medium may contain or store a computer readable program code such that when the computer readable program code is executed on a computer the execution of this computer readable program code causes the computer to transmit another computer readable program code over a communications link. This communications link may use a medium that is for example without limitation physical or wireless.

A data processing system suitable for storing and or executing program code will include at least one processor coupled directly or indirectly to memory elements through a system bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers. Network adapters may also be coupled to the data processing system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modem and Ethernet cards are just a few of the currently available types of network adapters.

The description of the different advantageous embodiments has been presented for purposes of illustration and description and is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art. Further different advantageous embodiments may provide different advantages as compared to other advantageous embodiments. The embodiment or embodiments selected are chosen and described in order to best explain the principles of the invention the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

