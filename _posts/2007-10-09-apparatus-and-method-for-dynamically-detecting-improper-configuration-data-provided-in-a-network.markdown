---

title: Apparatus and method for dynamically detecting improper configuration data provided in a network
abstract: A system (such as a process control system or communication system) includes one or more sources of configuration data (such as one or more BootP or DHCP servers). A testing mechanism transmits one or more requests for configuration data over a network. One or more sources of configuration data may respond to the requests, such as by providing configuration data (like IP addresses or NTP parameters) to the testing mechanism. The testing mechanism uses the response(s) to identify problems with the sources of configuration data. For example, if responses are received from multiple sources of configuration data, the testing mechanism could generate a notification indicating that a problem exists when the responses contain inconsistent configuration data. Also, if no responses are received, the testing mechanism could generate a notification indicating that a problem exists since no configuration data has been received. Any other or additional problems could also be detected.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07949905&OS=07949905&RS=07949905
owner: Honeywell International Inc.
number: 07949905
owner_city: Morristown
owner_country: US
publication_date: 20071009
---
This disclosure relates generally to communication networks and more specifically to an apparatus and method for dynamically detecting improper configuration data provided in a network.

Various communication networks such as data networks often dynamically provide configuration data to various devices operating in the networks. For example a bootstrap protocol BootP server is often used to distribute network addresses and other information to devices operating in a network. As a particular example processing facilities are often managed using process control systems. Example processing facilities include manufacturing plants chemical plants crude oil refineries and ore processing plants. Among other operations process control systems typically manage the use of motors valves and other industrial equipment in the processing facilities. In a conventional process control system a BootP server can be used to distribute Internet Protocol IP addresses and other configuration data to controllers and other devices in the process control system.

This disclosure provides an apparatus and method for dynamically detecting improper configuration data provided in a network.

In a first embodiment a method includes transmitting one or more requests for configuration data over a network. The method also includes receiving one or more responses from one or more sources of configuration data where each of the responses contains configuration data. In addition the method includes generating a notification indicating whether a problem associated with the one or more sources of configuration data is detected based on the one or more responses.

In particular embodiments multiple responses from multiple sources of configuration data are received. Also the notification is generated indicating a problem is detected based on a determination that the configuration data in one response from one source of configuration data is inconsistent with the configuration data in another response from another source of configuration data. The responses could for example contain different Internet Protocol IP addresses and or different Network Timing Protocol NTP parameters.

In other particular embodiments multiple responses from multiple sources of configuration data are received. Also the notification is generated indicating that no problem is detected based on a determination that the configuration data in one response from one source of configuration data is consistent with the configuration data in another response from another source of configuration data.

In yet other particular embodiments the notification is generated indicating that a problem is detected based on a determination that multiple responses from multiple sources of configuration data have been received.

In still other particular embodiments the notification is generated indicating that no problem is detected based on a determination that a response from a single source of configuration data has been received.

In additional particular embodiments the notification is generated indicating that a problem is detected based on a determination that no responses from any sources of configuration data have been received.

In a second embodiment an apparatus includes at least one network interface configured to transmit one or more requests for configuration data over a network and to receive one or more responses from one or more sources of configuration data. Each of the responses contains configuration data. The apparatus also includes at least one processor configured to generate a notification indicating whether a problem associated with the one or more sources of configuration data is detected based on the one or more responses.

In a third embodiment a computer program is embodied on a computer readable medium. The computer program includes computer readable program code for initiating transmission of one or more requests for configuration data over a network. The computer program also includes computer readable program code for receiving one or more responses. The one or more responses are provided by one or more sources of configuration data and each of the responses contains configuration data. The computer program further includes computer readable program code for generating a notification indicating whether a problem associated with the one or more sources of configuration data is detected based on the one or more responses.

Other technical features may be readily apparent to one skilled in the art from the following figures descriptions and claims.

In this example embodiment the process control system includes various components that facilitate production or processing of at least one product or material such as one or more sensors and one or more actuators . The sensors and actuators represent components in a process or production system that may perform any of a wide variety of functions. For example the sensors could measure a wide variety of characteristics in the process control system such as temperature pressure or flow rate. Also the actuators can perform a wide variety of operations that alter the characteristics being monitored by the sensors . As particular examples the actuators could represent heaters motors catalytic crackers or valves. The sensors and actuators could represent any other or additional components in any suitable process or production system. Each of the sensors includes any suitable structure for measuring one or more characteristics in a process or production system. Each of the actuators includes any suitable structure for operating on or affecting conditions in a process or production system.

Two controllers are coupled to the sensors and actuators . The controllers may among other things use the measurements from the sensors to control the operation of the actuators . For example the controllers could receive measurement data from the sensors and use the measurement data to generate control signals for the actuators . Each of the controllers includes any hardware software firmware or combination thereof for interacting with the sensors and controlling the actuators . The controllers could for example represent multivariable controllers or other types of controllers that implement control logic such as logic associating sensor measurement data to actuator control signals to operate. As a particular example each of the controllers could represent a computing device running a MICROSOFT WINDOWS operating system.

Two servers are coupled to the controllers . The servers perform various functions to support the operation and control of the controllers sensors and actuators . For example the servers could log information collected or generated by the controllers such as measurement data from the sensors or control signals for the actuators . The servers could also execute applications that control the operation of the controllers thereby controlling the operation of the actuators . In addition the servers could provide secure access to the controllers 

In some embodiments the servers may represent a redundant pair of servers. For example one server could operate as a primary server and communicate with the controllers . The other server could act as a backup server that maintains synchronization with the primary server and that takes over operations if and when the primary server becomes unavailable. Each of the servers may repeatedly switch between the primary and secondary roles as operations in the system occur over time.

Each of the servers includes any hardware software firmware or combination thereof for providing access to control of or operations related to the controllers . For example each of the servers may include one or more processors one or more memories storing instructions and data used generated or collected by the processor s and one or more network interfaces . As a particular example each of the servers could represent a computing device running a MICROSOFT WINDOWS operating system. Also as a particular example the network interfaces could include one or more Ethernet interfaces. The one or more processors in each of the servers could execute any suitable instructions such as by executing an EXPERION PKS application from HONEYWELL INTERNATIONAL INC.

One or more operator stations are coupled to the servers and one or more operator stations are coupled to the controllers . The operator stations represent computing or communication devices providing user access to the servers which could then provide user access to the controllers and possibly the sensors and actuators . The operator stations represent computing or communication devices providing direct user access to the controllers . As particular examples the operator stations could allow users to review the operational history of the sensors and actuators using information collected by the controllers and or the servers . The operator stations could also allow the users to adjust the operation of the sensors actuators controllers or servers . In addition the operator stations could receive and display warnings alerts or other messages or displays generated by the controllers or the servers . Each of the operator stations includes any hardware software firmware or combination thereof for supporting user access and control of the system . In particular embodiments each of the operator stations could represent a computing device running a MICROSOFT WINDOWS operating system.

In this example at least one of the operator stations is remote from the servers . The remote station is coupled to the servers through a network and the remote station could communicate with the network over a wired or wireless connection. The network facilitates communication between various components in the system . For example the network may communicate Internet Protocol IP packets frame relay frames Asynchronous Transfer Mode ATM cells or other suitable information between network addresses. The network may include one or more local area networks LANs metropolitan area networks MANs wide area networks WANs all or a portion of a global network such as the Internet or any other communication system or systems at one or more locations.

In this example the system includes two additional servers . The servers execute various applications to control the overall operation of the system . For example the system could be used in a processing or production plant or other facility and the servers could execute applications used to control the plant or other facility. As particular examples the servers could execute applications such as enterprise resource planning ERP manufacturing execution system MES or any other or additional plant or process control applications. Each of the servers includes any hardware software firmware or combination thereof for controlling the overall operation of the system .

As shown in the system includes various single networks and and redundant networks that support communication between components in the system . Each of these networks represents any suitable network or combination of networks facilitating communication between components in the system . As particular examples the network could represent an Ethernet network an electrical signal network such as a HART or FOUNDATION FIELDBUS network a pneumatic control signal network or any other or additional type of network. Also the network could represent an Ethernet network and each of the networks could represent a redundant pair of Ethernet networks.

One or more configuration servers are also present in the process control system . The configuration servers distribute configuration data to other devices in the process control system . For example a configuration server could monitor communications on a network and detect requests for configuration data. As a particular example the configuration server could monitor communications on the network to detect requests for IP address resolutions. The configuration server can also provide the requested configuration data to the appropriate devices such as by providing an IP network address and or Network Timing Protocol NTP configuration data to a requesting device like a controller . Each configuration server includes any hardware software firmware or combination thereof for providing configuration data to one or more components in the system . As particular examples each configuration server could represent a bootstrap protocol BootP server or a dynamic host configuration protocol DHCP server although any other or additional protocol s could be used to request and or provide configuration data. In this document the phrase configuration data refers to data provided to a component to configure that component in some manner including addressing information such as network addresses network timing data and other data.

In general any number of configuration servers could be present in the process control system . In some embodiments it may be desired that a single configuration server provide all configuration data to components in the system . In other embodiments it may be desired that multiple configuration servers such as a pair of configuration servers provide configuration data to components in the system . Whatever the expected or desired arrangement however there may arise problems with one or more configuration servers in the system . For example there may be cases where multiple configuration servers are present in the system such as when a configuration server is inadvertently added to the system .

In these or other situations one or more configuration servers could provide conflicting or incorrect configuration data to a component in the system . For example a controller could receive the wrong network address from one configuration server while an operator of the system expected the controller to receive its network address from a different configuration server . As a particular example a request for configuration data could be made when a device such as a controller boots from power up or reboots while power is applied. While these circumstances may seem to be controlled a power failure could cause an unexpected reboot followed by a new request for configuration data. If an inappropriate configuration server exists and responds before the correct configuration server this may result in improper operation of the system including loss of expected communications in the system . As another example if different DHCP servers are assigned different ranges of IP addresses the different DHCP servers could provide different IP addresses to requesting devices making communications random or not at all successful in the system . As yet another example a configuration server could go offline in the system such as due to a power failure or other problem. This could prevent a controller or other component from obtaining necessary configuration data.

These or other types of situations could lead to various problems in the process control system . For example this could lead to a loss of control or a loss of view over a controller and may require a reboot of the controller and even a reboot of the controller may not resolve this problem . As a particular example problems may occur during the flash reprogramming of controllers in the process control system where the problems are caused by configuration servers providing incorrect configuration data to a controller being reprogrammed.

The presence of these or other types of situations in the process control system may not even be known to an operator of the system . This could occur for example when an application executed in the process control system includes a BootP or DHCP server without the operator s knowledge. This could also occur when a user s computing device is coupled to a network in the system and includes a BootP or DHCP server. In addition different releases of applications executed in the process control system may provide different versions of BootP or DHCP servers and the different versions of the BootP or DHCP servers may operate in incompatible ways.

In accordance with this disclosure a configuration monitoring tool can be provided on one or more components in the system . The tool could for example be implemented on executed by or otherwise provided by the secondary or backup server in a redundant server pair such as server in this example although the tool could actually reside on multiple components such as on both servers . Among other things the tool may repeatedly send out a request for configuration data onto a network such as by broadcasting an IP address resolution request on the network . Zero one or multiple configuration servers may receive the request and respond with appropriate configuration data. The tool may collect and analyze any responses from the configuration servers to determine if a problem exists in the process control system . As particular examples the tool could indicate that no problems are present when a single configuration server responds to a request. The tool could also generate an alert error message or other notification when no configuration servers respond when multiple configuration servers respond or when multiple configuration servers respond with different configuration data.

In some embodiments the tool could transmit multiple requests and collect responses to those requests before analyzing the responses and determining if an error is present. This may be useful for example when a configuration server does not or cannot respond to an initial request from the tool such as when the configuration server was busy performing other actions or the first request was lost due to network congestion . In particular embodiments the number of requests sent and the time interval between requests could be established or controlled by a user. Also the operation of the tool could be continuous or intermittent. The tool could for example operate continuously or at specified intervals of time. In particular embodiments the tool could operate as a WINDOWS service be manually executed or be scheduled as a periodic task.

The use of the tool may provide various benefits in the process control system . For example the tool may help to identify abnormal or undesirable situations involving one or more configuration servers in the process control system . Among other things this may help to avoid problems caused by configuration servers providing incorrect or conflictin g configuration data to components in the system . This may also allow appropriate personnel to take corrective action such as disabling or reconfiguring one or more of the configuration servers before problems with components in the system actually occur such as before incorrect configuration data is provided to a controller in the system .

Additional details regarding the use and operation of the tool are provided below. The tool includes any hardware software firmware or combination thereof for receiving and analyzing configuration data to identify one or more improper conditions associated with the configuration data. The tool could for example represent a software application executed by one or more computing devices.

Although illustrates one example of a process control system in which improper configuration data is detected various changes may be made to . For example a control system could include any number of sensors actuators controllers servers operator stations networks and configuration monitoring tools. Also the makeup and arrangement of the process control system is for illustration only. Components could be added omitted combined or placed in any other suitable configuration according to particular needs. As a particular example the configuration server s may reside at any suitable location s in the system and a configuration server may reside within another component in the system such as within an operator station server or other device . In addition illustrates one operational environment in which a configuration monitoring mechanism can be used to detect improper configuration data. The configuration monitoring mechanism could be used in any other suitable device or system including other process control systems and non process control systems such as in data networks or other communication networks .

As shown in a display can be used to configure the configuration monitoring tool . For example text boxes and a checkbox allow a user to set different options associated with the configuration monitoring tool . In this example the text box allows a user to specify a number of scans performed by the tool . The number of scans value represents the number of times that a request for configuration data is transmitted by the tool over a network during a single scanning routine. As a particular example the number of scans could be set to three which causes the tool to transmit three requests and collect responses to those requests before the responses are analyzed. Among other things this may help to capture a response from a configuration server that was busy when a prior request was received by that configuration server . While the number of scans value here is limited to between one and five this is an example only.

The text box allows a user to specify a device index value associated with the tool . The device index value can be used by the configuration server s to generate configuration data for the tool . For example the base network address for a group of components in the system could be 10.1.2.0 and a configuration server could be configured to use this base address. When a component requests configuration data the component may include its device index value in an IP address resolution request or other request. The configuration server could receive this request identify the component s device index value and add the component s device index value to the last digit in the base address to generate the network address for that component. As a particular example the tool could have a device index value of five and the configuration server could provide the tool with configuration data that includes a network address of 10.1.2.5 10.1.2.0 5 . The text box allows a user to manually configure the device index value of the tool which could allow the user to specify a device index value not in use by other components. While the device index value here is limited to between one and fifty this is an example only. Also a configuration server could operate without requiring a device index value from the tool and the text box could be omitted.

The text box allows a user to specify a time interval between transmissions of configuration data requests by the tool . As noted above the tool could transmit multiple requests and collect responses to those multiple requests before analyzing the responses during a single analysis of the system . The time interval value in the text box identifies the amount of time between transmissions of the requests. This time interval value could also represent the amount of time that the tool waits to receive responses from any configuration servers after the transmission of a request by the tool although this type of time out or other value could be specified in any other suitable manner . In some embodiments the text box may be inaccessible to the user when the user places a value of one in the text box indicating that only one request will be transmitted . While the time interval value here is limited to between two and fifteen seconds this is an example only.

The checkbox allows a user to control whether machine names of responding configuration servers are displayed to the user. For example after configuration data is requested by the tool the tool may receive responses from one or multiple configuration servers . Each configuration server may be identified by its network address such as an IP address at the tool . However a machine name assigned to the one or more responding configuration servers may or may not be identified and displayed by the tool depending on whether the checkbox is selected . Resolving network addresses into machine names could be a lengthy process such as when numerous configuration servers send responses to the tool . As a result the user can be given the option of skipping the name resolution operation via the checkbox .

A scan button can be selected by a user to initiate a scanning routine by the tool . For example selection of the scan button could cause the tool to begin transmitting requests for configuration data onto a network and collecting and analyzing any responses. During a single scanning routine the tool could transmit the number of requests identified in the text box . The requests may contain the value identified in the text box and the requests may be separated by a time interval identified in the text box . The tool could also analyze any responses received from one or more configuration servers and generate a display such as one of the displays shown in to identify the results of the analysis.

A progress bar indicates the extent to which a scanning routine has been completed. During the scanning routine text can be inserted under the progress bar to identify the current operation being performed by the tool . For example the text could state Scanning Pass xx where xx represents the number of requests transmitted by the tool up to that point during the scanning routine . The text could also state Please wait . . . resolving machine names during machine name resolution. Any other or additional text could be displayed to the user during the scanning routine.

An exit button allows a user to stop the current scanning routine being performed by the tool and or to exit the tool . When the exit button is selected the tool may or may not display any results obtained thus far during a scanning routine to the user.

Depending on the responses collected by the configuration monitoring tool during a scanning routine the tool can generate an appropriate display identifying the scanning results for a user. Examples of these displays are shown in . However the configuration monitoring tool could report the results of a scanning routine in any other suitable manner which may or may not include the generation of a graphical display for a user.

If the configuration monitoring tool identifies only one configuration server during a scanning routine the tool could generate and present a display as shown in . In this example the display includes a visual indicator which indicates that no problems were detected. The display also includes a note which states that only one configuration server such as one BootP or DHCP server was found during the scan of the network.

The display further includes a table which contains information associated with the configuration servers identified during the scanning routine which in this case is one server . In this example the table includes various information about the identified configuration server . For example the table identifies a machine name Srv Name associated with the configuration server . The machine name may or may not be available in the table depending on whether the name resolution option is enabled or disabled via the checkbox . The table also identifies the network address Srv IP submask address Sub Mask and gateway address Gtw associated with the configuration server . In addition the table identifies the configuration data provided by the configuration server . In this example the configuration data includes a network address assigned to the tool by the configuration server BP Resp a primary NTP server address assigned to the tool by the configuration server Pri NTP and a secondary NTP server address assigned to the tool by the configuration server Sec NTP .

In this example only one configuration server was located during the scanning routine performed by the tool and the configuration data provided by that configuration server is displayed in the table to allow for user review. Because only a single configuration server was located during the scanning routine the tool uses the visual indicator to indicate that no problems have been detected. In this case there is no concern about multiple configuration servers existing in the system and providing conflicting configuration data.

If the configuration monitoring tool identifies multiple configuration servers that provide consistent configuration data during a scanning routine the tool could generate and present a display as shown in . In this example the display includes a visual indicator indicating that no problems were detected. The display also includes a note which states that multiple configuration servers such as multiple BootP or DHCP servers were located during the scanning routine and that the configuration servers provided consistent configuration data. In addition the display includes a table which contains information associated with the two configuration servers identified during the scanning routine.

In this example two configuration servers were located during the scanning routine and the configuration data provided by the two configuration servers is displayed in the table . The presence of multiple configuration servers could be cause for concern since this raises the possibility of multiple configuration servers distributing incorrect or conflicting configuration data to components of the system . However it is possible that multiple configuration servers are desired and used in the system . In these cases the multiple configuration servers should distribute consistent configuration data. As shown in the table of the configuration data from the two configuration servers is consistent. Namely in this example the two configuration servers provide consistent network addresses and primary and secondary NTP server configuration data. Because the configuration data is consistent the visual indicator indicates that no problems were detected. In other embodiments the mere presence of multiple configuration servers could trigger an alert or warning and the visual indicator and the note could be changed to indicate that a problem was detected and to identify the problem multiple configuration servers were detected .

If the configuration monitoring tool identifies multiple configuration servers that provide inconsistent information during a scanning routine the tool could generate and present a display as shown in and or a display as shown in . In a visual indicator indicates that a problem has been detected and a note generally identifies the problem. A table identifies various information associated with the identified configuration servers although the machine names of the configuration servers have been omitted which may occur when the checkbox is not selected . As shown in a visual indicator indicates that a problem has been detected and a note generally identifies the problem. A table also identifies various information associated with the identified configuration servers including the machine names of the configuration servers which may occur when the checkbox is selected .

As shown in the configuration data provided by multiple configuration servers as displayed in the tables and is different. For example the network addresses and primary and secondary NTP server configuration data are different. This could cause various problems in the process control system . For example a controller could be set up based on an engineer s assumption that the controller would receive its configuration data from a particular configuration server . The presence of multiple configuration servers distributing configuration data raises the possibility that the controller could receive incorrect configuration data from a different configuration server . This could seriously interfere with the operation of the controller in the process control system . By displaying the identified configuration servers and the configuration data provided by those servers an engineer or other personnel could take appropriate steps to resolve any possible problems such as by deactivating or reconfiguring one or more of the identified configuration servers .

While has been described as being displayed when the checkbox is not selected and has been described as being displayed when the checkbox is selected a combination of these displays could be presented to a user. For example the display could initially be displayed to the user and the machine names in the display could be populated as shown in as the machine names are resolved.

Another problem that can occur in the process control system is the complete absence of configuration servers . This could occur for example if a configuration server goes offline due to a power failure hardware failure or other condition. If the configuration monitoring tool identifies no configuration servers during a scanning routine the tool could generate and present a display as shown in . In a visual indicator indicates that a problem has been detected and a note generally identifies the problem in this example no configuration servers were detected . A table is empty since no configuration servers were identified.

The various displays shown in could be generated and presented to a user in any suitable manner. For example the tool could use an application programming interface API such as an HSC server interface denoted HSCCLI to raise alarms and events with an EXPERION PKS server from HONEYWELL INTERNATIONAL INC. In some embodiments the tool could be running in the background as a periodic task or as a service and the API or other mechanism could be used to immediately raise an alarm or error message when an invalid configuration is detected.

Although illustrate examples of graphical displays associated with the detection of improper configuration data provided in a network various changes may be made to . For example the content and arrangement of each of the displays are for illustration only. Each of the displays could include any suitable information in any suitable arrangement. Also more or less information could be displayed depending on particular needs. As particular examples the table of identified configuration servers could be omitted when no problems are detected or the table could be hidden and made available upon selection of a button link or other mechanism. As another particular example help information could be provided to the user when the tool identifies one or more problems in a network or when an error occurs during execution of the tool .

A configuration monitoring tool transmits a request for configuration data over a network at step . This could include for example a server executing the configuration monitoring tool broadcasting an IP address resolution request over the network . The configuration monitoring tool could broadcast or otherwise transmit any other suitable request for configuration data whatever the format of the request.

The configuration monitoring tool collects any responses to the request at step . This could include for example the configuration monitoring tool waiting for and collecting any responses received within a specified period of time. This period of time represents a window during which valid responses can be received from one or more configuration servers . The window could have any suitable length of time such as a length based on the time interval value in the text box . During this window it is possible that zero one several or many responses are received from zero or more configuration servers .

If no responses are received from any configuration servers as determined at step the configuration monitoring tool generates and displays an error message at step . In this case no responses were received from any configuration servers and the configuration monitoring tool could cause an error message or other notification to be displayed such as by presenting the display of . At this point corrective action could be taken to bring one or more configuration servers online or to otherwise make configuration data available in the network.

If at least one response is received a determination is made whether responses from multiple configuration servers were received at step . If not this indicates that a single configuration server sent configuration data to the configuration monitoring tool . In this case the configuration monitoring tool generates and displays a pass message at step . In this case no problems have been detected and the configuration monitoring tool could cause a pass message or other notification to be displayed such as by presenting the display of .

If responses from multiple configuration servers were received the configuration monitoring tool determines whether the responses contain different configuration data at step . If not this indicates that multiple configuration servers sent configuration data to the configuration monitoring tool but the configuration data was consistent. In this case the configuration monitoring tool generates and displays the pass message at step . In this case no problems have been detected and the configuration monitoring tool could cause a pass message or other notification to be displayed such as by presenting the display of .

If the responses from multiple configuration servers contain different configuration data this indicates that multiple inconsistent responses were received from multiple configuration servers . In this case the configuration monitoring tool generates and displays the error message at step . The configuration monitoring tool could cause an error message or other notification to be displayed such as by presenting the display of and or the display of . At this point corrective action could be taken to reduce or prevent the transmission of incorrect or conflicting configuration data by the configuration servers .

Although illustrates one example of a method for detecting improper configuration data provided in a network various changes may be made to . For example the configuration monitoring tool could transmit multiple requests and receive multiple responses from a configuration server during a scanning routine. When this occurs the configuration monitoring tool could verify that the responses contain the same configuration data and if so treat the responses from that configuration server as a single response. As another example the configuration monitoring tool could treat the presence of multiple configuration servers as an error regardless of whether the servers provide consistent configuration data . In these embodiments the yes branch from step could lead directly to step .

In some embodiments various functions described above are implemented or supported by a computer program that is formed from computer readable program code and that is embodied in a computer readable medium. The phrase computer readable program code includes any type of computer code including source code object code and executable code. The phrase computer readable medium includes any type of medium capable of being accessed by a computer such as read only memory ROM random access memory RAM a hard disk drive a compact disc CD a digital video disc DVD or any other type of memory.

It may be advantageous to set forth definitions of certain words and phrases used throughout this patent document. The term couple and its derivatives refer to any direct or indirect communication between two or more elements whether or not those elements are in physical contact with one another. The terms application and program refer to one or more computer programs software components sets of instructions procedures functions objects classes instances related data or a portion thereof adapted for implementation in a suitable computer code including source code object code or executable code . The terms transmit receive and communicate as well as derivatives thereof encompass both direct and indirect communication. The terms include and comprise as well as derivatives thereof mean inclusion without limitation. The term or is inclusive meaning and or the phrases associated with and associated therewith as well as derivatives thereof may mean to include be included within interconnect with contain be contained within connect to or with couple to or with be communicable with cooperate with interleave juxtapose be proximate to be bound to or with have have a property of or the like. The term controller means any device system or part thereof that controls at least one operation. A controller may be implemented in hardware firmware software or some combination of at least two of the same. The functionality associated with any particular controller may be centralized or distributed whether locally or remotely.

While this disclosure has described certain embodiments and generally associated methods alterations and permutations of these embodiments and methods will be apparent to those skilled in the art. Accordingly the above description of example embodiments does not define or constrain this disclosure. Other changes substitutions and alterations are also possible without departing from the spirit and scope of this disclosure as defined by the following claims.

