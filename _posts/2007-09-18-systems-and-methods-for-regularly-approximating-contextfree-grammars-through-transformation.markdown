---

title: Systems and methods for regularly approximating context-free grammars through transformation
abstract: Context-free grammars generally comprise a large number of rules, where each rule defines how a string of symbols is generated from a different series of symbols. While techniques for creating finite-state automata from the rules of context-free grammars exist, these techniques require an input grammar to be strongly regular. Systems and methods that convert the rules of a context-free grammar into a strongly regular grammar include transforming each input rule into a set of output rules that approximate the input rule. The output rules are all right- or left-linear and are strongly regular. In various exemplary embodiments, the output rules are output in a specific format that specifies, for each rule, the left-hand non-terminal symbol, a single right-hand non-terminal symbol, and zero, one or more terminal symbols. If the input context-free grammar rule is weighted, the weight of that rule is distributed and assigned to the output rules.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07716041&OS=07716041&RS=07716041
owner: AT&T Intellectual Property II, L.P.
number: 07716041
owner_city: New York
owner_country: US
publication_date: 20070918
---
The present application is a continuation of U.S. patent application Ser. No. 10 199 227 filed Jul. 22 2002 which claims the benefit of U.S. Provisional Application No. 60 344 792 filed Jan. 7 2002 which are incorporated herein by reference in their entirety. The present application is related to U.S. patent application Ser. No. 10 199 220 filed Jul. 22 2002 now U.S. Pat. No. 7 181 386 and U.S. patent application Ser. No. 11 566 945 filed Dec. 5 2006 the contents of which are incorporated herein by reference in their entirety.

This invention is directed to systems and methods for transforming any context free grammar into a strongly regular grammar.

Context free grammars are used in a variety of technical fields such as linguistics speech recognition speech synthesis text to speech to represent the conversion of one set of symbols into another set of symbols. For example context free grammars can be used to convert acoustic signals into recognized speech.

Grammars generally comprise a large number of rules where each rule defines how a given string of symbols can be produced from a different series of symbols. In many computer implementations such grammars are represented or implemented using finite state automata. If the grammar is a weighted grammar the weighted grammar is represented as a weighted finite state automaton. Representing grammars using finite state automata or transducers is often crucial as finite state automata or transducers can be optimized by compacting determinizing and or minimizing the finite state automata or transducers.

However generating a finite state automaton or transducer from a given context free grammar is not necessarily a trivial exercise especially given the large number of grammar rules necessary to implement a speech recognition system or a speech synthesis system. While generalized techniques for creating a finite state automaton or transducer from the rules of a context free grammar exist these techniques require an input grammar to be strongly regular. No such generalized techniques exist for creating a finite state automaton or transducer from the rules of a context free grammar that is not strongly regular.

This invention provides systems and methods for generating a strongly regular context free grammar that approximates an input context free grammar that is not regular.

This invention separately provides systems and methods that generate from any general linear or non linear grammar rule a set of right linear rules that approximate that rule.

This invention separately provides systems and methods that distribute cost or weight of the input rule to a set of corresponding approximated rules.

In various exemplary embodiments the systems and methods according to this invention input the rules of a context free grammar. In various exemplary embodiments the rules are input using a specific format that specifies for each rule the left hand non terminal symbol zero one or more right hand non terminal symbols and zero one or more terminal symbols. If the context free grammar is weighted the format also specifies the weight of that rule. Each input rule is then transformed into a set of output rules that approximate the input rule. In various exemplary embodiments the output rules are all right linear and are strongly regular. In various exemplary embodiments the output rules are output in a specific format that specifies for each rule the left hand non terminal symbol a single right hand non terminal symbol and zero one or more terminal symbols. If the input context free grammar rule is weighted the weight of that rule is distributed and assigned to the output rules.

In various other exemplary embodiments input rules which are already right linear are included in the output set of rules without transformation. This saves processing time while the resulting grammar remains strongly regular.

In various other exemplary embodiments the strongly connected components of the input context free grammar are identified. The input grammar rules belonging to any strongly connected component that is itself strongly regular are included in the output set of rules without transformation. This saves processing time while the resulting grammar remains strongly regular.

These and other features and advantages of this invention are described in or are apparent from the following detailed description of various exemplary embodiments of the systems and methods according to this invention.

A grammar is a set of rules that specify the set of acceptable sequences of symbols of a language. Additionally grammars such as context free grammars may assign parsing information to each acceptable sequence of symbols based on the non terminal symbols of the grammar. A weighted grammar is one that additionally assigns some weight to each acceptable sequence of symbols. A weighted grammar is one which has costs or weights assigned to each rule. This allows the system implementing the grammar to have multiple rules with different outputs for the same input. Thus in weighted grammars each sequence of symbols is assigned a different probability. Subsequent rules can modify these probabilities.

The symbols in the grammar for the purpose of this invention are assigned specific definitions. Symbols that appear only on the right hand side of a rule are the terminal symbols. The other symbols in the grammar that appear on the left hand side of a rule and possibly on the right hand side of a rule as well are the non terminal symbols. If for any rule all non terminal symbols in the right hand side of that rule occur only after all terminal symbols of that rule then that rule is a right linear rule. A rule where all non terminal symbols in the right hand side of that rule occur before any terminal symbols occur in the right hand side of that rule is a left linear rule. A rule which has only terminal symbols or only non terminal symbols on the right hand side of that rule can be either a right linear rule or a left linear rule. If none of these cases occurs the rule is neither right linear nor left linear.

A subset of the rules in a grammar form a strongly connected component if the non terminal symbols in the subset appear on the left hand side of one or more rules of the subset and the right hand side of one or more other rules of the subset such that those rules form a mutually inter dependent subset of the rules of that grammar. For example in one rule of a grammar the non terminal symbol X appears on the left hand side of that rule while the non terminal symbol Y appears on the right hand side of that rule. At the same time in another rule of the grammar the non terminal symbol Y appears on the left hand side of that rule while the non terminal symbol X appears on the right hand side of that rule. Accordingly these rules form a strongly connected component and the non terminal symbols X and Y are the non terminal symbols of strongly connected component.

Strongly regular grammars are grammars in which the rules of a given strongly connected component are either all right linear or all left linear. Efficient algorithms exist that generate a finite state automaton accepting the language generated by a strongly regular grammar. Various exemplary embodiments of such efficient algorithms are disclosed in U.S. Patent Application Ser. No. 60 344 792 which is incorporated herein by reference in its entirety. The systems and methods according to this invention transform the rules of an input grammar that may or may not already be strongly regular into a second grammar that at least approximates the input grammar where the second grammar has rules such that all the rules of each strongly connected component are either all right linear or all left linear. That is the second grammar is strongly regular.

To generate the new generalized set of strongly regular grammar rules R an approximation of each non terminal symbol B in the right side of the input generalized grammar rule R is created to form the left hand non terminal symbol of each new strongly regular rule R. One exception is the first rule in which the original left hand non terminal symbol from the input generalized grammar rule R is used as the left hand non terminal symbol of the new rule. A second exception is the last rule in which an approximation of the left hand non terminal symbol of the input generalized grammar rule shown in is used as the left hand non terminal symbol of the new rule.

To construct the right hand symbols of each new strongly regular rule Rof the generalized set of strongly regular grammar rules R zero one or more terminal symbols and exactly one non terminal symbol in the input generalized grammar rule which either begin the right hand side of the generalized grammar Rule R or immediately follow the non terminal symbol on which the left hand side symbol of the new rule Ris based are selected. One exception when assigning the right hand symbols is the second to last rule for which there is no right hand non terminal left in the original rule. In this case in the second to last rule of the generalized set of strongly regular grammar rules R an approximation of the original left hand non terminal symbol from the input generalized grammar rule R is used as the right hand non terminal symbol. A second exception when assigning the right hand symbols is the last rule. The empty string set is assigned as the right hand symbol of the last rule.

If the input generalized grammar rule R shown in has a cost X assigned to it this cost X is distributed in any desired manner to all but the last new rule of the generalized set of strongly regular grammar rules Rshown in . It should be appreciated that according to this invention any criteria can be used to distribute the cost to all but the last new rule of the generalized set of strongly regular grammar rules Rshown in . The final rule shown in the set of new strongly regular grammar rules Rshown in is assigned the identity value of the multiplicative operator of the semiring over which the cost X is defined.

The only constraint on how the cost is distributed is that the distributed costs when recombined using the multiplicative operator of the semiring over which the cost X is defined must equal the original cost X. For example if the multiplicative operator is the addition operator as in the tropical semiring the costs assigned to the new rules Rof the generalized set of strongly regular grammar rules Rshown in added together must equal the cost assigned to the input generalized grammar rule R shown in . If the multiplicative operator is the multiplication operator the costs assigned to the new rules Rof the generalized set of strongly regular grammar rules Rshown in multiplied by each other must equal the cost assigned to the input generalized grammar rule R shown in . Because the final rule of the generalized set of strongly regular grammar rules shown in is assigned the identity value of the multiplicative operator of the semiring over which the costs are defined such as zero for the addition operator or 1 for the multiplication operator the cost value assigned to the last new rule does not affect the recombined cost value.

To generate the new set of strongly regular grammar rules R shown in approximate non terminal symbols X Y Z and T are created from the original non terminal symbols X Y Z and T of the original grammar rule R shown in to form the left hand non terminal symbol of each new rule R of the set of strongly regular grammar rules R . The original left hand non terminal symbol T from the grammar rule R shown in is used as the left hand symbol of the first new rule R.

To construct the set of right hand side symbols of each new rule R of the set of strongly regular grammar rules R shown in the terminal symbols and the non terminal symbol in the input grammar rule R shown in which either begin the right hand side of the generalized grammar Rule R or immediately follow the non terminal symbol on which the left hand side of the new rule R is based are selected. For the first new rule R the left hand symbol T is used and the symbols aX are selected. Then for the second new rule R the approximate non terminal X is used as the left hand side symbol because the non terminal symbol X is used on the right hand side of the first new rule R . For this second new rule R the next zero one or more terminal symbols and the next non terminal symbol in this case the symbols bcY are selected as the set of right hand side symbols. Next for a third new rule R the approximate non terminal Y is used as the left hand side symbol because the non terminal symbol Y is used on the right hand side of the second new rule R . For this third new rule R the next zero one or more terminal symbols and the next non terminal symbol in this case the symbol Z are selected as the set of right hand side symbols.

For the second to last new rule R the approximate non terminal Z is used as the left hand side symbol because the non terminal symbol Z is used on the right hand side of the third new rule R . For the second to last rule R the last terminal symbol d and the approximate new non terminal symbol T obtained from the original left hand non terminal symbol T of the input grammar rule R shown in are used as the right hand symbols as shown in . For the last new rule R the new non terminal symbol T that was obtained from the original left hand side non terminal symbol is used as the left hand side symbol. The empty string or symbol is used as the right hand side non terminal symbol in the last new rule R of the R generalized set of strongly regular grammar rules R shown in .

In the grammar rule R shown in the cost of this grammar rule R is for example defined over the tropical semiring which uses the addition operator as the multiplicative operator. Thus in the new set of strongly regular grammar rules R shown in the cost of this grammar rule R 4 is distributed so that the sum of the distributed costs of the new rules R also equals 4. One exemplary method is to distribute the original cost evenly between all but the last new rule as shown in . The last rule is assigned a cost of 0 the identity value of the addition operator which is the multiplicative operator of the tropical semiring.

In step the first or next one of the identified strongly connected components S of the input grammar G is selected as the current strongly connected component. Next in step the non terminal symbols that belong to the current strongly connected component are identified as the non terminal symbols for the current strongly connected component S. In particular any non terminal symbols of the input grammar G that do not appear in the current strongly connected component Sare treated as terminal symbols in the current strongly connected component S. Then in step the first or next grammar rule Rthat belongs to the current strongly connected component Sis selected as the current grammar rule. Operation then continues to step .

In step the non terminal symbol on the left hand side of the current grammar rule is selected as the current left hand non terminal symbol. Next in step the first or next non terminal symbol belonging to the current strongly connected component that appears in the right hand side of the current grammar rule is selected as the current non terminal symbol. Then in step a determination is made whether there are terminal symbols for the current strongly connected component in the right hand side of the current grammar rule that appear before the current non terminal symbol and after any previously selected non terminal symbols if any. If not operation jumps to step . Otherwise operation continues to step .

In step the terminal symbols for the current strongly connected component that appear in the right hand side of the current grammar rule before the current non terminal symbol and after any previously selected non terminal symbols if any are selected as the current terminal symbols. Next in step a new right linear grammar rule is generated and output using the current left hand symbol as the left hand side non terminal symbol of the current new rule the current terminal symbols as the first symbols on the right hand side of the current new rule and the current non terminal symbol as the non terminal symbol on the right hand side of the current new rule. Operation then jumps to step . In contrast in step a new right linear grammar rule is generated and output using the current left hand symbol for the left hand side of the current new rule and the current non terminal symbol as the non terminal symbol on the right hand side of the current new rule. Operation then continues to step .

In step a new non terminal symbol is created based on the current non terminal symbol. Next in step this new non terminal symbol is selected as the current left hand symbol. Then in step a determination is made whether any more non terminals of the current strongly connected component appear on the right hand side of the current grammar rule that have not yet been used to create a new rule. If so operation returns to step . Otherwise operation continues to step .

In step a new non terminal symbol is created from the original left hand symbol of the current grammar rule. Next in step this new non terminal symbol is selected as the current non terminal symbol. Then in step a determination is made whether any non terminal symbols on the right hand side of the current grammar rule appear after the previously selected non terminal symbol on the right hand side of the current rule. If not operation jumps to step . Otherwise operation continues to step .

In step the terminal symbols that appear in the right hand side of the current grammar rule after the previously selected non terminal symbol are selected as the current terminal symbols. Next in step a new right linear grammar rule is generated and output using the current left hand symbol as the left hand side non terminal symbol the current terminal symbols as the terminal symbols on the right hand side and the current non terminal symbol as the last non terminal symbol on the right hand side. Operation then jumps to step . In contrast in step a new right linear grammar rule is generated and output using the current left hand symbol as the left hand side non terminal symbol and the current non terminal symbol as the only symbol on the right hand side. Operation then continues to step .

In step a new grammar rule is generated and output using the current non terminal symbol as the left hand side non terminal symbol and the empty set as the right hand side. Next in step the cost of the current grammar rule is distributed to all of the new rules generated from it. It should be appreciated that any method consistent with the approach to assigning costs to the input grammar of step may be used. Using the identity value of the multiplicative operator of the semiring over which the original cost was defined in the grammar input in step the combined costs of all of the new rules derived from the current rule when recombined should equal the cost assigned to the current rule. Next in step a determination is made whether there are any more rules R of the current strongly connected component Sto be transformed. If so operation returns to step . Otherwise operation continues to step . In step a determination is made whether there are any more strongly connected component Sto be analyzed. If so operation returns to step . Otherwise operation continues to step where operation of the method ends.

It should be appreciated that in various exemplary embodiments grammar rules that are already right linear need not be transformed. In this case steps can be omitted for input grammar rules that are already right linear. The rules that are not transformed are then combined with the new right linear approximate rules to form the approximate strongly regular grammar.

It should also be appreciated that in various exemplary embodiments grammar rules belonging to strongly connected components that are already strongly regular need not be transformed. In this case steps can be omitted for strongly connected components that are already strongly regular. The rules that are not transformed are then combined with the new right linear approximate rules to form the approximate strongly regular grammar.

It should also be appreciated that in various exemplary embodiments grammar rules may be transformed without identifying the strongly connected components or their non terminal symbols. In this case steps and can be omitted for all rules and steps and are modified to operate on the input grammar instead of the current strongly connected component.

Thus it should be appreciated that in step any strongly connected components that have rules that are already all left linear or all right linear may be skipped and used in the output grammar in their original form. In various exemplary embodiments in step only strongly connected components S that are not strongly regular are selected. Also it should be appreciated that in step rules R that are already right linear or either right or left linear can be skipped and used in the output grammar in their original form.

As shown in a grammar data source and a grammar data sink are connected to the grammar rule transformation system by the links and respectively. In general the grammar data source and the grammar data sink shown in can each be any one of a number of different devices such as a general purpose computer having a processor or a device suitable for storing and or transmitting grammar data such as a client or server of a network or the Internet having a processor and the World Wide Web. For example the grammar data source or the grammar data sink may be a data carrier such as a magnetic storage disk CD ROM or the like or a host computer that contains grammar data.

In general each of the grammar data source and the grammar data sink can be implemented using any known or later developed device that is capable of providing grammar data to or receiving data from the grammar rule transformation system . It should be appreciated that the grammar data source and the grammar data sink do not need to be the same type of device. Each of the grammar data source and the grammar data sink can be integrated with the grammar rule transformation system such as in a general purpose computer with internal memory. In addition the grammar rule transformation system may be integrated with devices providing additional functions in addition to the grammar data source and or the grammar data sink as in a larger system using grammars to process data such as a speech recognition system.

Each of the links and respectively connecting the grammar data source and the grammar data sink to the grammar rule transformation system can be a connection device such as a direct cable connection a modem a local area network a wide area network a storage area network an intranet an extranet the Internet any other distributed processing network or any other known or later developed connection device. It should be appreciated that any of these connections may be wired or wireless. In general each of the links and can be implemented using any known or later developed connection system or structure usable to connect the respective devices to the grammar rule transformation system . It should be understood that the links and do not need to be of the same type.

As shown in the memory can be implemented using any appropriate combination of alterable volatile or non volatile memory or non alterable or fixed memory. The alterable memory whether volatile or non volatile can be implemented using any one or more of static or dynamic RAM a floppy disk and disk drive a writable or rewritable optical disk and disk drive a hard drive flash memory or the like. Similarly the non alterable or fixed memory can be implemented using any one or more of ROM PROM EPROM EEPROM an optical ROM disk such as a CD ROM or DVD 0ROM disk and disk drive or the like.

In various exemplary embodiments the grammar transformation system is implemented as software executing on a programmed general purpose computer a special purpose computer a microprocessor or the like. Alternatively in various exemplary embodiments the grammar rule transformation system can be implemented as a routine embedded in a library or a resource residing on a server or the like. In various exemplary embodiments the grammar rule transformation system can also be implemented by physically incorporating the grammar rule transformation system into a software and or hardware system such as a speech recognition system or language translation system of a computer or communication device. It should be understood that each of the various embodiments of the grammar rule transformation system do not need to be implemented the same way.

It should also be understood that each of the circuits routines objects applications or managers shown in can be implemented as portions of a suitably programmed general purpose computer. Alternatively each of the circuits routines objects applications or managers shown in can be implemented as physically distinct hardware circuits within an ASIC using a digital signal processor DSP using a FPGA a PDL a PLA and or a PAL or using discrete logic elements or discrete circuit elements. The particular form that the circuits routines objects applications or managers shown in will take is a design choice and will be obvious and predictable to those skilled in the art. It should be appreciated that the circuits routines objects applications or managers shown in do not need to be of the same design.

When operating the grammar rule transformation system the input grammar rules representing a non regular grammar in the format shown in are input from the grammar data source device over the link . The input output interface inputs the received grammar rules and under the control of the controller forwards the received grammar rules to an input grammar portion of the memory or to the strongly connected component identification circuit routine or application .

Under the controller the strongly connected component identification circuit routine or application then retrieves the input grammar rules from the input grammar portion or receives the input grammar rules directly from the input output interface . The strongly connected component identification circuit routine or application identifies the various groups of the non terminal symbols that make up the strongly connected components S of the input grammar. It should be appreciated that any one or more known or later developed methods for identifying strongly connected components in grammar rules can be used. One exemplary embodiment of a method for determining strongly connected components from a set of grammar rules is disclosed in the incorporated patent application 60 344 792. The strongly connected component identification circuit routine or application then under control of the controller either stores the identified non terminal symbols that make up each strongly connected component in a strongly connected component portion of the memory or outputs them directly to the strongly connected component selecting circuit routine or application .

The strongly connected component selecting circuit routine or application selects a strongly connected component as a current strongly connected component and retrieves the non terminal symbols of the current strongly connected component from the strongly connected component portion and forwards the retrieved non terminal symbols to at least the grammar rule selecting circuit or application . Once the grammar rule selecting circuit or application has selected all of the rules that use one of the retrieved non terminal symbols as a left hand side non terminal symbol the strongly connected component selecting circuit or application selects another strongly connected component. If there are no more strongly connected components that have not been selected the input output interface receives the new grammar rules from the new rule portion under the control of the controller . Then under control of the controller the input output interface outputs the new grammar rules in the format shown in to the grammar data sink device over the link .

The grammar rule selecting circuit routine or application selects an input grammar rule such as that shown in or which has a left hand symbol that is a non terminal symbol of the current strongly connected component. The selected grammar rule is retrieved from the input grammar rule portion of the memory under control of the controller . When all of the new rules R to be generated by the new rule generating circuit routine or application have been generated from the selected input rule R a new input grammar rule R that has a left hand side non terminal symbol that is also a non terminal symbol of the current strongly connected component is selected and retrieved by the input grammar rule selecting circuit routine or application . Once all of the input grammar rules which have a left hand symbol that is also a non terminal symbol in the current strongly connected component have been selected and converted the current strongly connected component selecting circuit routine or application selects a new strongly connected component.

The non terminal symbol generation circuit routine or application generates the new non terminal symbols B of the grammar which only approximate the original non terminal symbols B from the symbols in the selected input grammar such as that shown in . The current left hand symbol selecting circuit routine or application the non terminal symbol selecting circuit routine or application and the terminal symbol selecting circuit routine or application operate together to generate a set of new symbols B and Bfrom the original symbols in the selected input grammar rule and the new non terminal symbols.

In particular the current left hand symbol selecting circuit routine or application selects the left hand symbol B for the current new rule R from the new non terminals generated by the non terminal symbol generating circuit routine or application . The non terminal symbol selecting circuit routine or application selects the right hand non terminal symbol Bfor the current new rule R from the non terminals of the selected input grammar rule. The terminal symbol selecting circuit routine or application selects the terminal symbols for the right hand side of the current new rule R from the terminal symbols of the selected input grammar rule.

The new rule generating circuit or application generates a new rule R such as those shown in from the symbols selected by the circuits routines or applications . The new rule is stored under the control of the controller in the new rule portion of the memory . Once a new rule has been stored the circuits or applications select a new set of current symbols. If there are no more symbols to be selected in the selected input grammar rule the grammar rule selecting circuit routine or application selects the next input grammar rule.

While this invention has been described in conjunction with the exemplary embodiments outlined above it is evident that many alternatives modifications and variations will be apparent to those skilled in the art. Accordingly the exemplary embodiments of the invention as set forth above are intended to be illustrative not limiting. Various changes may be made without departing from the spirit and scope of the invention.

