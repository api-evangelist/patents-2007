---

title: Recursive subscriptions to content feeds
abstract: At a client device, a user subscribes to a specified stream, where the specified stream includes one or more other streams. A respective stream of the one or more other streams includes two or more content feeds, and each content feed includes a set of content items published by a respective publication source. The client devices presents to the user (e.g., on a display of the client device) content items associated with the specified stream. In some embodiments, streams can be recursively defined to include combinations of other streams, and users who subscribe to a recursively defined stream receive content items from the content feeds associated with that stream.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08694607&OS=08694607&RS=08694607
owner: Google Inc.
number: 08694607
owner_city: Mountain View
owner_country: US
publication_date: 20071009
---
This application claims priority to U.S. Provisional Patent Application No. 60 828 613 titled Recursive Subscriptions to Content Feeds filed Oct. 6 2006 which is incorporated by reference herein in its entirety.

This application is related to the following U.S. Patent Applications which are incorporated by reference herein in their entirety 

U.S. patent application Ser. No. 11 246 597 titled Indirect Subscriptions to A User s Selected Content Feed Items filed Oct. 7 2005 

U.S. patent application Ser. No. 11 246 596 titled Personalized Content Feed Suggestions Page filed Oct. 7 2005 

U.S. patent application Ser. No. 11 246 657 titled Content Feed User Interface with Gallery Display of Same Type Items filed Oct. 7 2005 and

U.S. patent application Ser. No. 11 246 656 titled Indirect Subscriptions to Top N Lists of Content Feeds filed Oct. 7 2005.

The disclosed embodiments relate generally to content syndication and more particularly to a content feed user interface with multiple modes for viewing content feed items.

Content syndication is growing in popularity as a way to distribute frequently updated information such as news and blog postings on the Internet. Using content syndication formats such as Really Simple Syndication RSS content providers can include content and or links to such content in a content feed. Users may subscribe to these content feeds using an application known as a feed reader content feed reader feed aggregator or content feed aggregator. When the content feed is updated with new content items the new content items are reflected in the user s reader.

A user may subscribe to many content feeds with each feed listing multiple content items. Looking through a dense list of content items to locate items of interest can be a cumbersome task for the user.

In an aspect of the present invention a method of providing content is performed at a client device. In the method a user of the client device is subscribed to a specified stream. The specified stream includes one or more other streams. A respective stream of the one or more other streams includes two or more content feeds and each content feed includes a set of content items published by a respective publication source. Content items associated with the specified stream are presented to the user.

In another aspect a method of providing content includes at a first client device in response to instructions from a first user applying a first label to a first stream. The first stream includes a second stream and a third stream. The second stream includes one or more content feeds to which a second client device applied a second label and the third stream includes one or more content feeds to which a third client device applied a third label. A sequence of content items for the first stream is presented to the first user at the first client device. The sequence includes content items associated with the second stream and the third stream.

In another aspect a client device for presenting content to a user includes memory a display one or more processors and one or more programs stored in the memory and configured for execution by the one or more processors. The one or more programs include instructions for subscribing a user of the client device to a specified stream. The specified stream includes one or more other streams. A respective stream of the one or more other streams includes two or more content feeds each content feed includes a set of content items published by a respective publication source. The one or more programs also include instructions for presenting on the display to the user content items associated with the specified stream.

In another aspect a computer readable storage medium stores one or more programs configured to be executed by a client device remotely located from a server system. The one or more programs include instructions for subscribing a user of the client device to a specified stream. The specified stream includes one or more other streams. A respective stream of the one or more other streams includes two or more content feeds each content feed includes a set of content items published by a respective publication source. The one or more programs also include instructions for presenting to the user on a display of the client device content items associated with the specified stream.

In another aspect a client device for presenting content to a user includes means for subscribing a user of the client device to a specified stream. The specified stream includes one or more other streams. A respective stream of the one or more other streams includes two or more content feeds each content feed includes a set of content items published by a respective publication source. The client device also includes means for presenting to the user content items associated with the specified stream.

In another aspect a method of serving content items from content feeds to a plurality of users includes storing for each respective stream of a plurality of streams subscription data indicating users of the plurality of users who have subscribed to the respective stream. The method also includes storing user label data indicating labels if any that respective users have applied to the respective stream. A first stream of the plurality of streams subscribed to by a first user has a label applied by the first user and includes a second stream having a second label applied by a second user and a third stream having a third label applied by a third user. The second stream and the third stream each include one or more content feeds each content feed includes a set of content items published by a respective publication source. A list of content items of the first stream is transmitted to a client device of the first user.

In another aspect a system for serving content located remotely from a client device includes memory one or more processors and one or more programs stored in the memory and configured for execution by the one or more processors. The one or more programs include instructions to store for each respective stream of a plurality of streams subscription data indicating users of the plurality of users who have subscribed to the respective stream and to store user label data indicating labels if any that respective users have applied to the respective stream. A first stream of the plurality of streams subscribed to by a first user has a label applied by the first user and includes a second stream having a second label applied by a second user and a third stream having a third label applied by a third user. The second stream and the third stream each include one or more content feeds each content feed includes a set of content items published by a respective publication source. The one or more programs also include instructions to transmit to a client device of the first user a list of content items of the first stream.

In another aspect a computer readable storage medium stores one or more programs configured to be executed by a server computer system remotely located from a client device. The one or more programs include instructions to store for each respective stream of a plurality of streams subscription data indicating users of the plurality of users who have subscribed to the respective stream and to store user label data indicating labels if any that respective users have applied to the respective stream. A first stream of the plurality of streams subscribed to by a first user has a label applied by the first user and includes a second stream having a second label applied by a second user and a third stream having a third label applied by a third user. The second stream and the third stream each include one or more content feeds each content feed includes a set of content items published by a respective publication source. The one or more programs also include instructions to transmit to a client device of the first user a list of content items of the first stream.

In another aspect a system for serving content located remotely from a client device includes means for storing for each respective stream of a plurality of streams subscription data indicating users of the plurality of users who have subscribed to the respective stream and for storing user label data indicating labels if any that respective users have applied to the respective stream. A first stream of the plurality of streams subscribed to by a first user has a label applied by the first user and includes a second stream having a second label applied by a second user and a third stream having a third label applied by a third user. The second stream and the third stream each include one or more content feeds each content feed includes a set of content items published by a respective publication source. The system also includes means for transmitting to a client device of the first user a list of content items of the first stream.

In a content feed aggregation system a user may subscribe to one or more content feeds and be presented with the content items included in those content feeds. The content items may be presented to the user in an ordered list such that the format of each item in the list is uniform. However the user may desire to view additional information about selected content items beyond that provided by a uniform list. The disclosed embodiments provide the user a way to view additional information about selected items. For example in one mode of operation when a user selects a first content item the selected item is displayed in an expanded format and other items are displayed in a compact format. When the user subsequently selects a second content item the second item is displayed in the expanded format and the first item is displayed in the compact format.

Content feeds are also herein called feed streams. The feed items from a content feed source can be considered to be a stream of items. Furthermore some embodiments of the content feed aggregation and distribution system described herein allow users to define virtual streams that incorporate content items from content feeds and or other virtual streams. Thus in these embodiments the term feed streams also encompasses virtual streams defined by the users of the content feed aggregation and distribution system.

The server system accesses content feeds from the feed sources . The server system includes a server and a database . Server serves as a front end for the server system . Server sometimes called a front end server retrieves the content feeds from the feed sources and also provides an interface between the server system and the client systems . In some embodiments the functions of server may be divided or allocated among two or more servers.

The server system stores content items in the content feeds in the database . In some embodiments the database stores both metadata e.g. title description URL date time and possibly other metadata and the content of each content item. However in some other embodiments the database stores the metadata but not the content for each content item. The database also stores user feed information for a plurality of users. The user feed information for a particular user identifies content feed subscriptions as well as sources filters and read states for that particular user. That is user feed information associated with a user identifies the content feeds to which the user has subscribed any filters the user has defined for the feeds any labels the user has associated with individual feed items and an indication of whether each feed item has been marked as read by the user.

It should be appreciated that the server system including the server and the database may be implemented as a distributed system of multiple computers. However for convenience of explanation the server system is described below as being implemented on a single computer which can be considered a single logical system.

A content feed or channel is a resource or service that provides a list of content items that are present recently added or recently updated at a feed source . A content item in a content feed may include the content associated with the item itself the actual content that the content item specifies a title sometimes called a headline and or a description of the content a network location or locator e.g. URL of the content or any combination thereof. For example if the content item identifies a text article the content item may include the article itself inline along with the title or headline and locator. Alternatively a content item may include the title description and locator but not the article content. Thus some content items may include the content associated with those items while others contain links to the associated content but not the full content of the items. A content item may also include additional metadata that provides additional information about the content. The full version of the content may be any machine readable data including but not limited to web pages images digital audio digital video Portable Document Format PDF documents and so forth.

In some embodiments a content feed is specified using a content syndication format such as RSS. RSS is an acronym that stands for rich site summary RDF site summary or Really Simple Syndication. RSS may refer to any of a family of formats based on the Extensible Markup Language XML for specifying a content feed and content items included in the feed. In some other embodiments other content syndication formats such as the Atom syndication format or the VCALENDAR calendar format may be used to specify content feeds.

Further information regarding the RSS syndication format known as Really Simple Syndication is disclosed in the 2.0 by D. Winer which is hereby incorporated by reference herein in its entirety. M. Nottingham et al. disclose further information regarding the Atom syndication format in which is hereby incorporated by reference herein in its entirety.

A user interfaces with the server system and views content items at a client system or device hereinafter called the client system for ease of reference . The client system includes a computer or computer controlled device such as a personal digital assistant PDA cellular telephone or the like. The computer typically includes one or more processors not shown memory which may include volatile memory not shown and non volatile memory such as a hard disk drive and a display . The computer may also have input devices such as a keyboard and a mouse not shown .

In some embodiments a user may interact with the server system via a feed reader user interface that may be presented on the display . The user may create a list of feed subscriptions via the feed reader user interface . In some embodiments using the feed reader user interface the user may also create filters or labels to be applied to content feeds and or content items and modify the read states of content feeds and or content items. The feed reader user interface transmits a list of content feed subscriptions or modifications to a list of content feed subscriptions to the server system for storage at the database . The feed reader user interface presents content items stored at the database to the user based on the user s list of content feed subscriptions. That is feed reader user interface presents to the user content items specified in the content feeds to which the user has subscribed. A user may view the full version of the content of a content item in the feed reader user interface by selecting it e.g. by clicking on it with a mouse pointer . In some embodiments a copy of the user s list of content feed subscriptions and copies of the presented content items may be cached locally at the client system .

In some embodiments the feed reader user interface may be a web based user interface. That is the feed reader user interface includes one or more web pages. It is noted that a single web page can contain multiple frames each of which may appear when displayed by a browser application to be a distinct web page. The web page s may be written in the Hypertext Markup Language HTML Extensible Markup Language XML or any other suitable language for preparing web pages and may include one or more scripts for interfacing with the server system . For example the web page s may include a Javascript application that interfaces with the server system via an application programming interface API . The Javascript application receives content items from the server system manages the rendering of those content items at the client and also performs the client side aspects of other tasks such as marking items as read adding and removing content feed subscriptions labeling content feed subscriptions and or individually selected content items selecting or revising user preferences and the like. The user may subscribe to content feeds view content items and otherwise interact with the server system by interacting with the web page s of the feed reader user interface . In other words the server system including the feed reader user interface provides a web based content aggregation service. The server system aggregates and stores content items in accordance with the user s content feed subscriptions. In some embodiments the server system can also apply filters or labels or change the read states of content items in accordance with user actions or instructions. When the user accesses the feed reader user interface the content items are presented to the user via the feed reader user interface .

In some other embodiments the feed reader user interface may be a part of a standalone application that is run on the client system . The standalone application may interface with the server system via an application programming interface API .

A user may select a next item second item for example by scrolling down the list or may select another item second item for example by clicking on it. In response the ordered list is redisplayed . The newly selected second item is displayed in expanded format while other items such as the first item are displayed in compact format . depicts an exemplary schematic screen shot of a user interface showing a second item in expanded format while the first item and other items are displayed in compact format.

As discussed below with reference to in some other embodiments content items are marked as read when they are displayed in expanded format. Alternatively content items are marked as read when they are selected regardless of whether they are displayed in expanded or compact format. Furthermore in some embodiments content items that have been marked as read which have not yet been scrolled off the displayed list are displayed in a manner that is distinct from the display of unread items. For example one or more portions of the displayed text e.g. the displayed title or headline of items marked as read may be displayed using a light shade of gray while the corresponding text or text portions of unread items may be displayed using black text.

A user may select a next item second item for example by scrolling down the list or may select another item second item for example by clicking on another item. In response the ordered list is redisplayed . The newly selected second item is displayed in expanded format while other items such as the first item are displayed in compact format . Selection of the second item results in the status of the second item being changed from unread to read . In one embodiment the status is changed by transmitting information to server indicating that the second item has been read . Server then updates database to reflect that the second item has been read by the user.

Feed reader user interface includes a list of labels also referred to as folders associated with content feeds to which a user has subscribed. Exemplary labels shown in include News and Sports . The labels or folder names may be user defined names. User interface also includes an ordered list of content items associated with a selected label. For example in the Sports label has been selected by the user as indicated by a shaded background. In this example ordered list includes items and . In some embodiments items in ordered list are ordered according to timestamps associated with the items. In some other embodiments items in ordered list are ordered in accordance with a score that takes into account both the content of the items and the timestamps of the items.

A user may select a different label for example by clicking on a different label. If a user selected the News label ordered list would display content items associated with News label . Also user interface would indicate that the News label was selected by displaying it with a shaded background. In this example the background for Sports label would no longer be shaded after the user selected News label .

In all items in ordered list including items and are displayed in compact format. In this embodiment compact format includes the source headline and timestamp for each item displayed in a single line. For example the compact format display for item includes Sports Source 1 Sports Headline 1 and Timestamp 1 all displayed on the same line of ordered list . In other embodiments compact format might include additional information. For example a brief portion of the content could be displayed next to the headline.

User interface shows that an item in ordered list is selected by displaying that item with a bold border. In item is selected as indicated by its bold border. Items and are not selected as indicated by their narrow borders. In other embodiments a selected item may have a border with a different color from that of other items e.g. a thick blue border for the selected item and a gray or thin black border for the unselected items . A user may select another item second item by clicking on Next Item button or Previous Item button by clicking directly on another item or by scrolling through ordered list using scrollbar and then clicking on another item. For example in a user could select item by clicking Next Item button or by clicking directly on item . Item then would be displayed with a bold border and other items such as item would appear with narrow borders.

As discussed above in regards to a user may select another item second item . For example in the user might select item by clicking on item or by clicking Next Item button . a schematic screenshot of a web browser presenting a web page that displays a feed reader user interface shows the result of this user action according to an embodiment. The selected item corresponding to item in compact format appears in expanded format. Other items including first item corresponding to item in expanded format are displayed in compact format.

In the example of item is not as large as item it has only one line of content as opposed to two. Therefore the ordered list in displays fewer items than the ordered list in ordered list in displays seven items while ordered list in displays eight items. In general the number of items displayed in ordered list will vary depending on the size in expanded format of the selected item.

Some but not necessarily all content items displayed in expanded format include a link to the full content associated with those content items. The link may be activated by a user clicking on the headline in the content item or by clicking on a link icon not shown in displayed in the expanded format of a respective content item. Activation of the link typically causes the browser to open a new browser window or tab and to download and display the document if any located at the location e.g. URL specified by the link.

Although not shown in the feed reader user interface will typically include icons menu items or the like for reviewing and managing the user s content feed subscriptions including removing and adding content feed subscriptions and optionally labeling a respective content feed subscription with one or more user defined labels or alternately assigning the respective content feed subscription to one or more user defined folders .

The feed reader module includes a content item format module for determining the format in which to display content items a local database for storing content items sent by the server and a server interface module for interfacing with server computer .

In some embodiments the feed reader module may be a script based module embedded in a web page served from the server system . The web page may be rendered by a client application such as a web browser at the client computer . When the web page is rendered the feed reader module is executed thereby providing a web based interface to the server system . The script based feed reader module may be written in JavaScript ECMAScript or any other suitable scripting language.

In some other embodiments the feed reader module may be a standalone application stored in memory of the client computer . The standalone application may include but is not limited to a feed aggregator application. In further other embodiments the feed reader module may be an add on or a plug in to another application. For example the feed reader module may be a plug in or extension to a web browser application or an email application.

In some embodiments received content items may be cached locally in memory . Similarly a user s list of content feed subscriptions may also be cached locally in memory .

Each of the above identified elements in may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise re arranged in various embodiments. In some embodiments memory may store a subset of the modules and data structures identified above. Furthermore memory may store additional modules and data structures not described above.

Each of the above identified elements in may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise re arranged in various embodiments. In some embodiments memory may store a subset of the modules and data structures identified above. Furthermore memory may store additional modules and data structures not described above.

Although shows a server computer is intended more as a functional description of the various features which may be present in a set of servers than as a structural schematic of the embodiments described herein. In practice and as recognized by those of ordinary skill in the art items shown separately could be combined and some items could be separated. For example some items shown separately in could be implemented on single servers and single items could be implemented by one or more servers.

Table further includes a row for each user with fields or columns containing user data for each content stream. In some embodiments the user data for a respective content stream includes a subscribed flag indicating whether the user has subscribed to the content stream associated with the column containing the user data. The user data may also include a marked as read flag and timestamp which indicates whether and when the user corresponding to the row has viewed the items in the content stream associated with the column . The user data may further include additional user information such as one or more user specified labels . A user may label content streams that the user may want to view again in the future and a record of the label that the user associated with a content stream may be stored in the user data .

The user data optionally may include one or more additional fields . For example the user data optionally may include a sort order flag for specifying the order in which to display content items on a user interface such as user interface . For example content items may be displayed in chronological order or according to a ranking based on predefined criteria e.g. the quantity and or quality of the content in the content items as well as the recency of the content items . The user data may further include an animation flag to indicate whether or not to display animations on the user interface. The user data may include user interface feature flags or parameter values to specify other user interface characteristics associated with the user. For example user interface feature flags may be used to specify the formatting and color of a user interface. In an embodiment users may set the sort order flag the animation flag and user interface feature flags via menus accessible from the user interface not shown .

Feed content table user subscription table and user preferences table or portions of these tables may be stored using sparse table storage mechanisms since large portions of the user data in these tables may be empty or set to default values.

Columns and are associated with virtual content streams defined as streams derived from one or more other content streams. For example user 1 has subscribed to streams 1 and 2 and assigned the label tech to both streams as indicated by the check mark and text label tech at the intersection of row with columns and . User 1 thereby created stream 3 a virtual stream. In some embodiments a respective virtual stream is given a feed ID that includes a user name or identifier and a label assigned by a respective user e.g. the feed ID may have the form user label . Examples of such feed ID s are listed in row of . In this example stream 3 has the feed ID User1 tech. Because the feed ID of a respective virtual stream includes the user name or identifier of the user who defined the virtual stream multiple users may use the same label without conflict. For example user 25 row not shown has assigned the label tech to one or more streams resulting in stream 5 with feed ID User25 tech .

Some virtual streams may correspond to or may include individual content items on one or more content feeds that have been labeled by a respective user. For example a user e.g. user99 may mark or label specific content feed items as favorite items or the user may assign a user specified label e.g. best or reviews to specific feed items. If the set of user labeled items is made available for subscription by others the user labeled items become a virtual stream that is assigned a stream identifier such as user99 best . This virtual stream is assigned a column in the user subscription table and subscription and user labeling information for the virtual stream is stored in this column.

Check marks in column associated with stream 3 indicate which other users have subscribed to stream 3. In this example user 2 has subscribed to stream 3 and assigned the label friends to it. User 2 also has assigned the label friends to stream 5 created by user 25. User 2 thereby created stream 4 which has feed ID User2 friends . Stream 4 thus is a virtual stream comprising other virtual streams stream 3 and stream 5 demonstrating that multiple levels of recursion are allowed for virtual streams. User 3 has subscribed to stream 4 . If user 3 desired he could label stream 4 thereby creating another virtual stream with an additional level of recursion and another user could subscribe to that virtual stream.

In one embodiment the process of downloading the document begins with transmitting to server a request specified by the bookmark . As discussed in more detail below in some embodiments if the request is a valid request it includes a token that uniquely corresponds to the user identifier of the requesting user and a login cookie also variously called an object cookie file or cookie object containing the requesting user s user identifier sometimes called the user ID . Server receives the request identifies the user or user account of the user and identifies an unread content item for the requesting user . Typically in order for the server to successfully process the user s request the requesting user must be a registered user of the content feed aggregation system and must have subscribed to at least one content feed. The item identified by the server may for example be the most recent unread item in a set of content feeds associated with the selected bookmark. In another example an unread item is identified according to other predefined selection criteria.

A document associated with the identified item is identified . Exemplary identified documents include a document corresponding to a URL in the identified content item or the home page of a content feed containing the identified content item. For example if the identified item is a blog posting the identified document could be a web page containing the posting or it may be the home page of the blog. If the identified item is a news article the identified document could be a web page containing the article or it may be the home page of a news service that published the article.

Server marks the identified content item or a corresponding feed stream as read . In one embodiment when the document identified in operation is linked to a specific content item the specific content item is marked as read. On the other hand when the document identified in operation is a home page for a content feed the corresponding feed stream is marked as read with a timestamp indicating the last time that the feed stream was marked as read. Marking an entire feed stream as read is equivalent from the user s perspective to marking all content items in the feed stream as having been read by the user but is much more efficient because the only update made to the server s database is to update the marked as read flag and timestamp in the user data for the feed stream in the user subscription table . In contrast marking as read all the individual items in the feed stream would potentially require updating the user data for many items in the feed content table . Once a feed stream has been marked as read for a particular user only content items that are newer than the marked as read timestamp can be considered to be unread by the user excluding of course any individual content items that have been marked as read .

Server then sends client a redirect to the identified document or more specifically to a network location associated with the document . Client receives the redirect and downloads the identified document from the redirect location . The downloaded document is displayed to the user .

During operation the number of unread items in the identified set of items is tested against predefined criteria. If the number of unread items meets the predefined criteria a document corresponding to a URL in a content item in the set is identified . The item corresponding to the identified document is marked as read and a redirect to the identified document is sent to client computer . However if the number of unread items does not meet the predefined criteria a document corresponding to a home page of unread items in the set is identified . In addition the content feed corresponding to the unread items is marked as read and a redirect to the identified document is sent to the client computer . Alternately all unread items in the set associated with the home page are marked as read and a redirect to the identified document is sent to the client computer .

For example consider a situation in which the most recent unread item from all the content feeds to which a user subscribes is a news article from a particular news provider. In response to user selection of a bookmark server receives a request specified by the bookmark and identifies a set of items comprising the most recent unread item the news article and all other items provided by the same particular news provider . Now consider that the predefined criteria is whether the number or unread items in the set is less than ten. If the user s feed has less than ten unread items from the particular news provider a web page containing the most recent unread item the news article will be identified the item will be marked as read and a redirect to the web page will be sent to client . However if the user s feed has ten or more unread items a home page for the particular news provider will be identified the feed stream associated with the particular news provider will be marked as read or alternately all the unread items in the feed stream will be marked as read and a redirect to the home page will be sent to client .

Upon receiving a request server checks to see whether a login cookie creating by previously logging in to the feed reader system containing a user ID was received with the request . If no login cookie was received server sends client computer a redirect to a login web page from which the user may log in to the feed reader. Once the user has logged in to the feed reader the user may select a bookmark and thereby initiate process . If a login cookie was received server compares the token in the request to a stored token associated with the user as identified by the user identifier in the login cookie for example token stored in user preferences table . If the received token is consistent with the stored token server proceeds to identify a set of content items for the requesting user and then perform the subsequent steps of process described above. However if the received token is not consistent with the stored token server sends client a redirect to for example a web page displaying an error message or a feed reader home page .

In some embodiments a content feed bookmark functions as a link to a URL that corresponds to an online content feed aggregator. An example of a URL specified by a bookmark is 

In an embodiment an XML file containing a currently published set of content items for a content feed is parsed by item. Each content item includes a title date and text context. Some items also include a link such as a URL associated with the item or an ID assigned by the feed publisher herein called the publisher assigned ID . For each item in the XML file server computer computes an identifier sometimes called the content ID and a content fingerprint. For example the identifier may be a 64 bit number based on the URL of the corresponding content feed and either the publisher assigned ID the item s link or the item s title in that order of preference depending on which information is available. In an embodiment a hash function is applied to this information to produce the identifier. In one embodiment the identifier is a 64 bit value but may be a longer value in other implementations to further reduce the chance of a collision between two distinct content items. In some embodiments the content fingerprint or a respective content item is generated by applying a hash function to the entire content of the content item and the web page or document if any referenced by the content item e.g. referenced by a URL or publisher assigned ID in the content item .

Server computer compares each identifier against the content ID s of feed content table stored in feed content database . If an identifier does not match any of the stored content ID s the corresponding content item is inserted into database along with its fingerprint. If the identifier does match a stored content ID then server compares the content fingerprint of the corresponding item to the content fingerprint of the stored item see for example content fingerprint in . If the content has not changed the corresponding item is not inserted into database . However if the content has changed the corresponding item is inserted into database along with its content ID and fingerprint. In some embodiments this is accomplished by replacing the previously stored content item that matches the content ID of the new content item. In another embodiment the new content items is added to the database without replacing or deleting the previously stored content item that matches the fingerprint of the new content item.

In response to a request from client computer server computer transmits to client computer an ordered list of content items for a specified stream . The specified stream may correspond to a particular content feed i.e. may correspond to a particular publication source at a well defined network location or may be a virtual stream derived from one or more other content streams within the context of server system . Therefore the transmitted ordered list of content items contains items from one or more content feeds corresponding to the specified stream . The transmitted ordered list of content items also may include at least one historical item for at least one of the content feeds corresponding to the specified stream . In an embodiment the list is ordered by time based on timestamps associated with the content items. Alternately the list may be ordered based on other predefined selection criteria e.g. a predefined scoring function of the content and the timestamps of the content items .

A user viewing the displayed list of content items may attempt to scroll beyond the end of the displayed list. This action by the user will prompt client computer to fetch from server computer an additional set of content items corresponding to the specified stream to display to the user. In some embodiments when the user scrolls within a predefined number e.g. a number between five and fifteen inclusive of content items of the end of the displayed list client computer fetches additional items from the server. Specifically client computer transmits to server computer a request for addition content items . The request includes one or more continuation token s previously transmitted to client computer in step . Server computer uses the returned continuation token s to retrieve the requested additional content items from server memory . For example where the second request is for the next N e.g. twenty unread items for the specified stream the request sent by the client computer includes a continuation token containing the timestamp of the first content item in the specified stream that follows the last content item of the same specified stream previously sent to the client computer. Server computer will retrieve twenty items from the specified stream starting with the one identified by the continuation token in the request. In another example where the request is for the next twenty unread items for a particular feed ranked according to predefined criteria client computer returns a continuation token containing a parameter specifying the predefined criteria and one or more parameters that specify either the number of items previously retrieved and transmitted in response to previous requests or the depth of the next item to be retrieved and transmitted to the client computer. Server computer ranks the content items corresponding to the specified feed according to the criteria stated in the continuation token and retrieves from memory the requested number of content items starting at the specified depth in the ranking.

Content items retrieved in accordance with the returned continuation token s are transmitted to client computer and at least a subset of those content items are displayed to the user . For example the client computer may simultaneously display some of the previously received content items and some of the newly received content items. Transmission includes new continuation token s that may be returned in subsequent requests for content items according to the process described above.

In response to a request from client computer an ordered list or more generally a set of items corresponding to stream is transmitted to client computer . The transmitted ordered list contains a specified number of items referred to as client s download window . In the example of client s download window includes 13 items meaning that the ordered list transmitted to client computer includes 13 items. In this example the 13 transmitted items include 7 currently published items and 6 historical items. At least a subset of the transmitted ordered list is displayed to the user see as determined by the size of client s list view window . In the example of client s list view window includes 9 items meaning that 9 items are displayed to the user via the feed reader user interface. Examples of formats for displaying items are shown in . In general the size of client s list view window will vary depending on the space required to display transmitted content items.

The items actually displayed to a user in response to the second request depend on the action taken by the user. In the example of the user has scrolled past the entire list of content items originally displayed in client s list view window . Therefore in this example client s list view window now displays content items 10 18. In general which content items are displayed will depend on the manner in which the user scrolls through the displayed list and the size of the displayed items. The displayed list may include content items retrieved via multiple requests. For example in displayed content items 10 13 were retrieved in response to the first request as part of download window while displayed content items 14 18 were retrieved in response to the second request as part of download window . However all nine content items are displayed to the user in a seamless list.

Similarly at a second client device Client2 in response to instructions or commands from a second user User2 the second client device applies a second label e.g. Label2 to one or more user selected or user specified content feeds . If the labeled set of user specified content feeds is made available for subscription by other users the labeled set of user specified content feeds becomes a virtual stream that is assigned a stream identifier such as User2 Label2 . This virtual stream is assigned a column in the user subscription table and subscription and user labeling information for the virtual stream is stored in this column.

At a third client device Client3 in response to instructions or commands from a third user User3 the third client device applies a third label e.g. Label3 to the first and second streams . The resulting set of labeled streams becomes a third stream if the set of labeled streams is made available for subscription by others. When the user selects the third label which may be represented as a folder name content items for the third stream are presented to the third user . In addition in some embodiments the names of the labeled streams e.g. User1 Label1 and User2 Label2 are presented to the third user . For example the names of the labeled streams may be shown in a subscription list at one side of the GUI or window in which content items of the third stream are displayed.

Additional users e.g. a fourth user at a fourth client device may subscribe to the third stream and thus the process of recursive stream definitions may continue at the client devices of those additional users.

The foregoing description for purpose of explanation has been described with reference to specific embodiments. However the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated.

