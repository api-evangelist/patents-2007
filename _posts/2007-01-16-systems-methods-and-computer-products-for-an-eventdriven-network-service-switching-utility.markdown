---

title: Systems, methods, and computer products for an event-driven network service switching utility
abstract: Systems, methods, and computer products for event driven and timer-driven network service switching. Exemplary embodiments include a network-switching method, including establishing a connection with a network via a network adapter, monitoring the adapter for a connection status with the network, generating a first block of network traffic over the network adapter and blocking a second block of network traffic over the network adapter.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07664851&OS=07664851&RS=07664851
owner: AT&T Intellectual Property, I, L.P.
number: 07664851
owner_city: Reno
owner_country: US
publication_date: 20070116
---
This application claims priority to U.S. Provisional Application Ser. No. 60 830 812 entitled METHODS DEVICES AND COMPUTER PROGRAM PRODUCTS FOR CONTROLLING WIRELESS CONNECTION ACCESS filed on Jul. 14 2006 the contents of which are incorporated by reference herein in its entirety.

The present invention relates generally to network services and more particularly to systems methods and computer products for network switching particularly for data transmission over network adapters.

As wired and wireless networking solutions become more prevalent and systems bandwidth requirements continue to grow the ability to discriminate which bandwidth consuming services such as Windows services are required to run over given connection is also becoming a greater concern. Typically most services tend to be chatty that is the services tend to consume network bandwidth for non essential communications thus accruing unnecessary bandwidth usage. When considered in use with a limited data plan or in striving to get there from a higher cost unlimited bandwidth data plan the resulting additional network traffic can be costly. As adoption of networked solutions continues to grow and businesses seek to keep costs down and system performance maximized the ability to manage costs and still keep devices manageable is needed.

Exemplary embodiments include a network switching method including establishing a connection with a network via a network adapter monitoring the adapter for a connection status with the network and blocking or allowing network traffic as predetermined by tool configuration.

Additional exemplary embodiments include a network switching apparatus including a network access device connected to a network the network access device having a memory and a storage medium a network adapter coupled to the network access device a first process residing in at least one of the memory and the storage medium the first process having instructions to access and generate network traffic over the network adapter a second process residing in at least one of the memory and the storage medium the second process having instructions to monitor the network adapter for a connect and disconnect status enable the first process in response to the network adapter being disabled and disable the first process in response to the network adapter being enabled.

Further exemplary embodiments include a computer program product for providing network switching services the computer program product including instructions for implementing a method including monitoring a network adapter for a connect and disconnect status enabling a first process in response to the network adapter being disabled and disabling the first process in response to the network adapter being enabled.

Other systems methods and or computer program products according to embodiments will be or become apparent to one with skill in the art upon review of the following drawings and detailed description. It is intended that all such additional systems methods and or computer program products be included within this description be within the scope of the exemplary embodiments and be protected by the accompanying claims.

The detailed description explains the exemplary embodiments together with advantages and features by way of example with reference to the drawings.

Exemplary embodiments include systems methods and computer products for network service switching for applications requiring network access that tend to use network bandwidth when not in required use. In general the ability to prevent predefined services from being active while pre defined network adapters are also active in predefined combinations is provided. As such if there are several applications that normally require adapter time or network bandwidth but are not currently in need of required adapter time or network bandwidth they are blocked from accessing the adapter for unnecessary operations. For example on a personal computer PC certain services do not run when certain conditions exist with associated network adapters.

It is therefore appreciated that issues associated with network connectivity are addressed. Although the embodiments described herein can handle a specific switching scenario they can also provide a general switching service for multiple applications over a single adapter. In exemplary implementation a system can determine when a specific adapter has established a network connection and then turn off services that may communicate across this connection. As such a device can be filtered based on network connection speeds and costs.

System further includes applications which can reside in a local memory of network access device a storage medium of network access device or a combination thereof. A first application can be a software application requiring access to network adapter . A second application can be a software application also requiring access to network adapter . As discussed above network access device may implement a network access service that requires a pay by the byte or all you can eat solution. Applications may periodically access network for various reasons that can create network traffic or chatter .

 Chatter can be defined as the network traffic generated in the background by a system service or function. Background traffic like this is usually but not always the result of a service that polls its service hosting server s for a check in looking for any additional tasks to perform or can be background data between an application and its hosting server. In these cases this chatter is considered non critical to current end user operations but may be critical to the long term functioning of that service or application and just needs to occur at a later time.

However one or both of applications may require legitimate access to network via network adapter . Legitimate access refers to an operation in which a user desires to have a given service or function communicate over the network and is willing to pay for the bytes transmitted in the case of a pay by the byte service or assume the bandwidth consumption in general. As such according to exemplary embodiments a third event driven network service switching utility switching application monitors network adapter and the traffic that is transmitted via network adapter . In accordance with exemplary embodiments switching application can turn off an application that is not in legitimate use when an application that is in legitimate use is accessing network adapter . For example first application may be an SMS Agent Host service that allows a service such as the Microsoft Systems Management Service to provide configuration management services and software updates to devices on network such as additional network access device . These services are preconfigured and therefore may generate network traffic that is undesired at a particular time such as when an application that is in legitimate use is accessing the network adapter . However network access is not always required but the SMS Agent Host may constantly try to access network adapter and therefore generate network traffic across the wireless connection that was paid for by the amount of bytes used but not required. SMS Agent Host therefore has a predetermined network access that activates when not always required by the user. Second application can be any other application in which the user desired to access network such as a browser. Switching application therefore determines when the predetermined network access by SMS Agent Host is connected and stops the service when not required or desired by the user such as when the second application is accessing the network adapter . When the user is finished with the network connection using second application and disconnects from the network switching application may automatically sense the adapter disconnect and start the preconfigured service of the SMS Agent Host without unnecessarily using the network adapter .

According to exemplary embodiments the switching application is an event driven network service switching utility application that is triggered by network interface specific events such as the connect or disconnect of a network interface such as wireless adapter . In other exemplary embodiments switching application can check for connect and disconnect events on a periodic basis based on a timer.

The switching application and related network switching services may be implemented as a single program executing on the network access device or may be separate physical components that interact via e.g. an application programming interface or other technique.

In the foregoing example switching application is developed using the .Net 1.1 framework. Configuration options are maintained via a standard XML file. The XML file contains two configurable sections. The first section contains the name of the network adapter that triggers connectivity events as discussed above. The second section contains the name of the services that are stopped and started based on the connectivity event. It is understood that the file type is shown for illustrative purposes and it is further understood that other file forms are contemplated.

Referring still to the monitor file allows network access device to capture the network adapters to watch at step and to capture the process to enable and disable the network adapter at step . As discussed in an exemplary embodiment the process to enable and disable is switching application . Once process has run through the aforementioned initialization switching application can check for connect disconnect events at step either on an event driven basis or on a timed basis as discussed above. Further details of the monitoring process at step are now described.

Referring to the user interface further includes a selection field which can include a pull down menu to select a network service such as a Windows service on a PC that starts stops when the network adapter is connected to a network. The user interface can further include a selection field to indicate that the selected service is not configured a selection field to indicate that the selected service starts when the adapter connects to a network and a selection field to indicate that the service stops when the adapter connects to a network. The user interface can further include navigational buttons to move to the next interface screen or to the prior interface screen.

Referring to the user interface further includes a selection field which can include a pull down menu to select a network service such as a Windows service on a PC that starts stops when the network adapter is disconnected from a network. The user interface can further include a selection field to indicate that the selected service is not configured a selection field to indicate that the selected service starts when the adapter disconnects from a network and a selection field to indicate that the service stops when the adapter disconnects from a network. The user interface can further include navigational buttons to move to the next interface screen or to the prior interface screen.

Referring to the user interface can further include a selection field into which a user run any command line value when the network adapter has been connected to the network. Similarly the user interface can further include a selection field into which a user run any command line value when the network adapter has been disconnected from the network. The user interface can further include navigational buttons to move to the next interface screen or to the prior interface screen.

Referring to the user interface further includes selection fields so that a user can confirm the settings made in the prior interface screens illustrated in and apply the settings to the selected network adapter. The user interface can include a data field that displays the selected network adapter. The user interface can further include a selection field that can be scrollable from which service actions can be selected. The user interface can further include a selection field to indicate that the service starts when the network adapter connects to a network and a selection field to indicate that the service stops when the network adapter connects to a network. Similarly the user interface can further include a selection field that can be scrollable from which service actions can be selected. The user interface can further include a selection field to indicate that the service starts when the network adapter disconnects from a network and a selection field to indicate that the service stops when the network adapter disconnects from a network. The user interface can further include a data field that displays the selected command line value that runs when the network adapter connects to a network and a data field that displays the selected command line value when the network adapter disconnects from a network. The user interface can further include a navigational button to move to the prior interface screen and a button to apply the settings to the selected network adapter.

As described above the exemplary embodiments can be in the form of computer implemented processes and apparatuses for practicing those processes. The exemplary embodiments can also be in the form of computer program code containing instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other computer readable storage medium wherein when the computer program code is loaded into and executed by a computer the computer becomes an apparatus for practicing the exemplary embodiments. The exemplary embodiments can also be in the form of computer program code for example whether stored in a storage medium loaded into and or executed by a computer or transmitted over some transmission medium loaded into and or executed by a computer or transmitted over some transmission medium such as over electrical wiring or cabling through fiber optics or via electromagnetic radiation wherein when the computer program code is loaded into an executed by a computer the computer becomes an apparatus for practicing the exemplary embodiments. When implemented on a general purpose microprocessor the computer program code segments configure the microprocessor to create specific logic circuits.

While the invention has been described with reference to exemplary embodiments it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted for elements thereof without departing from the scope of the invention. In addition many modifications may be made to adapt a particular situation or material to the teachings of the invention without departing from the essential scope thereof. Therefore it is intended that the invention not be limited to the particular embodiments disclosed for carrying out this invention but that the invention will include all embodiments falling within the scope of the claims. Moreover the use of the terms first second etc. do not denote any order or importance but rather the terms first second etc. are used to distinguish one element from another. Furthermore the use of the terms a an etc. do not denote a limitation of quantity but rather denote the presence of at least one of the referenced item.

