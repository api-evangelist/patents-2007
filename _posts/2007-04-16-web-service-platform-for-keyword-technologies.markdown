---

title: Web service platform for keyword technologies
abstract: The present web service platform includes a set of application program interfaces (APIs) and a framework for adding services that correspond to the APIs. The web service platform may also support a stored procedure (sproc) that allows combining results from two or more services before transmitting results to an application. The services relate to keyword technologies.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08074234&OS=08074234&RS=08074234
owner: Microsoft Corporation
number: 08074234
owner_city: Redmond
owner_country: US
publication_date: 20070416
---
Web services that allow an application to communicate with other applications over a network are becoming increasingly popular. A new trend for web based applications is called a mash up . Mash ups utilize two or more different web services from disparate and possibly competing web sites. This ability to obtain and combine data from multiple sources allows unlimited opportunities for programming new types of web based applications.

Described herein are various technologies that support a web service platform for keyword technologies. The web service platform includes a set of keyword service application programming interfaces APIs and a framework for adding services that implement the keyword service APIs. The web service platform may also support a stored procedure sproc that allows combining results from two or more services before transmitting the results to an application.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Before describing the present keyword platform the description defines a few terms to aid in understanding the following discussion. The term web service refers to code that performs business logic through a programmatic interface over a network. The term application refers to code that interacts with one or more web services to obtain results from the one or more web services. A keyword platform refers to a web service platform that implements keyword technologies. Keyword technologies include keyword suggestion keyword forecast keyword relevance keyword taxonomy and other services that obtain information useful to advertisers. A keyword server refers to a server on a network configured with the keyword platform.

As will be explained in more detail below the present keyword platform allows service providers the ability to easily add and update new web services and allows web developers the ability to incorporate the new services into new and or existing applications in a timely manner. The following discussion first describes an operating environment that implements a keyword platform. Next the discussion focuses on components of the keyword platform. The discussion then describes an example data structure suitable for specifying keyword service APIs provided by the keyword platform and describes several example keyword service APIs. Next the discussion describes example queries that allow an application to interact with keyword services via an application. Lastly the discussion describes one embodiment for a keyword server.

However before describing the above items it is important to note that various embodiments are described fully below with reference to the accompanying drawings which form a part hereof and which show specific implementations for practicing various embodiments. However other embodiments may be implemented in many different forms and should not be construed as limited to the embodiments set forth herein rather these embodiments are provided so that this disclosure will be thorough and complete. The following detailed description is therefore not to be taken in a limiting sense.

In various embodiments the logical operations may be implemented 1 as a sequence of computer implemented steps running on a computing device and or 2 as interconnected machine modules i.e. components within the computing device. The implementation is a matter of choice dependent on the performance requirements of the computing device implementing the embodiment. Accordingly the logical operations making up the embodiments described herein are referred to alternatively as operations steps or modules.

The keyword server includes a keyword platform not shown that provides a mechanism for supporting applications that request services available via the keyword server. In addition keyword server is configured to enforce an interface contract for the keyword services available via the keyword server. Each keyword service is associated with a respective interface contract i.e. API . One application e.g. web application may obtain data from multiple keyword services via the interface.

The web applications and intranet applications may perform any type of functionality such as paid searches content advertisements and or other functionality desirable to a specific industry. Web applications may communicate with the keyword server using various known protocols over a network e.g. network and . One common protocol is hypertext transfer protocol http which may be used for interacting with the keyword server when the keyword server and the web application are not on the same corporate network. Another common protocol transmission control protocol tcp may be used for interacting with the keyword server when keyword server and the intranet application are both within the same corporate network. However other protocols may be utilized in conjunction with the present keyword platform without departing from the claimed invention.

The web applications and intranet applications hereinafter jointly referred to as applications may utilize a query based interaction with the keyword services provided by the keyword server. The query based interaction may be implemented using structured query language SQL concepts. described below illustrates some example query interactions.

In addition operating environment may include a data mart . Data mart maintains updated data gathered from web servers . Conventional techniques may be used to update information in data mart .

The keyword platform includes keyword platform APIs and a provider plug in framework . The keyword platform APIs includes service discovery APIs and keyword service APIs . The service discovery APIs allows developers to query a keyword server to identify the services supported by the keyword server. described below illustrates example queries for discovering services.

The keyword service APIs includes a set of application program interfaces APIs that define a contract between service providers and application developers. Keyword service APIs allow application developers to program an application using the set of keyword service APIs without being tied to any specific service provider. The providers may be within a company s intranet and or may be from web sites on the World Wide Web i.e. the web . By utilizing the present keyword platform service providers can quickly release their services to application developers for use. The service providers implement keyword services in conformity with the set of keyword service APIs. The applications can then automatically understand the newly released keyword services and make use of the newly released keyword services in a new or existing application. described below illustrates an example data structure for defining keyword service APIs .

The keyword platform APIs may also include one or more service management APIs . Service management APIs allow system administrators the ability to add and or remove services e.g. services re distribute services to other computing devices and perform other actions that help maintain the keyword platform.

The provider plug in framework provides a mechanism for adding one or more keyword services e.g. services from one or more providers. Each keyword service implements one of the interfaces defined by the keyword service APIs. In one embodiment provider plug in framework may be implemented within a service container . The service container hosts algorithms and execution models related to the services. Developers can add services that implement the plug in interface to the keyword platform.

The provider plug in framework may also include a stored procedure component . The stored procedure component allows combining results from two or more keyword services to create a combined result before transmitting results to an application. The stored procedure component maintains one or more stored procedures that are accessible to a keyword server. The stored procedures may be stored locally on the keyword server or on another computing device accessible to the keyword server. Because the keyword platform supports stored procedures applications may utilize stored procedures to minimize the amount of data that is transmitted over a network and to minimize the amount of business logic coded in the application. A stored procedure call interface is provided by the keyword platform to allow applications access to the stored procedures.

The provider plug in framework may also include a server object model . The server object model supports an object based programming language that an application may use to have one keyword service call another keyword service. The call may then be stored within a stored procedure that is available to the keyword server. The server object model may support any type of object based programming language.

The keyword platform may further include a query language for services . The query language allows developers to query a keyword server for services. The query language may be based on a structured query language SQL and may be based on relational database concepts. In one embodiment keyword services may be modeled as relational tables that can be queried. The query may then be structured to include standard query clauses such as SELECT FROM and or WHERE clauses. The query language may allow results of multiple keyword services to be joined together sequentially provided as a union of results or the like. In another variation the query language may allow an input keyword to be constructed on the fly. described below illustrates some example queries.

The keyword platform may also include shared services . In general shared services represent common tools that any of the keyword services may call. One or more of the shared services may be combined with one or more keyword services into a sproc .

As one skilled in the art will appreciate the functionality provided by the components of the keyword platform may be rearranged in a different manner without departing from the present keyword platform. Thus illustrates one possible arrangement of the components suitable for implementing a keyword platform.

Another category of keyword service APIs may be a forecast category . The forecast category may return forecasts based on a specified term s . An example interface may be ITermForecast. The ITermForecast may be implemented by various methods such as GetTermForecast. GetTermForecast may return forecasts as a table of one row regarding traffic forecasts for a given term where the forecast for each month is listed in a column. Parameters may include a term and an optional starting month and or ending month. The input parameter may be a single term or multiple terms. In one embodiment if multiple terms are supplied the output may be a table of multiple rows. If the INCLUDE STATISTICS option is specified when calling the GetTermForecast method the GetTermForecast method may return statistical information such as standard deviation and or mean. An example utilization of the GetTermForecast method may be for updating an application regularly with information obtained from a data mart shown in . The following is a sample GetTermForecast call from the forecast category along with corresponding output.

Another category of keyword service APIs may be a prediction category . The prediction category may return prediction s based on specified term s . An example interface in the prediction category may be a IDemographicPrediction interface. IDemographicPrediction interface may predict the demographics e.g. age gender for given keyword s . Providers of the IDemographicPrediction interface may include methods based on demographic prediction models. The IDemographicPrediction interface may have several methods such as GetTermPredictedGender GetTermPredictedAge GetTermPredictedDemographic and other prediction methods. The following are some sample method calls from the prediction category along with corresponding output.

Another category of keyword service APIs may be a classification category . The classification category may return one or more categories associated with a specified term s or a specified uniform resource locator s URL . An example interface in the classification category may be ITermCategorization interface. ITermCategorization interface may return likely categories for a given keyword s . The ITermCategorization interface may have several methods such as GetTermCategories. One example method call for the ITermCategorization interface may be as follows 

Another example interface in the classification category may be IUrlCategorization interface. IUrlCategorization interface may return likely categories for a given URL. The IUrlCategorization interface may have several methods such as GetUrlCategories. One example method call for the IUrlCategorization interface may be as follows 

Another category of keyword service APIs may be an extraction category . The extraction category may return one or more entities associated with specified term s or specified uniform resource locator s URL . An example interface in the extraction category may be IEntityExtraction interface. IEntityExtraction interface may return entities associated with given term s . The IEntityExtraction interface may be implemented using various methods such as GetEntities. One example method call for the IEntityExtraction interface may be as follows 

The example method call may return entities having low prices for car rentals. Another example interface in the extraction category may be ITermExtraction interface. ITermExtraction interface may return one or more terms associated with a specified URL. The ITermExtraction interface may be implemented using various methods such as GetTermsFromUrl. One example method call for the ITermExtraction interface may be as follows 

Another category of keyword service APIs may be a monetization category . The monetization category may be based on common monetization factors such as vertical output monetization horizontal processes monetization and or key performance indicators KPIs . An example interface in the monetization category may be ITermMonetization interface. The ITermMonetization interface may be implemented using various methods such as GetTermKPIs. One example method call for the ITermMonetization interface may be as follows 

This example call would return the key performance indicators associated with digital cameras. Another example interface in the monetization category may be IVerticalMonetization interface. Again the IVerticalMonetization interface may be implemented using various methods such as GetVerticalKPIs. One example method call for the IVerticalMonetization interface may be as follows 

This example call may return indicators related to a keyword e.g. Travel Host . The indicators may include a number of clicks a number of impressions an average position of the keyword in specified areas e.g. sidebar and or mainline of the web pages a total cost for all customers with the keyword a click through rate CTR that specifies a percentage of user clicks on a specific ad when the ad is displayed a cost per click CPC and other key performance indicators. One skilled in the art of online advertising will appreciate that different methods may include other key performance indicators along with the ones mentioned above and or may omit one or more of the ones discussed above. As one skilled in the art will appreciate service providers may implement the interfaces in various ways via their provided methods. As long as the service provider implements the interface as specified applications may choose which provider to use without modifying the application. For example if a web developer chooses a default provider in the application when the default provider is modified the application is automatically upgraded to use the new default provider. This allows web developers the convenience of adding new services with little impact to their application.

In example query two providers ATOM and STS are joined using a JOIN clause. The term from myTable is used for both providers when the providers execute. Query illustrates a sequential joining of results. Query may be modified by replacing the FROM clause with FROM myTable t Association a STS s to achieve a simple union of the results from the two providers and .

Even though illustrates example queries using SELECT FROM WHERE JOIN and ORDER BY clauses those skilled in the art will appreciate that other structured query language syntax may be implemented by the query language to interact with keyword services. Thus illustrates a few example queries for interacting with keyword services via an application using a query based language.

Additionally computing device may also have other features and functionality. For example computing device may also include additional storage removable and or non removable including but not limited to magnetic or optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer readable storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Memory removable storage and non removable storage are all examples of computer readable storage media. Computer readable storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by computing device . Any such computer storage media may be part of computing device .

Computing device may also include one or more communication connections that allow the computing device to communicate with one or more computers and or applications . Device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a speaker printer monitor and other types of digital display devices may also be included. These devices are well known in the art and need not be discussed at length here.

The processes described above may be implemented using computer executable instructions in software or firmware but may also be implemented in other ways such as with programmable logic electronic circuitry or the like. In some alternative embodiments certain of the operations may even be performed with limited human intervention. Moreover the process is not to be interpreted as exclusive of other embodiments but rather is provided as illustrative only.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

