---

title: Communication and interface support system
abstract: A system supports, adaptively processing HL7 compatible transaction message data of different HL7 version as well as conversion of transactions between HL7 versions and operational validation of transaction messages. A system for processing HL7 protocol compatible data comprises an interface for establishing a communication link enabling acquisition of HL7 compatible transaction messages. An acquisition processor acquires multiple different HL7 compatible transaction messages including healthcare data using the communication link. An HL7 data processor automatically parses an HL7 compatible transaction message to identify HL7 items indicating type of information conveyed at a location in the transaction message identified in response to a predetermined message location identifier. The HL7 data processor automatically adaptively routes acquired HL7 compatible transaction messages to multiple different storage destinations based on the identified HL7 items indicating type of information conveyed in response to predetermined information associating HL7 items and type of information conveyed with corresponding storage destinations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08117042&OS=08117042&RS=08117042
owner: Siemens Medical Solutions USA, Inc.
number: 08117042
owner_city: Malvern
owner_country: US
publication_date: 20070522
---
This is a non provisional application of provisional application Ser. No. 60 805 494 filed Jun. 22 2006 by M. Braz et al.

This invention concerns a system for adaptively processing HL7 HealthLevel 7 protocol compatible data such as transaction messages for communication between different computer systems.

It commonly occurs that an HL7 compatible interface needs to be established to be suitable for conveying HL7 transaction messages between different computer systems such as between an ADT Admission Discharge and Transfer system and an ambulatory EMR Electronic Medical Record system for example. Such a created interface needs to be capable of transferring different types of HL7 compatible messages between the different systems without error. Known systems validate an HL7 transaction message for accuracy by typically requiring a user to load a transaction message into a text editor and manually count through message data element delimiters and validate that the data and its placement in each element is correct and conforms to the HL7 standard. This type of burdensome time consuming validation may occur during the development of an HL7 interface at the sender receiver or in the integration engine or during system operation to verify correct operation perhaps in response to error. Further this burden increases with the complexity and length of transaction message.

There is a need to emulate how data is to be transmitted or received in a real world situation in testing of interfacing logic within an application. For example test processing of ADT Admission Discharge Transfer message communication to an ambulatory EMR Electronic Medical Record system may involve sending and resending a transaction message multiple times and this may be repeated for different types of messages associated with different scenarios. In known systems such test processing requires substantial user setup time burdensome manual generation of multiple transaction messages for communication by a sending system as well as initiation of transmission of the generated messages. Known systems are thereby prone to error and reliant on other systems for test data support and the other systems resources may not be available. A system according to invention principles addresses these deficiencies and related problems.

A system supports adaptively processing authoring editing transmitting and receiving of HL7 compatible transaction message data of different HL7 version e.g. 2.x and 3.x versions as well as conversion of transactions between HL7 versions and operational validation of transaction messages. A system for processing HL7 protocol compatible data comprises an interface for establishing a communication link enabling acquisition of HL7 compatible transaction messages. An acquisition processor acquires multiple different HL7 compatible transaction messages including healthcare data using the communication link. An HL7 data processor automatically parses an HL7 compatible transaction message to identify HL7 items indicating type of information conveyed at a location in the transaction message identified in response to a predetermined message location identifier. The HL7 data processor automatically adaptively routes acquired HL7 compatible transaction messages to multiple different storage destinations based on the identified HL7 items indicating type of information conveyed in response to predetermined information associating HL7 items and type of information conveyed with corresponding storage destinations.

A system adaptively processes HL7 transaction message data and supports authoring editing transmitting and receiving HL7 transaction message data. The system provides support for different versions of HL7 data including versions 2.x and 3.x XML for example . The system employs programming objects used to represent HL7 transactions that are advantageously exposed for use by other executable applications and in one embodiment employs components including an HL7 Examiner processor HL7 Receiver processor and an HL7 Sender processor. The system advantageously converts HL7 transaction messages between versions including version 2.x and 3.x XML and provides an organized log of transactions for the documentation of interface operation or recording test results. The system also provides templates of HL7 transaction messages for generating test data in multiple versions 2.x and 3.x and validates different HL7 transaction message versions including 2.x and 3.x versions by comparing a transaction with stored message definitions and embedded external definitions e.g. Data Type Definitions DTDs and schemas . The system also adaptively employs Application Programming Interfaces API s for generation and parsing of HL7 transactions and stores the APIs for distribution and use by different executable applications.

A processor as used herein operates under the control of an executable application to a receive information from an input information device b process the information by manipulating analyzing modifying converting and or transmitting the information and or c route the information to an output information device. A processor may use or comprise the capabilities of a controller or microprocessor for example. The processor may operate with a display processor or generator. A display processor or generator is a known element for generating signals representing display images or portions thereof. A processor and a display processor may comprise a combination of hardware firmware and or software.

An executable application as used herein comprises code or machine readable instructions for conditioning the processor to implement predetermined functions such as those of an operating system a context data acquisition system or other information processing system for example in response to user command or input. An executable procedure is a segment of code or machine readable instruction subroutine or other distinct section of code or portion of an executable application for performing one or more particular processes. These processes may include receiving input data and or parameters performing operations on received input data and or performing functions in response to received input parameters and providing resulting output data and or parameters.

A user interface UI as used herein comprises one or more display images generated by a display processor enabling user interaction with a processor or other device and associated data acquisition and processing functions. The UI also includes an executable procedure or executable application. The executable procedure or executable application conditions the display processor to generate signals representing the UI display images. These signals are supplied to a display device which displays the image for viewing by the user. The executable procedure or executable application further receives signals from user input devices such as a keyboard mouse light pen touch screen or any other means allowing a user to provide data to a processor. The processor under control of the executable procedure or executable application manipulates the UI display images in response to the signals received from the input devices. In this way the user interacts with the display image using the input devices enabling user interaction with a processor or other device. The activities herein may be performed automatically or wholly or partially in response to user command. An automatically performed activity is performed in response to machine instruction or operation without direct user interaction in initiating the activity.

HL7 Examiner accelerates HL7 transaction message processing and reduces error involved in the processing by partitioning a transaction message into individual elements having a hierarchical structure stored in repository that facilitates navigation and data validation. HL7 Examiner automatically validates a transaction message by comparing a message with requirements of the HL7 standard to reduce error and facilitates accurately identifying and reporting irregularities in HL7 transaction message data. Further HL7 Receiver and HL7 Sender facilitate development and testing data interfaces by emulating a sending or receiving system. System automatically organizes files of transaction message data and enables re distribution of API s stored in repository for use by multiple applications. The application code in repository is used by HL7 Examiner for determining HL7 transaction message definitions to generate and validate outbound HL7 transaction messages or parse and partition inbound messages into an easy to use object model structure.

System supports and accelerates development test and operation of HL7 communication interfaces and reduces tedious error prone manual processes involved. System allows a user to initiate generation of HL7 transaction messages convert messages between different HL7 versions and check transaction message data validity and compatibility with the HL7 standard. Specifically the system supports HL7 version 2.x and version 3.x XML transaction message creation and processing as well as validation of different version transaction messages against stored message definitions compatible with the HL7 standard and embedded external Data Type Definitions DTDs and schemas. The system also provides message templates of HL7 transactions for generating test data in multiple versions. In addition system emulates transaction message receiving and sending functions to facilitate communication interface test and development when a receiving or sending application is not available. System further provides an organized log of transactions for the documentation of test results and centrally accessible API s for generation and parsing of HL7 transactions for use by multiple different applications.

HL7 Examiner identifies HL7 items data fields indicating type of information conveyed including an HL7 compatible Segment identifier an HL7 compatible Field identifier and an HL7 compatible Component for example by ordinal position within individual segments. Examiner also uses alternate field identification such as field name and provides an overlay of field names corresponding to data items and displays the field names in an overlay for presentation with the hierarchical data structure indicated in window . Window also presents additional information available for each data item in a transaction message including information indicating data type whether an item is required optional name length and a link to value tables if applicable. Further HL7 Examiner and an associated user interface image enables search within a transaction message as well as editing of and addition to message data in a parsed transaction message. Such editing includes an ability to de identify and re populate transaction data elements with unique pre defined data element values stored in data repository .

HL7 examiner supports creation of transaction messages of a user selected HL7 standard version through enabling definition of user defined table values and creation of new empty messages compatible with an HL7 specification. Examiner enables a user or system to select a Message Type Trigger Event and HL7 version for generation of an empty message template. A message template is generated based on message type or segment identifier with default value sets for message elements and a definition of data items elements to be removed from the message or segment. Further a generated template transaction message is populated with unique pre determined or user defined data values aiding compliance with HIPAA Healthcare Information Portability Accountability Act regulations. Data items of generated transaction messages and received messages are validated by comparison with an HL7 version 2.x message definition embedded or external XML DTDs or schemas version 2.x or 3.x as well as user defined HL7 tables. The HL7 and other transaction message standards user templates and user defined tables are stored in local or centralized data repository .

Examiner is integrated with HL7 Sender enabling transaction messages to be communicated dynamically and Examiner converts HL7 transaction messages from one HL7 standard version to another. In addition unit migrates data from a transaction message of one version to a comparable transaction in another specified HL7 version and alerts a user to elements in transaction that could not be migrated. Application Programming Interfaces APIs data determining message format standards user determined templates and user defined tables are stored in a centralized repository e.g. repository that are used to facilitate application HL7 interface programming and reduce the burden of parsing and message generation from executable application code. Examiner accesses data objects comprising HL7 data nodes accessible by field name or number and indicating object hierarchical structure including parent child and sibling objects and data items and whether a validation process indicates that an error is associated with a data object. These features advantageously enable users to create HL7 compatible data interfaces without needing detailed familiarity with the HL7 standard.

Thereby Receiver filters transaction messages and the identified transaction messages are stored in disk locations indicated by corresponding matching Data Director Value criteria. Individual interface settings and used to locate a data item can create 1 . . . n sub data filter definitions to further isolate transactions and route them to different storage locations. As each transaction is received Receiver sends a response via a current connection. The Receiver sends one of the following responses HL7 ACK HL7 version 2.x and 3.x and HL7 NAK HL7 version 2.x and 3.x via communication e.g. TCP IP link . If a transaction message is a custom message no response is generated. Receiver initiates display of summary view display image of transactions received during a communication connection via workstation . Summary view display image allows a user to see file logs written to a disk and reconcile the number of transactions received. A Log entry in image may be selected to open an associated transaction message file and load it for processing by an instance executing copy of HL7 Examiner . A user employs Examiner control unit to specify a string that is used to scan transaction files and filter the log and also initiate a search of transaction messages. Further HL7 Receiver may display a detailed view via workstation of the last transaction received during a communication link connection. shows user interface display image presenting an HL7 message in a hierarchical structure provided by HL7 Receiver . Image shows a hierarchical structure in window corresponding to a last transaction message having Segment ID Field and Component values . HL7 Examiner control unit provides image displaying the illustrated parsed transaction message data items.

An image display summary view presented on workstation displays transaction messages sent and responses received through connection and enables a user to view response logs written to disk. Summary view enables a user to select a particular log entry to open an associated file and load it for processing by an instance of HL7 Examiner . HL7 Sender further enables a user to specify a string that is used to scan response files and filter data items for presentation in summary window . Summary view further displays a list of transaction message files queued to be sent. The list can be sorted or manually ordered for specific transaction message progression testing. In response to user selection of a transaction message file from the list a detail view of the transaction message is displayed where it can be dynamically edited and saved or left in memory for a one time or temporary modification. Summary view may also comprise a detail view display of a last transaction sent by HL7 Sender . In one embodiment the last transaction message is parsed processed and displayed in a hierarchical view provided by HL7 Examiner and enabling search of the message as directed by control unit .

System advantageously provides transaction message data conversion between different HL7 release versions and creates transaction messages using standard message layouts and user templates. The created messages are populated using data elements from predetermined or user determined acceptable data values for transaction messages and comply with user determinable organization criteria. System further performs validation of HL7 transaction messages including version 2.x and 3.x transaction messages by comparison with stored message definitions and embedded or external Data Type Definitions and schemas for example and simulates a system endpoint such as a receiving or sending system.

HL7 Examiner and HL7 Sender are usable in providing an inbound interface to a receiving system and HL7 Receiver and HL7 Examiner are usable to help test an outbound interface from a sending system for example. System is usable by a hospital and healthcare facilities to process and support build test and validate messages. The system employs API s for building and deploying HL7 interfaces within an application and facilitates healthcare integration of HL7 applications. In a healthcare application system is usable to test an integration engine map supporting exchanging transaction messages between different computer systems. Such an integration engine and map is used for conveying laboratory test results between an ambulatory electronic medical record and a clinical repository for example.

In step a display processor in system e.g. in one or more of units and initiates generation of data representing at least one display image reproduced on workstation presenting items comprising a received or sent HL7 transaction message e.g. a last transaction message sent in a hierarchical data structure. Further display images present a list of transaction messages received or sent over a predetermined time period and enable a user to enter data indicating the predetermined IP address and the predetermined communication port identifier through which the communication link is established. Additional display images enable a user to enter the predetermined message location identifier and enable a user to enter the predetermined information associating HL7 items and type of information conveyed with corresponding storage destinations. Also the display images enable a user to enter data for identifying at least a portion of a transaction message header and to enter data indicating at least a portion of a transaction message header is to be removed from a transaction message before storage or a transaction message is to be stored with header data. The process of terminates at step .

The system processes and image displays of are not exclusive. Other systems processes and menus may be derived in accordance with the principles of the invention to accomplish the same objectives. Although this invention has been described with reference to particular embodiments it is to be understood that the embodiments and variations shown and described herein are for illustration purposes only. Modifications to the current design may be implemented by those skilled in the art without departing from the scope of the invention. A system for processing HL7 protocol or other protocol compatible data processes and support build test and validate messages. The processes and applications provided by system may in alternative embodiments be located on one or more e.g. distributed processing devices accessing a network linking the elements or that are remotely accessible. Further any of the functions and steps provided in may be implemented in hardware software or a combination of both.

