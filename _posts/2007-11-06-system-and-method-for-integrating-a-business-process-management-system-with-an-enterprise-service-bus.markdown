---

title: System and method for integrating a business process management system with an enterprise service bus
abstract: A system and method are described for integrating a business process management (BPM) system with an enterprise service bus. The BPM system is used to model business processes which contain a set of activities linked by transitions. The BPM system is used to define, publish, deploy and execute the processes in a distributed computing environment. The service bus is used to manage web services and perform routing and transformation of messages between the web services. A transport is used to describe each process defined by the BPM system as a web service on the service bus and provide the ability to connect the BPM component to the enterprise service bus. This allows each of the processes to be exposed as a web service by injecting data retrieved from the process definition into the enterprise service bus. Furthermore, the processes defined in BPM can consume web services from the service bus.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08185916&OS=08185916&RS=08185916
owner: Oracle International Corporation
number: 08185916
owner_city: Redwood Shores
owner_country: US
publication_date: 20071106
---
The present application claims the benefit of U.S. Provisional Patent Application No. 60 946 929 entitled SYSTEM AND METHOD FOR INTEGRATING A BUSINESS PROCESS MANAGEMENT SYSTEM WITH AN ENTERPRISE SERVICE BUS by Alexandre Toussaint et al. filed on Jun. 28 2007 which is incorporated herein by reference in its entirety.

The following commonly owned co pending United States Patent Applications are related to the present Application and are incorporated by reference herein in their entirety 

U.S. Provisional Patent Application No. 60 938 976 entitled SYSTEM AND METHOD FOR ENABLING DECISION ACTIVITIES IN A PROCESS MANAGEMENT AND DESIGN ENVIRONMENT by Eduardo Carlos Rubio et al. filed on May 18 2007 

U.S. patent application Ser. No. 11 937 390 entitled SYSTEM AND METHOD FOR ENABLING DECISION ACTIVITIES IN A PROCESS MANAGEMENT AND DESIGN ENVIRONMENT by Juan Cruz Nores et al. filed on Nov. 8 2007 

U.S. patent application Ser. No. 11 131 839 entitled SERVICE PROXY DEFINITION by Paul B. Patrick et al. filed on May 18 2005.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsover.

The current invention relates generally to web services and business process modeling software and more particularly to integrating a business process management system with an enterprise service bus.

In recent years web services and business process management BPM systems have become more and more widely used among various organizations. A business enterprise typically desires to integrate all of its data and processes into a single and unified system. For example an organization may automate a business process by having a computer perform certain activities of the business such as receiving a sales order sending a notification to a client or reminding a human participant of work that needs to be performed.

While automation of such business processes has posed a number of difficulties software has become an increasingly important solution component of BPM. By implementing software BPM suites enterprises are becoming more and more able to increase productivity performance profits and decrease inefficiency due to various factors.

Nevertheless a multitude of inefficiencies and problems remain in the BPM software world. The ability of such systems to efficiently integrate into other existing systems to monitor improve and expose business processes and to generally enable efficient service oriented architecture SOA deployments can be improved and these improvements can have significant advantages in business productivity.

In many large project instances organizations implement an enterprise service bus ESB in order to accelerate deployment of service oriented architecture SOA through scalable and extensible integration of service infrastructure. For example the AquaLogic Service Bus available from BEA Systems Inc. can connect mediate and manage services dynamically and provide an enterprise ready service intermediary that protects against costs and disruptions of ongoing service changes. In general such enterprise service buses have been deployed managed and maintained separately from the business process modeling systems described above much to the detriment of various persons and organizations trying to maintain efficiency and reliability of such systems.

In light of the foregoing a system is desirable which is able to integrate the various web service management systems such as the service bus with the business process modeling BPM system in order to increase efficiency synchronize various components and enable bidirectional communications between the two systems. Applicants have identified these as well as other needs which currently exist in the art in coming to conceive the subject matter of the present disclosure.

The invention is illustrated by way of example and not by way of limitation in the figures of the accompanying drawings in which like references indicate similar elements. References to embodiments in this disclosure are not necessarily to the same embodiment and such references mean at least one. While specific implementations are discussed it is understood that this is done for illustrative purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without departing from the scope and spirit of the invention.

In the following description numerous specific details are set forth to provide a thorough description of the invention. However it will be apparent to those skilled in the art that the invention may be practiced without these specific details. In other instances well known features have not been described in detail so as not to obscure the invention.

Although a diagram may depict components as logically separate such depiction is merely for illustrative purposes. It can be apparent to those skilled in the art that the components portrayed can be combined or divided into separate software firmware and or hardware components. For example one or more of the embodiments described herein can be implemented in a network accessible device or appliance. Furthermore it can also be apparent to those skilled in the art that such components regardless of how they are combined or divided can execute on the same computing device or can be distributed among different computing devices connected by one or more networks or other suitable communication means.

In accordance with embodiments there are provided systems and methods for integrating a business process management BPM system with an enterprise service bus ESB . This integration can provide the advantages including but not limited to 1 an ability to abstract and de couple service calls from the BPM system 2 the ability to leverage all of the services provided by the service bus such as monitoring reporting transformations routing of service calls service level agreements SLAs and 3 an extension of the reach of the BPM system by leveraging all of the communication protocols available with the enterprise service bus.

In one embodiment a system is described that includes a business process management system used to model and define business processes comprised of a set of activities linked by transitions. The BPM system is used to create a definition of the process and to publish and deploy the process in a distributed computing environment. The system further comprises an enterprise service bus that is used to manage web services perform routing and transformation of messages between the web services and provide various other types of functionality as will be described in further detail below. A transport can be created to describe each business process defined by the BPM system as a web service on the service bus. This transport can provide the ability to connect the business process management component to the enterprise service bus such that each of the processes is exposed as a web service residing on the ESB. In one embodiment this can be accomplished by injecting data retrieved from the process definition into the enterprise service bus.

The connectivity between the enterprise service bus and the BPM system enables bi directional interaction between the two platforms. For example each business process generated and deployed on the BPM system can be made available as a web service residing on the ESB. This allows the BPM process to take advantage of the management reporting monitoring and various other functionality that is provided by the ESB. Similarly web services managed by the service bus can be invoked from within the BPM process such as within a particular activity of the process definition thereby giving the BPM system an ability to leverage various communication protocols and other features available from the service bus.

In various embodiments the interaction between the BPM system and the service bus is authenticated. In one embodiment the BPM component acts as a consumer of services. In this case the ESB services are introspected and invoked from the BPM processes. The BPM system can consume services using both hypertext transfer protocol HTTP transport and a specific optimized transport generated to carry data between the BPM and the ESB. In the embodiment where the BPM system is acting as a consumer the authentication is performed by the BPM system introspecting a username token WS Security Policy assertions attached to the business service web services description language WSDL document. The WSDL of the proxy service exposed as a web service can be found using a uniform resource locator URL . If the BPM system is acting as a provider the BPM processes exposed as a web service can be made to support the username token profile.

In various embodiments the proxy service introspection of the ESB can be simplified in order to create a better user experience for the BPM system. First a proxy service can be selected on the enterprise service bus and the ESB management host external resource can be selected or created for the proxy. The appropriate transport can be determined and a representation of the selected proxy service is generated in the catalog of the BPM system. Further a new ESB proxy service external resource can be automatically created.

The BPM processes that are being exposed as web services can be published and deployed on the service bus. This can be performed via a process administration console. For example on the edit external resource screen of the console the user can specify the name of the project and the folders path which may exist otherwise the corresponding paths may need to be created. Via this screen the user can publish the selected process on the service bus update processes that are out of date or incompatible or un publish selected processes.

In various embodiments the possible states of the published process include but are not limited to the following 

In various embodiments a management application programming interface API can be provided for both listing of service bus objects and creating and moving or publishing of these objects. In one embodiment the API connects to the enterprise service bus via Java Management Extensions JMX and uses the public service bus MBeans to perform the required operations. For example the service bus configuration MBean can be used. The BPM system can wrap all the operations on a data access object DAO manager class such as fuego.alsb.dao.DAOManager. Of course the naming convention is not limiting and is provided for illustration purposes only.

A set of service queries can be provided for retrieving proxy services and business services using parameters such as query.setWSDLBasedService true or query.setTransportScheme http . The version of the BPM process can be stored on the web services description language WSDL document representing that process on the service bus.

In various embodiments in order to publish a new BPM process on the service bus a set of objects can be exported from the ESB as a template and they can be further customized. Subsequently these customized objects can be packaged inside a Java Archive JAR file and uploaded and imported into the enterprise service bus using JMX. In one embodiment during the process the customized templates are stored on the local computer s temp directory and these filed need not necessarily be deleted after the import is completed.

The term business process management BPM as it is generally used defines the different activities of an organization or a business group used to implement and complete specific processes. After a process is in place additional steps can be performed to improve and optimize its flow and performance. In broad terms the main activities that constitute business process management can be divided into four top categories design implementation execution and monitoring. A business process management system can provide a collection of software tools that together can be used to model implement run monitor and optimize a business process.

Business processes are a part of the day to day operations and services of any corporation. Some examples of processes include applying for a house loan e.g. loan origination process starting a mobile phone service account initiation process hiring a new employee employee on boarding process building a new jet engine parts and assembly process as well as countless other processes performed by enterprises and organizations in order to accomplish specific goals. Processes can range from very simple to highly complex and sophisticated involving numerous decisions tasks and activities.

The term process as used in this specification is a set of activities which collectively realize a business objective. The business process can be thought of as the process driven application with the model and all the integration presentation and logic. A typical process includes a logical flow with associated roles and systems. It is modeled tested and simulated within the process designer component of the business process management BPM system. Each process can have associated therewith a process definition which provides the representation of the business process in a form that supports automated manipulation such as modeling or enactment by a process execution engine or a web service. The process definition contains a set of related activities and their relationships as well as criteria to indicate the start and termination of the process and information about the individual activities such as roles systems and user interface forms. In one embodiment the process definition is contained in an extensible markup language XML file and can be read executed monitored and manipulated by a process designer execution engine or other components of the BPM system.

Business process can be designed with a process designer and executed with a BPM execution engine along with client applications management tools and other components to interact with it. All of these modules can be included within the BPM system. Additionally if a business process invokes web services reads from a custom database or uses Enterprise JavaBeans EJBs it may be necessary to ensure that these services are available in order to enable the application to work as expected.

In one embodiment a process includes a set of activities where each activity represents a single piece of work that forms a different step of the process. The various steps are linked together through transitions. Activities can be user interactive or they can be totally automated. An activity can also include a series of tasks to complete that activity. For user interactive activities a role can be defined to identify which user is allowed to interact with the process at each point.

When a business process is executed by an engine it forms a specific process instance. A process instance is the representation of a single enactment of a process or an activity within a process including its associated data. In one embodiment each instance represents a separate thread of execution of the process or activity and will have its own internal state and externally visible identity which may be used for example to record or retrieve audit data relating to the individual enactment such as a particular purchase order number as opposed to the general purchase order process. Instances can start at the Begin activity of the process and finish in the End activity. The path the instances take can depend entirely on the data of the instance and the external environment.

As illustrated a business process management system can include a set of software modules that can be accessed via a network such as the internet by various users . The network can also include wired or wireless communications radio frequency RF based satellite microwave or any other form of communication network where exchange of data is enabled between the components connected thereto. In various embodiments the BPM system includes an interface layer such as a graphical user interface GUI accessible via a website or portal for allowing a user to design manipulate execute and monitor the performance of various processes. Furthermore the system can include a security layer that enables user authentication and authorization of services to the system.

The BPM system can include a catalog manager that is used to define and specify the components or programs that are called from a business process. These BPM components can include compiled software programs classes or routines that are stored by the catalog manager in a data repository . In one embodiment the catalog manager defines describes and organizes the software components.

The process designer module can be used to design business processes by various users of the BPM system. Once the process is designed by using the process designer its definition file can be generated and stored on a local or remote computer. The designer can also publish the created business processes. Once the designed business process is published it can be stored into the data repository and it can also be deployed to an execution engine for executing.

The execution console can be used by various users of the system in order to manage any of the execution engines which have process instances deployed and executing thereon. In one embodiment the execution engines are used to deploy the published business processes execute tasks by the users and perform automatic business process activities and perform any other tasks needed by each activity of the process instance. The execution engines can manage the execution of each process instance. One example of such process instance is processing a specific sales order using a general business process for processing sales orders. The execution engine can retrieve and collect business process definitions from the repository manage the execution of a particular user interactive task or automatically execute the task if it is automated.

A BPM server can maintain the state of each executing process instance in the repository . A repository can include a relational database management system RDBMS file storage content management systems as well as any other form of data storage systems. During the execution of the instance persistent variables can maintain the values for each activity task of the specific process instance. These variables can be stored in the repository and can be associated with the specific process instance.

In various embodiments persistent variables can include instance variables and argument variables. Instance variables can record values that may be passed from one activity of a business process to another activity within the same business process. As such instance variables maintain the state of the instance within the context of the business process. Argument variables on the other hand record values that may be passed from one business process or instance to another business process or instance.

In various embodiments the BPM system illustrated in can have a multitude of different users. As an illustration user may be a business designer person that uses the BPM system to design the various processes desired by an enterprise. Users and can be employees of the enterprise which are responsible for executing the various activities of the business process instance. For example user can be a salesperson that receives a sales order verifies it for completeness and enters it into the system. User may be a supervisor who validates or otherwise resolves any exceptional situations that may occur. User can be an administrator of the BPM system responsible for monitoring and improving the performance of the business processes executing on the engines.

Each user or sets of users can be assigned to a particular role. In one embodiment a role is a job function in a process that has associated activities to be performed by a user or group. Users and or groups can be associated with process roles in the process administrator utility. A business process can include an abstract role that is used at design time to represent abstract user sets which will represent the persons in an organization responsible for performing the various activities of the process. Subsequently the abstract role can be matched to an organizational role based on values that correspond to the actual users of the organization. As such the organizational role can be parametric by being assigned a value that corresponds to user sets and can take on multiple values that correspond to different user sets. The use of abstract roles enables a business process to be designed and deployed to several different organizations by specifying the organization specific users via the organizational settings module .

As illustrated a process can be designed and modeled by manipulating various graphical icons of the interface screen . Custom colors and shapes can be used to designate the various activities tasks and transitions of the business process. In one embodiment a process includes a set of activities connected by one or more transitions . The set of activities can include a Begin activity and an End activity used to initiate and finish the execution of the business process. Furthermore each activity can be fully automated or can require user intervention. In one embodiment fully automated activities can be illustrated as square shaped icons while those activities involving human intervention can be illustrated by circular shaped icons.

The sequence of activities can be coupled by transitions such as transition . The transitions can be used to which activity or activities are to be initiated after the completion of the current activity. Either one multiple or no activities can be invoked after completion of each activity. In one embodiment the number and invocation of the next activities depends on the data evaluated and decisions made during the current activity.

The business process can be designed by using one or more roles . At design time these roles can be abstract roles so as to enable the use of the process with multiple organizations. At runtime the abstract roles can be matched to organizational roles with specific user sets filling each role. In one embodiment the activity is placed in a particular role column as illustrated in . The user that satisfies the role can be permitted or required to perform the various tasks of each activity. For example the users assigned to role can perform the tasks associated with activities and and users assigned to role can perform the tasks associated with activity .

As one illustration the business process can include a sequence of activities for processing a sales order. Each activity could comprise its own series of tasks. For example an activity that notifies a client of an incomplete sales order may include the task of sending a notification email message. It should be noted that the specific business process shown in is provided purely for illustrational purposes and is not intended to limit the invention. The BPM system can be used to design execute and monitor a wide variety of business processes ranging from very simple to highly sophisticated. Furthermore it should also be noted that the particular graphical symbols used to illustrate each activity or transition are also provided purely as examples and any alternative symbols could be used within the scope of the various embodiments described herein. In some scenarios the symbols could also be made configurable by a user or administrator of the system.

In many cases enterprises need to not only create processes and services but also manage them across the service life cycle discovery composition interoperability security validation deployment operations management and administration. The enterprise service bus is therefore designed for connecting mediating and managing interactions between various heterogeneous services not only web services but also Java .Net messaging services and legacy end points. All layers of the architecture can be service enabled presentation services business processes data services and shared services.

As illustrated the enterprise service bus ESB can be implemented on an application server and can provide a flexible infrastructure for composing and managing services able to handle any incompatibilities that may arise between them. The ESB thus provides the functionality of service management composition security and messaging . In one embodiment service management includes dashboard applications monitoring with metrics collection and display service level agreements SLAs reporting and open interface functionality . Composition of services can include transformation of messages service discovery and validation service call out message flow modeling and a test browser . Security can include web services WS security such as the OASIS Web Service Security standard as well as the Username Token Profile and X.509 Token Profile. Furthermore security can also encompass transport protocol security console security and policy . Furthermore messaging can include a services transport layer and a transport software development kit SDK .

In various embodiments the ESB can act as an intermediary between service consumers and service providers. In certain embodiments some service providers are also service consumers and vice versa. The ESB can connect and mediate a wide variety of services such SAP Adapter 352 WebLogic Server 354 MQSeries 356 BEA 348 .NET 350 custom services and various others. In one embodiment the service bus contains a set of proxy services which serve as intermediaries hosted locally on the ESB. The service clients can thus exchange messages with an intermediary proxy service instead of directly with an external service.

As illustrated the general architecture includes a presentation services infrastructure that provides composite applications and presentation services . This infrastructure can be provided for example by WebLogic Portal available from BEA Systems Inc. or any other product that offers similar functionality. In various embodiments the presentation services layer can include a portal framework JSR 168 compliant Portlets and web services for remote portlets WSRP . JSR 168 is a Java application programming interface API designed to enable interoperability between the portal server and various portlets in a standardized manner. WSRP on the other hand is a protocol designed to access remote portlets in a standard way. These two specifications are often used together where JSR 168 specifies the portlet and WSRP specifies remote communications of the portlet with remote containers.

The business process management infrastructure can provide the process modeling and human driven processes . In various embodiments this component of the architecture is the BPM system as described above. The BPM system is a set of design development and runtime modules for building business process management solutions. In one embodiment the modules are used for modeling simulating developing deploying executing and managing enterprise business processes.

The enterprise service bus can be used to expose and manage the business processes defined by the BPM System. Furthermore the service bus can be accessed directly from the portal framework or various other components and can manage a wide variety of other services in addition to the processes of the BPM. In various embodiments the services managed and exposed via the enterprise service bus can be listed on a universal description discovery and integration UDDI service registry . UDDI is an extensible markup language XML based registry that enables various businesses worldwide to publish service listings discover and define how those services can be accessed and interact with each other over networks such as the internet. The UDDI registry can be interrogated via the SOAP protocol and can provide access to web services description language WSDL documents for the services listed thereon. In various embodiments the BPM processes exposed on the service bus can also be published to the UDDI registry for access by other entities.

The data layer of the architecture can enable data access services that provide a unified view of data from any source across the enterprise. In one embodiment the data access services can be provided by the Aqualogic Data Services Platform available from BEA Systems Inc. or any other similar product. In various embodiments the data services layer allows services to function as single access points for unified and consistent information for easier data access aggregation and updates better data consistency and simpler application development. The data services layer can access local databases databases of partner organizations applications various customer databases and mainframes .

As illustrated the portal layer can provide various portlets Java Server Pages JSPs page flows personalization and security and Spring application framework configuration . The BPM system can provide business processes and worklists . In one embodiment a worklist is a central locus of activity for a workflow user that displays lists of tasks for the user and the roles to which the user belongs.

In various embodiments the portal can maintain connectivity with the BPM system and the enterprise service bus . As previously described the service bus can include a set of proxy services that validate transform enrich combine coordinate or route messages between various business services . In one embodiment the service bus provides governance error logging handling or runtime changes rollback of such changes configuration of web services and WSDLs for the web services published thereon.

In various embodiments the enterprise service bus can be a layer on top of an application server which provides the specific functionality for some web services e.g. worker service calculation service and enables the Spring Web Service . The application server can connect to the various backend resources such as databases core systems data warehouses and other similar systems . For example the data access object DAO and the hibernate DAO on the application server can provide interfaces between the applications and various data storage devices. Further the application server can also provide the Spring framework configuration . The Spring framework is an open source application framework for Java applications and provides a solution to many technical challenges faced by Java developers and organizations wanting to create applications based on the Java platform. It should be noted that the Spring framework is not intended to limit any aspect of the invention and various alternatives can be used such as the Enterprise JavaBeans EJB framework.

As illustrated the system integrates a business process management BPM system with an enterprise service bus . The BPM system is used to model and define business processes . These business processes can be comprised of various activities linked by one or more transitions. Each process can be composed modeled and defined in a definition file and subsequently deployed instantiated in a distributed networking environment using the BPM system. The BPM system can include an execution engine that executes each process instance a catalog manager that manages the various components of each process in a catalog and various other modules as previously described.

In various embodiments the processes of the BPM system can be providers as well as consumers of web services residing on the enterprise service bus . For example an activity of one or more BPM processes can invoke a proxy service in order to obtain access to an external service thereby effectively acting as a consumer of that web service. Furthermore once that process is published and deployed it can be made available as a web service itself on the enterprise service bus such that other clients and entities of the service bus can gain access to this business process. In this scenario the BPM would be functioning as a provider of the web service. In one embodiment each of the processes of the BPM system can be exposed as proxy services on the service bus . For example upon selecting a proxy service of the ESB a representation of that proxy service can be automatically generated in the catalog of the BPM system and a new external proxy service resource is automatically created. On the external resource the user may need to specify a service bus management host configuration. The name of the project and the folders path may exist and if they do not these should be created by using the Create Structure button or manually by using the service bus configuration console.

A transport can be created to describe each business process as a web service in an optimized manner. This transport can provide the ability to connect the business process management component to the enterprise service bus such that each of the processes is exposed as a web service residing on the ESB. This can be accomplished by injecting data retrieved from the process definition into the enterprise service bus. In one embodiment the data injected is associated with the begin activity of the business process and an end activity such that corresponding functions can be invoked as a web service from the ESB.

In various embodiments several types of transport can be supported by the integration system. For example hypertext transfer protocol HTTP can be used as one type of transport. In another embodiment a new transport can be created in order to optimally describe the data associated with the business process being injected into the service bus. For example this transport can define the begin activity and end activity of each business process that is being exposed.

It is preferred that the BPM system be able to authenticate natively with the service bus via Web Services Security WS Security . In one embodiment the BPM system is adapted to be able to understand and exchange WS Policy elements with the enterprise service bus. If the BPM system and the ESB are installed in the same environment it is preferred that the BPM system can bypass the WS stack on local calls and invocations. This can significantly improve performance during communication and process execution between the two components. This can also allow for native Java calls between the BPM and the ESB as well as allow XA X Open distributed transaction processing transactions to be possible.

In various embodiments two types of interaction can be authenticated. In the case where the BPM system is a consumer the BPM system introspects Username Token WS SecurityPolicy assertions attached to the WSDL document that describes the web service. In the case where the BPM system is a provider the BPM system is configured to support the Username Token profile.

Once the business process is imported into the service bus the user can be given an option to publish the selected process on the ESB update processes that are out of date or that are incompatible with confirmation or remove the selected processes from the service bus. A web console can be provided that will have buttons providing access to the ESB deployment panel and optionally to access the UDDI registry. One button on the project view can access the ESB panel and one checkbox can specify enablement of the automatic updates to the service bus. The interconnectivity can allow the BPM system to take advantage of the functionality of the ESB including but not limited to service management service brokering service lifecycle service bus security service messaging as well as other features.

In various embodiments the clients of the system include but are not limited to applications software modules classes and methods human users computing devices and other web services. In one embodiment the web service is a software component that is capable of being accessed by a client via a network such as the internet. For example the service bus can mediate between external services and the various enterprise services that may be provided on an internal application server. In the preferred embodiment clients of the web services communicate using XML messages via simple object access protocol SOAP . In this embodiment the web service can have a WSDL document that describes the service interface along with the details of its bindings to specific protocols in XML format. The WSDL document can also specify the WS Security policy for that service.

As shown in step a process definition can be created by using the BPM tool and that definition can include one or more activities linked by transitions. The process can be executed and form a process instance. The process can introspect and consume one or more web services residing on the service bus as illustrated in step .

In step a transport is used to describe the process as a web service to the enterprise service bus. The data retrieved from the process definition can be injected into the enterprise service bus in order to expose the created process as a web service accessible from said enterprise service bus as shown in step . This can allow the process to be published as a web service on the enterprise service bus for access by other clients of the system as shown in step . As such the various tools and functionality of the service bus can be employed to manage the business process created on the BPM system in step . For example the advantages provided by such functionality include but are not limited to 1 an ability to abstract and de couple service calls from the BPM system 2 the ability to leverage all of the services provided by the service bus such as monitoring reporting transformations routing of service calls service level agreements SLAs and 3 an extension of the reach of the BPM system by leveraging all of the communication protocols available with the enterprise service bus.

Various embodiments previously described include a computer program product which is a storage medium media having instructions stored thereon in which can be used to program a general purpose or specialized computing processor s device s to perform any of the features presented herein. The storage medium can include but is not limited to one or more of the following any type of physical media including floppy disks optical discs DVDs CD ROMs micro drives magneto optical disks holographic storage ROMs RAMs PRAMS EPROMs EEPROMs DRAMs VRAMs flash memory devices magnetic or optical cards nanosystems including molecular memory ICs paper or paper based media and any type of media or device suitable for storing instructions and or information.

Various embodiments include a computer program product that can be transmitted in whole or in parts and over one or more public and or private networks wherein the transmission includes instructions which can be used by one or more processors to perform any of the features presented herein. In various embodiments the transmission may include a plurality of separate transmissions.

Stored on one or more of the computer readable storage medium media the present disclosure includes software for controlling both the hardware of general purpose specialized computer s and or processor s and for enabling the computer s and or processor s to interact with a human user or other mechanism utilizing the results of the present invention. Such software may include but is not limited to device drivers operating systems execution environments and containers as well as user interfaces and applications.

The foregoing description of the preferred embodiments of the present invention has been provided for purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations can be apparent to the practitioner skilled in the art. Embodiments were chosen and described in order to best explain the principles of the invention and its practical application thereby enabling others skilled in the relevant art to understand the invention. It is intended that the scope of the invention be defined by the following claims and their equivalents.

