---

title: Methods and systems for incorporating at least one window from a first desktop environment having a first themed graphical display into a second desktop environment having a second themed graphical display
abstract: A system for incorporating at least one window from a first desktop environment having a first themed graphical display into a second desktop environment having a second themed graphical display includes a first virtual channel, a second virtual channel, and a local agent. The first virtual channel conveys graphical data associated with a window in the first desktop environment comprising a client area and a window rectangle. The second virtual channel conveys window attribute data associated with the window and including screen coordinates for the client area. A local agent forms a corresponding window in the second desktop environment, the corresponding window displaying the graphical data received from the first virtual channel in a local client area displayed at screen coordinates in accordance with the received window attribute data, the corresponding window having a local window rectangle displayed according to a second graphical theme.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08046695&OS=08046695&RS=08046695
owner: Citrix Systems, Inc.
number: 08046695
owner_city: Fort Lauderdale
owner_country: US
publication_date: 20071116
---
The present disclosure relates to methods and systems for incorporating at least one window in one desktop environment into a second desktop environment. In particular the present disclosure relates to methods and systems for incorporating at least one window from a first desktop environment having a first themed graphical display into a second desktop environment having a second themed graphical display.

Seamless window technology allows a user of a client device to view and interact with local versions of remote windows provided by servers. Typically the local version of the remote window is displayed on the client device according to a graphical theme applied to the remote window on the server. In some environments the remote window has a theme that is different from a theme of other local windows displayed by the client device which results in a local desktop environment displaying local windows according to one theme and local versions of remote windows according to a second theme. This may result in the display of an inconsistent confusing aesthetically unpleasant desktop environment for the user.

In one aspect a method for incorporating at least one remote window from a remote desktop environment having a first themed graphical display into a local desktop environment having a second themed graphical display includes the step of receiving via a first virtual channel coupled to a remote desktop environment displayed according to a first graphical theme graphical data associated with a remote window comprising a client area and a window rectangle. The method includes the step of receiving via a second virtual channel coupled to the remote desktop environment window attribute data associated with the remote window and including screen coordinates for the client area. The method also includes the step of forming a corresponding window in a local desktop environment displayed according to a second graphical theme the corresponding window displaying the graphical data received from the first virtual channel in a local client area the local client area displayed at screen coordinates in accordance with the window attribute data received from the second virtual channel the corresponding window having a local window rectangle generated by a local operating system and displayed according to a second graphical theme.

In one embodiment the method includes the step of receiving from a remote agent via the second virtual channel an instruction for directing the formation of the corresponding local window. In another embodiment the method includes the step of determining by a remote agent whether to transmit to the local agent the screen coordinates for the client area. In still another embodiment the method includes the step of transmitting by the local agent to a remote agent window attribute data associated with the client area of the corresponding window.

In another aspect a system for incorporating at least one remote window from a remote desktop environment having a first themed graphical display into a local desktop environment having a second themed graphical display includes a first virtual channel a second virtual channel and a local agent. The first virtual channel which is coupled to a remote desktop environment conveys graphical data associated with a remote window. The remote window includes a client area and a window rectangle. The remote desktop environment is displayed according to a first graphical theme. The second virtual channel which is coupled to the remote desktop environment conveys window attribute data associated with the remote window. The window attribute data including screen coordinates for the client area. The local agent which is coupled to the remote desktop environment via the first and second virtual channels directs the formation of a corresponding local window in a local desktop environment displayed according to a second graphical theme. The corresponding local window includes a local client area that displays the graphical data conveyed by the first virtual channel which is displayed at screen coordinates within the local desktop environment in accordance with the window attribute data conveyed by the second virtual channel and has a local window rectangle displayed according to a second graphical theme.

In one embodiment a first machine generates the remote desktop environment and providing to a user of a second machine access to the remote desktop environment. In another embodiment the local agent executes on the second machine displaying the local desktop environment to a user. In still another embodiment a remote agent transmits to a local machine an instruction for directing the formation of the corresponding local window. In yet another embodiment a remote agent includes a detection process determining whether to transmit to the local agent the screen coordinates for the client area.

Referring now to an embodiment of a network environment is depicted. In brief overview the network environment comprises one or more clients also generally referred to as local machine s client s client node s client computer s client device s or endpoint s in communication with one or more servers also generally referred to as server s or remote machine s via one or more networks .

Although shows a network between the clients and the servers the clients and the servers may be on the same network . The network can be a local area network LAN such as a company Intranet a metropolitan area network MAN or a wide area network WAN such as the Internet or the World Wide Web. In some embodiments there are multiple networks between the clients and the servers . In one of these embodiments a network may be a private network and a network may be a public network. In another of these embodiments a network may be a private network and a network a public network. In still another embodiment networks and may both be private networks.

The network may be any type and or form of network and may include any of the following a point to point network a broadcast network a wide area network a local area network a telecommunications network a data communication network a computer network an ATM Asynchronous Transfer Mode network a SONET Synchronous Optical Network network a SDH Synchronous Digital Hierarchy network a wireless network and a wireline network. In some embodiments the network may comprise a wireless link such as an infrared channel or satellite band. The topology of the network may be a bus star or ring network topology. The network and network topology may be of any such network or network topology as known to those ordinarily skilled in the art capable of supporting the operations described herein. The network may comprise mobile telephone networks utilizing any protocol or protocols used to communicate among mobile devices including AMPS TDMA CDMA GSM GPRS or UMTS. In some embodiments different types of data may be transmitted via different protocols. In other embodiments the same types of data may be transmitted via different protocols.

In one embodiment the system may include multiple logically grouped servers . In these embodiments the logical group of servers may be referred to as a server farm . In some of these embodiments the servers may be geographically dispersed. In some cases a farm may be administered as a single entity. In other embodiments the server farm comprises a plurality of server farms . In one embodiment the server farm executes one or more applications on behalf of one or more clients .

The servers within each farm can be heterogeneous. One or more of the servers can operate according to one type of operating system platform e.g. WINDOWS NT manufactured by Microsoft Corp. of Redmond Wash. while one or more of the other servers can operate on according to another type of operating system platform e.g. Unix or Linux . In some embodiments a server executes an application on behalf of a user or a client . In other embodiments a server executes a virtual machine which provides an execution session within which applications execute on behalf of a user or a client . In one of these embodiments the execution session is a hosted desktop session. In another of these embodiments the execution session provides access to a computing environment which may comprise one or more of an application a plurality of applications a desktop application and a desktop session in which one or more applications may execute.

The servers of each farm do not need to be physically proximate to another server in the same farm . Thus the group of servers logically grouped as a farm may be interconnected using a wide area network WAN connection or a metropolitan area network MAN connection. For example a farm may include servers physically located in different continents or different regions of a continent country state city campus or room. Data transmission speeds between servers in the farm can be increased if the servers are connected using a local area network LAN connection or some form of direct connection.

Server may be a file server application server web server proxy server appliance network appliance gateway application gateway gateway server virtualization server deployment server SSL VPN server or firewall. In some embodiments a server provides a remote authentication dial in user service and is referred to as a RADIUS server. In other embodiments a server may have the capacity to function as either an application server or as a master application server. In still other embodiments a server is a blade server. In yet other embodiments a server executes a virtual machine providing to a user or client computer access to a computing environment.

In one embodiment a server may include an Active Directory. The server may be an application acceleration appliance. For embodiments in which the server is an application acceleration appliance the server may provide functionality including firewall functionality application firewall functionality or load balancing functionality. In some embodiments the server comprises an appliance such as one of the line of appliances manufactured by the Citrix Application Networking Group of San Jose Calif. or Silver Peak Systems Inc. of Mountain View Calif. or of Riverbed Technology Inc. of San Francisco Calif. or of F5 Networks Inc. of Seattle Wash. or of Juniper Networks Inc. of Sunnyvale Calif.

The clients may also be referred to as client nodes client machines endpoint nodes or endpoints. In some embodiments a client has the capacity to function as both a client node seeking access to resources provided by a server and as a server providing access to hosted resources for other clients 

In some embodiments a client communicates with a server . In one embodiment the client communicates directly with one of the servers in a farm . In another embodiment the client executes a program neighborhood application to communicate with a server in a farm . In still another embodiment the server provides the functionality of a master node. In some embodiments the client communicates with the server in the farm through a network . Over the network the client can for example request execution of various applications hosted by the servers in the farm and receive output data of the results of the application execution for display. In some embodiments only the master node provides the functionality required to identify and provide address information associated with a server hosting a requested application.

In one embodiment the server provides the functionality of a web server. In another embodiment the server receives requests from the client forwards the requests to a second server and responds to the request by the client with a response to the request from the server . In still another embodiment the server acquires an enumeration of applications available to the client and address information associated with a server hosting an application identified by the enumeration of applications. In yet another embodiment the server presents the response to the request to the client using a web interface. In one embodiment the client communicates directly with the server to access the identified application. In another embodiment the client receives output data such as display data generated by an execution of the identified application on the server .

In some embodiments the server or a server farm may be running one or more applications such as an application providing a thin client computing or remote display presentation application. In one embodiment the server or server farm executes as an application any portion of the Citrix Access Suite by Citrix Systems Inc. such as the MetaFrame or Citrix Presentation Server and or any of the MICROSOFT WINDOWS Terminal Services manufactured by the Microsoft Corporation. In another embodiment the application is an ICA client developed by Citrix Systems Inc. of Fort Lauderdale Fla. In still another embodiment the server may run an application which for example may be an application server providing email services such as MICROSOFT EXCHANGE manufactured by the Microsoft Corporation of Redmond Wash. a web or Internet server or a desktop sharing server or a collaboration server. In yet another embodiment any of the applications may comprise any type of hosted service or products such as GOTOMEETING provided by Citrix Online Division Inc. of Santa Barbara Calif. WEBEX provided by WebEx Inc. of Santa Clara Calif. or Microsoft Office LIVE MEETING provided by Microsoft Corporation of Redmond Wash.

A client may execute operate or otherwise provide an application which can be any type and or form of software program or executable instructions such as any type and or form of web browser web based client client server application a thin client computing client an ActiveX control or a Java applet or any other type and or form of executable instructions capable of executing on client . In some embodiments the application may be a server based or a remote based application executed on behalf of the client on a server . In one embodiments the server may display output data to the client using any thin client or remote display protocol such as the Independent Computing Architecture ICA protocol manufactured by Citrix Systems Inc. of Ft. Lauderdale Fla. or the Remote Desktop Protocol RDP manufactured by the Microsoft Corporation of Redmond Wash. The application can use any type of protocol and it can be for example an HTTP client an FTP client an Oscar client or a Telnet client. In other embodiments the application comprises any type of software related to voice over internet protocol VoIP communications such as a soft IP telephone. In further embodiments the application comprises any application related to real time data communications such as applications for streaming video and or audio.

The client and server may be deployed as and or executed on any type and form of computing device such as a computer network device or appliance capable of communicating on any type and form of network and performing the operations described herein. depict block diagrams of a computing device useful for practicing an embodiment of the client or a server . As shown in each computing device includes a central processing unit and a main memory unit . As shown in a computing device may include a visual display device a keyboard and or a pointing device such as a mouse. As shown in each computing device may also include additional optional elements such as one or more input output devices generally referred to using reference numeral and a cache memory in communication with the central processing unit .

The central processing unit is any logic circuitry that responds to and processes instructions fetched from the main memory unit . In many embodiments the central processing unit is provided by a microprocessor unit such as those manufactured by Intel Corporation of Mountain View Calif. those manufactured by Motorola Corporation of Schaumburg Ill. those manufactured by Transmeta Corporation of Santa Clara Calif. the RS 6000 processor those manufactured by International Business Machines of White Plains N.Y. or those manufactured by Advanced Micro Devices of Sunnyvale Calif. The computing device may be based on any of these processors or any other processor capable of operating as described herein.

Main memory unit may be one or more memory chips capable of storing data and allowing any storage location to be directly accessed by the microprocessor such as Static random access memory SRAM Burst SRAM or SynchBurst SRAM BSRAM Dynamic random access memory DRAM Fast Page Mode DRAM FPM DRAM Enhanced DRAM EDRAM Extended Data Output RAM EDO RAM Extended Data Output DRAM EDO DRAM Burst Extended Data Output DRAM BEDO DRAM Enhanced DRAM EDRAM synchronous DRAM SDRAM JEDEC SRAM PC100 SDRAM Double Data Rate SDRAM DDR SDRAM Enhanced SDRAM ESDRAM SyncLink DRAM SLDRAM Direct Rambus DRAM DRDRAM or Ferroelectric RAM FRAM . The main memory may be based on any of the above described memory chips or any other available memory chips capable of operating as described herein. In the embodiment shown in the processor communicates with main memory via a system bus described in more detail below . depicts an embodiment of a computing device in which the processor communicates directly with main memory via a memory port . For example in the main memory may be DRDRAM.

The computing device may support any suitable installation device such as a floppy disk drive for receiving floppy disks such as 3.5 inch 5.25 inch disks or ZIP disks a CD ROM drive a CD R RW drive a DVD ROM drive tape drives of various formats USB device hard drive or any other device suitable for installing software and programs such as any client agent or portion thereof. The computing device may further comprise a storage device such as one or more hard disk drives or redundant arrays of independent disks for storing an operating system and other related software and for storing application software programs such as any program related to the client agent . Optionally any of the installation devices could also be used as the storage device. Additionally the operating system and the software can be run from a bootable medium for example a bootable CD such as KNOPPIX a bootable CD for GNU Linux that is available as a GNU Linux distribution from knoppix.net.

Furthermore the computing device may include a network interface to interface to a Local Area Network LAN Wide Area Network WAN or the Internet through a variety of connections including but not limited to standard telephone lines LAN or WAN links e.g. 802.11 T1 T3 56 kb X.25 SNA DECNET broadband connections e.g. ISDN Frame Relay ATM Gigabit Ethernet Ethernet over SONET wireless connections or some combination of any or all of the above. Connections can be established using a variety of communication protocols e.g. TCP IP IPX SPX NetBIOS Ethernet ARCNET SONET SDH Fiber Distributed Data Interface FDDI RS232 IEEE 802.11 IEEE 802.11a IEEE 802.11b IEEE 802.11g CDMA GSM WiMax and direct asynchronous connections . In one embodiment the computing device communicates with other computing devices via any type and or form of gateway or tunneling protocol such as Secure Socket Layer SSL or Transport Layer Security TLS or the Citrix Gateway Protocol manufactured by Citrix Systems Inc. of Ft. Lauderdale Fla. The network interface may comprise a built in network adapter network interface card PCMCIA network card card bus network adapter wireless network adapter USB network adapter modem or any other device suitable for interfacing the computing device to any type of network capable of communication and performing the operations described herein.

A wide variety of I O devices may be present in the computing device . Input devices include keyboards mice trackpads trackballs microphones and drawing tablets. Output devices include video displays speakers inkjet printers laser printers and dye sublimation printers. The I O devices may be controlled by an I O controller as shown in . The I O controller may control one or more I O devices such as a keyboard and a pointing device e.g. a mouse or optical pen. Furthermore an I O device may also provide storage and or an installation medium for the computing device . In still other embodiments the computing device may provide USB connections to receive handheld USB storage devices such as the USB Flash Drive line of devices manufactured by Twintech Industry Inc. of Los Alamitos Calif.

In some embodiments the computing device may comprise or be connected to multiple display devices which each may be of the same or different type and or form. As such any of the I O devices and or the I O controller may comprise any type and or form of suitable hardware software or combination of hardware and software to support enable or provide for the connection and use of multiple display devices by the computing device . For example the computing device may include any type and or form of video adapter video card driver and or library to interface communicate connect or otherwise use the display devices . In one embodiment a video adapter may comprise multiple connectors to interface to multiple display devices . In other embodiments the computing device may include multiple video adapters with each video adapter connected to one or more of the display devices . In some embodiments any portion of the operating system of the computing device may be configured for using multiple displays . In other embodiments one or more of the display devices may be provided by one or more other computing devices such as computing devices and connected to the computing device for example via a network. These embodiments may include any type of software designed and constructed to use another computer s display device as a second display device for the computing device . One ordinarily skilled in the art will recognize and appreciate the various ways and embodiments that a computing device may be configured to have multiple display devices 

In further embodiments an I O device may be a bridge between the system bus and an external communication bus such as a USB bus an Apple Desktop Bus an RS 232 serial connection a SCSI bus a FireWire bus a FireWire 800 bus an Ethernet bus an AppleTalk bus a Gigabit Ethernet bus an Asynchronous Transfer Mode bus a HIPPI bus a Super HIPPI bus a SerialPlus bus a SCI LAMP bus a FibreChannel bus or a Serial Attached small computer system interface bus.

A computing device of the sort depicted in typically operates under the control of operating systems which control scheduling of tasks and access to system resources. The computing device can be running any operating system such as any of the versions of the MICROSOFT WINDOWS operating systems the different releases of the Unix and Linux operating systems any version of the MAC OS for Macintosh computers any embedded operating system any real time operating system any open source operating system any proprietary operating system any operating systems for mobile computing devices or any other operating system capable of running on the computing device and performing the operations described herein. Typical operating systems include WINDOWS 3.x WINDOWS 95 WINDOWS 98 WINDOWS 2000 WINDOWS NT 3.51 WINDOWS NT 4.0 WINDOWS CE WINDOWS XP and WINDOWS VISTA all of which are manufactured by Microsoft Corporation of Redmond Wash. MACOS manufactured by Apple Computer of Cupertino Calif. OS 2 manufactured by International Business Machines of Armonk N.Y. and Linux a freely available operating system distributed by Caldera Corp. of Salt Lake City Utah or any type and or form of a Unix operating system among others.

The computer system can be any workstation desktop computer laptop or notebook computer server handheld computer mobile telephone or other portable telecommunication device media playing device a gaming system mobile computing device or any other type and or form of computing telecommunications or media device that is capable of communication and that has sufficient processor power and memory capacity to perform the operations described herein. For example the computer system may comprise a device of the IPOD family of devices manufactured by Apple Computer of Cupertino Calif. a PLAYSTATION 2 PLAYSTATION 3 or PERSONAL PLAYSTATION PORTABLE PSP device manufactured by the Sony Corporation of Tokyo Japan a NINTENDO DS NINTENDO GAMEBOY NINTENDO GAMEBOY ADVANCED or NINTENDO REVOLUTION device manufactured by Nintendo Co. Ltd. of Kyoto Japan or an XBOX or XBOX 360 device manufactured by the Microsoft Corporation of Redmond Wash.

In some embodiments the computing device may have different processors operating systems and input devices consistent with the device. For example in one embodiment the computing device is a TREO 180 270 600 650 680 700p 700w or 750 smart phone manufactured by Palm Inc. In some of these embodiments the Treo smart phone is operated under the control of the PalmOS operating system and includes a stylus input device as well as a five way navigator device.

In other embodiments the computing device is a mobile device such as a JAVA enabled cellular telephone or personal digital assistant PDA such as the i55sr i58sr i85s i88s i90c i95cl or the im1100 all of which are manufactured by Motorola Corp. of Schaumburg Ill. the 6035 or the 7135 manufactured by Kyocera of Kyoto Japan or the i300 or i330 manufactured by Samsung Electronics Co. Ltd. of Seoul Korea.

In still other embodiments the computing device is a Blackberry handheld or smart phone such as the devices manufactured by Research In Motion Limited including the Blackberry 7100 series 8700 series 7700 series 7200 series the Blackberry 7520 or the Blackberry Pearl 8100. In yet other embodiments the computing device is a smart phone Pocket PC Pocket PC Phone or other handheld mobile device supporting Microsoft Windows Mobile Software. Moreover the computing device can be any workstation desktop computer laptop or notebook computer server handheld computer mobile telephone any other computer or other form of computing or telecommunications device that is capable of communication and that has sufficient processor power and memory capacity to perform the operations described herein.

In some embodiments the computing device is a digital audio player. In one of these embodiments the computing device is a digital audio player such as the Apple iPod iPod Touch iPod Nano and iPod Shuffle lines of devices manufactured by Apple Computer of Cupertino Calif. In another of these embodiments the digital audio player may function as both a portable media player and as a mass storage device. In other embodiments the computing device is a digital audio player such as the DigitalAudioPlayer Select MP3 players manufactured by Samsung Electronics America of Ridgefield Park N.J. or the Motorola m500 or m25 Digital Audio Players manufactured by Motorola Inc. of Schaumburg Ill. In still other embodiments the computing device is a portable media player such as the Zen Vision W the Zen Vision series the Zen Portable Media Center devices or the Digital MP3 line of MP3 players manufactured by Creative Technologies Ltd. In yet other embodiments the computing device is a portable media player or digital audio player supporting file formats including but not limited to MP3 WAV M4A AAC WMA Protected AAC AIFF Audible audiobook Apple Lossless audio file formats and .mov .m4v and .mp4 MPEG 4 H.264 MPEG 4 AVC video file formats.

In some embodiments the computing device comprises a combination of devices such as a mobile phone combined with a digital audio player or portable media player. In one of these embodiments the computing device is a Motorola RAZR or Motorola ROKR line of combination digital audio players and mobile phones. In another of these embodiments the computing device is an iPhone smartphone manufactured by Apple Computer of Cupertino Calif.

Referring now to a system for incorporating at least one remote window from a remote desktop environment having a first themed graphical display into a local desktop environment having a second themed graphical display includes a first and second virtual channel and a local agent. In brief overview the first virtual channel which is coupled to a remote desktop environment conveys graphical data associated with a remote window . The remote window includes a client area and a window rectangle. The remote desktop environment is displayed according to a first graphical theme. The second virtual channel which is coupled to the remote desktop environment conveys window attribute data associated with the remote window . The window attribute data includes screen coordinates for the client area. The local agent which is coupled to the remote desktop environment via the first and second virtual channels directs the formation of a corresponding local window in a local desktop environment which is displayed according to a second graphical theme. The corresponding local window includes a local client area displaying the graphical data conveyed by the first virtual channel and displayed at screen coordinates within the local desktop environment in accordance with the window attribute data conveyed by the second virtual channel and has a local window rectangle displayed according to a second graphical theme.

With continued reference to and in greater detail a second machine is connected to a first machine . In one embodiment the second machine is a client as described above in connection with . In another embodiment the first machine is a server as described above in connection with . As shown in the first machine has an associated display which displays a remote desktop environment . It should be noted that the display need not be a video display monitor. For example in some embodiments the display may be a bank of video RAM to which applications write the output of graphical procedure calls.

As shown in the second machine has an associated display . The display may be used to display one or more components of a graphical user interface such as windows and pull down menus. The collection of graphical user interface components displayed to a user by the display is generally referred to as a desktop. As shown in the second machine displays a local desktop environment to a user. In one embodiment the second machine provides at least a part of the local desktop environment . In another embodiment the second machine displays various desktop components received from other sources such as from one or more first machines . depicts an embodiment of a system in which the remote desktop environment displays a graphical user interface window and in which the local desktop environment displays a graphical user interface window .

The first machine includes a remote agent . In some embodiments each first machine includes one remote agent for each second machine connected to the first machine . The second machine executes a local agent . In some embodiments a second machine executes a separate local agent for each first machine to which the second machine is connected. In other embodiments the client node executes a single local agent that manages connections to multiple first machines .

In one embodiment a first machine and a second machine communicate using a presentation layer protocol such as the Independent Computing Architecture ICA protocol manufactured by Citrix Systems Inc. of Fort Lauderdale Fla. the RDP protocol manufactured by Microsoft Corp. of Redmond Wash. the X11 protocol or the Virtual Network Computing VNC protocol manufactured by AT T Laboratories Cambridge. In another embodiment the first machine and the second machine each execute a version of the WINDOWS operating system. The second machine executes a local agent that may be provided as a dynamically linked library module. The first machine executes a remote agent that may be provided as a separate thread. In some embodiments the local agent and the remote agent may be presentation layer protocol clients such as ICA clients RDP clients X11 clients VNC clients or a combination of any of these.

In one embodiment the local agent and the remote agent exchange graphical data i.e. the data actually displayed in each window on the desktop environment via a first virtual channel . Information about window positioning window size z access ordering of window and other such information is communicated between the first machine and a second machine via a second virtual channel . When the first machine and a second machine are actively exchanging information via the second virtual channel the second machine may be referred to as being in seamless windowing mode. In some embodiments the first and second virtual channels are provided within a single virtual channel .

The agents may include transmitters or processes for transmitting information to other agents. Information identified and stored by the agent can include window geometry such as the title bar associated with each window the location of each window in the desktop environment the size of each window and the z order positioning of each window in the desktop environments . In one embodiment the information includes data associated with displaying the window according to a graphical theme. In another embodiment the information includes the location of a portion of each window in the desktop environment .

In one embodiment the desktop environments are displayed according to graphical themes. In another embodiment the remote desktop environment is displayed according to a first graphical theme and the local desktop environment is displayed according to a second graphical theme. In still another embodiment a window in the remote desktop environment is displayed according to the first graphical theme. In still even another embodiment a window in the local desktop environment is displayed according to the second graphical theme.

In some embodiments a theme refers to a customization of a graphical user interface. In one of these embodiments the theme provides a unified look and feel for the graphical user interface. In another of these embodiments the theme includes a customization of window components such as scroll bars title bars buttons sliders menus menu bars and other user interface elements displayed in a window. In still another of these embodiments the theme includes a customization of fonts icons sounds wallpaper screensavers background patterns and colors used in the graphical user interface.

In some embodiments the local agent receives window attribute data associated with a remote window . The window attribute data includes data associated with the first graphical theme. In one of these embodiments the local agent receives an identification of screen coordinates for a client area within the remote window . In another of these embodiments the local agent receives an instruction to display in a local window the graphical data shown within the identified screen coordinates. In still another of these embodiments the local agent receives an instruction to direct the formation of a first portion of the local window by the second machine and to display in a second portion of the local window graphical data provided by the first machine . In still even another of these embodiments the first portion of the local window is the portion of the window that displays a theme and the second portion of the local window is a client area for example the first portion may include a title bar and border forming a non client area and the second portion may include a client area. In yet another of these embodiments directing the second machine to display the first portion of the local window and using data provided by the first machine to display the second portion of the local window instead of using data provided by the first machine in the entire local window results in the display of remote data within a local window having a graphical theme corresponding to a graphical theme of the local desktop environment .

Referring now to a screen shot depicts one embodiment of a window in a desktop environment . In some embodiments the window is associated with a window region which may be a data object defining an area for drawing the window . In one of these embodiments the window region is a window rectangle. In another of these embodiments the window region is a non rectangular area. In other embodiments and as depicted in a window is a window rectangle that includes a client area and a non client area. In one of these embodiments the non client area includes a caption also referred to as the title bar and the borders . In another of these embodiments the non client area includes a window area typically drawn by a local operating system executing on the second machine . In still another of these embodiments the non client area includes a window caption window borders window menus and window buttons such as buttons for minimizing maximizing or closing windows or buttons for opening a help window . In yet another of these embodiments the non client area includes special effects such as the glass effect and the extended glass effect provided by certain themes supported by WINDOWS VISTA. As depicted in the client area refers to the portion of the window rectangle other than the non client area which in is the window region except for the caption and the borders . In some embodiments the client area includes a menu bar. In other embodiments the client area displays output data generated by a resource. In one of these embodiments the client area on the local window refers to the portion of the window rectangle that displays output data generated by a resource executing on the first machine and displaying output data in the remote window .

In one embodiment the graphical data conveyed by the first virtual channel is output data generated by a resource executing on the first machine and displayed in the client area of the remote window . In another embodiment an intermediate machine transmits to the second machine the graphical data conveyed by the first virtual channel which is output data generated by a resource executing on a first machine . For example the intermediate machine may be a web server providing access to the first machine via a web site or portal or a broker server providing a connection between the first machine and a second machine and passing information through the connection between the two machines. In still another embodiment the intermediate machine establishes with the first machine a connection including a first virtual channel and second virtual channel . In still even another embodiment the intermediate machine executes a local agent which receives graphical data and window attribute data from the first machine which executes a remote agent . In yet another embodiment the intermediate machine executes a remote agent which transmits to a local agent on the first machine the graphical data and window attribute data received from the first machine .

In one embodiment the remote agent includes a detection process which determines whether to transmit to the local agent the screen coordinates for the client area. In another embodiment the remote agent executes a detection algorithm to determine whether to transmit to the local agent the screen coordinates for the client area.

Referring now to a flow diagram depicts one embodiment of the steps taken in a method for incorporating at least one remote window from a remote desktop environment having a first themed graphical display into a local desktop environment having a second themed graphical display. In brief overview the method includes the step of receiving via a first virtual channel coupled to a remote desktop environment displayed according to a first graphical theme graphical data associated with a remote window comprising a client area and a window rectangle step . The method includes the step of receiving via a second virtual channel coupled to the remote desktop environment window attribute data associated with the remote window the window attribute data including screen coordinates for the client area step . The method includes the step of forming a corresponding window in a local desktop environment displayed according to a second graphical theme the corresponding window displaying the graphical data received from the first virtual channel in a local client area the local client area displayed at screen coordinates in accordance with the window attribute data received from the second virtual channel the corresponding window having a local window rectangle displayed according to a second graphical theme step .

With continued reference to and in greater detail the method includes the step of receiving via a first virtual channel coupled to a remote desktop environment displayed according to a first graphical theme graphical data associated with a remote window comprising a client area and a window rectangle step . In one embodiment the remote agent transmits via the first virtual channel the graphical data. In another embodiment the local agent receives the graphical data. In still another embodiment the local agent receives output data generated by an execution of a resource on the first machine . In yet another embodiment the local agent receives from the first machine output data generated by an execution of a resource on a second machine .

The method includes the step of receiving via a second virtual channel coupled to the remote desktop environment window attribute data associated with the remote window the window attribute data including screen coordinates for the client area step . In one embodiment the remote agent identifies the screen coordinates for the client area. In another embodiment the remote agent transmits to the local agent via the second virtual channel the screen coordinates for the client area.

In some embodiments the remote agent determines whether to transmit to the local agent the screen coordinates for the client area of the remote window . In one of these embodiments the remote agent makes a determination as to whether or not to transmit an instruction to display a local graphical theme in a non client area. In another of these embodiments the remote agent makes the determination on a per window basis for example the remote agent may transmit the instruction for a parent window and not transmit the instruction for any child windows of the parent window. The child windows in this example would be displayed in the local desktop environment according to the graphical theme used on the first machine while the parent window would be displayed in the local desktop environment according to the graphical theme used on the second machine . In still another of these embodiments the parent window is a window having a multiple document interface MDI and allows multiple document frame windows the child windows to open in a single instance of the application.

In one embodiment a determination is made as to whether a window is a custom window displaying in the non client area output data generated by a resource executing on the first machine instead of by the operating system on the first machine . For example an application executing on the first machine may generate for display in a non client area of a window a customized window component such as a menu bar title bar slider border or other component. In another embodiment the remote agent makes a determination not to transmit the screen coordinates for the client area . In still another embodiment the remote agent makes a determination to transmit an instruction to the local agent to display the graphical data received via the first virtual channel in the window region of the local window . In yet another embodiment instead of displaying only the portion of the graphical data that falls within the screen coordinates the local client then displays all of the graphical data including the graphical data generated on the first machine and displaying customized window components.

In one embodiment the remote agent executes a detection process to determine whether to transmit to the local agent the screen coordinates for the client area of the remote window . In some embodiments a customized window component is inserted into a caption area of the remote window . In one of these embodiments detection process determines whether a remote window includes customized window component in the caption area . In another of these embodiments the detection process identifies a customized window by scanning a window component such as a title bar on a remote window for customization. In still another of these embodiments a customized window will respond with a different message to a scanning message than the message with which a non customized window would respond. For example in one embodiment a non customized window title bar responds to a WM NCHITTEST message with an HTCAPTION result while a custom component in the window title bar will respond with an HTBORDER message or a customized response to a WM NCHITTEST message. In still even another of these embodiments a window is scanned prior to the transmission of graphical data or window attribute data to a local agent . In yet another of these embodiments if a scanned window contains a customized window component a determination is made not to transmit the screen coordinates for the client area of the remote window and the local agent will display in the window region for the local window all of the graphical data representing output shown in the remote window .

Referring now to a screen shot depicts an embodiment of a caption including a customized window component. In this embodiment a detection process has scanned every ten pixels across a center horizontal line of a title bar in a caption . Upon identifying the customized button the detection process determines that the remote window containing the caption should be displayed on the second machine with the window attribute data of the remote window instead of according to the graphical theme of the second machine .

Referring back to and in some embodiments a determination is made not to transmit the screen coordinates for the client area of the remote window based on an identification of a graphical theme displayed on the first machine . In one of these embodiments a graphical theme on the first machine may support a customized component displayed in the remote window . In another of these embodiments if the graphical theme supports the customized component the screen coordinates for the client area of the remote window are transmitted to the local agent with an instruction to display in the client area of the window the graphical data including the customized component. In still another of these embodiments if the graphical theme does not support the customized component the screen coordinates for the client area of the remote window are not transmitted to the local agent .

In other embodiments a determination is made not to transmit the screen coordinates for the client area of the remote window based on an identification of a graphical theme displayed on the second machine . In one of these embodiments a graphical theme on the second machine may support a customized component displayed in the remote window . In another of these embodiments if the graphical theme supports the customized component the screen coordinates for the client area of the remote window are transmitted to the local agent with an instruction to display in the client area of the window the graphical data including the customized component. In still another of these embodiments if the graphical theme does not support the customized component the screen coordinates for the client area of the remote window are not transmitted to the local agent .

In still other embodiments a determination is made not to transmit the screen coordinates for the client area of the remote window based on a determination that the remote window has a non rectangular window region. In one of these embodiments a resource provided by the first machine generates a non rectangular window region for example by providing a customized graphical display for a remote window .

In one embodiment the remote agent determines whether to transmit to the local agent the screen coordinates for the client area of the remote window responsive to an application of a policy to the remote window . In one embodiment an administrator of a first machine determines that a local agent should display a graphical theme or customization applied to a remote window or remote desktop environment should be displayed on the local machine although this may result in conflicting graphical themes displayed in the local desktop environment . In another embodiment an administrator of a second machine determines that the second machine should not or cannot integrate the graphical display of the local desktop environment with the graphical data received from the first machine . In still another embodiment the remote agent accesses a registry setting associated with a window to determine whether to transmit to the local agent the screen coordinates for the client area of the remote window .

The method includes the step of forming a corresponding window in a local desktop environment displayed according to a second graphical theme the corresponding window displaying the graphical data received from the first virtual channel in a local client area the local client area displayed at screen coordinates in accordance with the window attribute data received from the second virtual channel the corresponding window having a local window rectangle displayed according to a second graphical theme step . In some embodiments the local agent forms the corresponding window upon receiving via the second virtual channel information regarding how to display the local window . In one of these embodiments for example the local agent forms the corresponding window upon receiving an instruction to display graphical data received from the first virtual channel in a client area of the local window . In another of these embodiments the local agent forms the corresponding window upon receiving an instruction to display graphical data received from the first virtual channel in the entire window region of the local window and not just in the client area .

In one embodiment the local agent stores the received graphical data in a buffer such as a local video buffer. In another embodiment the local agent directs a window management component executing on the second machine to create a new window in the local desktop environment . In still another embodiment the local agent directs the copying of graphical data from the buffer for display in the client area of the window . For example the local agent may execute a function or instruct a window management component to execute a function such as the BitBLT function for performing a bit block transfer of data from the buffer for display in the client area of the window .

In one embodiment the local agent implements a change to its associated local desktop environment by directly issuing graphics Application Programming Interface commands that cause the second machine to change the display of its associated desktop . In another embodiment the local agent may issue graphics device interface commands to change its associated desktop . In still another embodiment the local agent issues commands directly to the system whether implemented in hardware or software responsible for displaying graphics on the second machine .

In some embodiments the local agent directs the second machine to modify the local desktop environment in response to the messages received from the remote agent . In one of these embodiments the local agent issues commands to the second machine to conform a client area of a local window in the local desktop environment to a client area of a window in the remote desktop environment . In another of these embodiments the local agent directs the formation and modification of windows in the local desktop environment by communicating with a window management component executed by an operating system executing on the second machine .

In one embodiment the local agent transmits to the first machine window attribute data and graphical data associated with a local window displaying output data generated by a resource provided by the second machine . In another embodiment the local agent transmits screen coordinates for a client area within the local window . In still another embodiment the first machine displays the graphical data in the client area of a corresponding remote window. In yet another embodiment the first machine displays a non client area of the corresponding remote window according to a graphical theme of the remote desktop environment .

In other embodiments the remote agent receives messages from a local agent and directs the first machine to modify the remote desktop environment in response to messages received from the local agent . In one of these embodiments the local agent transmits to the remote agent window attribute data associated with the client area of the local window . In another of these embodiments the local agent transmits to the remote agent window attribute data associated with a graphical theme. In still another of these embodiments the local agent transmits to the remote agent window attribute data associated with a display of a non client area component displayed according to a graphical theme. In yet another of these embodiments the local agent transmits to the remote agent an identification of a customization that a graphical theme would make to a client area of a local window for example the local agent may transmit an identification of a customized color font or other system metric that a graphical theme would apply to a window component in the client area of the local window such as a menu bar if the local operating system were displaying the data in the client area instead of the local agent directing the display of graphical data received from the remote agent . In still even another of these embodiments upon receiving the identification the remote agent applies the customization to the window component in the client area of the remote window . For example the remote agent may receive an identification of a custom font used by the local agent and may apply the font when drawing fonts in the client area . In yet another of these embodiments when subsequently transmitting window application data associated with the remote window to the local agent the remote agent includes window application data associated with the customization for the window component.

In still other embodiments the remote agent receives messages from a local agent and directs the first machine to transmit to a resource provided by the first machine an instruction received from the local agent to the resource. In one of these embodiments the local agent determines that a user interaction with a window component within a non client area of the window rectangle triggers a window change. For example the user interaction may trigger generation of a message to re size a window move a window display a context menu maximize a window minimize a window apply focus to a window or remove focus from a window. In another of these embodiments the local agent transmits the generated message to the remote agent for processing. In still another of these embodiments the remote agent receives via the second virtual channel and transmits to a window management component on the first machine the message. In still even another of these embodiments the remote agent transmits for processing the message to a resource generating the output data displayed in the remote window . The message may include an instruction to initiate execution of the resource. In yet another of these embodiments the resource generates additional output data for display in the client area of the remote window for example the resource may generate graphical data for displaying a menu or dialog box within the client area of the remote window .

The systems and methods described above may be provided as one or more computer readable programs embodied on or in one or more articles of manufacture. The article of manufacture may be a floppy disk a hard disk a CD ROM a flash memory card a PROM a RAM a ROM or a magnetic tape. In general the computer readable programs may be implemented in any programming language LISP PERL C C PROLOG or any byte code language such as JAVA. The software programs may be stored on or in one or more articles of manufacture as object code.

Having described certain embodiments of methods and systems incorporating at least one remote window from a remote desktop environment having a first themed graphical display into a local desktop environment having a second themed graphical display it will now become apparent to one of skill in the art that other embodiments incorporating the concepts of the invention may be used. Therefore the invention should not be limited to certain embodiments but rather should be limited only by the spirit and scope of the following claims.

