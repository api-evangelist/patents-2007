---

title: Methods and apparatus for H-ARQ process memory management
abstract: Methods and apparatus are presented for H-ARQ process dynamic memory management. A method for dynamically managing memory for storing data associated with H-ARQ processes is presented, which includes receiving a packet associated with a H-ARQ process, determining if a free memory location is available in a H-ARQ buffer, assigning the packet to the free memory location, determining if the packet was successfully decoded, and retaining the packet in the assigned memory location for combination with a subsequent packet retransmission if the packet was not successfully decoded. Also presented are apparatus having logic configured to perform the presented methods.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09160496&OS=09160496&RS=09160496
owner: QUALCOMM Incorporated
number: 09160496
owner_city: San Diego
owner_country: US
publication_date: 20070629
---
The embodiments of the disclosure relate generally to memory management techniques for memories provided within User Equipment UE and more specifically to managing HSDPA High Speed Downlink Packet Access Hybrid Automatic Repeat Request H ARQ processes associated with the interaction between the UE and a network for the transmission of traffic data.

Wireless data services are expected to grow in the near future and will likely become a significant source of traffic and revenue for network service providers. The High Speed Downlink Packet Access HSDPA standard was developed in an effort to meet this growing demand. HSDPA may be thought of as a set of channels and procedures supported in 3GPP Release 5 and later enabling high speed packet data transmission on the downlink. HSDPA can provide a roadmap for Universal Mobile Telecommunications System UMTS based networks to increase their data transfer speeds and capacity. HSDPA enhances Wideband Code Division Multiple Access WCDMA technology through among other improvements the utilization of additional shared data channels allowing statistical multiplexing among users the application of different adaptive modulation and coding techniques and fast channel aware scheduling at the base station. HSDPA can also improve the speed of error recovery by utilizing a fast retransmission mechanism called Hybrid Automatic Repeat Request H ARQ with Stop and Wait SAW protocol.

H ARQ processing can enable faster recovery by storing corrupted packets in the UE rather than discarding them. When a corrupted packet is received the UE may store it in a H ARQ buffer contained in a buffer memory and combine the corrupted packet with one or more subsequent retransmissions to increase the probability of a successful decoding. Even if the retransmitted packet s contains errors a good packet can be derived from the combination previously received corrupted transmissions. This process may be referred to as soft combining and can include Chase Combining CC and or Incremental Redundancy IR . CC may be a basic combining approach wherein Node B may be simply retransmitting the exact same set of coded symbols of the original packet. With IR different redundancy information may be sent during retransmissions by recoding the packet in a different manner thus incrementally increasing the coding gain. To improve the speed of H ARQ processing the functionality may be implemented directly at the physical Media Access Control L1 layer of the UE .

The memory buffer may reside in UE in order to provide storage space for a variety of processing functions or services. A fixed portion of the memory buffer may be devoted to Non HSDPA services such as for example data associated with Multimedia Broadcast Multicast Service MBMS . The other portion of the memory hereinafter referred to as a H ARQ buffer may be devoted to a fixed space for storing data associated with a specified number of HSDPA H ARQ processes. Each H ARQ process may be responsible for the delivery of HSDPA packets at the MAC hs layer. This fixed number of H ARQ processes is hereinafter referred to as N where the value of N may depend upon the network provider. The conventional H ARQ buffer shown in organizes data associated with H ARQ processes using a static approach. Each H ARQ process may be assigned an identifier e.g. HSDPA H ARQ HSDPA H ARQ . . . HSDPA H ARQN and be permanently assigned a fixed memory location each memory location having a fixed size. This size may depend upon the number of H ARQ processes and the HS DSCH category designation

In the example shown in for the first TTI 7.5 slots after the end of the received packet associated with H ARQ a NACK indication was sent during one slot by the UE on the HS DPCCH for H ARQ. The earliest re transmission on the same H ARQ process in this case H ARQ may then occur 10 ms after the beginning of the previous transmission i.e. 12 slots after the end of that transmission taking into account time gaps allowed for decoding . The node B may give priority to NACK signals to schedule a retransmission on the same H ARQ at the earliest opportunity or schedule the H ARQ processes in a sequential manner irrespective of the ACK NACK indication or use any other method which satisfies the aforementioned timeline constraint set in the standard.

Because storing the data associated with each H ARQ process utilizes memory resources within the UE there is a need for methods and apparatus for H ARQ process memory management in order to utilize memory in an intelligent and flexible manner. Conserving memory for H ARQ processes can provide more memory for non HSDPA services and or permit the design of UEs having smaller buffer memories which may lead to lower production costs and or reduced UE power consumption.

Exemplary embodiments of the invention are directed to apparatus and methods for H ARQ process memory management.

One embodiment includes a method for dynamically managing memory for storing data associated with H ARQ processes. The method includes receiving a packet associated with a H ARQ process determining if a free memory location is available in a H ARQ buffer assigning the packet to the free memory location determining if the packet was successfully decoded and retaining the packet in the assigned memory location for combination with a subsequent packet retransmission if the packet was not successfully decoded.

Another embodiment includes a method for managing the memory of a UE device. The method includes determining the available memory space for HSDPA H ARQ processes determining the memory amount for each H ARQ process determining the number of H ARQ process n which can be stored concurrently determining if the total number of H ARQ processes assigned for a given UE category exceeds n and performing dynamic memory management for H ARQ process storage if the total number of H ARQ processes assigned for a given UE category exceeds n.

Yet another embodiment presented includes an apparatus for dynamically managing memory for storing data associated with H ARQ processes. The apparatus includes means for receiving a packet associated with a H ARQ process means for determining if a free memory location is available in a H ARQ buffer means for assigning the packet to the free memory location means for determining if the packet was successfully decoded and means for retaining the packet in the assigned memory location for combination with a subsequent packet retransmission if the packet was not successfully decoded.

Another embodiment presented is an apparatus for managing the memory of a UE device. The apparatus includes means for determining the available memory space for HSDPA H ARQ processes means for determining the memory amount for each H ARQ process means for determining the number of H ARQ process n which can be stored means for determining if the total number of H ARQ processes assigned for a given UE category exceeds n and means for performing dynamic memory management for H ARQ process storage if the total number of H ARQ processes assigned for a given UE category exceeds n.

Yet another embodiment is an apparatus which includes logic configured to receive a packet associated with a H ARQ process logic configured to determine if a free memory location is available in a H ARQ buffer logic configured to assign the packet to the free memory location logic configured to determining if the packet was successfully decoded and logic configured to retain the packet in the assigned memory location for combination with a subsequent packet retransmission if the packet was not successfully decoded.

Another embodiment of the invention can include an apparatus comprising logic configured to determine the available memory space for HSDPA H ARQ processes logic configured to determine the memory amount for each H ARQ processes logic configured to determine the number of H ARQ process n which can be stored logic configured to determine if the total number of H ARQ processes assigned for a given UE category exceeds n and logic configured to perform dynamic memory management for H ARQ process storage if the total number of H ARQ processes assigned for a given UE category exceeds n.

Another embodiment of the invention can include a computer readable medium including program code stored thereon for dynamically managing memory for storing data associated with H ARQ processes comprising program code to receive a packet associated with a H ARQ process program code to determine if a free memory location is available in a H ARQ buffer program code to assign the packet to the free memory location program code to determine if the packet was successfully decoded and program code to retain the packet in the assigned memory location for combination with a subsequent packet retransmission if the packet was not successfully decoded.

Another embodiment of the invention can include a computer readable medium including program code stored thereon for managing the memory of a UE device comprising program code to determine the available memory space for HSDPA H ARQ processes program code to determine the memory amount for each H ARQ processes program code to determine the number of H ARQ process n which can be stored program code to determine if the total number of H ARQ processes assigned for a given UE category exceeds n and program code to perform dynamic memory management for H ARQ process storage if the total number of H ARQ processes assigned for a given UE category exceeds n.

Aspects of the invention are disclosed in the following description and related drawings directed to specific embodiments of the invention. Alternate embodiments may be devised without departing from the scope of the invention. Additionally well known elements of the invention will not be described in detail or will be omitted so as not to obscure the relevant details of the invention.

The word exemplary is used herein to mean serving as an example instance or illustration. Any embodiment described herein as exemplary is not necessarily to be construed as preferred or advantageous over other embodiments. Likewise the term embodiments of the invention does not require that all embodiments of the invention include the discussed feature advantage or mode of operation.

Further many embodiments are described in terms of sequences of actions to be performed by for example elements of a computing device. It will be recognized that various actions described herein can be performed by specific circuits e.g. application specific integrated circuits ASICs by program instructions being executed by one or more processors or by a combination of both. Additionally these sequence of actions described herein can be considered to be embodied entirely within any form of computer readable storage medium having stored therein a corresponding set of computer instructions that upon execution would cause an associated processor to perform the functionality described herein. Thus the various aspects of the invention may be embodied in a number of different forms all of which have been contemplated to be within the scope of the claimed subject matter. In addition for each of the embodiments described herein the corresponding form of any such embodiments may be described herein as for example logic configured to perform the described action.

The UE may have a platform that can exchange data and or commands over the network . The platform can include a transceiver operably coupled to an application specific integrated circuit ASIC or other processor microprocessor logic circuit or any other data processing device. The ASIC or other processor may execute an application programming interface API layer that interfaces with any resident programs stored in the memory of the UE . The memory can be comprised of read only and or random access memory RAM and ROM EEPROM flash cards or any memory common to such platforms.

Various communication protocol layers used by the wireless network may also reside in the platform which may execute various commands and processes at different layers not shown in . The communication protocol layers may include for example a Radio Resource Control RRC layer a Radio Link Control RLC layer a Medium Access Control MAC layer and a Physical Layer L1 . Information received for the physical layer may be decoded and transferred between the various layers MAC RLC and RRC. Consistent with the HSDPA standard introduced in 3GPP Release 5 the higher layers may transfer traffic data packets using a High Speed Downlink Shared Channel HS DSCH . The same applies for the other HSDPA channels which include the uplink High Speed Dedicated Physical Control Channel HS DPCCH which carries ACK NACK feedback information and the downlink High Speed Shared Control Channel HS SCCH which carries control information associated with the HS DSCH.

A portion of memory may be dedicated to a buffer which may be apportioned to concurrently support data associated with both non HSDPA services which do not use H ARQ functionality and HSDPA H ARQ processes. The amount of space in buffer reserved for non HSDPA services may be obtained from information signaled to the UE by the network using conventional techniques associated with the 3GPP WCDMA standard and may be provisioned in a semi static fashion based on the UE capability. Non HSDPA services may include data associated with Multimedia Broadcast Multicast Service MBMS introduced in the Release 6 version of the standard for supporting audio and video streams on WCDMA cellular networks. The portion of buffer space dedicated to non HSDPA services may be sized to store data for a configurable pool of WCDMA downlink channels including for instance broadcast data carried over Shared Common Control Physical Channel S CCPCH and or dedicated data associated with downlink radio bearers of the 64 kbps or 384 kbps class carried over Dedicated Physical Data Channel DPDCH .

Once the memory requirements for concurrent non HSDPA services are taken into account the space remaining in buffer may be dedicated to storing the soft bits of HS DSCH Transport Block Sizes also referred as packets associated with the H ARQ processes. In accordance with the HS DSCH physical layer L1 categories provided in the Technical Specification 25.306 release 5 or later of the 3GPP WCDMA FDD standard the H ARQ buffer may be divided into smaller buffers which may be used for incremental redundancy IR recombination processing each dedicated to one process. The information contained in all H ARQ processes collectively is stored in a virtual IR buffer at Node B consistent with the Technical specification 25.212. On each process these soft bits represent the H ARQ data stored between the two stages of HS DSCH physical layer rate matching a version of which is carried during each transmission. The individual buffers aforementioned are hereinafter referred to as H ARQ buffer memory locations. Each H ARQ buffer memory location may have a number of soft bits or size for each H ARQ process and there may be a total number of nH ARQ buffer memory locations residing in the H ARQ buffer.

In various embodiments of the invention HS DSCH packets associated with H ARQ processes are stored in H ARQ buffer memory locations which are assigned in a dynamic manner as opposed to the conventional approach of statically assigning each H ARQ process its own memory location as shown in buffer which was described above in relation to .

The size of each memory location may be dictated by the number of H ARQ processes when using implicit partitioning of the virtual IR buffer and the HS DSCH UE category designation which may specify among other parameters the total number of soft bits for all of the H ARQ processes the supported modulation scheme and number of code multiplexed HS PDSCH. The HS DSCH category to be used may be signaled to the UE by the network after the UE has advertised its capability. Moreover the total number of H ARQ processes hereinafter referred to as N may also be designated by the network signaled through higher layers and can be independent of the specified HS DSCH category. In practice N conventionally ranges from 6 to 8 which may be greater than the total number of memory locations in the H ARQ buffer i.e. n

Accordingly when using this so called implicit partitioning the size of each H ARQ buffer memory location may be determined for a given UE category by dividing the total number of soft bits by the total number of H ARQ processes i.e. H ARQ Buffer Mem Loc Size Total Num Soft Bits N . In a configuration with a UE of higher advertised HS DSCH category than the network i.e. greater number of soft bits requirement the network may specify explicitly the common size of each H ARQ buffer memory location to the smaller value obtained through implicit partitioning for the network category to guarantee a two stage de rate matching at the UE mirroring that of Node B . This is a particular case of explicit partitioning also encompassed by this embodiment. The number of H ARQ buffer memory locations assigned n may be determined by taking the integer part of the ratio of the total size of the H ARQ buffer to the size of the H ARQ buffer memory location i.e. n int TotalH ARQ Buffer Size H ARQ Buffer Mem Loc Size . The total size of the H ARQ buffer may be approximated by subtracting the amount of memory dedicated to non HSDPA services from the size of buffer . The amount of memory dedicated to non HSDPA services may be supplied to the UE by the network and the size of buffer is conventionally a known design parameter.

While the value for nmay initially be computed as described above this value may be altered based upon the decoding performance of the network . In the ideal situation where the decoding performance of the UE is perfect block error rates being essentially zero in one example the minimum value of nis no more than three. For example in a specific system this minimum value may be based upon the fact no more than 7.5 slots may be used for decoding time that is the processing of a single packet transmission for a H ARQ process is no more than 2.5 TTI based on the timeline requirement for the ACK or NACK feedback indication for that packet. Therefore no more than three H ARQ buffer memory locations are needed. In addition the actual lower bound may be dependent upon the decoding time in a practical design and could be lower if less than 7.5 slots are used. However because the practical decoding performance will almost always be less than ideal non zero block error rates nshould not larger or equal to a predetermined threshold based on the system design e.g. three in the foregoing example . If the decoding performance of the UE is acceptable then the value of nmay be reduced from its initially computed value as long as it is not reduce below a predetermined threshold e.g. three . Alternatively if the UE decoding performance becomes degraded then the value of nmay be increased if needed by reducing the amount of memory space allocated to non HSDPA services. This process is explained in more detail in the explanation of presented below. Triggering such a low frequency procedure may be driven by an acceptable system level tradeoff between the concurrent non HSDPA and HSDPA services and the capability of system reconfiguration for the processing of non HSDPA channels at the UE.

The number of H ARQ buffer memory locations n may be smaller in various embodiments of the invention than the number of H ARQ buffers N used in the conventional UE buffer . Accordingly less memory may be utilized for H ARQ processing which in turn can increase the memory available for other processes. For example more memory may be available for non HSDPA services. Moreover the reduction of memory constraints may also provide the additional advantage of designing UEs with smaller buffer memories which can lead to lower production costs and reduced UE power consumption.

Further referring to an overview of an embodiment s dynamic memory management approach can be explained using the memory mapping table . In this example there are a total of five H ARQ buffer memory locations n 5 and seven H ARQ processes N 7 . When an incoming new packet associated with a specific H ARQ process arrives at the UE it may be assigned to a free H ARQ buffer memory location additional description of the free memory locations will be provided below in relation to the description of . In the mapping table the next incoming packet may be stored in memory location m. Once the packet is successfully decoded the assigned memory location may be cleared for use by subsequent packets. If the packet does not get decoded successfully the packet remains stored in the memory location for recombination with a subsequent version of the same packet associated with the same H ARQ process using incremental redundancy or chase combining as the H ARQ physical layer technique. In table H ARQ is currently being stored in H ARQ buffer location m H ARQ is stored in H ARQ buffer memory location m and H ARQ is stored in H ARQ buffer memory location m. In these cases the decoding status of these H ARQ processes is either ongoing or failed. The H ARQ buffer memory locations m and m have been freed for use by subsequent incoming packets. As will be more fully explained below if all of the H ARQ buffer memory locations are filled when the next new incoming packet arrives at the UE that new packet will be discarded and no decoding will be attempted and the UE will send a discontinuous transmission DTX signal in lieu of feedback so that Node B may typically retransmit a packet which is self decodable in particular a 1transmission version of the packet which does not have any systematic bits punctured .

Accordingly an embodiment of the invention can include the UE including the ability to perform the functions described herein. The various logic elements can be embodied in discrete elements software modules executed on a processor or any combination of software and hardware to achieve the functionality disclosed herein. For example the ASIC and the memory may all be used cooperatively to load store and execute the various functions disclosed herein and thus the logic to perform these functions may be distributed over various elements. Alternatively the functionality could be incorporated into one discrete component e.g. in embedded memory in the ASIC processor . Therefore the features of the UE in are to be considered merely illustrative and the invention is not limited to the illustrated features or arrangement.

Process may start when a packet is received by the UE over the HS DSCH from Node B Block . The received packet may be associated with a specific H ARQ i and the H ARQ parameters may be provided to the UE over the HS SCCH. The UE may then determine if a free memory location exists in the H ARQ buffer Block . If no free location exists the packet is effectively dropped and the UE may send a DTX signal Node B Block in lieu of uplink feedback ACK or NACK . Upon receiving the DTX Node B may retransmit a self decodable packet which is associated with H ARQ i at some point after the minimum retransmit interval per process e.g. 10 ms . The design should be such that dropping packets in this manner should not have an appreciable impact on network throughput performance and capacity. For the purpose of this design it may be observed that this happens when the number of previously received H ARQ processes that have failed or are still currently being decoded is sufficient to fill up the nbuffer memory locations.

If it is determined that a free memory location exists in the H ARQ buffer in Block the UE may assign the received packet to a free memory location in the H ARQ buffer Block . In order to minimize the possibility of overwriting and losing a packet if the non HSDPA memory buffer is later expanded received packets may be assigned to the free memory location distal to the non HSDPA memory partition. The UE will then determine if the received packet was successfully decoded Block . This determination may be made by utilizing the Cyclic Redundancy Check CRC which can be performed in L1 for example. If the packet is successfully decoded the UE will discard the packet and free the H ARQ buffer memory location Block . If the packet was not successfully decoded the packet will be retained for soft combining with a subsequent retransmission of that packet associated with H ARQ ID i Block . Consistent with the Technical Specification 25.212 of the 3GPP WCDMA HSDPA standard the retransmitted version may have different punctured bits Incremental Redundancy in order to increase effective coding gain and decoding efficiency. The recombination of the original or previously sent packet with the retransmitted packet may improve the packet s Signal to Noise ratio and can increase the probability of a successful decode operation.

Accordingly an embodiment of the invention may include a method for dynamically managing memory for storing data associated with H ARQ processes. The method may include receiving a packet associated with a H ARQ process Block determining if a free memory location is available in a H ARQ buffer Block assigning the packet to the free memory location Block determining if the packet was successfully decoded Block and retaining the packet in the assigned memory location for combination with a subsequent packet retransmission if the packet was not successfully decoded Block . One should appreciate that the method or any portions thereof may be implemented in software firmware and or in any combination sub combination thereof for execution on the ASIC . Of course this method is not limited to execution on an ASIC but may also be executed on any type of processor and or hardware and may have execution divided up among a plurality of processors and or sub processors.

Process may start by initializing the H ARQ buffer memory for packet storage Block . This may entail determining the H ARQ buffer memory location size per process and the total number of H ARQ buffer memory locations n . This determination may be performed as explained in detail above for the description of . However the space remaining for the H ARQ processes should not be arbitrarily small and a check could be performed to ensure that enough memory within buffer is provisioned for the total H ARQ buffer size to permit acceptable decoding performance.

A packet may be received by the UE over the HS DSCH from Node B Block . The UE may check to see if the received packet is a new packet Block . If the packet is a new packet the UE may determine if a free memory location exists in the H ARQ buffer Block . If no free location exists the packet is effectively dropped no decoding is attempted and the UE may send a DTX signal to Node B Block . The UE may then determine if a threshold fraction of number of dropped packets out of received packets to be decoded during a certain time interval has been exceeded Block . If so the UE may increase the H ARQ buffer size by increasing nby one Block . The extent of the time interval window may be designed such that changes in ncan be reduced while still avoiding significant performance degradation. Upon receiving the DTX signal Node B may retransmit typically a self decodable version of the packet for a first transmission which may be associated with H ARQ ID i at some point after a retransmit interval e.g. 10 ms .

If it is determined that a free memory location exists in the H ARQ buffer in Block the UE may assign the received packet to a free memory location in the H ARQ buffer Block . In order to minimize the possibility of overwriting a packet if the non HS memory buffer is expanded received packets may be assigned to the free memory location distal to the non HSDPA memory partition. The UE may decode the received packet Block . The UE may then determine if the received packet was successfully decoded Block .

If the packet is successfully decoded the UE will discard the packet and free the H ARQ buffer memory location Block and may send an ACK signal to Node B Block . If the packet was not successfully decoded the packet will be retained for combination with a subsequent retransmission of the same packet associated with H ARQ ID i Block . A NACK signal may also be sent to Node B Block . Consistent with the HSDPA standard the retransmitted block may have a different set of punctured bits from the previous version in order to increase decoding efficiency. The recombination of the original or previously sent packet with the retransmitted packet may improve the packet s Signal to Noise ratio and can increase the probability of a successful decode operation.

If it is determined that the received packet is not a new packet Block the UE may determine if the previous packet on H ARQ ID i was decoded successfully Block . If so the UE sends an ACK signal to Node B Block and does not attempt decoding. If it is determined that the previous packet on H ARQ ID i was not decoded successfully Block the UE will execute Blocks and .

Accordingly an embodiment of the invention may include a method for dynamically managing memory for storing data associated with H ARQ processes. The method may include initializing a H ARQ buffer for packet storage Block receiving a packet associated with a H ARQ process Block determining if the received packet is a new packet Block determining if the previous packet associated with the H ARQ process decoded successfully if the received packet is not a new packet Block and sending an acknowledgement ACK signal to Node B if the previous packet associated with the H ARQ decoded successfully Block .

The method may further include determining if a free memory location is available in a H ARQ buffer Block assigning the packet to the free memory location Block decoding the packet Block determining if the packet was successfully decoded Block retaining the packet in the assigned memory location for combination with a subsequent packet retransmission if the packet was not successfully decoded Block and sending a NACK to Node B Block .

The method may further include sending a discontinuous transmission DTX signal to Node B if there is no free memory location available in the H ARQ buffer Block determining if a threshold associated with DTX signals has been exceeded Block and modifying the H ARQ buffer memory size base when the threshold associated with DTX signals is exceeded Block . Wherein it is determined that the previous packet associated with the H ARQ process was not decoded successfully the method may further include storing the received packet in the appropriate memory location in the H ARQ buffer Block and decoding the received packet Block . The method may further include discarding the received packet from the assigned memory location and freeing the assigned memory location in the H ARQ buffer Block and sending an ACK signal to Node B Block .

Accordingly an embodiment of the invention may include a method for managing the memory of a UE device. The method may include determining the available memory space for HSDPA H ARQ processes Block determining the memory amount for each H ARQ process and determining the number of H ARQ processes n which can be stored Block determining if the total number of H ARQ processes assigned for a given UE category exceeds n Block and performing dynamic memory management for H ARQ process storage if the total number of H ARQ processes assigned for a given UE category exceeds n Block . As described above the entire method or portions thereof may be performed in software firmware or any combination thereof.

It should be noted that information and signals may be represented using any of a variety of different technologies and techniques. For example data instructions commands information signals bits symbols and chips that may be referenced throughout the above description may be represented by voltages currents electromagnetic waves magnetic fields or particles optical fields or particles or any combination thereof.

Further it should be noted that at the various illustrative logical blocks modules circuits and algorithm steps described in connection with the embodiments disclosed herein may be implemented as electronic hardware computer software or combinations of both. To clearly illustrate this interchangeability of hardware and software various illustrative components blocks modules circuits and steps have been described above generally in terms of their functionality. Whether such functionality is implemented as hardware or software depends upon the particular application and design constraints imposed on the overall system. The described functionality may be implemented varying ways for each particular application but such implementation decisions should not be interpreted as causing a departure from the scope of the present invention.

The methods sequences and or algorithms described in connection with the embodiments disclosed herein may be embodied directly in hardware in a software module executed by a processor or in a combination of the two. A software module may reside in RAM memory flash memory ROM memory EPROM memory EEPROM memory registers hard disk a removable disk a CD ROM or any other form of storage medium known in the art. An exemplary storage medium is coupled to the processor such that the processor can read information from and write information to the storage medium. In the alternative the storage medium may be integral to the processor.

Accordingly an embodiment of the invention can include a computer readable media embodying methods for H ARQ processes memory management as disclosed herein. Further the invention is not limited to illustrated examples and any means for performing the functionality described herein are included in embodiments of the invention. For example the methods sequences and or algorithms described herein may be performed by logic configured to perform the disclosed functionalities.

While the foregoing disclosure shows illustrative embodiments of the invention it should be noted that various changes and modifications could be made herein without departing from the scope of the invention as defined by the appended claims. The functions steps and or actions of the method claims in accordance with the embodiments of the invention described herein need not be performed in any particular order. Furthermore although elements of the invention may be described or claimed in the singular the plural is contemplated unless limitation to the singular is explicitly stated.

