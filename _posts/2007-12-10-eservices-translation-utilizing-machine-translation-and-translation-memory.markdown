---

title: E-services translation utilizing machine translation and translation memory
abstract: A system and method for translating data from a source language to a target language is provided wherein machine generated target translation of a source sentence is compared to a database of human generated target sentences. If a matching human generated target sentence is found, the human generated target sentence may be used instead of the machine generated sentence, since the human generated target sentence is more likely to be a well-formed sentence than the machine generated sentence. The system and method does not rely on a translation memory containing pairs of sentences in both source and target languages, and minimizes the reliance on a human translator to correct a translation generated by machine translation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07925494&OS=07925494&RS=07925494
owner: Trados, Incorporated
number: 07925494
owner_city: Sunnyvale
owner_country: US
publication_date: 20071210
---
The present application is a continuation of U.S. patent Ser. No. 11 735 763 filed Apr. 16 2007 which is a continuation of U.S. patent application Ser. No. 11 515 398 filed Sep. 5 2006 which is a continuation of U.S. patent application Ser. No. 11 123 071 filed May 6 2005 which is a continuation in part of U.S. patent application Ser. No. 09 662 758 entitled E SERVICES TRANSLATION PORTAL SYSTEM filed Sep. 15 2000 which claims the benefit of U.S. Provisional Application No. 60 154 434 filed Sep. 17 1999 which are incorporated by reference herein as to their entirety.

The present invention is directed to a system and method for at least partially translating data and facilitating the completion of the translation process. More in particular the present invention is directed to a system and method for translating data which includes a source of data to be translated a network connected to the source of data a translation source connected to the network and a portal system connected to the network for retrieving the data to be translated and at least partially translating that data.

The system and method translates data by combining translation memory and machine translation and in particular example based machine translation EBMT .

Still further the system and method stores source language sentences and target language sentences in the translation memory regardless of whether the sentences are matched to corresponding sentences in the other language.

Currently there exist individual translation memory tools for use on a translator s workstation. Such translation aids analyze documents on a word by word basis treating each new document as a totally new project. Such systems suffer from reduced efficiency in that they fail to take into account redundancies found in a document similarities of one document to a previously translated document and provide no means to enable team collaboration or involve the customer in the translation process.

There is therefore a need to provide a centralized translation database from which prior translations can be utilized to at least partially translate new documents to be translated. There is further a need to involve the translation customer in an iterative process with intermediate approvals of translation work being obtained as a translation project progresses.

In an era where businesses are able to take advantage of a worldwide marketplace utilizing a global computer network Internet it is important that such businesses are able to easily solicit business in multiple languages. Therefore many businesses desire to have their Web pages translated into multiple languages so that they are able to solicit business in many different markets. Therefore a system which can upload a Web page and duplicate it in multiple languages is highly desirable. Further as much multiple languages is highly desirable. Further as much of the language of anyone Web page is similar to that of other Web pages it is further desirable to make use of the translations of previously translated Web pages to aid in the translation of other Web pages. By such an arrangement the present invention reduces the workload of translators whether it is translation of Web pages or other documents.

Further it would be advantageous if a system and method could be devised that did not rely on a translation memory containing pairs of sentences in both source and target languages. It would also be advantageous to have a translation system and method minimized the reliance on a human translator to correct a translation generated by machine translation MT .

While reducing the workload of translators by making use of translations of previously translated documents and materials is advantageous it is desirable to further reduce the workload of translators by implementing a system whereby machine generated translation in a target language of a source sentence is compared to a database of human generated target sentences. In this manner if a human generated target sentence is found the human generated target sentence can be used instead of the machine generated sentence since the human generated target sentence is more likely to be a well formed sentence than the machine generated sentence.

Example based machine translation EBMT is a more language independent approach than machine translation. Example based machine translation works on units of data smaller than the sentences utilized in machine translation. Example based machine translation uses a bilingual corpus to align not only sentences but also phrases or even words from source language to target language. If a target sentence match a source sentence is not found a target sentence might be built from phrases that have been already translated in different sentences stored in the translation memory. While a well defined domain example based machine translation can retrieve correct terms and phrases it has a trouble generating well formed sentences.

A system for translating data is provided. The translating system includes a source of data to be translated and a network connected to the source of data. The system further includes a translation source connected to the network and a portal system connected to the network for retrieving the data to be translated. The portal system includes a system for at least partially translating the data and a system for transmitting the at least partially translated data to the translation source for completing the translation of the data.

From another aspect a system for translating data transmitted electronically through a global computer network is provided. The system includes at least one user terminal coupled to the global computer network for transmitting and receiving user related data therethrough. The system also includes at least one vendor terminal coupled to the global computer network for transmitting and receiving vendor related data therethrough. The system includes a first computer coupled to the global computer network for exchanging user related data with the at least one user terminal and vendor related data with the at least one vendor terminal through the global computer network. A file storage memory is provided which is coupled to the first computer for storing user related current document data representing documents to be transmitted from the at least one user terminal. A second computer is provided that is coupled to the first computer and the file storage memory for at least partially translating the current document data. The system also includes a database of previously entered document data and associated translated document data coupled to the second computer. The second computer compares the current document data with the previously entered document data to match the current document data with corresponding translated document data in the database to form the at least partial translation of the current document data. The at least partial translation is sent to the first computer and transmitted therefrom to the at least one vendor terminal for completing translation of the current document data and uploading the completed translation to the first computer. The first computer includes a system for transmitting the completed translation to the at least one user terminal and the second computer. The second computer includes a system for adding the current document data and the completed translation to the database.

In order to overcome the limitations of example based machine translation the present system and method can store source and target language sentences in the translation memory regardless of whether the sentences are in matched pairs. In an extreme situation the translation memory contains only a huge collection of source and target language sentences where none of the sentences are paired together. Upon receiving source data the system and method of the present invention will search the translation memory. If no match is found in the translation memory the machine translation is accessed. The machine translation will then produce a target sentence. This target sentence may have correct terms and phrases but it is very likely that the target sentence will be poorly constructed. Instead of presenting the target sentence to a human translator for correction the system and method makes use of the matching capability of the translation memory to find a similar target sentence. This search can be executed over all the available target sentences in the translation memory even if the sentences are not paired up with corresponding source language sentences. If a good match is found the system and method will select that sentence instead of the machine generated sentence. The sentence could then be sent to a human translator for a final check.

The present invention is directed to a language translation system method that may be implemented as a portal on a global computer communications network and combines advanced translation technologies with human translators for carrying out cost efficient multilingual electronic commerce initiatives.

In system is illustrated. System provides a language portal implemented on the Internet. A plurality of customers access the translation server network through the global computer network Internet . As will be described further in following paragraphs documents submitted by customers to the translation server network are translated at least partially automatically by the localization engines utilizing the multilingual translation database by offline translators and or online translators through an intranet network.

Looking at the operation of system one or more users using a Web browser or like type software access the Web server through the global computer network . The E services Translation Portal ETP allows users to establish translation projects and store ETP and flow data in the flow database for establishing a workflow for the customer s documents to be translated also providing reports to the administrator and the flow designer . As the number of customers increases additional servers are brought online. Customer documents to be translated are stored in the file system memory . The documents stored in file system storage are subsequently processed by localization engines wherein the documents are identified as to file type i.e. HTML GIF anyone of a multiplicity of word processor text or spreadsheet file types. Next the file is separated into translatable and non translatable strings and stored in the translation database . Once the translatable strings of the file have been identified they are then compared with previously translated strings to find similar strings which have already been translated. If a string matches more than one previously translated string the customer s string to be translated at this time will be matched with the prior translation which has the highest frequency of use or from the latest or user specified single or multiple previous translation versions. The partially translated document is also stored in the translation database .

The translation of the partially translated document is then completed by an online translator or an offline translator in accordance with the workflow design established for the particular customer . The workflow design may specify a particular translator that the customer has engaged. The vendor translator assigns a price per unit for its work. This unit can be based on the number of words to be translated a number of hours etc. The customer selects a vendor based on a number of criteria including but not limited to resumes references customer ratings volume location expertise and the like which information is transferred to the customer by the server .

Customers submit projects through the Internet to the translation server network where the Web server ETP and database are utilized to provide a measurement of the project. The size of the project is automatically estimated and broken down by some number of units. Then based on the number of units and the vendor s cost per unit a quote is provided to the customer through the server which can also include a schedule and incremental costs. Alternately the project may be entered for bid where the customer submits its project to a selected list of vendors from which quotes are received.

After the customer receives and approves a quote the customer transmits a contract to the vendor to perform the work. The selected vendor then executes the contract electronically to accept the project. The fact that the vendor receives the project from the translation server network partially translated reduces the costs of translation services. The customer using their connection to the translation server network through the Internet can track the progress of the project conduct interim reviews provide interim approvals and through the use of log files has access to an audit trail.

Turning now to such shows system from another perspective. Access to Web server ETP through the network is accomplished by customers utilizing browsers for submitting translation jobs as part of HTML pages . Vendors access the documents to be translated through browser based tools and . Web server ETP communicates with the multilingual application server the server receiving the files and transmitting the files to the customer while the application server creates the projects creates orders checks for the translatable strings and stores them in the translation database . The application server embodies servers database localization engines and the file system of . The functions of servers and can be implemented on a single computer or a network of computers. Multilingual application server communicates with the multilingual translation memory database through the intranet the network that is internal to the translation server network shown in . The translatable strings that are stored in translation database may also be processed by third party linguistic analysis utilities which may access the database. The translation memory database is also accessible by the online translators through intranet .

Turning to such shows the software architecture for accomplishing the translation of input documents. The files stored in the file system storage may be in any of a plurality of different text documents or graphics formats and . The localization engines utilize utilities to interpret those differently formatted documents and utilize on line manager and editor routines for processing those documents. The processing of those documents is done in cooperation with an open system multilingual library and the localization engines communicate with the translation database through an application program interface API utilizing an open protocol.

Referring to such illustrates the translation memory architecture. Translation database stores multiple projects which each include respective strings and to be translated. In the illustration menus for use in a computer program are illustrated. The translated projects and are also stored in memory with the respective translated French strings and . A database text table is provided which includes pointers for finding the text in the translation database . Each entry in the table includes an ID which refers to the particular project the language of the text the text itself and a reference count which indicates the number of different projects utilizing that same text. Thus the text open file and is referred to as a single entry in the table . Similarly the translated French text ouvrir fichier and are similarly referred to in the single database entry

Where text incorporates a translated term in some other project n such is considered a subset of the preceding entry. Thus the text open file is considered a subset of the text open file to load data and thus the entry will include a reference pointing to the Table entry . By that arrangement a portion of the string open file to load data can be obtained from the previously translated string open file . Thus the translation process is simplified and the database overhead is reduced. By maintenance of the translation database the automated translation system becomes more robust the more it is used as every string which has been previously translated need not be duplicated by human translators. The translation database can therefore be shared by multiple customers and vendors through the Internet. Localization engines search the database for past translations. Translations which match or just partially match are identified and added to the file that is provided to the translation vendor .

The advantages provided by the system can be clearly seen when one considers a class of customers who would utilize the system. For instance Web site owners who wish to duplicate their Web sites in multiple languages are customers who would benefit from system . The text found in most Web sites is between 50 and 60 redundant. Therefore at least 50 to 60 of the time and money required for translation would be saved as the redundant text strings found in a given HTML file of a web site would be translated automatically and not require the services of the vendor translator. Thus over time users of system would increasingly benefit by its expanded knowledge database.

An example of a translation process workflow which would be established by the flow designer is shown in . The process starts at and next goes to the decision block wherein it is determined whether a glossary is needed. A glossary is a collection of long phrases found in a document. In some cases the customer may already have a glossary that is uploaded in other cases it must be created. Glossaries are particularly useful where there are many translators working on a project. One translator translates the glossary and then after review and approval by the client or a reviewer contracted by the client it can be distributed to all the translators. The use of glossaries ensures that common terms are translated consistently across all files of a customer s single project or multiple projects. The instant invention provides for creation of both default and custom glossaries. When a default glossary is created the strings are extracted automatically and are therefore project specific. Custom glossaries can be created to standardize terminology across projects corporate divisions or entire corporations. The user can create as many glossaries as desired. The glossaries are not used to automatically translate a project but are given to all translators working on a client s project or projects to give all the translators the same verbiage for use within their respective translations. The use of the common verbiage of the glossary keeps the consistency at a high level.

If a glossary is needed the flow passes to block where the glossary generation process is initiated. From block the flow passes to decision block to determine whether there is redundant data. If there is redundant data the flow passes to block wherein redundant processing is initiated. Thus the reference count for the text strings are scanned and only one string of a redundant group need be translated. From block the actual document translation process is initiated in block and the translated document is generated in block . From block the flow passes to block wherein alterations to the text document are made such as changes to the font size and format of the document. From block the flow passes to block wherein the customer inspects the document. From there the flow passes to block wherein the customer s final approval is received. From block the flow passes to decision block where it is determined whether the document has been finally reviewed. If it has then the flow passes to block wherein the customer is billed. If the final review has not been completed then the flow passes to block wherein the document is checked and if problems are found the flow passes back to block to cycle through the loop again. If there are no problems or such have been fixed the flow passes from block to block wherein the document is updated as required. From block the flow passes to block wherein the customer is billed. From block the flow passes to block to indicate to the parent process such as the order process shown in that workflow is complete.

In the order process is shown. Starting from the start block the flow passes to block . In block an account manager is assigned to the project that will be created in block . In block the project and version which language is created by the customer and can include creation of the workflow design . From block the flow goes to decision block wherein it is determined whether the project and version are created properly. If they are the flow passes to block otherwise the flow passes to block wherein the assigned account manager checks and fixes the project and or version. From block the flow passes to block . In block the application programming interface and the appropriate utility A based on the file format of the document are called to extract the translatable strings. From block the flow passes to decision block wherein it is determined whether the strings have been completely extracted from the document. If the strings have been completely extracted the flow passes to block . If they have not flow passes to block wherein the account manager checks the document and fixes any problems therewith that are preventing the complete extraction of the translatable strings. From block the flow passes to block wherein it is determined how many target languages are to be provided for the client so the proper number of copies of the original file can be made. From block the flow passes to decision block wherein it is determined whether there is a need for a glossary. If a glossary is not required flow passes to block . If on the other hand a glossary is required the flow passes to decision block wherein it is determined whether the customer has provided a glossary. If the customer has provided a glossary the flow passes to block where the glossary is imported and then flow passes to block . However if no glossary is provided the flow passes to block wherein a glossary is created. Subsequent to creation of the glossary the flow passes to block wherein the glossary is reviewed by the client. From block the flow passes to block wherein the client selects the translator and reviewer usually two different persons for each target file. Subsequent to selection of the vendors in block the flow passes to block wherein the customer confirms the order. From block the flow passes to decision block wherein it is determined whether the order has been confirmed. If it has not the flow passes to block wherein the account manager fixes the problem in obtaining an order confirmation. In some cases a client may have desired translation of their project into a particular number of target languages for instance ten but the final cost for that quantity of translations may result in a quoted cost which exceeds the client s budget. Therefore the client may then have to scale back the extent of their order or find new vendors offering lower costs. Once the problems are fixed in block the flow passes back to block to repeat the cycle in obtaining order confirmation. After the order has been confirmed the flow passes from block to block wherein the translation process is initiated. The translation process is the flow diagram of thus the process of is the parent process of that disclosed in . Therefore the notification provided in block of is provided in block of . From block the process ends at block .

Block of initiates the document translation process. The flow chart for that process is illustrated in . From start block in the flow passes to block wherein the vendor is sent an E mail message describing the Web site location of the documents to be translated so that the vendor can inspect the documents. Flow then passes to block wherein the translator downloads the documents for offline translation. The flow then passes to block wherein the translator performs the translation of the documents. Subsequently upon completion of the translation flow passes to block wherein the translated documents are forwarded uploaded for review. The reviewer is sent an E mail indicating that the translation is ready for review. Flow then passes to block wherein the reviewer downloads the translated documents. Subsequent to downloading the documents the flow passes to block wherein the reviewer performs a review of all of the translated documents and makes any corrections necessary. From block the flow passes to block wherein the reviewed documents and especially corrections are checked. Such secondary review may be carried out by a second reviewer. From block the flow then passes to block wherein the reviewed translated documents are uploaded to the Web server . The flow then passes to block wherein the parent process block of is notified that the translation process is complete. The process then ends at stop block .

Turning now to such shows the redundant string translation process which is initiated by block of . From the start block flow passes to block wherein the redundant strings are downloaded by the translator. From block the flow passes to block wherein the translator translates the strings which have been identified as having multiple re occurrences in the document. From block the block passes to block wherein a reviewer usually a separate individual reviews the translated strings. From block flow passes to block wherein the parent process is notified that the redundant string processing has been completed such notification being provided in block of . From block the process terminates at block .

Referring now to such shows the order submission process from another perspective. The customer utilizing a Web browser submits an order to the Eservices translation portal embodied in the Web server through the Internet . The server stores the documents in a file system disposed within the memory . Memory includes file system and translation database shown in . Server also launches the workflow extraction process to extract the translatable strings which are stored in the translation memory database of memory which is carried out by the workflow process . The workflow process also includes the reuse of prior translations where a search is made between the translatable strings of a current project and strings which have previously been processed to provide a translation when a match is found.

In the translation order assignment flow is shown. The workflow process creates a project file and stores that in the file system of memory . The workflow process then sends an E mail to the translator . The E mail contains information about the order the download location a hyperlink to the ETP page having a link to the Internet site for downloading the file s via Web based file transfer mechanisms including but not limited to File Transfer Protocol FTP . The translator utilizing the Web browser browses the ETP Web page containing the Web download link to the project file e.g. via FTP by utilizing the hyperlink contained in the E mail . Using the browser the translator downloads the project file from the Web download site and then invokes the local translation software and proceeds to then perform the translation task.

Upon completion of the translation task the translator then uploads the translated document which process is illustrated in . The translator utilizing a Web browser uploads the translated project through the Internet to the ETP server . The server saves the project to the file system in memory and notifies the workflow process that the files are ready. The workflow process handles the flow from reviewers to accept or reject the translation. If the reviewer accepts the project files then the workflow process will store the translated document in the translation memory database within memory . Finally the translated files are provided to the customer. In order to complete that process the workflow process sends an E mail to the customer which contains information about the order the download location for the translated documents and a hyperlink to the ETP page with a Web download link to the project file translated documents via Web based file transfer mechanisms including but not limited to File Transfer Protocol FTP . A customer utilizing their browser employs the hyperlink to access the Web download link to the project and then utilizing that link downloads the translated file.

The process for creating a default glossary block of is shown in . In the flow starts with a decision block wherein it is determined whether a user interface and thus texts included in the user interface exists or whether there is seed data. Seed data is a list of terms which come with initial software installation or are related to and are usually peculiar to a particular industry. If there is text embedded in a user interface or seed data the flow passes to block wherein text strings are extracted from that data or user interface to create what is termed a type glossary. If no user interface or seed data is provided or subsequent to creating the type glossary in block the flow passes to block wherein a linguistic engine such as use of an electronic dictionary is used to try and match up long phrases and create a type glossary. From block the flow passes to block wherein redundant strings strings with more than one reference count and having less than five words are further identified as a type glossary. From block the flow passes to block wherein the three types of glossaries are merged together and redundancies removed. From block the block passes to block where a customer glossary if provided is imported into the system.

Flow then passes to block wherein the merged glossary is compared against the customer s glossary to find any conflicts. If conflicts are found the flow passes to block wherein the customer is requested to review the conflicts and make additions or corrections to the generated glossary. Flow of course would then pass back to the parent process.

As previously discussed the translation database of the present invention provides great efficiencies in reducing the translation workload required of vendors. As an example is provided to illustrate the comparison which is carried out utilizing the translation database. Thus when a new project having translatable strings and to be translated is entered into the system it is compared with prior projects that have been provided. The match need not be exact so that another project having the same or similar strings may be found. The comparison may then identify a prior project having strings and as being identified as being a close match. The difference between the project and the new project is a single string thus the translation that was utilized for project may be utilized again for project with only the string remaining to be translated. By that process the translation workload which must be contracted out is minimized. In addition to the project level matching system performs the translatable string level searching to further reduce the manual translation workload.

In the foregoing embodiments the translator plays a major role. As shown in the foregoing embodiment improves the translation process by utilizing pairs of data strings and prior translations. Once the translation is constructed the translator has the task of reviewing the translation. When there is no corresponding target string for a source string it is the translator s task to provide a translation of the source string. The embodiment shown in illustrates a method that does not rely as heavily on the development of pairs of sentences in both source and target languages in the translation memory database shown in and database shown in . The embodiment shown in illustrates the functioning of a translation system that minimizes the reliance on human translator to correct a translation generated by machine translation MT .

As discussed previously with regard to the actual document translation process is initiated in block and the translated document is generated in block . illustrates an embodiment of this translation process. The translation process starts at block . A source data string for translation is input in block . The system then searches the translation memory for a similar source string having a corresponding translated target string in block . In block if a match is found the target string is output for subsequent review by the translator in block . If no match for the source string is found in decision block the source string is sent to the machine translation in block .

In block the machine translation produces a target string. This target string is produced by utilizing phrases that have already been translated in different sentences stored in the translation memory. The target string that is produced in this manner may contain the correct terms and phrases but will likely be ill formed. Instead of sending this target string to the translator for correction the system searches for a matching target string in the translation memory in block . This search performed in block can be performed for all available target sentences even if the sentences are not paired up with corresponding source language.

In performing the machine translation in block example based machine translation may be used. Such example based machine translation is a more language independent approach than machine translation. Example based machine translation can work with units of data smaller than the sentences utilized in machine translation. Further example based machine translation uses a bilingual corpus to align not only sentences but also phrases or even words from source language to target language. If a target sentence corresponding to a source sentence is not found a target sentence might be built from phrases that have been already translated in different sentences stored in the translation memory. However while a well defined domain example based machine translation can retrieve correct terms and phrases it has a trouble generating well formed sentences.

In decision block if a target sentence is found that is a good match the target sentence is sent for review by the translator in block since this sentence will most likely be a well formed human created sentence. On the other hand if a good match is not found in block then the machine translation developed in block is presented in block for review by the translator in block .

By the process illustrated in the work of the human translator is reduced due to the fact the more well formed sentences are output as opposed to machine translated sentences which have a higher likelihood of requiring editing. The system yields a fairly readable automatic translation without human translators. This is due in large part to the fact that sentences that have a match in block are very likely to be well formed human sentences and instead of initially outputting the machine translation immediately from block that sentence is compared to other target sentences in memory to try to locate a matching sentence which in all likelihood will be a better formed sentence than the machine derived one.

The method set forth in can be implemented in the system shown in and . Further the method illustrated in can be incorporated in the translation process shown in .

While illustrative systems and methods as described herein embodying various aspects of the present invention are shown by way of example it will be understood of course that the invention is not limited to these embodiments. Modifications may be made by those skilled in the art particularly in light of the foregoing teachings. For example each of the elements of the aforementioned embodiments may be utilized alone or in combination with elements of the other embodiments. In addition aspects of the invention have been pointed out in the appended claims however these claims are illustrative in that the invention is intended to include the elements and steps described herein in any combination or sub combination. It will also be appreciated and understood that modifications may be made without departing from the true spirit and scope of the invention.

