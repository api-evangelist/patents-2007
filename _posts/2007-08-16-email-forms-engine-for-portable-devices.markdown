---

title: Email forms engine for portable devices
abstract: A system includes a database, and a server, the server including a messaging module to generate one or more email messages, one or more of the one or more email messages each having attached thereto a form script file, and to send the one or more email messages over a communications network to a portable device, the one or more form script files including definitions of a form interface to be used by the portable device to render the form interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08862981&OS=08862981&RS=08862981
owner: Barclays Capital Inc.
number: 08862981
owner_city: New York
owner_country: US
publication_date: 20070816
---
This application claims the benefit of the U.S. Provisional Patent Application No. 60 838 658 filed on Aug. 18 2006 which is hereby incorporated by reference.

The present invention relates to portable device technology and more particularly to collection and organization of data from portable devices.

Due to the highly mobile nature of the current society many people find themselves performing tasks on the road that were normally done at a desk. From a technology standpoint capabilities of communication and computing tools available at a desk far exceeds those used on the road due to portability and power consumption issues. For instance computers available in the office are extremely powerful and fast providing multitasking abilities with applications that require large amounts of processing power. These computers have large amount of data storage and memory capabilities with processors that are able to process large amount of data. However for devices that are designed to be used outside of the office have performance limitations due to their portability. While many computers have been shrinking in size to accommodate mobile users these portable computers e.g. laptops notebooks tablets etc. are still relatively cumbersome to use especially in tight spaces or while moving. Accordingly electronic mail e mail enabled handheld devices are tools of choice for a majority of mobile users to stay connected to the office during travel.

A limitation of email enabled portable devices such as a personal digital assistant PDA is that because of the limited amount of memory and processing power of the portable device full email capability available on computers are not available on the portable device. For example many email enabled portable devices cannot access attachments to emails e.g. an electronic document because the portable device does not have the resources to store and run the application needed to access the attachments. Accordingly email enabled portable devices generally have the bare minimum email capabilities i.e. text and basic graphics rendering .

Due to the basic nature of email capabilities on these portable devices dissemination and collection of data from these portable devices become cumbersome. For example if information is needed from a mobile user a user requesting the information will preparing a message in an email detailing the information that needs to be collected from the mobile user. The mobile user who receives this message will have to parse through all the text to determine how to respond. The mobile user will then have to generate a new email message with the requested data provided in the new message in a way so as to allow the requester to be able to discern what the message is conveying.

Generally such request for information and response can be handled efficiently with a form. A form may be generated with the requested data explained in each field and sent to the user. The requested information may then be input directly into the fields of the form and sent back to the requester thereby simplifying the dissemination and collection process. Unfortunately many email enabled portable devices lack the capability of supporting such forms from being disseminated and collected for the reasons discussed above.

Accordingly the present invention is directed to a system and method for requesting and collecting data through email enabled portable devices that substantially obviates one or more problems due to limitations and disadvantages of the related art.

In general the system and method in accordance with the present invention sends data request emails to email enabled portable devices. The data request emails include a script file attachment that directs the portable device to customize the standard user interface UI to display the data request message in a form format. The portable device then generates the form on the fly and displays the data request message to the user. After the user inputs the information into the form the portable device converts the inputs into a normal text based email message in a format that can be parsed and processed by a backend system. The converted email message is then emailed back to a specified email address designated in the form. Upon receipt of the converted email the designated backend system processes the email message to obtain the data requested. Because the forms are created on the fly from a script file attached to the email and the responses are converted into a normal text based email message any email enabled portable device may be used to request and collect data from a user in a simple and convenient manner.

Additional features and advantages of the invention will be set forth in the description which follows and in part will be apparent from the description or may be learned by practice of the invention. The objectives and other advantages of the invention will be realized and attained by the structure particularly pointed out in the written description and claims hereof as well as the appended drawings.

To achieve these and other advantages and in accordance with the purpose of the present invention as embodied and broadly described the system includes a database and a server the server including a messaging module to generate one or more email messages one or more of the one or more email messages each having attached thereto a form script file and to send the one or more email messages over a communications network to a portable device the one or more form script files including definitions of a form interface to be used by the portable device to render the form interface.

In another aspect the method includes the steps of creating a form script file including definitions of a form interface to be used by a portable device to render the form interface creating a record in a database for the form script file attaching the form script file to an email message and transmitting the email message to the portable device through a communications network.

In yet another aspect the portable device includes a display an email application module an interface module to render an email interface on the display and a forms engine to detect an email message received by the email application unit containing a form script file and to cause the interface module to render a form interface based on the form script file the form script file including definitions of the form interface.

In still yet another aspect the method includes the steps of receiving an email message with an attachment determining if the attachment is a form script file if the attachment is not a form script file then processing the email message as a regular email message and if the attachment is a form script file then processing the form script file to render a form interface the form script file including definitions of the form interface.

In another aspect the computer program product includes a computer readable medium having stored thereon computer executable instructions that when executed by a computer direct the computer to perform a method comprising the steps of creating a form script file including definitions of a form interface to be used by a portable device to render the form interface creating a record in a database for the form script file attaching the form script file to an email message and transmitting the email message to the portable device through a communications network.

In yet another aspect the computer program product includes a computer readable medium having stored thereon computer executable instructions that when executed by a computer direct the computer to perform a method comprising the steps of receiving an email message with an attachment determining if the attachment is a form script file if the attachment is not a form script file then processing the email message as a regular email message and if the attachment is a form script file then processing the form script file to render a form interface the form script file including definitions of the form interface.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory and are intended to provide further explanation of the invention as claimed.

Reference will now be made in detail to the embodiments of the present invention examples of which are illustrated in the accompanying drawings.

As shown in a data collecting system in accordance with the present invention includes an email enabled portable device a messaging server an application server and a database . In general the messaging server detects an email generating event e.g. a new meeting banking lead a new survey etc. on the application server . In response the messaging server generates a generic email message with a device specific script file attachment i.e. a data request email . The script file may be of any text based scripting language such as Extensible Markup Language XML for example. Other scripting language may be used without departing from the scope of the invention.

Once the data request email has been generated the messaging server sends the email to the portable device . The portable device may be any email enabled portable device such as a cell phone a personal digital assistant PDA a palmtop computer and the like. When the user opens any email a forms engine is invoked through a callback interface on the portable device . The forms engine checks the attachment of the opened email to determine if it is a special script file. When the script file is detected the forms engine displays the data request message in a form format as defined in the script file. In order words the forms engine renders a customized form on the fly based on the script file definitions and displays the data request as a customized interface . The user then inputs the requested information in the customized interface and submits the form. Upon submission the form engine converts the input information into a normal text based email message and sends the information back as a reply email to an email address specified in the script file.

When the messaging server receives the reply email from the portable device the message is automatically parsed and processed to retrieve the data needed by the application in the application server that triggered the email generating event. The response is then stored in a structured format in the database . A more detailed description of each of the components is provided below.

In general the system and method of the present invention involves three components. The first component is directed to the data request email generation i.e. Outgoing . The second component is directed to the processing of the data request email at the portable device i.e. Processing . The third component is directed to the backend processing of the response email received from the portable device i.e. Incoming . Each of these components is explained in turn.

The Outgoing component involves setting up a new form generating the script file for the form and sending the form script file as an attachment. More specifically as explained above the script file is technically not a form per se. Rather the script file directs the portable device to display the information included in the script file in a form format including fields to be populated by the user as described in more detail below. Accordingly a forms engine in the portable device generates a form on the fly in accordance with the definitions provided in the form script file attached to the email. In order to be able to properly match the incoming response emails from the users in response to data request emails the Outgoing component includes creating various entries in the database . For instance a new record is created in a form table e.g. BBForm table for each script file created. For each script file created i.e. a form a randomly generated key e.g. formInstanceKey is included in the script file to prevent erroneous form submissions. The script file is created using any scripting language e.g. XML that defines at least a return email to which the response is to be sent the unique form ID i.e. formInstanceKey and the fields into which the responses from the user are to be entered.

The Processing component involves two phases of processing at the portable device . The details of the processing of the data request email on the portable device are described with reference to . As shown in when the portable device is first powered on the forms engine starts as a background process to register with the device s operating system to listen for a mail open event S . Once the generic email with the script file attachment i.e. the data request email is received by the portable device the data request email appears in the Inbox of the email application of the portable device like any other email entry. The user then selects the email to open the message S . The opening of the email generates a mail open event detected by the forms engine S . The opened email is analyzed to determine if it is a special message i.e. form enabled by checking if there is an attachment and whether the attachment is a form script file S . If not the message is processed by the device s standard open functionality and rendered on the portable device S .

If the email is determined to be a special message i.e. form enabled data request then the forms engine parses through the attached script file that defines the screen elements e.g. definitions of Tables 1 and 2 and creates a user interface map object e.g. UIMetaData S . The form engine uses the interface map object to generate on the fly a new screen that displays the defined fields in the script file as a fillable form screen S . The form screen object e.g. FormScreen has a collect of form field objects each of which includes a reference to the standard graphic user interface GUI control as well as more robust handling of name value pairs. The form screen object extends the standard screen objects in the portable device s application programming interface API . The forms engine then pops off the top screen which was created by the standard device open functionality from the screen stack as this standard screen is no longer needed S . The forms engine then pushes the new form screen onto the top of the screen stack S and the new form enabled screen e.g. a fillable form enabled data request is displayed on the portable device S . illustrates an example of how the data request email with the script file attachment is displayed on a typical portable device without a forms engine of the present invention. illustrates an example of the form enabled screen displayed on the portable device after being processed by the forms engine as described above.

The details of processing a response to the data request email are described with reference to . As shown in the form enabled screen is rendered on the portable device based on the attached script file. The user interacts with the fillable form enabled screen to input the requested data and making the necessary selections S . If the user selects to cancel the entries e.g. ESC button the user is prompted to confirm exiting the message S . If the user confirms the exit then the screen returns to the Inbox S . If the user cancels the exit then the screen goes back to the form enabled screen S . If the user selects to submit the entries into the form enabled screen the user is prompted to confirm the submission S . If the user cancels the submission the screen goes back to the form enabled screen S . If the user confirms the submission then the forms engine processes the response for submission.

The forms engine processes the inputs made by the user into the form enabled screen S . These include the inputs made into the fields defined in the script file used to render the form enabled screen. In particular the forms engine iterates through all of the field elements and stores the name value pairs of each entry S . The name value pairs for each entry are validated for example by type boundary checks to ensure that the value entered into the field is proper e.g. text in a numeric field and the collected name value i.e. key value pairs of the entries are then used to generate a response email that includes all of the name value pairs detected S . The generated response email which contains the structured content to be programmatically interpreted by the receiving messaging server is sent to the designated messaging server defined by a return email address included in the script file e.g. eBankerQA mobile server at returnemail returnemail.com S . The screen is then returned to the Inbox with a sent message indication in the Inbox to indicate that the response email was sent S . illustrates an example of a response email generated by the forms engine after processing the entries into the form enabled screen S . illustrates an example of a confirmation in the Inbox that the response email has been sent.

Once the response email has been received the Incoming component involves parsing through the response email to collect the key value pairs and extracting the data that identifies the response email to the generated script file i.e. the formCode and the formInstanceKey . Once the script file identification information has been extracted a process is called to insert a record into database e.g. BBFormIncoming table and verify the validity of the identification information by checking in the database to see if the same identification information was ever created e.g. formInstanceKey . If the identification information is valid i.e. a matching formInstanceKey is found in the database then all of the key value pairs collected from the response email is inserted into the database e.g. BBFormParamBuffer . If the key of the key value pair appears more than once then one row may be inserted for each time the key appears. If the value of the key value pair is too large to fit into the database field i.e. BBFormParamBuffer it may be chopped into multiple rows. A handler may then call another process to get all the SQL statements. The handler then parses each statement performs the necessary substitutions and performs the database calls in proper order. Additional error handling and notifications may then be processed.

For example Table 3 below shows an example of SQL statements that may be executed to process the response email described above.

It will be apparent to those skilled in the art that various modifications and variations can be made in the forms engine for a portable device in accordance with the present invention without departing from the spirit or scope of the invention. For example while the above example includes a fillable form enabled data request any message whether needing a response or not from the user may be displayed in the form enabled screen without departing from the scope of the invention. Thus it is intended that the present invention cover the modifications and variations of this invention provided they come within the scope of the appended claims and their equivalents.

