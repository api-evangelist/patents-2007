---

title: Client-side selection of a server
abstract: A method, system, and computer program product for performing network device management and client load distribution to a number of the Common Information Model Object Manager (CIMOM) servers via a network path. A client-side server selection (CSS) utility allows a client to choose the ideal server to fulfill a CIM request message. The client transmits the CIM request message to the CIMOM server based on service response time information utilized by the CSS utility. The CIM request message is forwarded to a CIM provider for processing. The provider returns a CIM response message to the CIMOM and a service response time is generated. Thereafter, the CIMOM returns the CIM response message to the client. At a preset time period, a Service Location Protocol (SLP) advertise generation facility initiates a multicast of the service response time information (from all network CIMOM servers) to the CSS utility.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08037197&OS=08037197&RS=08037197
owner: International Business Machines Corporation
number: 08037197
owner_city: Armonk
owner_country: US
publication_date: 20071026
---
The present invention generally relates to computer network systems and in particular to the management of computer network systems.

Management of computer systems requires measurement data to be collected from components of the managed systems. The measurement data thus collected has to be maintained in the form of a data model that builds relationships between components of the managed system. Often to manage computer systems it is important to capture more complex information about the system such as information about operations sequencing of interactions and composition relationships between components. The Common Information Model CIM presents an object oriented data model that captures complex relationships between managed components. A Common Information Model Object Manager CIMOM is a server utilizing the Common Information Model CIM protocol during network device management and load distribution of a network path. In conventional methods of managing the CIM there is no methodology employing client load distribution among a cluster of CIMOM servers via a network path.

Disclosed are a method system and computer program product for performing network device management and client load distribution to a number of the Common Information Model CIM Object Manager CIMOM servers via a network path. A client side server selection CSS utility allows a client to choose the ideal server to fulfill a CIM request message. The client transmits the CIM request message to the CIMOM server based on service response time information utilized by the CSS utility. The CIM request message is forwarded to a CIM provider for processing. The provider returns a CIM response message to the CIMOM and a service response time is generated. Thereafter the CIMOM returns the CIM response message to the client. At a preset time period a Service Location Protocol SLP advertise generation facility initiates a multicast of the service response time information from all network CIMOM servers to the CSS utility.

The above as well as additional objectives features and advantages of the present invention will become apparent in the following detailed written description.

The illustrated embodiments provide a method system and computer program product for performing network device management and client load distribution to a number of the Common Information Model Object Manager CIMOM servers via a network path. A client side server selection CSS utility employs a facility to select the ideal server to fulfill a client s CIM request message based on the following 1 CIM provider request frequency updated each time a request is made 2 response time information and 3 CIMOM average response time obtained from the ICMP echo packets which measure response time to each CIMOM. Receipt of the CIM request message at the CIMOM server triggers a series of steps which include the following 1 time of request receipt is recorded 2 the request is transferred to a CIM provider for processing 3 a response is returned to the CIMOM 4 time of response receipt is recorded and 5 a service response time is generated. Thereafter the CIMOM returns the CIM response message to the client. At a preset time period a Service Location Protocol SLP advertise generation facility initiates a multicast of the service response time information from all network CIMOM servers to the CSS utility

In the following detailed description of exemplary embodiments of the invention specific exemplary embodiments in which the invention may be practiced are described in sufficient detail to enable those skilled in the art to practice the invention and it is to be understood that other embodiments may be utilized and that logical architectural programmatic mechanical electrical and other changes may be made without departing from the spirit or scope of the present invention. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined only by the appended claims.

Within the descriptions of the figures similar elements are provided similar names and reference numerals as those of the previous figure s . Where a later figure utilizes the element in a different context or with different functionality the element is provided a different leading numeral representative of the figure number e.g 1xx for and 2xx for . The specific numerals assigned to the elements are provided solely to aid in the description and not meant to imply any limitations structural or functional on the invention.

It is understood that the use of specific component device and or parameter names are for example only and not meant to imply any limitations on the invention. The invention may thus be implemented with different nomenclature terminology utilized to describe the components devices parameters herein without limitation. Each term utilized herein is to be given its broadest interpretation given the context in which that terms is utilized.

With reference now to there is depicted a block diagram representation of a data processing system and connected network . DPS comprises at least one processor or central processing unit CPU connected to system memory via system interconnect bus . Also connected to system bus is I O controller which provides connectivity and control for input devices of which pointing device or mouse and keyboard are illustrated and output devices of which display is illustrated. Additionally a multimedia drive e.g. CDRW or DVD drive and USB universal serial bus hub are illustrated coupled to I O controller. Multimedia drive and USB hub may operate as both input and output storage mechanisms. DPS also comprises storage within which data instructions code may be stored.

DPS is also illustrated with a network interface device NID with which DPS connects to one or more servers via access network such as the Internet. In the described embodiments network is a worldwide collection of networks and gateways that utilize the Transmission Control Protocol Internet Protocol TCP IP suite of protocols to communicate with one another. Of course network access may also be provided via a number of different types of networks such as an intranet a local area network LAN a virtual private network VPN or other wide area network WAN other than the Internet for example.

Notably in addition to the above described hardware components of DPS various features of the invention are completed via software or firmware code or logic stored within memory or other storage e.g. storage and executed by CPU . Thus illustrated within memory are a number of software firmware components including operating system OS e.g. Microsoft Windows a trademark of Microsoft Corp or GNU Linux registered trademarks of the Free Software Foundation and The Linux Mark Institute Common Information Model CIM application s and client side server selection CSS utility . In actual implementation CIM application s and CSS utility may be combined as a single application collectively providing the various functions of each individual software component when the corresponding code is executed by the CPU . For simplicity CSS utility is illustrated and described as a stand alone or separate software firmware component which provides specific functions as described below.

CPU executes CIM APP CSS utility as well as OS which supports the user interface features of CSS utility . In the illustrative embodiment CSS utility generates provides several graphical user interfaces GUI to enable user interaction with or manipulation of the functional features of the utility . Among the software code instructions provided by CSS utility and which are specific to the invention are a code for selecting an ideal Common Information Model Object Manager CIMOM server to fulfill a CIM message request b code for transmitting a CIM message request from a CIM application to a CIMOM server and c code for triggering the transfer of service response time information about a number of CIMOM servers to a CIM client. For simplicity of the description the collective body of code that enables these various features is referred to herein as CSS utility . According to the illustrative embodiment when CPU executes CSS utility DPS initiates a series of functional processes that enable the above functional features as well as additional features functionality which are described below within the description of .

DPS may represent a Common Information Model CIM client which connects to a network of Common Information Model Object Manager CIMOM servers and CIM providers by utilizing the CIM protocol.

Those of ordinary skill in the art will appreciate that the hardware and basic configuration depicted in may vary. For example other devices components may be used in addition to or in place of the hardware depicted. The depicted example is not meant to imply architectural limitations with respect to the present invention. The data processing system depicted in may be for example an IBM eServer pSeries system a product of International Business Machines Corporation in Armonk N.Y. running the Advanced Interactive Executive AIX operating system or LINUX operating system.

CIM application on an operation device has access to a CIMOM on server using the Service Location Protocol SLP . In addition to providing information regarding the location of services such as IP address and port number the SLP also provides information that may be uniquely defined by application attributes on the service provider side. CIM application sends CIM request message to the CIMOM. CIM request message contains commands for management operations to be executed on a management object device illustrated by server .

CIM request message is interpreted by a lexical analysis facility within the CIMOM. In order to make an application programming interface API unique to the management object device which receives CIM request message key data i.e. CIM class and CIM object contained within CIM request message are retrieved. By checking the key data with repository databases managed by the CIMOM a device API managed by a CIM provider which corresponds to the CIM class of the key data is executed. The CIM provider located on the same device server as the CIMOM manages the device API. The device API which is initiated by the CIM provider operates as a separate process from the CIMOM. Upon completing the processing of the CIM request message the device API returns CIM response message through the CIM provider to the CIMOM. The CIMOM which received CIM response message returns CIM response message to CIM application . In order to facilitate the device management objectives of CIM application a program to display sequential real time status information is included in CIM application .

Network exhibits an obvious inefficiency when CIM request messages from the CIM application are received with a high arrival frequency at the CIMOM. For example under a circumstance where there is a device i e.g. server with CIMOM Ns i and CIM provider Np i and a large number of CIM requests concentrated in the conventional system only the CIMOM Ns i performs lexical analysis for all requests sent to device i and verifies the repository database. This processing i.e. lexical analysis etc. solely by the CIMOM Ns i continues even when other CIMOM servers are under low load conditions.

With reference now to a network in which features of the invention may be advantageously implemented is illustrated according to one embodiment of the invention. Network comprises a number of DPSs operating devices which may each include a device management application not explicitly shown . DPS also includes server selection program facility which may be integrated into the device management application. The application submits request message via front end network to server . Server is equipped with service response time measurement program facility and multicast information generation facility . Server connects via back end network to a device management API located within management object device . Network also comprises multiple servers and multiple management object devices. The device management application is able to initiate the multicast transfer of service response time information via multicast information generation facility located in each of the servers which are capable of receiving message requests from the application .

Network enables load distribution among a server cluster which cluster has a weight on the access responsiveness of a management object device to an operating device. Each operating device e.g. DPS generally utilizes the management object device e.g. management object device at a high frequency. The load distribution among a cluster of servers is achieved with a network configuration that features 1 an operating device which is connected to the server cluster via the transmission object network 2 a server cluster that transmits multicast information that determines the selection of a server e.g. server within the cluster the selected server may be the server that processes at a minimum response time all requests intended for a management object device 3 a management object device which processes message requests 4 a file of network response time to the server 5 access frequency information of management object devices 6 an application with which a device manager may transmit requests to a management object device e.g. management object device via the server through front end network .

A server device which receives a request to manage execution queue matrices selects device management API located in the management object device. The management object device e.g. management object device receives the request through back end network from the server. After processing by the management object device the server receives a response to the request transmitted by the device management API. The server then transfers the received response to an operating device . The transmission of response message initiates the generation of multicast information. This information is obtained from the results of measuring service response time in transmitting information to front end network .

In network the CIMOM and CIM provider are connected through the back end network and a connection to the management object device is provided via one of multiple CIMOMs. In network load distribution among the CIMOMs is enabled. The load distribution determines the access responsiveness of the management object device to CIM client application . In general CIM application utilizes the management object device e.g. management object device at a high frequency. The load distribution is achieved by implementing CIMOM selection facility in CIM application which utilizes as evaluation information 1 provider service response time information 2 request frequency information and 3 CIMOM response time information.

Front end network between the CIM application and CIMOM expands the CIM request message path to perform management operations for a certain management object device into a path through multiple CIMOMs.

In network provider service response time information is utilized for the management operation of each CIMOM. CIMOM response time information related to connections between CIM application and CIMOM is used in selecting the CIMOM which processes the CIM request with minimum response time. Thus load distribution is facilitated among the CIMOMs via front end network .

In network the frequency of usage of the management object device factors into the selection of the CIMOM and frequency of usage information is included with the CIMOM selection information. An operator may select a particular CIMOM as a result of access responsiveness to the management object device at higher frequencies of usage.

CIMOM and the CIM provider are connected via back end network . The CIM provider located on management object device has an interface function that is accessible from the CIMOM as well as a function to configure the management object device and acquire the request state.

CIM application transmits CIM request message to the CIMOM based on a determination by CIMOM selection facility . In CIM request message in addition to the CIM class and key data of the CIM object device key data specifying the management object device is included. CIMOM selection facility uses service response time information as an index of measuring the responsiveness of the CIMOM and back end network . Moreover CIMOM selection facility uses the CIM provider request frequency information which represents the frequency of usage of the management object device processing the request made by CIM application . The CIM provider request frequency information provides an index for weighting the access responsiveness of the management object device utilized with high frequency by CIM application to process requests . Furthermore the CIMOM selection program uses response time information which is obtained by issuing a message via Internet Control Message Protocol ICMP from the CIM application to the CIMOM. The response time information is an index for measuring the responsiveness of the front end network to the CIMOM.

Upon receiving CIM request message CIMOM records an arrival time at service response time measurement facility . An analysis is performed with a lexical analysis facility in the CIMOM. In order to make the API unique to the management object device which corresponds to the content of the CIM request message execute and key data are retrieved from the CIM class and CIM object included with the CIM request message. By verifying key data with the repository database managed by the CIMOM device API is executed. The device API corresponds to the CIM class and CIM object from the key data and is managed by the CIM provider. The device API connects the CIMOM to the CIM provider.

Upon receiving the CIM request message the CIM provider performs processing according to the request and sends back resulting CIM response message to the CIMOM. Upon receiving CIM response message from the CIM provider the CIM OM obtains a service response time by calculating the difference from the arrival time which is recorded in advance in service response time measurement facility . Using this service response time the service response time measurement facility updates an average service response time which is stored in the CIM OM server. Thereafter CIM OM returns CIM response message to CIM application .

Independent of the flow of the CIM request message SLP advertise generation facility refers at a preset period to the data storage which keeps the average service response time data. The service response time measurement facility updates the service response time information by the CIM provider.

CIM request message transmitted from a CIM application arrives at transmission and reception facility of CIM server node Ns i which houses CIMOM via front end network . Upon receiving notification of arrival from transmission and reception facility SRTM facility begins. SRTM facility compiles an arrival time CIM class CIM object and key data of the provider management object device as jobs in process in request in process queue . The CIM class CIM object and key data of the device are included in CIM response message issued by the CIM provider when completing the processing for CIM request message . The CIM class CIM object and key data of the device are used for identifying the message request records accumulated in the queue which records correspond to the response message. Furthermore the CIM request message arrival time kept on record is used for calculating a time difference from the arrival time of CIM response message . Consequently a service response time may be obtained. After completing the processing in SRTM facility CIM request message is passed to CIMOM .

CIM response message from the CIM provider is accepted by CIMOM and after performing necessary processing CIMOM passes CIM response message to SRTM facility . The CIM class CIM object and key data of the provider device are all included in CIM response message . The CIM class CIM object and key data identifies the corresponding record in request in process queue . The service response time tr i j is calculated as follows Service response time tr Arrival time of CIM response message Arrival time of CIM request message unit second .

Here i corresponds to the node number Ns i of the CIMOM processing the CIM request message and j corresponds to the management object device number Np j . After completing the process the record in the corresponding request in process queue is removed.

Average service response timetable is implemented as a file. In order to update the service response time of CIM request message the service response time measurement facility refers to the average service response time data Tr i j . The value of the sample number nr i j factors into the calculation of the average service response time and is also stored in the timetable. By employing 1 the values currently stored in the timetable 2 the formula for the calculation of service response time by the response and 3 the formulae for the average service response time illustrated in the flow chart of Tr i j and nr i j are updated.

There are two states for the arrival distribution of the CIM request message 1 the state of a high arrival frequency such as a period of time when a daytime operator is frequently working and 2 the state of a low arrival frequency such as a period of night time when almost no operation is performed. When a state continues under which a CIM request message does not arrive for many hours the average service response time determination is no longer based on the content of the service response timetable. Instead a request resting state compensation routine located in the same service response time measurement program is executed periodically. The period of execution of the request resting state compensation routine is established in such a way that the arrival frequency of the CIM request message is divided into a high frequency period of time e.g. daytime of the message arrival and a low frequency period of time e.g. night time of message arrival. During the low frequency period of message arrival the request resting state compensation RRSC routine may be executed.

The process begins at initiator block and proceeds to block at which a CIM request message is detected during the period of surveillance for which the request resting state compensation RRSC routine is executed. At decision block the service response time measurement SRTM facility determines whether the number of the samples nr i j used in the calculation of the average service response time during the surveillance period is greater than zero. If the SRTM facility determines that nr i j is greater than zero the process move to block at which the SRTM facility adjusts the value of nr i j in order to provide the update of the average service response time during the particular surveillance period. In particular 1 is subtracted from nr i j . If the SRTM facility determines that nr i j is not greater than zero i.e. nr i j is necessarily equal to 0 the process move to block at which the SRTM facility maintains the value of nr i j in order to provide the update of the average service response time during the particular surveillance period. The process ends at block .

In Format an average service time i j which may also be represented by Tr i j describes an average service response time in the path of the CIMOM Ns i and CIM provider device Ns j . After the preparation of the updated format of the attribute value of the average service response time in the SLPAG facility using an application programming interface API provided by the SLPAG facility an SLP message with the updated format is delivered to the SLP SA management daemon and the value of the SLP advertise is updated. When an attribution acquisition request is issued from a UA User Agent in the CIM application an SLP SA management daemon provides the UA in the CIM application with updated value.

When selecting the CIMOM to dispatch CIM request message to CIM application calls CIMOM selection facility implemented in CIM application node . CIMOM selection facility facilitates the update of CIM provider request frequency table every time a CIM request message is dispatched.

The CIMOM is selected and determined by the following 1 CIM provider request frequency rp provided by CIM provider request frequency table 2 average service response time by CIM provider Atr provided by average service response time information and 3 average response time Tr obtained from the response time tr to each CIMOM tr provided by response time information .

Based on the prepared CIMOM list in order to obtain service response time Atr i j by a CIM provider an SLP attribute request is issued to all CIMOMs as shown at block . A response to the request is received as shown at block . The value obtained by the request has an average actual response time Tr i j unit second . However based on the updated format shown in normalization of Tr i j is performed to facilitate a calculation with the other evaluation parameters described in . Further processing is executed with Atr i j instead of Tr i j .

The procedure for normalization is explained as follows For the CIM provider device Np j an average service response time Trp j for all CIMOM server nodes Ns i 1

Acquisition of the CIMOM average response time tr Based on the CIMOM request path s an ICMP echo packet is issued a preset number of times to obtain a preset number of samples of CIMOM response times for each CIMOM within a cluster of CIMOM servers as shown at block . The ICMP is configured as an application in each CIMOM. The CIMOM response time is based on the following CIMOM response time components 1 the time taken to receive an ICMP echo packet at the CIMOM from the CIM application and 2 the time taken to receive an ICMP echo packet at the CIM application from the CIMOM. At block average response time is calculated based on the CIMOM response times and the number of samples taken and a row vector tr with an average response time tr i corresponding to each CIMOM Ns i is described via equation .

At block a CIM provider request frequency table is updated following the CIM client dispatch of a CIM request message to the CIMOM. In the CIM provider request frequency table a frequency is described for the CIM provider device which processes receives the CIM request regardless of the specification of the CIMOM. The frequency is described by the normalized value of the ratio rp j . The rp j value is updated each time the CIM client generates a request message. The rp j value is calculated based on a running moving average illustrated in .

A column vector rp which contains request frequency values for all management object devices having rp j corresponding to the CIM provider device Np j as an element is described as follows Vector 1 2 . . . 

The rp j value is calculated by the process in . The rp j value is normalized so that the sum of all elements is 1. Equation depicts the normalized equation.

At block a service response delay frequency ds which is an index of the CIMOM selection is calculated from Atr rp and ts as illustrated by equation . In order to match the unit of average response time ts of the CIMOM in the second term of equation the first term is multiplied by an average over all CIMOM Ns i and all devices CIM provider Np j . Load balance is maintained when the units of each term do match. Furthermore by employing the multiplication factor weight of rp in the first term of the ds calculation of equation the precision of the calculation of response time to the CIM provider device which the client node frequently accesses is improved.

At block the element ds i with the minimum value of a row vector set ds where ds is calculated via equation is selected. CIMOM Ns i corresponding to the selected ds i becomes the output of the CIMOM selection program. The ds i value is obtained as follows ds i minds ds . . . ds i . . . ds n . The process ends at block .

Although the methods illustrated in may be described with reference to components shown in and it should be understood that this is merely for convenience and alternative components and or configurations thereof can be employed when implementing the various methods. Key portions of the methods may be completed by CSS utility executing within DPS along with CIM application and controlling specific operations of on DPS and the methods are thus described from the perspective of either both CSS utility CIM application and DPS .

As introduced within the descriptions of the flow charts above illustrate a number of equations by which features of the invention may be advantageously implemented according to one embodiment of the invention.

In the flow charts above one or more of the methods are embodied in a computer readable medium containing computer readable code such that a series of steps are performed when the computer readable code is executed on a computing device. In some implementations certain steps of the methods are combined performed simultaneously or in a different order or perhaps omitted without deviating from the spirit and scope of the invention. Thus while the method steps are described and illustrated in a particular sequence use of a specific sequence of steps is not meant to imply any limitations on the invention. Changes may be made with regards to the sequence of steps without departing from the spirit or scope of the present invention. Use of a particular sequence is therefore not to be taken in a limiting sense and the scope of the present invention is defined only by the appended claims.

As will be further appreciated the processes in embodiments of the present invention may be implemented using any combination of software firmware or hardware. As a preparatory step to practicing the invention in software the programming code whether software or firmware will typically be stored in one or more machine readable storage mediums such as fixed hard drives diskettes optical disks magnetic tape semiconductor memories such as ROMs PROMs etc. thereby making an article of manufacture in accordance with the invention. The article of manufacture containing the programming code is used by either executing the code directly from the storage device by copying the code from the storage device into another storage device such as a hard disk RAM etc. or by transmitting the code for remote execution using transmission type media such as digital and analog communication links. The methods of the invention may be practiced by combining one or more machine readable storage devices containing the code according to the present invention with appropriate processing hardware to execute the code contained therein. An apparatus for practicing the invention could be one or more processing devices and storage systems containing or having network access to program s coded in accordance with the invention.

Thus it is important that while an illustrative embodiment of the present invention is described in the context of a fully functional computer server system with installed or executed software those skilled in the art will appreciate that the software aspects of an illustrative embodiment of the present invention are capable of being distributed as a program product in a variety of forms and that an illustrative embodiment of the present invention applies equally regardless of the particular type of media used to actually carry out the distribution. By way of example a non exclusive list of types of media includes recordable type tangible media such as floppy disks thumb drives hard disk drives CD ROMs DVDs and transmission type media such as digital and analogue communication links.

While the invention has been described with reference to exemplary embodiments it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted for elements thereof without departing from the scope of the invention. In addition many modifications may be made to adapt a particular system device or component thereof to the teachings of the invention without departing from the essential scope thereof. Therefore it is intended that the invention not be limited to the particular embodiments disclosed for carrying out this invention but that the invention will include all embodiments falling within the scope of the appended claims. Moreover the use of the terms first second etc. do not denote any order or importance but rather the terms first second etc. are used to distinguish one element from another.

