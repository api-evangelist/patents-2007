---

title: Method of performing software updates (installations), on networked 32/64-bit microsoft computers in an automated environment without introducing a possible security threat
abstract: A method of monitoring all network communications, including a real-time analysis of intercepting all networked connections and closing those network connections, including all connections across the Internet, except for those specific connections that will function to update a networked computer with new software or updates to existing software.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08375418&OS=08375418&RS=08375418
owner: CW International, LLC
number: 08375418
owner_city: Ellwood City
owner_country: US
publication_date: 20070907
---
This application claims benefit of priority to U.S. Provisional Patent Application No. 60 824 823 filed Sep. 7 2006 which is herein incorporated in its entirety by reference.

This method of invention relates generally to the field of network utility professional programming and more particularly but not exclusively to monitoring network communication connections methods of intercepting network communications connections and closing all networked connections except those connections that function to update a networked computer with new software or updated software.

As networking and automation expands in business and organizations one of the most important new technical capabilities in today s modern network computing is the ability for organizations to automatically install new software or automatically update existing software across a network. In essence organizations have the capability to allow connectivity from their Local Area Network LAN to the Internet and any other public network organization which in turn can update that particular network with new software or updates to the current software installed within the network. For example it is very common for an anti virus vendor to update individual PCs attached to a network via the Internet with new file signature data more than once during any given 24 hour period. Another example is the use of network management tools which have the ability to automatically update large networks i.e. wide area networks WANs with any kind of software from small individual programs to a major operating system O S service pack update.

Another issue is that a 32 64 bit Microsoft computer automatically creates hidden administrative shares for its logical drives C D etc. which it names C D etc. respectively. The 32 64 bit Microsoft computer also creates an Admin hidden share for the WINNT or Windows folder. Domain administrators design these shares for remote access support. By default if these administrative shares are deleted they are automatically recreated when the computer is rebooted. These active administrative shares allow any individual user to remotely log into a 32 64 bit Microsoft computer if the remote user knows the system name and password of that particular computer. Other shares may also be of issue including but not limited to an ipc share which is a network share that is used to facilitate communication between processes and computers. This share is often used to exchange authentication data between computers.

The biggest issue with the majority of the network management tools available to perform automatic network updates is that they require their solutions be applied in the form of configuration absolutes that is one size fits all without any consideration for how the networked computer should function when it is not receiving automatic authorized software updates but operating in a normal production environment. As an example many networked solutions require that an administrative share be configured into each networked computer to allow the network management tool that resides on a remote computer to access and update each networked computer anytime the network is operational. If the administrative share is configured and active during the entire time each networked computer is turned on then this administrative share allows an individual user who is connected via a network computer and is probing the network with various tools to possibly obtain an authorized system name and password to a networked computer and then remotely login to the networked computer i.e. a successful unauthorized security penetration of the networked computer .

Because of the problems described in the previous paragraphs a new technology such as for example a utility is needed that has the ability to allow network management tool s to securely perform automated software updates on a networked computer for example a 32 64 bit Microsoft PC or Server. In addition the utility should also insure the security of the networked computer during the time of the automated software updates and during those periods that the networked computer is not receiving any automated software updates from the network management tool s .

In accordance with an embodiment of the present invention a method includes executing and performing an analysis of a networked 32 64 bit Microsoft computer s for example a 32 64 bit Microsoft PC s and or server s internal communications configuration and then configuring the computer to allow network management tool s to perform automated software updates on the networked 32 64 bit Microsoft PC and or Server while also insuring the security of the networked computer during the time of the automated software updates and during those periods that the networked computer is not receiving any automated software updates from the network management tool s .

In the description herein general details are provided in flow diagrams to provide a general understanding of the programming methods that will assist in an understanding of embodiments of the inventive methods. One skilled in the relevant art of programming will recognize however that the invention method can be practiced without one or more specific details or in other programming methods. Terms referenced throughout this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present inventive method. Thus the appearance of the phrases in one embodiment or in an embodiment in places throughout this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined in any suitable manner in one or more embodiments.

As an overview the ability for a programmer to design and develop an operating system O S utility may be based on the capabilities of the O S NetAPI functions Winsock and those functions that allow an interface to gather information critical to files that reside within the O S Winsock. In accordance with one or more embodiments of the present invention the O S utility may be developed or implemented in a variety of programming languages ranging from low level programming languages e.g. but not limited to assembler to high level programming languages e.g. but not limited to C Visual Basic Java Java Beans etc. . The O S utility may be stored or encoded as an executable file on a machine readable and or a computer readable medium e.g. but not limited to a floppy disk a hard drive a flash drive a bubble memory a Read Only Memory ROM a Random Access Memory RAM or the like and or hardwired into one or more integrated circuits e.g. an Electrically Erasable Programmable Read Only Memory EEPROM an Erasable Programmable Read Only Memory EPROM etc. .

In accordance with one or more embodiments of the present invention the O S utility may be developed or implemented in a variety of programming languages ranging from low level programming languages e.g. but not limited to assembler to high level programming languages e.g. but not limited to C Visual Basic Java Java Beans etc. . The O S utility may be stored or encoded as an executable file on a machine readable and or a computer readable medium e.g. but not limited to a floppy disk a hard drive a flash drive a bubble memory a Read Only Memory ROM a Random Access Memory RAM or the like and or hardwired into one or more integrated circuits e.g. an Electrically Erasable Programmable Read Only Memory EEPROM an Erasable Programmable Read Only Memory EPROM etc. .

Referring back to there is shown the retrieving all communications connection policies i.e. TCP connection policies which specifically are retrieved by executing a fopen function a fread function and decrypted by establishing an interlink interface into an operating system crypto API. When the policy data file is decrypted it is applied to the functions that initiate extended parallel threads to monitor all formal TCP connections to determine whether each network connection is from an approved connection from the private access network. For example the software update policy defines a specific IP address such as the following Allow Software Updates Installations example 100.200.100.101.

It is contemplated that embodiments of the present invention may also be used with computer server systems that include additional elements not included in computer system in . For example these addition elements may include but are not limited to additional processing units e.g. parallel processing units graphics processing units etc. bridges and or interfaces to a variety of peripherals e.g. monitor keyboard mouse printer joystick biometric devices speakers external communications devices e.g. a LAN a WAN a modem a router etc. .

Additionally any configuration of the computer system in may be used with the various embodiments of the present invention. The executable instructions i.e. computer program implementing the present invention may be stored in any memory or storage device accessible to processing unit for example but not limited to volatile memory mass storage device or any other local or remotely connected memory or storage device.

Thus various embodiments provide one or more means for executing and performing an analysis of a networked 32 64 bit Microsoft computer s and or server s internal communications configuration configuring the computer to allow network management tool s to perform automated software updates on the networked 32 64 bit Microsoft PC and or Server but also insuring the security of the networked computer and or server during the time of the automated software updates and during those periods that the networked computer and or server is not receiving any automated software updates from the network management tool s .

In accordance with one or more embodiments each of the features of the present invention may be separately and independently claimed. Likewise in accordance with one or more embodiments each utility program program and or code segment module may be substituted for an equivalent means capable of substantially performing the same function s .

In accordance with an embodiment of the present invention a method may include reading a networked computer s software update policy performing an analysis of the networked computer monitoring all formal connections and enforcing the formal software update policy as defined by a software update policy file.

In accordance with an embodiment of the present invention a method as substantially shown and described herein.

In accordance with another embodiment of the present invention a system and method as substantially shown and described herein.

In accordance with yet another embodiment of the present invention a computer and method as substantially shown and described herein.

In accordance with still another embodiment of the present invention a network computer and method as substantially shown and described herein.

Although the present invention has been disclosed in detail it should be understood that various changes substitutions and alterations can be made herein. Moreover although software and hardware are described to control certain functions such functions can be performed using either software hardware or a combination of software and hardware as is well known in the art. Other examples are readily ascertainable by one skilled in the art and can be made without departing from the spirit and scope of the present invention as defined by the following claims.

