---

title: Techniques for local personalization of content
abstract: Techniques for the local personalization of content are presented. A content personalization service is dynamically pushed from a server environment to a client processing environment associated with a principal on demand. The content personalization service interjects itself between content that the principal attempts to view and access within the client processing environment and modifies and personalizes that content on behalf of the principal before the principal can view or access the content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08490198&OS=08490198&RS=08490198
owner: Apple Inc.
number: 08490198
owner_city: Cupertino
owner_country: US
publication_date: 20070518
---
The invention relates generally to data processing and more particularly to techniques for local personalization of content.

Increasingly enterprises and end users have a need to access data from a variety of locations using a variety of devices. The physical location of the data and the users has become irrelevant in today s highly connected environment and with the advent and pervasiveness of the World Wide Web WWW . The challenge for content providers has now become how that data can be customized for particular devices and particular users.

Conventionally user content customization occurs via applets installed and embedded within a World Wide Web WWW browser of the user. These applets are typically tied to a particular WWW browser a particular device and a particular processing environment associated with the user. The applets are also manually installed once within the browser and unless updated manually by a user remain constant even though circumstances and preferences of the user are chaotic and dynamic in fashion.

Consequently when the user switches browsers devices or even alters or changes processing environments the applets often become inoperable. This is inconvenient for a user that may access a variety of different browsers devices and may use a variety of different processing environments to access the Internet.

As a result a user may attempt to independently manage a variety of different applets for the different devices and browsers that the user may want to access. This can become a daunting management task for the user and may frustrate the user when some customization is available in one context and not available in another context.

Thus present solutions are not portable and reusable in an automated fashion accordingly the user cannot divorce him or her self from managing different context situations for which the user may access the Internet. In fact many users have given up trying to manage this situation and have resigned themselves to accepting a loss of functionality for some contexts.

In various embodiments techniques for local personalization of content are provided. More specifically and in an embodiment a method is presented for local personalization of content delivered to a client of a principal on demand. A principal who is requesting access to a content personalization service is authenticated for access. Next the content personalization service is acquired when the principal is authenticated and in response to an identity associated with the authenticated principal. The content personalization service is dynamically delivering over a network connection to a local processing environment associated with the principal. The content personalization service when processed in the local processing environment of the principal modifies and personalizes content delivered over the network connection to the principal.

A resource includes a user content a processing device a node a service an application a system a principal a directory a data store groups of users combinations of these things etc. A principal is a type of resource that engages in a communication session with one or more other resources for purposes of gaining access to those resources such as acquiring access to content. The resources that the principal seeks to access may also have their own and sub resources. In an embodiment a principal may be viewed as a user or as an automated application or service. The terms service and application may be used interchangeably herein and refer to a type of software resource that includes instructions which when executed by a machine performs operations that change the state of the machine and that may produce output to drive the processing of other machines or resources.

A resource is recognized via an identity. An identity is authenticated via various techniques e.g. challenge and response interaction cookies assertions etc. that use various identifying information e.g. identifiers with passwords biometric data hardware specific data digital certificates digital signatures etc. . A true identity is one that is unique to a resource across any context that the resource may engage in over a network e.g. Internet Intranet etc. . However each resource may have and manage a variety of identities where each of these identities may only be unique within a given context given service interaction given processing environment given communication session etc. .

An identity for a principal is at least partially resolved via an authentication technique in which the principal supplies or is identified by a single identifier and one or more authentication secrets e.g. passwords biometric data digital signatures digital certificates etc. .

An identifier may be viewed as a principal name or principal ID that the principal may assume for any given context. In an embodiment a principal has a single identifier and multiple authentication secrets that can be used with that single identifier. In another embodiment the principal has multiple identifiers and any given identifier can be used with each of the principal s available authentication secrets.

The principal s identity for any given context is resolved by authentication techniques that engage an identity service. The identity service uses a single supplied identifier and one or more of multiple available authentication secrets to resolve a particular identity for the principal in a given context.

The identity may also be a special type of identity that the resource assumes for a given context. For example the identity may be a crafted identity or a semantic identity. An example for creating and using crafted identities may be found in U.S. patent application Ser. No. 11 225 993 entitled Crafted Identities filed on Sep. 14 2005 and the disclosure of which is incorporated by reference herein. An example for creating and using semantic identities may be found in U.S. patent application Ser. No. 11 261 970 entitled Semantic Identities filed on Oct. 28 2005 and the disclosure of which is incorporated by reference herein.

An identity service refers to a special type of service that is designed to manage and supply authentication services and authentication information for resources. So an identity service may authenticate a given principal for access to a variety of local and external resources known to that identity service. In addition the identity service itself may be viewed as a type of resource. In this manner identity service may authenticate and establish trust with one another viewing one another as specific type of resource. An identity service may also enlist the assistance of other resources or services to perform any given authentication on a principal.

According to an embodiment some example identity services which may be used with the teachings presented herein are described in Techniques for Dynamically Establishing and Managing Authentication and Trust Relationships filed on Jan. 27 2004 and having the U.S. Ser. No. 10 765 523 Techniques for Establishing and Managing a Distributed Credential Store filed on Jan. 29 2004 and having the U.S. Ser. No. 10 767 884 and Techniques for Establishing and Managing Trust Relationships filed on Feb. 3 2004 and having the U.S. Ser. No. 10 770 677 all of which are commonly assigned to Novell Inc. of Provo Utah and the disclosures of which are all incorporated by reference herein.

An identity service may also provide single sign on services to a resource. That is a resource may sign on to an identity service and acquire identities and credentials to access a variety of other services or resources. In some cases the identity service is modified or enhanced to perform some of the teachings presented herein and below.

For any particular resolved identity a variety of other attributes may be assigned by the identity service or other services or resources that the identity service uses. That is when the principal desires access to a resource or engages in a communication session with that resource the access or session may require or may beneficially utilize other information beyond just the identity associated with the principal. Some example attributes or attribute types may include by way of example only and not by way of limitation a role that may define access rights and permissions an employee number an address a phone number a credit card number income social security number etc.

 Content refers to information such as text audio graphics video scripts programs images etc. that is requested and desired by a principal over a network connection such as the Internet. In an embodiment content represents a World Wide Web WWW page provided by a WWW site via a content distributor or provider. The content may include primary data such as the text audio etc. and may also include presentation details embodied in secondary or metadata about the primary data such as bolding page placement effects fonts etc.

As used herein a client refers to one or more machines or services operating within a local processing environment or client processing environment. A server refers to one or more machines or services operating within a remote or server processing environment. The client and server communicate with one another over a network connection such as a wide area network WAN e.g. Internet etc. of a local area network LAN such as within a firewall environment. This represents a client server architecture in which machines and environments communicate with one another over a network from different environments and or machines.

Various embodiments of this invention can be implemented in existing network architectures security systems data centers and or communication devices. For example in some embodiments the techniques presented herein are implemented in whole or in part in the Novell proxy server products operating system products data center products and or directory services products distributed by Novell Inc. of Provo Utah.

Of course the embodiments of the invention can be implemented in a variety of architectural platforms operating and server systems devices systems or applications. Any particular architectural layout or implementation presented herein is provided for purposes of illustration and comprehension only and is not intended to limit aspects of the invention.

It is within this context that various embodiments of the invention are now presented with reference to the .

The server service acts a central and portable repository for content personalization services that are administered to client processing environments over a network connection such as the Internet. These content personalization services are pushed to the client processing environments and dynamically processed to modify and personalize content that principals attempt to access over the network connection. The server service may also interact with multiple instances of client services which are described below with reference to .

At the server service authenticates a principal who is requesting access to a content personalization service CPS . A CPS is an executable or schema definition for subsequent execution by another service that is customized for the principal. As will be demonstrated below the CPS when executed within the local or client processing environment of the principal interjects itself between content presentation to the principal in order to modify and personalize the content for viewing and access by the principal. The personalization may relate to changing or augmenting the content and or it may relate to altering a display presentation for the content.

According to an embodiment at the server service requests a third party trusted identity service to assist in or facilitate authenticating the principal. Example identity services were discussed and incorporated by reference above.

In some cases at the server service may initially receive the request for the CPS via a redirection of the principal such as through WWW browser interactions such that the principal indirectly makes the request for access to the CPS. This redirection is done when the principal is detected as initially attempting to log into the network connection.

At the server service acquires the CPS when the principal is authenticated for access. One way to do this at is for the server service to access a repository having a plurality of CPS s using the identity of the principal as a search term to return the specific CPS associated with and tailored to the principal.

It may also be that the principal previously supplied the CPS to the repository. In this manner the principal may supply his or her personalized CPS implementations or definitions for the server service to manage and distribute on demand when requested by the principal. This provides centralized and platform independent access to the CPS for the principal regardless of device or processing environment being used by the principal.

In some cases at the server service may also dynamically acquire settings for the local processing environment of the principal that is identified when the principal is authenticated for access. These settings may include environment configuration information that the server service uses to dynamically configure the CPS before the CPS is delivered or pushed to the local processing environment of the principal.

So the CPS may be generic in nature and the server service may instantiate it and configure it for a given set of settings associated with the local processing environment of the principal as it appears when the principal is authenticated for access to the CPS. It may also be the case that the principal is associated with a plurality of CPS s and the settings assist the server service in selecting an optimal or most appropriate CPS for delivery to the local processing environment of the principal.

At the server service dynamically and in real time delivers or pushes over a network connection the CPS to the local processing environment of the principal. The CPS when processed within the local processing environment of the principal modifies and personalizes content that is subsequently delivered over the network connection to the principal.

In an embodiment at the server service may provide the CPS as an extensible style sheet language XSL transformation XSLT application to a WWW browser of the principal within the local or client processing environment of the principal. The XSLT application when processed against content that the principal attempts to view or access within the browser personalization a presentation of that content before the principal can view or access the content. At the service may also provide the CPS as a JAVA script rather than an XSLT application.

In another embodiment at the server service may provide the CPS as a WWW browser plug in that self loads self installs and self executes within a WWW browser of the principal within the local or client processing environment of the principal. The WWW browser plug in when processed against content within the WWW browser that the principal attempts to access or view personalizes the content by modifying the content before the principal can view or access the content.

The processing associated with the client service cooperates and interacts with the server service described above with the method and within the context of the . The client service facilitates the dynamically installation of content personalization services within a client processing environment of a principal for purposes of dynamically modifying and personalizing content accessed by the principal.

It is noted that the client service is optional as interaction with the server service may be achieved via an Application Programming Interface API or form driven fields of WWW pages between the server service and a requesting principal. However in some cases the client service may be beneficial and installed as a local service within the principal s client processing environment or even as a plug in within the principal s WWW browser. Additionally the client service may be acquired installed and executed in a dynamic fashion from the client processing environment over a network connection.

At the client service requests a content personalization service CPS from a remote service over a network. In some cases the remote service is the server service described in detail above with reference to the method of the .

According to an embodiment at the processing of the client service may be installed and executed as a local service within the local or client processing environment. The client service is activated or invoked automatically when the principal attempts to log into the network.

In a different arrangement at the processing of the client service may be invoked and executed in response to the principal activating a uniform resource locator URL or identifier URI link within a WWW browser or invoked and executed in response to the principal supplying a particular IP address to an address bar within the WWW browser. The IP address may be associated with the remote service.

At the client service supplies credentials to authenticate the principal to the remote service. The credentials permit the principal to be authenticated to receive access to and delivery of the CPS from the remote service.

In an embodiment at the client service may iteratively interact with the principal to acquire some or all of the credentials. In another situation at the client service may automatically acquire at least some of the credentials from the local processing environment on behalf of the principal. For instance some credential information may be acquired from a browser cookie on behalf of the principal.

It may also be the case at that the client service automatically interacts with the remote service to dynamically supply settings associated with the local processing environment of the principal before the CPS is actually received from the remote service. As was discussed above with reference to the method of the the remote service may use this information to dynamically configure the CPS for processing within the local processing environment of the principal. In other cases the settings may be retained by the client service and then used by the client service to configure the received CPS for processing within the local processing environment of the principal. So the settings may be supplied to the remote service for configuration of the CPS or the client service may independently use the settings to self configure the CPS once received from the remote service over the network.

At the client service receives the CPS from the remote service over the network when the credentials are successful in authenticating the principal to the remote service for access to and delivery of the CPS. Any CPS configuration necessary for the local processing environment of the principal may be achieved in a manner discussed at above.

Once the CPS is received and optionally configured at the client service dynamically installs and processes the CPS within the local processing environment of the principal to modify and personalize content that the principal attempts to access and view from the network and before the content is made available to the principal within the local processing environment. Essentially the CPS interjects itself between content presentation provided to the principal to achieve content modification and personalization.

In an embodiment at the client service processes the CPS to automatically populate fields of a WWW form requested content of the principal with personal data of the principal. So the CPS may be used to provide partial or complete form fill. In addition the CPS may be used to remove portions of content requested by a principal such as advertisements sensitive data not intended for the principal video content destined for a device that will not support it or even a bandwidth connection to the network that will not support it etc. Likewise the CPS may be used to add or augment the content with additional content or information such as sensitive comments or advertisements etc. Furthermore the CPS may be used to customize a display presentation for the content to the liking of the principal or to the liking of a particular content provider or distributor.

The local content personalization system includes a content personalization service and a personalization delivery service . Each of these will now be discussed in turn.

The content personalization service CPS is implemented in a machine accessible and readable medium and is to process on a client machine of a client processing environment that is associated with a principal. The CPS was described in detail above with reference to the methods and of the .

The CPS once acquired installed and executed described herein below and above within the client processing environment and on the client machine of a requesting principal intercepts modifies and personalizes content on the client machine before the principal accesses and views the content.

According to an embodiment the CPS is processed as a WWW browser plug in that executes within a WWW browser on of the client machine. The CPS may also be independent of any particular browser and may be delivered as machine code as a service that can process on or be dynamically configured to process on a variety of different client machines and within a variety of different client processing environments.

The CPS can be initially received from or defined by the principal within an environment of the personalization delivery service PDS during a prior interaction and before the principal requests the CPS from the PDS .

The PDS is implemented in a machine accessible and readable medium and is to process on a server machine that is remote over a network connection from the client machine that as is demonstrated below ultimately processes the content personalization service on behalf of a principal. Example processing associated with the personalization delivery service was presented in detail above with reference to the server service represented by the method of the

The PDS is processed to dynamically deliver for installation and processing to the client machine the CPS for the principal when the principal is properly authenticated to the PDS . The PDS resolves the specific CPS in response to the identity of the principal when the principal is authenticated to the PDS . The CPS is then dynamically delivered to the client machine for dynamic installation and processing.

In an embodiment the PDS is to also acquire settings associated with the client machine and the client processing environment and is to configure and customize the CPS for those settings before dynamic delivery to the client machine.

According to another embodiment the PDS dynamically pushes the CPS to the client machine when the principal logs into the network connection or when the principal logs into the PDS . In this manner the principal acquires the CPS from whatever environment and device that the principal may use to log into the network or the PDS . The CPS can be customized and tailored to the particular device of environment of the principal and dynamically pushed and installed there for processing.

In another case the PDS dynamically updates and modifies the CPS which has already been delivered to the client machine in response to a dynamic policy evaluation or in response to a dynamically received instruction. The updated CPS or modifications that are to be dynamically applied to the CPS are dynamically updated on the client machine. In this manner the operation of the CPS can be dynamically altered and updated by the PDS .

The local content personalization system includes a content personalization service repository hereinafter repository and a personalization delivery service PDS . Each of these will now be discussed in turn.

The repository is implemented in machine accessible and readable medium and is accessible to or on a server machine within a server processing environment.

The repository supplies and houses a plurality of content personalization services CPS s . The CPS ultimately process within the client processing environments to modify and personalize content before that content is viewed and accessed by principals. Each CPS within the repository may be acquired by an identity associated with a particular principal and or via policy evaluation.

In an embodiment at least one of the CPS s are initially supplied to or defined within the repository by some of the principals. So some CPS s may be actively managed and supplied by the principals for whom the CPS s customize and personalize content. Policy may also drive whether principals are permitted to supply their own CPS s. Additionally some CPS s may be defined and supplied within the repository by an administrator on behalf of some of the principals. Furthermore a single principal may have multiple CPS s where some are provided by the principal to the repository and where others are supplied by an administrator on behalf of the principal to the repository .

The PDS is implemented in a machine accessible and readable medium and is to process on the server machine or a different machine accessible within the server processing environment over a network connection such as an Internet connection. Example processing associated with the personalization delivery service has been described in detail above with reference to the .

The PDS is processed to manage a plurality of CPS s housed in the repository on behalf of a plurality of principals. The PDS also dynamically pushes the CPS s to the principals on demand such as when the principals are detected as logging into the PDS or a network or such as when the principals specifically request CPS s from the PDS .

The above description is illustrative and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reviewing the above description. The scope of embodiments should therefore be determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled.

The Abstract is provided to comply with 37 C.F.R. 1.72 b and will allow the reader to quickly ascertain the nature and gist of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims.

In the foregoing description of the embodiments various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting that the claimed embodiments have more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Description of the Embodiments with each claim standing on its own as a separate exemplary embodiment.

