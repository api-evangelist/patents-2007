---

title: Playback of content on portable devices
abstract: A computer-implemented method includes identifying encoded content to be presented. The method also includes loading the content into a content player. The content player is configured to dynamically identify a local decoder that is operable to decode the content. The method further includes providing the identified content to the local decoder during playback of the content; and presenting the decoded content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07761602&OS=07761602&RS=07761602
owner: Adobe Systems Incorporated
number: 07761602
owner_city: San Jose
owner_country: US
publication_date: 20071126
---
Users of portable devices such as cellular phones media players electronic games personal data assistants PDAs and smart phones increasingly demand a media rich environment on their portable devices. Users may register with a wireless service provider to receive various types of content from the service provider on their portable devices. Some portable devices may be connected to networks such as the Internet and may receive content directly from various web sites and third party content providers. The content which includes graphics video animation audio text and the like may be delivered to a portable device at the request of the service provider or the user.

This specification describes technologies relating to playback of content on portable devices in mobile information systems.

In general one aspect of the subject matter described in this specification can be embodied in a method that includes identifying encoded content to be presented. The method also includes loading the content into a content player. The content player is configured to dynamically identify a local decoder that is operable to decode the content. The method further includes providing the identified content to the local decoder during playback of the content and presenting the decoded content. Other embodiments of this aspect include corresponding systems apparatus and computer program products.

In general another aspect of the subject matter described in this specification can be embodied in a device that includes a network interface a portable content player memory storing content a playback engine and a porting layer through which the content player interfaces with the device. The playback engine is operable to playback the content using a decoder.

In general another aspect of the subject matter described in this specification can be embodied in a system that includes a network. The system also includes a server communicatively coupled to the network operable to transmit content through the network. The system further includes a portable device communicatively coupled to the network. The portable device is operable to receive the content. The portable device is also operable to load the content into a content player. The content player is configured to dynamically identify a local decoder that is operable to decode the content. The portable device is further operable to provide the identified content to the local decoder during playback of the content and present the decoded content.

These and other embodiments can optionally include one or more of the following features. The local decoder can be provided in a platform of a portable device. The content can include audio content and the local decoder can include an audio decoder. The content can include video content and the local decoder can include a video decoder. The content can be stored in an automatically synchronizing data store. The data store can receive the content from one or more networks based on an update frequency of the content. The content player can include a virtual machine. The content player can include a playback engine. The virtual machine can be operable to send requests to decode the content to the playback engine. The playback engine can dynamically select a local decoder. The content player can include a software package installed on a portable device. The portable device can include an operating system. The content player can be operable to interface with the operating system to identify the local decoder.

Particular embodiments of the subject matter described in this specification can be implemented to realize one or more of the following advantages. A manufacturer who makes both portable devices with hardware decoders and without hardware decoders may install a single configuration of a content player. The content player may use the device s playback capabilities when present or may use the content player s software decoding when such capabilities are not available on the device. By not compiling in the software decoding with the content player the content player can make the determination as to which decoder to use at run time. Portable device memory may be conserved by not including a content player decoder in devices that have hardware and or software decoders in the OS. In some embodiments manufacturers may change decoders as they become popular or required for business goals. Third parties may also create optimized software decoders possibly reducing the overall development costs of a device. Problems with decoders may be rectified and other optimizations may be applied without modifying the hardware of the device. For example the content player s decoding may be used instead of the device playback capabilities.

The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features aspects and advantages of the invention will become apparent from the description the drawings and the claims.

Content may be in the form of any combination of text images audio vector graphics bitmaps frame based animation video and any other format that may be communicated over a network or stored on a portable device. Portions or all of content may be encoded. Content may include or be embedded in executable scripts or other sequences of instructions. Other types of content are possible. Depending on the format of the content an application such as a media player or other run time component running on a portable device may be invoked to execute a script or instructions or to otherwise display the content.

The portable device may be a mobile phone e.g. a cellular telephone smart phone personal digital assistant PDA Blackberry device laptop computer Pocket PC electronic gaming device media player personal computer workstation server or combinations of the like or other types of similar devices. The device may include output devices such as a video display which may be touch sensitive and integrated with or separate from the device and integrated or separate speakers for audio reproduction. The device may also include user input devices such as buttons a keypad a mouse or joystick a microphone a camera and sensors such as one or more accelerometers for determining the orientation of the device .

A device may include a device platform which may include hardware an operating system and any other software that may be used to operate the device . Hardware may include decoders memory processors display and speaker . The operating systems that may be included in a device platform vary widely. To name a few example operating systems include Symbian OS Palm OS Windows Mobile RIM BlackBerryOS Mac OS X and Linux. The device platform may include an audio and or video decoder that is accessible through the porting layer to provide decoding functionality to applications running on the device .

The memory of the device may also include a file store that may store content as well as data specific to a user of the device such as call logs user preferences and telephone directories. The file store may also include an automatically synchronizing data store that receives updated content from a server based on a frequency associated with the content or other factors.

The device platform may be connected to a content player that is used to manage and playback content. The content player may support vector graphics bitmaps and frame based animation as well as text input and dynamic text. The content player may be able to process files such as SWF files which may include native device fonts or embed arbitrary fonts. SWF file provides an executable compact tag based easily extendible format that supports streaming bitmap and vector graphics and scripting and may be executed by applications such as Adobe Flash Player available from Adobe Systems Incorporated. SWF files may contain embedded content that may be presented by the content player . The content player may also support scripting integration with portable device capabilities including keypad navigation button presses notification messaging and media playback as well as integration with the general operating system functionality of portable device .

The content player may include any combination of components. Each component may be assigned a unique identifier and may register with the content player . At run time the content player may access a registered component as needed to facilitate the playback of content. Generally the components may include but are not limited to a virtual machine a content sourcing engine a playback engine and a rendering engine . The playback engine may include a streaming engine video and audio playback engines and video and audio decoders and .

The content player may include a virtual machine such as the Adobe Flash Player i.e. a virtual machine capable of executing ActionScript a Java Virtual Machine the Common Language Runtime available from Microsoft Corporation or some other virtual machine or module capable of executing instructions or script files. The virtual machine when executing instructions may encounter a tag or other indicator that refers encoded video or other rich media. The virtual machine may forward the encoded content to the content sourcing engine for playback.

The content sourcing engine may manage the inputting of content and may determine whether the content is handled mainly by the content player or the device platform . The content sourcing engine may communicate with the file store to store and or retrieve content. A content sourcing engine may receive content from a variety of sources which include but are not limited to content embedded in a script file received through the virtual machine content stored in one or more files that are downloaded from a server or stored in file store content from a server received over the internet via an hypertext transfer protocol HTTP and content from a server received over the internet via a proprietary protocol such as Real Time Messaging Protocol RTMP from Adobe Systems Incorporated. The script file may be a SWF file or any file containing instructions that may be executed. At run time the content sourcing engine may determine whether the device platform has content playback capabilities. If so the content may be forwarded to the device streaming and playback engine otherwise the content may be forwarded to the content player playback engine .

The playback engines and each take as input content received from the sourcing engine and reproduce or present the content on the display and or speaker . The content player playback engine may include a streaming engine a video playback engine an audio playback engine a video decoder and an audio decoder . None some or all of these components may not be included with the content player playback engine . The streaming engine may function as a gatekeeper or traffic director for video frame decoding. The streaming engine may use audio stream time to throttle the video frame decode rate. Streaming engine may also include logic to skip video frames in order to sync video and audio content to enable seeking within the video to buffer video and audio to request a decoder to turn on off the post processing filters and other logic that facilitates the presenting of content. The streaming engine may also separate audio and video content and feed them to the appropriate playback engine. The streaming engine may also perform operations such as dropping video frames optimizing frame transitions e.g. blending video frames throttling buffering of networking and data stream information color and scaling transformations deblocking and smoothing and several other operations. The audio playback engine may receive encoded audio from the sourcing engine and or the virtual machine decode each audio stream mix the various audio streams into a single channel and output the result to the speaker . The video playback engine may receive encoded video frames and images from the content sourcing engine and or the virtual machine decode the content and output the decoded content to the rendering engine . The rendering engine may combine the layers of images of a frame into a single image. The result may be output to the display .

The audio playback engine may utilize the audio decoder which may be implemented independent of the device platform or may utilize via the porting layer an audio decoder provided in the device platform if one exists. The determination and selection of which audio decoder to use may be made dynamically at run time. Similarly the video playback engine may utilize the video decoder of the content player or may utilize the video decoding capabilities of the device if the device has such capabilities. A decoder that has been registered with the content player may be selected. Registering may occur when the content player is instantiated on the device . Multiple audio decoders and multiple video decoders may be locally available at run time. The selection among them may be determined using a pre configured priority list. For example if at run time a device hardware video decoder is available then it may be used over other video decoders. If no device hardware video decoder exists then a device software video decoder may have priority over other video decoders. If the no device hardware or software decoder is available the video decoder of the content player may be used. The audio and video playback engines and may operate independently of one another such that an audio decoder of the device platform may be used to decode audio content and the video decoder of the content player may be used to decode video content. A decoder may also be selected on the basis of playback quality playback speed licensing restrictions user preferences and a host of other criteria.

The video decoder may receive video encoded in any one of a variety of colorspaces e.g. YCbCr RGB Luv Lab etc. and may decode and convert the video to another of a variety of colorspaces e.g. YCbCr RGB Luv Lab etc. for playback. The video decoder may also scale filter and smooth images to meet the output of the device .

The device playback engine may be implemented in hardware and or software by the manufacturer of the device . The device playback engine may perform any combination of functions analogous to those performed by the various blocks of the content player playback engine described above.

The content player may communicate with the device platform through a porting layer . The porting layer may contain software methods and functions that have been implemented according to one or more application programming interfaces APIs as described in at and its description below. Although the interface for the methods of the porting layer may be the same the actual implementation of each method may vary according to the device platform .

The network enables communications between the portable device and servers . Portions of network may communicate with or include a cellular network a wireless and or wired personal local metropolitan regional and or wide area networks and or the Internet. Wireless and cellular networks may communicate using a variety of standards and or protocols including for example Institute of Electrical and Electronics Engineers IEEE 802.11 related standards IEEE 802.16 related standards Wideband Code Division Multiple Access W CDMA High Speed Downlink Packet Access HSDPA Enhanced Data Rates for GSM Evolution EDGE General Packet Radio Services GPRS and Global System for Mobile Communication GSM . Portions of network may be administered by a wireless service provider such as T Mobile Verizon Wireless or Sprint Nextel for example. Subscribers to the wireless service may receive external content from content providers through portable device . The network may communicate with the Internet and may facilitate communications between portable device and Internet websites and any content available through the Internet.

Servers may include clusters of feed servers and data source servers. The client server architecture of system may use clustering technology to help ensure performance reliability and scalability while minimizing deployment complexities through a flexible integration framework. Servers may aggregate content from external content providers received over the Internet and organize the content into downloaded or streamed files that may be transmitted to the content player on device over network . Servers may filter content files based on user preferences portable device types portable device capabilities access controls and local legal or other restrictions e.g. decency and privacy laws . Servers that are data source servers may retrieve normalize and aggregate content from the web servers of content providers may transform various formats of retrieved content for example into a common XML format and may pass the content on to servers that are feed servers for delivery to the content player . Retrievals and or transmissions may be scheduled at predetermined intervals at which times differential updates may be collected. Transmissions may also be pushed from the feed server to the device whenever new content becomes available. Data source servers may be configured to handle content feeds in various formats e.g. RSS Atom XML etc. . Content files may support embedded content types including for example text images and SWF files.

In operation a server may transmit content over a network to a device . The content may be embedded in a script file and may be received by the virtual machine . The content may also be included in one or more video files stored in file store . The content sourcing engine may receive and may determine the playback engine to which to forward the content. The device playback engine may receive the content if the device has native playback capabilities and the playback engine is registered with the content player . Otherwise the playback engine of the content player may be responsible for playing the content. Where the device handles the content the device may decode any encoded content and render any images or video directly onto the display and audio directly to speaker . Upon forwarding the content to the device playback engine the content player may provide an alpha value that is used to control the transparency of the images rendered on the display such that animations or other content displayed by the content player may not be overridden.

Where the device lacks full playback capabilities the content player may handle the content. In that case the content sourcing engine may forward the content to the playback engine . The streaming engine may receive the content and perform any buffering that may be needed. The streaming engine may then split the audio and video content. The audio content may be decoded by audio decoder and mixed with audio from other sources such as those embedded in instructions executed by the virtual machine . In a similar fashion video may decoded by video decoder and forwarded to a rendering engine which may combine the decoded video with images and or video from other sources before displaying the result on display .

The device may provide partial playback capabilities such as providing a video decoder that may be accessed through the porting layer . In such cases the playback engine of the content player may use the device video decoder instead of the video decoder in content player . The determination of whether the device provides a decoder may be done at run time and may depend on whether the device decoder is registered with the content player at the time that a video requires decoding.

In operation an application such as content player may be executed on device . The content player may begin playing a content file using the data service core . The data service core may utilize a method in the file management API to read the content file that may be stored in memory in the device platform layer . The content player may direct the data contained in the rich media file to the modules in the user interface component to be played using the video playback and audio playback APIs in porting layer . These modules may further utilize components within the device platform to communicate the data in the content file through the display or the speakers of the device .

Embodiments of the subject matter and the functional operations described in this specification can be implemented in digital electronic circuitry or in computer software firmware or hardware including the structures disclosed in this specification and their structural equivalents or in combinations of one or more of them. Embodiments of the subject matter described in this specification can be implemented as one or more computer program products i.e. one or more modules of computer program instructions encoded on a computer readable medium for execution by or to control the operation of data processing apparatus. The computer readable medium can be a machine readable storage device a machine readable storage substrate a memory device a composition of matter effecting a machine readable propagated signal or a combination of one or more of them. The term data processing apparatus encompasses all apparatus devices and machines for processing data including by way of example a programmable processor a computer or multiple processors or computers. The apparatus can include in addition to hardware code that creates an execution environment for the computer program in question e.g. code that constitutes processor firmware a protocol stack a database management system an operating system or a combination of one or more of them. A propagated signal is an artificially generated signal e.g. a machine generated electrical optical or electromagnetic signal that is generated to encode information for transmission to suitable receiver apparatus.

A computer program also known as a program software software application script or code can be written in any form of programming language including compiled or interpreted languages and it can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program does not necessarily correspond to a file in a file system. A program can be stored in a portion of a file that holds other programs or data e.g. one or more scripts stored in a markup language document in a single file dedicated to the program in question or in multiple coordinated files e.g. files that store one or more modules sub programs or portions of code . A computer program can be deployed to be executed on one computer or on multiple computers that are located at one site or distributed across multiple sites and interconnected by a communication network.

The processes and logic flows described in this specification can be performed by one or more programmable processors executing one or more computer programs to perform functions by operating on input data and generating output. The processes and logic flows can also be performed by and apparatus can also be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. The essential elements of a computer are a processor for performing instructions and one or more memory devices for storing instructions and data. Generally a computer will also include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. However a computer need not have such devices. Moreover a computer can be embedded in another device e.g. a mobile telephone a personal digital assistant PDA a mobile audio player a Global Positioning System GPS receiver to name just a few. Computer readable media suitable for storing computer program instructions and data include all forms of non volatile memory media and memory devices including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory can be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user embodiments of the subject matter described in this specification can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

Embodiments of the subject matter described in this specification can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the subject matter described is this specification or any combination of one or more such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

While this specification contains many specifics these should not be construed as limitations on the scope of the invention or of what may be claimed but rather as descriptions of features specific to particular embodiments of the invention. Certain features that are described in this specification in the context of separate embodiments can also be implemented in combination in a single embodiment. Conversely various features that are described in the context of a single embodiment can also be implemented in multiple embodiments separately or in any suitable subcombination. Moreover although features may be described above as acting in certain combinations and even initially claimed as such one or more features from a claimed combination can in some cases be excised from the combination and the claimed combination may be directed to a subcombination or variation of a subcombination.

Similarly while operations are depicted in the drawings in a particular order this should not be understood as requiring that such operations be performed in the particular order shown or in sequential order or that all illustrated operations be performed to achieve desirable results. In certain circumstances multitasking and parallel processing may be advantageous. Moreover the separation of various system components in the embodiments described above should not be understood as requiring such separation in all embodiments and it should be understood that the described program components and systems can generally be integrated together in a single software product or packaged into multiple software products.

Thus particular embodiments of the invention have been described. Other embodiments are within the scope of the following claims. For example a local decoder may be identified by first identifying the portable device type i.e. the make model software version etc. The type of portable device may be determined using an API implemented on the portable device or determined from information supplied by a user. Based on the portable device type a pre configured mapping may be used to determine which decoder should be used for the particular make and model of a portable device. The mapping may be compiled into software used in a content player may be transmitted over a network or may be stored locally in a portable device. Decoders for content other than audio and video are contemplated such as image decoders and text decoders e.g. those that perform decryption . Also missing components in a content player may be downloaded from a feed server at run time. These example implementations and other implementations are within the scope of the following claims.

