---

title: Distributed storage for collaboration servers
abstract: Distributed storage of collaboration data is managed over internal and external data stores in a collaboration service environment based on categorization of the data. The categorization may be based on type of data (e.g. structured vs. unstructured), how the data is accessed, an expected storage life for the data, back-up requirements, and the like. Data that can be stored externally according to its category is then directed to the external storage through a storage provider. A unique identifier associated with the location of the externally stored data is saved in one of the internal data stores for seamless retrieval of data in a transparent manner to the user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08195700&OS=08195700&RS=08195700
owner: Microsoft Corporation
number: 08195700
owner_city: Redmond
owner_country: US
publication_date: 20070928
---
Collaboration servers handle wide varieties and large amounts of data for participants of a collaboration service and typically store data in a single storage substrate like a Sequential Query Language SQL server. This behavior may result in resource bottlenecks poor scalability and high cost for data storage. In situations where the deployments include large amounts of data such as tens of terabytes of files the challenge of managing data storage for collaboration services becomes even more significant.

Furthermore different types of data such as structured data or unstructured data blob may be processed and accessed differently by the storage and processing systems with varying overhead requirements. If one type of data does not require the same overhead for processing or is not accessed in the same way as another type subjecting both types to the same treatment may result in wasted resources and increased cost of managing the storage of the data.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended as an aid in determining the scope of the claimed subject matter.

Embodiments are directed to storing data in a collaboration environment in a distributed manner based on categorization of the data. The categorization may be based on type of data e.g. structured vs. unstructured how the data is accessed an expected storage life for the data back up requirements and the like. By directing data to suitable storage based on the determine categories usage of system resources cost of storage and scalability of the system may be optimized.

These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory only and are not restrictive of aspects as claimed.

As briefly described above data may be stored in a distributed manner in a collaboration environment based on categorization of the data where the categorization may be based on type of data how the data is accessed an expected storage life for the data back up requirements and the like. In the following detailed description references are made to the accompanying drawings that form a part hereof and in which are shown by way of illustrations specific embodiments or examples. These aspects may be combined other aspects may be utilized and structural changes may be made without departing from the spirit or scope of the present disclosure. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined by the appended claims and their equivalents.

While the embodiments will be described in the general context of program modules that execute in conjunction with an application program that runs on an operating system on a personal computer those skilled in the art will recognize that aspects may also be implemented in combination with other program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that embodiments may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. Embodiments may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Embodiments may be implemented as a computer process method a computing system or as an article of manufacture such as a computer program product or computer readable media. The computer program product may be a computer storage media readable by a computer system and encoding a computer program of instructions for executing a computer process. The computer program product may also be a propagated signal on a carrier readable by a computing system and encoding a computer program of instructions for executing a computer process.

Referring to a conceptual diagram illustrating management of data storage through distributed storage coordinating multiple data stores of different types is shown. Data that may be stored in a system according to embodiments may include data of any form such as textual data files video stream audio stream images and the like. The content may also include a pointer to data that is stored in another system.

As discussed above storage of data in a collaboration service may be inefficient and costly if all data is treated the same way and stored in single type storage facilities such as an SQL database. On the other hand being able to distribute the storage of collaboration data by storing the different types of the data in data stores with different attributes may be advantageous for low resource contention better scalability and better cost characteristics. In such a system the data may be categorized based on predefined criteria such as the data being structured or unstructured how the data is accessed whether redundancy checks are performed a backup frequency required for the stored data an expected storage life for the stored data and the like. Additional criteria include but are not limited to required security attributes for stored data frequency of updates and an encryption status of the stored data. For example structured data may be stored in an SQL server and unstructured data in less expensive from a system resource perspective storage through a resource manager of the provider s choice.

In a system according to one embodiment a redirection is built in the collaboration object model by querying the structured data storage for storage keys to the unstructured storage. Subsequently the storage key for unstructured storage is used to identify access and potentially update the corresponding unstructured data e.g. stream . At the integration level embodiments provide the ability for any remote unstructured data blob store to participate in externalizing blob storage by implementing a set of interfaces. As a result it may be possible to better stream content out of a blob store in cases where the required capabilities may not be supported by a structured data store e.g. an SQL Server . In addition a capability to garbage collect orphaned data streams in the remote blob store may be built in by differentiating orphans from those actively supporting live content in the structured data server.

When new data arrives at the collaboration server for storage the storage provider interface is called out to determine whether the data can be stored in an external repository before the data is committed to structured data storage. The interface returns a blob identifier if the data is not structured and can be stored in a remote data store without the overhead of structured data storage. Instead of the blob stream the collaboration server may store this blob identifier in the structured database. When a file that includes the blob needs to be accessed the blob manager may fetch the blob identifier from the structured database and invoke a binary retrieval method on the provider interface. That way the unstructured data portion of the stored file can be stored at unstructured data storage without the overhead of the structured data storage and accessed in a transparent manner to the user.

The storage provider may hand the collaboration server back a unique identifier for the data which was just stored through the storage provider interface . This identifier may come from the external storage device directly. If the device does not create its own identifiers the provider may generate a GUID to hand to both the device and collaboration server.

Following the example interface above an example method on the ISPExtemalStorageProvider to add files to the repository is StoreBinary 

When a user wants to access a file from the storage the collaboration server may use the example RetrieveBinary below on ISPExternalStorageProvider 

In a system according to embodiments data may include one or both of structured data and unstructured data blob . Upon arrival of the data at the storage management application of the collaboration service typically residing on a collaboration server a determination may be made whether the unstructured portion of the data is to be stored in external storage such as data store . External storage may be used for less overhead requiring data that may not need to be processed by a structured data server such as an SQL server. Such storage facilities may be managed by an external storage provider service not shown . Furthermore a garbage collection module or application may be employed to optimize storage and retrieval of unstructured data based on a selected deletion management scheme.

Data store may be used to store structured portion of the data and be directly managed by the collaboration server. Embodiments are not limited to storing data based on whether the data is structured or not. According to some embodiments the storage facility for the collaboration data may be selected based on categorization of the received data. The categorization may be based on any one of the criteria listed above or additional criteria. For example data requiring frequent updates and or increased security measures may be stored in an internal data store e.g. data store while data that does not require frequent updates or requires relatively lesser security measures may be stored in an external data store. When a portion of the data from the same file or document is stored in an external data store managed by an external storage provider the identifiers discussed above may be used to indicate where the data is stored in the internal database such that the whole file or document can be retrieved when a request for access is received.

Components of a distributed storage management system in a collaboration environment may be executed over a distributed network in individual servers in a client device and the like. Furthermore the components described herein are for illustration purposes only and do not constitute a limitation on the embodiments. A distributed storage management system in a collaboration environment may be implemented using fewer or additional components in various orders. Individual components may be separate applications or part of a single application. Moreover the system or its components may include individually or collectively a user interface such as a web service a Graphical User Interface GUI and the like.

Data that can be stored in an external data store e.g. data store due to the category of the data such as the data being unstructured the data having a low frequency of updates or the data being encrypted. In that case the collaboration servers may communicate with the storage provider server providing the data and receiving a token identifier such that a location of the externally stored data can be saved in the local structured data store for subsequent retrieval.

Deletions of data in a system according to embodiments may be handled employing a variety of options such as lazy garbage collection never deleting data from the external data store or notification of the storage provider when a portion is deleted. The latter may be quite complicated since new notions of events which enumerate all the objects which they act upon would have to be created. Never deleting from the blob store is similar to a degenerate garbage collection. Garbage collection is a method of memory data store management. By making manual memory deallocation unnecessary garbage collection frees the system from having to worry about releasing objects and or stored data that are no longer needed.

A system according to one embodiment may support a lazy garbage collection scheme for orphaned files. Once the collaboration servers no longer contain any reference to a file including active documents old versions recycle bin documents it can then be removed from the external data store. A long running timer job may be implemented by the storage provider server for garbage collection. Garbage collection for orphan blobs in the external storage may be performed in three steps enumerate all blobs in the external store enumerate all blob references in the collaboration server s and remove all blobs in the external store for which there is no corresponding blob reference in the collaboration server s .

A distributed storage service according to embodiments may be implemented with additional or fewer components and processes than those described above in conjunction with the example system. A collaboration service may include any number of servers and data stores. Such a service may utilize any number and type of external storage providers and external stores. Furthermore additional methods may be employed to optimize the system s operation instead of or in addition to the example garbage collection method described for managing deletion of externally stored data.

Such a system may comprise any topology of servers clients Internet service providers and communication media. Also the system may have a static or dynamic topology where the roles of servers and clients within the system s hierarchy and their interrelations may be defined statically by an administrator or dynamically based on availability of devices load balancing and the like. The term client may refer to a client application or a client device. While a networked system implementing distributed storage for collaboration servers repositories may involve many more components relevant ones are discussed in conjunction with this figure.

A collaboration service according to embodiments may be hosted by one or more server such as collaboration server . Users may access the collaboration service from client devices through network s and upload or download data which may include structured or unstructured data and data with differing attributes such as those described above as the criteria for categorization of the collaboration data.

Collaboration server may store and retrieve data through internal storage means such as data stores managed by database server structured data store and file server . For data that can be stored externally depending on their category collaboration server may communicate with storage provider server which may store the data in data store file server or other storage means. In addition to determining a category of the collaboration data storing a portion in external storage and saving an identifier for the location of externally stored data in the internal data stores collaboration server may also manage a quota and object level administration for the distributed storage.

Network s may include a secure network such as an enterprise network an unsecure network such as a wireless open network or the Internet. Network s provide conmiunication between the nodes described herein. By way of example and not limitation network s may include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

Many other configurations of computing devices applications data sources data distribution systems may be employed to implement distributed data storage for collaboration servers based on data categories. Furthermore the networked environments discussed in are for illustration purposes only. Embodiments are not limited to the example applications modules or processes.

Collaboration service is a hosted service providing participating users to access files and documents in a collaborative manner. The service may be implemented and managed by one or more servers. Storage management application or module is an integral part of collaboration service for managing the storage of received data in internal and external stores such that users can access read modify delete the stored data. Storage management application may store some of the data in external data stores through a storage provider as discussed above. To optimize external storage operations a garbage collection module may be used to manage deletions of data across the service including internal and external data stores . Moreover APIs may be employed to interact with storage providers and users for determining categories of data storing the data in internal or external data stores and retrieving stored data upon request. This basic configuration is illustrated in by those components within dashed line .

The computing device may have additional features or functionality. For example the computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well known in the art and need not be discussed at length here.

The computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a wireless network in a distributed computing environment for example an intranet or the Internet. Other computing devices may include database servers file servers provider servers and the like. Communication connection is one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.

The claimed subject matter also includes methods of operation. These methods can be implemented in any number of ways including the structures described in this document. One such way is by machine operations of devices of the type described in this document.

Another optional way is for one or more of the individual operations of the methods to be performed in conjunction with one or more human operators performing some. These human operators need not be collocated with each other but each can be only with a machine that performs a portion of the program.

Process begins with operation where a save request is received by a front end web application. Processing advances from operation to optional operation where the application middle tier logic may provide business logic validation including antivirus checks property promotion rights management and other pre processing tasks. Processing continues to decision operation from optional operation .

At decision operation a determination is made whether the data to be stored is blob that can be stored in an external data store. According to some embodiments all of part of the data may be stored externally depending on the determined category. If no portion of the data is to be stored externally processing moves to operation where all of the data is stored in an internal data store.

If at least a portion of the data to be stored is blob processing advances from decision operation to operation . At operation the request is passed by the external storage provider interface to an external storage provider. Processing moves from operation to operation .

At operation a blob ID is received from the external blob storage provider by the external blob storage provider interface and passed on to a storage access stack of the system. Processing continues from operation to operation .

At operation the blob is sent to the external blob storage provider and a unique ID for the blob file is populated by the system associating the blob and its storage location with the unique identifier for subsequent retrieval. Processing continues to operation from operation .

At operation the metadata associated with the blob and the unique blob ID are stored in an internal data store e.g. an SQL database for reference by the system. After operation processing moves to a calling process for further actions.

The operations included in process are for illustration purposes. Providing distributed data storage for collaboration servers may be implemented by similar processes with fewer or additional steps as well as in different order of operations using the principles described herein.

The above specification examples and data provide a complete description of the manufacture and use of the composition of the embodiments. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims and embodiments.

