---

title: Techniques for recovery of application level objects
abstract: Techniques for recovery of application level objects are disclosed. In one particular exemplary embodiment, the techniques may be realized as a method for restoration of one or more application level objects. The method may comprise obtaining application metadata of an application containing objects to be restored, storing one or more data files containing application data, utilizing the application metadata to provide a user interface for the restoration of one or more application objects, accepting input from a user via the user interface specifying one or more application objects to restore, and restoring the one or more specified application objects.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08266112&OS=08266112&RS=08266112
owner: Symantec Corporation
number: 08266112
owner_city: Mountain View
owner_country: US
publication_date: 20071219
---
The present disclosure relates generally to recovery of data and more particularly to techniques for recovery of application level objects.

When data is lost users are often forced to make choices about which content to restore. Many data backup strategies now include the ability to provide point in time recovery. This may enable users to restore a system to an earlier specified point in time in order to recover data prior to its deletion. However such backup strategies require the restoration of the entire system. Restoration of an entire system may require significant storage space take significant time and be costly. A point in time backup strategy or other traditional backup strategies are not practical or efficient when the only data desired for restoration is a small subset of the entire backup. Furthermore application users who lose application data face another challenge. Frequently application data may be stored in underlying file or database systems and backups are performed at this level. Even if users are capable of restoring selected data objects from a backup the underlying data may be stored in a format that may be meaningless to application users. Thus it may be difficult to determine which portion of data to restore. Additionally restoration of a subset of the underlying data in order to restore one or more application objects may not ensure compatibility with a current application. An application may make changes in formats file dependencies or other data structures utilized in its data storage that may prohibit the restoration of one or more application objects by copying underlying files or data. Such updates or changes in applications may require a full point in time restoration in order to recover one or more lost application objects.

In view of the foregoing it may be understood that there are significant problems and shortcomings associated with current application data recovery technologies.

Techniques for recovery of application level objects are disclosed. In one particular exemplary embodiment the techniques may be realized as a method for restoration of one or more application level objects. The method may comprise obtaining application metadata of an application containing objects to be restored storing one or more data files containing application data utilizing the application metadata to provide a user interface for the restoration of one or more application objects accepting input from a user via the user interface specifying one or more application objects to restore and restoring the one or more specified application objects.

In another particular exemplary embodiment the techniques may be realized as an article of manufacture for restoration of one or more application level objects. The article of manufacture may comprise at least one processor readable carrier and instructions carried on the at least one carrier wherein the instructions are configured to be readable from the at least one carrier by at least one processor and thereby cause the at least one processor to operate so as to obtain application metadata of an application containing objects to be restored store one or more data files containing application data utilize the application metadata to provide a user interface for the restoration of one or more application objects accept input from a user via the user interface specifying one or more application objects to restore and restore the one or more specified application objects.

In yet another particular exemplary embodiment the techniques may be realized as a system for restoration of one or more application level objects. The system may comprise one or more processors communicatively coupled to a server wherein the server is configured to obtain application metadata of an application containing objects to be restored store one or more data files containing application data utilize the application metadata to provide a user interface for the restoration of one or more application objects accept input from a user via the user interface specifying one or more application objects to restore and restore the one or more specified application objects.

The present disclosure will now be described in more detail with reference to exemplary embodiments thereof as shown in the accompanying drawings. While the present disclosure is described below with reference to exemplary embodiments it should be understood that the present disclosure is not limited thereto. Those of ordinary skill in the art having access to the teachings herein will recognize additional implementations modifications and embodiments as well as other fields of use which are within the scope of the present disclosure as described herein and with respect to which the present disclosure may be of significant utility.

Referring to there is shown a system for the recovery of application objects in accordance with an embodiment of the present disclosure. Application server may be a server hosting one or more applications. Storage may be storage that may be utilized by application server to store system data application data or other data. Recovery manager may be a separate server a process on the application server or another device or process which may facilitate backup and or recovery of application objects. Storage may be storage utilized by recovery manager and may enable the access and or storage of backup data and metadata file .

Application server may be a server a laptop or other computer capable of supporting one or more applications. Applications may include for example Microsoft Sharepoint KnowledgeTree Documentum other document management applications file sharing applications blogs collaboration tools workgroup applications portal applications and other applications enabling the creation of data objects. Application server may enable a user to create one or more data objects such as for example a document a list an image file an email a posting a web page xml data a sound file a video file or other data objects. Application server may utilize platforms or storage mechanisms such as databases or file systems which may utilize storage .

Storage may be local remote or a combination thereof to application server . Storage may utilize a redundant array of inexpensive disks RAID a redundant array of inexpensive nodes RAIN tape disk a storage area network SAN or other computer accessible storage. Storage may contain system data and application data .

System data may contain metadata about one or more applications hosted by application server . System data may include one or more structures or resources for determining metadata and or application interfaces such as for example one or more file directories system tables universal modeling language diagrams data definition language files schema data application programming interfaces interface definitions and web service description language WSDL data.

Application data may include data written by one or more applications hosted by application server . Application data may contain one or more user created application objects such as for example a document a list an image file an email a posting a web page xml data a sound file and a video file. Application data may be stored in one or more formats or data structures. Data structures may be determined by an underlying platform or system supporting an application. Data structures may not be representative of the application object. Data structures may make it difficult to determine the location content and attributes of an application object. For example a document management system may utilize a database to store one or more documents lists image files emails postings web pages xml data sound files video files blog entries or other application objects. The database may store the application object in tables in character large objects CLOBs binary large objects BLOBs in hierarchical files in flat files object oriented structures log files and in other formats. Applications may use other platforms such as portals or web application servers which may utilize one or more tools and or data structures for storage.

Recovery manager may be a separate device such as a server from application server . In one or more embodiments recovery manager may be a process and may run on application server or on one or more additional servers or devices. Recovery manager may discover metadata for one or more applications hosted by application server . Metadata may enable recovery manager to determine the location content and one or more attributes of an application object within a data file. Metadata may enable recovery manager to determine location content and one or more attributes of an application object within a backup or a copy of a data file such as backup data . Metadata may include one or more portions of table structures table ids object ids file names file structures indexes class diagrams interface requirements and application programming interface requirements. Metadata may enable recovery manager to provide information to a user interface such as a graphical user interface for navigation of backed up or stored data presentation of backed up or stored data to a user and restoration of backed up or stored data. Metadata may enable a user interface to present backed up data in a format or layout familiar to users of an application. Metadata may enable a user interface to present one or more attributes of data objects which may enable an application user to understand the content date creator user type or other aspect of the data. For example an application may store data in a relational database an object oriented database a hierarchical database a flat file a compressed file an encrypted file in a proprietary or application specific format or in a format which may not be easily comprehensible to an end user.

An end user who accidentally deletes a calendar a blog posting a document or another application specific object may only know the name of the application object and an approximate date range in which the application object existed. Knowing only an approximate date range and a document name for example it would be very difficult to tell what data to restore if the application stores its data in one or more tables of a relational database. An application may for example store a document in a character large object binary CLOG file which may be associated with a database table or stored within a database table. Finding this document may traditionally require a system administrator to restore an entire database to a point in time known to be prior to a document s deletion. After the restoration of the full database an administrator may have to start a copy of the application to search through restored data to copy the document. Such a restoration may require significant space time and effort. It may require a separate server significant disk space and many hours.

Metadata may enable a user or an administrator to identify an application object in backed up or stored data. Recovery manager may then restore the one or more objects desired. Recovery manager may also perform a full restoration to a point in time and may enable an administrator to know for certain that the correct version of the one or more data objects desired exists at that point in time. Recovery manager may also use application metadata to enable the granular restoration of application data such as the restoration of one or more application objects.

Recovery manager may also utilize metadata to gain information about an application programming interface API of an application that may be useful for the location of and or restoration of one or more application data objects. For example recovery manager may gather metadata about one or more application programming interfaces stored procedures interface tables or web services. Recovery manager may utilize service brokers object request brokers universal description discovery and integration UDDI nodes or other resources to determine one or more APIs or other interfaces for extracting application objects locating application objects and or restoring application objects. In one or more embodiments recovery manager may be programmed to use one or more APIs or interfaces for extracting application objects locating application objects and or restoring application objects and may not have to gather metadata about interfaces or APIs.

Recovery manager may utilize one or more native methods for the restoration of data including an application programming interface a stored procedure an interface table and or a web service. The utilization of methods native to an application for restoration of one or more application objects may enable recovery manager to ensure compatibility of restored data with an application. For example a user may backup one or more application objects and the objects may be stored in a format of a lower level platform of the application such as a database. A restoration of the data by simply reinserting rows of data into the current database may not ensure compatibility with the application. The application may have been upgraded or modified subsequent to the backup and an insertion of data at the table level may not enable a user of an application utilizing the database to access the desired restored application object. Additionally the application may have other dependencies in the data which can not be easily addressed through a lower level restoration. Recovery manager may utilize application native methods such as APIs stored procedures web services or other interfaces to restore the one or more desired application objects. The use of native application methods may enable recovery manager to ensure greater recovery speed data integrity application integrity and or system performance. In some embodiments native application methods may be application proprietary methods open interfaces industry standards or published standards.

In one or more embodiments recovery manager may gather metadata about application objects and APIs or interfaces prior to backup or storage of application data. In one or more embodiments recovery manager may gather metadata about application objects and APIs or interfaces after backup or storage of data but prior to restoration of the data. For example recovery manager may gather metadata from an existing system hosting an application. Recovery manager may then apply that metadata information about APIs application tables schema table ids indexes and other application structural information to recover the data from one or more log files or backups associated with a second system hosting the application.

In one or more embodiments recovery manager may gather metadata prior to backup and may store metadata in one or more backup files. In some embodiments recovery manager may store metadata prior to backup and may store the metadata in a file separate from the backup files. Metadata may be stored in one or more formats including text XML in a database importable format or in other formats accessible by recovery manager .

Referring to there is shown a method for storing data to enable the recovery of application objects in accordance with an embodiment of the present disclosure. At block the method for storing data to enable the recovery of application objects may begin.

At block a user of the method or a system utilizing the method may specify one or more applications for which objects will be recovered. In some embodiments a user may be prompted to specify or choose an application. In some embodiments the method may determine an application from other information provided by a user. The method may support only one application type or may be automated to determine the application type and may skip this portion of the method .

At block the method may gather application information. This may include application location such as host name network address storage location application down times backup schedules versions and other information.

At block a user may specify object types to be recovered. This may be specified by desired object types date ranges file ownership data location or other information which may enable recovery manager to determine which data needs to be backed up.

At block the method may capture application metadata. This may include metadata which may be used to restore application data or application objects. Application metadata may also include information about application APIs interfaces or other information which may be used during recovery for extracting application objects locating application objects and or restoring application objects. In some embodiments metadata may be gathered prior to backup. Metadata may also be gathered during or after backup such as when restoration of an application object is requested. The gathering of metadata may include all metadata for known applications on one or more hosts metadata for a particular application on a host metadata tailored to support restoration of requested application object types and or metadata created or edited within a certain date range.

At block application data may be backed up or stored. This may be a database backup a file system backup or another method of ensuring data recovery.

At block application data and metadata may be stored. Application data and metadata may be stored in one or more files and may be stored separately from or combined with each other. In some embodiments application data may be stored and metadata may be gathered or discovered prior to restoration of application data.

Referring to there is shown a method for the recovery of application objects in accordance with an embodiment of the present disclosure. At block the method for the recovery of application objects may begin.

At block a recovery or restoration process may load application metadata. In some embodiments it may load application metadata from one or more files. In some embodiments it may gather application metadata in response to a request to restore application data.

At block a recovery or restoration process may open a data file and or otherwise access stored application data. Data files may include log files text files compressed files archived files cached files or other stored or backed up application data formats. Data files may reside on one or more storage devices such as disk tape storage area networks or other computer accessible storage. Data may be stored local to or remote from a recovery or restoration process.

At block a recovery or restoration process may provide a user interface presenting application data available for restoration. The recovery or restoration process may present a high level application data navigation structure to a user. This may be done through a graphical user interface a voice response unit VRU a printout or other interfaces. The navigation structure may present a tree structure enabling a user to navigate a backed up file system a search interface a list or other interface facilitating user navigation. The interface may enable searching filtering printing and other actions.

At block the interface may accept input from one or more users. For example an interface may enable a user to double click choose from a menu drill down or otherwise specify navigation within the interface.

At block the user interface may present new information to one or more users based on input received from the one or more users. For example a display of a GUI may be refreshed to show a next level down of a backed up file system. The new information the user interface presents may reflect search results from a user query results from a file or object filter specified by a user results from a sort or additional navigational information provided in response to input received from a user. As an additional example a display may be refreshed to present additional object attributes specified by a user. A user interface may display a file or object name creator and creation date or other combination of attributes by default. In response to input from a user a display may be refreshed to show file types sizes editing dates directories extensions summaries key words file versions deletion dates permissions or other attributes.

At block the method may detect user input received and may determine whether additional navigation input has been received from a user. If so the method may continue at block . If additional navigation input has not been received the method may proceed to block .

At block the method may accept user input received specifying one or more portions of application data to recover. A user may specify this by typing in an application object name in a text field and pressing enter in response to a prompt. A user may also double click on one or more portions of desired application data select one or more portions via a menu or specify one or more portions via a voice response unit.

At block a recovery or restoration process of method may restore one or more portions of specified data. Data may be restored using native application procedures such as APIs stored procedures of an application web services or other interfaces. Native application procedures may enable application data to be recovered from a backup and restored to a current or production copy of an application. In some embodiments data may be restored using methods which are not native or not application specific such as file copies or database inserts of data to be restored.

At block a data file such as a database log may be closed and or unlocked. In some embodiments the backup or storage mechanism for the application data may not require this.

Referring to there is shown an user interface for the recovery of application objects in accordance with an embodiment of the present disclosure. The user interface for application object restoration may enable a user to navigate application objects available for restoration by providing a graphical user interface enabling a user to drill down into one or more application data structures a query capability and or one or more filters for limiting available restoration objects presented to a user. Additionally the user interface may utilize hyperlinks lists menus buttons and other graphical user interface controls and display elements. Display element may be a top level directory icon or folder. It may represent the top of a file structure by storage device drive or path. It may also represent the top of a user directory and or the resulting display categorization of a sort request or a search request. A user may click double click mouse over select or otherwise indicate the opening of display element . In some embodiments a display or navigation path may be presented fully or partially expanded or opened. Logically presented within or beneath display element may be display elements and . Display elements and may represent directories folders or other icons indicating to a user that the icon may be contain one or more logical sublevels. Display elements and may represent application data objects available for restoration. In one or more embodiments users of user interface may restore one or more directories or folders. Display elements may display file or object names object creators and object creation date or other combinations of attributes by default. In response to input from a user a display may be refreshed to show file types sizes editing dates directories extensions summaries key words file versions deletion dates permissions or other attributes. Display elements may utilize one or more icons or other GUI attributes to indicate file or application type or other information to a user. A user may specify desired objects to restore by selecting the objects with a mouse double clicking on an object utilizing a menu choice hitting a function key or providing other input. A user may select one or more display objects including files and or directories.

User interface may also contain one or more options such as restoration options . Restoration options may contain hyperlinks lists menus buttons and other control or display elements. Input may enable a user to type in desired application object types and may refresh user interface to display only those object types and or directories containing those object types. For example a user may utilize input to filter user interface to display only documents. Input may enable a user to enter additional object criteria such as a key word a file name a creator a directory a file date a file size a network address of a directory IP address of a directory or other file or directory attributes. Additionally restoration options may contain other inputs or controls which provide one or more users with data search display sort filter or restoration options. A user may for example specify a network name and directory structure as a restoration target. This may be network accessible to a restoration process associated with user interface and user interface may place the one or more restored application data objects there. A user may also use restoration options to specify a host database name application instance name domain name or other location information to specify a data store of an application to which one or more application data objects and or directories are to be restored. For example a user may specify a domain name and an instance name of a production application in order to restore selected application data objects to the production application. Additionally a user may specify other options for delivery of restored data including an email address an FTP address and directory a printer name for a print out a blog or resource description framework site summary RSS feed for posting or other electronic transmission addresses.

At this point it should be noted that recovery of application level objects in accordance with the present disclosure as described above typically involves the processing of input data and the generation of output data to some extent. This input data processing and output data generation may be implemented in hardware or software. For example specific electronic components may be employed in an application specific integrated circuit or similar or related circuitry for implementing the functions associated with recovery of application level objects in accordance with the present disclosure as described above. Alternatively one or more processors operating in accordance with stored instructions may implement the functions associated with recovery of application level objects in accordance with the present disclosure as described above. If such is the case it is within the scope of the present disclosure that such instructions may be stored on one or more processor readable carriers e.g. a magnetic disk or other storage medium or transmitted to one or more processors via one or more signals embodied in one or more carrier waves.

The present disclosure is not to be limited in scope by the specific embodiments described herein. Indeed other various embodiments of and modifications to the present disclosure in addition to those described herein will be apparent to those of ordinary skill in the art from the foregoing description and accompanying drawings. Thus such other embodiments and modifications are intended to fall within the scope of the present disclosure. Further although the present disclosure has been described herein in the context of a particular implementation in a particular environment for a particular purpose those of ordinary skill in the art will recognize that its usefulness is not limited thereto and that the present disclosure may be beneficially implemented in any number of environments for any number of purposes. Accordingly the claims set forth below should be construed in view of the full breadth and spirit of the present disclosure as described herein.

