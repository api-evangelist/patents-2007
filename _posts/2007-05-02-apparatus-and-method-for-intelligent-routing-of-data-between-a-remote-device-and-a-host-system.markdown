---

title: Apparatus and method for intelligent routing of data between a remote device and a host system
abstract: An apparatus and method is provided for transparent communication between a remote or mobile device and a fixed communication host network. The apparatus and method may include a remote network controller that logically resides between the host network and the existing infrastructure(s) that are used to provide communications network contact with one or more remote devices. The remote network controller is connected to the host communication network as a protocol-appropriate communications controller so that remote devices are indistinguishable to the host network from the locally-attached devices. Each remote device may be provided with an asynchronous serial data interface to communicate with a mobile data controller. The mobile data controller, in combination with the remote network controller, provides end-to-end data communication such that incompatible protocols are transparent to the remote device and host communication network. A router may be provided which selects a communications network in accordance with user configured parameters. The router communicates over a plurality of incompatible networks and is capable of using a variety of different protocols. Switching between the plurality of incompatible networks is transparent to the remote device and host communication network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07602782&OS=07602782&RS=07602782
owner: Padcom Holdings, Inc.
number: 07602782
owner_city: Bethlehem
owner_country: US
publication_date: 20070502
---
The present application is a Continuation of application Ser. No. 11 170 077 filed Jun. 30 2005 which is a Continuation of application Ser. No. 10 898 283 filed Jul. 26 2004 which is a Continuation of application Ser. No. 10 164 581 filed Jun. 10 2002 now U.S. Pat. No. 6 826 405 which is a Continuation of application Ser. No. 08 932 532 filed Sep. 17 1997 now U.S. Pat. No. 6 418 324 the contents of which are expressly incorporated by reference herein in their entireties.

The present invention relates to the transportation of data through dissimilar communications media. More particularly the present invention relates to an apparatus and method for transporting data between a remote mobile or fixed terminal device and a host system over multiple dissimilar communications media. The communications media over which the data is transported include wireless data links wired data links or a combination of wireless and wired data links which are selected based upon a set of preference metrics.

The ability to transport data between mobile and or fixed terminal devices and host computer systems have been generally available for many years. Networks designed to transport this data currently exist in a wide variety of wireless and wired network architectures. Both apparatus and method exists for transporting data through multiple similar media types as well as the automatic selection of alternate communication paths based upon a plurality of preference metrics.

Often when multiple networks are available from a common location such as a vehicle great benefit may be derived by allowing uniform communications through all available networks. Certain networks may perform better for bulk data transfers where another may perform interactive messaging in an optimal fashion. One network may be preferable because of its low cost but an alternate more expensive network may be acceptable as a backup if the low cost network is unavailable.

Other examples include U.S. Pat. No. 5 412 375 to WOOD which discloses a system for selecting one of a plurality of interfaces to a single wireless communications system in accordance with the capabilities of a subscriber unit and the capabilities of a base unit. A list of air interface capabilities of the subscriber unit and the base unit are compared by a controller to determine a compatible interface. As disclosed in WOOD the plurality of air interfaces include Analog Mobile Phone System AMPS Time Division Multiple Access TDMA and Code Division Multiple Access CDMA . While the WOOD system does select from one of a plurality of interfaces which may be applicable for data communication the routing decision is based on the capabilities of the endpoints rather than the preference metrics of the transporting networks. The endpoint devices in this case must be aware of the peculiarities of the wireless environment.

U.S. Pat. No. 5 420 574 to ERICKSON et al. discloses a subscriber unit attached to a trunked mobile radio having a data input. The mobile radio communicates both voice and data message formats over a wireless network to a base station via channels that are allocated by a trunked data controller which is connected to a host network. Channel states and communication parameters are set in accordance with the type of information e.g. voice or data that is being transmitted or received. While the ERICKSON et al. system dynamically switches between incompatible message formats without the intervention of the endpoint devices only a single data path is provided. In addition the incompatibility of the two alternate paths arises from a difference in message formats rather than the use of independent incompatible networks.

Further the transportation of data through alternate incompatible communications media is a problem that does not have a uniform solution in the art. This problem is exacerbated in wireless communication networks where protocols timing and other incompatibilities render an otherwise acceptable level of service inadequate. Attempts to provide data links through incompatible networks have suffered from the same obstacles that hindered data communications prior to open standards becoming widely accepted i.e. proprietary protocols visible to the endpoint terminal devices make the devices inflexible and expensive and the interoperation of similar devices with incompatible networking components is difficult and complex.

Networks may be interconnected by routers which operate at the network level and convey messages between compatible networks. Routers make logical decisions about the pathway through which data is to be directed in the networks based upon a variety of preference metrics. A router is generally implemented as an autonomous device with multiple connections to the networks through which data is to be routed. Routers operate at the network layer and can recognize and manage protocols and multiple connections to networks. Routers usually operate in accordance with the address provided by the particular protocol of the network and normally provide routing between and through networks utilizing the same network protocol and can route between networks that use different data link layers such as Ethernet Token Ring Serial PPP etc. Another type of router includes two routers loosely coupled through a protocol neutral data link where the linked routers are considered as a single virtual router.

Dissimilar networks may be connected by gateways which are devices that interconnect two or more dissimilar networks. A gateway differs from a router in that the endpoint terminal devices may implement a dissimilar or incompatible protocols. Gateways often perform specific protocol conversions at the layers above the network layer to move data from one type of network to another. In this regard the Open Systems Interconnection OSI model includes seven layers to provide communications between heterogeneous i.e. incompatible systems. The layers from lowest to highest are the physical layer the data link layer the network layer the transport layer the session layer the presentation layer and the application layer. Each of the layers performs a specific task in transporting data between two or more entities. Such a layered structure is shown in by Martin R. Arick Wiley QED pp. 18 19.

U.S. patent application Ser. No. 08 456 860 to DOVIAK et al. for example discloses a system in which a distant mobile or fixed terminal device transports data through a plurality of wireless network to an endpoint which may or may not implement the same network protocol as the distant device. However while the DOVIAK et al. system is capable transmitting data over a plurality of dissimilar wireless communications networks the system does not automatically transmit data through differing ones of a plurality of dissimilar networks in accordance with preference metrics to reach the data link endpoints. Thus the system does not automatically provide redundant or alternate pathways through which data may be delivered.

U.S. Pat. No. 5 537 220 to EZUMI et al. discloses a portable facsimile apparatus provided with a capability to communicate over a plurality of communications lines. As disclosed in EZUMI et al. the facsimile machine may communicate over telephone lines or a mobile communication unit. A NCU controller is provided within the facsimile machine to discriminate whether the facsimile machine is connected to the telephone line or to the mobile communication unit. The NCU functions to adjust the data rate and transmitting and receiving signal levels based on which communication system it is communicating. Although this concept may be extended to a generic protocol neutral data networking environment the EZUMI et al. system provides for the selection of only one single path to the exclusion of other possible viable path based solely on which link is plugged into the NCU. Further the EZUMI et al. system does not switch communication paths within the boundaries of a communication session thereby further limiting its usefulness in a connectionless packet data environment such as a TCP IP network.

U.S. Pat. No. 5 602 843 to GRAY discloses a PBX based integrated telecommunications system having a wired subsystem connected to wired terminals and a wireless system for connecting to mobile terminals. A controller is provided which manages base stations and communicates to wireless handsets. When communicating to a handset the controller determines which base station is in communication with the handset and directs the base station to send packet based information to that handset. A separate PBX controller is provided to communicate with the wired terminals. The PBX controller includes a proximity sensor to detect wireless handsets such that when a handset is detected in proximity to a wired terminal messages are forwarded to the wired terminal rather than the wireless handset. While the GRAY system dynamically selects the route to a terminal device based upon a preference metric wireless proximity the alternate routing technique does not address transporting data between the same two endpoints. In addition GRAY provides no means to provide alternate path routing for a terminal device through either the wireless or wired handsets.

U.S. Pat. No. 5 452 471 to LEOPOLD et al. discloses a communication system having a primary and one or more subordinate communication systems. In the illustrated embodiment the primary communication system is a satellite base communication system having the widest area of coverage. Each of the satellites within the system defines a cell area which moves as the orbiting satellites move. The secondary and tertiary communications systems are disclosed as terrestrial based stationary systems having base stations flied near the surface of the earth e.g. fixed to a building where each subordinate system has an increasingly smaller region of coverage. The secondary and tertiary systems include a controller located at a monitoring location within each region. Each of the communications systems includes a link to a central office to enable communications over the public switched telephone network. The LEOPOLD et al. communication systems and mobile subscriber units operate within one frequency spectrum however the primary and secondary communication systems operate together by using orthogonal channels to prevent interference. In addition when communicating with secondary systems the mobile subscriber unit transmits at a relatively low power such that the primary system will not receive the transmission. The mobile subscriber unit is programmed to utilize the communication system having the smallest area of coverage such that if the subscriber unit has three communications systems available the subscriber unit will utilize the tertiary communications system i.e. the system having the smallest area of coverage based on a designed assumption that the more subordinate the communication system is the higher the capacity of the system. While the system of LEOPOLD et al. dynamically selects a route based upon a set of preference metrics such that the terminal endpoints are unaware of the routing selection a common data link protocol is required throughout all possible associated networks. In addition the wireless frequencies employed must be derived from a continuous compatible set of frequencies which prevents the device from selecting among inherently incompatible networks.

Despite the teachings of these prior attempts users of mobile or fixed wireless data communications are provided with systems of limited capacity and flexibility when routing data through more than one network. In addition such systems require special hardware and or software developed for and compatible with the networks which may require additional training of support personnel and end users. Further users of wireless mobile data communication services are provided with only a limited ability to control costs associated with sending and receiving data to and from remote devices and are limited in their hardware and software design implementations. In previous teachings the candidate networks must be compatible with one another at either the network or the data link level. Thus routing data through inherently incompatible networks such as Cellular Digital Packet Data CDPD and Ericsson EDACS is not possible as these are incompatible at both the data link and network levels. Moreover known systems do not allow a customer to use existing RF wireless infrastructures including existing hardware and software with only minor modifications needed to transport data from a mobile device to a host computer network. In addition past attempts do not permit wireless data communications in a manner that is transparent to the remote device. Further prior systems do not provide the flexibility to users such that a plurality of different remote devices may communicate with the wired host network irrespective of the radio infrastructure and transmission protocol employed. Such features without the above noted drawbacks would be highly desirable to provide flexibility and ease of use and to give users of portable data devices greater control over their hardware and software design.

In view of the foregoing the present invention through one or more of its various aspects embodiments and or specific features or sub components thereof is thus presented to bring about one or more objects and advantages such as those specifically noted below.

A general object of the present invention is to provide an apparatus and method for transporting data from a remote wireless device to a wired network. Another object of the invention is to provide a remote device with an interface to present data to the wired network through RF wireless communication.

More particularly an object of the present invention is to provide an apparatus that resides between an existing wired communications network and an existing radio frequency network to provide a wireless RF connection between a remote device and the wired network.

Another object of the present invention is to provide an apparatus and method for a completely transparent data path between a remotely located device and an existing wired network using a wireless RF communications link without either the remote device or the wired network being aware that a wireless RF communications link is being employed.

Still another object of the present invention is to provide an apparatus and method for a completely transparent data path between a remotely located device and an existing wired network through a plurality of different wireless RF communications link protocols and a plurality of different wired networks protocols selected by the user.

Still another object of the present invention is to provide an apparatus which functions as a protocol appropriate communications controller and makes remote devices indistinguishable from locally attached devices to a wired network.

According to one aspect of the present invention an apparatus for transporting data between a remote device and a host communication network using a wireless communications link is provided. The apparatus comprises a mobile data controller connected to the remote device and the wireless communications link. The mobile data controller comprises a remote data conversion means for converting data to be transported between the remote device and the host communication network. The remote data conversion means converts the transported data between a remote device transmission format utilized by the remote device and a wireless link transmission format utilized by the wireless communications link.

The apparatus also comprises a network interface means for interfacing the host communication network with the wireless communications link. The network interface means comprises a wireless link conversion means for converting the transported data between the wireless link transmission format and a network interface format utilized by the network interface means and a host network conversion means for converting the transported data between the network interface format and a host network format utilized by the host communication network.

The apparatus further comprises a means for transporting the transported data over the wireless communication in accordance with the wireless link transmission format the wireless link transmission format and the host network format being incompatible. According to another aspect of the present invention the network interface means comprises a remote network controller that logically resides on the host communication network and performs the functions of a network communication controller.

According to another aspect of the present invention the apparatus for transporting data further comprises a plurality of network interface means connected by a local network and a synchronization means for synchronizing the transfer of information between the network interface means the information comprising routing tables and health and status information.

According to the present invention a method of transporting data from a mobile device to a host network is provided. The remote device and a wireless communications link are connected by a mobile data controller and the host communication network and the wireless communications link being interfaced by network interface device.

The method includes the steps of converting at the mobile data controller data to be transported between the remote device and the host communication network the converting step converting the transported data between a remote device transmission format utilized by the remote device and a wireless link transmission format utilized by the wireless communications link transporting the transported data over the wireless communications link in accordance with the wireless link transmission format receiving at the network interface device the transport data from the wireless communications link converting at the network interface device the transported data between the wireless link transmission format and a network interface format utilized by the network interface device the wireless link transmission format and the host network format being incompatible further converting at the network interface device the transported data between the network interface format and a host network format utilized by the host communication network and forwarding the transported data to the host communication network in accordance with the host network format.

In a preferred embodiment the transportation step further comprises determining wireless communications link selection criteria dynamically selecting a wireless communications link from a plurality of incompatible wireless communications links in accordance with the selection criteria and switching to the selected wireless communications link. Afterwards the following steps are continuously repeated dynamically selecting a next wireless communications link from the plurality of incompatible networks in accordance with the selection criteria determining whether to switch wireless communications links and switching to the next wireless communications link in response to a result of the determination.

According to another aspect of the present invention an apparatus for transporting data over a plurality of incompatible networks between a first device and a second device is provided. The apparatus comprises a system for determining network selection criteria. In addition the apparatus comprises a selection system for dynamically selecting a network from the plurality of incompatible networks in accordance with the network selection criteria and a switching system for switching to the selected network to use for data transport.

According to another aspect of the present invention the apparatus transports data via a plurality of protocols over a plurality of incompatible networks in which the transportation of data is transparent to the first and second devices and to an end user. The protocols may include but are not limited to Internet Protocol IP and transparent protocol.

According to another aspect of the present invention the apparatus for transporting data further comprises a system interfacing protocolized data into a plurality of incompatible networks using different protocols.

According to another aspect of the present invention the switching system switches networks during the time between the transport of consecutive data packets.

According to another aspect of the present invention the system for determining network selection criteria uses two classes of parameters to determine the next network to use for transport of data.

According to another aspect of the present invention the selection system further determines a next network to switch to from the plurality of incompatible networks in accordance with the network selection criteria when the selected network becomes unavailable. In addition a monitoring system is provided which monitors the availability of the incompatible networks to determine whether the next network is available for data transport.

The above listed and other objects features and advantages of the present invention will be more fully set forth hereinafter.

Referring now to the accompanying drawings illustrates a general overview of a remote network controller and a mobile data controller in accordance with an aspect of the present invention. In a wired communication network is shown as a host network system having communications controllers and locally attached devices . The wired communication network may be for example a Token Ring network or an Ethernet Local Area Network LAN . The locally attached devices may include a personal computer a workstation a printer or network server and reside at a plurality of dispersed locations. According to the present invention a remote network controller may also be provided which logically resides on the wired communication network and acts as a protocol appropriate communications controller to send and receive data to and from the communications network and one or more remote or mobile devices . For purposes of illustration only one of the remote devices is shown in .

Remote devices communicate via a mobile data controller and a wireless radio frequency RF communications link created by the user s radio infrastructure to the remote network controller . The mobile data controller may convert asynchronous data from the remote device into an appropriate protocol format of the radio infrastructure . In accordance with an aspect of the present invention the remote devices although not physically connected to the wired communication network are logically connected to the wired communication network through the radio infrastructure and the remote network controller and are indistinguishable from locally attached devices . The remote devices may be for example a laptop computer personal digital assistant PDA a credit card reader or a global positioning system GPS receiver. The radio infrastructure may comprise a conventional point to point or trunking radio system.

The logical connection created by the remote network controller between the remote device and the wired communication network is transparent to the user of the remote device and to the wired communication network . In accordance with an aspect of the invention the remote network controller takes data transported by the radio infrastructure irrespective of the format protocol of the radio infrastructure and converts the data into a format protocol recognized by the wired network . Similarly the remote network controller of the present invention takes data from the wired network and converts the data into a format protocol recognized by the radio infrastructure . Accordingly the user of the remote device does not have to perform any additional steps to send and receive data to and from the wired communication network and the wired communication network does not have to perform any additional steps to send and receive data to and from the remote device . The user of the remote device interacts with the wired communication network in a similar manner as a user of the locally attached devices . Similarly the wired communication network interacts with the remote device in a similar manner as the wired communication network interacts with the locally attached devices .

Referring now to there is illustrated a block diagram of the basic components of the remote network controller of the present invention. Each component of the remote network controller will be generally described for introductory purposes and will later be described in greater detail below with reference to the accompanying drawings. The various components of the host data controller and the mobile data controller will also be discussed hereinafter with reference to respectively.

As shown in the remote network controller may comprise a service interface a mobile interface an interprocess communication manager a control process module and a console interface . The remote network controller may be implemented through a collection of software program modules and hardware components working cooperatively. The remote network controller itself may run on a standard platform such as a personal computer PC equipped with a commercially available processor or multi processor e.g. an Intel or Motorola based processor or multi processor and a commercially available operating system such as an MS DOS or UNIX based operating system. The remote network controller may also contain an Ethernet controller or suitable network controller card depending on the wired communication network . In addition the remote network controller may include random access memory and physical storage media including hard disk and tape storage devices.

The wired communications network is connected to the remote network controller by the service interface . The service interface handles all network connections. If several wired communications networks are present one or more service interfaces may be provided to handle wired network connectivity. The service interface connects to an interprocess communication manager . The interprocess communication manager manages all inter process message routing within the remote network controller . One or more mobile interfaces may also be provided to handle connectivity with the radio infrastructure s . Each mobile interface is also connected to the interprocess communication manager . The control process module of the remote network controller is provided to process management functions and data integrity. The control process module is connected to the interprocess communication manager and the console interface . The console interface allows for user configuration and reporting of data.

As further illustrated in the remote network controller may be connected to a host data controller . One or more host data controllers may be provided for connecting the remote network controller to specific radio infrastructures e.g. a Motorola trunked radio. The host data controller may be connected to the mobile interface of the remote network controller .

In the field the remote device is connected to the mobile data controller which in turn is connected to the radio infrastructure for transmitting and receiving data. The mobile data controller is responsible for connecting the remote device to the radio infrastructure and to provide protocol independent asynchronous serial data transfer to and from the remote device .

In order to provide transparent data transportation whereby the network protocols and the protocols of the radio infrastructure are transparent or invisible to the user inbound asynchronous data from the remote device is collected and transported to the wired communication network in packets over the radio infrastructure . The data is sent using the existing protocols of the radio infrastructure . The remote network controller accepts the data and encapsulates it into the appropriate protocol used by the wired communication network . The data is passed to the wired communication network in a similar fashion for passing data from any of the other locally attached devices . Similarly outbound data to the remote device from the wired communication network is removed from the network protocol by the remote network controller . The remote network controller then encapsulates the data into the appropriate protocol associated with the radio infrastructure and sends the data over the radio infrastructure to the mobile data controller . Upon receipt of the data the mobile data controller removes the data from the radio infrastructure protocol and asynchronously sends the data to the remote device .

In accordance with the present invention multiple wired networks with different protocols may be linked to multiple RF environments in any combination by incorporating the remote network controller and mobile data controller of the present invention.

At step the service interface forwards the data to the interprocess communication manager . The interprocess communication manager accepts the data at step and at step places the data in a queue for the appropriate destination mobile interface . The destination mobile interface may depend on the radio infrastructure employed by the user. The outbound data that is to be passed from the interprocess communications manager to the mobile interface may be encapsulated in an internal protocol of the remote network controller along with routing information to specify the remote device to which the data is to be sent. At step the interprocess communication manager notifies the mobile interface that the data to be sent to the remote device is queued for the mobile interface. The particular mobile interface that the data is queued for depends on the particular radio infrastructure employed to communicate with the destination remote device . At step the mobile interface requests that the queued data be sent from the interprocess communication manager . The mobile interface may request data when it is free to send the data to a destination remote device and not handling another process. At step the mobile interface accepts the queued data from the interprocess communication manager . Thereafter at step the mobile interface determines based on the queued data the destination node address of the remote device to which the data is to be sent. At step the mobile interface forwards the data to the appropriate host data controller so that it may be sent over the radio infrastructure at step . According to an aspect of the present invention the host data controller may receive the data remove it from the internal protocol and encapsulate the data into a packet determined by the protocol used by the radio infrastructure . The packet of data may be broadcasted over the radio infrastructure so as to enable the host data controller to communicate with multiple mobile data controllers simultaneously. The broadcasted data packet may include the identification of the specific mobile data controller to which the packet is to be delivered so that only uniquely identified mobile controller s may accept the packet.

Referring again to at step the mobile data controller receives the data from the remote radio infrastructure and decodes the data. The data packet once received by the mobile data controller is accepted and the data is removed from the packet. At step the mobile data controller validates the data and at step sends an acknowledgment or rejection message to the host data controller via the radio infrastructure . According to the present invention the remote network controller and the host data controller may be responsible for ensuring the integrity of the data transported over the radio infrastructure. As such an error detection retry mechanism may be employed to detect and correct data transmission errors. After the integrity of the data is verified the mobile data controller at step will forward the data to the remote device . The data may be asynchronously transferred to the remote device through a serial connection.

At step the host data controller forwards the data to the mobile interface . The mobile interface accepts the data from the host data controller at step . The mobile interface validates the address of the source of the data e.g. the particular mobile data controller or remote device at step . At step the mobile interface forwards the data to the interprocess communication manager which accepts the data at step . The mobile interface may also pass the routing information specifying the remote device from which the data originated. At step the interprocess communication manager places the data into a queue for the destination service interface . The particular destination service interface will depend upon which wired communication network the data is to be delivered. Included in the information which is passed to the service interface is the destination address i.e. the communication network to which the data is to be delivered . At step the service interface when available to handle data requests the data from the interprocess communication manager . The service interface accepts the data at step and converts the data into an appropriate form i.e. protocol usable by the wired communication network at step . As a result the data may be passed to the hardware device e.g. an Ethernet controller using the protocol required by the wired communication network . This configuration allows any existing network interface card to be used in conjunction with the remote network controller because the data is placed into the appropriate network protocol by the service interface before it is transmitted to the wired network. At step the service interface forwards the data to the wired communication network .

The validation process of the outbound data depicted in and inbound data depicted in does not depend on the type of wired communication network employed by the user. Through a single validation process performed by the host data controller and the mobile data controller see steps and in and steps and in the integrity of the data transmitted from the wired communication network to the remote device through the radio infrastructure is ensured. This validation process may include for example an error detection and retry mechanism to detect errors and to cause when necessary the retransmission of the data.

Referring now to there is illustrated a block diagram of the basic components of the mobile interface of the remote network controller of the present invention. As noted above the mobile interface is responsible for interfacing the remote network controller with the host data controller and the radio infrastructure . The mobile interface may be a software interface that records statistical information related to inbound and outbound data. The mobile interface may also be responsible for error detection and correction and establishing and managing the mobile data sessions with the remote devices . The number of mobile interfaces provided in the remote network controller depends on the number of different types of radio infrastructures employed by the user. Each type of radio infrastructure may have its own associated mobile interface .

As shown in the mobile interface may include an event handler and multithreading dispatcher a process initialization module a mobile session manager an inbound data event handler an outbound data event handler a process termination module and a host data controller interface module . The event handler and multithreading dispatcher may contain high level logic and be used to control the overall execution flow of the mobile interface . The process initialization module may be utilized to acquire resources and establish the operation environment for the mobile interface process. The process initialization module may also be provided to initialize the host data controller .

According to the present invention the mobile session manager may be provided to control the communications environment between the mobile data controller and the host data controller . The inbound data event handler responds to signals from the host data controller indicating that inbound data is available and preprocess session control information. The outbound data event handler is provided to respond to signals from the interprocess communication manager indicating that outbound data is available or that a session control function is required. The process termination module functions to release previously acquired resources and terminate the mobile interface process efficiently. The host data controller interface module handles low level interaction with the associated host data controller s .

The process flow of the event handler and multithreading dispatcher will now be described with reference to . At step the process begins when the remote network controller is powered up and initialized. At step the process initialization module is invoked described below with reference to . At step the event handler and multithreading dispatcher waits for an event e.g. receipt of inbound data to occur. While the event handler and multithreading dispatcher waits for an event to occur mobile interface may be placed in a sleep mode to conserve processor resources. At step once an event occurs the event handler and multithreading dispatcher determines if it is a recognized event. If the event handler and multithreading dispatcher determines it is not a recognized event at step processing returns to step . If however the event handler and multithreading dispatcher determines that the event is a recognized event at step then processing continues at step where the event handler and multithreading dispatcher determines if the data was received from the host data controller .

At step if the event handler and multithreading dispatcher determines the data was received from the host data controller the event handler and multithreading dispatcher invokes the inbound data event handler at step described below with reference to and processing continues at step . If at step the event handler and multithreading dispatcher determines that the data was not received from the host data controller then the event handler and multithreading dispatcher determines whether the data was received from the service interface at step .

If the event handler and multithreading dispatcher at step determines that the data was received from the service interface then at step the outbound data event handler is invoked described below with reference to and processing returns to step . If the event handler and multithreading dispatcher at step determines that the data was not received from the service interface then at step the event handler and multithreading dispatcher determines if there is a process termination request.

If at step the event handler and multithreading dispatcher determines there is a process termination request then at step the process termination module is invoked described below with reference to . If at step the event handler and multithreading dispatcher determines that there is not process termination request then processing continues at step to wait for another event.

Referring now to there is illustrated an exemplary flow chart for indicating the process flow of the process initialization module of . At step the interprocess communications interface is setup. At step the operating environment parameters are parsed and processed. This includes the host data controller parameters referenced in steps and below. At step memory is allocated for the session and other tables contained within the mobile interface which are used to control data flow and other operations. At step the host data controller parameters are accessed. At step a path to the host data controller port is opened. At step the host data controller then is prevented from monitoring for an event from the remote device s . Step prevents erroneous transmissions that may arise if the host data controller attempts to monitor a remote device before the initialization process is complete. At step the host data controller communication parameters are set. At step the communication parameters are downloaded to the host data controller . After the initialization processes of steps and are completed the host data controller at step is enabled to monitor the remote device s . At step the entire initialization procedure is complete and processing returns to step in .

Referring now to there is illustrated an exemplary flow chart describing the logic flow of the mobile session manager of . At step the mobile session manager handler is entered from the event handler and multithreading dispatcher when remote data is detected. At step the remote identifier of the remote device is looked up in a session table. At step the mobile session manager determines if the remote identifier was found in the session table. If the mobile session manager determines that the remote identifier was found the address is returned from the session table at step .

If the mobile session manager does not find the remote identifier at step then at step the mobile session manager attempts to authenticate the remote identifier. At step the mobile session manager determines if the authentication is successful. If at step the authentication is successful then at step the host data controller is instructed to connect to the remote device based on the remote identifier. After the host data controller is connected to the remote device the appropriate service interface is invoked at step . At step processing is complete. If at step the authentication was not successful the remote data is ignored at step and a null session table entry address is returned by the mobile session manager .

Referring now to there is illustrated an exemplary flow chart of the processing steps of the inbound data event handler of . At step the inbound data event handler is invoked from step in . At step the remote identifier of the remote device is checked against the session table. At step it is determined whether the inbound data event handler found the remote identifier in the session table. If at step the remote identifier is not found in the session table the data is ignored and processing continues at step in . If the remote identifier is found in the session table at step the data is sent to the service interface at step . Processing then continues at step in .

Referring now to there is illustrated an exemplary flow chart of the processing steps of the outbound data event handler of . At step the outbound data event handler is invoked from step . At step the session table is checked for the outbound data remote identifier. At step it is determined if the outbound data event handler found the remote identifier in the session table. If at step the remote identifier is not found in the session table an error is logged and the data message is ignored. Processing then continues at step in . If the remote identifier is found in the session table at step the data is sent to the remote device as a single packet at step . Processing then continues at step in .

Referring now to there is illustrated an exemplary flow chart of the processing steps of the process termination module of . At step the process termination module is invoked from step in . At step the process termination module determines if there are any active remote sessions. If at step it is determined by the process termination module that there are no active sessions then at step all files are closed and the mobile interface terminates. If however it is determined by the process termination module that there are active sessions then at step all of the active sessions are issued a disconnect request. At step the process termination module waits for all active sessions to terminate. Once all active sessions have terminated at step then all files are closed and the mobile interface terminates at step .

Referring now to there is illustrated an exemplary flow chart of the processes associated with the host data controller interface module of . The host data controller interface module consists of a number of discrete functions e.g. Initialize Command Send Data and Receive Data which are called when needed by the mobile interface and share common information about the host data controller . The host data controller interface module may access the host data controller via a serial communications port which is assigned to the mobile interface and remains fixed when the remote network controller is in operation.

A host data controller initialize routine begins at step . The initialization routine may be initiated in accordance with step see and steps and see . At step the serial communications port is accessed and setup. Thereafter at step the port handle and status is saved to be used by other processes within the host data controller interface module .

A host data controller command routine begins at step . The command routine may be initiated upon the occurrence of a recognized event see e.g. step in so that the appropriate control or operation commands may be sent to the host data controller . At step the host data controller is placed into a command mode. At step a command e.g. disconnect or receive is issued to the host data controller based on the event that is recognized. At step the host data controller interface module awaits a confirmation of acceptance of the command from the host data controller . At step the result of the command is returned to the host data controller interface module .

A host data controller send data routine begins at step and may be initiated from step in . The send data routine is initialized so that data may be sent to the appropriate remote device . First the physical identification of the remote device is determined at step . Thereafter the data to be sent to the remote device is placed into a packet at step and sent to the host data controller at step .

At step a host data controller receive data routine is initiated in accordance with step in . The receive data routine is initiated so that data from the remote device may be received by the remote network controller . At step data is accumulated within the host data controller receive data routine see step until a full packet of information is received. Thereafter at step the packet is identified as either session oriented or monitor oriented data. The identified data packet is then returned at step to the mobile interface and sent to the wired communication network via the remote network controller .

Referring now to in accordance with an aspect of the present invention there is illustrated a block diagram of the basic components of the host data controller see e.g. of the present invention. The host controller may be physically connected external to the remote network controller via the mobile interface . The host data controller is specifically designed to convert the radio infrastructure protocol to the internal protocol of the remote network controller . Typically one host data controller may be connected to each mobile interface however one or more host data controllers may be connected for redundancy and greater reliability.

As shown in the host data controller may comprise an RF communications interface module a remote network controller communications interface module and a configuration and monitoring module . The host data controller may comprise any combination of hardware and software to perform the functions described herein. For example the host data controller may comprise a commercially available processor or multi processor with overlying application software. The software running in the host data controller may be written in Z80 or other appropriate high level language e.g. Pascal . The host data controller may also contain a plurality of serial ports for communicating with other devices.

The remote network controller communications interface module is connected to the mobile interface of the remote network controller and is responsible for sending and receiving data to and from the remote network controller . A subsystem port e.g. an RS 232 adapter may be used to connect the remote network controller communications interface module to the mobile interface of the remote network controller . If the host data controller is connected to more than one remote network controller then additional subsystem port connection s may also be provided to connect to the interface module to the additional remote network controllers. The remote network controller communications interface module sends health and status information regarding the host data controller to the mobile interface . This information informs the remote network controller that the host data controller is operational and accepting data.

The configuration and monitoring module is specific to the type of radio infrastructure employed. Software parameters such as the number of subsystem ports how often to send health and status requests and a list of mobile data controllers to which the host data controller can communicate may be set and stored in the configuration and monitoring module . The configuration and monitoring module can also accumulate statistics which are passed to the mobile interface .

In order to diagnose potential system errors in the host data controller the remote network controller may test and analyze the host data controller over a diagnostic port not shown to determine a cause of the system failure or error. The diagnostic port may be used not only to determine if the host data controller is operational but also to configure software parameters particular to the type of radio infrastructure . These parameters can be changed to communicate with a different radio infrastructure type as necessary.

The RF communications interface module is responsible for sending and receiving the radio frequency transmissions. The RF communications interface module is specific to the radio infrastructure in use and is connected to the radio infrastructure by a communication line . Again because the host data controller is designed to integrate with an existing radio infrastructure each host data controller is software configured to work with many different types of radio infrastructure protocols for flexibility. The host data controller may be designed to be plugged into the remote network controller connecting to the mobile interface and can simply be exchanged with a different host data controller or reprogrammed depending on the radio infrastructure employed. Host data controllers may be configured so as to be compatible with for example conventional point to point radio systems conventional repeater based radio systems LTR Trunking Motorola Trunking Ericsson EDACS Trunking Voice Path EDACS RDI Trunking Data Path and EDACS IMC Voice Path radio infrastructures.

Referring to there is illustrated a block diagram of the components comprising the service interface see of the present invention. The service interface is responsible for communicating to and from the wired communication network . The service interface is concerned only with the software level protocols of the wired communication network . The hardware interface to the wired communication network is accomplished by a known network control card such as an Ethernet controller or a Token Ring controller.

The number of service interface connections to the wired communication network is dictated by the type of wired communication network . If the wired communication network uses asynchronous data transfer there will be one service interface for every entry point e.g. serial port into the wired communication network . In a local area network LAN environment each service interface may handle a variety of different network addresses. A different service interface may be used for each type of wired communication network .

As shown in the service interface may include an event handler and multithreading dispatcher a process initialization module an inbound data event handler an outbound data event handler a process termination module and a wired network interface module . The event handler and multithreading dispatcher may contain high level logic and be used to control the overall execution flow of the service interface . The process initialization module acquires resources and establishes the operation environment of the service interface process. The inbound data event handler responds to signals from the interprocess communication manager that inbound data is available and preprocess session control information. The inbound data event handler may also handle asynchronous timer events. The outbound data event handler is provided to respond to signals from wired communication network interface module that outbound data is available or that a timer event has occurred. The process termination module functions to release previously acquired resources and terminate the service interface process gracefully. The wired communication network interface module handles low level interaction with the associated wired communication network transport mechanism i.e. communication protocol being used.

An exemplary process flow of the event handler and multithreading dispatcher see of the present invention will now be described with reference to . At step the process begins when the service interface is powered up and initialized. At step the process initialization module is invoked described below with reference to . At step the event handler and multithreading dispatcher waits for an event to occur in response e.g. to network or remote device activity. While the event handler and multithreading dispatcher waits for an event to occur the service interface may be placed in a sleep mode to conserve processing power. At step once an event occurs the event handler and multithreading dispatcher determines if it is a recognized event. Recognized events may include Initialize Send Data Receive Data and or Terminate. If the event handler and multithreading dispatcher determines it is not a recognized event at step then processing returns to step . If the event handler and multithreading dispatcher recognizes the event at step then processing continues at step where the event handler and multithreading dispatcher determines if the data was received from the host communication network .

At step if the event handler and multithreading dispatcher determines the data was received from the host wired communication network the event handler and multithreading dispatcher invokes the inbound data event handler at step described below with reference to and thereafter processing continues at step . If at step the event handler and multithreading dispatcher determines that the data was not received from the host wired communication network the event handler and multithreading dispatcher then determines if the data was received from the mobile interface at step .

If the event handler and multithreading dispatcher determines at step that the data was received from the mobile interface then at step the outbound data event handler is invoked described below with reference to and thereafter processing continues at step . If the event handler and multithreading dispatcher at step determines that the data was not received from the mobile interface then at step the event handler and multithreading dispatcher determines if there is a process termination request.

If at step the event handler and multithreading dispatcher determines there is a process termination request then at step the process termination module is invoked described below with reference to . However if at step the event handler and multithreading dispatcher determines that there is not process termination request then processing returns to step to wait for another event.

Referring now to there is illustrated an exemplary flow chart describing the process flow of the process initialization module see e.g. of the present invention. At step the interprocess communications interface is setup when the service interface is started or powered up. At step the operating environment parameters are parsed and processed i.e. the parameters of the operating environment are processed individually . At step any resources required e.g. memory are acquired. Thereafter at step the wired communication network interface module is invoked see discussed below . As discussed below the wired communication network interface module may include several procedures associated with initializing the connectivity with the wired communication network reading data from the wired communication network writing data to the wired communication network and terminating connectivity with the wired communication network . In accordance with an aspect of the present invention a unique set of procedures may be provided by the wired communication network interface module for each type of wired communication network . For example a unique set of procedures may be provided for networks utilizing transparent asynchronous communications TCP IP stream sockets Vehicle Location Reporting Facilities Bidirectional Messaging Facilities or Credit Card Verification Facilities.

After the wired communication network interface module is invoked the results of the previous operations performed at step are sent at step to the mobile interface . At step it is determined by the process initialization module if the wired communication network interface module was successfully invoked at step . If it is determined at step that the wired communication network interface module was successfully invoked then the initialization is complete at step and processing returns to step in . If however it is determined at step that the wired communication network interface module was not successfully invoked then the service interface is terminated at step .

Referring now to there is illustrated an exemplary flow chart of the processing steps for the inbound data event handler see e.g. of the present invention. At step the inbound data event handler is invoked from step in . At step the data portion of the message sent by the wired communication network is extracted. At step the service interface requests a packet of data from the mobile interface . At step after the packet is accepted by the service interface data is sent to the appropriate destination via the wired communication network . The inbound data event handler then waits for a disconnect request at step . If the inbound data event handler receives a disconnect request at step then a disconnect command is sent to the mobile interface at step . Processing then continues at step in . If however the inbound data event handler does not receive a disconnect request at step then the request received is ignored at step and thereafter processing then continues at step in .

Referring now to there is illustrated an exemplary flow chart of the processing steps for the outbound data event handler see of the present invention. At step the outbound data event handler is invoked from step in . At step the outbound data event handler determines if there is a request e.g. a disconnect request from the wired communication network or the remote device . If there is a request then processing continues at step . However if there is presently not a request then at step the outbound data from the network is sent to remote device via the mobile interface . At step the outbound data event handler then determines if a disconnect request has been received. If the outbound data event handler receives a disconnect request at step then a disconnect command is sent to the mobile interface at step by the interprocess communication manager see e.g. . Processing then continues at step in . If however the outbound data event handler does not receive a disconnect request at step then the request received is ignored at step and processing then continues at step in .

Referring now to there is illustrated an exemplary flow chart of the processing steps for the process termination module see of the present invention. At step the process termination module is invoked from step in . At step the wired communication network interface module connection is closed. Thereafter at step the processes associated with the service interface are terminated.

Referring now to there are illustrated exemplary flow charts of the various processes that may be performed by the wired communication network interface module of the present invention. The wired communication network interface module may consist of a number of discrete functions which provide the service interface with a uniform means of communicating with various host computer networks irrespective of the communication protocols of the wired communication network . All protocol and other feature specific communications translation and handling is performed at the wired communication network interface module . The wired communication network interface module may be designed for networks utilizing different implementations such as transparent asynchronous communication Hayes compatible communication TCP IP stream socket Bidirectional Messaging Facilities File Transfer Facilities SNA Protocol Enveloping Vehicle Location Reporting Facilities Credit Card Verification Facilities and Harris DNP 3.0 Frame Relay. As noted above a unique set of procedures may be provided by the wired communication network interface module for each type of wired communication network . Examples of several of these sets of procedures are provided below.

Referring now to there is illustrated an exemplary flow chart of the set of procedures associated with the wired communication network interface module that are designed for transparent asynchronous communication networks. At step an initialization process begins in accordance for example with step of . At step the serial port of the wired communication network that is to be used is determined and the identified port is opened or accessed at step . At step the speed bps the parity odd or even and the data bits for communication with the network are established along with other appropriate parameters.

At step a data read operation begins. The data read routine may be invoked by the outbound data event handler at step see . Initially at step the wired communication network interface module determines if there is data to be read from the serial port. If at step the wired communication network interface module determines there is data to be read then at step the data is added to an accumulated data buffer within the remote network controller . At step if the wired communication network interface module determines that the data buffer is full then at step the data accumulated in the buffer is returned to the calling module. If however at step the wired communication network interface module determines there is no data to be read from the serial port attached to the network then at step it is determined if the inter character time e.g. a predetermined character receipt delay time has been exceeded. If at step the inter character time has been exceeded then at step the accumulated data buffer is returned to the calling module to be further processed. Otherwise if the inter character time has not been exceeded then processing continues at step so that the wired communication network interface module may again determine if there is data to be read from the serial port.

At step a write data routine is started. The write data routine may be initiated by the inbound data event handler at step in . At step the data is sent directly to the serial port of the wired communication network . The write data routine is thereafter completed.

At step a terminate routine is initiated. The terminate routine may be initiated in accordance with a terminate request at step in . In response to initiation of the terminate routine the serial port of the network is closed at step . Thereafter at step the serial port resource is released so it may be used by another process. Finally at step any data buffers in use are also released.

Referring now to there is illustrated exemplary flow charts of the set of procedures associated with the wired communication network interface module for networks utilizing TCP IP stream socket connectivity. At step an initialization process begins in accordance for example with step of . At step a host network and serial port to be used are determined. At step an appropriate socket is created. At step the socket server is accessed for data transport.

At step a data read operation begins. The data read routine may be invoked the outbound data event handler at step see . Initially at step the wired communication network interface module determines if there is data to be read from the socket. If at step the wired communication network interface module determines there is data to be read then at step the data buffer is returned to the remote network controller for further processing.

At step a write data routine is started. The write data routine may be initiated by the inbound data event handler at step in . At step the data is sent by the wired network interface module directly to the socket at the wired communication network . The write data routine is thereafter completed.

At step a terminate routine is initiated. The terminate routine may be initiated in accordance with a terminate request at step in . Initially the socket is closed at step . Thereafter at step the socket resource is released so it may be used by another process. Finally at step any data buffers in use are also released.

Referring now to there is illustrated exemplary flow charts of the set of procedures associated with the wired communication network interface module for use with networks utilizing Vehicle Location Reporting Facilities. At step an initialization process begins in accordance for example with step of . At step the wired communication network interface module determines a position recording file to be used to record data. The position recording file may be stored within the wired communication network . At step the position recording file is accessed from the network . Thereafter at step the recording interval is placed into a read buffer that may be provided to the remote device via the mobile data controller .

At step a data read operation begins. The data read routine may be invoked by the outbound data event handler at step see . Initially at step the wired communication network interface module determines if there is data in the read buffer. If at step the wired communication network interface module determines there is data in the read buffer then at step the contents of the read buffer is returned to the calling module.

At step a write data operation is started. The write data routine may be initiated by the inbound data event handler at step in . Initially at step the wired communication network interface module determines if a full Global Positioning Satellite OPS message has been accumulated. If at step the wired communication network interface module determines that a full GPS message has not been accumulated then no action is taken at step . If at step the wired communication network interface module determines that a full GPS message has been accumulated then the message is converted at step to a standard form usable by the wired communications network . At step the position recording file at the host is appended with the GPS message.

At step a terminate routine is initiated. The terminate routine may be initiated in accordance with a terminate request at step in . The terminate routine may comprise closing the position recording file at step .

Referring now to there is illustrated exemplary flow charts of the set of procedures associated with the wired communication network interface module that are designed for networks utilizing Bidirectional Messaging Facilities or Store and Forward Messaging Facilities. Referring to at step an initialization process begins. The initialization process may be started in accordance for example with step of . At step a message queue for the remote device is accessed. Thereafter at step if no queue exists for the remote device a message queue is created at the remote network controller .

At step a data read operation begins. The data read routine may be invoked by the outbound data event handler at step see . Initially at step the wired communication network interface module determines if a message is in the process of being sent. If at step the wired communication network interface module determines that a message is being sent then at step the current message segment is sent by the remote device to the wired communication network . If at step the wired communication network interface module determines that no message is being sent then at step the wired communication network interface module determines if there is a message queued. If at step the wired communication network interface module determines that no messages are queued then no action is taken. However if at step the wired communication network interface module determines that there is a message queued for the remote device then the current message queued is sent at step . After the last segment of the message is sent the wired communication network interface module may indicate that delivery of the message is pending to the remote device at step .

At step a write data routine is initiated. The write data routine may be initiated by the inbound data event handler at step in . Initially at step the wired communication network interface module determines if a new message is present. If at step the wired communication network interface module determines that a new message is present then at step the wired communication network interface module starts a new queue entry. Thereafter processing continues at step where the message segment is recorded. At step the wired communication network interface module determines if this is the last segment. If at step the wired communication network interface module determines that it is the last segment then at step the queue entry is closed and Message Received message may be placed into the read buffer at step to be sent to the remote device . If at step the wired communication network interface module determines that it is not the last segment then no action is taken.

Referring to at step a terminate routine is started. The terminate routine may be initiated in accordance with a terminate request at step in . At step the wired communication network interface module determines if the terminate request has come in the middle of a message. If at step the wired communication network interface module determines that the request came in the middle of a message then the message is purged at step . Processing then continues at step where the wired communication network interface module closes the message queue.

Referring now to there is illustrated flow charts of the set of procedures associated with the wired communication network interface module designed for use with networks utilizing Credit Card Point of Sale Facilities. At step an initialization process begins. The initialization process may be started in accordance for example with step of . In accordance with the invention no action is required for the initialization procedure.

At step a data read operation begins. The data read routine may be invoked the outbound data event handler at step see . Initially at step the wired communication network interface module determines if there is a response from a server attached to the wired communication network . If at step the wired communication network interface module determines there is a response from the server then at step the response is read and the response buffer is returned to the remote device at step . If at step there is no response from the server then no action is taken.

At step a write data operation is started. The write data routine may be initiated by the inbound data event handler at step in . At step the wired communication network interface module first determines if a full request by the remote device has been accumulated. If at step the wired communication network interface module determines that a full request has not been accumulated then the remote device continues to accumulate a request at step . If at step a full request has been accumulated then at step the request is formatted for the server on the wired communications network . Thereafter the request is placed into the server file at step .

At step a terminate routine is illustrated. The terminate routine may be initiated in accordance with a terminate request at step in . According to the present invention no action is necessary for the terminate routine.

Referring now to there is illustrated a block diagram of the various components of the mobile data controller according to another aspect of the present invention. The mobile data controller may be specifically designed to match the asynchronous data transferred to and from the remote device to the radio infrastructure protocol. Typically there is one type of mobile data controller that is associated with a host data controller which is connected to the mobile interface of the remote network controller . In addition the mobile data controller may have a unique identifier associated with it for routing purposes.

In accordance with the present invention the mobile data controller may be implemented by any combination of hardware and software. For example the mobile data controller may comprise a commercially available processor with overlying software and random access memory. The software running in the mobile data controller may be written in Z80 or other appropriate processor based i.e. native assembly language and configured to the specific radio infrastructure . The software may specify the various voltage levels and logic signals necessary to communicate via the RF communications infrastructure . As noted above the mobile data controller may translate and pass any protocols associated with the wired communications network to and from the remote device to make it appear to the wired communication network that the remote device is locally attached.

The mobile data controller is configurable over the radio infrastructure . configuration information may be input by an operator at the remote network controller through the console interface see and passed over the radio infrastructure to the mobile data controller . This allows parameters such as packet size to be changed at the host wired communications network without the necessity of altering the mobile data controller in the field.

As shown in the mobile data controller may comprise an RF communications interface module a remote device communications interface module and a configuration and monitoring module . The mobile data controller may be connected to the remote device via a communication port for sending and receiving data. The remote device communications interface module is connected to the remote device via the communication port and is responsible for sending data to and receiving data from the remote device . The communication port may comprise for example an RS 232 adapter.

The configuration and monitoring module is specific to the type of radio infrastructure employed. Software parameters such as the number of subsystem ports how often to send health and status requests and a list of host data controllers to which the mobile data controller can communicate may be set and stored in the configuration and monitoring module . The configuration and monitoring module can also accumulate statistics which are passed to the host data controller .

In order to diagnose potential system errors in the mobile data controller an operator may be provided with the ability to field test and analyze the mobile data controller via an external diagnostic port to determine a cause of the system error or failure. The diagnostic port may be used not only to determine if the mobile data controller is operational but also can be used to configure software parameters to determine the type of the radio infrastructure . These parameters can be changed to communicate with a different type of radio infrastructure as necessary.

The RF communications interface module is responsible for sending and receiving the data via radio frequency RF transmission. The RF communications interface module is specific to the radio infrastructure used and is connected to the radio infrastructure through a communication line . Because the mobile data controller is designed to integrate with an existing radio infrastructure each mobile data controller may be software configured for purposes of flexibility to work with many types of radio infrastructure protocols. The RF communications interface module may also send health and status information regarding the mobile data controller to the host data controller . This information may inform the remote network controller that the mobile data controller is operational and the remote device is accepting data.

According to the present invention the RF communication interface module may include a commercially available modem not shown . The modem may be selected depending on the data rate s of the communication line and the radio infrastructure . More than one modem may be provided if multiple data rates are required. Optionally the modem can be implemented using a Digital Signal Processing DSP chip and associated software. The DSP chip can be a commercially available programmable signal processing chip. In such a case the DSP implementation will allow a single modem to be changed e.g. by uploading new parameters to the DSP software in order to communicate with a plurality of different types of radio infrastructures having distinct protocols and data rates.

Similar to the host data controllers the mobile data controllers may be compatible with for example conventional point to point radio systems conventional repeater based radio systems LTR Trunking Motorola Trunking Ericsson EDACS Trunking Voice Path EDACS RDI Trunking Data Path and EDACS IMC Voice Path based radio infrastructures .

Referring again to a brief description of the interprocess communications manager will be provided. According to the present invention the interprocess communications manager is responsible for routing all communication between the various modules and interfaces within the remote network controller . The interprocess communications manager creates a logical route from the remote device to the service interface of the remote network controller. The interprocess communications manager passes routing information which determines from which radio infrastructure and remote device the inbound data has come from and to which radio infrastructure and remote device the outbound data will be sent.

The interprocess communications manager may also pass information generated by the remote network controller which is independent of the data and routing information. This information may include internal parameters and error detection codes. The interprocess communications manager also interfaces with the control process module . The control process may act as the central hub of the remote network controller . The control process provides resource management process management session management configuration management and system statistics management within the remote network controller .

As further shown in the remote network controller also includes a console interface . The console interface may be adapted to allow a network operator to configure and control the wireless Network Interfaces described above the mobile user characteristics and the configuration information of the wired communications network . The console interface may be a stand alone platform having a commercially available processor e.g. an Intel or Motorola based processor and an Ethernet controller card for communicating for example with another remote network controller .

Referring now to there is illustrated a remote gateway in accordance with another aspect of the present invention. As shown in the remote gateway is comprised of a transparent communications module a field service interface module a configuration and health module and a RF communications module . The remote gateway is functionally similar to the mobile data controller . However the remote gateway is a specific type of mobile data controller that may be used to attach to a remote telemetry unit for monitoring for example electrical power distribution.

The transparent communications module is responsible for communicating with a terminal device typically a Remote Telemetry Unit RTU located in the field and accepts data from the RF communications module . As shown in the transparent communications module may be connected to a RTU via a communication line . The transparent communications module does not recognize any protocol but handles hardware flow control and buffering and packetizing. Data communication between the transparent communications module and the RTU may be carried through asynchronous serial transfer.

The RF communications module is configured to communicate with the remote network controller using whatever protocol is required for data transport over the radio infrastructure . The RF communications interface module interfaces with the radio infrastructure in a similar manner as previously described above with regard to the RF communications interface module . The RF communications interface module accepts data from the transparent communications module and delivers it to the radio infrastructure for transmission to the remote network controller. The RF communications interface module detects collisions with inbound RF data and restarts outbound transmissions. The RF communications interface module performs error retry functions and notifies the transparent communications module of successes or failures.

The field service interface module allows a technician to field test the remote gateway and troubleshoot the remote gateway should a system error or problem arise. An external diagnostic port connected to the field service interface module may be provided for this purpose. The field service interface module may interact with the configuration and health module to query set and reset local configuration of the remote gateway .

The configuration and health module may accept configuration information from the remote network controller via the radio infrastructure and adjust the operating parameters of the remote gateway accordingly. The configuration and health module may also monitor and determine if the RF communications module has successfully transmitted a packet of information to the host data controller by analyzing the data stream. If a packet of information has not been successfully transmitted the configuration and health module may direct the RF communications module to resend the packet of information to the host data controller .

Referring now to there is illustrated a block diagram of an integrated remote network controller according to another aspect of the present invention. The components of the remote network controller that are similar to that discussed above with respect to are designated with the same reference numeral and also with a prime added thereto.

As shown in the remote network controller according to another aspect of the present invention may include one or more service interfaces an interprocess communications manager a control process one or more mobile interfaces and a subsystem synchronization processor which is used to link one or more remote network controllers together see . As further shown in one or more host data controllers are connected to the mobile interfaces and provided externally to the remote network controller . The number of host data controllers and mobile interfaces may be dependent on the number of radio infrastructures present. In addition the number of service interfaces may be dependent on the number and type of wired communications networks present.

According to an aspect of the present invention two remote network controllers may be linked by a local network see . This configuration provides a redundant system which insures greater reliability of communication between the remote device and the wired communications network . For example should any particular component fail such as a host controller or an interprocess communications manager the remote device can still communicate with the wired communication network because of the redundancy of the components of the remote network controllers provided.

There are two main implementations of this system according to the present invention. With the first implementation only one of the remote network controllers is operating at any given time. Should the operational remote network controller fail the other remote network controller may immediately take its place. For example if remote network controller A fails then remote network controller B may be activated to take its place.

Under the second implementation a distributed processing scheme is utilized and both of the remote network controllers are operated at the same time. According to the distributed processing scheme the processing load e.g. event handling and data transfer may be distributed among the operational remote network controllers . Should a particular remote network controller e.g. controller B fail the remaining operational remote network controller e.g. controller A will handle the entire processing load.

The above mentioned distribution of the processing load is generally a junction of the radio infrastructure and not the processing capacity of the remote network controllers . This is because performance increases are mainly based on the number of available communications channels rather than the raw processing capability of the remote network controllers attached to the wired communications network . For example if the radio infrastructure is a trunking radio network with five channels it is possible for all five channels to be simultaneously allocated and used by the remote network controllers . On the other hand if there is only one channel available in the radio infrastructure then only one remote network controller can access the radio infrastructure at a time as a result no performance gain may be realized by employing multiple remote network controllers when only limited channels are available.

As illustrated in the local network is used to connect the remote network controllers together. The local network may be for example an Ethernet local area network. Each of the remote network controllers includes a subsystem synchronization process module that is connected to the local network . Two separate console interfaces may also be attached to the local network . Each console interface may be attached to the local network to allow an operator to configure and control a particular remote network controller .

The subsystem synchronization process module may be implemented through any combination of hardware and software and is responsible for keeping track of all routing tables and health and status information associated with both of the remote network controllers . Each subsystem synchronization process module is connected to an interprocess communications manager of one of the remote network controllers and may access all routing tables and health and status information with respect to the remote network controller from the interprocess communications manager. The health and status information and routing tables may be periodically updated based on the status of and events present at the remote network controller . The periodically updated health and status information and routing tables may then be shared with the other subsystem synchronization process module via the local network so that the tables and information associated with both of the remote network controllers is maintained in each of the subsystem synchronization process modules . Since the tables and information are periodically updated a synchronization routine may be provided so that the information and tables are sent to the respective subsystem synchronization process modules at predetermined intervals. If a particular subsystem synchronization process module does not send or receive the tables and information or if a particular subsystem synchronization process module sends information indicating that one of the remote network controllers has malfunctioned the other subsystem synchronization process module may reroute any existing connections to the host data controllers and to the wired network of the malfunctioning remote network controller to the remaining operational remote network controller .

As further shown in the host data controllers have two ports and that are connected to a different remote network controller . As in the remote network controller communicates to the host data controller and sends health and status information through the ports. If the host data controller does not receive information that one of the remote network controllers is operational the host controller can switch ports e.g. from port to port in order to communicate with the other remote network controller .

While the invention has been described with references to several exemplary embodiments it is understood that the words which have been used herein are words of description and illustration rather than words of limitation. Changes may be made within the purview of the appended claims without departing from the scope and spirit of the invention in its aspects.

For example although only shows two remote network controllers that are connected by a local network it is possible to connect two or more remote network controllers by the local network to provide increased redundancy. In addition a plurality of local networks may be provided to connect the remote network controllers. Other modifications to the present invention may include selectively processing inbound and outbound data in a different logic order and or by different components. In accordance with such a modification processing functions may be performed only by the control process or in the interprocess communication manager. Another application may be combining the mobile interface with a host data controller and placing the integrated unit within the remote network controller.

Referring now to therein is illustrated a general overview of another embodiment of the present invention which includes a mobile Router in accordance with an aspect of the present invention. The Router provides the mobile application or device with the capability to selectively transmit and receive data over a plurality of radio frequency infrastructures and or the public switched telephone network in accordance with user configured parameters.

Referring now to therein is illustrated a schematic block diagram of the mobile Router . In the following description of the Router each of the elements will be initially generally described and in greater detail thereafter. As shown in the mobile application or device may be attached to multiple Networks by the Router through Network Interfaces A D a Router Core and a Switch . The Network Interfaces A D provide connectivity for data between the Switch and the various Networks infrastructures e.g. radio infrastructures and public switch telephone network through which the mobile device or application connects to the communications network see . The Switch is actuated by the Router Core and sends data to a fixed host application or device e.g. RNC via the selected network. The Network Interface provides information to the Network Availability process which sends this information to the Decision process . The Decision process operates in accordance with User Configured parameters which specify when and through which Network the data is to be transmitted. The decision process monitors the User Configuration parameters and the Network Availability . When the Decision process in accordance with User Configuration parameters specifies that a Network e.g. Network different than the Network currently in use e.g. Network should be used the Decision process checks the Network Availability for the particular Network to be switched to. If the Network is available the Decision process instructs the Router Core to switch to the new Network. The Router Core then updates routing tables not shown maintained within the Router Core to reflect the new data path and actuates the Switch to connect to the new Network. Data may then flow over the new Network. In accordance with an aspect of the present invention data may flow inbound to the fixed host through one Network and outbound to the remote mobile Application or device through the same Network or through a different Network.

With reference to the mobile application or device may comprise a software application running on a portable or laptop computer performing a variety of functions as programmed by the software application e.g. database services . The Application or device may also comprise a special purpose device designed to perform a particular function such as a credit card reader or barcode scanner. The Application or device may generate a data stream which is sent to a fixed location e.g. a host computer infrastructure .

An exemplary application running on the mobile device is a mobile remote client application which provides the remote user with the capability to send and retrieve data from a fixed database server application. The data may consist of customer records which for example may be used by service personnel operating a fleet of vehicles to service customers scattered about a wide geographic area. In the exemplary application the mobile client application may request customer records from the fixed database server and display the records for viewing by mobile service personnel. The mobile client application may send updated records to the fixed database as the service personnel finish assigned tasks. The updated records may contain a service history equipment upgrades and repairs for each customer.

Another exemplary application running on the mobile device may be a client application which retrieves a list of dispatched jobs to be performed by the service personnel during each day. The jobs may be uploaded to the remote mobile device each morning and stored in another client application in the mobile device . As the service personnel change job locations the status of each job may be updated to indicate a status e.g. en route arrived and finished with comments. The status may be sent from the application to the fixed home office so a dispatcher at the home office is aware of the locations of service personnel in the field.

By way of non limiting examples the mobile device may comprise a portable or laptop computer a computer having an embedded Router a terminal or terminal emulator a data gathering device e.g. a SCADA system or remote telemetry system for obtaining data from a remote location for forwarding to a central location for processing a card swipe reader device e.g. credit debit bank cards for use in a mobile billing application such as a taxi or mobile food cart a smart card reader a logging device such as those used in a package delivery system or fleet a device for reading bar codes e.g. for inventory control and a remote application with data to send or to receive from a fixed application or device e.g. remote diagnostic tool . The above noted applications are provided merely for exemplary purpose and other applications and mobile devices may be used with the Router of the present invention.

Typically the device or Application sends and receives data using a variety of protocols e.g. Internet Protocol IP transparent via MDC ack nack etc. . The use of a variety of protocols provides for open transport of data throughout many networks and in particular networks which support open standards such as IP. However many proprietary networks which require interface and or protocol translation remain in use. In the Router of the present embodiment the function of interfacing with networks and protocol translation may be performed by the Network Interfaces A D.

According to another aspect of the invention other types of devices may be connected to the Network Interface . Such devices may be used for functions other than data and voice communication. By way of non limiting examples these devices may include Global Positioning System GPS receivers and application processors.

The Router Core is a function which shuttles messages between the Application or Device and the various Networks. In accordance with the present embodiment the router Core may control which network of a plurality of usable network messages are to travel over and connect access ports described below to each Network and the Application or Device .

The Router Core may also comprise a list of all possible names or addresses to which data may be sent or from which data may be received. The local names or addresses of the Router Core are stored in tables within a memory not shown of the Router Core . Thus the Router Core may serve as a communications address book for the Router of the present embodiment. The Router Core also checks all messages passing through and decides based on the address and or name entries in the tables if the message is relevant to the attached Application or Device or to the fixed host e.g. RNC . The address of the fixed host may be stored in the Router Core table as well. In accordance with the table entries received messages may be determined to be valid or invalid. The Router Core may also actuate the Switch in accordance with the output of the decision process . The Switch is actuated such that incoming and outgoing messages can be sent through the current network as determined by the decision function to be described below .

The Switch may comprise a message multiplexor i.e. the Switch performs a one to many function for in bound messages to the fixed hosts and a many to one function for outbound messages from the fixed host . As noted above the appropriate network selection is made by the Router Core in accordance with the output of the decision process . Messages travel through the Switch the Router Core and the current Network Interface .

Referring to the Switch may be implemented using a combination of hardware e.g. multiple electronic ports one per Network Interface to perform the physical connection process B and software e.g. handlers which are interrupted at each character to move the character to either the Router Core outbound or to the current Network Interface in bound to perform the switch logic process A.

As a non limiting exemplary hardware implementation the Switch may comprise an 80386EX microprocessor running at 33 MHZ 256 kilobytes of FLASH ROM 512 kilobytes of static RAM six asynchronous serial ports two TTL to RS232 convertors interfacing with two of the six serial ports directly to compatible devices external to the Switch and four internal TTL serial interfaces to internally mounted daughter boards which carry Network Interfaces A D. Each Network Interface mounted on a daughter board may include a power supply for the Network Interface a serial interface to the 80386EX microprocessor and an interface to the outside network. The outside network may be a radio a LAN an antenna for internally mounted radios in the Network Interface or other device accepting or supplying data from to the Router .

The Switching function of the Switch is provided by each serial Network Interface port at the 80386EX microprocessor and the software residing in FLASH ROM. The software logic determines which Network Interface to use for transmission and receipt of data. The decision is implemented in the Switch by selecting a physical serial port and therefore which Network Interface is to be used as the current Network. The Decision software in the FLASH ROM instructs the microprocessor to send the data to a specific serial port which is mapped to specific physical addresses within the address range of the 80386EX microprocessor . The microprocessor then constructs the next message in the message buffers in RAM and sends the message through the specific serial port which is designated as the current Network Interface port. The data then goes to the Network. Interface e.g. network interface A connected to that specific serial port and on to the Network infrastructure. Received data is input to the Network Interface e.g. network interface B which may be set to the current Network serial port and the microprocessor where the received data is processed by the microprocessor. In accordance with an aspect of the present invention messages which are received through Network Interfaces which are not designated as the current Network are ignored.

The Network Interfaces A D are devices which present data to or obtain data from the radio operating at the various R.F. Network frequencies bandwidths and modulations. The Network Interfaces A D may provide a port through which messages pass to and from the Switch . The messages are typically in the form of a sequence of serial digital bits. The Network Interfaces A D also may provide a modulator demodulator function which transforms the digital data into an analog form which may be easily sent through the R.F. Network voicepath based on characteristics of the assigned frequency band of the R.F. Network. The characteristics of analog transmissions are typically bandwidth in Hertz or cycles per second noise present in the Network and assigned frequency of the R.F. Network. Further the Network Interfaces may interface with a radio which may be included within the Network Interface or may be mounted externally to the Router as shown in . The Network interface radio interface comprises the actual physical connections to the radio for the voicepath data the muting function if present and or required and the functionality for issuing a Press to Talk to the radio and for receiving the Transmit Grant signal from the radio both are used for handshaking between the radio network and the Network Interface . This handshaking may be necessary for proper timing of the data out onto the RF Network. The muting function is used for silencing received signals which represent data rather than voice traffic which enables a remote user to mute the audible noise of the data traffic which can be annoying to the remote user.

Examples of Network Interface A D include the MDC and the NovaTel Wireless NRM 6812 Cellular Digital Packet Data CDPD modem. Where the network interface comprises the MDC the radio is mounted external to the MDC whereas in the NovaTel example the radio and the network interface are integrated into a single unit.

As noted above the Network Interfaces provide connections to various types of networks. These networks may be wired for example Public Switched Telephone Network or wireless for example Cellular Digital Packet Data CDPD . The following non limiting list includes networks that may be interfaced to the Router by the Network Interfaces A D private voice radio including conventional and trunked radios e.g. using MDC Cellular Digital Packet Data CDPD Spread Spectrum e.g. direct sequence and channel hop GSM GPS receiver satellite transponder RDI Ericsson interface AMPS RAM Mobile Mobitex RS232 RS485 Angel AT T Asynchronous Transfer Method ATM Integrated Services Digital Network ISDN public switched telephone network PSTN POTS telephone network Ethernet Ardis Personal Communications Services PCS and any other network which is either transparent or operates using a specific protocol.

The specific protocols to the above listed networks are implemented in the Network Interfaces A D. These protocols may be very different and therefore incompatible with each other. Additionally a translation device may be provided in each Network Interface to translate between IP and the particular network protocol. By providing such a translation device the Application or Device can use IP data regardless of the particular network the Application or Device is actually using.

Referring to a description of the functional components of the Router will now be described. The Router may be implemented as an autonomous device with multiple connections to the networks through which data is to be routed. The user Configuration Interface provides a means whereby an external device such as a keyboard terminal may be used to supply configuration information such as preferred routes network node addresses etc. to the router. Such information is accepted by the Configuration Interface and is placed into a non volatile store e.g. memory which may be queried by other router components. In addition capability may be provided whereby diagnostic information may be requested from the router and sent to the terminal device for evaluation by a technician.

The Router Core is responsible for making all routing decisions. For a given destination network address specified within a data packet or datagram received from one of the network interface drivers A D the most preferred path will be selected and the data packet or datagram forwarded through the preferred network interface driver A D. Routing decisions are generally based upon such metrics as network speed and interface availability. Other metrics such as destination network time of day type of data etc. may also be incorporated into the routing decision. Further routing decisions may be made at the packet level such that each individual packet of data may be transmitted and or received on different networks in accordance with the user configured parameters .

Exemplary Network Drivers A D may include an Ethernet Driver a Token Ring Driver and a Serial PPP Driver. The Ethernet Driver provides a means for sending and receiving data through an Ethernet type network. The function of the driver is to shield the Router Core from the details of network media access. The Token Ring Driver provides a means for sending and receiving data through a Token Ring type network. The function of the driver is to shield the Router Core from the details of network media access. The Serial PPP Driver provides a means for sending and receiving data through a PPP based serial data link. The function of the driver is to shield the Router Core from the details of network media access. Other drivers A D may be provided to interface with other types of networks as necessary.

The Network Availability see also is a function which periodically interrogates each installed Network Interface in the Router and may determine if the Network Interface is installed if the Network Interface is properly configured and functioning properly if the Network Interface is connected to the Network on line and available for sending receiving messages and if the Network Interface is in good health. The above interrogation process may be accomplished by monitoring a timer tick provided by the switch microprocessor which instructs the Network Availability to query each Network Interface . When the timer tick occurs the Network Availability function interrogates each Network Interface as noted above. The status of each Network Interface is then passed to the Decision process which determines what the next Network will be if the result of the interrogation indicates that the current Network is experiencing transmission problems.

The Network Availability of each Network Interface is determined in a manner specific to the particular interfaced Network. For example if the Network is CDPD the Network Availability interrogates the network to determine if the Network Interface is currently registered with the Network and therefore active. Also in the CDPD network the Network Availability determines if the Received Signal Strength Indication RSSI is sufficient to transmit relatively error free data. For example in the NovaTel CDPD Network Interface a RSSI of 100 dBm will provide for good data transmission qualities. Thus if the Network Availability function queries the NovaTel CDPD Network Interface for the RSSI and the response is 110 dBm then the signal is too weak for error free transmission and therefore cannot be used at this time. This information is passed to the Decision process to determine if the current Network should remain the current Network and if not to determine what the next Network should be.

The User Configuration block is used to define user configurable parameters by which the Router Core selects the current Network and the next Network . The Router parameters may include the date and time e.g. yr mo da hh mm ss and the Network Interface installed in each of the internal slots of the Router . According to the present embodiment there are six internal slots to accommodate Network Interfaces to any of private voice radio using e.g. the MDC and a variety of radios both conventional and trunked Cellular Digital Packet Data CDPD such as Sierra Wireless or NovaTel CDPD modems spread spectrum either direct sequence or channel hop as Xetron Hummingbird spread spectrum modem GSM such as Ericsson serial GSM module GPS receiver such as Motorola VP Encore GPS receiver or Trimble SVEE Six receiver satellite transponder RDI e.g. Ericsson interface implemented via a software protocol module and quasi RS232 interface to radio AMPS RAM Mobile e.g. Mobitex RS232 default and fixed for example in slots and RS485 Angel e.g. AT T ATM ISDN PSTN Ethernet Ardis PCS any other network which is either transparent or operates using a specific protocol and none. Although six slots are disclosed herein other numbers of slots may be provided.

Other user configurable parameters include the priority of each internal slot e.g. to where the slot with priority is the default startup slot and Network baud rate of each slot a default rate may be set to 9600 bits per second but may be configured to be any standard baud rate divisible by 300 up to 115.2 kilo bits per second cost per kilobyte per slot e.g. 0.xx per kilobyte where the least costly slot that is available and highest priority will be default protocol per slot e.g. none Point to Point PPP Serial Line Internet Protocol SLIP Hayes AT commands transparent slot mode for example transparent PSTN cellular IP receive only slot name or address or phone number slot to be used for diagnostics e.g. default may be set to slot slot muting to be used e.g. none PL DIMF other number of retry transmissions per Network Interface per slot before declaration of Network Interface failure e.g if slot Network Interface needs to be configured before it can operate e.g. y n slot to be used for remote display e.g. default may be set to slot slot to be used for Device or Application e.g. a connection to a mobile computer default is slot and frequency at which Network Availability is checked e.g. default may be set to five seconds . Other user configurable parameters may be introduced and configured as necessary.

The User Configuration function provides the user with the capability to instruct the Router how to select a particular Network. These metrics may include but are not limited to which Network is connected to which Router port time of day and date priority switching sequence of each Network cost per packet of each Network and preferred default Network.

On power up the User Configuration is checked to determine if it is current. If the User Configuration is determined to be out of date the end user is requested to input a configuration. The user is notified by blinking LEDs on the front panel or by a message sent to the mobile device . If the User Configuration is determined to be current no user input is requested.

Further each Network is continuously evaluated for health and connectivity status. There are a number of parameters which are examined to determine this including but not limited to Received Signal Strength Indication RSSI Clear to Send CTS Channel Clear Channel Ready and Transmit Grant.

The Decision process continuously examines the User Configured parameters in the user configuration block to determine the next Network to use in case the current Network becomes unavailable to send or receive data. Such an unavailability may arise because the remote user and consequently the Router has moved beyond coverage of the Network or because a problem has occurred with the current Network or the Network Interface .

After the Decision process has determined the next Network to use the decision process queries the Network Availability . If the next Network is available then the Decision process updates the routing tables in the Router Core . The Router Core will then actuate the Switch to physically connect the next Network as the current Network.

The Decision process uses the User Configuration parameters defined above to determine the specific criteria for each slot to be used when deciding if the current Network is to remain the current Network and if not what the next Network shall be. Once the decision process has made a tentative decision to switch to another Network i.e. the next network is to become the current network it checks the Network Availability to ascertain if the Network is actually installed configured on line and in good health. For example if the current Network is configured as priority and the Network Availability of the priority Network updates to for example installed configured on line and in good health then the priority Network becomes the next Network. The Decision process will instruct the Switch to switch the priority Network to the current network Should the Decision process decide to change Networks it conveys an instruction to the Router Core by instructing the Router Core what the next Network Interface is to be.

The process of the Decision process checking the User Configuration and the Network Availability continues indefinitely and is described in detail in . Generally the process helps to guarantee that the mobile user always has access to a Network for sending and receiving data. This process also allows what is known now as seamless roaming . This means that the mobile user can move between Networks and continue to have reliable data transmission on the different Networks.

Once it has been determined that all channels have been checked at Step it is determined whether any tables have been built. If no tables have been built at Step a configuration error is recognized and the processing stops. Tables may not have been built previously e.g. if there are problems with the IP address i.e. there was no destination address. If at Step it is determined tables were already built processing proceeds to Step where all channels are initialized and data transportation begins via the first channel.

From Step the processing proceeds to Step also shown in which illustrates an exemplary flow diagram of the Router logic for accounting the Network Availability and User Configuration to decide which channels to use for data transport. Beginning at Step processing proceeds to Step where the channel is set to the current channel in a database which is described in more detail below. From there processing proceeds to Step to retrieve the next channel to switch to from the database. The database is stored in flash memory and contains configuration information for each channel including how each channel is set up in the Router and what configuration values are for each Network Interface A D. In addition the database stores which channel is current and the history of previous current channels. The tables discussed with reference to at Step are also stored in the database.

At step a determination is made as to whether the previous channel is available. Of course if this is the first time through no previous channel will exist. If the previous channel is not available at Step a determination is made as to whether the next channel is available. If the next channel is available at Step a determination is made as to whether or not the priority is lower and it is time to switch. The determination is made by looking at the information in the User Configuration . If it is time to switch at Step a switch to the next channel is made. From there processing continues to step where it is determined if the channel was switched. If the channel was switched processing continues to step where a ping is sent to confirm the path is available. From step the processing continues to Step also shown in . If at step it is determined the channel was not switched processing continues to step .

Returning to Step if it is determined that a previous channel is available at Step an inquiry is made as to whether or not the previous channel has a higher priority and it is time to switch. The determination is made by consulting the information in the User Configuration . If it is determined the previous channel is a higher priority and it is time to switch at Step a switch to the previous channel is made. From Step the processing proceeds to Step as previously described.

If at Step it is determined that it is not time to switch and the priority is not higher processing proceeds to Step where it is determined whether the next channel is available. If the next channel is not available at Step the current channel is not switched and the processing proceeds to Step as described above. If at Step the next channel is available then at Step the inquiry into priority and time to switch is made as previously described. At Step if it is not time to switch and the priority of the next channel is not lower the Router stays on the current channel at Step .

Refer now to which illustrates a flow chart of exemplary logic for checking the availability of each network interface. Starting at Step processing proceeds to Step where the status of the channel being used is recorded in the database. Furthermore at Step the Router front panel LED s are updated. If at Step it is determined the availability of all channels has not been checked at Step the next channel is identified and at Step the next channel s availability is polled. A channel is not available if it is being used for a mobile device i.e. the channel is already one end of the network. If the channel is not available the processing returns to step . If the channel is determined to be available at step processing proceeds to Step also shown in .

If at Step it is determined that the availability of all channels has been checked at Step the availability of the present channel is determined. If the present channel is available a connection is made at Step . If the present channel is not available processing proceeds to Step for error handling. The error handling procedure is discussed with reference to below. Upon completion of the error handling procedure at Step the channel is set equal to one at Step . At Step the procedure continues as previously described.

Referring now to which is an exemplary flow diagram of the Router error handling logic Step continues from . At Step the present channel is deemed to be non available. At Step the next and previous channels are also confirmed to be non available. At Step an error is indicated to the device or application. At Step an availability routine is run such as that described previously. From the availability routine at Step the processing continues to Step as discussed with reference to .

The Router of the present invention may be used inside a mobile vehicle or carried by a person in a portable application. Further the Router may be provided as an external component connected to a portable device e.g. a laptop computer or may be implemented within the portable device such that the portable device and the Router are provided as one integrated unit. Further the Router may be used in conjunction with or integrated into measuring and testing equipment and transmission equipment. Such a remote device may be needed for very remote monitoring applications such as wildlife studies etc. necessitating the use of multiple Networks.

Referring now to there is shown the software architecture of the Router in accordance with an embodiment of the present invention. The architecture is strictly layered in that data flows only vertically between adjacent layers. The definition of each layer will now be described.

The Application layer consists of various processes that perform services directly related to the function s for which the device is defined. This includes such services as defining a device configuration making decisions about which route to select for the transport of data and performing various diagnostic functions.

The Presentation layer consists of a protocol independent insulating layer between the applications and the lower level networking functions. The Presentation layer implements a Berkley sockets compliant application programming interface API .

The Networking layer performs all processing related to handling the Internet Protocol IP . The main function of the networking layer in this environment is the routing of data passed into the layer from either above or below back out through selected Network Interfaces to deliver that data to the intended destination. The relationship of destination and network interface is maintained by the Configuration Module and Routing Decision Module applications.

The Data Link layer provides logical Network Interfaces through which the Networking Layer may send and receive data. One or more of these Network Interfaces may be active at any time. At least one network interface must be active for the device to function properly. The main purpose of the Data Link layer is to insulate the Networking layer from the details of the many link level protocols used to transport data.

The Device Specific layer deals with the details of establishing and maintaining data communications through various types of communication devices such as radios modems and data controllers. Each Device Specific driver handles the vagaries of configuring and interfacing with various types of communication devices while presenting a uniform interface to the Data Link layer.

The Physical Interface layer handles the direct interface to external components. For example A serial port driver may handle the sending and receiving of individual data bytes through a specific type of serial controller such as an Intel 8250.

A description of the functionality supported by various module blocks as presented in will now be described.

The Configuration Module is an Application layer module that allows a technician to maintain a database of device configuration information. A technician may access the Configuration Module via a diagnostic serial port. Another implementation may allow a technician to access the Configuration module through any of the defined Network Interfaces via a standard socket.

The Routing Decision Module selects the preferred network interface through which outbound data is transmitted. This decision is based upon a variety of metrics including Interface availability Time of day Type of service required Interface priority and others. Examples of various routing metric schemes are presented later.

The TCP IP Socket Interface supports an Application Programming Interface API which for example conforms to the standard Berkley sockets paradigm. Its purpose is to shield the Application Layer from the details of the underlying networking protocols. It allows different network implementations to be employed without the applications being required to adapt.

The TCP IP Router Gateway implements standard IP host support with the additional capability of being able to act as a gateway between multiple networks. IP datagrams received by this layer that are not destined for a local IP host address are forwarded through the network interface that is currently designated as the preferred route for the given destination address. It is possible that the management and selection of preferred routes is implemented by the Routing Decision Module in the Application layer.

The PPP Protocol Driver provides a network interface whose data link protocol conforms to the Point To Point protocol standard. The SLIP Protocol Driver provides a network interface whose data link protocol conforms to the Serial Line Internet Protocol de facto standard. Other protocol drivers may be implemented which provide Network Interfaces which support either existing protocols or future protocols. The intent is to convey that the underlying link layer protocol is transparent to the upper and lower layers and that additional protocols may be easily supported.

The MDC Interface Driver provides device specific support for Mobile Data Controller as described above. The CDPD Interface Driver provides device specific support for a Cellular Digital Packet Data controller. Other device specific drivers e.g. Modem X Interface Driver may be implemented to support current or future devices.

The Serial Port Driver deals with the hardware aspects of asynchronous serial data communications such as manipulating a Serial I O controller or other such external interface. Other physical layer drivers may be implemented which support different external interface devices either existing or in the future.

Although the invention has been described herein with reference to particular means materials and embodiments the invention is not intended to be limited to the particulars disclosed herein rather the invention extends to all functionally equivalent structures methods and uses such as are within the scope of the appended claims.

For example the router of the present invention may be included as an internal component of the mobile device proving for an integrated mobile device. Optionally the router may be implemented entirely as a software process running on for example a portable personal computer. In such an implementation the internal slot s of the personal computer may be provided with network interface s and a software program may serve as the router core. Further data may be routed to the different networks at another level than at the packet level. For example entire messages may be routed over various networks if such a configuration is required.

