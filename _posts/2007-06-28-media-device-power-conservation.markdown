---

title: Media device power conservation
abstract: Power is dynamically conserved in a device by analyzing past processing performance of the device and predicting the amount of power required for future execution. In an example embodiment, a video frame is analyzed to determine what portion of the video frame was needed to render data. If less than the full video frame was needed, at least one power conservation technique is applied to the device for subsequent rendering of data. Power conservation techniques include adjusting the operating frequency of circuitry utilized to render data, adjusting the voltage applied to circuitry utilized to render data, and/or turning off/on circuitry utilized to render data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07925903&OS=07925903&RS=07925903
owner: Microsoft Corporation
number: 07925903
owner_city: Redmond
owner_country: US
publication_date: 20070628
---
The technical field relates generally to computer processing and more specifically to computer processing security.

Power consumption is becoming an area of concern for all types of devices. In the case of portable devices because the capacity of batteries has not significantly improved manufacturers of electronic circuits have been working toward making silicon chips and the like more power efficient. In the case of larger devices e.g. devices that receive power via a wall outlet or the like power consumption is a concern because of the costs associated with the use of power.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description Of Illustrative Embodiments. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

Power is conserved dynamically by determining processor computing performance requirements on a per frame e.g. video frame basis. Power conservation techniques are applied in accordance with the determined performance. In various configurations to conserve power power to hardware is turned off and on applied voltage is scaled applied frequencies are scaled or a combination thereof. In an example embodiment each frame is analyzed to determine the amount of data that was rendered in a respective frame and the portion of the frame utilized to render the data. A history table indicative of past per frame performance is generated and utilized to predict expected power requirements. Parameters affecting power consumption are adjusted in accordance with the predicted power requirements.

Power conservation techniques are applied in accordance with predicted power requirements. Predicted power requirements are determined in accordance with past computing performance on a per frame basis. Power conservation as described is applicable to any appropriate device processor or the like. Power conservation is described herein as applied to a media device that renders video data e.g. game console DVD player as an example application. It is to be understood however that the application of power conservation as described herein is not limited thereto.

A frame can refer to an image to be rendered or a unit of time allotted to render an image. Typically when referred to as an image a frame is one of many images utilized to render a moving picture. Each image is rendered and persisted on a display for a given period of time such as 1 24of a second 1 30of a second 1 60of a second and or of a second for example depending upon the amount of data in the image to be rendered within the given period of time. When referred to as a unit of time a frame is the amount of time allotted to render the image such as the times provided above for example e.g. 1 24of a second 1 30of a second 1 60of a second of a second . A frame rate or frequency is the number of frames in a second. Thus a frame size of 1 24of a second is equated to a 24 Hertz Hz frame rate. Similarly a frame size of 1 30equates to a 30 Hz frame rate a frame size of 1 60of a second equates to a 60 Hz frame rate a frame size of equates to a 5 Hz frame rate.

The amount of data to be rendered in a video game varies through the game. For example object deformations e.g. opening of a door and cloth simulations e.g. fluttering of a character s shirt require rendering of less data than high action scenes. The power required to render game data is often predictable to the extent that high power frames such as frames within which high actions scenes are rendered tend to exist in groups. For example a character may be walking down a hall way and a door may slowly open. Suddenly a monster appears from behind the door and the character enters into a gun battle with the monster. The scenes associated with walking down the hall way and the door opening require less power than the scenes associated with the gun battle with the monster. This quasi predictability is exploited to conserve power.

Video games are typically operated at a given frame rate which can be inefficient because the amount of data to be rendered per frame varies. For example each frame of a game operating at 60 Hz 60 frames per second is approximately 1 60of a second 16 milliseconds ms . However many frames in a game do not require the entire frame duration 16 ms to render data. In accordance with an example embodiment of the present invention performance is analyzed to determine what portion of a frame is needed to render data. This performance is utilized to predict the portion of the next frame needed to render data. Parameters affecting power consumption are dynamically adjusted in accordance with the predicted power requirements. Parameters are adjusted to conserve power. Example power conservation techniques include adjusting voltage applied to circuitry utilized to render data adjusting voltage applied to circuitry utilized to render data and turning power on off to circuitry utilized to render data. For example if it is predicted that less than the entire frame will be needed to render data the operating frequency of the circuitry utilized to render data is decreased the voltage applied to the appropriate circuitry is reduced and or power to appropriate circuitry is turned off. As the prediction indicates that a larger portion of the frame duration will be needed to render data the operating frequency is increased the voltage applied to the appropriate circuitry is increased and or power to the appropriated circuitry is turned on.

The performance is determined on a per frame basis. In an example embodiment the performance is determined by determining the portion of a frame duration utilized to render data. The performance information is maintained to aid in predicting future power requirements. A history table or an equivalent thereto is generated at step for maintaining performance information. The history table is utilized to maintain any appropriate performance information such as information pertaining to frame completion times information pertaining to a percentage or portion of a frame needed to render data information pertaining to a percentage or portion of a frame not needed to render data excess frame duration information pertaining to whether data was render within an allotted frame duration information pertaining to a fraction of the frame time required to construct a frame image or a combination thereof. In an example embodiment the history table can be utilized to record the fraction of the frame time required for constructing the frame. If exact time stamps are not available or the precision is not a concern the history table can be utilized to record whether the frame completed within the specified frame time.

At any point in time performance information pertaining to the previous N frames can be maintained in the history table. N can comprise any appropriate number of frames. N can be determined in accordance with the game title. N can be determined dynamically changing as needed during game execution. In an example embodiment N can be relatively small e.g. N 1 in anticipation that frame requirements will not vary significantly across frames.

Future performance requirements are predicted at step and power affecting parameters e.g. frequency voltage and turning power on off are accordingly adjusted at step . Future performance requirements are predicted in accordance with the processor performance determined for previous frames. In an example embodiment future performance requirements are determined utilizing the history table. At a point in time performance requirements are predicted for the next frame. Performance requirements can be predicted in any appropriate manner. For example in a game scenario N can be set equal to 1 and full frame times can be analyzed. Prior to rendering of the next frame the previous frame is analyzed to determine if the frame finished on time. That is the previous frame is analyzed to determine if all data to be rendered was rendered with the allotted frame time. If the frame did not finish on time the performance capability of the processor can be increased at step e.g. increase frame rate increase applied voltage . If the previous frame finished on time compare it to its previous frame to determine if it took less or more time. If it took less time reduce performance step . If it took more time increase or maintain performance step .

In an example embodiment performance is analyzed to generate a marker. For audio and video content markers can be provided in the frame headers or packet headers that give clues for the computing requirements of the current frame. The marker is associated with a point in the frame duration. The marker is an indication when data rendering is complete. The marker is associated with the same point in the frame. Successive frame are analyzed to determine if data rendering was completed before or after the marker. Parameters affecting power consumption are adjusted accordingly. For example if data rendering was completed before the marker power affecting parameters can be adjusted reduce power consumption. If data rendering was completed after the marker power affecting parameters can be adjusted increase power consumption.

In an example embodiment hardware can predict the frame requirements based on the techniques described above. If the frames start falling behind the hardware can potentially be over clocked to run at above normal performance level for a short duration. Once the frame rate is stable the predictive mechanisms can be used again.

Parameters affecting power can include the dynamically powering on off logic blocks utilized to render data adjusting an applied voltage to logic blocks utilized to render data and adjusting the operating frequency of logic blocks utilized to render data. A logic block can comprise any appropriate portion of circuitry. For example a logic block can comprise a microprocessor or the like. In a system comprising multiple microprocessors utilized for rendering data individual microprocessor can be turned on or voltage applied to individual microprocessors can be adjusted and the operating frequency of individual microprocessors can be adjusted.

In an example embodiment performance can be dynamically adjusted by utilizing multiple PLLs phase locked loops to generate different operating frequencies. To change a frequency the hardware can be coupled to the appropriate PLL. While there is some time required for the PLLs to stabilize this is usually less than powering up a PLL and logic block. Furthermore since power is a square function of voltage it may be advantageous to operate for a longer time at reduced voltage than operate in full on and full off modes.

In an example embodiment an application programming interface API is generated to implement power conservation. The API that exposes control of power affecting parameters such that power consumption can be dynamically and intelligently regulated. An example API can program the following into hardware UseHardwarePrediction and SetHardwarePerformance value . Wherein UseHardwarePrediction enables the use of the history table. Otherwise the hardware will run at maximum performance level and SetHardwarePerformance value sets the performance requirement for the next frame.

For applications in which audio and video frames differ significantly in behavior frame level granularity is still applicable. This works especially well for frames that have low bit rates and hence do not require substantial processing. This is applicable to frames having low bit rates and hence do not require substantial processing. In another example embodiment IBBBBP video frame groups can be averaged and analyzed to predict expected computational requirements. Alternatively each frame can be individually tracked over time in such a group and managed to the desired frame rate.

The processing portion is capable of implementing power conservation as described above. For example the processing portion is capable of determining processor performance on a per frame basis generating a history table predicting future performance requirements adjusting parameters affecting power consumption or a combination thereof.

The processor can be implemented as a client processor and or a server processor. In a basic configuration the processor can include at least one processing portion and memory portion . The memory portion can comprise the history table. The memory portion can store any information utilized in conjunction with conserving power. Depending upon the exact configuration and type of processor the memory portion can be volatile such as RAM non volatile such as ROM flash memory etc. or a combination thereof. The processor can have additional features functionality. For example the processor can include additional storage removable storage and or non removable storage including but not limited to magnetic or optical disks tape flash smart cards or a combination thereof. Computer storage media such as memory portion and include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media include but are not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices universal serial bus USB compatible memory smart cards or any other medium which can be used to store the desired information and which can be accessed by the processor . Any such computer storage media can be part of the processor .

The processor can also contain communications connection s that allow the processor to communicate with other devices such as other devices for example. Communications connection s is an example of communication media. Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media. The processor also can have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. also can be included.

In an example scenario the processor e.g. processor comprises a game console such as an XBOX game console for example. is a block diagram of an example game console via which power conservation can be implemented. The game console along with other devices described herein such as a display device are capable of performing the functions needed to accomplish power conservation as describe above. A typical game console comprises hardware and software that are specifically designed to support a core set of usage scenarios.

Game console has a central processing unit CPU having a level 1 L1 cache a level 2 L2 cache and a flash ROM Read only Memory . The level 1 cache and level 2 cache temporarily store data and hence reduce the number of memory access cycles thereby improving processing speed and throughput. The flash ROM can store executable code that is loaded during an initial phase of a boot process when the game console is initially powered. Alternatively the executable code that is loaded during the initial boot phase can be stored in a FLASH memory device not shown . Further ROM can be located separate from CPU . Game console can optionally be a multi processor system for example game console can have three processors and where processors and have similar or identical components to processor .

A graphics processing unit GPU and a video encoder video codec coder decoder form a video processing pipeline for high speed and high resolution graphics processing. Data is carried from the graphics processing unit to the video encoder video codec via a bus. The video processing pipeline outputs data to an A V audio video port for transmission to a television or other display device. A memory controller is connected to the GPU and CPU to facilitate processor access to various types of memory such as but not limited to a RAM Random Access Memory .

Game console includes an I O controller a system management controller an audio processing unit a network interface controller a first USB host controller a second USB controller and a front panel I O subassembly that may be implemented on a module . The USB controllers and serve as hosts for peripheral controllers a wireless adapter and an external memory unit e.g. flash memory external CD DVD ROM drive removable media etc. . The network interface and or wireless adapter provide access to a network e.g. the Internet home network etc. and may be any of a wide variety of various wired or wireless interface components including an Ethernet card a modem a Bluetooth module a cable modem and the like.

System memory is provided to store application data that is loaded during the boot process. A media drive is provided and may comprise a DVD CD drive hard drive or other removable media drive etc. The media drive may be internal or external to the game console . When media drive is a drive or reader for removable media such as removable optical disks or flash cartridges then media drive is an example of an interface onto which or into which media are mountable for reading. Application data may be accessed via the media drive for execution playback etc. by game console . Media drive is connected to the I O controller via a bus such as a Serial ATA bus or other high speed connection e.g. IEEE 3394 . While media drive may generally refer to various storage embodiments e.g. hard disk removable optical disk drive etc. game console may specifically include a hard disk which can be used to store game data application data or other types of data and on which the file systems depicted in may be implemented.

The system management controller provides a variety of service functions related to assuring availability of the game console . The audio processing unit and an audio codec form a corresponding audio processing pipeline with high fidelity 3D surround and stereo audio processing according to aspects of the present subject matter described herein. Audio data is carried between the audio processing unit and the audio codec via a communication link. The audio processing pipeline outputs data to the A V port for reproduction by an external audio player or device having audio capabilities.

The front panel I O subassembly supports the functionality of the power button and the eject button as well as any LEDs light emitting diodes or other indicators exposed on the outer surface of the game console . A system power supply module provides power to the components of the game console . A fan cools the circuitry within the game console .

The CPU GPU memory controller and various other components within the game console are interconnected via one or more buses including serial and parallel buses a memory bus a peripheral bus and a processor or local bus using any of a variety of bus architectures.

When the game console is powered on or rebooted application data can be loaded from the system memory into memory and or caches and executed on the CPU . The application can present a graphical user interface that provides a consistent user experience when navigating to different media types available on the game console . In operation applications and or other media contained within the media drive may be launched or played from the media drive to provide additional functionalities to the game console .

The game console may be operated as a standalone system by simply connecting the system to a television or other display. In this standalone mode the game console may allow one or more users to interact with the system watch movies listen to music and the like. However with the integration of broadband connectivity made available through the network interface or the wireless adapter the game console may further be operated as a participant in a larger network community.

A computer system can be roughly divided into three component groups the hardware component the hardware software interface system component and the applications programs component also referred to as the user component or software component . In various embodiments of a computer system the hardware component may comprise the central processing unit CPU the memory both ROM and RAM the basic input output system BIOS and various input output I O devices such as a keyboard a mouse a monitor and or a printer not shown among other things. The hardware component comprises the basic physical infrastructure for the computer system.

The applications programs component comprises various software programs including but not limited to compilers database systems word processors business programs videogames and so forth. Application programs provide the means by which computer resources are utilized to solve problems provide solutions and process data for various users machines other computer systems and or end users . In an example embodiment application programs perform the functions associated with power conservation as described above.

The hardware software interface system component comprises and in some embodiments may solely consist of an operating system that itself comprises in most cases a shell and a kernel. An operating system OS is a special program that acts as an intermediary between application programs and computer hardware. The hardware software interface system component may also comprise a virtual machine manager VMM a Common Language Runtime CLR or its functional equivalent a Java Virtual Machine JVM or its functional equivalent or other such software components in the place of or in addition to the operating system in a computer system. A purpose of a hardware software interface system is to provide an environment in which a user can execute application programs.

The hardware software interface system is generally loaded into a computer system at startup and thereafter manages all of the application programs in the computer system. The application programs interact with the hardware software interface system by requesting services via an application program interface API . Some application programs enable end users to interact with the hardware software interface system via a user interface such as a command language or a graphical user interface GUI .

A hardware software interface system traditionally performs a variety of services for applications. In a multitasking hardware software interface system where multiple programs may be running at the same time the hardware software interface system determines which applications should run in what order and how much time should be allowed for each application before switching to another application for a turn. The hardware software interface system also manages the sharing of internal memory among multiple applications and handles input and output to and from attached hardware devices such as hard disks printers and dial up ports. The hardware software interface system also sends messages to each application and in certain case to the end user regarding the status of operations and any errors that may have occurred. The hardware software interface system can also offload the management of batch jobs e.g. printing so that the initiating application is freed from this work and can resume other processing and or operations. On computers that can provide parallel processing a hardware software interface system also manages dividing a program so that it runs on more than one processor at a time.

A hardware software interface system shell referred to as a shell is an interactive end user interface to a hardware software interface system. A shell may also be referred to as a command interpreter or in an operating system as an operating system shell . A shell is the outer layer of a hardware software interface system that is directly accessible by application programs and or end users. In contrast to a shell a kernel is a hardware software interface system s innermost layer that interacts directly with the hardware components.

As shown in an exemplary general purpose computing system includes a conventional computing device or the like including a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. The system memory includes read only memory ROM and random access memory RAM . A basic input output system BIOS containing basic routines that help to transfer information between elements within the computing device such as during start up is stored in ROM . The computing device may further include a hard disk drive for reading from and writing to a hard disk hard disk not shown a magnetic disk drive e.g. floppy drive for reading from or writing to a removable magnetic disk e.g. floppy disk removal storage and an optical disk drive for reading from or writing to a removable optical disk such as a CD ROM or other optical media. The hard disk drive magnetic disk drive and optical disk drive are connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical drive interface respectively. The drives and their associated computer readable media provide non volatile storage of computer readable instructions data structures program modules and other data for the computing device . Although the exemplary environment described herein employs a hard disk a removable magnetic disk and a removable optical disk it should be appreciated by those skilled in the art that other types of computer readable media which can store data that is accessible by a computer such as magnetic cassettes flash memory cards digital video disks Bernoulli cartridges random access memories RAMs read only memories ROMs and the like may also be used in the exemplary operating environment. Likewise the exemplary environment may also include many types of monitoring devices such as heat sensors and security or fire alarm systems and other sources of information.

A number of program modules can be stored on the hard disk magnetic disk optical disk ROM or RAM including an operating system one or more application programs other program modules and program data . A user may enter commands and information into the computing device through input devices such as a keyboard and pointing device e.g. mouse . Other input devices not shown may include a microphone joystick game pad satellite disk scanner or the like. These and other input devices are often connected to the processing unit through a serial port interface that is coupled to the system bus but may be connected by other interfaces such as a parallel port game port or universal serial bus USB . A monitor or other type of display device is also connected to the system bus via an interface such as a video adapter . In addition to the monitor computing devices typically include other peripheral output devices not shown such as speakers and printers. The exemplary environment of also includes a host adapter Small Computer System Interface SCSI bus and an external storage device connected to the SCSI bus .

The computing device may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be another computing device e.g. personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computing device although only a memory storage device floppy drive has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN . Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computing device is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the computing device can include a modem or other means for establishing communications over the wide area network such as the Internet. The modem which may be internal or external is connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the computing device or portions thereof may be stored in the remote memory storage device. It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

While it is envisioned that numerous embodiments of power conservation are particularly well suited for computerized systems nothing in this document is intended to limit the invention to such embodiments. On the contrary as used herein the term computer system is intended to encompass any and all devices capable of storing and processing information and or capable of using the stored information to control the behavior or execution of the device itself regardless of whether such devices are electronic mechanical logical or virtual in nature.

The various techniques described herein can be implemented in connection with hardware or software or where appropriate with a combination of both. Thus the methods and apparatuses for power conservation or certain aspects or portions thereof can take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for implementing power conservation.

The program s can be implemented in assembly or machine language if desired. In any case the language can be a compiled or interpreted language and combined with hardware implementations. The methods and apparatuses for implementing power conservation also can be practiced via communications embodied in the form of program code that is transmitted over some transmission medium such as over electrical wiring or cabling through fiber optics or via any other form of transmission wherein when the program code is received and loaded into and executed by a machine such as an EPROM a gate array a programmable logic device PLD a client computer or the like. When implemented on a general purpose processor the program code combines with the processor to provide a unique apparatus that operates to invoke the functionality of conserving power. Additionally any storage techniques used in connection with power conservation can invariably be a combination of hardware and software.

While power conservation has been described in connection with the example embodiments of the various figures it is to be understood that other similar embodiments can be used or modifications and additions can be made to the described embodiments for performing the same functions associated with power conservation without deviating therefrom. Therefore power conservation as described herein should not be limited to any single embodiment but rather should be construed in breadth and scope in accordance with the appended claims.

