---

title: Visualizing changes to content over time
abstract: A processing device and method are provided for visualizing changes to dynamic content. Dynamic content may be obtained from a content source and a state of the content may be saved. The saved state of the content may be compared with a previously saved state of the content to produce difference data, indicating differences between the saved state of the content and the previously saved state of the content. The obtained content may be presented to a user and may include visual indications pointing out added portions of the content, deleted portions of the content, and/or unchanged portions of the content. In some embodiments, a scheduler may be configured to obtain content and save a state of the content at particular times or upon occurrences of particular events. In various embodiments, aged states of the content may be degraded.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09135362&OS=09135362&RS=09135362
owner: MICROSOFT TECHNOLOGY LICENSING, LLC
number: 09135362
owner_city: Redmond
owner_country: US
publication_date: 20070928
---
Information from sources such as for example the Internet or other sources may be very dynamic over time. For example a news source may add and update articles. A search using a set of query terms may return different results over time because new Web pages may be added changed and deleted and changes to algorithms for computing relevancy of search query results may be modified. Articles on sites which rely on solicited contributions or corrections such as for example Wikipedia or similar sites may change over time.

Users frequently request and view the same content. Users may view the content weekly daily or multiple times per day. Generally users are most interested in changes to the content. For example when viewing a news site users are interested in most recent news articles. When visiting an auction site users wish to determine whether a high bids changed on items of interest. If the content has not been viewed for a long period of time changes to the content since a last viewing may be pervasive making it difficult for users to determine exactly what changed and what remained unchanged.

This Summary is provided to introduce a selection of concepts in a simplified form that is further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

In embodiments consistent with the subject matter of this disclosure a processing device may obtain content from a content source and may save a state of the obtained content. The saved state of the obtained content may be compared with a previously saved state of the content to produce difference data indicating differences between the saved state of the content and a previously saved state of the content. The obtained content may be presented and may include visual indications indicating added portions of the content deleted portions of the content and or unchanged portion of the content based on the produced difference data.

In some embodiments a scheduler may be provided for obtaining content and saving a state of the content under certain conditions such as for example at certain times or when certain events occur.

In various embodiments a format and a type of information saved as a state of the content and or produced as difference data may be configured. In some of the embodiments an application programming interface may be provided to permit an application to configure the format and the type of information saved as the state of the content and or produced as the difference data.

Embodiments are discussed in detail below. While specific implementations are discussed it is to be understood that this is done for illustration purposes only. A person skilled in the relevant art will recognize that other components and configurations may be used without parting from the spirit and scope of the subject matter of this disclosure.

Embodiments consistent with the subject matter of this disclosure provide a processing device and a method for obtaining content from a dynamic content source and saving a state of the obtained content. The saved state of the obtained content may be compared with a previously saved state of the content to produce difference data indicating differences between the saved state and the previously saved state. The obtained content may be displayed to a user and may include visual indications indicating new portions of the content deleted portions of the content and or unchanged portion of the content.

In some embodiments an interface may be provided for configuring conditions for obtaining the content and saving the state of the content. For example embodiments may be configured to obtain content and save a state of the content upon an occurrence of certain events such as for example starting an application shutting the application or other events. Similarly the interface may be provided for configuring times or time intervals for obtaining content and saving a state of the content. For example embodiments may be configured to obtain content and save a state of the content every 30 minutes daily weekly at certain times of the day at certain times of the month or year or at other times.

The content may include websites word processing documents photographs presentations network search results data from web services or other content. In some embodiments the dynamic content may be included on one or more local files of the processing device or on one or more remotely located processing devices accessible via a network.

Processing device may be a user s processing device such as for example a desktop personal computer PC a laptop PC a handheld processing device or other processing device.

Network may be a single network or a combination of networks such as for example the Internet or other networks. Network may include a wireless network a wired network a packet switching network a public switched telecommunications network a fiber optic network other types of networks or any combination of the above.

Server may be a processing device or a group of processing devices configured to work together. In embodiments in which server includes a group of processing devices the processing devices may be configured as a server farm.

Although illustrates an environment having two of server various embodiments may include more or fewer of server .

Processing device may include a bus an input device a memory a read only memory ROM an output device a processor a storage device and a communication interface . Bus may permit communication among components of processing device .

Processor may include at least one conventional processor or microprocessor that interprets and executes instructions. Memory may be a random access memory RAM or another type of dynamic storage device that stores information and instructions for execution by processor . Memory may also store temporary variables or other intermediate information used during execution of instructions by processor . ROM may include a conventional ROM device or another type of static storage device that stores static information and instructions for processor . Storage device may include a compact disc CD digital video disc DVD a magnetic medium or other type of storage device for storing data and or instructions for processor .

Input device may include a keyboard or other input device. Output device may include one or more conventional mechanisms that output information including one or more display screens printers or other output devices.

Communication interface may include a transceiver for transmitting and receiving information to or from network . Communication interface may transmit and receive information via a wireless or wired connection.

Processing device may perform such functions in response to processor executing sequences of instructions contained in a tangible machine readable medium such as for example memory ROM storage device or other medium. Such instructions may be read into memory from another machine readable medium or from a separate device via communication interface .

History saving mechanism may save a state of received dynamic content in one of a number of resolutions. For example a complete state may include enough information to reproduce the content exactly. At a slightly lower resolution a state may include a miniature non interactive version of the received dynamic content. At a bare minimum a state may include enough information to re query content sources such that the content may be reproduced from received query results. In one embodiment a saved state may include an image of obtained content saved pixel by pixel. In some embodiments the saved pixel by pixel image of the obtained content may be a default format for saving a state. Another format of the saved state may include information describing content and layout of the obtained content such as for example hypertext markup language HTML or other information describing content and layout which may be useful for content including web pages. A third format of the saved state may include textual content of a document such as for example a word processing document or other textual document. In other embodiments the saved state may be saved in other formats useful for particular applications.

Application may include a web browser a word processor a photographic viewing application a presentation application a searching application another application or any combination of the aforementioned one or more applications.

When application includes web browser content may be obtained from a dynamic content source via network and a state of the content may be saved. shows the state of the obtained content from a particular dynamic content source being saved on Aug. 15 2007 Aug. 16 2007 and Aug. 17 2007.

When application includes a word processor content of a word processor document may be obtained and a state of the obtained content may be saved. shows a state of the obtain word processor document content being saved on Jun. 5 2007 Jun. 30 2007 and Jul. 14 2007.

When application includes photographic viewing application content of a photographic image may be obtained from a local source or a remote source through network and a state of the obtained content of the photographic image may be saved. shows the state of the obtained photographic content from a particular source being saved on Jan. 4 2007 Feb. 9 2007 and Jul. 4 2007.

When application includes presentation application content of a presentation may be obtained via a local source or via a remote source through network and a state of the obtained presentation content may be saved. shows the state of the obtained presentation content from a particular presentation source being saved on Dec. 15 2006 Mar. 30 2007 and Sep. 10 2007.

When application includes a search application content of a search result such as for example a network search may be obtained and a state of the obtained search result may be saved. shows a state of the obtained search result for a particular search query being saved on Sep. 1 2007 Sep. 2 2007 and Sep. 3 2007.

Difference engine may compare a pair of saved state of contents to produce difference data. Difference data may vary based at least in part on a type of data included in and a format of the compared pair of saved state of contents. For example when the compared pair of saved state of contents includes respective images of the obtained content the difference data may include information with respect to differences pixel by pixel between the respective images. Thus a pair of images may be compared pixel by pixel and produced difference data may include information with respect to pixels changed in a later one of the pair of images.

In some embodiments states may include textual information from a textual document. In such embodiments difference data may include information with respect to changes in textual content from an older saved state of content to a newer saved state of content.

The above mentioned examples of different types of difference data are only exemplary. In other embodiments other types of difference data having other formats may be produced and may in some cases be application specific such as for example containing certain keywords or other information.

Visualizer may display obtained content showing additions changes and deletions made with respect to the obtained content. The changes may be highlighted circled or otherwise indicated. For example new portions of the content may be circled or underlined deleted portions of the content may have a strikethrough and unchanged portions of the content may have a colored background or may be indicated by a lack of circling underlining strikethroughs or other markings. In other embodiments changes may be visually indicated by other methods.

Update scheduler may provide a facility for configuring conditions under which content may be obtained and a state of the content may be saved. For example update scheduler may obtain content and save a state of the content when a triggering event occurs such as for example an application starting an application closing or other triggering events. Further update scheduler may obtain content and save a state of the content at certain times such as for example at particular dates and times at particular time intervals hourly daily weekly monthly or other time intervals or at other times.

The process may begin with processing device determining whether a saving event occurred act . If processing device determines that a saving event occurred then processing device may obtain content from a dynamic source act . History saving mechanism may then save a state of the obtained content act as previously discussed.

Visualizer may then determine whether content is to be viewed act . For example if the occurrence of the saving event resulted from the user requesting content then the content may be viewed. If visualizer determines that the content is to be viewed then visualizer may determine whether there are any previous saved states with respect to the content act . If there are no previous saved states of the content then visualizer may display the content act . Otherwise difference engine may produce difference data by comparing the saved state of the content with a previously saved state of the content act . Visualizer may then display the content which may have visual indicators to indicate changed unchanged and or deleted portions of the content based on the produced difference data act . As mentioned previously in one embodiment newly inserted portions of the content may be indicated by highlighting circling underlining or other visual indicators. Deleted data may be indicated by a strikethrough or other visual indicator. Unchanged data may be indicated by an absence of highlighting circling underlining strikethroughs or other visual indicators. In one embodiment unchanged data may be indicated by a surrounding background of a particular shade or color.

Returning to act if processing device determines that the event is not a saving event then processing device may determine whether the event is a configuration event act . A configuration event may occur when a request is made to configure update scheduler to save state information with respect to content from a particular source upon an occurrence of a triggering event or at a particular time or time interval or when a request is made for configuring a type of state information to save or a type of difference data to produce. In some embodiments a user interface may be provided for a user to enter configuration information for update scheduler . Further in some embodiments an application programming interface may be provided such that an application program may via the application programming interface configure a type and or a format of state information to save and or a type of difference data to produce. If processing device determines that the event is a configuration event then processing device may update configuration information accordingly act .

In other implementations other methods of indicating changed content may be employed. For example if the obtained content is a result of a search listing various sources difference data may indicate which ones of the sources are new. Visualizer may present the content in one embodiment such that new ones of the sources may be listed before previously seen ones of the sources. In another embodiment visualizer may present the content such that only new ones of the sources may be listed.

Processing device may then obtain a next saved state of the content with respect to the particular content act . Processing device may then produce difference data by comparing the last two items of obtained saved states of content act . Processing device may present the particular content with indicators indicating changed unchanged and deleted data as mentioned previously act . The content may be presented by displaying the content on a display screen of processing device or by outputting the content to an output device such as for example a printer or other output device.

Processing device may then determine whether there are any additional saved states of the content act . If there are no additional saved states of the content then the process is complete. Otherwise acts may be repeated.

In a variation of the exemplary processing of a user may provide a date or time range and may specify an indication of a source of content such that the content may be presented with visual indicators indicating added deleted and unchanged data with respect to saved states of the content corresponding to the provided date or time range.

In some embodiments consistent with the subject matter of this disclosure saved state of the content may be degraded such that the saved state of the content may have a lower resolution than as originally saved. For example if textual information is included in the saved state information and the textual information is saved in blocks which may correspond to paragraphs then degrading the saved state information may result in a sentence at a beginning and a sentence at an end of a block being saved with remaining information in the block being deleted. In other embodiments saved state information may be degraded in numerous other ways.

If processing device determines that the saved state of the content is older than the predetermined amount of time then processing device may reduce resolution or degrade the saved state of the content act . Processing device may then determine whether an age of any additional saved states of the content are to be determined act . If the age of at least one additional state of the content is to be determined then processing device may access a next item of the saved state of the content act and acts may be repeated.

If during act processing device determines that the age of additional states of the content information are not to be determined then the process may be completed.

The process illustrated by the flowchart of is only exemplary. In other embodiments consistent with the subject matter of this disclosure additional or different acts may be performed or an order of the acts may differ. Further in some embodiments multiple degradations of saved state information may be performed. For example after a first predetermined age a first degradation of saved state of the content may occur at a second predetermined age a second degradation of the saved state of the content may occur and so on. In some embodiments after a particular predetermined age an item of saved state of the content may be deleted.

The difference data produced by comparing items having degraded saved state information may be degraded. Using the example presented above in which saved state of the content includes textual information saved in blocks or paragraphs a degraded block may include only a first and last sentence of a paragraph. Difference data produced from a comparison of such a degraded block may include degraded difference data such as for example information with respect to differences of retained state of the content information i.e. the first and last sentences of the paragraph . In such a case content presented with indicators for changed unchanged and or deleted data from the difference data may be degraded. For example the above mentioned degraded paragraph may be presented showing only the first and last sentence of a block or paragraph with any changes in the first and last sentence being visually indicated.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms for implementing the claims.

Although the above descriptions may contain specific details they are not be construed as limiting the claims in any way. Other configurations of the described embodiments are part of the scope of this disclosure. Further implementations consistent with the subject matter of this disclosure may have more or fewer acts than as described or may implement acts in a different order than as shown. Accordingly the appended claims and their legal equivalents define the invention rather than any specific examples given.

