---

title: Composition of electronic document layout
abstract: Resolution and composition of electronic document layout are provided. An intermediate text data structure may be generated to hold a “resolved” rich text state for a given document. Properties contained in the “resolved” rich text state are a composite of all relevant properties including user defined and entered properties and including properties associated with the document according to a pre-built document context. This text body resolution process then may be utilized for generating a composite text layout for the text streams associated with a plurality of document components for generating a single rich text stream for presentation to and editing by a user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07941749&OS=07941749&RS=07941749
owner: Microsoft Corporation
number: 07941749
owner_city: Redmond
owner_country: US
publication_date: 20070515
---
Electronic documents enabled by rich applications support editing of document properties by applications document users. In addition a variety of document properties may originate from the context of a document itself. An example of such a context is a document template that has a variety of built in contextual document properties sometimes referred to as a document theme. Unfortunately it is difficult to maintain properties applied to a document by a user separately from properties automatically applied to the document according to the document context or theme while being able to display an editable version of the document in a final form in which all relevant properties are combined.

In addition according to prior systems and methods it is difficult to generate and display a series of rich text elements in a document resource such that they appear to a user as if they are a single rich text element. Prior methods and systems approach this problem by generating a temporary rich text element by concatenating a series of rich text elements and by then performing layout and display on the concatenated series. However the efficiency of such an approach suffers from the need to keep the temporary rich text element synchronized with the underlying rich text data in each element of the series.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended as an aid in determining the scope of the claimed subject matter.

Embodiments of the present invention solve the above and other problems by providing automated composition of electronic document layout. According to an embodiment an intermediate text data structure may be generated to hold a resolved rich text state for a given document. The resolved rich text state is a data structure that is the same as a normal data structure used to represent a rich text stream. However the properties contained in the resolved rich text state are a composite of all relevant properties including user defined and entered properties and including properties associated with the document according to a pre built document context.

The resolved rich text state may be maintained in a form that is suitable for display to a user. Thus efficient layout and editing of a themed document may be accomplished. During a property resolution process for a given document a text body resolved object may be created and may be managed by a text body resolver object for each rich text element contained in an associated document. During a synchronization process each element in the series of rich text elements may be sequentially processed and a resulting portion of rich text that needs to be updated may be spliced into a correct position into the resolved text body of the associated document.

These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory only and are not restrictive of the invention as claimed.

As briefly described above embodiments of the present invention are directed to automated composition of various components of an electronic document into a single rich text stream that may be edited by an editing user. The following detailed description refers to the accompanying drawings. Wherever possible the same reference numbers are used in the drawings and the following description to refer to the same or similar elements. While embodiments of the invention may be described modifications adaptations and other implementations are possible. For example substitutions additions or modifications may be made to the elements illustrated in the drawings and the methods described herein may be modified by substituting reordering or adding stages to the disclosed methods. Accordingly the following detailed description does not limit the invention but instead the proper scope of the invention is defined by the appended claims.

According to one embodiment each text body resolver object associated with each text body may be referred to or pointed to from the edit list so that each text body resolver object associated with each text body may be called for text body resolution when an associated text body is edited as described herein. A master text body resolved object may be utilized for directing the activities of the text body resolution process and of the individual text body resolver objects . That is as will be described below the text body resolved object manages the list of text body resolver objects and the process of generating the flattened text body .

According to an embodiment a first text body user properties may be associated with a first rich text stream applied to a portion of a given document for example a title portion of a document. A corresponding document context may include document context or theme properties associated with the corresponding title section of the document. Similarly a second text body user properties may be associated with a different rich text stream containing user defined properties for a different portion of the document for example a summary section of the document. The document context may correspondingly include the document context or theme properties associated with the summary section of the document. As should be appreciated a rich text stream in the form of a text body user properties may be received for many different portions of a given document to which a user has defined certain properties and may be matched to a corresponding document context for resolution into a single text body resolved state by a corresponding text body resolver object .

According to an embodiment the text body resolved data structure includes data for each individual text body associated with different portions of the associated document. According to one embodiment each text body comprising the text body resolved data structure may be annotated with a version stamp showing the most recent date and time on which an individual text body has been edited and resolved by the text body resolution process . That is for any given document one or more portions of the document may not be edited at all during a given document editing process. Because editing version stamps are applied to each individual text body comprising the text body resolved data structure and ultimately the flattened text body the text body resolution process may readily determine which portions of a given document require resolution with an associated document context when changes are subsequently made to individual text bodies . According to an embodiment the text body resolved data structure thus includes an array of individual text bodies that may be reviewed during the text body resolution process for document resolution as described herein.

The flattened text body is a rich text stream including user defined text properties and text properties associated with a pre defined document context . The resolved rich text state in the flattened text body may be efficiently maintained in a form suitable for display to a user. Thus efficient layout and editing of an associated themed document may be accomplished. For example if a user obtains a document template for preparing a resume document that includes a pre defined document context or document theme the user may edit the document by applying user defined data to the document and by applying various formatting properties to the document for example bold facing color change font change and the like without destroying the document context applied to the document template. That is according to the text body resolved architecture illustrated in the text body resolver objects are operative to receive the user defined properties and to receive separately the document context properties and to combine each of the separate rich text streams associated with each of the user defined properties and the document context properties to create a resolved rich text state.

As should be appreciated each time a user subsequently modifies or edits a portion of such a resolved document the text body resolver objects associated with each rich text stream may be re resolved via a synchronization process to form a subsequent text body resolved state and associated flattened text body . Each time a subsequent edit is made to a subject document the text body resolution process illustrated in may be invoked for applying user edits to the appropriate document context to create a modified version of the flattened text body . Thus a change to a single text body may be resolved to the text body resolved data structure during the synchronization process whereby only the edited text bodies are processed in association with corresponding document contexts to create an up to date text body resolved data structure and associated flattened text body .

When the text body resolution process is required for a given document for example when the document has been selected for display in an example word processing application the text body resolver objects walks through the array of text bodies associated with the text body resolved data structure and the flattened text body to determine which if any individual text bodies need to be processed as described above with reference to . For example if a given text body resolved data structure is comprised of five text bodies and a user has edited one of the five text bodies the text body resolver associated with the edited text body will locate the edited text body based on a comparison of the version stamp applied to the edited text body with the corresponding text body contained in the text body resolved data structure .

Referring to once the appropriate text body resolver object locates an edited text body the text body resolver object generates a record of character properties paragraph properties formatting properties and the like associated with a range of text applicable to the edited text body. The text body resolver then combines the edited text body properties with the associated document context as described above to create a new instance of the text body resolved data structure in the form of a rich text stream which holds the resolved text properties and which is ready for layout and display in an associated document in the form of the flattened text body .

For purposes of further description of the text body resolution process described above is a logical flow diagram of a method employed by the text body resolution process for generating the rich text stream for the text body resolved data structure after the resolution process receives an edited rich text stream and an associated document context as described above. The routine begins at start operation and proceeds to operation where the associated text body resolver object first applies formatting for a given edited text body from the associated document context .

In order to receive the information from the associated document the text body resolver places a call to the document via an application programming interface referred to herein as a text body resolver interface for requesting the rich text stream associated with the text body containing user defined properties and for obtaining an associated document context for generating the text body resolved data structure . At operation the text body resolver object contacts the document via the text body resolver interface and obtains any default settings or other document context information that may be controlled by the application in use with the document for example a word processing application a slide presentation application a spreadsheet application etc.

At operation the text body resolver object applies formatting or other properties associated with the document context received from the document to a new version of the text body resolved data structure . At operation the text body resolver object applies any user specified properties for the associated text body based on the version stamp comparison described above. For example if a user has applied a formatting change for example the application of a new font to a given text range the text body resolver object will apply the new formatting properties to the associated text range on a text run by text run basis or on a character by character basis as required. The changes found in the rich text stream of the text body by the text body resolver are then applied to the text body resolved data structure . According to one embodiment the formatting specified at any step later in the process overrides and hence takes precedence over any formatting that was done earlier. Thus the global formatting specified by the document context is the first step such that it will appear in the final document only in the absence of any other formatting.

At operation any text filters associated with the text range containing the rich text stream are applied by the text body resolver to the text body resolved data structure . For example a well known slide presentation application known as POWERPOINT manufactured by MICROSOFT CORPORATION includes an outline pane that may be deployed adjacent to a display of slides comprising a slide presentation. The outline pane may be used for displaying an outline of text contained in the slides comprising the slide presentation but the text in the outline pane may be displayed according to a default formatting that is different from formatting applied to individual text runs in the associated slides. In order to apply different formatting to the text contained in the outline pane as opposed to the corresponding text contained in the associated slides text filters are applied to the text to filter out the formatting applied to the text in the corresponding slides. According to embodiments of the present invention any text filters that are applied to text contained in the received rich text stream of the text body are applied to the edited rich text stream by the text body resolver object so that when the rich text stream is integrated with document properties in the text body resolved data structure desired text filter settings will be applied.

At operation any properties associated with an input method editor IME used in connection with the received rich text stream or the received document context are applied to the text body resolved data structure by the text body resolver object. For example if the rich text stream is received from an application using a Japanese based input method editor IME any properties imparted to the characters of the rich text stream associated with the construction of complex Japanese characters will be applied to the resulting text body resolved data structure by the text body resolver object.

At operation any document theme properties for example document specified fonts colors and the like are applied to the text body resolved data structure by the text body resolver object. At operation any additional properties for example autofit adjustments for font size and line spacing applied to the associated document are applied by the text body resolver object to the text body resolved data structure . As described above the now up to date text body resolved data structure may be utilized for outputting the flattened text body for presentation to the requesting user by the associated software application. The method ends at operation .

At various times a user may be engaged in editing a document comprised of various document components that are not maintained in a single text stream. It would be advantageous to allow a user to receive the text associated with such disparate document components in a single rich text stream for editing purposes. For example as described above a slide presentation outline pane may include an outline of all text contained in each slide comprising a slide presentation. For example a slide presentation document may include 20 slides each slide having different document contexts . For example a first slide in an example slide presentation document may include a document context having a title section having a first default formatting property and a summary section having a second default formatting property. Slides 2 10 of the example slide presentation document may have a bullet formatting structure applied to each slide in the associated slides. Slides 11 and 12 may have a document context associated with a mixture of textual content and non textual content for example pictures with textual descriptions associated therewith and so on. According to one such slide presentation application an outline pane may be deployed adjacent to a display of the individual slides comprising a slide presentation document and the outline pane may include the textual content contained in each slide of the associated slide presentation document presented in outline form where each text run presented in the outline pane is presented according to a single set of formatting properties for example font type font size color etc. According to embodiments of the present invention the text body resolution process described above may be utilized for generating a composite text layout for the text streams associated with a plurality of document components for example multiple presentation slides for generating a single rich text stream for presentation to and editing by a user such as described for the example outline pane associated with a slide presentation document.

According to the composite text layout embodiments of the present invention if a request is passed to a software application in use for example a slide presentation application for the presentation of a document comprised of the textual content associated with a plurality of text bodies associated with a given document the text body resolution process may be invoked for generating a single rich text stream comprised of each of the requested rich text streams. For example if a user selects an outline pane for the example slide presentation application and document described above the associated slide presentation application may call the text body resolution process for generation of a document comprised of a single rich text stream which in turn is comprised of each of the rich text streams making up each of the disparate slides contained in the selected slide presentation document.

A document context may be generated for applying a default set of properties to each rich text stream that will be extracted from the text body resolved data structure for generating the composite text layout as described herein. That is the single rich text stream that will make up a composite document that is the composite flattened text body described herein may receive document properties for example a default font type font size coloring line spacing and structure etc. according to a document context . Thus when the composite text layout document is displayed the rich text stream making up the composite text layout document will exhibit properties of the associated document context as opposed to the properties that are associated with the text streams extracted from each text body utilized for generating the composite text layout document.

When a request is received by the text body resolution process for the composite text layout described herein the text body resolver object directing the activities of the text body resolution process may parse or walk through the text body resolved data structure for the associated document for example the example slide presentation document and extract each text body that includes textual content that is required for the requested composite text layout. The text body resolver object then retrieves a document context associated with the requested composite text layout for example the outline structure required for the outline pane for the associated example slide presentation document and the text body resolver object generates a new text body resolved data structure with each of the extracted text bodies based on the document context retrieved for the requested composite text layout. A flattened text body is then generated comprised of a single rich text stream that may be presented to the user for example in the example outline pane described above. As should be appreciated description of the present invention in terms of the example slide presentation application outline pane is for purposes of illustration only and is not limiting of the vast number of situations in which a user may desire a single rich text stream comprised of textual content from various portions or components of a given document.

According to an embodiment once the composite text layout for the desired document is generated as described above edits may be made to the composite text layout document and the edits may be applied to the composite text layout document and or back to the original text bodies from which edited portions of the composite text layout document were extracted. For example if a user edits a word in the composite text layout document displayed in a slide presentation application outline pane as described above the edit may be made to the composite text layout document displayed in the outline pane and the edit may likewise be made to text contained in an applicable slide in the associated slide presentation document. In the first instance a synchronization process may be employed by the text body resolution process wherein an updated version of the text body resolved data structure for the composite text layout document is generated in association with an edit made to the composite text layout document.

In the second instance in the composite text layout document an identification may be maintained of the corresponding text bodies for each character position in the rich text stream of the composite text layout document so that changes made in the composite text layout document may be mapped back to and changed in the corresponding text bodies . Alternatively the synchronization process may be employed by the text body resolver process for retrieving a text body resolved data structure associated with the document from which the composite text layout document was generated for example the slide presentation document and the edit made by the user to the composite text layout document may be presented to an appropriate text body resolver object for generation of an updated text body resolved data structure for the original document for example the slide presentation document. Thus if desired the edit made to the composite text layout document may be pushed out to the document from which it was composed.

As should be appreciated applying the edit to both the composite text layout document and to the document from which the composite text layout document was composed may be configurable wherein application of a given edit may or may not be pushed out to the document from which the composite text layout document was composed. For example a user may wish to bold face a word in a composite text layout document presented in an outline pane for a slide presentation document to call the word to the user s attention in the outline pane but the user may not wish for the associated word in the slide presentation document to be bold faced in response.

Referring now to the following discussion is intended to provide a brief general description of a suitable computing environment in which embodiments of the invention may be implemented. While the invention will be described in the general context of program modules that execute in conjunction with program modules that run on an operating system on a personal computer those skilled in the art will recognize that the invention may also be implemented in combination with other types of computer systems and program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Referring now to an illustrative operating environment for embodiments of the invention will be described. As shown in computer comprises a general purpose desktop laptop handheld mobile or other type of computer computing device capable of executing one or more application programs. The computer includes at least one central processing unit CPU a system memory including a random access memory RAM and a read only memory ROM and a system bus that couples the memory to the CPU . A basic input output system containing the basic routines that help to transfer information between elements within the computer such as during startup is stored in the ROM . The computer further includes a mass storage device for storing an operating system application programs and other program modules.

The mass storage device is connected to the CPU through a mass storage controller not shown connected to the bus . The mass storage device and its associated computer readable media provide non volatile storage for the computer . Although the description of computer readable media contained herein refers to a mass storage device such as a hard disk or CD ROM drive it should be appreciated by those skilled in the art that computer readable media can be any available media that can be accessed or utilized by the computer .

By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer .

According to various embodiments of the invention the computer may operate in a networked environment using logical connections to remote computers through a network such as a local network the Internet etc. for example. The computer may connect to the network through a network interface unit connected to the bus . It should be appreciated that the network interface unit may also be utilized to connect to other types of networks and remote computing systems. The computer may also include an input output controller for receiving and processing input from a number of other devices including a keyboard mouse etc. not shown . Similarly an input output controller may provide output to a display screen a printer or other type of output device.

As mentioned briefly above a number of program modules and data files may be stored in the mass storage device and RAM of the computer including an operating system suitable for controlling the operation of a networked personal computer such as the WINDOWS operating systems from MICROSOFT CORPORATION of Redmond Wash. The mass storage device and RAM may also store one or more program modules. In particular the mass storage device and the RAM may store application programs such as a software application for example a word processing application a spreadsheet application a slide presentation application a database application etc.

According to embodiments of the present invention a text body resolution system is illustrated with which the text body resolution process and composite text layout process described above may be performed. According one embodiment all components of the system may be operated as an integrated system stored and operated from a single computing device . Alternatively one or more components of the system may be stored and operated at different computing devices that communicate with each other via a distributed computing environment. Software applications are illustrative of software applications operative to generate and display documents in accordance with the text body resolution system described herein. Examples of software applications include but are not limited to word processing applications slide presentation applications spreadsheet applications desktop publishing applications and the like.

It should be appreciated that various embodiments of the present invention may be implemented 1 as a sequence of computer implemented acts or program modules running on a computing system and or 2 as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance requirements of the computing system implementing the invention. Accordingly logical operations including related algorithms can be referred to variously as operations structural devices acts or modules. It will be recognized by one skilled in the art that these operations structural devices acts and modules may be implemented in software firmware special purpose digital logic and any combination thereof without deviating from the spirit and scope of the present invention as recited within the claims set forth herein. Although the invention has been described in connection with various embodiments those of ordinary skill in the art will understand that many modifications may be made thereto within the scope of the claims that follow. Accordingly it is not intended that the scope of the invention in any way be limited by the above description but instead be determined entirely by reference to the claims that follow.

