---

title: System and method for detecting trading opportunities in financial markets
abstract: A system and method for facilitating trading in financial markets is presented. The system and method provides dealers, salespersons, and traders of securities the ability to anonymously share their own or their client's interest to trade securities, to identify and match potential trading opportunities between the parties, and to automatically notify dealers, salespersons and traders about such potential trading opportunities. The system and method detects a potential trade of a client or dealer, searches a plurality of other dealers and their clients for compatible second potential trades, identifies matching trades between the parties, alerts one or more of the dealers of the matching trades, and facilitates trades between the parties while maintaining their anonymity.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07765152&OS=07765152&RS=07765152
owner: Codestreet, LLC
number: 07765152
owner_city: New York
owner_country: US
publication_date: 20070703
---
This application claims the benefit of U.S. Application No. 60 860 241 filed on Nov. 20 2006 and 60 892 322 filed on Mar. 1 2007.

The present invention relates generally to systems and methods for facilitating trading in financial markets and in particular to a system and method for providing dealers salespersons and traders of securities to anonymously share their own or their client s interest to trade securities to identify and match potential trading opportunities between clients and to automatically notify dealers salespersons and traders about such potential trading opportunities.

Fixed income security refers to a type of investment that provides for certain agreed payments between one party and another. For example when a company issues debt to raise funds backed by the company s assets it is called a Corporate bond and when a mortgage company sells bonds to raise money to provide mortgages and the debt is secured by the mortgages the company issues it is called a Mortgage bond.

Interest rates change over time based on a variety of factors particularly rates set by the Federal Reserve. For example if a company wants to raise money for expanding or improving its business and not a lot of people in the market have free cash to lend the company will have to offer a high rate of interest coupon to get people to buy their bond. In contrast if there are a lot of people in the market trying to get a return on their money the company can offer a lower coupon. Fixed income securities are normally traded on the open market unlike stocks which are traded on exchanges. All fixed income securities from any entity have risks including but not limited to interest rate risk currency risk default risk reinvestment risk liquidity risk credit quality risk political risk and tax adjustment risk amongst other risks.

Although investors may trade marketable bonds among themselves trading of bonds is typically done through a bond dealer or more specifically through the bond trading desk of broker dealers. Broker dealers orchestrate the buying and selling of bonds by connecting all of the interested players brokers as well as by making a market for bonds dealer . That is a dealer has traders who are responsible for knowing all about different groups of bonds and are able to quote a price to buy or sell bonds in those groups. Therefore the dealer provides liquidity for such buying and selling of bonds. Dealers also buy and sell bonds amongst themselves for further trading with its clients or other dealers traders and clients.

In the fixed income markets trading of fixed income securities has traditionally been accomplished via an over the counter market with bond dealers and traders negotiating and completing trades either over the phone or via electronic platforms that facilitate communication between the trading parties. In a typical transaction a bond salesperson learns that their desk is trying to trade a specific fixed income security or bond and determines whether it may be of interest to one of his her customers. The salesperson calls the customer and offers the trade either sale or purchase of the security.

More recently the emergence of electronic request for quote RFQ systems and pure electronic matching systems have threatened the role of the traditional fixed income salesperson. However there is a problem with RFQ and matching systems in that for a trade to be consummated these traditional systems rely on specific interest in a particular security on the part of the buyer and the seller at the same time. While this is appropriate for highly liquid markets it is not a particularly appropriate paradigm for markets that are not particularly liquid such as secondary trading of corporate bonds or mortgages. In these secondary markets there is usually not someone waiting to take the other side of the trade for a specific security that is easily identifiable unlike the situation with highly liquid instruments where it is typically much easier to identify the trading counterparty . In less liquid markets it often becomes a challenge to identify parties that want to take counter positions in a particular trade and therefore it is often the case that interest to buy is expressed in terms of a range of attributes which apply to a number of securities so that the likelihood of identifying a potential selling counterparty increases. That is the seller s general or specific interest in trading fixed income securities having certain attributes must match the buyer s general interest in trading securities with overlapping attributes. Traditionally the salesperson and trader perform this pairing of interests of a buyer and seller. The salesperson learns the relevant trade criteria of his customer and then proposes trades of particular securities that meet his customer s objectives. Being good at making these pairings consummating a trade is how good traders and salespeople differentiate themselves and where significant revenues are derived.

However a disadvantage with relying on a trader or salesperson is that it is difficult for a trader and salesperson to process all of the available market and financial data to identify the numerous trading opportunities available at any one moment. Another disadvantage for a trader and salesperson is that he she must be capable of absorbing and analyzing a lot of information quickly and doing so with nothing but their memories notebooks and computers to support them. The salesperson also must be capable of matching the current trading opportunities with his her many clients wherein each client may have a slightly different trading goal.

Accordingly a system and method is needed for quickly and efficiently processing all of the current and historical market and financial data relevant to the trading of fixed income securities with a salesperson s customers in order to identify logical trading opportunities with those customers. A system and method is needed that is readily available and easy to use displays all of the available market data and research data and exposes trading opportunities where there may be potential interest in doing a trade for a particular market participant client . A system and method also is needed that is easily adaptable for operating on both a salesperson s and trader s trading desk. A system and method is further needed that quickly notifies the availability of a trading opportunity to both salespersons and traders.

The system and method of the invention provides salespersons and traders with immediate notification of trading opportunities of fixed income securities. In particular the system and method describes a sell side fixed income system for a processing current and historical trade portfolio inquiry market data credit and research information b extracting potential trading opportunities between parties and c exposing these trading opportunities to salespersons and traders without exposing the identity of the party who potentially may want to take the opposite side of the trade. The potential to trade is shown via the GUI to the potential participants. The system and method has appropriate features to allow the participants to transact and complete a trade then have the trade cleared without either of the parties having to give up their identity. The net result is a far more appropriate facility for matching interest in the fixed income community where securities do not have the same liquidity and depth of market as do more liquid asset types such as equities and foreign exchange. Although the system and method are particularly applicable to facilitate the trading of fixed income securities it is apparent to one having ordinary skill in the art that the embodiments disclosed herein would be applicable to the trading of other assets having similar liquidity difficulties.

One embodiment of the present system and method is shown in . This system and method collectively system for detecting trading opportunities enable users at multiple dealers such as Dealer A Dealer B and Dealer N each commonly referred to as dealer to access and participate in the system as a single community as well as being part of their own local community within their particular dealer . Each dealer has a plurality of traders such as trader of Dealer A trader of Dealer B and trader of Dealer N sales persons such as sales person of Dealer A sales person of Dealer B and sales person of Dealer N and clients such as client A of Dealer A client B of Dealer B and client N of Dealer N . For convenience each of the traders and may commonly be referred to as trader each sales person and may commonly be referred to as sales person and each of the clients and may commonly be referred to as client . The sales persons interact with clients in the buying and selling of bonds where a client may be an individual investor pension fund manager bank trust company insurance firm or other establishment. A trader is the interface between the sales persons of its dealer e.g. Dealer A and the traders of other dealers e.g. Dealer B and Dealer N

As noted above traditionally client interest on a dealer desk is shared at best verbally between the local salesforce. In contrast the present system allows trading opportunities for a client such as Client A of Dealer A to be matched with an interest to trade with a different client such as Client B of Dealer B . Therefore the system hosts the trade offering across multiple dealers thereby allowing the sophisticated algorithms that process the data for a single dealer to be applied across the data for multiple dealers e.g. Dealer A Dealer B and Dealer N

The system identifies potential trades and sends alerts and collectively alerts to dealers and who then negotiate and consummate a trade through a single data center which accesses one or more databases . The use of a single data center is for convenience and the functionality of the present invention may be achieved via different but comparable configurations as would be known to one of ordinary skill in the art including but not limited to implementations such as redundant data centers or multiple geographically distributed data centers.

In the embodiment shown in the system is organized in three logical tiers the client tier wherein a salesperson trader has a Graphical User Interface GUI executing on a desktop the middle or business logic tier and the enterprise information system EIS tier providing a data persistence layer. The present invention uses middleware such as the commercially available TIBCO Enterprise Message Service EMS to facilitate communications among client and server applications. Middleware provides a stable high performance messaging platform adds built in support for multiple client APIs C C Java and facilitates system design and development. The middleware client tier middle tier and EIS tier provide means for dealers to communicate and means for alerts and notifications to be sent to dealers.

The system is hosted so that the middle tier and EIS layer reside in a single data center with appropriate provisions made for redundancy and failure in the servers computer systems and data networking equipment. However that is for convenience purposes only and as would be known to one of ordinary skill in the art the individual system components could theoretically be distributed among multiple data centers. A GUI executes on a user s computer and communicates with the data center . Dealer s specific data is maintained in a common persistence layer fabric that can be processed as a single composite dataset. Thus any dealer that signs up to use the system immediately becomes a part of the trading community. That dealer s data is reviewed and matched against the data of all of the other dealers to identify and extract potential trading opportunities.

The client tier manages the interaction of end users with the system and consists of four components Trader Salesperson application System Monitoring application and entitlement administration application . In particular the client tier consists of client applications that interact with the Middle Tier via request response messages. Typically these client applications are graphical user interfaces GUI which vary based on the role of the user which is a salesperson or trader . However any client application that implements an application programming interface API message can interact with the middle tier to access and use the system . Traders and salespeople interface with the system via the client tier wherein each such trader and salesperson has a GUI to a trader salesperson application on his her desktop.

The middle tier manages user sessions of the system by processing requests made by the trader salesperson applications in the client tier and providing access to business services which may be hosted in process or remotely available. The middle tier has three major components managed on a business logic server and a rules engine server . The business logic server has an emissary and business services object while the rules engine server has an emissary and a rules engine .

Within the business logic server the emissary is the point of contact for communicating with a user of a client application servicing such user requests maintaining a user s state applying entitlements and distributing information to such users. The emissary relieves the business services object from the burden of managing all the communications with client applications in the client tier . Communication between the emissary and the business services object is preferably via a synchronous API interface. An abstract factory provides various implementations of such an interface thereby providing a layer of indirection so that both local and distributed implementations are provided. For example a local implementation is based on normal Java classes while a distributed implementation is based on a distributed call such as a call to a distributed process using JMS or SOAP or J2EE Session Bean over RMI.

There are important differences between synchronous and asynchronous processing models. Asynchronous behavior imposes significant design and development overhead. For example accessing the business services object asynchronously implies that the emissary is prepared to receive a response at some point in time after the request has been submitted. As a result the emissary is required to cache the session state. Furthermore the emissary must be prepared to roll back state changes if the request fails. In contrast a synchronous interface allows for the emissary to know if the request succeeded or if an exception was raised. This is very useful in terms of grouping closely together the request to the business services and any compensating actions based on the failure of the request to the business services . It also makes testing the business services API much easier.

There are instances when a business services is only available asynchronously. For such cases the system includes a wrapper service to encapsulate the complexity of asynchronous processing and present a synchronous interface to the emissary . As a result the emissary is not aware that it is interacting with asynchronous business services .

Business services objects provide the domain model and encapsulate system data as well as behavior. These business services objects are plain old Java objects POJO and the business logic server API is largely written in terms of these business POJO.

The rules engine server has an emissary for being the point of contact for communicating with and servicing requests of the business logic server . The rules engine server provides a means for analyzing trade information and creating matching trades. The rules engine of the rules engine server has an architecture that consists of an inference engine an execution engine a working memory and a rule base which consists of the matching rules that have been loaded into the rules engine . The rules engine is capable of pattern matching and can be any rule engine as would be known by one of ordinary in the art. Example rule engines include the JBoss JRules rule engine and the Jess rule engine but other rule engines are contemplated as well. Rules are typically loaded when the rules engine is initialized. The working memory contains all facts that have been loaded into the rules engine . A fact is the most basic unit of information with which a rules engine can work such as the business objects of interest e.g. trades axes and trade inquiries. Unlike the rule base working memory is more volatile. For example when a rule is fired it may change the working memory by asserting updating or retracting facts. The pattern matcher in the rules engine is responsible for applying rules to the contents of working memory to create the conflict set i.e. the set of unordered rules that are candidates for execution. After constructing the conflict set the inference engine applies various strategies only some of which are exposed via the rules engine API to order the conflict set and create the agenda. The agenda is the list of rules and their respective order in that list utilized to look for matches between traders . In this embodiment the rule engine will typically take into account the specificity of rules and the relative age of the premises in the working memory during conflict resolution. For example a rule with 4 conditions left hand sides might be deemed more specific than a rule with 3 conditions. In one embodiment the rule engine allows the rule author to explicitly assign a salience value to each of the rules. Finally the first rule on the agenda is fired possibly altering the working memory and the entire process is repeated.

For example one rule for identifying trading opportunities might be as follows a potential trade exists if 1 there is a request indicating potential interest in a market segment and if 2 there is a holder of a bond in that market segment and if 3 the sale of the bond at the current price would yield a profit given the current price of the bond less the holder s cost of the bond and changes in the bond that are associated with changes in the overall market. That rule will trigger when applied to the following facts a customer A purchased a bond from dealer A b the current price of the bond has increased relative to the overall market and c dealer B has customer B who is inquiring into trading opportunities in that same sector of the market. The rule engine will detect that there is a potential unwind situation whereby customer A of dealer A is encouraged to take his profit and customer B of dealer B wants to buy that bond because it fits his desire to buy into that sector. In this example dealer A would be notified that customer A has a bond that could be of interest to customer B of dealer B even if customer A was not necessarily actively offering the bond up for sale.

The timing of rule engine invocation i.e. when the execution cycle described above is initiated is implementation specific. In general the rules engine allows other applications such as the business logic server to explicitly initiate the execution cycle via the rule engine API. In addition the rules engine provides methods to execute the rules engine in its own thread of execution thereby controlling the initiation of the execution cycle is up to the rules engine . A beneficial result of this is that the rules engine can rapidly detect new matching trades as they are created as a result of changing market conditions. These new trading opportunities may not have existed when the users first entered their potential trades but later become matching trades as a result of changes in the market. The system therefore enables traders to quickly identify and present new trading opportunities to their clients .

In an alternative embodiment having an in process rules engine configuration the business logic server contains an embedded rules engine . In this configuration the business services of the business logic server interacts directly with the rules engine . This configuration may be preferable when the number of rules is small and the rate of change in facts is low.

The enterprise information system EIS tier provides access to the system s database s and any existing enterprise systems. The EIS tier has a database server which consists of two components a database and other enterprise information repositories such as LDAP file system etc. In one embodiment the EIS tier employs the commercially available Hibernate system as its object relational database persistence and query service persistence system . Although used for convenience any comparable persistence system can be used to develop persistent classes having object oriented functionality including but not limited to association inheritance polymorphism composition and collections. Queries are expressed in portable SQL extensions HQL or in native SQL.

In the persistence system of the EIS tier critical data entities of the system e.g. such as trades and axes information persist in a relational database. Also the mapping of application objects to the relational database uses the following design patterns domain model identify data mapper and optimistic offline locking. Thus the business services of the business logic server the entitlement administration application of the client tier and the rules engine of the rules engine server access the data of the persistence system via the EIS tier .

Alternatively as shown in one or more of the functions of the middle tier are hosted remotely. For example in this embodiment a remote external analytics server has an analytics engine for communicating with the business services via a well defined API such that the business services is an out of process user. Therefore the middle tier is configured to call out to the analytics server at appropriate points in its processing while the business services itself processes a request from the client tier . In fact the middle tier need not notice any difference in execution calling structure or time delay between an in process configuration of and a remote analytics server configuration of .

The client tier of this alternative embodiment also has an error handling application for receiving error messages e.g. a server response error or a business object error. Although the middle tier is responsible for managing a session for the system the client tier has to be able to handle certain error conditions. For example if client A is connected to a first emissary and client A fails before the emissary has published a message to client A then the emissary may retain the message for later delivery if the message is persistent and does not expire. If client A restarts the message from the terminated session would then be delivered to client A . In this case the error handling application must discard all messages to client A that are not from the current session.

The logical tiers of one embodiment may be implemented in a number of different structures. The following discussion provides architectural details on one embodiment of the present invention but it should be known that other architectural structures are equally applicable.

The client tier provides users such as traders and sales persons a rich user experience and seamless integration with desktop applications such as Microsoft Excel. In one embodiment trader salesperson applications are written in C .NET to allow rich user interfaces.

The middle tier is designed using the well known pipeline design which also is ported for use in the client tier . Interaction with the middle tier is accomplished using JMS and specifically TIBCO EMS is selected as the JMS provider. In alternative embodiment the interaction with the middle tier is accomplished using Web Services SOAP.

The processing of the middle tier commences upon receipt of an incoming user request from the client tier and is handled by a processing pipeline. This pipeline design is based on the pipes and filters architectural pattern. In this pattern the task of a system is divided into several sequential processing steps. Each processing step is implemented by a filter component. The filters are connected by pipes and the output of one filter is used as the input to the subsequent filter.

The middle tier is scaled by deploying multiple JMS daemons and or multiple emissary processes in any number of configurations. The simplest possible deployment consists of a single JMS daemon and a single emissary process where in this deployment the login JMS daemon and the normal message processing daemon are one and the same. In another deployment there is one JMS daemon and two emissary processes wherein each emissary hosts a separate user session. Typically in such deployments the system is being throttled by the processing at the emissary. Scalability is achieved by adding additional emissary processes. Additionally in alternative embodiments the middle tier may deploy multiple JMS daemons due to geographic distribution and or very large number of clients accessing the client tier .

When a deployment is geographically distributed with each geographic location running multiple JMS daemons connecting the two or more locations is best achieved by setting up zones. As shown in there are two zones New York NY and Tokyo TK . In addition there is an overlapping zone WW . This embodiment illustrates a distributed system where multiple New York clients such as traders and sales persons located in New York and multiple Tokyo clients such as traders and sales persons located in Tokyo access the system of the present invention to identify negotiate and consummate a trade. The NY clients of the client tier access the middle tier through NY JMS Daemon and NY Emissary as well as through NY JMS Daemon and NY Emissary . Similarly the TK clients of the client tier access the middle tier through TK JMS Daemon and TK Emissary as well as through TK JMS Daemon and TK Emissary . The two zones communicate via the connection of NY JMS Daemon and TK JMS Daemon

In this embodiment when a NY Emissary publishes a message to NY JMS Daemon the message travels one hop to NY JMS Daemon . When the message reaches NY JMS Daemon the message crosses into zone WW and its hop count is reset to zero. Since the hop count of the message is zero NY JMS Daemon forwards the message to TK JMS Daemon where the message crosses zone boundaries again and enters zone TK . TK JMS Daemon forwards the message to TK JMS Daemon . The result of this scheme is that each user of the system is in complete communication with all other users.

The operation of the system is shown on . Also for convenience purpose only the present invention is described in terms of three dealers Dealer A Dealer B and Dealer N . However the system is adaptable to any number of dealers .

Upon a client e.g. client A logging into the system via the client tier the system detects if a potential trade exists. If a potential trade exists the system will notify either the salesperson covering the relevant client account or an associated trader of the potential trade.

A beneficial aspect of the system is that during processing of the aggregated data from all dealers the executing algorithms not only look for exact matches of interest to trade but also look for potential trading interest between parties. Exact matching is what occurs on typical financial exchanges and in particular on electronic matching venues ECNs . A major differentiating point of this system and method over the prior art is that it searches for and identifies potential trading interest in addition to attempting to intersect actual trading interest as is typically done on electronic matching facilities. Potential trading interest covers a wide range of possibilities but is preferably directed to the many reasons for why a trade might occur. In one embodiment and for convenience purpose only potential trading interest occurs because of any one or more of the following reasons 

A chance to buy or sell something to arbitrage a price discrepancy between cash and derivatives markets.

A chance to buy or sell something from to a client to improve a desired characteristic of their portfolio

Each of the above criteria is applied against each dealer s holdings as well as their clients holdings trading history and expressed interest in particular securities. This result is matched with every other dealer participating in the system and those dealers clients . The net result is that the community of participants on the system and their clients form a set of potential trading partners with each dealer and their clients being a potential trading partner of every other dealer and his clients . Rather than a trading exchange where the community of users are matching specific stated securities to trade in this community potential interest to trade is matched against other potential interest and brought to the attention of the two potential participants in the trade.

If a potential trade is detected processing proceeds to search other dealers for a compatible trade. If no compatible trade is found then processing returns to operation until a new potential trade is detected. Once a compatible trade is found processing continues in order to identify a matching trade . Upon identifying a matching trade the system initiates a trade handler system to notify the appropriate traders at the respective dealers desks that a matching trading has been detected and identified. Traders are not told the identity of either the other trader or the other trader s clients . In an alternate embodiment the traders know the identity of the other trader but not the trader s client . The trade handler system also receives responses from the traders about the matching trade and if desired consummates the trade by having it settled by a neutral clearing party that shields the trading client s identity. In an embodiment where the traders know the identity of the other trader or where traders have identified themselves to each other or where the traders belong to the same dealer it may be possible to trade directly without using a neutral clearing party.

The operation of the trade handler system is shown on . Processing starts with the trade handler system alerting the traders such as trader of Dealer A and trader of Dealer B that a matching trade has been identified. There are several different notification schemes for the system . In one embodiment the alert handler system alerts both traders about the matching trade simultaneously. In another embodiment the alert handler system initially alters only the trader of Dealer B . In yet another embodiment the alert handler system initially alerts only the trader of Dealer A

The operation of a trader upon receipt of an alert is described in terms of trader of Dealer A only for convenience. Each trader receiving an alert performs essentially the same functionality. Upon receipt of an alert the trader sales person application of the corresponding client tier receives the alert and the matching trade is reviewed to determine whether the trader or client likes the matching trade . The trader at this time may contact his client or the appropriate sales person to either get approval to make the trade or to negotiate the details of the trade. Once the trader determines whether to accept the matching trade or not the trader responds to the alert by sending notice back to the data center operating in the middle tier .

As noted above trader of Dealer B follows the same procedure as described above for Dealer A . That is trader receives the alert reviews the matching trade and responds to the alert

Upon receiving the responses from the traders the alert handler system determines if the matching trade is to be consummated. If there is not to be a trade then processing ends . If there is to be a trade then the trade is consummated . The matching trade settles as per conventional e trading practices and processes with the exception that the identity of the traders and Dealer A and Dealer B are kept anonymous. Processing then ends .

In this embodiment both the trader of Dealer A and the trader of Dealer B receive alerts at the time a matching trade is identified. In an alternative embodiment the trade handler system initially only sends an alert to one of the traders of a matching trade . For example when a trader enters an inquiry about a potential trade into the system alerts are sent only to those traders with potentially matching trades but not the trader who entered the inquiry regarding the potential trade into the system . Only when one of the traders alerted as having potentially matching trades accepts will the trader who entered the inquiry become aware of a potentially matching trade . In this fashion those traders who received the alert will be further screened from potential communications from the trader who originally entered the inquiry.

As another example Dealer A is axed in a particular bond ABC. The system detects that Client B of Dealer B has been accumulating this ABC bond over the past few months. The system alerts a trader of Dealer B that there is an axe out in the dealer community that may be of interest to Client B . If trader of Dealer B is interested in pursuing this opportunity he approves the alerting of Dealer A of the potential inquiry not giving up either his trader name his dealer name or his client name. Once both Dealer A who is axed in the bond and Dealer B who has the client interest have both expressed interest in following up on this opportunity they are put in touch electronically but anonymously. The respective traders can then follow up on the opportunity by determining a price for the axe contacting the prospective Client B and determining if a trade is to be consummated.

If a trade is consummated the system preserves anonymity between all of the traders and dealers . In the above example Client B of Dealer B trades with Dealer B and Dealer B in turn makes an automatic opposite trade with an intermediary clearing broker who serves the purpose of clearing trades between dealers anonymously. Dealer A in turn makes a corresponding automatic trade with the clearing broker. If the axe within the system at Dealer A was in fact an expression of a client A s interest then Dealer A after consummating the deal with the clearing broker makes a final trade with client A . This series of trades through a common intermediary broker preserves anonymity and is represented as follows 

In this way although ultimately clients of two different dealers end up trading selling and buying a bond neither of the two dealers nor either of the two clients learns the identity of who is on the other side of the trade. This anonymity is essential in the markets to allow dealers the security to share their clients trading interests with other dealers without the fear of potentially being cut out of the trade by another dealer .

The system is a multi user system with traders and salespeople on the fixed income sell side desk being the prime participants.

The system encompasses bi directional communication whereby a trader communicates offerings of specific securities or general interest that he may have. In turn salespeople communicate a client inquiry anonymously amongst the other salespeople and traders .

The system captures all data entered into the system by all users on the system and preserves it for future analysis. In addition external data sets such as trades market data securities master research and credit analysis are input automatically into the system .

The system analyzes all of the data in the system relative to client trading patterns and current and previous client interest and exposes opportunities to sell particular fixed income securities within the system to a particular client or to consummate a swap or trade between two clients . The system does so automatically while preserving anonymity of the potential client .

The unique aspect of the system is that the system not only exposes opportunities for trades between clients of a single trading desk but is also able to expose trading opportunities between clients of one dealer with those of another dealer . Likewise the system exposes opportunities to trade between one dealer s trading desk and another dealer s client or traders .

While various embodiments of the present invention have been described above it should be understood that they have been presented by the way of example only and not limitation. It will be understood by those skilled in the art that various changes in form and details may be made therein without departing from the spirit and scope of the invention as defined. Thus the breadth and scope of the present invention should not be limited by any of the above described exemplary embodiments.

