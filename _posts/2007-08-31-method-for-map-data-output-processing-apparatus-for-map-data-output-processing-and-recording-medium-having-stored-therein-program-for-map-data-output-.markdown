---

title: Method for map data output processing, apparatus for map data output processing, and recording medium having stored therein program for map data output processing
abstract: A computer-implemented method of map data output processing includes the operations of: extracting a plurality of map elements satisfying a predetermined condition from a map data storage unit storing map data including map elements; determining output frames of a minimum size each covering at least one of the extracted map elements, with a fixed scaling factor for all the extracted map elements, among a plurality of types of output frames predefined to constitute an entire available output area per page alone or in combination; clipping out map areas corresponding to the determined output frames from the map data stored in the map data storage unit; and generating output data by embedding the clipped-out map areas in the entire available output area per page.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08355158&OS=08355158&RS=08355158
owner: Fujitsu Limited
number: 08355158
owner_city: Kawasaki
owner_country: JP
publication_date: 20070831
---
Conventionally for a page format with a plurality of frames for embedding maps a print layout has been manually determined by specifying map areas to be assigned to the respective frames and the scaling factor for the maps.

Forcing the maps into the page format results in loss of flexibility in the number of maps included per page. On the other hand removing the frames to eliminate restrictions on the area and shape of each map causes blanks between the maps and increases waste. Further manual setting takes time and human effort.

One or more embodiments of the present invention provide a technique enabling automatic layout and output of map areas that include map elements to be output.

To achieve the above and or other aspects and advantages embodiments of the present invention include a method of map data output processing including extracting a plurality of map elements satisfying a predetermined condition from a map data storage unit storing map data including map elements determining output frames of a minimum size each covering at least one of the extracted map elements with a fixed scaling factor for all the extracted map elements among a plurality of types of output frames e.g. predefined to constitute an entire available output area per page alone or in combination clipping out map areas corresponding to the determined output frames from the map data stored in the map data storage unit and generating output data by embedding the clipped out map areas in the entire available output area per page.

Additional aspects and or advantages will be set forth in part in the description which follows and in part will be apparent from the description or may be learned by practice of the invention.

These together with other aspects and advantages which will be subsequently apparent reside in the details of construction and operation as more fully hereinafter disclosed and claimed reference being had to the accompanying drawings forming a part hereof wherein like numerals refer to like parts throughout.

Reference will now be made in detail to embodiments examples of which are illustrated in the accompanying drawings wherein like reference numerals refer to the like elements throughout. Embodiments are disclosed below to explain the present invention by referring to the figures.

By way of example for processing of map data as shown in data as shown in is stored in the basic data storage unit . In the map has the origin of position coordinates set at the lower left corner and includes eight elements. Although this embodiment illustrates an example in which the elements are farm fields the elements are not limited to farm fields. shows a farm field information table in which the element ID and farmer s name code are registered. Although data items associated with element IDs are farmers in this embodiment the data items are not limited to farmers. shows an element information table in which the element ID LLX the X coordinate at the lower left corner LLY the Y coordinate at the lower left corner URX the X coordinate at the upper right corner and URY the Y coordinate at the upper right corner are registered.

The output unit outputs data of a generated graphic document to the printer or the like operation S . If the server is implemented as a standalone computer the graphic document may be displayed on its display device. Also in a client server system as shown in the graphic document may be displayed on a display device of a user terminal requesting the output.

An exemplary graphic document that is output at the printer or the like through the above processing is shown in . In the example of a map display area of the display area is divided into output frames such as the upper half the left half of the lower half and the halves of the right half of the lower half. In each output frame a map including farm fields is displayed to fill up the output frame. The maps include farm fields numbered to . Specifically the map in the upper half shows farm fields Nos. to except and . No. is not intended to be output in this map. The map in the left half of the lower half shows farm fields Nos. to . The upper map in the right half of the lower half shows farm fields Nos. and . The lower map in the right half of the lower half shows a farm field No. . In this manner farm fields adjacent to some extent are displayed together in a map clipped out with a large output frame. Farm fields that are small or concentrate in a small area are displayed in a map clipped out with an output frame matching their sizes. The same scaling factor is used for all maps to prevent a user referring to the map display area from confusion in comparing the area of the farm fields or evaluating the cultivated acreage.

The polygon grouping processing will be disclosed with reference to . The outline will be disclosed with reference to to C and . As shown in from vertex coordinates of a polygon corresponding to a farm field to be output the polygon grouping processing unit generates a rectangle covering the polygon and generates a buffer area by expanding the rectangle with a predetermined percentage. Then as shown in if no other buffer areas overlap the buffer area the buffer area is left as an independent buffer area and subjected to processing subsequent to the polygon grouping processing unit . On the other hand as shown in if a buffer area of one polygon overlaps a buffer area of another polygon the polygon grouping processing unit generates a new buffer area covering the buffer areas and and performs subsequent processing.

The polygon grouping processing unit does not need to determine overlaps between buffer areas as long as an area covering all polygons to be output as shown in is within the maximum printable area.

The polygon grouping processing unit receives a search keyword such as a farmer s name from a user terminal and searches the farm field information table the element information table and so on stored in the basic data storage unit . The polygon grouping processing unit extracts data about objects to be output and stores the data in storage for example main memory operation S of . The polygon grouping processing unit then specifies and sets a default scaling factor operation S . Alternatively the user may specify the scaling factor.

By using the data about the polygons to be output extracted in operation S the polygon grouping processing unit obtains coordinate values of the entire area covering the polygons and stores the values in for example the main memory operation S . As disclosed in the polygon grouping processing unit reads out coordinate values of all polygons to be output determines the minimum and maximum X coordinate values and the minimum and maximum Y coordinate values and determines the coordinate values of the entire area LL and UR .

The polygon grouping processing unit then determines whether the determined entire area is within the size of one page operation S . In this embodiment a PaperSize definition table e.g. as in may be held and data in the table may be used. Alternatively a lesser amount of data such as only data items for the output frame size PaperSize 0 may be held while the remaining data items may be determined by computation.

In the example of the output frame size PaperSize as well as the point value to be disclosed below output size A lateral size and output size B longitudinal size are registered. In this embodiment the PaperSizes 0 to 3 are used and the point values are defined as 8 4 2 and 1. The point value is reduced by half as the PaperSize is increased by one. As to the output sizes A and B either the longitudinal size or the lateral size is reduced by half as the PaperSize is increased by one. Specifically the lateral size is reduced by half as the PaperSize is changed from 0 to 1 the PaperSize is an odd number . The longitudinal size is reduced by half as the PaperSize is changed from 1 to 2 the PaperSize is an even number . The lateral size is further reduced by half as the PaperSize is changed from 2 to 3 the PaperSize is an odd number . Given the values for the PaperSize 0 this fixed rule enables computation of the remaining values.

If the determined entire area is within the size of one page the polygon grouping processing unit sets data into a PRINTINFO table as in stored in the automatic layout structure storage unit . For example the polygon grouping processing unit registers the data LL and UR about the entire area in association with the first extracted polygon structure number 0 and sets group flags of the other polygons to True operation S . After operation S the process returns to the initial processing via a terminal B of .

If the entire area is not within the size of one page the polygon grouping processing unit sets buffer areas as shown in for all polygons and registers their area data LL and UR in the PRINTINFO table operation S .

The polygon grouping processing unit identifies one unprocessed polygon with its group flag set to False operation S . For example it identifies the polygon closest to the LL of the entire area. The process transfers to processing in via a terminal A.

The polygon grouping processing unit initializes a counter n to 1 operation S and determines whether the buffer area of the identified polygon is within one page operation S . That is it is determined whether or not the buffer area of the identified polygon is within the printable area per page defined by A and B.

If it is determined that the buffer area of the identified polygon is not within the printable area per page the polygon grouping processing unit determines whether n 1 operation S . That is before combining buffer areas as shown in the polygon grouping processing unit determines whether the buffer area of the polygon is not within one page. If it is determined that n 1 the previously adopted scaling factor is inappropriate. Therefore the polygon grouping processing unit changes the scaling factor for further scale down according to a predetermined rule operation S and returns to the processing of operation S in via a terminal C. The user may be prompted to specify the scaling factor.

If n 1 then that the buffer area has become too large due to excessive buffer area combination. Therefore the polygon grouping processing unit performs processing of operation S and the following operations. Operation S will be disclosed later.

If it is determined in operation S that the buffer area of the identified polygon is within one page the polygon grouping processing unit determines whether the buffer area of the identified polygon overlaps other buffer areas operation S . If it is determined that the buffer area of the identified polygon overlaps other buffer areas as shown in the polygon grouping processing unit provisionally generates a new buffer area covering the other overlapping buffer areas and stores the area data LL and UR about the new buffer area in storage for example the main memory operation S . A history of the buffer area data is saved because the buffer area may be reset in operation S as disclosed later. Here the PRINTINFO table is not updated but the data is temporarily saved. Alternatively the PRINTINFO table may be updated while the last data is separately saved. The polygon grouping processing unit then increments n by one operation S and returns to the processing of operation S. If it is determined that the buffer area of the identified polygon does not overlap any other buffer areas the polygon grouping processing unit transfers to operation S.

In operation S since the buffer area has become too large due to excessive buffer area combination as mentioned above the polygon grouping processing unit resets the provisionally set last buffer area and validates the data about the buffer area preceding the last buffer area operation S .

After operation S or if it is determined in operation S that no other buffer areas overlap the polygon grouping processing unit registers the data LL and UR about the resulting buffer area in the PRINTINFO table in association with the identified polygon operation S . At this point if buffer areas have been combined with the identified polygon the polygon grouping processing unit sets the group flag of the combined polygons structure numbers to True. That is if buffer areas have been combined together the data about the combined buffer areas is registered in association with one polygon while the records of polygons corresponding to the other buffer areas are invalidated.

The polygon grouping processing unit then determines whether all polygons with their group flag set to False have been processed operation S and if there is an unprocessed polygon returns to operation S in via a terminal D. If all polygons with their group flag set to False have been processed the polygon grouping processing unit returns to the initial processing.

By performing the above processing the polygon grouping processing unit can combine buffer areas of as many adjacent polygons as one page can include and set them to be collectively output. Since dividing the original map into too many portions would obfuscate the relationship among them they are combined as much as possible.

The output graphic frame size determination processing will be disclosed with reference to . The output graphic frame size determination unit identifies an unprocessed polygon with its group flag set to False in the PRINTINFO table operation S . The output graphic frame size determination unit also initializes the counter n i.e. the PaperSize counter to 1 operation S .

The output graphic frame size determination unit determines whether the buffer area of the identified polygon has a lateral size larger than An obtained from the PaperSize definition table e.g. as in or a longitudinal size larger than Bn operation S . The suffix n of An or Bn denotes the current counter value. For example when the counter n 1 it is A or B that is the value of the output size A or B for the PaperSize 1 in the PaperSize definition table of . Since it has been determined in the polygon grouping processing whether or not the buffer area is within A and B the output size for the PaperSize 0 representing the size of one page determination in this processing is made starting from the size that is one size smaller.

If it is determined that the buffer area of the identified polygon has a lateral size larger than An or a longitudinal size larger than Bn operation S the output graphic frame size determination unit sets a variable s representing the PaperSize to n 1 operation S .

If the buffer area of the identified polygon has a lateral size smaller than An and a longitudinal size smaller than Bn operation S the output graphic frame size determination unit increments n by one operation S . It is determined whether n exceeds 3 operation S . If n is less than 3 the output graphic frame size determination unit returns to the processing of operation S. Although the present embodiment processes up to 3 this number may be changed to adapt to other division modes.

The PaperSize and a corresponding point value are registered in the PRINTINFO table according to s operation S . The point value may be obtained from the PaperSize definition table as in .

The output page grouping processing will be disclosed with reference to . The output page grouping processing unit first initializes a counter j representing the size to 0 and initializes a variable PAGENO representing the page number to 1 operation S . It is assumed that j 0 corresponds to a point value j 1 corresponds to a point value j 2 corresponds to a point value and j 3 corresponds to a point value . That is the output page grouping processing unit processes polygons in order of decreasing size. By processing in order of decreasing size the output page grouping processing unit can eliminate blanks in a page and place maps without wasting the space. The output page grouping processing unit also initializes a variable RESTPP for managing the remaining points to 8 and initializes the page serial number to 0 operation S .

The output page grouping processing unit identifies one unprocessed polygon with its group flag set to False in the PRINTINFO table operation S . The output page grouping processing unit determines whether the identified polygon is a polygon corresponding to the size j operation S . If it is not a polygon corresponding to the size j the output page grouping processing unit transfers to operation S. If it is a polygon corresponding to the size j the output page grouping processing unit updates the RESTPP to RESTPP points operation S . The output page grouping processing unit registers one record for the polygon corresponding to the size j in a PRINTAREA table in the automatic layout structure storage unit operation S .

The output page grouping processing unit then increments the page serial number by one operation S . The output page grouping processing unit determines whether the variable RESTPP for managing the remaining points is 0 operation S . If the RESTPP is not 0 the output page grouping processing unit transfers to operation S. If the RESTPP is 0 the output page grouping processing unit increments the variable PAGENO by one initializes the RESTPP to 8 and further initializes the page serial number to 0 operation S .

The output page grouping processing unit then determines whether all polygons with their group flag set to False have been processed operation S . If there is an unprocessed polygon with its group flag set to False the output page grouping processing unit returns to operation S. If all polygons with their group flag set to False have been processed the output page grouping processing unit increments j by one operation S . The output page grouping processing unit determines whether j exceeds 3 operation S and if not returns to operation S via a terminal E. Otherwise it returns to the initial processing.

By performing the above processing the output page grouping processing unit determines a polygon combination in each page. Here since the combination processing is performed in order of decreasing size and the sizes of the output frames are appropriately predefined the map display area in each output page will not have blanks nor will it overflow. That is in this embodiment only ten patterns of page layout as shown in exist so that the polygon combination is automatically determined as any one of these patterns.

The graphic placement determination processing will be disclosed with reference to . The graphic placement processing unit first initializes the variable PAGENO for managing the page number to 1 operation S . The graphic placement processing unit also sets initial values for coordinates STARTPOINT X Y of a reference point at the upper left corner where a map is to be placed operation S . Specifically 0 0 are set. Further the graphic placement processing unit sets a position flag which indicates whether the processing is being performed for the upper layer or the lower layer of the printable area to True as an initial state operation S . True represents the upper layer and False represents the lower layer.

The graphic placement processing unit then refers to the PAGEAREA table as in to identify one unprocessed polygon corresponding to the PAGENO operation S . The graphic placement processing unit performs processing of generating a capture for the identified polygon operation S .

For a buffer area of the identified polygon determined as shown in the graphic placement processing unit uses the area data LL and UR in the PRINTINFO table as in to compute the coordinate values of the centroid point of the buffer area as shown in and stores the area data in storage for example the main memory operation S . The graphic placement processing unit determines the PaperSize of the identified polygon from the PRINTINFO table operation S . Then as shown in with reference to the computed centroid point the graphic placement processing unit obtains the lateral and longitudinal lengths according to the PaperSize set for the polygon e.g. obtains the lengths from the PaperSize definition table in to compute vertex coordinates LL and UR . As shown in the graphic placement processing unit uses the vertex coordinates to clip out a relevant area from map data stored in the basic data storage unit and generates a capture operation S . The generated capture is stored in storage for example the main memory.

Returning to the description of the graphic placement processing unit places the generated capture at the STARTPOINT X Y operation S . That is the graphic placement processing unit places the upper left vertex of the generated capture at the STARTPOINT X Y . The STARTPOINT X Y is initially set at the upper left point in the printable area as shown in and the upper left vertex of the capture is placed to coincide with the point as shown in .

The graphic placement processing unit refers to the PRINTINFO table as in to determine whether the points of the polygon identified in operation S are operation S . If the points of the identified polygon are this polygon alone will constitute one page and therefore updating of the STARTPOINT X Y to be disclosed below is not necessary. Thus if the points of the identified polygon are 8 the graphic placement processing unit transfers to processing in via a terminal G. If the points of the identified polygon are not 8 the graphic placement processing unit transfers to processing in via a terminal F.

Turning to description of the processing in the graphic placement processing unit first checks the position flag to determine whether the processing is for the upper layer operation S . If the position flag is True and the processing is for the upper layer the graphic placement processing unit determines whether the height determined as the height of the narrowest portion of placed captures is less than half that of the graphic layout area i.e. the printable area operation S . If the points of polygons involved in the placed captures are 2 or 4 in total the height is not less than half that of the graphic layout area. If the points of the polygons involved in the placed captures are 1 or 3 the height is less than half that of the graphic layout area.

If the height of the placed captures is less than half that of the graphic layout area the graphic placement processing unit changes the Y coordinate of the STARTPOINT by the amount corresponding to the height of the placed captures operation S . The graphic placement processing unit transfers to the processing in via the terminal G. As shown in since the height of the placed captures is less than half that of the graphic layout area on the right side of the upper half the Y coordinate of the STARTPOINT is changed by the amount corresponding to the height of the placed captures to move the STARTPOINT to a point in operation S.

If the height of the placed captures is not less than half that of the graphic layout area the graphic placement processing unit determines whether the width of the placed captures is less than that of the graphic layout area operation S . If the points of the polygons involved in the placed captures are 2 in total the width is less than half that of the graphic layout area. If the points of the polygons involved in the placed captures are the width is not less than half that of the placement area. In the example shown in it is determined in operation S that the width is less than that of the graphic layout area because a capture involving polygons of 2 points is placed. In such a case the graphic placement processing unit changes the X coordinate of the STARTPOINT by the amount corresponding to the width of the placed captures and returns the Y coordinate to the initial value operation S . That is a point is set as the STARTPOINT in . The graphic placement processing unit transfers to the processing in via the terminal G.

If the width is not less than that of the graphic layout area the graphic placement processing unit changes the Y coordinate of the STARTPOINT by the amount corresponding to half the height of the graphic layout area and returns the X coordinate to the initial value operation S . It further changes the position flag to False to proceed to processing for the lower layer operation S . The graphic placement processing unit transfers to the processing in via the terminal G. As shown in the STARTPOINT is changed to a point

If it is determined in operation S that the position flag is False and the processing is for the lower layer the graphic placement processing unit determines whether the height determined as the height of the narrowest portion of placed captures in the lower layer is less than half that of the graphic layout area operation S . If the points of polygons involved in the placed captures are 6 or in total the height is not less than half that of the graphic layout area. If the points of the polygons involved in the placed captures are 5 or 7 the height in the lower layer is less than half that of the graphic layout area.

If the height of the placed captures in the lower layer is less than half that of the graphic layout area the graphic placement processing unit changes the Y coordinate of the STARTPOINT by the amount corresponding to the height of the placed captures operation S . The graphic placement processing unit transfers to the processing in via the terminal G.

If the height of the placed captures in the lower layer is not less than half that of the graphic layout area the graphic placement processing unit determines whether the width of the placed captures is less than that of the graphic layout area operation S . If the points of the polygons involved in the placed captures are 6 in total the width in the lower layer is less than half the width of the graphic layout area. If the point of the polygons involved in the placed captures are 8 the width is not less than half that of the graphic layout area. If it is determined that the width in the lower layer is less than that of the graphic layout area the graphic placement processing unit changes the X coordinate of the STARTPOINT by the amount corresponding to the width of the placed captures and changes the Y coordinate of the STARTPOINT to half the height of the graphic layout area operation S . The graphic placement processing unit transfers to the processing in via the terminal G.

If the width is not less than that of the graphic layout area the graphic placement processing unit transfers to the processing in via the terminal G.

Turning to description of the graphic placement processing unit determines whether all polygons for the current PAGENO have been processed operation S . If there is an unprocessed polygon for the current PAGENO the graphic placement processing unit returns to operation S in via a terminal H. If all polygons for the current PAGENO have been processed the graphic placement processing unit refers to the PRINTAREA table to determine whether all pages have been processed operation S . If all pages have been processed the graphic placement processing unit returns to the initial processing. If there is an unprocessed page the graphic placement processing unit increments the PAGENO by one operation S and returns to operation S in via a terminal J.

By performing the above processing captures can be placed at appropriate positions. That is print data can be generated in which partial data portions of the map are placed with no space left.

Thus the embodiment of the present invention has been disclosed. However the present invention is not limited to the disclosed embodiment. For example the functional block diagram shown in is an example and not necessarily match an actual program module configuration.

Variations of the processing flows are also possible as long as similar functions can be implemented.

Further any data structures may be adopted for the table configurations as long as similar data can be managed.

The server and the user terminals may be computer apparatuses for example in which memory storage a CPU processor a hard disk drive HDD a display controller connected to a display device a drive device for a removable disk an input device and a communication controller for connecting to a network are interconnected via a bus as shown in . An operating system OS and application programs including a web browser are stored in the HDD and read out from the HDD to the memory when executed by the CPU . As necessary the CPU controls the display controller the communication controller and the drive device to cause them to perform required operations. Data being processed is stored in the memory and stored in the HDD as necessary. Such computers implement various functions as disclosed above with organic cooperation of hardware such as the above disclosed CPU and memory with the OS and required application programs.

In addition to the above disclosed embodiments embodiments of the present invention can also be implemented through computer readable code instructions in on a medium e.g. a computer readable medium to control at least one processing element to implement any above disclosed embodiment. The medium can correspond to any medium media permitting the storing and or transmission of the computer readable code.

The system also includes permanent or removable storage such as magnetic and optical discs RAM ROM etc. on which the process and data structures of the present invention can be stored and distributed. The processes can also be distributed via for example downloading over a network such as the Internet.

The many features and advantages of the embodiments are apparent from the detailed specification and thus it is intended by the appended claims to cover all such features and advantages of the embodiments that fall within the true spirit and scope thereof. Further since numerous modifications and changes will readily occur to those skilled in the art it is not desired to limit the inventive embodiments to the exact construction and operation illustrated and disclosed and accordingly all suitable modifications and equivalents may be resorted to falling within the scope thereof.

