---

title: Controlling external communication of embedded device using proxy server
abstract: An embedded device communicates with another device via an external proxy server acting for the embedded device to control communication. The embedded device includes a communication device capable of communicating with the proxy server, a storage unit storing a state of communication with the other device, an updating unit, a response unit responding to the task with a result of the updating of the communication state that has been performed in accordance with the control request, and a control instruction unit transmitting, to the proxy server by means of the communication device, an instruction for changing a state of communication with the other device in the proxy server to the communication state stored in the storage.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07996524&OS=07996524&RS=07996524
owner: International Business Machines Corporation
number: 07996524
owner_city: Armonk
owner_country: US
publication_date: 20070410
---
The present invention relates to an embedded device a proxy server a method and a program and more particularly to an embedded device a proxy server a method and a program in which the proxy server acts for the embedded device to control communication.

Currently more sophisticated software is required. In addition with the proliferation of embedded devices such as mobile telephones and digital household appliances software is sometimes required to operate on many different platforms. In order to effectively develop such software Model Driven Development MDD has been studied. According to MDD software capable of operating on various platforms can be automatically generated on the basis of software specifications written using Unified Modeling Language UML .

An example of a technique enabling MDD is Rational Rose R RT developed by International Business Machines Corporation. A developer creates or corrects software specifications on a generic personal computer using this technique. Software generated on the basis of the created or corrected software specifications is transmitted to an embedded device via a communication line and is then executed. In addition in this technique a debugging environment for comparing software with software specifications is provided. For example a developer can check on the display screen of a personal computer which part of the software specifications is being executed by an embedded device.

However in order to conduct such development an embedded device is required to have communications capability. In order to have communications capability for example a communication device capable of performing communication in accordance with Ethernet registered trademark and a device driver for controlling the communication device are required. In addition in some cases development software requires control software for TCP IP that is a generic communication protocol. However some embedded devices do not have TCP IP communications capability. In this case a device driver which will not be employed in an end product has to be specially developed. This may lead to an increase in development cost and a longer development period.

According to past techniques TCP IP based communication can be converted into another protocol based communication. Consequently TCP IP based communication can be performed via a communication line such as a serial interface without using Ethernet. If this technique is applied to an embedded device an Ethernet communication device is not required. However control software for TCP IP is still required. This control software may increase the required memory capacity of the embedded device.

According to other past attempts communication of a first device can be performed by a second device in place of the first device. The first device calls a communication procedure on the second device using Remote Procedure Call RPC protocol whereby this communication is achieved. However RPC cannot be used when TCP IP communication is not established. That is in this technique control software for TCP IP is also required. This control software may increase the required memory capacity of the embedded device. In addition if the condition of a communication line is poor communication may be stopped and may not be restored.

In one illustrative embodiment an embedded device communicates with another device via an external proxy server acting for the embedded device to control communication. The embedded device comprises a central processing unit a communication device configured to communicate with the external proxy server a storage unit storing a state of communication with the other device and an updating unit updating in response to a control request for communication with the other device being received from a task being executed by the central processing unit the state of communication responsive to the communication device being unable to communicate with the proxy server. The embedded device further comprises a response unit responding to the task with a result of the updating of the state of communication and a control instruction unit transmitting to the proxy server via the communication device an instruction for changing a state of communication with the other device in the proxy server to the state of communication stored in the storage unit responsive to the communication device being able to communicate with the proxy server.

In another illustrative embodiment a computer program product comprises a computer recordable medium having a control program recorded thereon. The control program controls an embedded device which communicates with another device via an external proxy server acting for the embedded device to control communication. The control program when executed on the embedded device causes the embedded device to communicate with the proxy server store a state of communication with the other device in a storage unit of the embedded device and update in response to a control request for communication with the other device being received from a task being executed by a central processing unit of the embedded device the state of communication responsive to the communication device being unable to communicate with the proxy server. The control program further causes the embedded device to respond to the task with a result of the updating of the state of communication and transmit to the proxy server an instruction for changing a state of communication with the other device in the proxy server to the state of communication stored in the storage unit responsive to the communication device being able to communicate with the proxy server.

In another illustrative embodiment a method is provided for controlling an embedded device which communicates with another device via an external proxy server acting for the embedded device to control communication. The method comprises storing a state of communication with the other device in a storage unit of the embedded device and updating in response to a control request for communication with the other device being received from a task being executed by a central processing unit of the embedded device the state of communication responsive to the embedded device being unable to communicate with the proxy server. The method further comprises responding to the task with a result of the updating of the state of communication and transmitting to the proxy server an instruction for changing a state of communication with the other device in the proxy server to the state of communication stored in the storage unit responsive to the embedded device being able to communicate with the proxy server.

These and other features of the illustrative embodiments will be described in or will become apparent to those of ordinary skill in the art in view of the following detailed description of the example embodiments of the present invention.

According to the illustrative embodiments as described herein there is provided an embedded device communicating with another device via an external proxy server acting for the embedded device to control communication which includes a communication device capable of communicating with the proxy server a storage unit storing a state of communication with the other device an updating unit updating in response to a control request for communication with the other device received from a task being executed by a central processing unit the state of communication to a state indicated after control processing according to the control request has been normally performed in a situation where the communication device cannot communicate with the proxy server a response unit responding to the task with a result of the updating of the communication state that has been performed in accordance with the control request and a control instruction unit transmitting to the proxy server by means of the communication device an instruction for changing a state of communication with the other device in the proxy server to the communication state stored in the storage in a situation where the communication device can communicate with the proxy server.

According to the illustrative embodiments communication of an embedded device can be more effectively achieved.

The present invention will be described with reference to the illustrative embodiments. However the claimed invention is not limited to the following embodiments. Furthermore all of the combinations of features described in the following embodiments are not necessarily required for solving the problems recognized herein.

The proxy server is connected to the mobile telephone via the first communication line and to another device for example the communication device via a second communication line compliant with for example Ethernet registered trademark . The proxy server controls communication between the mobile telephone and the communication device on behalf of the mobile telephone . For example the proxy server controls TCP IP communication between the mobile telephone and the communication device on behalf of the mobile telephone that has no TCP IP communication control capability. The communication device executes a program for developing and debugging a program to be installed in the mobile telephone . The communication device performs TCP IP communication with the proxy server thereby receiving from the mobile telephone the execution state of the program running thereon or causing the mobile telephone to suspend or restart execution of the program.

Thus the communication system according to the embodiment of the present invention causes the proxy server which is externally connected to an embedded device having no communications capability compliant with a generic communication protocol such as TCP IP to control communication compliant with a given communication protocol on behalf of the embedded device. Consequently the mobile telephone is not required to have a communication control program. This can reduce the required memory capacity of the mobile telephone and the effort spent on developing a program to be executed in the mobile telephone .

The central processing unit functions as a task and a communication module by executing the program preinstalled in the mobile telephone . The task includes API Application Programming Interface calls. This API is used to control TCP IP socket communication and may meet a predetermined standard that is compatible with for example BSD Berkeley Software Distribution UNIX registered trademark . The task may be a process or thread for which an operating system periodically provides execution authority.

A library program used to make the central processing unit serve as the communication module is installed in the mobile telephone instead of a library program used to perform socket communication. The task calls an API included in the installed library program instead of an API for socket communication control thereby transmitting a request to control communication with the communication device to the communication module . Since the same interface can be used to call the API for socket communication and the API included in the installed library program the library program does not have to be rewritten so as to adapt to the communication module .

Upon receiving the control request from the task the communication module transmits a control instruction corresponding to the control request to the proxy server via the communication device . If the communication module receives the control request when the first communication line is disconnected the communication module performs the following processing. If the received control request is a predetermined nonblocking control request the communication module updates a communication state stored in the storage unit without communicating with the proxy server . Subsequently the communication module transmits the update result of the communication state to the task . If the first communication line is connected the communication module transmits to the proxy server an instruction for changing a state of communication with the communication device in the proxy server to the communication state stored in the storage unit . Thus even if the first communication line is disconnected the task can continue the process thereof without waiting until the first communication line is connected.

As an example a socket having identification information is in a generation state OPEN state indicating that the socket has been newly generated. No port number and no buffer address are assigned to this socket. A socket having identification information is in a state RECV state indicating that data receiving by the socket is handled. An address of a communication buffer and an identification number of a task that is being suspended until completion of the data receiving are assigned to this socket.

When the received control request is a nonblocking control request the updating unit updates the communication state stored in the storage unit to a communication state indicated after control processing according to the control request has been normally performed even if the communication device cannot communicate with the proxy server . On the other hand when the control request received from the task is not a nonblocking control request the updating unit updates the communication state stored in the storage unit to the result of control processing received by the receiving unit . For example if the control request received from the task is a request to transmit or receive data to or from the communication device the updating unit determines that the received control request is a blocking control request.

The response unit responds to the task with a result of the updating of the communication state which has been performed in accordance with the control request. That is for a nonblocking control request the response unit responds to the task with the update result without waiting until control processing according to the control request is performed. On the other hand for a blocking control request when the receiving unit receives the result of control processing according to the control request from the proxy server the response unit responds to the task with the received result. When the communication device can communicate with the proxy server the control instruction unit transmits to the proxy server via the communication device an instruction for changing a state of communication with the communication device in the proxy server to the communication state stored in the storage unit .

The receiving unit receives from the proxy server via the communication device the result of control processing that has been performed by the proxy server in accordance with the instruction transmitted from the control instruction unit . Subsequently the receiving unit transmits the received result to the updating unit and the response unit . If a blocking control request has been received the updating unit updates the communication state stored in the storage unit to the received result and the response unit responds to the task with the received result.

Next in response to receiving in association with the identification information of the socket a control request to prepare to receive a communication request from the communication device the updating unit updates the communication state corresponding to the identification information to a buffer allocated state LISTEN state shown in . This control request is a request to cause the proxy server to allocate a buffer for storing a communication request received from the communication device to the socket. For example this control request may be a listen system call defined in the BSD Socket API. Since this control request is also a nonblocking control request the communication state is updated without waiting for the control processing. In response to receiving in association with the identification information of the socket a control request to free the socket in the OPEN state the LISTEN state or a CONNECTED state described later the updating unit returns the communication state corresponding to the identification information to a blank state. This control request may be a close system call defined in the BSD Socket API. Since this control request is also a nonblocking control request the communication state is updated without waiting for the control processing.

If the updating unit receives from the task a control request to change an attribute of communication between the communication device and the communication device the updating unit determines that the received control request is a nonblocking control request. For example in response to receiving in association with the identification information of the socket a control request to allocate a specified port number to the socket in the OPEN state the updating unit stores the port number in the storage unit in association with the identification information of the socket. This control request may be a bind system call defined in the BSD Socket API. Since this control request is also a nonblocking control request the port number allocation is performed without waiting for the control processing performed by the proxy server .

On the other hand in response to receiving a blocking control request the updating unit updates the communication state stored in the storage unit on the basis of the result of control processing received by the receiving unit in accordance with a dotted line shown in . The communication state transition depending on a blocking control request will be described in detail. If a control request received from the task is a request to detect whether the communication device and the communication device can communicate with each other a request to transmit a communication approval in response to a communication request from the communication device or a request to transmit or receive data the updating unit determines that the received request is a blocking control request. For example in response to receiving in association with the identification information of the socket a control request for example a select system call to detect whether the communication device and the communication device can communicate with each other in the LISTEN state the updating unit updates a communication state corresponding to the identification information to a communication waiting state a LISTEN SELECT state shown in . The select system call issues a request to examine states of a plurality of sockets. With this system call it can be determined data can be read from each of the sockets whether data can be written into each of the sockets or whether an error occurs in the reading or writing. If the receiving unit receives the result of the detection whether the communication device and the communication device can communicate with each other which has been performed by the proxy server the updating unit returns the communication state corresponding to the identification information to the buffer allocated state. Thus since this control request is a blocking control request the result of control processing performed by the proxy server is transmitted to the task after completion of the control processing.

In response to receiving in association with the identification information of the socket a control request for example an accept system call to transmit a communication approval for to a communication request from the communication device the updating unit updates the communication state corresponding to the identification information to a communication accepting state ACCEPT state shown in . If the receiving unit receives the result of control processing performed by the proxy server the updating unit returns the communication state corresponding to the identification information to the buffer allocated state. If a socket has been newly generated by this control processing the updating unit may store the identification information of the new socket in the storage unit and may store a connected state CONNECTED state shown in in association with the identification information In this case the updating unit transmits the identification information to the proxy server so as to associate the newly generated identification information with the socket generated by the proxy server . Since this control request is a blocking control request the result of control processing performed by the proxy server is transmitted to the task after completion of the control processing.

In response to receiving in the CONNECTED state a control request to transmit or receive data using a socket for example select system call recv system call or send system call shown in in association with the identification information of the socket the updating unit determines that the control request is a blocking control request. Then the updating unit updates the communication state corresponding to the identification information to a communication waiting state SELECT RECV or SEND state shown in . If the receiving unit receives the result of data transmission or reception performed by the proxy server the updating unit returns the communication state corresponding to the identification information to the connected state. Thus since this control request is a blocking control request the result of control processing performed by the proxy server is sent to the task after completion of the control processing.

The LAN interface communicates with the communication device via the second communication line such as an Ethernet registered trademark communication line so that the mobile telephone and the communication device can communicate with each other. On the other hand the serial interface communicates with the mobile telephone via the first communication line such as a serial line a parallel line or a USB Universal Serial Bus . The serial interface receives a communication control instruction from the mobile telephone or transmits the result of communication control processing to the mobile telephone .

The central processing unit functions as a socket generation unit the communication module an ID management unit and a transmitting and receiving unit in accordance with preinstalled programs. The central processing unit functions as the communication module in accordance with for example a library program of a Windows registered trademark operating system used to perform socket communication. The communication module controls communication between the proxy server and the communication device . In response to receiving an instruction for generating a new socket and managing the generated socket in association with the first identification information the socket generation unit generates a socket used for communication between the proxy server and the communication device and acquires the second identification information. The generation of the socket is achieved by invoking a system call from the communication module .

The ID management unit associates the first identification information received by the serial interface with the second identification information acquired by the socket generation unit and stores them in the storage unit . In response to receiving from the serial interface an instruction for transmitting or receiving data using a socket in association with the first identification information of the socket the transmitting and receiving unit retrieves second identification information corresponding to the first identification information from the storage unit and then transmits or receives data to or from the communication device using the socket identified with the retrieved second identification information. The transmission and reception of data between the proxy server and the communication device is achieved by invoking a system call from the communication module .

In the present embodiment the proxy server and the communication device are separately disposed. However a single information processing system may function as the proxy server and the communication device . In this case the transmitting and receiving unit performs TCP IP communication with other tasks that operate in the proxy server . Thus the proxy server may control communication between the tasks in the proxy server and the mobile telephone .

If the communication device and the proxy server can communicate with each other or if the communication device and the proxy server are brought into a communication available state the following processing is performed. If the communication state stored in the storage unit is the generation state OPEN state the control instruction unit transmits to the proxy server an instruction for newly generating a socket and managing the generated socket in association with the first identification information thereof S . For example the control instruction unit may transmit an API number used to identify a socket system call to be executed and first identification information fd to be managed in association with a socket generated. In addition the control instruction unit may transmit to the proxy server an argument specified when a system call is invoked by the task . Upon receiving this instruction the socket generation unit generates a socket used for communication between the proxy server and the communication device and second identification information of the generated socket S . The ID management unit associates the received first identification information with the generated second identification information to manage them.

As described above with reference to an example socket system call if a nonblocking control request is received the updating unit updates the communication state without waiting until the control processing corresponding to the control request is completed. The response unit transmits the update result of the communication state to the task as a response. Consequently the task can continue to perform subsequent processing even if the first communication line between the mobile telephone and the proxy server is disconnected. Here the socket system call is an example of the nonblocking control request. In the case of a listen system call the same processing as that shown in is performed. That is when the communication module receives invocation of a listen system call used to allocate a buffer to a socket the updating unit updates the communication state to the buffer allocated state LISTEN state and the response unit responds to the task that the buffer allocation has succeeded even if the first communication line between the mobile telephone and the proxy server is disconnected. Thus by delaying actual control processing performed in response to a resource allocation request until communication is started the task can continue its processing even if the mobile telephone and the proxy server cannot communicate with each other.

If the communication state is the communication waiting state the response unit transmits a plurality of following instructions to the proxy server S when the communication device and the proxy server can communication with each other. These instructions include an instruction for generating a new socket and managing the generated socket in association with the first identification information for example an instruction for executing a socket system call an instruction for allocating a buffer for storing a communication request to the socket for example an instruction for executing a listen system call and an instruction for detecting whether communication can be performed using the socket for example an instruction for executing a select system call . The response unit may associate API numbers used to identify the respective system calls with the first identification information of the socket to be controlled and transmit them to the proxy server .

Upon receiving these instructions the socket generation unit controls communication S . First the socket generation unit generates a socket used for communication between the proxy server and the communication device and second identification information of the generated socket S . The ID management unit associates the second identification information with the first identification information and stores them in the storage unit . Here even if the socket generation unit receives the instruction for newly generating a socket and managing the generated socket in association with the first identification information thereof the socket generation unit may not newly generate a socket when the first identification information has been already stored in the storage unit . In this case the ID management unit and the transmitting and receiving unit perform other processing for a socket identified by the second identification information corresponding to the stored first identification information.

The socket generation unit allocates a buffer for storing a communication request to the socket identified by the second identification information. The transmitting and receiving unit transmits or receives data to or from the communication device using the socket. For example the transmitting and receiving unit detects whether communication can be performed using the socket by communicating with the communication device . When the detection is completed the result of the detection is transmitted to the communication module . If the receiving unit receives the result of the detection from the proxy server the response unit transmits the result of the detection to the task S as a response. The updating unit returns the communication state corresponding to the first identification information to the buffer allocated state. In response thereto the task continues to perform the next processing S .

As described above with reference to in the case of a blocking control request for which transmission and reception of data are required for example the result of control processing corresponding to the control request is transmitted to the task as a response. That is the task suspends its processing until the transmission and reception of data is completed. Even if the communication module receives only a select system call the communication module instructs the proxy server to perform not only control processing corresponding to the select system call but also control processing corresponding to a socket system call and a listen system call received in the past. Consequently consistency between the communication states of the mobile telephone and the proxy server can be maintained.

If the task requests the invocation of a listen system call to the communication module S the updating unit updates the communication state to the buffer allocated state and the response unit responds to the task that the buffer allocation has succeeded S . Next if the task invokes an accept system call to transmit a communication approval in response to a communication request received from the communication device S the updating unit generates first identification information of a socket to be newly generated and stores it in the storage unit . In addition the updating unit updates the communication state corresponding to the first identification information to the communication accepting state ACCEPT state and suspends the processing of the task until the mobile telephone can communicate with the proxy server . Thus the processing of the task continues without being suspended until a blocking control request such as the accept system call is issued.

The control instruction unit transmits a plurality of following instructions to the proxy server when the mobile telephone and the proxy server can communicate with each other S . These instructions include an instruction for newly generating a socket and managing the generated socket in association with the first identification information for example an instruction for executing a socket system call an instruction for allocating a buffer for storing a communication request received from the communication device to the socket for example an instruction for executing a listen system call and an instruction for transmitting a communication approval in response to a communication request received from the communication device for example an instruction for executing an accept system call . If the first identification information and the port number have been associated and stored the control instruction unit may transmit to the proxy server an instruction for allocating the port number in association with the port number.

In addition the control instruction unit generates first identification information newfd to be managed in association with a socket that will be newly generated in accordance with an accept system call. More specifically the control instruction unit retrieves an entry associated with the blank state in the storage unit and acquires identification information of a socket corresponding to the entry. For example the entry in the third row of the table illustrated in is associated with the blank state. This entry is positioned in a row next to a row in which an entry has a numeral as first identification information. Accordingly the control instruction unit generates a numeral which is the sum of 2 and 1 as first identification information newfd and stores it in the storage unit . Then the control instruction unit transmits the newly generated first identification information newfd to the proxy server so as to associate the first identification information newfd with a socket generated by the proxy server .

Upon receiving these instructions the socket generation unit invokes the socket system call the bind system call the listen system call and the accept system call S . The ID management unit included in the proxy server associates the received first identification information newfd with second identification information of a newly generated socket and stores them in the storage unit . The execution results of these system calls are transmitted back to the communication module S . In response thereto the updating unit returns the communication state corresponding to the first identification information fd to the buffer allocated state LISTEN state and updates the communication state corresponding to the first identification information newfd to the connected state. The response unit responds to the task with the first identification information newfd as the results of the control processing S . Consequently the task can proceed to the next processing by canceling its suspension.

Thus according to the embodiment even if the first communication line between the mobile telephone and the proxy server is ineffective the execution of the task can be continued for control processing which does not require communication with the proxy server for example acquisition and release of socket resources on the presumption that the control processing has succeeded. When the communication is actually started the execution of the task is suspended to perform processing such as the acquisition and release of socket resources. Accordingly even if there is a possibility that the first communication line is disconnected the task can continue TCP IP communication. As a result a serial interface or a parallel interface can be used for the first communication line instead of Ethernet registered trademark . In addition the first communication line can be temporarily disconnected. In order to prevent the operation of the mobile telephone from being affected by this disconnection the mobile telephone may usually operate without being connected to the proxy server and may be connected to the proxy server only when necessary for example when debugging is performed.

The host controller connects the RAM to the CPU and the graphic controller which access the RAM with a high transfer rate. The CPU operates in accordance with programs stored in the ROM and the RAM and controls each element. For example the CPU functions as the central processing unit described with reference to . The graphic controller acquires image data generated by the CPU from a frame buffer disposed in the RAM and displays the acquired image data on a display device . Alternatively the graphic controller may contain a frame buffer for storing image data generated by the CPU .

The input and output controller connects the host controller to the communication interface the hard disk drive and the CD ROM drive which are relatively high speed input and output devices. The communication interface communicates with an external device via a network. For example the communication interface functions as the LAN interface described with reference to . The hard disk drive stores programs and data used by the information processing system . The CD ROM drive reads a program or data from a CD ROM and provides the read program or data to the RAM or the hard disk drive . The RAM may function as the storage unit described with reference to .

In addition the ROM the flexible disk drive and the input and output chip which are relatively low speed input and output devices are connected to the input and output controller . The input and output chip may function as for example the serial interface . The ROM stores a boot program executed by the CPU when the information processing system is started up and other programs that are dependent on the hardware of the information processing system . The flexible disk drive reads a program or data from a flexible disk and provides the read program or data to the RAM or the hard disk drive via the input and output chip . The input and output chip connects the flexible disk and various input and output devices via a parallel port a serial port a keyboard port a mouse port etc.

A program to be provided to the information processing system is stored on the flexible disk the CD ROM or a recording medium such as an IC card and is then provided by a user. The program is read out from the recording medium via the input and output chip and or the input and output controller installed in the information processing system and then executed. A control program for controlling the mobile telephone may be installed in the mobile telephone via the input and output chip and executed. Operation which the program causes the information processing system to perform are the same as those performed by the proxy server or the mobile telephone which have been described with reference to and the description thereof will therefore be omitted.

The above described program may be stored on an external recording medium. The external recording medium may be the flexible disk the CD ROM an optical recording medium such as a DVD a magneto optical disk a tape medium or a semiconductor memory such as an IC card. Alternatively a storage device such as a hard disk or RAM disposed in a server system connected to a dedicated communication network or the Internet may be used as a recording medium and the program may be provided to the information processing system via the network.

While the present invention has been described with reference to the above embodiments the technical scope of the present invention is not limited to the above described embodiments. It will be apparent to those skilled in the art that various alterations and modifications may be made without departing from the scope of the appended claims.

