---

title: Systems and methods for message threat management
abstract: The present invention is directed to systems and methods for detecting unsolicited and threatening communications and communicating threat information related thereto. Threat information is received from one or more sources; such sources can include external security databases and threat information data from one or more application and/or network layer security systems. The received threat information is reduced into a canonical form. Features are extracted from the reduced threat information; these features in conjunction with configuration data such as goals are used to produce rules. In some embodiments, these rules are tested against one or more sets of test data and compared against the same or different goals; if one or more tests fail, the rules are refined until the tests succeed within an acceptable margin of error. The rules are then propagated to one or more application layer security systems.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08042149&OS=08042149&RS=08042149
owner: McAfee, Inc.
number: 08042149
owner_city: Santa Clara
owner_country: US
publication_date: 20070529
---
This application is a continuation in part of commonly assigned U.S. patent application Ser. Nos. 10 093 553 10 094 211 and 10 094 266 all filed on Mar. 8 2002 which are hereby incorporated herein in their entirety.

The present invention is directed to systems and methods for receiving information related to messaging threats processing the information and generating rules and policies in response to those threats. More specifically without limitation the present invention relates to computer based systems and methods for responding to a range of threats to messaging systems including viruses spam and other attacks on the server software.

The internet is a global network of connected computer networks. Over the last several years the Internet has grown in significant measure. A large number of computers on the Internet provide information in various forms. Anyone with a computer connected to the Internet can potentially tap into this vast pool of information.

The information available via the Internet encompasses information available via a variety of types of application layer information servers such as SMTP simple mail transfer protocol POP3 Post Office Protocol GOPHER RFC 1436 WAIS HTTP Hypertext Transfer Protocol RFC 2616 and FTP file transfer protocol RFC 1123 .

One of the most wide spread method of providing information over the Internet is via the World Wide Web the Web . The Web consists of the computers connected to the Internet the computers in this subset run Hypertext Transfer Protocol HTTP servers Web servers . Several extensions and modifications to HTTP have been proposed including for example an extension framework RFC 2774 and authentication RFC 2617 . Information on the Internet can be accessed through the use of a Uniform Resource Identifier URI RFC 2306 . A URI uniquely specifies the location of a particular piece of information on the Internet. A URI will typically be composed of several components. The first component typically designates the protocol by which the address piece of information is accessed e.g. HTTP GOPHER etc. . This first component is separated from the remainder of the URI by a colon . The remainder of the URI will depend upon the protocol component. Typically the remainder designates a computer on the Internet by name or by IP number as well as a more specific designation of the location of the resource on the designated computer. For instance a typical URI for an HTTP resource might be 

Web servers host information in the form of Web pages collectively the server and the information hosted are referred to as a Web site. A significant number of Web pages are encoded using the Hypertext Markup Language HTML although other encodings using eXtensible Markup Language EML or XHTML. The published specifications for these languages are incorporated by reference herein such specifications are available from the World Wide Web Consortium and its Web site http www.w3c.org . Web pages in these formatting languages may include links to other Web pages on the same Web site or another. As will be known to those skilled in the art Web pages may be generated dynamically by a server by integrating a variety of elements into a formatted page prior to transmission to a Web client. Web servers and information servers of other types await requests for the information from Internet clients.

Client software has evolved that allows users of computers connected to the Internet to access this information. Advanced clients such a Netscape s Navigator and Microsoft s Internet Explorer allow users to access software provided via a variety of information servers in a unified client environment. Typically such client software is referred to as browse software.

Electronic mail e mail is another wide spread application using the Internet. A variety of protocols are often used for e mail transmission delivery and processing including SMTP and POP3 as discussed above. These protocols refer respectively to standards for communicating e mail messages between servers and for server client communication related to e mail messages. These protocols are defined respectively in particular RFC s Request for Comments promulgated by the IETF Internet Engineering Task Force . The SMTP protocol is defined in RFC 821 and the POP3 protocol is defined in RFC 1939.

Since the inception of these standards various needs have evolved in the field of e mail leading to the development of further standards including enhancements or additional protocols. For instance various enhancements have evolved to the SMTP standards leading to the evolution of extended SMTP. Examples of extensions may be seen in 1 RFC 1869 that defines a framework for extending the SMTP service by defining a means whereby a server SMTP can inform a client SMTP as to the service extensions it supports and in 2 RFC 1891 that defines an extension to the SMTP service which allows an SMTP client to specify a that delivery status notifications DSNs should be generated under certain conditions b whether such notifications should return the contents of the message and c additional information to be returned with a DSN that allows the sender to identify both the recipient s for which the DSN was issued and the transaction in which the original message was sent.

In addition the IMAP protocol has evolved as an alternative to POP3 that supports more advanced interactions between e mail servers and clients. This protocol is described in RFC 2060.

The various standards discussed above by reference to particular RFC s are hereby incorporated by reference herein for all purposes. These RFC s are available to the public through the IETF and can be retrieved from its Web site. http www.ietf.org rfc.html . The specified protocols are not intended to be limited to the specific RFC s quoted herein above but are intended to include extensions and revisions thereto. Such extensions and or revisions may or may not be encompassed by current and or future RFC s.

A host of e mail server and client products have been developed in order to foster e mail communication over the Internet. E mail server software includes such products as sendmail based servers Microsoft Exchange Lotus notes Server and Novell Group Wise sendmail based servers refer to a number of variations of servers originally based upon the sendmail program developed for the UNIX operating systems. A large number of e mail clients have also been developed that allow a user to retrieve and view e mail messages from a server example products include Microsoft Outlook Microsoft Outlook Express Netscape Messenger and Eudora. In addition some e mail servers in conjunction with a Web server allow a Web browser to act as an e mail client using the HTTP standard.

As the Internet has become more widely used it has also created new risks for corporations. Breaches of computer security by hackers and intruders and the potential for compromising information are a very real and serious threat. Organizations have deployed some or all of the following security technologies to protect their networks from Internet attacks 

Firewalls have been deployed at the perimeter of corporate networks. Firewalls act as gatekeepers and allow only authorized users to access a company network. Firewalls play an important role in controlling traffic into networks and are an important first step to provide Internet security.

Intrusion detection systems IDS are being deployed throughout corporate networks. While the firewall acts as a gatekeeper IDS act like a video camera. IDS monitor network traffic for suspicious patterns of activity and issue alerts when that activity is detected. IDS proactively monitor your network 24 hours a day in order to identify intruders within a corporate or other local network.

Firewall and IDS technologies have helped corporations to protect their networks and defend their corporate information assets. However as use of these devices have become widespread hackers have adapted and are now shifting their point of attack from the network to Internet applications. The most vulnerable applications are those that require a direct always open connection with the Internet such as web and e mail. As a result intruders are launching sophisticated attacks that target security holes within these applications.

Many corporations have installed a network firewall as one measure in controlling the flow of traffic in and out of corporate computer networks but when it comes to Internet application communications such as e mail messages and Web requests and responses corporations often allow employees to send and receive from or to anyone or anywhere inside or outside the company. This is done by opening a port or hole in their firewall typically port for e mail and port for Web to allow the flow of traffic. Firewalls do not scrutinize traffic flowing through this port. This is similar to deploying a security guard at a company s entrance but allowing anyone who looks like a serviceman to enter the building. An intruder can pretend to be a serviceman bypass the perimeter security and compromise the serviced Internet application.

Local clients can access application servers and shared data storage via the local communication network. External clients can access external application servers via the Internet . In instances where a local server or a local client requires access to an external server or where an external client or an external server requires access to a local server electronic communications in the appropriate protocol for a given application server flow through always open ports of firewall system .

The security risks do not stop there. After taking over the mail server it is relatively easy for the intruder to use it as a launch pad to compromise other business servers and steal critical business information. This information may include financial data sales projections customer pipelines contract negotiations legal matters and operational documents. This kind of hacker attack on servers can cause immeasurable and irreparable losses to a business.

In the 1980 s viruses were spread mainly by floppy diskettes. In today s interconnected world applications such as e mail serve as a transport for easily and widely spreading viruses. Viruses such as I Love You use the technique exploited by distributed Denial of Service DDoS attackers to mass propagate. Once the I Love You virus is received the recipient s Microsoft Outlook sends emails carrying viruses to everyone in the Outlook address book. The I Love You virus infected millions of computers within a short time of its release. Trojan horses such as Code Red use this same technique to propagate themselves. Viruses and Trojan horses can cause significant lost productivity due to down time and the loss of crucial data.

The Nimda worm simultaneously attacked both email and web applications. It propagated itself by creating and sending infectious email messages infecting computers over the network and striking vulnerable Microsoft IIS Web servers deployed on Exchange mail servers to provide web mail.

Most e mail and Web requests and responses are sent in plain text today making it just as exposed as a postcard. This includes the e mail message its header and its attachments or in a Web context a user name and password and or cookie information in an HTTP request. In addition when you dial into an Internet service Provider ISP to send or receive e mail messages the user ID and password are also sent in plain text which can be snooped copied or altered. This can be done without leaving a trace making it impossible to know whether a message has been compromised.

As the internet has become more widely used it has also created new troubles for users. In particular the amount of spam received by individual users has increased dramatically in the recent past. Spam as used in this specification refers to any communication receipt of which is either unsolicited or not desired by its recipient.

Using the always open port a hacker can easily reach an appropriate Internet application server exploit its vulnerabilities and take over the server. This provides hackers easy access information available to the server often including sensitive and confidential information. The systems and methods according to the present invention provide enhanced security for communications involved with such Internet applications requiring an always open connection.

Anti spam in use today include fail open systems in which all incoming messages are filtered for spam. In these systems a message is considered not to be spam until some form of examination proves otherwise. A message is determined to be spam based on an identification technique. Operators of such systems continue to invest significant resources in efforts to reduce the number of Legitimate messages that are misclassified as spam. The penalties for any misclassification are significant and therefore most systems are designed to be predisposed not to classify messages as spam.

One such approach requires a user to explicitly list users from whom email is desirable. Such a list is one type of whitelist . There are currently two approaches for creating such a whitelist. In a desktop environment an end user can import an address book as the whitelist. This approach can become a burden when operated at a more central location such as the gateway of an organization. Therefore some organizations only add a few entries to the whitelist as necessary. In that case however the full effect of whitelisting is not achieved. The present invention improves upon these systems by including a system that allows a more effective solution for whitelisting while requiring reduced manual effort by end users or administrators. The present invention also allows a whitelist system to be strengthened by authenticating sender information.

Other systems in use today employ a fail closed system in which a sender must prove its legitimacy. A common example of this type of system uses a challenge and response. Such a system blocks all messages from unknown senders and itself sends a confirmation message to the sender. The sender must respond to verify that it is a legitimate sender. If the sender responds the sender is added to the whitelist. However spammers can create tools to respond to the confirmation messages. Some confirmation messages are more advanced in an effort to require that a human send the response. The present invention is an improvement upon these systems. The present invention can reference information provided by users to determine who should be whitelisted rather than rely on the sender s confirmation. The systems and methods according to the present invention provide enhanced accuracy in the automated processing of electronic communications.

U.S. Pat. No. 6 052 709 the disclosure of which is incorporated herein by this reference assigned to Bright Light Technologies discloses a system for collecting spam messages so that rules can be created and sent to servers. The disclosed system includes the steps of data collection rule creation and distribution of rules to clients. The disclosed system is directed to a particular method of data collection for spam messages. No system or method for creating rules based on input data are disclosed. Nor does it disclose a systematic approach to generating rules. Furthermore the disclosed system is limited to spam threats and only allows one type of input. The threat management center of the present invention is operative on all messaging threats including but not limited to spam virus worms Trojans intrusion attempts etc. The threat management center of the present invention also includes novel approaches to the process of rule creation. Additionally the present invention improves on the state of the art by providing a more generalized and useful data collection approach. The data collection system of the present invention includes modules that process input into data that can be used by the rule creation process. The present invention can also use feedback from application layer security servers as input to the creation process.

U.S. patent application Ser. No. 10 154 137 publication 2002 0199095 A1 the disclosure of which is incorporated herein by this reference disclose a system for message filtering. The disclosed system allows spam messages to be forwarded to a database by users of the system. In contrast the systems and methods of the present invention do not rely on the users rather the messaging security system s can automatically determine spam using identification techniques and then forward the results to a database. The system of the present invention can add known spam messages as well as misclassified messages forwarded by users to the database to retain the system. Systems known in the art require the forwarding of entire messages to the databases. In the present invention individual messaging or application layer security systems can extract meaningful features from spam messages threatening messages and or non spam non threatening messages and forward only relevant features to a database.

U.S. Pat. No. 6 161 130 the disclosure of which is incorporated herein by this reference discloses a technique for detecting junk email. The disclosed system is operative only on spam and not the entire class of messaging security threats. The inputs for the disclosed system are limited spam and non spam e mail. This patent discloses text analysis based features such as the tokens in a message. This patent discloses predefined handcrafted distinctions but does not further disclose what they are or how these can be created. The system of the present invention can classify based on not only the text analysis but also other features of the messages. Additionally the system of the present invention can include fully automated feature extraction for non text based features.

In addition known security systems have been developed to provide peer to peer communication of threat information. Such systems are typically designed for a ring of untrusted peers and therefore address trust management between the peers. Additionally current peer to peer systems do not have a central entity. The system of the present invention operates between a set of trusted peers therefore trust management need not be addressed by the present invention. Further a centralized threat management system coordinates threat information among multiple trusted application layer security systems communicating in a peer to peer manner. Therefore the threat notification system can process more real time data exchange. This makes the distributed IDS intrusion detection system more scalable.

In addition current systems only exchange intrusion alerts. These systems can only notify each other of attacks of which they are aware. While the underlying detection method could be misuse or anomaly detection the data exchanged is only the detected attack information. The system of the present invention distributes more general information about traffic patterns as well as specific threat information. As a non limiting example if anomaly detection is used the system of the present invention can exchange the underlying statistics instead of waiting for the statistics to indicate an attack. Exchanged statistics can include information about the frequency of certain attacks. Therefore even if other systems already have a signature for a certain attack the system of the present invention will notify them of an outbreak of this attack. Additionally traffic patterns can be exchanged among peers and that information can be further processed by the other peers to infer a global view of traffic patterns. This information exchange can be similar to routing protocols that allow each node to infer a global view of the network topology.

The present invention is directed to systems and methods for messaging threat protection. A typical architecture includes the following components 1 a centralized threat management center that can collect threat information and create rules and or policies for messaging security systems 2 a peer to peer based messaging notification system that is operative between messaging security systems and 3 a hierarchical messaging pushback system that blocks communications as close as possible to the source by sending notifications to systems on a path towards the source.

A preferred embodiment according to the present invention for a threat management center a threat pushback system or a peer to peer application layer security system communication environment each alone or as an overall environment include a system data store SDS a system processor and one or more interfaces to one or more communications networks over which electronic communications are transmitted and received. The SDS stores data needed to provide the desired system functionality and may include for example received communications data associated with such communications information related to known security risks information related to corporate policy with respect to communications for one or more applications e.g. corporate e mail policy Web access guidelines message interrogation parameters and whitelists and predetermined responses to the identification of particular security risks situations or anomalies.

The SDS may include multiple physical and or logical data stores for storing the various types of information. Data storage and retrieval functionality may be provided by either the system processor or data storage processors associated with the data store. The system processor is in communication with the SDS via any suitable communication channel s the system processor is in communication with the one or more interfaces via the same or differing communication channel s . The system processor may include one or more processing elements that provide electronic communication reception transmission interrogation analysis and or other functionality.

In a threat management center the SDS may further include one or more sets of threat management goals and or one or more sets of test data. Accordingly one preferred threat management method includes a variety of steps that may in certain embodiments be executed by the environment summarized above and more fully described below or be stored as computer executable instructions in and or on any suitable combination of computer readable media. Threat information is received from one or more sources such sources can include external security databases and threat information data from one or more application and or network layer security systems. The received threat information is reduced into a canonical form. Features are extracted from the reduced threat information these features in conjunction with configuration data such as goals are used to produce rules. In some embodiments these rules are tested against one or more sets of test data and compared against the same or different goals if one or more tests fail the rules are refined until the test succeed within an acceptable margin of error. The rules are then propagated to one or more application layer security systems.

One preferred threat pushback method includes a variety of steps that may in certain embodiments be executed by the environment summarized above and more fully described below or be stored as computer executable instructions in and or on any suitable combination of computer readable media. A communication is received. A threat profile associated with the received communication is generated. In some cases the generation occurs through application of one or more tests to the received communication wherein each of the one or more tests evaluates the received communication for a particular security risk. In other instance a manual entry of a threat profile via a provided interface serves to generate the threat profile. The threat profile is compared with configuration information. Typically configuration information can include threat types of internet and weights associated therewith. In some embodiments the comparison is accomplished by calculating a threat value from the threat profile and determining whether the threat value satisfies a predetermined threat condition. If the comparison indicates the received communication represents a threat one or more computer addresses in a back path of the received communication are identified and information based upon the threat profile is outputted.

In some embodiments identified address along the back path are authenticated prior to propagation of threat information. In other embodiments an interface may be provided to allow establishing configuration information regarding one or more threat types wherein configuration information comprises threat types of interest and weights associated therewith.

Accordingly one preferred method of whitelist usage includes a variety of steps that may in certain embodiments be executed by the environment summarized above and more fully described below or be stored as computer executable instructions in and or on any suitable combination of computer readable media. In some embodiments an electronic communication directed to or originating from an application server is received. The source of the electronic communication may be any appropriate internal or external client or any appropriate internal or external application server. One or more tests applied to the received electronic communication to evaluate the received electronic communication for a particular security risk. A risk profile associated with the received electronic communication is stored based upon this testing. The stored risk profile is compared against data accumulated from previously received electronic communications to determine whether the received electronic communication is anomalous. If the received communication is determined to be anomalous an anomaly indicator signal is output. The output anomaly indicator signal may in some embodiments notify an application server administrator of the detected anomaly by an appropriate notification mechanism e.g. pager e mail etc. or trigger some corrective measure such as shutting down the application server totally or partially e.g. deny access to all communications from a particular source .

Some embodiments may provide support for communicating information based upon the stored risk profile to a threat notification system to a further security appliance or further security appliances. Without limitation such security appliances can include threat management centers and other application layer security systems. Such communication of information can be instead of or in addition to any anomaly indicator signal. In some embodiments anomaly detection need not occur nor does an anomaly indicator signal need to be output.

In some embodiments an electronic communication directed to or originating from an email server is received. One or more tests can be applied to the received electronic communication to compare the sender s address in the received electronic communication to addresses contained in one or more whitelists.

Some embodiments may also support a particular approach to testing the received electronic communication which may also be applicable for use in network level security and intrusion detection. In such embodiments each received communication is interrogated by a plurality of interrogation engines where each such interrogation engine is of a particular type designed to test the communication for a particular security risk. Each received communication is interrogated by a series of interrogation engines of differing types. The ordering and selection of interrogation engine types for use with received communications may in some embodiments be configurable whereas in others the ordering and selection may be fixed.

Associated with each interrogation engine is a queue of indices for communications to be evaluated by the particular interrogation engine. When a communication is received it is stored and assigned an index. The index for the receive communication is placed in a queue associated with an interrogation of a particular type as determined by the interrogation engine ordering. Upon completion of the assessment of the received communication by the interrogation engine associated with the assigned queue the index is assigned to a new queue associated with an interrogation engine of the next type as determined by the interrogation engine ordering. The assignment process continues until the received communication has been assessed by an interrogation engine of each type as determined by the interrogation engine selection. If the communication is successfully passes an interrogation engine of each type the communication is forwarded to its appropriate destination. In some embodiments if the communication fails any particular engine a warning indicator signal may be output the communication may then be forwarded with or without an indication of its failure to its appropriate destination to an application administrator and or both.

In some embodiments using this queuing approach the assignment of the index for a received communication to a queue for an interrogation engine of a particular type may involve an evaluation of the current load across all queues for the particular interrogation engine type. If a threshold load exists a new instance of an interrogation engine of the particular type may be spawned with an associated index queue. The index for the received communication may then be assigned for the queue associated with the interrogation engine instance. In some embodiments the load across the queues associated with particular type may be redistributed across the queues including the one associated with the new interrogation engine instance prior to the assignment of the index associated with the newly received communication to the queue. Some embodiments may also periodically or at particular times such as a determination that a particular queue is empty evaluate the load across queues for a type of interrogation engine and if an inactivity threshold is met shutdown excess interrogation instances of that type and disassociating or deallocating indices queues associated with shutdown instances.

Alternatively a fixed number of interrogation engines of each particular type may be configured in which case dynamic instance creation may or may not occur. In fixed instance embodiments not supporting dynamic instance creation assignment to a particular queue may result from any appropriate allocation including loud evaluation or serial cycling through queues associated with each interrogation engine instance of the particular type desired.

In some embodiments anomaly detection may occur through a process outlined as follows. In such a process data associated with a received communication is collected. The data may be accumulated from a variety of source such as from the communication itself and from the manner of its transmission and receipt. The data may be collected in any appropriate manner such as the multiple queue interrogation approach summarized above and discussed in greater detail below. Alternatively the data collection may result from a parallel testing process where a variety of test is individually applied to the received communication in parallel. In other embodiments a single combined analysis such as via neural network may be applied to simultaneously collect data associated with the received communication across multiple dimensions.

The collected data is then analyzed to determine whether the received communication represents an anomaly. The analysis will typically be based upon the collected data associated with the received communication in conjunction with established communication patterns over a given time period represented by aggregated data associated with previously received communications. The analysis may further be based upon defined and or configurable anomaly rules. In some embodiments analysis may be combined with the data collection for instance a neural network could both collect the data associated with the received communication and analyze it.

The adaptive communication interrogation can use established communication patterns over a given time period represented by aggregated data associated with previously received communications. The analysis can further be based upon defined and or configurable spam rules. In some embodiments analysis can be combined with the data collection for instance a neural network could both collect the data associated with the received communication and analyze it.

Finally if an anomaly is detected with respect to the received communication an indicator signal is generated. The generated signal may provide a warning to an application administrator or trigger some other appropriate action. In some embodiments the indicator signal generated may provide a generalized indication of an anomaly in other embodiments the indicator may provide additional data as to a specific anomaly or anomalies detected. In the later embodiments any warning and or actions resulting from the signal may be dependent upon the additional data.

Data collected from received communications can be analyzed to determine whether the received communication is on one or more whitelists. The analysis is typically based upon the collected data associated with the received communication in conjunction with reference to one or more whitelists. If no match to a whitelist is found the communication can be subject to a certain level of interrogation. If a match to the whitelist is found the communication can either bypass any message interrogation or it can be subject to a different level of interrogation. In one preferred embodiment if a match to a whitelist is found the message can be subject to either adaptive message interrogation or no message interrogation. If no match to a whitelist is found the message can be subject to normal message interrogation. Additionally a whitelist can be created and or updated based on outbound communication. In one preferred embodiment some or all of the destination addresses of outbound communications are added to a whitelist. If a destination address already appears on a whitelist a confidence value associated with the destination can be modified based upon the destination address presence. For instance a usage count may be maintained such a usage can reflect absolute usage of the address or usage of the address over a given period of time.

Additional advantages of the invention will be set forth in part in the description which follows and in part will be obvious from the description or may be learned by practice of the invention. The advantages of the invention will be realized and attained by means of the elements and combinations particularly pointed out in the appended claims. It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention as claimed.

Exemplary embodiments of the present invention are now described in detail. Referring to the drawings like numbers indicate like parts throughout the views. As used in the description herein and throughout the claims that follow the meaning of a an and the includes plural reference unless the context clearly dictates otherwise. Also as used in the description herein and throughout the claims that follow the meaning of in includes on unless the context clearly dictates otherwise. Finally as used in the description herein and throughout the claims that follow the meanings of and and or include both the conjunctive and disjunctive and may be used interchangeably unless the context clearly dictates otherwise. Ranges may be expressed herein as from about one particular value and or to about another particular value. When such a range is expressed another embodiment includes from the one particular value and or to the other particular value. Similarly when values are expressed as approximations by use of the antecedent about it will be understood that the particular value from another embodiment. It will be further understood that the endpoints of each of the ranges are significant both in relation to the other endpoint and independently of the other endpoint.

For convenience and exemplary purposes only the foregoing discussion makes reference to hardware device however those skilled in the art will understand that the hardware and or software used to implement the systems and methods according to the present invention may reside in other appropriate network management hardware and software elements. Moreover hardware device is depicted as a single element. In various embodiments a multiplicity of actual hardware devices may be used. Multiple devices that provide security enhancement for application servers of a particular type such as e mail or Web may be used where communications of the particular type are allocated among the multiple devices by an appropriate allocation strategy such as 1 serial assignment that assigns a communication to each device sequentially or 2 via the use of a hardware and or software load balancer that assigns a communication to the device based upon current device burden. A single device may provide enhanced security across multiple application server types or each device may only provide enhanced security for a single application server type.

In one embodiment hardware device may be a rack mounted Intel based server at either 1U or 2U sizes. The hardware device can be configured with redundant components such as power supplies processors and disk arrays for high availability and scalability. The hardware device may include SSL TLS accelerators for enhanced performance of encrypted messages.

The hardware device will include a system processor potentially including multiple processing elements where each processing element may be supported via Intel compatible processor platforms preferably using at least one PENTIUM III or CELERON Intel Corp. Santa Clara Calif. class processor alternative processors such as UltraSPARC Sun Microsystems Palo Alto Calif. could be used in other embodiments. In some embodiments security enhancement functionality as further described below may be distributed across multiple processing elements. The term processing element may refer to 1 a process running on a particular piece or across particular pieces of hardware 2 a particular piece of hardware or either 1 or 2 as for context allows.

The hardware device would have an SDS that could include a variety of primary and secondary storage elements. In one preferred embodiment The SDS would include RAM as part of the primary storage the amount of RAM might range from 128 MB to 4 GB although these amounts could vary and represent overlapping use such as where security enhancement according to the present invention is integrated into a firewall system. The primary storage may in some embodiments include other forms of memory such as cache registers non volatile memory e.g. FLASH ROM EPROM etc. etc.

The SDS may also include secondary storage including single multiple and or varied servers and storage elements. For example the SDS may use internal storage devices connected to the system processor. In embodiments where a single processing element supports all of the security enhancement functionality a local hard disk drive may serve as the secondary storage of the SDS and a disk operating system executing on such a single processing element may act as a data server receiving and servicing data requests.

It will be understood by those skilled in the art that the different information used in the security enhancement processes and systems according to the present invention may be logically or physically segregated within a single device serving as secondary storage for the SDS multiple related data stores accessible through a unified management system which together serve as the SDS or multiple independent data stores individually accessible through disparate management systems which may in some embodiments be collectively viewed as the SDS. The various storage elements that comprise the physical architecture of the SDS may be centrally located or distributed across a variety of diverse locations.

The architecture of the secondary storage of the system data stores may vary significantly in different embodiments. In several embodiments database s are used to store and manipulate the data in some such embodiments one or more relational database management systems such as DB2 IBM White Plains N.Y. SQL Server Microsoft Redmond Wash. ACCESS Microsoft Redmond Wash. ORACLE 81 Oracle Corp. Redwood Shores Calif. Ingres Computer Associates Islandia N.Y. MySQL MySQL AB Sweden or Adaptive Server Enterprise Sybase Inc. Emeryville Calif. may be used in connection with a variety of storage devices file servers that may include one or more standard magnetic and or optical disk drives using any appropriate interface including without limitation IDE and SCSI. In some embodiments a tape library such as Exabyte X80 Exabyte Corporation Boulder Colo. a storage attached network SAN solution such as available from EMC Inc. Hopkinton Mass. a network attached NAS solution such as a NetApp Filer 740 Network Appliances Sunnyvale Calif. or combinations thereof may be used. In other embodiments the data store may use database systems with other architectures such as object oriented spatial object relational or hierarchical or may use other storage implementations such as hash tables or flat files or combinations of such architectures. Such alternative approaches may use data servers other than database management systems such as a hash table look up server procedure and or process and or a flat file retrieval server procedure and or process. Further the SDS may use a combination of any of such approaches in organizing its secondary storage architecture.

The hardware device would have an appropriate operating system such as WINDOWS NT WINDOWS 2000 or WINDOWS XP Server Microsoft Redmond Wash. Solaris Sun Microsystems PALO Alto Calif. or LINUX or other UNIX variant . In one preferred embodiment the hardware device includes a pre loaded pre configured and hardened UNIX operating system based upon FreeBSD FreeBSD Inc. http www.freebsd.org . In this embodiment the UNIX kernel has been vastly reduced eliminating non essential user accounts unneeded network services and any functionality that is not required for security enhancement processing. The operating system code has been significantly modified to eliminate security vulnerabilities.

Depending upon the hardware operating system platform appropriate server software may be included to support the desired access for the purpose of configuration monitoring and or reporting. Web server functionality may be provided via an Internet Information Server Microsoft Redmond Wash. an Apache HTTP Server Apache Software Foundation Forest Hill Md. an iPlanet Web Server iPlanet E Commerce Solution A Sun Netscape Alliance Mountain View Calif. or other suitable Web server platform. The e mail services may be supported via an Exchange Server Microsoft Redmond Wash. sendmail or other suitable e mail server. Some embodiments may include one or more automated voice response AVR systems that are in addition to or instead of the aforementioned access servers. Such an AVR system could support a purely voice telephone driven interface to the environment with hard copy output delivered electronically to suitable hard copy output device e.g. printer facsimile etc. and forward as necessary through regular mail courier inter office mail facsimile or other suitable forwarding approach. In one preferred embodiment an Apache server variant provides an interface for remotely configuring the hardware device . Configuration monitoring and or reporting can be provided using some form of remote device or software. In one preferred embodiment SNMP is used to configure and or monitor the device. In one preferred embodiment any suitable remote client device is used to send and retrieve information and commands to from the hardware device . Such a remote client device can be provided in the form of a lava client or a windows based client running on any suitable platform such as a conventional workstation or a handheld wireless device or a proprietary client running on an appropriate platform also including a conventional workstation or handheld wireless device.

Blocks represent different assessments that may be applied to electronic communications. These blocks are representative of assessments that may be performed and do not constitute an exhaustive representation of all possible assessments for all possible server types. The terms test and testing may be used interchangeably with the terms assess assessment or assessing as appropriate in the description herein and in the claims that follow.

The application security system processes incoming communications and appears to network intruders as the actual application servers. This prevents the actual enterprise application server from a direct or indirect attack.

Electronic communications attempting to enter or leave a local communications network can be routed through present invention for assessment. The results of that assessment can determine if that message will be delivered to its intended recipient.

An incoming or outgoing communication and attachments thereto are received by a security system according to the present invention. The communication in one preferred embodiment is an e mail message. In other embodiments the communication may be an HTTP request or response A GOPHER request or response an FTP command or response telnet or WAIS interactions or other suitable Internet application communication.

The automated whitelist generation of the present invention allows the system to automatically create and or maintain one or more whitelists based on the outbound email traffic. In some embodiments the system can monitor outbound and or inbound email traffic and thereby determine the legitimate email addresses to add to the whitelist. The software can use a set of metrics to decide which outbound addresses are actually legitimate addresses.

A data collection process occurs that applies one or more assessment strategies to the received communication. The multiple queue interrogation approach summarized above and described in detail below provides the data collection functionality in one preferred embodiment. Alternatively the assessments may be performed on each received message in parallel. A separate processing element of the system processor would be responsible for applying each assessment to the received message. In other embodiments multiple risk assessments may be performed on the received communication simultaneously using an approach such as a neural network. The application of each assessment or the assessments in the aggregate generates one or more risk profiles associated with the received communication. The risk profile or log file generated based upon the assessment of the received communication is stored in the SDS. The collected data may be used to perform threat analysis or forensics. This processing may take place after the communication is already received and forwarded.

In one preferred embodiment particular assessments may be configurably enabled or disabled by an application administrator. An appropriate configuration interface system may be provided as discussed above in order to facilitate configuration by the application administrator.

An anomaly detection process analyzes the stored risk profile associated with the received communication in order to determine whether it is anomalous in light of data associated with previously received communications. In one preferred embodiment the anomaly process summarized above and described in detail below supports this detection functionality. Anomaly detection in some embodiments may be performed simultaneously with assessment. For instance an embodiment using a neural network to perform simultaneous assessment of a received communication for multiple risks may further analyze the received communication for anomalies in such an embodiment the data associated with the previously received communications may be encoded as weighting factors in the neural network.

In some embodiments the thresholds for various types of anomalies may be dynamically determined based upon the data associated with previously received communications. Alternatively an interface may be provided to an application administrator to allow configuration of particular thresholds with respect to individual anomaly types. In some embodiments thresholds by default may be dynamically derived unless specifically configured by an application administrator.

Anomalies are typically detected based upon a specific time period. Such a time period could be particular fixed period e.g. prior month prior day prior year since security device s last reboot etc. and apply to all anomaly types. Alternatively the time period for all anomaly types or each anomaly type individually may be configurable by an application administrator through an appropriate interface. Some embodiments may support a fixed period default for all anomaly types or each anomaly type individually which may be overridden by application administrator configuration.

In one preferred embodiment the stored risk profile associated with the received communication is aggregated with data associated with previously received communications of the same type. This newly aggregate data set is then used in analysis of subsequently received communications of that type.

If an anomaly is detected an anomaly indicator signal is output. The outputted signal may include data identifying the anomaly detected and the communication in which the anomaly was detected. Various types of anomalies are discussed below with respect to e mail application security. These types of anomalies may be detected using the specific detection approach discussed below or any of the aforementioned alternative anomaly detection approaches.

The outputted signal may trigger a further response in some embodiments alternatively the outputted signal may be the response. In one preferred embodiment the outputted signal may be a notification to one or more designated recipient via one or more respective specified delivery platform. For instance the notification could be in the form of an e mail message a page a facsimile an SNMP Simple Network Management Protocol alert an SMS Short Message System message a WAP Wireless Application Protocol alert OPSEC Operations Security warning a voice phone call or other suitable message. Alternatively such a notification could be triggered by the outputted signal.

Using SNMP allows interfacing with network level security using a manager and agent an example would be monitoring traffic flow through a particular router. OPSEC is a formalized process and method for protecting critical information. WAP is an open global specification that empowers mobile users with wireless devices to easily access and interact with information and services instantly. An example would be formatting a WAP page to a wireless device that supports WAP when an anomaly is detected. WAP pages are stripped down versions of HTML and are optimized for wireless networks and devices with small displays. SMS is a wireless technology that utilizes SMPT and SNMP for transports to deliver short text messages to wireless devices such as Nokia 8260 phone. SMS messages could be sent out to these devices to alert a user of an intrusion detection of anomaly alert.

Instead of or in addition to a notification one or more corrective measures could be triggered by the outputted signal. Such corrective measures could include refusing acceptance of further communications from the source of the received communication quarantining the communication stripping the communication so that it can be safely handled by the application server and or throttling excessive numbers of incoming connections per second to levels manageable by internal application servers.

In one preferred embodiment an interface may be provided that allows an application administrator to selectively configure a desired response and associated this configured response with a particular anomaly type such that when an anomaly of that type is detected the configured response occurs.

Finally if an anomaly is detected with respect to a received communication the communication may or may not be forwarded to the intended destination. Whether communications determined to be anomalous are forwarded or not may in certain embodiments be configurable with respect to all anomaly types. Alternatively forwarding of anomalous communications could be configurable with respect to individual anomaly types. In some such embodiments a default forwarding setting could be available with respect to any individual anomaly types not specifically configured.

A TMC system can reside on a computer system in communication with one or more application and or network layer security systems. A typical hardware configuration for the TMC includes a system processor and a system data store which can be similar in capacity to those described herein above with respect to the application layer security systems. Typically the communication can occur via a computer network such as the Internet however one or more systems can connect to the TMC via other mechanism including direct connection and dial up access.

The TMC includes at least one input a processing system and at least one output. depicts a flow chart of a rule creation process in an exemplary TMC. Input can be information about messages messaging systems attacks vulnerabilities threats associated with them or any other information one skilled in the art would find relevant to threat analysis. In addition feedback to the TMC may also be provided by one or more application layer security systems. The final output of the TMC can includes rules and or policies that can be used to protect against threats both known and unknown by application layer security systems. These rules and or policies can be used by one or more application layer security systems.

In one preferred embodiment rule and policy creation can be based on the set of threat information that is received. Information can be received from one or more MSSs or any other threat information source configured to communicate with a TMC.

The output of the TMC can be influenced by a Rules and Policy Application Programming Interface API . While only one API is depicted in the exemplary embodiment of one skilled in the art will realize that multiple APIs can be configured to perform the function desired. In some embodiments the API can be modified as often as necessary or desired to account for any changes in threat and or traffic patterns. The API can be programmed or adapted to use proprietary formats based on message interrogation systems in place on application layer security servers as well as standard intrusion detection rule formats.

In some embodiments the output of the Rules and Policy API can be in a natural language. In other embodiments the output can be in a rules expression language including but not limited to regular expressions intrusion detection information format such as IDMEF mail filtering languages such as SIEVE proprietary rule expression formats or other formats one skilled in the art would find appropriate. As a non limiting example natural language output can be used to explain to an administrator or user how to configure the system with the suggested rules and policies.

The API can be used to improve the final set of rules generated by the TMC. As a non limiting example some message security systems include interrogation engines that use proprietary rule formats. In such a system a rule to block incoming messages with a threat exe attachment can be specified as 

As a non limiting example a rule block incoming messages with a Threat Title subject in such a system can be specified as 

Different embodiments can use different types of rules for performing different types of filtering. If a Rules and Policy API is used The Rule and Policy Creation module must be programmed or adapted to communicate with the API.

The output of the TMC can be influenced by goals . The goals can be global goals goals for individual messaging security servers or goals for individual users. As non limiting examples some MSS embodiments can have more conservative threat management policies. Some embodiments can be configured to use rules that are automatically put in place while other embodiments can be configured to use rules to be approved by a local administrator. In some situations it may be desirable to use rules that discard objectionable content while in other situations it may be desirable to quarantine that content. In other situations a higher or lower confidence in the likelihood of a threat before an action is taken may be desirable. The goals can be global goals or different goals for different MSSs. As a non limiting example the goal may be a certain effectiveness value and a certain accuracy value. For example a goal can be given to the system that specifies 95 effectiveness and 99.9 accuracy for spam detection.

In some embodiments as another goal the system can allow one or more users MSS or other entity to provide a definition of threatening communications. As a non limiting example in the case of spam spam may not be well defined. Rather than allowing only a binary decision the present invention can classify messages in different categories e.g. business email personal email chain letters adult language porn web product offerings newsletters mailing lists etc. In some embodiments an individual user administrator or other suitable human or computerized user can register preferences concerning receipt of any of these types of content. The system can then enforce that policy for that entity. This can be useful in the threat pushback system further described below and depicted in .

The system can perform input parsing and feature extraction according to input type and source. In the case of spam messages the input can include spam messages that are stored in proprietary formats such as Microsoft s .pst format Unix mbox format forwarded spam or spam sent as an attachment an archive of spam messages or other source. The spam messages can be accessed from local storage or from remote storage using protocols such as but not limited to HTTP SCP FTP IMAP or RPC. For an individual message relevant features can include headers origin and message contents. Each type of feature can be extracted and stored as appropriate.

One preferred embodiment can use regular expression content matching tools to parse messages and extract features. A prefilter can be used that defines the regular expression used for content matching. This determines the type of features that are extracted. As a non limiting example for extracting message subjects a regex filter can be used that only examines subject lines. To extract information about all headers a regex filter can be used that only observes message headers. Similarly different pre filters can be used to extract different types of content from the body. A normal tokenizer pre filter can provide normal content features. These features can be words phrases n grams or other features one skilled in the art would find useful. The prefilter can be sensitive to certain types of words including ignoring certain email address and domain names. The prefilter can also cause the features to focus on email addresses URLs phone numbers etc.

The system can include an anonymization module that assures that sensitive features are not extracted and exposed. As a non limiting example the anonymization module can determine the identification of the spam victim and the domain and prevent exposure of that information.

For virus alerts input can be email messages that explain the presence and properties of a new virus or worm. The input parser can be configured to parse these messages and determine the relevant properties of a threat. These properties can include but are not limited to the attachment name or types subject lines and from addresses. The input parser may be given different format files or pre filters for the different sources of virus alerts. Alternatively the virus alert parser can be in communication with web pages to access other information. The information can be parsed for relevant properties. In other embodiments the virus alert parser may interact directly with a database that stores such information or a user may manually enter data based on such information into the system.

The rule creation system can reside on a single system or multiple processes can run on multiple systems. Threat information can be reduced to a canonical form and the relevant features extracted. The system can utilize a diversity of algorithms to determine the relevant features and or reduce the feature set. In some embodiments each located feature can be associated with an interrogation system on the MSS. The TMC can determine the appropriate type of rule to create. In some embodiments a feature can be expressed using a plurality of Interrogation systems. In some embodiments feature sets can be reduced and efficient types of rules can created.

In some embodiments resultant rules can have a given weight and certain interrogation systems may have some weight in the overall threat value for a particular message. These values can be determined based on the input from the system. Therefore these values can be adjusted when desired based on new threats feedback from the MSSs and other appropriate sources. The MSSs can be programmed or adapted to determine an aggregate threat likelihood based on automatically adjusted weights or confidence values for each rule and interrogation system or other relevant information. In one preferred embodiment the rule creation system can include a scheduler that looks for new threat information.

The system first creates a set of candidate rules set . Before these are distributed the system can use goal based testing to determine the validity of these rules.

Some embodiments of the present invention can test the rules and policies. The test data may include threatening and non threatening data. The system can use the test data sets to discover false positives and negatives of the system as well as general system performance. The goals used for rule creation can also used as input to the testing. Additional goals including but not limited to performance goals can be specified for testing. If specified goals are not met the system can automatically adjust the feature sets the weights of individual features the weights of each interrogation system and any other relevant parameters to reach the goals. Once the correct tuning is achieved the rule sets can be approved and distributed the MSSs.

Many systems known in the art only address symptoms of an attack in the local environment. Besides notifying other systems that participate in the network of MSSs some embodiments of the present invention can determine the source of a threat and push the threat back towards the source. Once the source of a threat is determined the system can send messages up the network to other systems in the hierarchy.

A threat pushback system can reside on a computer system as part of or as a compliment to an application client an application layer security system or a TMC. A typical hardware configuration for the threat pushback system includes a system processor and a system data store which can be similar in capacity to those described herein above with respect to the application layer security systems. Typically the communication can occur via a computer network such as the Internet however one or more other mechanism can be used including direct connection and dial up access.

The threat notification protocol can be standardized across the participating systems. Some embodiments can include a threat response module programmed or adapted to respond to the threat notification information.

In a preferred embodiment the system of the present invention can be programmed or adapted to function at the application layer. Such an embodiment can be readily deployable. If an underlying network layer pushback system is operational the system can utilize some of its functionality to determine the path to a threat. Additionally the threat notification system can determine the source of the attack. As a non limiting example in the case of spam to determine the source of the attack message headers must be examined. The system can determine how may of these headers can be trusted. Forged headers can be identified and ignored. This process may include lookups to external databases such as registries of IP and ASN numbers such as ARIN or databases of spam sources such as spamhaus.

Because an attacker may be able to forge the path information that is shown in the communication the system can process the available information to determine the correct path. This can be accomplished with any combination of application level information network information or information from external systems such as IP traceback systems and other resources known to one skilled in the art. At the application level an attacker may be able to forge some identifying information. The path determination module can provide the path information to the notification sender module. The path determination module can include a path extraction submodule and a path verification submodule.

In one embodiment the path extraction submodule can parse the identifying information and provide that as the path information. That information however has not verified and could be inaccurate. In another preferred embodiment the path verification module can process the extracted path information to determine the valid path information. As a non limiting example the path extraction submodule can read message information such as the headers. The Return Path or Received headers can provide information regarding the path of email servers that a message traveled. The FROM header can be used to identify the email address of the sender. The MAIL FROM RFC 821 header can be used to indicate the email address of the sender. The EHLO RFC 821 header can be used to indicate the domain or hostname of the sender. Other headers and message features may be used including the Message Id and the actual contents of the message. Call for action information is contact information provided for the receiver such as a reply email address a URL a postal address or a phone number. This information in a message can be used. Other information known to one skilled in the art including but not limited to the IP address of the network connection can also be used.

Several verification methods can be used to determine information authenticity. As a non limiting example most of the above mentioned headers are easily forged so a more reliable source is the Return Path or Received headers. The goal of the present invention is to determine the longest possible authentic path. In one embodiment of the present invention only the last header is used since this header represents the actual server that contacted the victim s server. Each Received header contains Received from and Received by information. These fields can be verified with DNS for appropriate MX records. A records and or reverse records as well as other appropriate sources known to one skilled in the art. These hosts can be checked against open relay lists dial up addresses lists and known spam source lists. The presence on any of these lists can provide additional information about the last accurate Received header. Additionally the chain of received headers can be verified against each other. Inconsistencies in this chain can also be given additional information about the last accurate Received header. Other details of these headers can be used to verify the path. As a non limiting example the date information and server version information can be used.

Once the system determines that a pushback message needs to be forwarded in a particular direction the system can determine what information needs to be included in the pushback message. The threat notification of the present invention includes additional detailed information about the threat in addition to the IP address of the source.

Detailed threat information can allow systems to make local decisions about how to react to a threat. As a non limiting example the above described threat classification system can be used to process spam messages. Information concerning a spam attack sent through the threat pushback system can include information concerning the category of threat and other relevant characteristics.

The receiving system can be configured to block certain portions of communications at an organizational level. Furthermore ISPs could use this information to block certain categories of spam messages including but not limited to fraudulent messages. The system can be configured such that an organization can have policies to block chain letters and adult language. At the desktop level an individual can configure the system to block newsletters and mailing lists in addition. This allows a common definition for blocked material as close to the source as possible while not requiring a common definition of spam.

The threat information can indicate among other parameters the presence of a threat as well as identify the source and or provide detailed threat and or response information. To identify the source the information provided can include the Identity of the source such as its IP address or hostname path information entire determined path information. Additionally path information can be provided so that other hosts can perform independent own extraction and or verification. The system of the present invention can also indicate the traffic that is determined to be a threat so that the receivers on the path can determine the details from stored information. This systems and methods of the present invention are an enhanced form of reverse path forwarding used in routing systems.

In one embodiment the system can be configured so that communications matched to a whitelist entry may be subject to either no interrogation or less rigorous interrogation. Once a whitelist has at least one entry the incoming message interrogation system can utilize it in connection with the interrogation of a message.

The initial record for an outbound address can include the email address the internal email address the message sent time usage count last time used and or any other characteristics one skilled in the art would find relevant or useful. In the case of an email address that is already present on a whitelist the system can use a separate record for each instance of that email address being used as an outbound address or the system can maintain a single record for each outbound address with a summary of information in that entry including information describing instances of use. The system can store records in a number of other ways using different data structures. The records may include other representations of data in addition to the email address including by not limited to a hash of the email address.

In a preferred embodiment the system can store records in a MySQL database. As a non limiting example the following command can be used to build a database comprising the external and internal email addresses date of last update and an occurrence counter.

In some embodiments the system can allow unlimited storage. In other embodiments the storage available for the list can be limited. In still other embodiments the system can allow for management of the size of the list. A number of caching techniques can be used including but not limited to first in first out and least recently used. Other techniques can include an accounting of the number of internal users that reported the outbound address. List cleanup can occur in real time or periodically. Additionally one skilled in the art will recognize that a wide variety of list management techniques and procedures can be used to manage a whitelist in connection with the present invention.

An example of a system using a whitelist according to the present invention is shown in . One or more relevant parameters of inbound communication are compared against one or more whitelists . In some embodiments the whitelist is checked at each incoming email message. In a preferred embodiment the comparison includes origination email addresses. If the check against a whitelist reveals no match then the message is subject to normal message interrogation . Normal message interrogation can employ analysis criteria that are the most sensitive to spam or other threats as discussed hereinabove. If a message passes normal interrogation i.e. it is determined not to be spam or a threat or to have a lower likelihood of being spam or a threat it can be presented to its intended recipient for delivery . If the check against a whitelist reveals a match the system can be configured to process the message in a variety of ways. In one embodiment the system can be programmed or arranged to bypass any message interrogation and deliver the message to its intended recipient . In an alternative embodiment the system can be programmed or arranged to process the message using adaptive message interrogation . If adaptive message interrogation determines a message is not spam it can forward the message for delivery .

In some embodiments both options are selectively available. The decision whether to pass whitelisted communications through adaptive message interrogation or to bypass any message interrogation can be made per deployment or can be based on the details of the whitelist entry. For instance messages from more frequently used outbound address can bypass interrogation completely wheras messages from less frequently used outbound addresses can be subjected to adaptive message interrogation .

If the message goes through normal or adaptive interrogation with the whitelist information the interrogation module can utilize the whitelist information to effect the type and or level of interrogation. In some preferred embodiments the adaptive message interrogation can use multiple levels of trust as further described below and in . In other embodiments the adaptive message interrogation can set a confidence indicator indicative of the confidence the interrogator has in its characterization.

Messages that are not delivered to the intended recipient can be either quarantined or deleted. In an alternative embodiment messages determined to be spam can be indicated as spam or a threat and forwarded to the intended recipient.

Additionally each outbound email address can be assigned a confidence value. According to the confidence value associated with a given incoming email address incoming messages can be subjected to variable levels of interrogation. In one preferred embodiment Incoming messages associated with lower confidence values are subjected to more aggressive spam interrogation and incoming messages associated with higher confidence values are subjected to less aggressive spam interrogation. In other embodiments the message can be given positive credits to offset any negative spam detection points based on the confidence value.

One preferred embodiment of the system allows some or all external email recipients to be whitelisted . Some embodiments can have a metric that describes the number of outgoing messages to a particular email address. When the metric reaches a certain threshold the email address can be whitelisted. Other embodiments can include the ability to track addresses over time. In those embodiments if the metric exceeds a certain value for a particular outbound email address during a particular time then that entry can be whitelisted.

The parameters described above may be configurable by an application administrator through an appropriate interface. Some embodiments may support fixed parameters which may be overridden by application administrator configuration.

In some embodiments the threshold for characterization as spam or a threat may be dynamically determined based upon the data associated with previously received communications. Alternatively an interface may be provided to an application administrator to allow configuration of particular thresholds with respect to individual addresses. In some embodiments thresholds by default may be dynamically derived unless specifically configured by an application administrator.

When spam or a threat is detected instead of or in addition to a notification one or more response measures could be triggered. Such responsive measures could include refusing acceptance of further communications from the source of the received communication quarantining the communication stripping the communication so that it can be forwarded to its intended recipient and or throttling excessive numbers of incoming communications from certain sources.

One issue with whitelists is that attackers or spammers can pretend to send messages from whitelisted addresses and therefore bypass filtering and anti spam tools. It is relatively easy for an attacker to forge the sender information on messages. To overcome this limitation of whitelists the system of the present invention allows the authentication of the sender information. There are several methods for integrating sender authentication with a whitelist system. In one embodiment only authenticated senders can be whitelisted. Such a procedure can reduce the likelihood of forged senders testing whitelisted. However in many environments the percentage of messages that are authenticated is low thereby reducing the effectiveness of whitelisting. Some embodiments of the present invention can allow both authenticated and unauthenticated senders to be whitelisted. In these embodiments a higher trust value is given to messages from authenticated senders. SMIME and PGP offer mechanism for providing authentication.

such embodiment is depicted in . As a non limiting example when a message is received from a sender on a whitelist an associated level of trust is retrieved or calculated . In some embodiments the trust level value is a single value associated with the whitelist entry that simply requires retrieval. In other embodiments the trust level value can be calculated as a weighted sum of various characteristics of the entry in some such embodiments the weights can be statically defined defaulted subject to override by a user or other computer system or dynamically configurable. That associated level of trust can be compared to a threshold level . Any communications that have a trust level that meets or exceeds the trust level threshold can bypass message interrogation while communications that do not have a trust sufficient trust level will be processed with at least some interrogation. . Messages that bypass interrogation as well as messages that pass interrogation can be delivered to the intended recipient . In such an embodiment messages not associated with a whitelist entry are subjected to interrogation and further processing .

embodiments of the present invention can allow the trust level threshold to be configured by an administrator other user of the system or other computer systems.

The spam threat detection according to present invention examines every outbound message and maintains a list of known outbound email addresses. The resulting list can then be used as the list of trusted senders. However it may not be advisable in all cases to add every outbound message recipient to the list of trusted senders for incoming mail. For example while a user may send a message to a newsgroup that does not indicate that messages from this newsgroup should necessarily bypass mail filtering. To further illustrate a user may send an unsubscribe message to a newsletter or in response to a spam message. Thus there can be situations in which unconditional whitelist addition is not advisable. The system of the present invention allows certain exclusion conditions to be entered and applied.

These exclusion conditions can include rule sets heuristics artificial intelligence decision trees or any combination thereof. The conditions can be set by and administrator or other user of the system.

With reference to a multiple queue approach is provided for applying a plurality of risk assessments to a received communication.

Messages are first placed in an unprocessed message store a portion of the SDS for advanced processing and administration. Messages come in from an external source and are placed in this store . This store maintains physical control over the message until the end of the process or if a message does not pass interrogation criteria and is therefore quarantined.

An index to the message in the store is used to pass through each of the queues B B B B in the queuing layer and to the interrogation engines A A A A instead of the actual message itself to provide scalability and performance enhancements as the index is significantly smaller than the message itself.

Both the queues and the interrogation engines use the index to point back to the actual message in the unprocessed message store to perform actions on the message. Any suitable index allocation approach may be used to assign an index to a received message or communication. For instances indices may be assigned by incrementing the index assigned to the previously received communication beginning with some fixed index such as 0 for the first received communication the index could be reset to the fixed starting point after a sufficiently large index has been assigned. In some embodiments an index may be assigned based upon characteristics of the received communication such as type of communications time of arrival etc.

This approach provides independent processing of messages by utilizing a multi threaded multi process methodology thereby providing a scalable mechanism to process high volumes of messages by utilizing a multi threaded multi process approach.

By processing messages independently the queueing layer decides the most efficient means of processing by either placing an index to the message on an existing queue or creating a new queue and placing the index to the message on that queue. In the event that a new queue is created a new instance of the particular interrogation engine type will be created that will be acting on the new queue.

Queues can be added or dropped dynamically for scalability and administration. The application administrator can in one preferred embodiment configure the original number of queues to be used by the system at start up. The administrator also has the capability of dynamically dropping or adding specific queues or types of queues for performance and administration purposes. Each queue is tied to a particular interrogation engine where multiple queues and multiple processes can exist.

Proprietary application specific engines can act on each queue for performing content filtering rules based policy enforcement and misuse prevention etc. A loosely coupled system allows for proprietary application specific applications to be added enhancing functionality.

This design provides the adaptive method for message interrogation. Application specific engines act on the message via the index to the message in the unprocessed message store for completing content interrogation.

Administration of the queues provides the retrieving message details via an appropriate interface such as a Web e mail and or telephone based interface system as discussed above in order to facilitate access and management by the application administrator. Administration of the queues allows the administrator to select message queue order other than the system default to customize the behavior of the system to best meet the needs of the administrator s particular network and system configuration.

Upon receipt at step the communication is stored in a portion of the SDS referred to as the unprocessed message store. The communication is assigned at step an index used to uniquely identify it in the unprocessed message store and this index is placed in the first queue based upon the ordering constraints.

The processing that occurs at step awaiting receipt of communication continues independently of the further steps in this process and will consequently spawn a new traversal of the remainder of the flow chart with each received communication. In some embodiments multiple embodiments multiple instances of step may be simultaneously awaiting receipt of communications.

In some embodiments the receipt of a communication may trigger a load evaluation to determine if additional interrogation engines and associated queues should be initiated. In other embodiments a separate process may perform this load analysis on a periodic basis and or at the direction of an application administrator.

The index moves through the queue until it is ready to be interrogated by the interrogation engine associated with the queue as determined in step . This incremental movement is depicted as looping between steps and until ready for interrogation. If the communication is not ready for evaluation at step the communication continues moves to move through the queue at step . If the communication is ready the index is provided to the appropriate interrogation engine at step in .

The interrogation engine processes the communication based upon its index in step . Upon completion of interrogation in step the interrogation creates a new risk profile associated with the received communication based upon the interrogation.

If additional interrogations are to occur step the index for the communication is place in a queue for an instance of the next interrogation type in step . Processing continues with step as the index moves through this next queue.

If no more interrogations are required step a further check is made to determine if the communication passed interrogation by all appropriate engines at step . If the communication passed all interrogations then it is forwarded to its destination in step and processing with respect to this communication ends at step .

If the communication failed one or more interrogation as determined at step failure processing occurs at step . Upon completion of appropriate failure processing processing with respect to this communication ends at step .

Failure processing may involve a variety of notification and or corrective measures. Such notifications and or corrective measures may include those as discussed above and in further detail below with respect to anomaly detection.

The Anomaly Detection process according to an exemplary embodiment of the present invention uses three components as depicted in 

This is where the actual collection of data occurs. The collection engine receives a communication directed to or originating from an application server. One or more tests are applied to the received communication. These one or more tests may correspond to the various risk assessments discussed above.

The collection engine in one preferred embodiment as depicted in uses the multiple queue approach discussed above however this particular collection engine architecture is intended as exemplary rather than restrictive with respect to collection engines usable within the context of this anomaly detection process.

As depicted in the collection engine includes one or more interrogation engines of one or more interrogation engine types in an interrogation layer . Associated with each interrogation engine type in a queuing layer is at least one indices queue containing the indices of received communication awaiting interrogation by an interrogation engine of the associated type. Collectively the queuing layer and the interrogation layer from the collection engine. A received communication is received stored in the SDS and assigned an index. The index is queued in the queuing layer for processing through the collection engine.

The data collected by the previous component is analyzed for unusual activity by the anomaly detection engine . The Analysis is based on data accumulated from analysis of previously received communications over a period of time. A set of predefined heuristics may be used to detect anomalies using dynamically derived or predetermined thresholds. A variety of anomaly types may be defined generally for all types of Internet application communications while others may be defined for only particular application types such as e mail or Web. The data associated with previously received communications and appropriate configuration data are stored in the SDS.

The set of anomaly types that the analysis engine will detect may be selected from a larger set of known anomaly types. The set of interest may be set at compile time or configurable at run time or during execution in certain embodiments. In embodiments using the set approach all anomaly types and configuration information are set within the analysis engine. In some such embodiments different sets of anomalies may be of interest depending upon the type of communication received. In configurable at run time embodiments anomaly types are read from a configuration file or interactively configured at run time of the analysis engine. As with the set approach certain anomaly types may be of interest with respect to only selected types of communication. Finally in some embodiments including some set or configurable ones an interface such as described above may be provided allowing reconfiguration of the anomaly types of interest and parameters associated therewith while the analysis engine is executing.

The thresholds for various types of anomalies may be dynamically determined based upon the data associated with previously received communications. Alternatively an interface may be provided to an application administrator to allow configuration of particular thresholds with respect to individual anomaly types. In some embodiments thresholds by default may be dynamically derived unless specifically configured by an application administrator.

Anomalies are typically detected based upon a specific time period. Such a time period could be a particular fixed period e.g. prior month prior day prior year since security device s last reboot etc. and apply to all anomaly types. Alternatively the time period for all anomaly type individually may be configurable by an application administrator through an appropriate interface such as those discussed above. Some embodiments may support a fixed period default for all anomaly types or each anomaly type individually which may be overridden by application administrator configuration.

In one preferred embodiment as depicted in information from the risk profiles generated by the collection engine is compared with the acquired thresholds for anomaly types of interest. Based upon these comparisons a determination is made as to whether the received communication is anomalous and if so in what way anomaly type the communication is anomalous.

In one preferred embodiment the stored risk profile associated with the received communication is aggregated with data associated with previously received communications of the same type. This newly aggregate data set is then used in analysis of subsequently received communications of that type.

If an anomaly is detected an anomaly indicator signal is output. The outputted signal may include data identifying the anomaly type detected and the communication in which the anomaly was detected such as alert data . Various types of anomalies are discussed below with respect to e mail application security. These types of anomalies may be detected using the specific detection approach discussed below or any of the aforementioned alternative anomaly detection approaches.

Based on the analysis this component takes a decision of what sort of action needs to be triggered. Generally the action involves altering the administrator of the ongoing unusual activity. An alert engine performs this task by providing any appropriate notifications and or initiating any appropriate corrective actions.

The outputted signal may trigger a further response in some embodiments alternatively the outputted signal may be the response. In one preferred embodiment the outputted signal may be a notification to one or more designated recipient via one or more respective specified delivery platform. For instance the notification could be in the form of an e mail message a page a facsimile an SNMP alert an SMS message a WAP alert OPSEC warning a voice phone call or other suitable message. Alternatively such a notification could be triggered by the outputted signal.

Instead of or in addition to a notification one or more corrective measures could be triggered by the outputted signal. Such corrective measures could include refusing acceptance of further communications from the source of the received communication quarantining the communication stripping the communication so that it can be safely handled by the application server and or throttling excessive numbers of incoming connections per second to levels manageable by internal application servers.

In one preferred embodiment an interface may be provided that allows an application administrator to selectively configure a desired response and associate this configured response with a particular anomaly type such that when an anomaly of that type is detected the configured response occurs.

The process continues at step where anomaly definitional information is read e.g. Incoming messages that have the same attachment within a 15 minute interval . A determination is then made as to whether a new thread is needed this determination is based upon the read the anomaly details step not shown . In step if a new thread is required the thread is spun for processing in step . In step the process sleeps for a specified period of time before returning to step to read information regarding an anomaly.

Once processing of the new thread commences in step information needed to evaluate the anomaly is retrieved from appropriate locations in the SDS manipulated if needed and analyzed in step . A determination in step occurs to detect an anomaly. In one preferred embodiment this step uses predetermined threshold values to make the determination such predetermined threshold values could be provided interactively or via a configuration file. If an anomaly is not detected the process stops.

If an anomaly is detected an anomaly indicator signal is output at step which may result in a notification. The possible results of anomaly detection are discussed in more detail above with respect to the Action Engine.

The type of anomalies may vary depending upon the type and nature of the particular application server. The following discussion provides exemplary definitions of anomalies where e mail is the application context in question. Anomalies similar or identical to these can be defined with respect to other application server types.

There are many potential anomaly types of interest in an e mail system. The analysis is based on the collected data and dynamic rules for normality based on the historic audited data. In some embodiments an application administrator can be provided with an interface for configuring predefined rules with respect to different anomaly types. provides a sample screen for such an interface. The interface functionality may be provided via a Web server running on the security enhancement device or other suitable interface platform as discussed above.

In one preferred embodiment the threshold value for the analysis for each anomaly is derived from an anomaly action table. The action for each anomaly is also taken from this table. The analysis identifies that some thing unusual has occurred and hands over to the action module. Enumerated below with respect to e mail are anomalies of various types.

The table below depicts the fields in an anomaly table in one preferred embodiment using a relational database model for storing this information in the SDS.

The table below depicts the fields in an anomaly action table in one preferred embodiment using a relational database model for storing this information in the SDS.

Throughout this application various publications may have been referenced. The disclosures of these publications in their entireties are hereby incorporated by reference into this application in order to more fully describe the state of the art to which this invention pertains.

The embodiments described above are given as illustrative examples only. It will be readily appreciated by those skilled in the art that many deviations may be made from the specific embodiments disclosed in this specification without departing from the invention. Accordingly the scope of the invention is to be determined by the claims below rather than being limited to the specifically described embodiments above.

