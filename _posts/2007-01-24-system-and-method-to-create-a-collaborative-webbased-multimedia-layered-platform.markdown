---

title: System and method to create a collaborative web-based multimedia layered platform
abstract: The present invention relates to a system and method to allow multiple users to collaborate on tasks and interact in a shared space session within a network in real-time; using a media application to manage media-layers. Each media-layer serves as a container for multimedia programs or plug-ins. The invention allows which media-layer to display via organization metaphors and filtering criteria. When multiple users are logged into the same shared space, each user can invoke and observe modifications to media-layers with the browser based or client based application. All events are synchronized among all users in that shared space, where the system is a communication conduit. The media-layers in the shared space maintains spatial and temporal correlation by a media application stage manager tool and described as a collection file descriptor such as an XML file. The ability to invoke events that affect media-layers can be supported in a synched or non synched mode on demand.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07933956&OS=07933956&RS=07933956
owner: Simulat, Inc.
number: 07933956
owner_city: Berkeley
owner_country: US
publication_date: 20070124
---
This application claims the priority benefit of U.S. Provisional Application No. 60 761529 A System And Method To Create A Collaborative Web Based Multimedia Layered Platform filed on Jan. 24 2006.

In the last few years there has been an explosion in new forms of web based communication within a shared space. The synchronous form is most commonly practiced as Online Chat. With synchronous communication like Online Chat for example text is exchanged in real time between participants. Although images can be provided to a limited extent links to images or other multimedia is more commonly used. Another common form of synchronous communication is with web conferencing services. These services provide a discrete state synchronicity such that only one image can be shared at one time. Typically once the session has ended the images shared are lost. Many of the current online collaboration systems are beginning to record the sessions. However these recording are only recoding a series of images for play back.

The most common asynchronous forms of collaboration are Forums blogs and WIKIs. In the asynchronous case visitors can upload text or images so that all subsequent visitors can browse and see the text or images. Blogs and Forums have an advantage over Chat in that conversations can be linked into threads . This allows the user to follow a set of contributions in a linear and or nested fashion. Lacking is the real time aspect as well as the ability to layer media. Currently even if you can upload an image or multimedia clip into a chat room or blog it is not known for visitors to alter manipulate or annotate over the original posting. What is common to these forms of shared communication is that they are linear. All information whether text or image is accessed in order. A comment in a blog about an image does not appear on top of the image but instead next to it as with threads . The same holds true for a chat box. Users must cut and paste to refer to a past event.

Lacking is a system that will allow both synchronous and asynchronous communication using discrete media layers such that information can be organized by time and space which in turn can allow for a variety of organizational metaphors.

It will be desirable that multiple users are able to interact with one another and perform a plurality of multimedia tasks in a virtual and synchronized shared environment or to be able to access and review the performed tasks from local or remote sources at will in any order. It will also be desirable to allow users to set control or restrict the viewing of media layers in the same shared environment through different filtering algorithms. It is also desirable that an original image can seemed to be altered or manipulated by overlaying various media layers together.

The following terminologies used in the application are selectively defined by an online dictionary such as Wikipedia to help understanding 

The present invention relates to the field of collaborative computing and more particularly to a system and method for providing a browser based program to create and configure a shared space whereby multiple users can access this shared space to perform tasks and interact such as input modify text and delete images drawings and other multimedia in a real time synchronized manner. All media objects that are seen in this shared space are uniquely created and tracked such that they can be organized based on spatial temporal and relational criteria. This is accomplished by placing each media object within a container called a media layer. A shared space is defined as a virtual reference point whereas multiple users can interact in real time upon shared objects. A shared space is a conceptual construct created by processing executable machine codes from a plurality of programs or plug ins on each machine whereas actions initiated by one user is immediately observed by other users thus providing a sense of shared presence. A session is defined as the state of all objects GUI tools and controls and media layers at any given time within the shared space. Each media layer can serve as a container for shapes and objects as well as other programs such as text editor thumbnail viewer MP3 player games etc. The invention also allows which media layer to display via organization metaphors and filtering criteria.

When multiple users are logged into the same shared space as a session each user can become an author to interact observe and create new media layers with the application program as a plug in that is native to their machine or downloaded. All media layer events transform hide unhide copy paste delete etc. is synchronized among all users in that shared space thus all media assigned to a media layer will be synchronized through support plug ins where the media layer is a communication conduit. Media layers in the shared spaces can be viewed in either a synchronized or unsynchronized mode on demand. A user will have their own respective collection of layers and thus each user can filter what layers to view using a variety of criteria including the media attributes. A collection is defined as references to one or more media layers that have an organizational structure. Typically this is stored as an XML file. When multiple users are logged into the same shared space each user can observe and interact with the collection of layers as well as creating new layers.

Persistence is an element of blogs and WIKI s providing the ability to retain previous versions of a media attributes as data structure to be retrieved after it is modified. In online chat or online conferencing real time communication is an element for direct instant messaging of text based data. This invention advances a new paradigm in shared synchronized communication by combining both elements of persistence and real time communication with the addition of a third element not known to either blogs or online chat the added dimensions of time and space through the use of discrete layers in a media container that can be stacked on top of the other nested hidden unhidden and grouped in any desired relationship.

Direct annotation provides an added dimension to information creation and communication. By allowing a user to annotate over the original message information can be understood not only by linear additions but as a whole. In addition the annotation takes on a greater meaning precisely because of it s location in reference to the original media. This spatial temporal relationship is achieved by providing media layers. Each media layer contains a media element or object. All media layers are organized and described by some relationship and or dependency in hierarchy and how that organization is determined is by a metaphor. The metaphor is a means of organizing media layers such that humans can better understand the relationship between objects and the meanings implied by that relationship. For example one metaphor may be a book. In this case all media layers are further organized according to page numbers. Three media layers my have the page value of 1 . Two other media layers may have the page value of 2 . Additional tools that are native to or downloaded to the user s machine would then present the user with means of moving from page to page.

Those media layers that are associated with the current page are displayed. Others are hidden if they have already been loaded.

This functionality can be shared among concurrent and non concurrent remote users creating a shared space where users can interact in real time as well as create and alter information over time. This functionality is accessed by any of the known browser based applications such as the Microsoft Explorer Firefox or other web browsers mentioned in the definition list thus does not require software installation. Said functionality can also be accessed if compliant codes are downloaded or have already been downloaded to the client machine.

The following description includes the best mode of carrying out the invention. The detailed description is made for the purpose of illustrating the general principles of the invention and should not be taken in a limiting sense. The scope of the invention is determined by reference to the claims. We assign each part even if structurally identical to another part a unique reference number wherever that part is shown in the drawing figures.

The present invention relates to the field of collaborative computing and more particularly to a system and method for providing a browser based program to create and configure a shared space whereby multiple users can access this shared space to perform tasks and interact such as input modify text and delete images drawings and other multimedia via media layers in a real time synchronous manner. A shared space is defined as a virtual reference point whereas multiple users can interact in real time upon shared objects. It is a conceptual construct created by processing executable machine codes from a plurality of programs or plug ins typically using Flash Virtual Machine VM or Java VM. A session is defined as the state of all objects GUI tools and controls and media layers at any given time within the shared space. Each media layer can serve as a container for shapes and objects as well as other programs such as a text editor thumbnail viewer MP3 player games etc. The invention also allows which media layer s to display via organization metaphors and filtering criteria. The invention also allows for offline or unsynchronized interaction with objects of a session. Offline events are recorded for later integration with the session.

The system A comprises of a host in synchronous communication with one or more user machines to . In an embodiment the host is a server in communication with a database where the host is also in communication with a web server that communicates with a file storage . The database can be in a separate server or can be part of the host within the same server . Similarly the web server and the file storage can be separate units or can be integrated into a server . Yet in another embodiment a host is a server including the functions of the data base the web server and the file storage . The physical location of the database file storage and the method of writing the machine executable codes being integrated into the host server is not important to the invention as long as the functions are accessible to the host and to the user machines to .

In an embodiment each of the user machines to has an operating system to such as the Microsoft Windows XP Linux Macintosh OSX or any third party operating system. The operating system in each of the user machines to need not be the same as long as it supports a web browser or other application to access the internet and supports the execution of codes to facilitate the intended media functions of the invention. In another embodiment compiled Flash VM executable codes of the application are downloaded before the creation of a shared space to to each of the user machines to from the host session through the network and links to . Yet in another embodiment the application can be native to each of the user machines to as media applications to

One or more media layers to are created and respective media tools are from media applications to is generated by the interaction of the codes in the user machines to and the codes from the host service The network and the corresponding links to are part of the Wide Area Networks WAN Local Area Network LAN through Ethernet connections or wireless connections. Yet in other embodiments the network and the links can be Local Optical Networks LON or direct fiber optic links or direct terminal connections or plain old telephone service POTS . In all forms of link communications within the network the communications can be enhanced with known encryption protocols to improve security.

All services as contained within the host service are equipment selected from the list to include a server work station personal computer laptop computer Personal Digital Assistant PDA an Intelligent Electronic Device IED or any suitable computing platform with sufficient memory and processing power to perform the functions as a server in a network environment. The user machines to are equipment selected from the list to include a server work station terminal personal computer lap top computer Personal Digital Assistant PDA electronic tablet handheld wireless device a cellular phone an Intelligent Electronic Device IED or any suitable computing platform with sufficient memory and processing power to perform the functions as a user machine to perform media inputs in a network environment.

Yet in others embodiments the system A can be extended to include broad applications such as web conferencing local conference presentations projecting synchronized annotations or pointing tool to contents on multiple screens to mass audience on line interactive courses and tutoring live interactive interviews to multiple interviewees in different geographical locations interactive debate forums using multimedia interactive cellular phone chats and games secured synchronized interactive voting method combined with secured voter identification live military battlefield operational command remote interactive clinical instructions and operation training procedure and electric power utility interactive service support and trouble shooting etc. Said examples and the contents desired for the execution of said example can be assembled before and during synchronized events. Content can also be made available in an unsynchronized fashion such that independent content review or read only publishing can be supported.

In an embodiment the initialization of the system B in the synchronized state requires that the user s or client s machine has internet access through link to network and the ability to support compiled Flash based applications. A typical configuration will involve the use of a common web browser with a flash plug in and JavaScript enabled. Through the use of a URL the user or client makes a request to join a session by sending login credentials to the host . The host in turn will query the database to determine the tools that must be downloaded and the current session state parameters. In addition plug ins and are sometimes downloaded from third party servers and . Instruction and location of said plug ins and are provided by the host

The host first sends a base application that provides a synchronizing connection between that user and the host . A standard socket connection is established. Should this fail High Ports are tested for the ability to exchange data. Should this fail ports and are checked via standard HTTP protocols. Once a connection by links and from the user to the host has been established the host will send a list of required application tools to be loaded by the user machine . By only loading those tools that are required the system in the user s machine will start faster with a lower memory requirement. Should the user choose to run in thin mode those tools that are only needed on demand will be loaded into memory during their use and unloaded after their use is no longer required.

FIG. C is an embodiment of a system C illustrating the process of establishing and operating a session within a user application such as a web browser using various tools in Flash application . When a user logs onto the system C via the internet LAN or WAN the user is registered in a shared virtual environment session based on user s credentials and other parameters supplied at log on. In this exemplary example the flash application is loaded on to the client s machine by the client s web browser . This flash application in turn loads a communication synchronizer application that contacts the Host s server synchronization service and requests to be registered with a particular shared space for a session. Once this connection has been established all communication between the client application and the host sync service happen between these two applications.

Based on user credentials and other parameters supplied a list of tools and their location s on the file storage server s is generated. This list is passed to the flash application . The flash application then loads a stage manager tool into the buffer memory from the web server . This tool creates and manages the stage . Once this is done the flash application then sends a message back to the file storage server via sync application .

One of the tools that are loaded is the stage manager . This tool once loaded looks at the attribute list of the current room for the session. One item on that list is the type of layout to be used on the stage. If any other layout is defined besides default additional tools are downloaded to support the additional features. The stage manager is then provided a list of media layers to . Those media layers that are listed as active should be currently displayed. Active media layers and are accessed loaded and displayed on the stage . Once complete non active media layer s are downloaded and stored in cache memory in a prescribed order if this option was selected. All of the media layers together both loaded and unloaded to are called a collection .

The relationship of all media layers to to each other can be stored in an XML file known as the collection . The most exemplary example is the default stage manager system where all media layers are displayed using the Cartesian coordinate system where the y axis is inverted. An example XML collection file follows 

The stage manager tool then checks to see what type of collection has been loaded. In this case it is a book simple type collection. The tools required for this type of layout is listed in the tools section of the XML. The client flash application then downloads into memory those tools listed.

FIG. C illustrates another embodiment of various components of the Flash application interacting with the user s media layers to on the stage . Although there are a number of possible combinations of tools that can be loaded the one tool that is always loaded is the stage manager . The stage manager tool among other things established the coordinate system and layout format that will be populated by media layers to . The most typical configuration of the stage is a two dimensional cardinal system where is located on the upper left most side of the application window placed just under the displays for session and user information and controls. These controls are typically displayed at the top of the application window. The list of active media layers are passed to the stage manager . The media layers and that are tagged as visible are loaded first and then displayed in a stage .

A media layer is a container that serves as a reference point for media as well as other media layers. Since media layers can be attached to another media layer nesting of media layers can occur. For example a parent media layer contains an image of a human face on it. A child media layer is nested on top with a mustache drawn over the face and another child media layer is nested on top with eye glasses drawn. When the parent media layer s object is moved or hidden the two child media layer s objects will also move or be hidden thus maintaining their visual relationship. Each child however can have its visibility setting changed by a parent or another media layer in the patriarchy. A media layer from outside the patriarchy cannot modify a media layer unless such functionality is support by the system s API.

A screen shot is taken from the product Vyew in to illustrate the construct of a page . In page is a collection of media layers to in the drawing changes to . A media layer such as is a container to execute the codes of an application or a plug in. For example media layer contains a plug in in drawing changes to where a plurality of media objects can be executed such as to execute an mp3 music player in the media layer . Another example media layer is a gif image which is currently selected. It has the ability to render bitmaps and vector information images or animations directly to the display. Media layers can also display other compliant applications. The scale and position of a media layer can be modified by using tool which is part of toolset within the page . Each of the media layers to is referenced to a space coordinate origin of at the upper left corner of the page . The attributes of the media layers to are referenced in a collection file descriptor such as in a XML file.

FIGS. F and F illustrate the construct of a Book metaphor using media layers created and managed by tools . After the stage manager invokes the book metaphor toolset a media layer labeled as cover of a book image is loaded into a tool that supports the book metaphor.

Another media layer could then be created as a page. The media layer of the page holds object elements such as a graphic of paper texture . This media layer of page would be set as a child to the media layer of the book as well as have the attribute of page 2 . A third media layer would contain an image and this media layer will have a Z value of 1 placing it over the page media layer and then set as a child to this page media layer. Other media layers with annotation and media can be added as children to either the page media layer or one of the media layers that has been already set as a child to the page media layer. When the book media layer is displayed on the stage not shown the other children media layers to would be hidden. When the user opens the book the cover media layer would hide and the page media layer with its children and subsequent generations would appear. Because we are employing a book metaphor tools of FIG. F would be provided to the user that would assist in the visibility ordering and the setting of relationships between media layers to . The user would not know about child or parent or media layers only that they created a book and that they can add pages and then add content to those pages. In another example other metaphors not shown could be one of a 2.5D environment where media layers are expressed as 2D planes intermixed with 2.5D objects. A set of such as six media layers can be set as children to a parent media layer thus creating a cube for the 2.5D environment. These metaphors are supported with graphics that support the navigation and ordering of the multimedia elements that appear on each media layer. Since all media is displayed using media layers and all media layers can have their visibility stacking order position relationships etc. modified then various tools and GUI Graphical User Interface elements in the menu tool bars can be created to managed these attributes in a more user friendly method. Typically metaphors that humans are familiar with are used.

The issue of concurrent users in making an annotation to the media layer is addressed next. Unique to this invention is that ability to share in real time near real time as well as maintaining persistence the ability to create modify and delete media layers and the media elements associated with those media layers and regulate access to those media layers. In addition all tools and User Interface UI elements can be controlled at runtime based on commands from the stage manager. As such not all users logged into a shared space will see that same thing if such modifications are selected. For example the administrator of the shared space may wish to have all the tools made available to him or her. However all other users who are of type guest will not see any tools. Those users who are of type invited may see only a subset of tools that the administrator sees.

When a user is logged into the system actions that are performed on the media or changes to the media layer s attributes are tracked and sent to the server. The server maintains a log of the actions and the resulting status of media layers and their media. The server then repeats the actions to all users who are logged into the same session. When users enter in to a session they immediately load all active media layers media and plug ins. In this way every user who is logged into the system has a copy of the media elements and only has to execute the actions that were sent by the server. Since all users can if allowed by the administrator have their action communicated back to the server everyone s actions within the space is reflected on the display of all concurrent users. If the administer allows more then one user access to a media layer then only one action may occur at one time within a media layer. In other words if a user initiates an action no other actions can take place until the first action is complete. Concurrent actions can occur on separate media layers. The administrator can selected that all actions on media layers are NOT locked. This means that if two users click on the same media layers media then whomever s event is sent last will have said event respected unless the object is deleted or somehow unable to execute the later event.

A whiteboard tools perform the unique function of creating a new media layer every time a line is started and then stopped. Each line and or shape in the whiteboard tool library is treated like an individual object on its own media layer.

For whatever metaphor employed the information required to create and support an ordering construct is managed by the stage manager. All rights to what media layers and tools are loaded seen and how they function is controlled by the user or administrator who created the space account . The administrator can pass the rights of a media layers and tools to anyone s or to everyone.

Interacting with media layers in a synchronized mode is discussed next. The stage manager tool of the system insures that all changes in state of a media layer or actions that are passed to the media layer from that media layer s contents is communicated to the host server to either be recorded or sent to some or all of the other client machines and . This is accomplished by the host server maintaining a list of all subscribed client machines to . As an event is received from a client machine that event is logged and stored either on the host server and or on the database . This event is then passed to the rest of the client machines on the subscriber list. The event is then replicated on all client machines however in rare cases an exception rule can intercept the event and then follow a defined action which may or may not mimic the original event. For example a client machine may click on an object in a media layer thus making that object interactive. The client then moves the object from one location to another thus creating an event. The changed media layer attribute information in this case Position X Position Y Date last modified to the host server as an event. The host server records this new information and then sends this event information to all subscribed client machines to . Users on the client machines to would then see the same object from the original location to the new location as indicated by the terms of the event.

Alternately other input devices such as but not limited to a wireless PDA or electronic tablet a keyboard a mouse optical pointer USB flash memory stylus audio or video equipment such as a video camera or microphone or both can also be sent as inputs to the shared space to . The cellular phones to voice input can be integrated as a media layer over the other text or graphic layers during the teleconferencing.

The shared environment is multi dimensional thus allowing users to to sort information by not only content but spatial temporal and inter relationships between the media layers created. Because the shared spaces to is virtual and not restricted to one image more then one media can be placed within the same shared spaces to

