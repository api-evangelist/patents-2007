---

title: Method and system for dynamic binding in a storage area network
abstract: A system, method and computer program product for dynamically binding a server to a remote disk in a data center is provided. In a data center, servers and storage devices that manage multiple remote disks communicate over a switched fabric by using a standard protocol suite. The servers, storage devices and the switched fabric constitute a Storage Area Network (SAN). The devices present on the SAN are assigned a virtual identity, independent of their physical identity. The virtual identity of the servers facilitates the dynamic instantiation of the server images located on multiple remote disks on the servers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07814274&OS=07814274&RS=07814274
owner: Scalent Systems, Inc.
number: 07814274
owner_city: Palo Alto
owner_country: US
publication_date: 20070119
---
The invention generally relates to remote booting in a Storage Area Network SAN . More specifically the invention relates to a method and system for dynamically binding a server to a remote disk in a SAN.

A SAN is a network that interconnects servers and storage devices and enables high speed transfer of data between them. Each storage device includes multiple remote disks. Each remote disk stores several server images. A server image is a combination of an operating system the operating system configuration data the application software and the application configuration data together with the SAN related configurations. Further each storage device includes a storage controller. The storage controller manages the multiple remote disks and provides services such as RAID read cache write cache Flash Copy Peer to Peer Copy and the like. The storage controller can enforce a one to one mapping between a server and a remote disk which ensures that multiple servers do not access the remote disk concurrently. This helps to prevent data corruption. The SAN also includes a communication infrastructure that physically connects the servers to the storage devices. The communication infrastructure manages the data transfer between the servers and the storage devices by using a standard protocol.

The Fibre Channel SAN FC SAN with the Small Computer System Interface SCSI standard is one of the most common SAN technologies. There are three major topologies for the FC SAN i.e. Point to Pont FC P2P Arbitrated Loop FC AL and Switched Fabric. The switched fabric comprises a number of Fibre Channel switches Director switches or Fabric switches . These switches provide optimal interconnection between the servers and the storage devices. The servers and storage devices connect to the switched fabric through a Fibre Channel Host Bus Adapter HBA . Each HBA has a factory installed World Wide Name WWN which is universally unique. The WWN facilitates communication between a server and a storage device.

In SCSI terminology communication occurs between an initiator and a target. A server acting as the initiator sends a request to the storage controller for a desired block or data segment stored on a remote disk that is referred to as the target.

Further in FC SW topology the switched fabric is partitioned into smaller groups to prevent interference provide strict security and ease its overall management. This partitioning is known as zoning. Zoning controls access to the remote disks and manages visibility in the SAN thereby avoiding unauthorized access to the remote disks.

The existing method for remote booting a server from a remote disk in a SAN includes recording a factory assigned WWN of an HBA installed on the server. Further the remote disk containing a desired server image is identified and the corresponding storage device is configured to provide access to the server. Subsequently the firmware on the HBA of the server is configured for remote booting from the remote disk assigned to the server. Furthermore the switched fabric is configured to authorize the server to connect to the remote disk. These configuration settings are persistent until explicitly modified by a data center administrator.

If an HBA that is installed on the server fails and a replacement HBA is installed or server hardware failure occurs and the server is replaced with a back up server with a different HBA booting the server is not possible without appropriate configuration changes made by the data center administrator. However these changes require manual multi step operator intervention and are error prone. Moreover it may result in data corruption and interruption in the data center service.

In present day data centers server repurposing is a common requirement. This involves a change in software which includes an operating system and a set of applications running on the server. Therefore the server is required to boot from a different remote disk. It is desirable to have dynamic control over the number of servers deployed in the functional tiers of a business system so that the capacity of the business system can be dynamically adjusted to meet variable demands. In the state of the art servers have a pre determined function and configuration as well as provision for anticipated maximal utilization. This results in inefficient utilization of network resources and an increase in overall maintenance and operational costs.

There exist methods in the prior art that facilitate the process of changing the persistent binding between the servers and the remote disks. One such technique known as WWN spoofing or aliasing enables an HBA of the server to assume a WWN other than the one installed on the hardware of the server. In the event of server hardware failure and a replacement server being brought in the data center administrator assigns the WWN of the old HBA to the HBA of the replacement server. However this method does not allow the same server to boot from or access different remote disks at different times without operator intervention before each such change.

Another technique known as N Port ID Virtualization NPIV allows a server s HBA to assume multiple non persistent WWNs and access multiple remote disks by using different WWNs. NPIV enables an HBA port to serve as multiple logical ports each with its own unique identity. A port login process involves the HBA port making a request for multiple IDs from attached SAN communication devices. Thereby multiple logical ports with a unique World Wide Port and Node Names are created. The binding between the logical ports and the remote disks is preserved even after a server function is moved to a new machine. However the initialization of the HBA with additional WWNs can occur only after the server has a loaded operating system and an HBA driver is operational. Thus this technique cannot be used for dynamic binding between a server and the remote disk which contains a desired server image for booting.

In light of the above there is a need for a method and system that facilitates dynamic non persistent binding between a server and a remote disk. Moreover there is a need for a method and system that enables non persistent binding without necessitating any permanent configuration changes on the server the storage devices and the communication devices present on the SAN.

An object of the invention is to dynamically bind a server to a remote disk for booting in a data center.

Another object of the invention is to facilitate a non persistent binding between the server and the remote disk for booting in the data center.

Yet another object of the invention is to non persistently instantiate a virtual World Wide Name WWN on a server for booting from a remote disk in the data center.

The invention provides a method system and computer program product for dynamic non persistent binding of a server to a remote disk by using a virtual WWN.

The data center includes a plurality of servers and one or more storage devices. Each storage device manages one or more remote disks. The data center also comprises a switched fabric to connect the plurality of servers and the one or more storage devices. The servers storage devices and the switched fabric constitute a Storage Area Network SAN . The data center also comprises a boot controller to manage the remote booting of servers.

The boot controller dynamically selects a server image located on a remote disk to boot on a server based on the requirements of the data center. The boot controller assigns at least one virtual WWN to the remote disks. Further the boot controller instantiates a virtual WWN on the server. Subsequently the server boots from the desired server image by using the virtual WWN which uniquely identifies the server independent of the underlying hardware configuration. In another embodiment of the invention a boot gateway in conjunction with the boot controller executes a staged booting of the server.

Therefore the invention eliminates the use of persistent mappings and configurations to boot the server from the remote disk. The invention supports decoupling of the software environment and the configurations from the hardware of the server. Further the invention facilitates the implementation of server repurposing in a data center.

Various embodiments of the invention provide a system and method for dynamically binding servers to remote disks in a data center. In a data center a server is assigned a virtual identity which is independent of the physical identity of the server. Further a server image is dissociated from the server hardware and the network related attributes of the server. The server image is instantiated dynamically on any suitable server available in the data center by using the virtual identity of the server.

Data center includes a communication infrastructure . Servers storage devices and communication infrastructure constitute a SAN. Further data center includes a control network .

Each server connects to communication infrastructure through a Host Bus Adapter HBA . For example server connects to communication infrastructure through HBA . Similarly each storage device connects to communication infrastructure through an HBA. For example storage device connects to communication infrastructure through HBA

Servers may be required to boot from a server image located on one of remote disks based on the functional requirements of data center . Server communicates with storage device managing remote disk which contains the desired server image. Servers and storage devices exchange data over the communication infrastructure by using pre defined protocol suites. Control network is a TCP IP network with a pre defined protocol suite. Servers connect to control network through Ethernet Network Interface Cards NICs not shown in . Storage devices also connect to control network . Further each HBA and HBA is identified by a unique World Wide Name WWN that is factory installed. These WWNs facilitate communication between servers and storage devices .

In various embodiments of the invention servers may be standalone servers virtual servers web servers virtual racks chassis and the like. Further communication infrastructure may be a Fibre Channel with Small Computer System Interface SCSI protocol suite an Ethernet TCP IP with an Internet Small Computer System Interface iSCSI protocol suite or Ethernet with Advanced Technology Attachment ATA protocol suite.

In various embodiments of the invention described henceforth communication infrastructure is a Fibre Channel Switched Fabric FC SW with an SCSI protocol suite. Accordingly communication infrastructure will hereinafter be referred to as switched fabric . It should be recognized by persons ordinarily skilled in the art that various embodiments of the invention are equally applicable to other possible embodiments of communication infrastructure .

Boot controller is a specialized appliance or software operating on servers . Boot controller and servers communicate over control network . Boot controller facilitates dynamic non persistent binding between a server and a remote disk by using a set of virtual WWNs. Dynamic assignment of virtual WWNs to remote disk generally means that the configuration settings related to the assignment of virtual WWNs to remote disk are done instantaneously by boot controller . Further non persistent binding between server and remote disk generally means that the configuration settings related to the binding of server and remote disk are temporary and are defined based on the functional requirements of data center . Virtual WWNs are universally unique names that identify the devices present on the SAN independent of physical identity of the devices. The set of virtual WWNs and the set of factory installed WWNs are mutually exclusive.

For example boot controller selects a first virtual WWN from the set of virtual WWNs and assigns it to storage device . Further boot controller selects one or more virtual WWNs from the set of virtual WWNs and assigns the one or more virtual WWNs to remote disk . In an embodiment of the invention the assignment of virtual WWNs to remote disk is a static assignment which is persistent in nature until explicitly modified. Static assignment of virtual WWNs to remote disk generally means that the configuration settings related to the assignment of virtual WWNs to remote disk are permanently or persistent in nature. In an embodiment of the invention the static assignment may be performed by the data center administrator.

In another embodiment of the invention the assignment of virtual WWNs to remote disk is a dynamic assignment undertaken by boot controller by using standard management Application Programming Interfaces APIs for example Simple Network Management Protocol SNMP . Dynamic assignment of virtual WWNs to remote disk generally means that the configuration settings related to the assignment of virtual WWNs to remote disk are done instantaneously by boot controller . Further boot controller communicates information related to the assignment of virtual WWNs to remote disk to storage device over control network . In addition virtual WWNs are also configured in switched fabric .

Thereafter based on the functional requirements of data center boot controller selects remote disk which contains a desired server image. Subsequently boot controller dynamically maps one of the one or more virtual WWNs assigned to remote disk to server .

Further boot controller manages boot configuration database . Boot configuration database stores information related to the dynamic binding of server with remote disk . The various modules of boot configuration database are explained in conjunction with .

In various embodiments of the invention one or more HBAs may be present in servers . Further one or more boot controllers may be present in data center . However only one boot controller is provisioned to facilitate dynamic binding of server . Various redundant devices constituting switched fabric may also be present in data center .

Further server to remote disk mapping defines server as authorized to access remote disk . This facilitates one to one association between server and remote disk . Server to remote disk mapping is dynamically updated by boot controller . In an embodiment of the invention server to remote disk mapping prevents the concurrent access of servers to remote disks .

Further boot configuration database includes repository that contains a pool of virtual WWNs. Repository contains virtual WWNs that may be mapped uniquely to a device connected to switched fabric . Boot configuration database also contains bootstrap program that initiates the dynamic booting of servers in data center .

Boot controller assigns boot gateway to facilitate booting of a set of servers . Further boot controller assigns a virtual WWN to remote disk the virtual WWN uniquely identifying boot gateway independent of its physical identity. In an embodiment of the invention the assignment of the virtual WWN to remote disk may be performed statically by a data center administrator.

In another embodiment of the invention the assignment of the virtual WWN to remote disk may be performed dynamically by boot controller . Subsequently boot controller communicates the mapping to storage device over control network . This authorizes boot gateway to access remote disk .

The virtual WWN assigned to boot gateway may either be performed statically by the data center administrator or dynamically by boot controller . The virtual WWN assigned to boot gateway is also configured in switched fabric . This authorizes boot gateway to login to switched fabric . Boot gateway communicates with servers over control network and eliminates the need for changes made to the Basic Input Output System BIOS code accomplishing staged booting of servers .

In data center when server is powered on its firmware broadcasts a request for booting through an Ethernet NIC on control network . Server subsequently goes into an idle state. Boot controller accepts the request of server and provides the complete path of bootstrap program to the firmware of server . Subsequently the firmware of server downloads and runs bootstrap program .

Server and boot controller communicate over control network by using standard protocol suites. For example Pre execution Environment PXE is a standard environment to bootstrap computers by using NICs which are a combination of Dynamic Host configuration Protocol DHCP and Trivial File Transfer Protocol TFTP . Server may broadcast a request for booting by using the DHCP protocol and download bootstrap program using the TFTP protocol.

Bootstrap program facilitates communication between boot controller and server over control network . Boot controller selects the server image from which server is required to boot. This decision may be made based on the functional requirements of data center . Further the hardware capabilities of server may be examined corresponding to the server image to be booted. Subsequently boot controller identifies remote disk on which the desired server image is located and communicates this information to server . At step server boots from remote disk over switched fabric .

At step boot controller dynamically maps one of the one or more virtual WWNs assigned to remote disk to server . Boot controller dynamically updates server to remote disk mapping .

At step boot controller loads bootstrap program on server . Bootstrap program facilitates communication between boot controller and server over control network . Boot controller communicates server to remote disk mapping to server .

At step bootstrap program non persistently passes a first set of initialization parameters to the firmware of HBA installed on server . This initializes the HBA BIOS. Virtual WWN mapped to server at step is passed to the firmware of HBA . This information is stored non persistently on server . Thereafter HBA logs in to switched fabric and initiates a request to storage device to access remote disk according to the SCSI command set. Storage device performs authenticity checks on server based on the virtual WWN mapped to server and the remote disk to virtual WWN mapping . Subsequently storage device responds to the request made by server in accordance with the SCSI command set.

Further at step an HBA driver is loaded in the operating system being booted on server . At step bootstrap program non persistently passes a second set of initialization parameters to the HBA driver. The Virtual WWN mapped to server at step is passed to the HBA driver. The virtual WWN information is stored in the HBA driver specific registry keys. This information is stored non persistently on server . The HBA driver once loaded and initialized carries out the complete booting of server over remote disk .

At step boot controller dynamically maps the assigned virtual WWN to server . This authorizes server to access remote disk over switched fabric .

At step boot controller dynamically maps the assigned at least one virtual WWN to server . At step a virtual WWN is also assigned to remote disk . The virtual WWN assigned to remote disk at step identifies boot gateway independent of its physical identity. Further the mapping of the virtual WWN to HBA GW of boot gateway may either be performed statically by the data center administrator or dynamically by the boot controller. This authorizes boot gateway to access remote disk over switched fabric .

At step boot controller loads bootstrap program on server to facilitate the first stage of booting server . Bootstrap program facilitates the process of server communicating with boot controller and boot gateway over control network .

Bootstrap program loads a protocol stack on server by using a set of standard protocols. Subsequently the driver of the protocol stack loaded on server initiates the first stage of booting server by making a request for read write operations. The driver communicates with boot gateway over control network in accordance with the protocol command set. Boot gateway logs in to switched fabric by using the virtual WWN mapped onto HBA GW and accesses remote disk . Boot gateway responds to the driver in accordance with the protocol command set and completes the first stage of booting server over control network .

Bootstrap program may load an iSCSI protocol stack on server by using the PXE protocol and the iSCSI driver may carry out the first stage of booting server over control network .

Subsequently at step boot gateway loads an HBA driver in the operating system being booted on server . At step bootstrap program non persistently passes a second set of initialization parameters to the HBA driver. At least the one virtual WWN mapped to server is passed to the HBA driver at step . Information pertaining to at least the one virtual WWN mapped to server is inserted in the HBA driver specific registry keys. This information is stored non persistently on server . The HBA driver once loaded and initialized carries out the second stage of booting server over remote disk .

The invention eliminates the need for persistent mappings and configurations to boot the server from the remote disk. The invention facilitates communication with servers in a data center when no operating system is running on the servers. Moreover the invention helps in decoupling the software environment and the configurations from the hardware of the server. Further the invention facilitates the implementation of server repurposing in a data center. Therefore the invention provides the process of booting servers without any change in the server firmware.

The system for managing requests for a resource in a computer network as described in the invention or any of its components may be embodied in the form of a computer system. Typical examples of a computer system include a general purpose computer a programmed microprocessor a micro controller a peripheral integrated circuit element and other devices or arrangements of devices that are capable of implementing the steps that constitute the method of the invention.

The computer system comprises a computer an input device a display unit and the Internet. The computer also comprises a microprocessor which is connected to a communication bus. Moreover the computer includes a memory which may include Random Access Memory RAM and Read Only Memory ROM . Further the computer system comprises a storage device which can be a hard disk drive or a removable storage drive such as a floppy disk drive an optical disk drive etc. The storage device can also be other similar means for loading computer programs or other instructions into the computer system. Moreover the computer system includes a communication unit which enables the computer to connect to other databases and the Internet through an I O interface and facilitates the transfer and reception of data from other databases. The communication unit may include a modem an Ethernet card or any similar device which enables the computer system to connect to databases and networks such as LAN MAN WAN and the Internet. The computer system facilitates inputs from a user through an input device that is accessible to the system through an I O interface.

The computer system executes a set of instructions that are stored in one or more storage elements to process input data. The storage elements may also contain data or other information as desired. These storage elements may be in the form of an information source or a physical memory element present in the processing machine.

The set of instructions may include various commands that instruct the processing machine to perform specific tasks such as the steps that constitute the method of the invention. The set of instructions may be in the form of a software program. The software may be in the form of a collection of separate programs a program module with a larger program or a portion of a program module as in the invention. The software may also include modular programming in the form of object oriented programming. Processing of input data by the processing machine may be in response to user commands results of previous processing or a request made by another processing machine. The instructions may be provided on any suitable computer readable media.

While various embodiments of the invention have been illustrated and described it will be clear that the invention is not limited to these embodiments only. Numerous modifications changes variations substitutions and equivalents will be apparent to those skilled in the art without departing from the spirit and scope of the invention as described in the claims.

