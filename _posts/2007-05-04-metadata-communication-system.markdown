---

title: Metadata communication system
abstract: Techniques for communicating metadata are disclosed. According to one technique, a device comprises a configuration module. The configuration module contains and specifies a mapping table. For example, each mapping in the mapping table might indicate a standard, a retrieving protocol, and a packaging protocol. In the mapping table, a particular retrieving or packaging protocol can be mapped to more than one standard. The device comprises one or more separately implemented retrieving protocol modules and packaging protocol modules. The device receives a client's request. The device selects a retrieving protocol to interpret the request, and interprets the request using that protocol. The device uses the mapping table to determine a packaging protocol that is mapped to the client's standard. The device uses the selected packaging protocol to package, in the appropriate form, the requested metadata. The device sends the appropriately packaged metadata back to the client.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08271621&OS=08271621&RS=08271621
owner: Ricoh Company, Ltd.
number: 08271621
owner_city: Tokyo
owner_country: JP
publication_date: 20070504
---
The invention relates to metadata and more specifically to a technique for communicating a device s metadata to a client using retrieving and packaging protocols.

Printing devices are devices that can print viewable content on physical media such as paper or transparent sheets. Printing devices include printers and multi function peripherals MFPs such as the Ricoh Aficio 5560 system. Typically a printing device receives data from a computer via a network or cable. The printing device prints text or and images that are represented by the data.

Different printing devices may offer different features. Different printing devices may have different characteristics and capabilities. It is often useful for a client such as an application program e.g. a word processor or print driver to be able to obtain information about a printing device with which that client intends to interact. For example if a printing device can print in either black and white or in color then it may be useful for a client to know that the printing device has such a capability. Knowing that a printing device has the ability to print in color might influence the kind of commands that the client sends to the printing device.

In order to enable clients to learn the features characteristics and capabilities of a printing device some printing devices store e.g. in volatile or non volatile memory metadata that indicates features characteristics and capabilities of those printing devices. A client can send to such a printing device a request for that printing device s metadata. The printing device can receive such a request and respond to the request by sending to the client the printing device s metadata or a specifically requested portion thereof . The client can receive the metadata and use the metadata to customize the manner in which the client interacts with the printing device. Thus a client can automatically learn about a printing device s features characteristics and capabilities.

A device s metadata might indicate information such as the device s manufacturer the device s model the device s Internet Protocol IP address etc. Under some circumstances a client might be unable to interact in a desired manner with a printing device until the client has obtained at least some of the printing device s metadata.

Typically a client requests metadata from a printing device in a manner that conforms to a specified retrieving protocol. The retrieving protocol may indicate for example the form and or order of messages that a client ought to send to a printing device in order to request or retrieve that printing device s metadata. If a client and a printing device do not follow a mutually understood retrieving protocol then the printing device might not be able to recognize what the client wants from the printing device.

Additionally a printing device typically sends metadata to a client in a manner that conforms to a specified packaging protocol. The packaging protocol may indicate for example the form and or structure that the metadata ought to take when sent to the client. For example a packaging protocol might indicate that metadata should be sent as plain text or in a comma delimited format or as an Extensible Markup Language XML document that conforms to a specified schema. If a client and a printing device do not follow a mutually understood packaging protocol then the client might not be able to recognize what is meant by the metadata that the printing device sends to the client.

Some retrieving protocols and packaging protocols are specifically designed to enable a client to obtain a device s metadata over a network or even over a series of interconnected networks such as the Internet. Using such protocols a client can automatically discover the features characteristics and capabilities of devices even if those devices are miles away so long as both the client and those devices are connected to the Internet.

Different clients may conform to different standards. The retrieving and packaging protocols that a client uses to obtain and interpret metadata may vary depending upon the standard to which the client conforms. Clients that conform to the Universal Plug and Play UPNP standard typically use Hypertext Transfer Protocol HTTP Get as a retrieving protocol and a device template protocol as a packaging protocol. In contrast clients that conform to the Web Service Device WSD standard now typically use the WS Transfer protocol specified by the World Wide Web Consortium as a retrieving protocol and the WS Device Profile protocol also specified by the World Wide Web Consortium as a packaging protocol.

In order to be able to communicate metadata to a variety of different types of clients a printing device might comprise a different module for each different possible standard to which a client might conform. For example a printing device might comprise both a a UPNP module that receives and responds to metadata requests from clients that conform to the UPNP standard UPNP clients and b a WSD module that receives and responds to metadata requests from clients that conform to the WSD standard WSD clients . The UPNP module might use HTTP GET and a device template protocol while the WSD module might use the WS Transfer and WS Device Profile protocols for example. Each module might be implemented as a different sequence of machine executable instructions.

Although the above approach would have its uses the above approach also would suffer somewhat due to inflexibility. Initially clients that conform to a particular standard might all use a particular retrieving protocol and a particular packaging protocol as dictated by the particular standard . However over time as newer and better protocols become available existing protocols tend to evolve to dictate the use of the newer protocols instead of the older protocols. Thus later those same clients that conform to the particular protocol might evolve to use a newer better retrieving protocol but such clients might continue to use the original packaging protocol . Under such circumstances a printing device s module that implemented the original retrieving and packaging protocols in a tightly coupled manner would no longer be usable to communicate metadata to clients that conformed to the particular standard. Under such circumstances a new module that implemented both the original packaging protocol and the new retrieving protocol might need to be created and installed on the printing device in order to enable the printing device to receive and respond to metadata requests from such clients.

Additionally if there were no other standard that still used both the original retrieving and packaging protocols together then the module that implemented both the original retrieving and packaging protocols would become obsolete and useless. Sadly this would be the case even if some other standard still used the original retrieving protocol but not the original packaging protocol and even if some other standard still used the original packaging protocol but not the original retrieving protocol .

Similar troubles might arise in the event that an entirely new standard was published and widely adopted by clients. Such a new standard might even use existing retrieving and packaging protocols but such a new standard might use a different combination of existing retrieving and packaging protocols than any combination used by any other previous standard. It might be that no module for any existing standard implemented the particular combination of existing retrieving and packaging protocols together. Under such circumstances an entirely new module for the new standard might need to be created and installed on the printing device even though the existing retrieving and packaging protocols has previously been implemented within existing modules just never together in the same module .

Thus if used the above approach might over time necessitate the expenditure of a large amount of time and effort by those who create modules for the printing device. Additionally if used the above approach might over time produce large quantities of obsolete un reusable code.

Furthermore given a sufficiently large number of different retrieving protocols and a sufficiently large number of different packaging protocols all of which might concurrently be used by different standards but in different combinations the number of different possible combinations of retrieving and packaging protocols could become overwhelmingly enormous. If a printing device was required to maintain a separate module for each different combination and if each module fully implemented both a retrieving protocol and a packaging protocol then the amount of memory and or persistent storage space that the printing device would need in order to maintain those modules might be significant.

The above approach if used could be very wasteful of printing device resources and human programming effort. Based on the foregoing there is a need for a less wasteful approach for communicating metadata between devices and the diverse kinds of clients that interact with those devices.

Systems and methods for communicating a device s metadata to a client are disclosed. In one embodiment of the invention a device e.g. a printing device comprises a configuration module. The configuration module contains and specifies a mapping table. In one embodiment of the invention each mapping in the mapping table indicates at least a a standard e.g. UPNP WSD etc. b a retrieving protocol for that standard and c a packaging protocol for that standard. Each mapping may also indicate a set of characteristics. In the mapping table a particular retrieving or packaging protocol can be mapped to more than one standard. In an alternative embodiment of the invention each mapping in the mapping table indicates at least a a packaging protocol b a retrieving protocol and c a set of characteristics that can be used to identify and dispatch a client s request the standard is optional.

The device additionally comprises a separate retrieving protocol module for each unique retrieving protocol specified in the mapping table and a separate packaging protocol module for each unique packaging protocol specified in the mapping table. The retrieving protocol modules are implemented separately from the packaging protocol modules. As a result no more than one module for any particular retrieving protocol or any particular packaging protocol needs to be implemented on the device regardless of the number of standards that use that protocol.

According to one embodiment of the invention a device receives a request that originated from a client. The device determines based on some characteristic s of the request a retrieving protocol that the device should use to interpret the request. The device interprets the request using the selected retrieving protocol. The device also determines based on some characteristic s of the request a standard to which the client conforms. The device uses the mapping table to determine a packaging protocol that is mapped to the standard. The device uses the selected packaging protocol to package in the appropriate form the requested metadata. The device sends the appropriately packaged metadata back to the client.

In the following description for the purposes of explanation specific details are set forth in order to provide a thorough understanding of the invention. However it will be apparent that the invention may be practiced without these specific details. In some instances well known structures and devices are depicted in block diagram form in order to avoid unnecessarily obscuring the invention.

Systems and methods for communicating a device s metadata to a client are disclosed. In one embodiment of the invention a device e.g. a printing device comprises a configuration module. The configuration module contains and specifies a mapping table. In one embodiment of the invention each mapping in the mapping table indicates at least a a standard e.g. UPNP WSD etc. b a retrieving protocol for that standard and c a packaging protocol for that standard. In the mapping table a particular retrieving or packaging protocol can be mapped to more than one standard.

The device additionally comprises a separate retrieving protocol module for each unique retrieving protocol specified in the mapping table and a separate packaging protocol module for each unique packaging protocol specified in the mapping table. The retrieving protocol modules are implemented separately from the packaging protocol modules. As a result no more than one module for any particular retrieving protocol or any particular packaging protocol needs to be implemented on the device regardless of the number of standards that use that protocol.

According to one embodiment of the invention a device e.g. a printing device receives a request that originated from a client. The device determines based on some characteristic s of the request a retrieving protocol that the device should use to interpret the request. The device interprets the request using the selected retrieving protocol. The device also determines based on some characteristic s of the request a standard to which the client conforms. The device uses the mapping table to determine a packaging protocol that is mapped to the standard. The device uses the selected packaging protocol to package in the appropriate form the requested metadata. The device sends the appropriately packaged metadata back to the client.

Client is communicatively coupled or connected to device via a network . Network might comprise a local area network LAN a wide area network WAN and or a series of interconnected networks. The Internet is an example of such a series of interconnected networks. Thus in one embodiment of the invention client communicates with device via the Internet.

In one embodiment of the invention client is an application program such as a word processor or some other application program that generates data that can be processed and or consumed by device . For example client might be a computer executable program that generates print data for device to render and print on physical media such as paper or transparency sheets. In an alternative embodiment of the invention client is a print driver. Client may be any mechanism that requests and receives metadata from device . Depending on the type of client client might conform to and operate according to any one of a number of different standards e.g. WSD UPNP etc. .

In one embodiment of the invention device is a printing device such as a printer or an MFP. In alternative embodiments of the invention device might be a copying machine a scanner a camera or an appliance of some kind. Device may be any mechanism or system that receives from client requests for metadata and responds to such requests with metadata about device .

In one embodiment of the invention device comprises a request dispatching module a set of retrieving protocol modules A N a management module a configuration module a metadata server and a set of packaging protocol modules A N. Each module discussed herein may be but does not necessarily need to be implemented as a separate sequence of machine executable instructions. In one embodiment of the invention one or more processors not shown present within device execute such sequences of instructions at various times to cause device to perform the functionality that the sequences of instructions indicate. For example retrieving protocol modules A N and packaging protocol modules A N may be implemented as separate code libraries.

According to one embodiment of the invention each of retrieving protocol modules A N implements a different retrieving protocol. Similarly according to one embodiment of the invention each of packaging protocol modules A N implements a different packaging protocol. A particular retrieving protocol may be implemented in as few as one of retrieving protocol modules A N. Similarly a particular packaging protocol may be implemented in as few as one of packaging protocol modules A N. Because the implementations of retrieving and packaging protocols do not need to be implemented more than once memory and storage space required to maintain those protocols on device is reduced.

According to one embodiment of the invention retrieving protocol modules A N are separate and decoupled from packaging protocol modules A N. As a result of this separation and decoupling any retrieving protocol implemented by any of retrieving protocol modules A N can be used in conjunction with any packaging protocol implemented by any of packaging protocol modules A N. Indeed a particular retrieving protocol may be used in conjunction with multiple different packaging protocols and a particular packaging protocol may be used in conjunction with multiple different retrieving protocols.

In one embodiment of the invention although retrieving protocol modules A N implement different retrieving protocols each of these modules has a standard interface through which other entities communicate with those modules. In such an embodiment of the invention the interface does not vary between modules. The interface may be implemented as one or more methods of an application programming interface API for example. Similarly in one embodiment of the invention although packaging protocol modules A N implement different packaging protocols each of these modules has a standard interface through which other entities communicate with those modules. Additionally in one embodiment of the invention management module has a one standard interface through which retrieving protocol modules A N communicate with management module and b another standard interface through which packaging protocol modules A N communicate with management module .

According to one embodiment of the invention configuration module maintains a mapping table. In one embodiment of the invention each mapping in the mapping table indicates at least a a standard b a retrieving protocol for that standard and c a packaging protocol for that standard. However in variant embodiments of the invention the mappings may contain more fewer and or different items of information than those described above. For example in one embodiment of the invention each mapping additionally includes a set of characteristics that can be used to identify and dispatch a client s request. For another example in one embodiment of the invention mappings in the mapping table do not indicate any standard. A developer of device can set up and configure the mapping table during the development phase of device based on the standards that device needs to support and the protocols that have been implemented.

For example if the packaging protocol that is used by a particular standard changes then in later versions of device a developer can modify the mapping for the particular standard at development time so that the mapping maps the particular standard to the new packaging protocol instead of the old packaging protocol to which the particular standard was previously mapped. Under such circumstances if a packaging protocol module for the new packaging protocol were already implemented on device as might be the case if some other standard were already mapped to the new packaging protocol then there would be no need to install or implement any new module or protocol on device .

For another example if a new previously unknown standard emerges and if that new standard uses already known retrieving and packaging protocols for which corresponding retrieving and packaging protocol modules already exist on device then in later versions of device a developer can add to the mapping table at development time a new mapping between the new standard and the existing already implemented retrieving and packaging protocols. Thereafter later versions of device can appropriately process requests from clients that use the new standard even if no previous standard used the same combination of retrieving and packaging protocols that the new standard uses. Under such circumstances the foregoing may be accomplished without installing or implementing any new module or protocol on later versions of device .

In one embodiment each mapping in the mapping table additionally indicates information that identifies one or more characteristics that are typically associated with requests that originate from clients that conform to the standard that is indicated in that mapping. Such information may be used to identify the standard to which an incoming request corresponds. For example such information might comprise a Transmission Control Protocol TCP port number on which device will receive requests that correspond to the mapping s standard under such circumstances requests that device receives on that TCP port will be deemed to correspond to the standard that is mapped to that TCP port. For another example such information might comprise a control string that will be contained in requests that correspond to the mapping s standard under such circumstances requests that contain that control string will be deemed to correspond to the standard that is mapped to that control string.

As shown in mapping table includes a retrieving protocol column a packaging protocol column a standard column and a characteristics column . Mapping table additionally includes mappings i.e. entries or rows A N. In the example shown mapping A maps the WSD standard to the WS Transfer retrieving protocol and the WS Device Profile packaging protocol. Mapping B maps the UPNP standard to the HTTP GET retrieving protocol and the device template packaging protocol. Under such circumstances retrieving protocol modules A N would include at least a one retrieving protocol module for the WS Transfer retrieving protocol and b one retrieving protocol module for the HTTP GET retrieving protocol. Additionally under such circumstances packaging protocol modules A N would include at least a one packaging protocol module for the WS Device Profile packaging protocol and b one packaging protocol module for the device template packaging protocol.

Additionally in the example embodiment illustrated in mapping A maps the WSD standard to a TCP Port characteristic. Mapping B maps the UPNP standard to a TCP port characteristic. As a result in one embodiment of the invention when device receives a client request device determines the standard to which the request and the originating client conforms based at least in part on the TCP port on which the client request arrived in the present example if the request arrived on TCP port then device would deem the request to have originated from a client that conformed to the WSD standard to which TCP port is mapped but if the request arrived on TCP port then device would deem the request to have originated from a client that conformed to the UPNP standard to which TCP port is mapped . The standard to which the client and request conforms determines the retrieving and packaging protocols that device will use to interpret the request and package the metadata that device returns to the client.

As shown in in step client requests metadata from device shown in . The metadata request is formatted according to a retrieving protocol that is employed by a standard to which client conforms. Request dispatching module within device receives the metadata request from client .

In step request dispatching module determines to which of retrieving protocol modules A N the metadata request should be sent. In one embodiment of the invention request dispatching module picks one of retrieving protocol modules A N based on the standard to which client is deemed to conform.

In one embodiment of the invention request dispatching module determines this standard based on a characteristic of the request and or a characteristic of the manner in which the request was received. For example request dispatching module might pick a retrieving protocol module based on the TCP port through which the metadata request was received request dispatching module might look up the requests TCP port in characteristics column of mapping table and determine the client s standard to be the standard to which that TCP port is mapped. For another example request dispatching module might pick a retrieving protocol module based on a control string that is present in the metadata request request dispatching module might look for the control string in characteristics column of mapping table and determine the client s standard to be the standard to which that control string is mapped. For another example request dispatching module might pick a retrieving protocol module based on a combination of multiple different factors such as a TCP port a control string and or other factors.

After request dispatching module has picked a particular retrieving protocol module from among retrieving protocol modules A N request dispatching module dispatches the metadata request to the particular retrieving protocol module in step .

In step the particular retrieving protocol module interprets the metadata request according to the retrieving protocol that the particular retrieving protocol module implements. The particular retrieving protocol module then forms and sends a protocol independent get metadata request to management module . The get metadata request identifies the specific items of metadata e.g. manufacturer IP address etc. that were specified in the original metadata request from client but does so in a manner that does not vary based on the retrieving protocol that was used to form the original metadata request. For example the particular retrieving protocol may send the get metadata request to management module by invoking a standard interface method of an API implemented by management module . Such a standard interface method may accept as parameters criteria for selecting specific items of requested metadata. Management module receives the get metadata request from the particular retrieving protocol module.

In step management module sends to metadata server a request for the raw metadata that client requested. The metadata is raw because the metadata has not yet been packaged or formatted according to any packaging protocol. Metadata server receives the request for the raw metadata.

In step metadata server returns the requested raw metadata to management module . The returned metadata may comprise less than all of the available metadata maintained by metadata server because client might have requested only a subset of the available metadata about device . In one embodiment of the invention the request that metadata server receives from management module describes a query or selection criteria and metadata server only returns the portions of the device stored metadata that satisfy the query or the selection criteria. Management module receives the raw metadata from metadata server .

In step management module sends to configuration module a request for the appropriate packaging protocol. In one embodiment of the invention this request identifies the standard to which client was previously deemed to conform as is described above with reference to step . For example the request might identify WSD or UPNP as the standard to which client conforms. Configuration module receives the request for the appropriate packaging protocol.

In step configuration module determines the identity of the appropriate packaging protocol and returns the identity of the appropriate packaging protocol to management module . In one embodiment of the invention configuration module determines the identity of the appropriate packaging protocol by finding in mapping table the standard that was identified in the request from management module and returning to management module the identity of the packaging protocol to which that standard is mapped in mapping table . Using mapping table of as an example if the identified standard is WSD then configuration module may return to management module information that identifies WS Device Profile as the appropriate packaging protocol. As another example if the identified standard is UPNP then configuration module may return to management module information that identifies device template as the appropriate packaging protocol. In any case management module receives the identity of the appropriate packaging protocol.

In step management module determines to which of packaging protocol modules A N the raw metadata should be sent for packaging. In one embodiment of the invention management module picks the packaging protocol module that implements the appropriate packaging protocol that was identified by configuration module as is described above with reference to step . After management module has picked a particular packaging protocol module from among packaging protocol modules A N management module send the raw metadata to the particular packaging protocol module in a request to get a packaged version of the metadata. The particular packaging protocol module receives the request and the raw metadata.

In step the particular packaging protocol module packages the raw metadata according to the packaging protocol that the particular packaging protocol module implements. In so doing the particular packaging module generates packaged metadata that conforms to the appropriate packaging protocol client will be able to understand this packaged metadata because client understands the appropriate packaging protocol. In one embodiment of the invention packaging the raw metadata involves formatting and or annotating the raw metadata. For example the particular packaging protocol module might package the raw metadata by enclosing individual metadata items in the raw metadata within various separate explanatory XML tag pairs. For another example the particular packaging protocol module might package the raw metadata by delimiting individual metadata items in the raw metadata with various delimiting characters. After generating the packaged metadata the particular packaging protocol returns the packaged metadata to management module . Management module receives the packaged metadata.

In step management module returns the packaged metadata to client . For example management module may return the packaged metadata to client via network and potentially through request dispatching module . Client receives the packaged metadata and may use the metadata for various purposes. For example client may use the metadata to generate a user interface that indicates to a user various functions as indicated in the metadata that device can perform and or various characteristics of device . For another example client may use the metadata to format further communications e.g. print commands between client and device .

Computer system may be coupled via bus to a display such as a liquid crystal display LCD for displaying information to a user. An input device including alphanumeric and other keys is coupled to bus for communicating information and command selections to processor . Another type of user input device is cursor control such as a mouse trackball stylus or cursor direction keys for communicating direction information and command selections to processor and for controlling cursor movement on display . This input device typically has two degrees of freedom in two axes a first axis e.g. x and a second axis e.g. y that allows the device to specify positions in a plane.

The invention is related to the use of computer system in a wireless communications architecture. According to one embodiment of the invention wireless communications are provided by computer system in response to processor executing one or more sequences of one or more instructions contained in main memory . Such instructions may be read into main memory from another computer readable medium such as storage device . Execution of the sequences of instructions contained in main memory causes processor to perform the process steps described herein. One or more processors in a multi processing arrangement may also be employed to execute the sequences of instructions contained in main memory . In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement the invention. Thus embodiments of the invention are not limited to any specific combination of hardware circuitry and software.

The term computer readable medium as used herein refers to any medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media includes for example optical or magnetic disks such as storage device . Volatile media includes dynamic memory such as main memory . Transmission media includes coaxial cables copper wire and fiber optics including the wires that comprise bus .

Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape or any other magnetic medium a CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes a RAM a PROM and EPROM a FLASH EPROM any other memory chip or cartridge or any other medium from which a computer can read.

Various forms of computer readable media may be involved in carrying one or more sequences of one or more instructions to processor for execution. For example the instructions may initially be carried on a magnetic disk of a remote computer. The remote computer can load the instructions into its dynamic memory and send the instructions over a telephone line using a modem. A modem local to computer system can receive the data on the telephone line and place the data on bus . Bus carries the data to main memory from which processor retrieves and executes the instructions. The instructions received by main memory may optionally be stored on storage device either before or after execution by processor .

Computer system also includes a communication interface coupled to bus . Communication interface provides a two way data communication coupling to a network link that is connected to a local network . For example communication interface may be an integrated services digital network ISDN card or a modem to provide a data communication connection to a corresponding type of telephone line. As another example communication interface may be a LAN card to provide a data communication connection to a compatible LAN. Wireless links may also be implemented. In any such implementation communication interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information.

Network link typically provides data communication through one or more networks to other data devices. For example network link may provide a connection through local network to a host computer or to data equipment operated by an Internet Service Provider ISP . ISP in turn provides data communication services through the worldwide packet data communication network now commonly referred to as the Internet . Local network and Internet both use electrical electromagnetic or optical signals that carry digital data streams.

Computer system can send messages and receive data including program code through the network s network link and communication interface . In the Internet example a server might transmit a requested code for an application program through Internet ISP local network and communication interface . In accordance with the invention one such downloaded application provides for configuring a monitoring system to monitor selected network elements as described herein. Processor may execute the received code as it is received and or stored in storage device or other non volatile storage for later execution.

In the foregoing specification specific embodiments of the invention have been described. However various modifications and changes may be made to such embodiments of the invention without departing from the broader spirit and scope of the invention. The specification and drawings are accordingly to be regarded in an illustrative rather than a restrictive sense.

