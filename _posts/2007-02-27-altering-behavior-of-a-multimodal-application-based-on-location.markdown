---

title: Altering behavior of a multimodal application based on location
abstract: Methods, apparatus, and products are disclosed for altering behavior of a multimodal application based on location. The multimodal application operates on a multimodal device supporting multiple modes of user interaction with the multimodal application, including a voice mode and one or more non-voice modes. The voice mode of user interaction with the multimodal application is supported by a voice interpreter. Altering behavior of a multimodal application based on location includes: receiving a location change notification in the voice interpreter from a device location manager, the device location manager operatively coupled to a position detection component of the multimodal device, the location change notification specifying a current location of the multimodal device; updating, by the voice interpreter, location-based environment parameters for the voice interpreter in dependence upon the current location of the multimodal device; and interpreting, by the voice interpreter, the multimodal application in dependence upon the location-based environment parameters.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09208783&OS=09208783&RS=09208783
owner: Nuance Communications, Inc.
number: 09208783
owner_city: Burlington
owner_country: US
publication_date: 20070227
---
The field of the invention is data processing or more specifically methods apparatus and products for altering behavior of a multimodal application based on location.

User interaction with applications running on small devices through a keyboard or stylus has become increasingly limited and cumbersome as those devices have become increasingly smaller. In particular small handheld devices like mobile phones and PDAs serve many functions and contain sufficient processing power to support user interaction through multimodal access that is by interaction in non voice modes as well as voice mode. Devices which support multimodal access combine multiple user input modes or channels in the same interaction allowing a user to interact with the applications on the device simultaneously through multiple input modes or channels. The methods of input include speech recognition keyboard touch screen stylus mouse handwriting and others. Multimodal input often makes using a small device easier.

Multimodal applications are often formed by sets of markup documents served up by web servers for display on multimodal browsers. A multimodal browser as the term is used in this specification generally means a web browser capable of receiving multimodal input and interacting with users with multimodal output where modes of the multimodal input and output include at least a speech mode. Multimodal browsers typically render web pages written in XHTML Voice X V . X V provides a markup language that enables users to interact with an multimodal application often running on a server through spoken dialog in addition to traditional means of input such as keyboard strokes and mouse pointer action. Visual markup tells a multimodal browser what the user interface is look like and how it is to behave when the user types points or clicks. Similarly voice markup tells a multimodal browser what to do when the user speaks to it. For visual markup the multimodal browser uses a graphics engine for voice markup the multimodal browser uses a speech engine. X V adds spoken interaction to standard web content by integrating XHTML eXtensible Hypertext Markup Language and speech recognition vocabularies supported by VoiceXML. For visual markup X V includes the XHTML standard. For voice markup X V includes a subset of VoiceXML. For synchronizing the VoiceXML elements with corresponding visual interface elements X V uses events. XHTML includes voice modules that support speech synthesis speech dialogs command and control and speech grammars. Voice handlers can be attached to XHTML elements and respond to specific events. Voice interaction features are integrated with XHTML and can consequently be used directly within XHTML content.

In addition to X V multimodal applications also may be implemented with Speech Application Tags SALT . SALT is a markup language developed by the Salt Forum. Both X V and SALT are markup languages for creating applications that use voice input speech recognition and voice output speech synthesis. Both SALT applications and X V applications use underlying speech recognition and synthesis technologies or speech engines to do the work of recognizing and generating human speech. As markup languages both X V and SALT provide markup based programming environments for using speech engines in an application s user interface. Both languages have language elements markup tags that specify what the speech recognition engine should listen for and what the synthesis engine should say. Whereas X V combines XHTML VoiceXML and the XML Events standard to create multimodal applications SALT does not provide a standard visual markup language or eventing model. Rather it is a low level set of tags for specifying voice interaction that can be embedded into other environments. In addition to X V and SALT multimodal applications may be implemented in Java with a Java speech framework in C for example and with other technologies and in other environments as well.

In the current multimodal architectures a user often has the ability to control at least some aspects of his or her interaction with the multimodal application. By changing various settings for the multimodal application or the browser running the multimodal application the user may alter the behavior of the multimodal application as the user moves from one location to another. For example when a user enters a library or a place of worship the user may manually set a multimodal application to provide silent alerts on a display instead of audible alerts. On occasions when a user desires audible interaction with a multimodal application the user may manually specify a particular language or a particular voice to be used by the multimodal application.

The drawback to current methods of customizing the behavior of multimodal applications however is that such customizations must typically be performed manually by the user. These current methods which rely on the user to manually alter the behavior of a multimodal application often result in unintended consequences for the user. For example when the user enters a place of worship the user may forget to change the mode of interaction with the multimodal application from audible to visual and as a result the user is embarrassed when application provides an audible alert that draws the attention of others.

Another drawback to current methods of customizing the behavior of multimodal applications is that such customizations are typically cumbersome for a user. Often a user may expend valuable time simply trying to locate the proper setting for the multimodal application that effects the change the user desires to make. For example the user may have to traverse through multiple menus or graphical user interfaces to locate the parameter that controls the voice used to synthesize text for the multimodal application. Because of the often cumbersome and time consuming nature of changing setting for a multimodal application the user may simply forgo altering the behavior of the multimodal application as the user move from one location to another. As such readers will therefore appreciate that room for improve exists for current methods of altering the behavior of multimodal applications as the user changes locations.

Methods apparatus and products are disclosed for altering behavior of a multimodal application based on location. The multimodal application operates on a multimodal device supporting multiple modes of user interaction with the multimodal application including a voice mode and one or more non voice modes. The voice mode of user interaction with the multimodal application is supported by a voice interpreter. Altering behavior of a multimodal application based on location includes receiving a location change notification in the voice interpreter from a device location manager the device location manager operatively coupled to a position detection component of the multimodal device the location change notification specifying a current location of the multimodal device updating by the voice interpreter location based environment parameters for the voice interpreter in dependence upon the current location of the multimodal device and interpreting by the voice interpreter the multimodal application in dependence upon the location based environment parameters.

The foregoing and other objects features and advantages of the invention will be apparent from the following more particular descriptions of exemplary embodiments of the invention as illustrated in the accompanying drawings wherein like reference numbers generally represent like parts of exemplary embodiments of the invention.

Exemplary methods apparatus and products for altering behavior of a multimodal application based on location according to embodiments of the present invention are described with reference to the accompanying drawings beginning with . sets forth a network diagram illustrating an exemplary system for altering behavior of a multimodal application based on location according to embodiments of the present invention. Altering behavior of a multimodal application based on location in this example is implemented with a multimodal application operating on a multimodal device . The multimodal device supports multiple modes of user interaction with the multimodal application including a voice mode and one or more non voice modes of user interaction with the multimodal application . The voice mode is represented here with audio output of voice prompts and responses from the multimodal devices and audio input of speech for recognition from a user . Non voice modes are represented by input output devices such as keyboards and display screens on the multimodal devices . The voice mode of user interaction with the multimodal application is supported by a voice interpreter through which the multimodal application is operatively coupled to a speech engine . The operative coupling may be implemented with an application programming interface API a voice service module or a VOIP connection as explained in more detail below.

In the exemplary system of the voice interpreter supports the voice mode of user interaction with the multimodal application by providing grammars speech for recognition and text prompts for speech synthesis to the speech engine and by returning to the multimodal application speech engine output in the form of recognized speech semantic interpretation results and digitized speech for voice prompts. The implementation of the voice interpreter typically depends on the technology implementing the multimodal application . The voice interpreter of may be implemented as a VoiceXML interpreter when the multimodal application implements X V. A VoiceXML interpreter is a software module of computer program instructions that accepts voice dialog instructions from a multimodal application typically in the form of a VoiceXML element. The voice dialog instructions include one or more grammars data input elements event handlers and so on that advise the VoiceXML interpreter how to administer voice input from a user and voice prompts and responses to be presented to a user. The VoiceXML interpreter administers such dialogs by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm FIA . When the multimodal application is implemented according to SALT the voice interpreter may be implemented as a SALT interpreter. When the multimodal application is implemented using a Java Speech Framework the voice interpreter may be implemented as a VoiceXML interpreter that exposes a Java interface.

The system of operates generally to carry out altering behavior of a multimodal application based on location according to embodiments of the present invention by receiving a location change notification in a voice interpreter from a device location manager . The location change notification specifies the current location of the multimodal device . The voice interpreter updates location based environment parameters for the voice interpreter in dependence upon the current location of the multimodal device . The voice interpreter interprets the multimodal application in dependence upon the location based environment parameters.

The location based environment parameters are parameters used by the voice interpreter to control the behavior of the multimodal application operating on a multimodal device at a particular location. Location based environment parameters may specify an output modality for user interaction with the multimodal application at a particular location such as for example specifying the use of audible prompts when the device is at a user s home and visual prompts when the device is at a user s place of worship. Location based environment parameters may further specify specific characteristics of a particular output modality such as for example specifying that audible prompts be rendered in a voice with a Bostonian accent when the device is in Boston or specifying that visual prompts be rendered in a different formats depending on whether the device is at the user s home or work. Furthermore location based environment parameters may also specify a natural language for multimodal user interaction with the multimodal application at a particular location such as for example specifying the use of English when the device is in Dallas Tex. and the use of Spanish when the device is in Harlingen Tex. A natural language is a language that is spoken or written by humans for general purpose communication as distinguished from such constructs as computer programming languages or the languages used in the study of formal logic especially mathematical logic.

As mentioned above the voice interpreter receives a location change notification from the device location manager . The device location manager is a software module that includes computer program instructions for determining the current location of the multimodal device using geographic coordinates of the multimodal device provided by a position detection component and providing the current location in a location change notification to the voice interpreter . The location of the multimodal device may be specified as the geographic coordinates provided by the position detection component such as for example 20 38 7.27 N 80 13 37.22 W . The location of the multimodal device however may also be specified as a semantic representation of the coordinates such as for example home work or church. 

In the example of the device location manager is operatively coupled to a position detection component not shown of the multimodal device . A position detection component is a component typically implemented using a combination of hardware and software that calculates geographic coordinates representing the current position of the multimodal device. In the exemplary system of the position detection component is implemented using a global positioning system GPS receiver that calculates the geographic coordinates of the device based on the device s position relative to a group of GPS satellites . The use of GPS however is for explanation and not for limitation. In other embodiments of the present invention the position detection component may be implemented using a Long Range Navigation LORAN receiver that calculates the geographic coordinates of the device based on the device s position relative to a group of LORAN radio transmission towers or any other component for calculating the geographic coordinate of a multimodal device as will occur to those of skill in the art.

In the example of the device location manager is operatively coupled to a position detection component in the sense that the device location manager communicates with a software driver that provides interaction with the position detection component through an exposed API. Such communication may occur locally on the multimodal device when the device location manager is installed on the multimodal device as illustrated in or may occur across a network when the device location manager is installed on a server such as voice server which manages the locations of multiple multimodal devices .

A multimodal device is an automated device that is automated computing machinery or a computer program running on an automated device that is capable of accepting from users more than one mode of input keyboard mouse stylus and so on including speech input and also displaying more than one mode of output graphic speech and so on. A multimodal device is generally capable of accepting speech input from a user digitizing the speech and providing digitized speech to a speech engine for recognition. A multimodal device may be implemented for example as a voice enabled browser on a laptop a voice browser on a telephone handset an online game implemented with Java on a personal computer and with other combinations of hardware and software as may occur to those of skill in the art. Because multimodal applications may be implemented in markup languages X V SALT object oriented languages Java C procedural languages the C programming language and in other kinds of computer languages as may occur to those of skill in the art this specification uses the term multimodal application to refer to any software application server oriented or client oriented thin client or thick client that administers more than one mode of input and more than one mode of output typically including visual and speech modes.

Each of the example multimodal devices in the system of includes a microphone an audio amplifier a digital to analog converter and a multimodal application capable of accepting from a user speech for recognition digitizing the speech and providing the digitized speech to a speech engine for recognition. The speech may be digitized according to industry standard codecs including but not limited to those used for Distributed Speech Recognition as such. Methods for COding DECoding speech are referred to as codecs. The European Telecommunications Standards Institute ETSI provides several codecs for encoding speech for use in DSR including for example the ETSI ES 201 108 DSR Front end Codec the ETSI ES 202 050 Advanced DSR Front end Codec the ETSI ES 202 211 Extended DSR Front end Codec and the ETSI ES 202 212 Extended Advanced DSR Front end Codec. In standards such as RFC3557 entitled

As mentioned a multimodal device according to embodiments of the present invention is capable of providing speech to a speech engine for recognition. A speech engine is a functional module typically a software module although it may include specialized hardware also that does the work of recognizing and generating or synthesizing human speech. The speech engine implements speech recognition by use of a further module referred to in this specification as a ASR engine and the speech engine carries out speech synthesis by use of a further module referred to in this specification as a text to speech TTS engine. As shown in a speech engine may be installed locally in the multimodal device itself or a speech engine may be installed remotely with respect to the multimodal device across a data communications network in a voice server . A multimodal device that itself contains its own speech engine is said to implement a thick multimodal client or thick client because the thick multimodal client device itself contains all the functionality needed to carry out speech recognition and speech synthesis through API calls to speech recognition and speech synthesis modules in the multimodal device itself with no need to send requests for speech recognition across a network and no need to receive synthesized speech across a network from a remote voice server. A multimodal device that does not contain its own speech engine is said to implement a thin multimodal client or simply a thin client because the thin multimodal client itself contains only a relatively thin layer of multimodal application software that obtains speech recognition and speech synthesis services from a voice server located remotely across a network from the thin client. For ease of explanation only one of the multimodal devices in the system of is shown with a speech engine but readers will recognize that any multimodal device may have a speech engine according to embodiments of the present invention.

As shown in a speech engine and a voice interpreter may be installed locally in the multimodal device itself or a speech engine and a voice interpreter may be installed remotely with respect to the multimodal device across a data communications network in a voice server . In a thick client architecture a multimodal device includes both its own speech engine and its own voice interpreter . The voice interpreter exposes an API to the multimodal application for use in providing speech recognition and speech synthesis for the multimodal application. The multimodal application provides for example dialog instructions VoiceXML elements grammars input elements event handlers and so on through the API to the voice interpreter and the voice interpreter administers the speech engine on behalf of the multimodal application. In the thick client architecture a multimodal application including for example VoiceXML dialogs is interpreted by a voice interpreter on the multimodal device. In the thin client architecture a multimodal application including for example VoiceXML dialogs is interpreted by a voice interpreter on a voice server located remotely across a data communications network from the multimodal device running the multimodal application .

In a thin client architecture the speech engine and the voice interpreter are located remotely from the multimodal client device in a voice server the API for the voice interpreter is still implemented in the multimodal device with the API modified to communicate voice dialog instructions speech for recognition and text and voice prompts to and from the voice interpreter on the voice server. For ease of explanation only one of the multimodal devices in the system of is shown with a voice interpreter but readers will recognize that any multimodal device may have a voice interpreter according to embodiments of the present invention.

The use of these three example multimodal devices is for explanation only not for limitation of the invention. Any automated computing machinery capable of accepting speech from a user providing the speech digitized to a speech engine through a voice interpreter and receiving and playing speech prompts and responses from the voice interpreter may be improved to function as a multimodal device for altering behavior of a multimodal application based on location according to embodiments of the present invention.

The system of also includes a voice server which is connected to data communications network through wireline connection . The voice server is a computer that runs a speech engine that provides voice recognition services for multimodal devices by accepting requests for speech recognition and returning text representing recognized speech. Voice server also provides speech synthesis text to speech TTS conversion for voice prompts and voice responses to user input in multimodal applications such as for example X V applications SALT applications or Java voice applications.

The system of includes a data communications network that connects the multimodal devices and the voice server for data communications. A data communications network for altering behavior of a multimodal application based on location according to embodiments of the present invention is a data communications network composed of a plurality of computers that function as data communications routers connected for data communications with packet switching protocols. Such a data communications network may be implemented with optical connections wireline connections or with wireless connections. Such a data communications network may include intranets internets local area data communications networks LANs and wide area data communications networks WANs . Such a data communications network may implement for example 

The system of includes a web server connected for data communications through wireline connection to network and therefore to the multimodal devices . The web server may be any server that provides to client devices markup documents that compose multimodal applications. The web server typically provides such markup documents via a data communications protocol HTTP HDTP WAP or the like. That is although the term web is used to described the web server generally in this specification there is no limitation of data communications between multimodal devices and the web server to HTTP alone. The markup documents also may be implemented in any markup language that supports non speech display elements data entry elements and speech elements for identifying which speech to recognize and which words to speak grammars form elements and the like including for example X V and SALT. A multimodal application in a multimodal device then upon receiving from the web sever a markup document as part of a multimodal application may execute speech elements by use of a voice interpreter and speech engine in the multimodal device itself or by use of a voice interpreter and speech engine located remotely from the multimodal device in a voice server .

The arrangement of the multimodal devices the web server the voice server and the data communications network making up the exemplary system illustrated in are for explanation not for limitation. Data processing systems useful for altering behavior of a multimodal application based on location according to various embodiments of the present invention may include additional servers routers other devices and peer to peer architectures not shown in as will occur to those of skill in the art. Data communications networks in such data processing systems may support many data communications protocols in addition to those noted above. Various embodiments of the present invention may be implemented on a variety of hardware platforms in addition to those illustrated in .

Altering behavior of a multimodal application based on location according to embodiments of the present invention in a thin client architecture may be implemented with one or more voice servers computers that is automated computing machinery that provide speech recognition and speech synthesis. For further explanation therefore sets forth a block diagram of automated computing machinery comprising an example of a computer useful as a voice server in altering behavior of a multimodal application based on location according to embodiments of the present invention. The voice server of includes at least one computer processor or CPU as well as random access memory RAM which is connected through a high speed memory bus and bus adapter to processor and to other components of the voice server.

Stored in RAM is a voice server application a module of computer program instructions capable of operating a voice server in a system that is configured to carry out altering behavior of a multimodal application based on location according to embodiments of the present invention. Voice server application provides voice recognition services for multimodal devices by accepting requests for speech recognition and returning speech recognition results including text representing recognized speech text for use as variable values in dialogs and text as string representations of scripts for semantic interpretation. Voice server application also includes computer program instructions that provide text to speech TTS conversion for voice prompts and voice responses to user input in multimodal applications such as for example X V applications SALT applications or Java Speech applications.

Voice server application may be implemented as a web server implemented in Java C or another language that supports X V SALT VoiceXML or other multimodal languages by providing responses to HTTP requests from X V clients SALT clients Java Speech clients or other multimodal clients. Voice server application may for a further example be implemented as a Java server that runs on a Java Virtual Machine and supports a Java voice framework by providing responses to HTTP requests from Java client applications running on multimodal devices. And voice server applications that support altering behavior of a multimodal application based on location may be implemented in other ways as may occur to those of skill in the art and all such ways are well within the scope of the present invention.

Also stored in RAM is a voice interpreter a module of computer program instructions that supports the voice mode of user interaction with a multimodal application operating on a multimodal device. The voice interpreter provides speech engine input such as grammars speech for recognition and text prompts for speech synthesis to the speech engine and returns to the multimodal application speech engine output in the form of recognized speech semantic interpretation results and digitized speech for voice prompts. Input to voice interpreter may originate for example from VoiceXML clients running remotely on multimodal devices from X V clients running remotely on multimodal devices from SALT clients running on multimodal devices or from Java client applications running remotely on multimodal devices. In this example voice interpreter interprets and executes VoiceXML segments representing voice dialog instructions received from remote multimodal devices and provided to voice interpreter through voice server application .

When implemented in X V a multimodal application in a thin client architecture may provide voice dialog instructions VoiceXML segments VoiceXML elements and the like to voice interpreter through data communications across a network with the multimodal application. The voice dialog instructions include one or more grammars data input elements event handlers and so on that advise the voice interpreter how to administer voice input from a user and voice prompts and responses to be presented to a user. The voice interpreter administers such dialogs by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm FIA . The voice interpreter interprets VoiceXML dialogs provided to the voice interpreter by a multimodal application.

In the example of the voice interpreter operates for altering behavior of a multimodal application based on location according to embodiments of the present invention The voice interpreter receives a location change notification from a device location manager . The location change notification specifies a current location of the multimodal device requesting voice services from the voice interpreter . The voice interpreter updates location based environment parameters for the voice interpreter in dependence upon the current location of the multimodal device and interprets the multimodal application in dependence upon the location based environment parameters .

The location based environment parameters are parameters used by the voice interpreter to control the behavior of the multimodal application operating on a multimodal device at a particular location. Location based environment parameters may specify an output modality for user interaction with the multimodal application at a particular location such as for example specifying the use of audible prompts when the device is at a user s home and visual prompts when the device is at a user s place of worship. Location based environment parameters may further specify specific characteristics of a particular output modality such as for example specifying that audible prompts be rendered in a voice with a Bostonian accent when the device is in Boston or specifying that visual prompts be rendered in a different formats depending on whether the device is at the user s home or work. Furthermore location based environment parameters may also specify a natural language for multimodal user interaction with the multimodal application at a particular location such as for example specifying the use of English when the device is in Dallas Tex. and the use of Spanish when the device is in Harlingen Tex.

As mentioned above the voice interpreter receives a location change notification from the device location manager . The device location manger is a software component that determines the current location of a multimodal device based on the geographic coordinates provided by a position detection component. The position detection component is a component such as a GPS receiver or LORAN receiver that calculates the geographic coordinates of the multimodal device in which the position detection component is installed and provides those coordinates to various modules such as the device location manager . The device location manager is operatively coupled to a position detection component of a multimodal device through data communications network and a position detection module. The position detection module operates as a software driver installed on the multimodal device for the position detection component and provides an interface for other software components such as the device location manager to interact with the position detection component.

A device location manager useful in altering behavior of a multimodal application based on location according to embodiments of the present invention determines the location of the multimodal device based on the geographic coordinates provided by the position detection component of the multimodal device. The location of the multimodal device determined by the device location manager may merely be specified as the geographic coordinates themselves such as for example 26 38 7.27 N 80 13 37.22 W that the device location manager receives from the position detection component of multimodal device. In more typical embodiments however the location may be specified as a semantic representation of the coordinates such as for example home work or church. 

To implement the location of a multimodal device using a semantic representation the device location manager may access a device location repository that associates location semantics with a set of geographic coordinates. For further explanation consider the exemplary device location repository 

Readers will also note that the device location repository may contain location semantics for more than one multimodal device as illustrated in the exemplary device location repository above. Although such an implementation is useful when the device location manager manages the location of multiple multimodal devices the device location repository may contain only the location semantics relevant to a single multimodal device when the device location manager is installed on the multimodal device itself as discussed in more detail below.

In the example of the device location manager maintains the device location repository . The device location manager may receive location definitions that associate a location semantic with a geographic coordinate from a user through a device location manager client operating on a multimodal device. Through a user interface provided by a device location manager client a user may associate particular location semantics with geographic coordinates. For example a user may manually enter coordinates into a user interface and associate those coordinates with a location semantic chosen by the user. The user may also instruct the device location manager client to capture the coordinates of the device s current position and associate those captured coordinates with a location semantic. The device location manager client then provides the data received from the user to the device location manager which in turn stores the location definition into the device location repository . In other embodiments the device location manager may retrieve coordinates and their associated location semantics from data storage or some other repository connected to the network .

As mentioned above the device location manager of provides the current location of the multimodal device in a location change notification to the voice interpreter . The device location manager of may provide the current location in a location change notification to the voice interpreter periodically at predetermined time intervals or when device location manager identifies a change in the location of the multimodal device.

In the example of the voice interpreter may update the location based environment parameters for the voice interpreter in dependence upon the current location of the multimodal device by identifying values in an interpreter configuration repository for the location based environment parameters in dependence upon the current location for the multimodal device and assigning the identified values to the location based environment parameters . The interpreter configuration repository associates particular locations for a multimodal device with location based environment parameter values. For further explanation consider a location based environment parameter called prompt that specifies how the voice interpreter should process prompt elements in a multimodal application. In addition consider the exemplary interpreter configuration repository 

Using the exemplary interpreter configuration repository above the voice interpreter may further identify a value of pause for the location based environment parameter prompt when the current location of the multimodal device is work. A value of work for the prompt parameter specifies that the voice interpreter should render the prompts in the multimodal application using a text to speech engine of the speech engine after the user provides input through a graphical user interface of the multimodal application. Using the exemplary interpreter configuration repository above the voice interpreter may identify a value of tts voice Mickey Mouse for the location based environment parameter prompt when the current location of the multimodal device is Disneyland. The tts portion of the value for the prompt parameter specifies that the voice interpreter should render the prompts in the multimodal application using a text to speech engine of the speech engine . The voice Mickey Mouse portion of the value for the prompt parameter is a Cascading Style Sheet CSS directive that specifies synthesizing the text of the prompts in a multimodal application using the voice of Mickey Mouse. Readers will note that the exemplary interpreter configuration repository above is for explanation and not for limitation. In fact interpreter configuration repositories useful according to the present invention may be implemented in a variety of other formats and may include other values and values for other location based environment parameters as will occur to those of skill in the art.

Readers will note that the interpreter configuration repository may contain location semantics for more than one multimodal device as illustrated in the exemplary interpreter configuration repository above. Although such an implementation is useful in a thin client architecture where the voice interpreter provides voice services to multiple multimodal devices the interpreter configuration repository may only contain values for location based environment parameters particular to a single multimodal device in a thick client architecture where the voice interpreter typically provides voice services to only a single multimodal device.

To provide voice services to a multimodal application the voice server in this example includes a speech engine . The speech engine is a functional module typically a software module although it may include specialized hardware also that does the work of recognizing and generating human speech. The speech engine includes an automated speech recognition ASR engine for speech recognition and a text to speech TTS engine for generating speech. The speech engine also includes a grammar a lexicon and a language specific acoustic model . The language specific acoustic model is a data structure a table or database for example that associates SFVs with phonemes representing to the extent that it is practically feasible to do so all pronunciations of all the words in a human language. The lexicon is an association of words in text form with phonemes representing pronunciations of each word the lexicon effectively identifies words that are capable of recognition by an ASR engine. Also stored in RAM is a Text To Speech TTS Engine a module of computer program instructions that accepts text as input and returns the same text in the form of digitally encoded speech for use in providing speech as prompts for and responses to users of multimodal systems.

The grammar communicates to the ASR engine the words and sequences of words that currently may be recognized. For precise understanding distinguish the purpose of the grammar and the purpose of the lexicon. The lexicon associates with phonemes all the words that the ASR engine can recognize. The grammar communicates the words currently eligible for recognition. The set of words currently eligible for recognition and the set of words capable of recognition may or may not be the same.

Grammars for use in altering behavior of a multimodal application based on location according to embodiments of the present invention may be expressed in any format supported by any ASR engine including for example the Java Speech Grammar Format JSGF the format of the W3C Speech Recognition Grammar Specification SRGS the Augmented Backus Naur Format ABNF from the IETF s RFC2234 in the form of a stochastic grammar as described in the W3C s Stochastic Language Models N Gram Specification and in other grammar formats as may occur to those of skill in the art. Grammars typically operate as elements of dialogs such as for example a VoiceXML or an X V . A grammar s definition may be expressed in line in a dialog. Or the grammar may be implemented externally in a separate grammar document and referenced from with a dialog with a URI. Here is an example of a grammar expressed in JSFG 

In this example the elements named and are rules of the grammar. Rules are a combination of a rulename and an expansion of a rule that advises an ASR engine or a voice interpreter which words presently can be recognized. In this example expansion includes conjunction and disjunction and the vertical bars mean or. An ASR engine or a voice interpreter processes the rules in sequence first then then . The rule accepts for recognition call or phone or telephone plus that is in conjunction with whatever is returned from the rule and the rule. The rule accepts bob or martha or joe or pete or chris or john or artoush and the rule accepts today or this afternoon or tomorrow or next week. The command grammar as a whole matches utterances like these for example 

The voice server application in this example is configured to receive from a multimodal client located remotely across a network from the voice server digitized speech for recognition from a user and pass the speech along to the ASR engine for recognition. ASR engine is a module of computer program instructions also stored in RAM in this example. In carrying out automated speech recognition the ASR engine receives speech for recognition in the form of at least one digitized word and uses frequency components of the digitized word to derive a Speech Feature Vector SFV . An SFV may be defined for example by the first twelve or thirteen Fourier or frequency domain components of a sample of digitized speech. The ASR engine can use the SFV to infer phonemes for the word from the language specific acoustic model . The ASR engine then uses the phonemes to find the word in the lexicon .

Also stored in RAM is an operating system . Operating systems useful in voice servers according to embodiments of the present invention include UNIX Linux Microsoft NT IBM s AIX IBM s i5 OS and others as will occur to those of skill in the art. Operating system voice server application voice interpreter speech engine device location manager device location repository and interpreter configuration repository in the example of are shown in RAM but many components of such software typically are stored in non volatile memory also for example on a disk drive .

Voice server of includes bus adapter a computer hardware component that contains drive electronics for high speed buses the front side bus the video bus and the memory bus as well as drive electronics for the slower expansion bus . Examples of bus adapters useful in voice servers according to embodiments of the present invention include the Intel Northbridge the Intel Memory Controller Hub the Intel Southbridge and the Intel I O Controller Hub. Examples of expansion buses useful in voice servers according to embodiments of the present invention include Industry Standard Architecture ISA buses and Peripheral Component Interconnect PCI buses.

Voice server of includes disk drive adapter coupled through expansion bus and bus adapter to processor and other components of the voice server . Disk drive adapter connects non volatile data storage to the voice server in the form of disk drive . Disk drive adapters useful in voice servers include Integrated Drive Electronics IDE adapters Small Computer System Interface SCSI adapters and others as will occur to those of skill in the art. In addition non volatile computer memory may be implemented for a voice server as an optical disk drive electrically erasable programmable read only memory so called EEPROM or Flash memory RAM drives and so on as will occur to those of skill in the art.

The example voice server of includes one or more input output I O adapters . I O adapters in voice servers implement user oriented input output through for example software drivers and computer hardware for controlling output to display devices such as computer display screens as well as user input from user input devices such as keyboards and mice. The example voice server of includes a video adapter which is an example of an I O adapter specially designed for graphic output to a display device such as a display screen or computer monitor. Video adapter is connected to processor through a high speed video bus bus adapter and the front side bus which is also a high speed bus.

The exemplary voice server of includes a communications adapter for data communications with other computers and for data communications with a data communications network . Such data communications may be carried out serially through RS 232 connections through external buses such as a Universal Serial Bus USB through data communications data communications networks such as IP data communications networks and in other ways as will occur to those of skill in the art. Communications adapters implement the hardware level of data communications through which one computer sends data communications to another computer directly or through a data communications network. Examples of communications adapters useful for altering behavior of a multimodal application based on location according to embodiments of the present invention include modems for wired dial up communications Ethernet IEEE 802.3 adapters for wired data communications network communications and 802.11 adapters for wireless data communications network communications.

For further explanation sets forth a functional block diagram of exemplary apparatus for altering behavior of a multimodal application based on location in a thin client architecture according to embodiments of the present invention. The example of includes a multimodal device and a voice server connected for data communication by a VOIP connection through a data communications network . A multimodal application runs on the multimodal device and a voice server application runs on the voice server . The multimodal client application may be a set or sequence of X V or SALT documents that execute on multimodal browser a Java voice application that executes on the Java Virtual Machine or a multimodal application implemented in other technologies as may occur to those of skill in the art. The example multimodal device of also includes a sound card which is an example of an I O adapter specially designed for accepting analog audio signals from a microphone and converting the audio analog signals to digital form for further processing by a codec .

In addition to the multimodal sever application the voice server also has installed upon it a speech engine with an ASR engine a grammar a lexicon a language specific acoustic model and a TTS engine as well as a voice interpreter interpreter configuration repository and a device location manager . The voice interpreter of is implemented as a VoiceXML interpreter that interprets and executes VoiceXML dialog instructions received from the multimodal application and provided to voice interpreter through voice server application . VoiceXML input to the voice interpreter may originate from the multimodal application implemented as an X V client running remotely on the multimodal device . As noted above the multimodal application also may be implemented as a Java client application running remotely on the multimedia device a SALT application running remotely on the multimedia device and in other ways as may occur to those of skill in the art.

In addition to supporting a voice mode of user interaction with the multimodal application the voice interpreter of operates for altering behavior of a multimodal application based on location according to embodiments of the present invention. The voice interpreter of operates generally for altering behavior of the multimodal application based on location according to embodiments of the present invention by receiving from a device location manager a location change notification that specifies the current location of the multimodal device updating location based environment parameters for the voice interpreter in dependence upon the current location of the multimodal device and interpreting the multimodal application in dependence upon the location based environment parameters . The voice interpreter may update the location based environment parameters for the voice interpreter in dependence upon the current location of the multimodal device by identifying values in an interpreter configuration repository for the location based environment parameters in dependence upon the current location for the multimodal device and assigning the identified values to the location based environment parameters .

The device location manager of is a set of computer program instructions that determines the current location for a multimodal device based on the position of the device provided by a position detection component of the device and provides the current location in a location change notification to the voice interpreter . The position detection component is a component that calculates the geographic coordinates of the multimodal device in which the position detection component is installed and provides those coordinates to various modules such as the device location manager . The position detection component of may be implemented as a GPS receiver that receives signals from a group of GPS satellites a LORAN receiver the receives signals from a group of LORAN radio towers or any other component capable of calculating the geographic coordinates of the multimodal device as occurs to those of skill in the art.

In the example of the device location manager is operatively coupled to the position detection component of the multimodal device through network a device location manager client and position detection module . The position detection module operates as a software driver for the position detection component and provides an interface for other software components such as the device location manager and the device location manager client to interact with the position detection component. The device location manager client of is a software module that provides data communications between the position detection module on the multimodal device and the device location manager on voice server . In addition the device location manager client may also provide a user interface to user for associating location semantics with geographic coordinates provided by the position detection component .

As mentioned above the VOIP connection connects for data communication the multimodal device and the voice server . VOIP stands for Voice Over Internet Protocol a generic term for routing speech over an IP based data communications network. The speech data flows over a general purpose packet switched data communications network instead of traditional dedicated circuit switched voice transmission lines. Protocols used to carry voice signals over the IP data communications network are commonly referred to as Voice over IP or VOIP protocols. VOIP traffic may be deployed on any IP data communications network including data communications networks lacking a connection to the rest of the Internet for instance on a private building wide local area data communications network or LAN. 

Many protocols are used to effect VOIP. The two most popular types of VOIP are effected with the IETF s Session Initiation Protocol SIP and the ITU s protocol known as H.323. SIP clients use TCP and UDP port 5060 to connect to SIP servers. SIP itself is used to set up and tear down calls for speech transmission. VOIP with SIP then uses RTP for transmitting the actual encoded speech. Similarly H.323 is an umbrella recommendation from the standards branch of the International Telecommunications Union that defines protocols to provide audio visual communication sessions on any packet data communications network.

The apparatus of operates in a manner that is similar to the operation of the system of described above. Multimodal application is a user level multimodal client side computer program that presents a voice interface to user provides audio prompts and responses and accepts input speech for recognition . Multimodal application provides a speech interface through which a user may provide oral speech for recognition through microphone and have the speech digitized through an audio amplifier and a coder decoder codec of a sound card and provide the digitized speech for recognition to ASR engine . Multimodal application then packages the digitized speech in a recognition request message according to a VOIP protocol and transmits the speech to voice server through the VOIP connection on the network .

Voice server application provides voice recognition services for multimodal devices by accepting dialog instructions VoiceXML segments and returning speech recognition results including text representing recognized speech text for use as variable values in dialogs and output from execution of semantic interpretation scripts as well as voice prompts. Voice server application supports text to speech TTS conversion for voice prompts and voice responses to user input in multimodal applications such as for example X V applications SALT applications or Java Speech applications.

The voice server application receives speech for recognition from a user and passes the speech through API calls to voice interpreter which in turn uses an ASR engine for speech recognition. The ASR engine receives digitized speech for recognition uses frequency components of the digitized speech to derive an SFV uses the SFV to infer phonemes for the word from the language specific acoustic model and uses the phonemes to find the speech in the lexicon . The ASR engine then compares speech found as words in the lexicon to words in a grammar to determine whether words or phrases in speech are recognized by the ASR engine.

The multimodal application is operatively coupled to the ASR engine . In this example the operative coupling between the multimodal application and the ASR engine is implemented with a VOIP connection through a voice services module then through the voice server application and the voice interpreter . Depending on whether the multimodal application is implemented in X V Java or SALT the voice interpreter may be implemented as a VoiceXML interpreter SALT interpreter or a VoiceXML interpreter with an exposed Java interface. The voice services module is a thin layer of functionality a module of computer program instructions that presents an API for use by an application level program in providing dialog instructions and speech for recognition to a voice server application and receiving in response voice prompts and other responses. In this example application level programs are represented by multimodal application JVM and multimodal browser .

The voice services module provides data communications services through the VOIP connection and the voice server application between the multimodal device and the voice interpreter . The API is the same API presented to applications by a voice interpreter when the voice interpreter is installed on the multimodal device in a thick client architecture. So from the point of view of an application calling the API the application is calling the VoiceXML interpreter directly. The data communications functions of the voice services module are transparent to applications that call the API . At the application level calls to the API may be issued from the multimodal browser which provides an execution environment for the multimodal application when the multimodal application is implemented with X V. And calls to the API may be issued from the JVM which provides an execution environment for the multimodal application when the multimodal application is implemented with Java.

Altering behavior of a multimodal application based on location according to embodiments of the present invention in thick client architectures is generally implemented with multimodal devices that is automated computing machinery or computers. In the system of for example all the multimodal devices are implemented to some extent at least as computers. For further explanation therefore sets forth a block diagram of automated computing machinery comprising an example of a computer useful as a multimodal device in altering behavior of a multimodal application based on location according to embodiments of the present invention. In a multimodal device implementing a thick client architecture as illustrated in the multimodal device has no connection to a remote voice server containing a voice interpreter and a speech engine. All the components needed for speech synthesis and voice recognition in altering behavior of a multimodal application based on location according to embodiments of the present invention are installed or embedded in the multimodal device itself.

The example multimodal device of includes several components that are structured and operate similarly as do parallel components of the voice server having the same drawing reference numbers as described above with reference to at least one computer processor frontside bus RAM high speed memory bus bus adapter video adapter video bus expansion bus communications adapter I O adapter disk drive adapter an operating system a voice interpreter a speech engine and so on. As in the system of the speech engine in the multimodal device of includes an ASR engine a grammar a lexicon a language dependent acoustic model and a TTS engine . The voice interpreter may be implemented as a VoiceXML interpreter that administers dialogs by processing the dialog instructions sequentially in accordance with a VoiceXML Form Interpretation Algorithm FIA .

The speech engine in this kind of embodiment a thick client architecture often is implemented as an embedded module in a small form factor device such as a handheld device a mobile phone PDA and the like. An example of an embedded speech engine useful for altering behavior of a multimodal application based on location according to embodiments of the present invention is IBM s Embedded ViaVoice Enterprise. The example multimodal device of also includes a sound card which is an example of an I O adapter specially designed for accepting analog audio signals from a microphone and converting the audio analog signals to digital form for further processing by a codec . The sound card is connected to processor through expansion bus bus adapter and front side bus .

Also stored in RAM in this example is a multimodal application a module of computer program instructions capable of operating a multimodal device as an apparatus that supports multiple modes of user interaction including a voice mode and one or more non voice modes. The multimodal application implements speech recognition by accepting speech for recognition from a user and sending the speech for recognition through API calls to the ASR engine . The multimodal application implements speech synthesis generally by sending words to be used as prompts for a user to the TTS engine . As an example of thick client architecture the multimodal application in this example does not send speech for recognition across a network to a voice server for recognition and the multimodal application in this example does not receive synthesized speech TTS prompts and responses across a network from a voice server. All grammar processing voice recognition and text to speech conversion in this example is performed in an embedded fashion in the multimodal device itself.

More particularly multimodal application in this example is a user level multimodal client side computer program that provides a speech interface through which a user may provide oral speech for recognition through microphone have the speech digitized through an audio amplifier and a coder decoder codec of a sound card and provide the digitized speech for recognition to ASR engine . The multimodal application may be implemented as a set or sequence of X V documents executing in a multimodal browser or microbrowser that passes VoiceXML grammars and digitized speech by calls through an API directly to an embedded voice interpreter for processing. The embedded voice interpreter may in turn issue requests for speech recognition through API calls directly to the embedded ASR engine . Multimodal application also can provide speech synthesis TTS conversion by API calls to the embedded TTS engine for voice prompts and voice responses to user input.

In a further class of exemplary embodiments the multimodal application may be implemented as a Java voice application that executes on Java Virtual Machine and issues calls through an API of the voice interpreter for speech recognition and speech synthesis services. In further exemplary embodiments the multimodal application may be implemented as a set or sequence of SALT documents executed on a multimodal browser or microbrowser that issues calls through an API of the voice interpreter for speech recognition and speech synthesis services. In addition to X V SALT and Java implementations multimodal application may be implemented in other technologies as will occur to those of skill in the art and all such implementations are well within the scope of the present invention.

In addition to supporting a voice mode of user interaction with the multimodal application the voice interpreter of operates for altering behavior of a multimodal application based on location according to embodiments of the present invention. The voice interpreter of operates generally for altering behavior of the multimodal application based on location according to embodiments of the present invention by receiving from a device location manager a location change notification that specifies the current location of the multimodal device updating location based environment parameters for the voice interpreter in dependence upon the current location of the multimodal device and interpreting the multimodal application in dependence upon the location based environment parameters . The voice interpreter may update the location based environment parameters for the voice interpreter in dependence upon the current location of the multimodal device by identifying values in an interpreter configuration repository for the location based environment parameters in dependence upon the current location for the multimodal device and assigning the identified values to the location based environment parameters .

The device location manager of is a set of computer program instructions that determines the current location for a multimodal device based on the position of the device provided by a position detection component of the device and provides the current location in a location change notification to the voice interpreter . As mentioned above the location of the multimodal device may be specified as the geographic coordinates provided by the position detection component such as for example 26 38 7.27 N 80 13 37.22 W . In however the location is specified as a semantic representation of the coordinates such as for example home work or church. In the example of the device location manager may determine the current location for a multimodal device based on the position of the device by identifying a location in a device location repository based on the geographic coordinates provided by the position detection component . The device location repository of is a data structure that associates location semantics with a set of geographic coordinates.

In the example of the position detection component is a component that calculates the geographic coordinates of the multimodal device and provides those coordinates to various modules such as the device location manager . The position detection component of may be implemented as a GPS receiver that receives signals from a group of GPS satellites a LORAN receiver the receives signals from a group of LORAN radio towers or any other component capable of calculating the geographic coordinates of the multimodal device as occurs to those of skill in the art.

In the example of the device location manager is operatively coupled to the position detection component of the multimodal device through a position detection module . The position detection module operates as a software driver for the position detection component and provides an interface for other software components such as the device location manager to interact with the position detection component .

The multimodal application of is operatively coupled to the ASR engine . In this example the operative coupling between the multimodal application and the ASR engine is implemented through the voice interpreter . Depending on whether the multimodal application is implemented in X V Java or SALT the voice interpreter may be implemented as a VoiceXML interpreter SALT interpreter or a VoiceXML interpreter exposing a Java interface. When the multimodal application is implemented in X V the operative coupling is effected through the multimodal browser which provides an operating environment and an interpreter for the X V application and then through a VoiceXML interpreter which passes grammars and voice utterances for recognition to the ASR engine. When the multimodal application is implemented in Java Speech the operative coupling is effected through the JVM which provides an operating environment for the Java application which passes grammars and voice utterances for recognition to the ASR engine through an exposed Java interface of the voice interpreter . When the multimodal application is implemented in SALT the operative coupling is effected through the multimodal browser which provides an operating environment and an interpreter for the X V application and then through a SALT interpreter which passes grammars and voice utterances for recognition to the ASR engine.

The multimodal application in this example running on a multimodal device that contains its own voice interpreter and its own speech engine with no network or VOIP connection to a remote voice server containing a remote VoiceXML interpreter or a remote speech engine is an example of a so called thick client architecture so called because all of the functionality for processing voice mode interactions between a user and the multimodal application is implemented on the multimodal device itself.

For further explanation sets forth a flow chart illustrating an exemplary method of altering behavior of a multimodal application based on location according to embodiments of the present invention. The multimodal application of operates on a multimodal device supporting multiple modes of user interaction with the multimodal application . The modes of user interaction include a voice mode and one or more non voice modes. The voice mode of user interaction with the multimodal application is supported by a voice interpreter .

The method of includes receiving a location change notification in the voice interpreter from a device location manager . The location change notification is a message that specifies a current location of the multimodal device. The current location of specifies the position of the multimodal device typically using geographic coordinates such as for example 26 38 7.27 N 80 13 37.22 W or semantic representations of those coordinates such as for example house work or church. In the method of the voice interpreter may receive the location change notification from the device location manager according to the method of by registering with the device location manager to receive location change notifications through an API exposed by the device location manager . In some embodiments where the device location manager and the voice interpreter are installed on separate network connected computers the voice interpreter may register to receive the location change notifications with a device location manager client operating on the same computer as the voice interpreter . The device location manager client then in turn communicates with the device location manager across a network. In the method of the voice interpreter may receive location change notifications from the device location manager periodically at predetermined intervals or when the device location manager identifies a change in the location of the multimodal device.

In the example of the device location manager is operatively coupled to a position detection component of the multimodal device and receives the position of the multimodal device from a position detection component . The position of the multimodal device is typically expressed using geographic coordinates such as for example 26 38 7.27 N 80 13 37.22 W . The position detection component is a component of the multimodal device typically implemented using a combination of hardware and software that calculates geographic coordinates representing the current position of the multimodal device. In the exemplary system of the position detection component is implemented using a global positioning system GPS receiver that calculates the geographic coordinates of the device based on the device s position relative to a group of GPS satellites . The use of GPS however is for explanation and not for limitation. In other embodiments of the present invention the position detection component may be implemented using a Long Range Navigation LORAN receiver that calculates the geographic coordinates of the device based on the device s position relative to a group of LORAN radio transmission towers or any other component for calculating the geographic coordinate of a multimodal device as will occur to those of skill in the art.

In the example of the device location manager is operatively coupled to the position detection component in the sense that the device location manager communicates with a software driver that provides interaction with the position detection component through an exposed API. Such communication may occur locally on the multimodal device when the device location manager is installed on the multimodal device or may occur across a network when the device location manager is installed on a server such as voice server see which manages the locations of multiple multimodal devices.

Using the position of the multimodal device provided by the position detection component the device location manager determines the current location of the multimodal device. When the location of the multimodal device is specified using the geographic coordinates themselves the device location manager may simply specify the current location of the multimodal device as the coordinates received from the position detection component . In other embodiments where the current location is specified as a semantic representation of the coordinates received from the position detection component the device location manager may determine the current location by identifying a location semantic in a device location repository associated with the geographic coordinates received from the position detection component . For further explanation consider the exemplary device location repository 

In the example of the device location manager maintains the device location repository . The device location manager may receive location definitions that associate a location semantic with geographic coordinates from a user through a user interface provided by the device location manager . For example a user may manually enter coordinates into a user interface and associate those coordinates with a location semantic chosen by the user. The user may also instruct the device location manager client to capture the coordinates of the device s current position and associate those captured coordinates with a location semantic. The device location manager may then store the location definition into the device location repository . Other software modules such as the voice interpreter may then register with the device location manager to receive location change notifications that specify the current location of the multimodal device.

The method of also includes updating by the voice interpreter location based environment parameters for the voice interpreter in dependence upon the current location of the multimodal device. The location based environment parameters are parameters used by the voice interpreter to control the behavior of the multimodal application operating on a multimodal device at a particular location. Location based environment parameters may specify an output modality for user interaction with the multimodal application at a particular location such as for example specifying the use of audible prompts when the device is at a user s home and visual prompts when the device is at a user s place of worship. Location based environment parameters may further specify specific characteristics of a particular output modality such as for example specifying that audible prompts be rendered in a voice with a Bostonian accent when the device is in Boston or specifying that visual prompts be rendered in a different formats depending on whether the device is at the user s home or work. Furthermore location based environment parameters may also specify a natural language for multimodal user interaction with the multimodal application at a particular location such as for example specifying the use of English when the device is in Dallas Tex. and the use of Spanish when the device is in Harlingen Tex. The location based environment parameters may be implemented using records in a table data elements in C Java or ECMAScript objects or using any other data structure as will occur to those of skill in the art.

Updating by the voice interpreter location based environment parameters for the voice interpreter according to the method of by identifying values in an interpreter configuration repository for the location based environment parameters in dependence upon the current location for the multimodal device and assigning the identified values to the location based environment parameters . For further explanation consider the exemplary interpreter configuration repository 

Using the exemplary interpreter configuration repository above the voice interpreter may further identify a value of pause for the location based environment parameter prompt when the current location of the multimodal device is work. A value of work for the prompt parameter specifies that the voice interpreter should render the prompt elements of the multimodal application using a text to speech engine after the user provides input through a graphical user interface of the multimodal application . Using the exemplary interpreter configuration repository above the voice interpreter may identify a value of tts voice Mickey Mouse for the location based environment parameter prompt when the current location of the multimodal device is Disneyland. The tts portion of the value for the prompt parameter specifies that the voice interpreter should render the prompt elements of the multimodal application using a text to speech engine. The voice Mickey Mouse portion of the value for the prompt parameter is a Cascading Style Sheet CSS directive that specifies for the voice interpreter to synthesize the text of the prompt elements of the multimodal application using the voice of Mickey Mouse. Readers will note that the exemplary interpreter configuration repository above is for explanation and not for limitation. In fact interpreter configuration repositories useful according to the present invention may be implemented in a variety of other formats and may include other values and values for other location based environment parameters as will occur to those of skill in the art.

In the example of the voice interpreter maintains the interpreter configuration repository that associates values for location based environment parameters with particular locations. The voice interpreter may receive entries for the interpreter configuration repository from users through a user interface provided by the voice interpreter . In some embodiments the voice interpreter may receive entries for the interpreter configuration repository from a multimodal browser which in turn received the entries from the user through a user interface provided by the multimodal browser. To ensure that the locations for which a user specifies parameter values match the location managed by the device location manager the voice interpreter may register with the device location manager to receive notification of changes to the location definitions specified in the device location repository .

The method of also includes interpreting by the voice interpreter the multimodal application in dependence upon the location based environment parameters . The voice interpreter may interpret the multimodal application according to the method of by parsing the multimodal application into discrete executable segments translating those segments into machine readable instructions and executing the machine readable instructions. The manner in which the voice interpreter parses translates and executes the multimodal application will vary with the particular technology used to implement voice interpreter whether VoiceXML SALT or other technology.

In the method of interpreting by the voice interpreter the multimodal application in dependence upon the location based environment parameters includes performing actions specified in the multimodal application during a collect phase of a form interpretation algorithm for the voice interpreter . The multimodal application may specify actions using the element of the multimodal application. For example a multimodal application implemented using X V may specify an action using the VoiceXML element which is used to queue TTS and audio output to the user. Further explanation of how the voice interpreter interprets the multimodal application in dependence upon the location based environment parameters including performing actions specified in the multimodal application during a collect phase of a form interpretation algorithm is discussed below.

In the example of the multimodal application includes a plurality of elements . An element is a discrete instruction to perform a particular action. Depending on whether the multimodal application is implemented using X V SALT or Java Speech the implementation of an element may vary. In a multimodal application implementing X V an element may be implemented as one of the following exemplary elements 

In a multimodal application implementing SALT an element may be implemented as one of the following exemplary elements 

In a multimodal application implementing Java Speech an element may be implemented as a call to one of the following exemplary functions 

In the example of at least one of the elements has a location aware attribute . The location aware attribute is an attribute that specifies whether to interpret the element in dependence upon the location based environment parameters . For explanation consider the following exemplary segment of a multimodal application implemented using X V 

In the exemplary segment above prompt element has a location aware attribute location aware that is set to a value of true. A value of true specifies that a voice interpreter should interpret and process the prompt element according to any location based environment parameters of the prompt element. Consider for example that the voice interpreter has a location based environment parameter prompt for use in interpreter prompt elements in multimodal application. Further consider that the location based environment parameter prompt used by the voice interpreter may have values of tts dialog box and pause along with any directive appended to these values. If the location based environment parameter prompt has a value of tts then the voice interpreter may use a text to speech engine to synthesize the text Would you like coffee tea or milk of the prompt element above into a human voice that is played to the user. If the value is dialogue box then the voice interpreter may use ECMAScript scripting logic to display a dialog box on the display of the multimodal device with the text Would you like coffee tea or milk of the prompt element. If the value is pause then the voice interpreter may pause until the user provides graphic user input before synthesizing the text of the prompt element. As mentioned above directives may be appended to values for the location based environment parameters. For example the directive voice Mickey Mouse may be appended to the value of tts for the prompt location based environment parameter. Appending the value of voice Mickey Mouse to the value tts instructs the voice interpreter synthesize the text Would you like coffee tea or milk of the prompt element above using the voice of Mickey Mouse.

Readers will note that having a location aware attribute for an element of a multimodal application provides the author of a multimodal application with the ability to specify whether a particular element of the multimodal application should be interpreter by a voice interpreter in dependence upon the location based environment parameters. In some embodiments of the present invention however a multimodal application may not contain any elements with location aware attributes because the voice interpreter may be configured to always interpret particular elements in the multimodal application in dependence upon the location based environment parameters .

To provide an author of a multimodal application with additional control over the execution of the multimodal application in some embodiments a multimodal application may specify an action in dependence upon a value for at least one of the location based environment parameters . For further explanation consider the following exemplary segment of a multimodal application 

In the exemplary segment above the voice interpreter interprets the field element in dependence upon the location based environment parameters as discussed above and receives a response from the user. After receiving a response from the user that the voice interpreter recognizes from the grammar specified by the grammar element the voice interpreter either renders the phrase Thank you using a TTS engine or displays the phrase Thank you in a dialog box depending on the value of the location.prompt location based environment parameter for the voice interpreter. If the location.prompt parameter has a value of tts then the voice interpreter executes the prompt element that synthesizes the phrase Thank you using a TTS engine. If the location.prompt parameter has a value of tts then the voice interpreter executes the script element that specifies displaying the text Thank you on the display of the multimodal device using ECMAScript scripting logic. In such a manner the multimodal application may specify actions in dependence upon values for the location based environment parameters which allows the author of the multimodal application to explicit control the behavior of the multimodal application .

Exemplary embodiments of the present invention are described largely in the context of a fully functional computer system for altering behavior of a multimodal application based on location. Readers of skill in the art will recognize however that the present invention also may be embodied in a computer program product disposed on computer readable signal bearing media for use with any suitable data processing system. Such signal bearing media may be transmission media or recordable media for machine readable information including magnetic media optical media or other suitable media. Examples of recordable media include magnetic disks in hard drives or diskettes compact disks for optical drives magnetic tape and others as will occur to those of skill in the art. Examples of transmission media include telephone networks for voice communications and digital data communications networks such as for example Ethernets and networks that communicate with the Internet Protocol and the World Wide Web. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that although some of the exemplary embodiments described in this specification are oriented to software installed and executing on computer hardware nevertheless alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.

It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims.

