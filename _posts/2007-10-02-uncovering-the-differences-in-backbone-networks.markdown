---

title: Uncovering the differences in backbone networks
abstract: The claimed subject matter provides systems and/or methods that discover comparative differences in performance of Internet Service Provider networks. The system can include devices, components, and/or processes that partitions measurement processes into cycles and measures at least one Internet Service Provider network every cycle, develops and distributes to interrogation nodes a list of destination Internet Protocol (IP) addresses to interrogate, and utilizes results delivered or retrieved from interrogation nodes to generate a report on the comparative performance of Internet Service Provider networks queried.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08339965&OS=08339965&RS=08339965
owner: Microsoft Corporation
number: 08339965
owner_city: Redmond
owner_country: US
publication_date: 20071002
---
This application is related to co pending U.S. patent application Ser. No. 11 865 988 filed Oct. 2 2007 entitled UNCOVERING THE DIFFERENCES IN BACKBONE NETWORKS .

Performance of distributed applications can depend heavily on the behavior of underlying networks. Nevertheless the problem of understanding how well various Internet Service Provider ISP networks deliver traffic has received scant attention. To date customers of these networks have typically been in the dark about which Internet Service Providers ISPs are better than others or if a higher price necessarily provides indication of better performance. A common method for customers to obtain this information has been by asking each other about their respective experiences with certain providers. Similarly distributed applications are equally unaware of how their performance can be impacted by their choice of Internet Service Provider ISP e.g. when available for instance with DNS redirectors or overlays unless it is actively measured.

In addition to enabling better distributed applications and helping customers shedding light on the relative performance of Internet Service Providers ISPs can also improve network infrastructure as a whole. The overall performance of the Internet depends collectively on multiple Internet Service Providers ISPs and the inability to differentiate between individual Internet Service Providers ISPs discourages innovation and does not provide strong incentives to resolve problems. To address this some researchers have proposed radically different and arguably heavy weight mechanisms based on Internet Service Provider ISP accountability and overlay or customer directed routing. Other researchers in contrast have posited that by merely providing visibility into the relative performance of Internet Service Providers ISPs provides the right incentives for Internet Service Providers to adopt actions to correct deficiencies in their networks. For instance no Internet Service Provider ISP is necessarily motivated to improve its network where it is merely proclaimed that the average latency in the Internet is 60 ms. However if it is announced that the average latency for customers of one Internet Service Provider ISP is 20 ms whereas the average latency of another Internet Service Provider ISP is 200 ms market forces will likely motivate the second Internet Service Provider ISP to correct whatever is inducing this comparative disadvantage.

The relative performance of Internet Service Providers ISPs can depend on several factors including the distance between the source and the destination the geographic properties of traffic and even time of day. Further the performance of paths internal to an Internet Service Provider ISP which can form the basis of typical Service Level Agreements SLAs and the commercial effort may not directly reflect end to end performance. Thus the choice of an Internet Service Provider ISP can be a complex decision requiring a detailed analysis of Internet Service Provider ISP performance.

Based on measurements of their own network many Internet Service Providers ISPs offer a Service Level Agreement SLA that specifies the performance that customers can expect. But perhaps because of their unwillingness to vouch for performance outside their network these Service Level Agreements SLAs are typically not end to end and mention performance only within the Internet Service Provider s ISP s network. For instance a Service Level Agreement SLA may promise that 95 of traffic will not experience a latency of more than 100 ms inside the Internet Service Provider s ISP s network. A few providers also offer off net Service Level Agreements SLAs in which performance is specified across two networks the Internet Service Provider s ISP s own network and that of some of its neighbors.

For comparing Internet Service Providers ISPs current Service Level Agreements SLAs have two shortcomings. First application performance depends on the entire path to the destination and not only on a subpath. As such Internet Service Providers ISPs with better Service Level Agreements SLAs may not offer better performance. Second because they are independently offered by different Internet Service Providers ISPs Service Level Agreements SLAs make comparisons among Internet Service Providers ISPs difficult. Some Service Level Agreements SLAS may mention latency some may mention loss rates some may mention available capacity and yet others may mention a combination. Even with comparable measures difficulties in comparison can stem from the differences in the size and the spread of different Internet Service Providers ISPs . For instance is a 100 ms performance bound for an Internet Service Provider ISP with an international network necessarily better or worse than a 50 ms bound for an Internet Service Provider ISP with only a nationwide network 

Many listings compare broadband and dial up Internet Service Providers ISPs based primarily on their prices and maximum theoretical capacity. For example one system measures latency and loss rate for paths internal to Internet Service Providers ISPs and for paths between pairs of Internet Service Providers ISPs . This is generally done by co locating nodes within some Internet Service Providers ISPs Points of Presence PoPs and measuring the paths between them. Such an approach however can have several limitations. First because the approach requires active cooperation from Internet Service Providers ISPs to place nodes inside their Points of Presence PoPs coverage of an Internet Service Provider s ISP s network can be poor. Second the technique does not typically measure the entire path to the destination but only a part of it. Third the method probes use of the IP addresses of its measurement nodes as the destination address. Because Internet routing is destination based the performance experienced by destination bound traffic may differ from measurement node bound traffic.

The following presents a simplified summary in order to provide a basic understanding of some aspects of the disclosed subject matter. This summary is not an extensive overview and it is not intended to identify key critical elements or to delineate the scope thereof. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.

The claimed subject matter uncovers or reveals detailed differences in the performance of Internet Service Provider ISP networks. For example it details such information as whether some Internet Service Provider ISP networks are better than others and whether the relative performances of Internet Service Provider ISP networks are dependent on workload. While the subject matter as claimed can be trivial to deploy as it utilizes a modest number of nodes that can be placed in edge networks e.g. a wide variety of access devices that can provide entry points into and out of enterprise or service provider core networks it nevertheless can measure Internet Service Provider ISP performance in a way that can be relevant to customers and applications and further provides a fair unbiased comparison among Internet Service Providers. In order to accomplish its aims the claimed subject matter for instance can aggressively reduce probing overhead and ensure that the analysis is robust to the inherent noise in measurements.

The results provided through utilization of the claimed subject matter can include aiding applications and customers to understand the performance they can expect when they use Internet Service Provides ISPs in general and more particularly can provide for objective comparisons between specific Internet Service Providers ISPs . Typically the essential properties associated with results generated though use of the claimed subject matter can include for example measurements related to performance of paths that extend to destination networks rather than stopping where they exit the extent of a particular Internet Service Provider s network. Measuring the performance of paths within the Internet Service Provider s network is a common feature in current Service Level Agreements SLAs that Internet Service Providers generally offer their customers. However such Service Level Agreements SLAs have dubious utility where distributed application performance depends on the end to end performance of the entire path where multiple Internet Service Providers ISPs can be used. Additional properties that can be associated with results generated through utilization of the claimed subject matter can also include guidance on how the claimed subject matter measures path performance and measurement timescales thus enabling a fair comparison among Internet Service Providers ISPs by taking into account the inherent differences in their size and geographic spread. Moreover results generated through utilization of the claimed subject matter can also aid Internet Service Providers ISPs improve performance for customers and their applications.

It should be noted that in order to ease deployment the claimed subject matter without limitation can be composed of a modest number of measurement nodes that can be placed or situated inside edge networks e.g. on routers switches routing switches integrated access devices multiplexers and a variety of Metropolitan Area Network MAN and Wide Area Network WAN access devices that can provide entry points into enterprise or service provider core networks and does not require active cooperation from Internet Service Providers ISPs themselves.

In accordance with an illustrative aspect the claimed subject matter provides a machine implemented system that can identify detailed differences in the performance of networks e.g. Internet Service Provider ISP networks . The system can include controllers that partition measurement processes into cycles wherein at least one network can be interrogated every cycle iterates through a list of target networks and determines from the list of target networks a list of destinations to interrogate propagates the list of destinations to a plurality of probers that can utilize the distributed list to obtain or retrieve probing results in parallel from the destinations the probing results returned from the plurality of probers can thereafter be employed by the controllers to provide a comparative performance of networks which can be employed by applications and or users to direct distributed processes for execution throughout the expanse of the networks.

To the accomplishment of the foregoing and related ends certain illustrative aspects of the disclosed and claimed subject matter are described herein in connection with the following description and the annexed drawings. These aspects are indicative however of but a few of the various ways in which the principles disclosed herein can be employed and is intended to include all such aspects and their equivalents. Other advantages and novel features will become apparent from the following detailed description when considered in conjunction with the drawings.

The subject matter as claimed is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding thereof. It may be evident however that the claimed subject matter can be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to facilitate a description thereof.

The subject matter as claimed in accordance with one aspect provides systems and methods that quantify how well traffic handed to an Internet Service Provider ISP is delivered to a destination network. This can include traffic that is handed by the Internet Service Provider s ISP s customers for various destinations and traffic handed by the Internet Service Provider s ISP s neighbors for its customers. Further the claimed subject matter can enable a direct comparison across Internet Service Providers ISPs such that customers and applications can tell which Internet Service Provider ISP is better suited for their workload.

While there can be several ways to quantify the performance of traffic measurement of performance generally can be application dependent. Accordingly latency e.g. the time it takes packets to reach their destination after they are handed to an Internet Service Provider ISP can form a basic measure of interest to most applications.

There are three properties that the claimed subject matter possesses. First and foremost the results generated by the claimed subject matter are directly relevant to consumers e.g. applications and Internet Service Providers ISPs customers . Such a property can have four important implications for the claimed subject matter. i The subject matter as claimed can measure the performance of the entire path from where traffic enters the Internet Service Provider ISP to where it reaches the destination network and not just the internal component within the Internet Service Provider ISP network itself. While some may argue that the external component should be discounted because the Internet Service Provider ISP does not control this external segment the claimed subject matter employs the entire path since it is the entire end to end path that generally matters most to applications customers and because the Internet Service Provider ISP can control such aspects through routing and or peering decisions. ii Results produced by the claimed subject matter typically reflect the experience of application traffic. This means that traffic addressed to destination networks of interest can be employed not merely measurements of underlying links. While measurement of underlying links can be easier to obtain and or utilize these measurements generally do not reflect application experience because of routing issues. Also by reflecting the experience of application traffic instead of propagating spurious generated traffic per se the claimed subject matter can for example measure performance of authentic application traffic rather than generated pseudo traffic in a passive manner. iii Along with a long term average view the claimed subject matter can capture performance over short intervals. While the average performance of an Internet Service Provider ISP is of interest short term views provide their own utility they are what wide area applications need for short term adjustments they inform customers of the variance in an Internet Service Provider s ISP s performance and they provide information on how and Internet Service Provider ISP performs during times that are more important to the customer e.g. day versus night . Based at least in part on the timescales of routing dynamics in the Internet the claimed subject matter can utilize a period of 15 minutes for capturing a snapshot of the Internet Service Provider s ISP s performance. iv The claimed subject matter is able to customize the results generated based on a consumer needs because a single number or ranking is generally unlikely to be suitable to all customers. For instance a content provider may care more about how an Internet Service Provider ISP carries traffic from a city to the rest of the world an overlay network for voice may care more about low latency average and variance and a small Internet Service Provider ISP with home users may care more about the performance to popular Web services.

The second of the three properties that the claimed subject matter possesses is that the measures of Internet Service Provider ISP behavior appropriately accounts for inherent differences in Internet Service Provider ISP networks such as their size and geographic presence. For instance it is unfair to simply report the average time traffic takes to reach a destination after entering Internet Service Provider ISP networks. This is because there are more destination networks in North America and pass the measure above is biased towards Internet Service Providers ISPs with a major presence there. Similarly if one Internet Service Provider ISP has international presence and another has a smaller network directly comparing the average time traffic spends in their networks is unfair.

To account for differences among Internet Service Providers ISPs instead of viewing them as networks composed of routers and links the claimed subject matter can perceive them as networks that connect cities by inferring the cities of their routers. Along with inferences about the geographical location of destination networks it enables the claimed subject matter to normalize results based on geography. Applications can then compose metrics to determine what combination of Internet Service Providers ISPs and paths would best serve their needs.

The third property manifested by the subject matter as claimed relates to the fact that the results generated can not only help customers but also aid Internet Service Providers ISPs better understand their networks. In particular results generated by the claimed subject matter should enable Internet Service Providers ISPs understand for instance whether performance issues that customers experience stem from their own network or from outside the network and whether performance is particularly bad from certain cities. As will be readily appreciated by those of ordinary skill in the art resolutions can be different for each case.

Building a system to compare Internet Service Providers ISPs that can be embedded in an inter network of many other Internet Service Providers ISPs can present an interesting challenge. Unlike file and database systems the claimed subject matter cannot merely bring a copy of an Internet Service Provider ISP network into a laboratory and construct an evaluation system around it. Instead the Internet Service Provider ISP network typically must be measured in situ. In an ideal system measurement nodes can be situated inside each Point of Presence PoP and each destination network in order to measure how traffic is delivered from Points of Presence PoPs e.g. where Internet Service Providers ISPs are handed traffic to destination networks. In such an ideal system the measurement task is typically straightforward and trivial. Nevertheless such a system generally has a very high deployment barrier i it can require thousands of measurement nodes to measure paths to even a fraction of destination networks ii it can require significant cooperation for Internet Service Providers ISPs to place nodes inside each of their Points of Presence PoPs . Many Internet Service Providers ISPs typically may not be willing or able to provide this level of cooperation.

An alternative that can circumvent the aforementioned onerousness places nodes inside a few Points of Presence PoPs of cooperative Internet Service Providers ISPs . This approach nevertheless has limitations for example it requires active cooperation from Internet Service Providers ISPs to place nodes inside their Points of Presence PoPs and does not measure the entire path to the destination but only a part of it.

While system as illustrated in can be easily deployed engineering such a system can be significantly challenging. Accordingly and in order to overcome such challenges system can aggressively limit the number of probes disseminated from measurement nodes e.g. nodes and in edge networks e.g. access devices that can provide entry points into enterprise or service provider core networks . Further system can extract performance information about subpaths of interest from end to end probes. Additionally since single ended measurements from edge nodes can be inherently more noisy e.g. the forward and reverse paths typically can be asymmetric system ensures that any inferences that it makes are robust to such sources of noise.

Hosting measurement nodes e.g. node and within or inside edge networks can require that system limit probing overhead so that it can comply with policies imposed by hosting networks and not overload local networks or access links. To understand the need for limiting the probing requirement assume that there are 250 000 destination IP Internet Protocol prefixes e.g. the current size of a Boarder Gateway Protocol BGP routing table . Further assume for example that system wants to measure an Internet Service Provider ISP within 15 minutes and it takes thirty 100 byte packets to measure one path. An approach that probes from all nodes to all prefixes can require over 60 Mbps per measurement node. As will be readily appreciated by those reasonably cognizant in this field of endeavor such a level of sustained bandwidth usage can be prohibitive for many edge networks. Accordingly in order to overcome this impediment system can employ the following techniques to reduce overhead.

System for example instead of using IP Internet Protocol prefixes as destinations can employ Boarder Gateway Protocol BGP atoms. Atoms can be groups of prefixes with identical routing policies such that the paths to constituent prefixes can be identical. Routing updates for such prefixes can often be carried in the same message suggesting that their routing dynamics can be the same or similar. It is not necessary that all atoms as inferred using Boarder Gateway Protocol BGP tables are atomic . But by employing atoms instead of prefixes can present a four fold reduction in the number of destinations a worthwhile trade off.

Additionally in order to further reduce probing requirements system can select probes based on recent routing history. Out of all the probes that a measurement node e.g. node and or can disseminate and or propagate many probes will not necessarily traverse Internet Service Providers ISPs of interest and consequently are not useful for measuring those Internet Service Providers ISPs . Thus system can employ views of recent routing from the measurement node e.g. node and or to restrict probing to those probes that are likely to traverse Internet Service Providers ISPs of interest. To produce such views measurement nodes e.g. nodes and or can be requested to collect it view of routing to all the destinations. After that this view can be continuously refreshed using for example low rate background probing.

In a further attempt to limit probing requirements system can eliminate redundancies. The set of probes from a measurement node e.g. nodes and or to destinations e.g. and or can include many redundancies. An example redundancy is where the path of interest of one probe is contained within another. Or if probes from two or more nodes enter the Internet Service Provider ISP at the same Point of Presence PoP only one is required. Similarly for internal paths a probe that traverses three Points of Presence PoPs can provide information about performance between three pairs of cities and other probes that traverse individual pairs are not typically required for this purpose. Accordingly elimination of such redundancies can lower the probing overhead and it can also be used to balance load across nodes e.g. nodes and or .

The redundancy reduction elimination problem that needs to be overcome by system can be summarized as follows. If it is assumed that system can know e.g. from a routing view the path that would be taken by each possible probe. Out of these system will want to select a subset such that i each Internet Service Provider ISP city to destination is probed ii each internal paths between two cities is probed and iii probing load at a measurement node e.g. node and or does not exceed a threshold. This problem is an instance of the set covering packing problem that can be elucidated as follows. Given multiple sets over a universe of elements pick a subset of input sets such that each element is included at least a given number of times covering constraint and no element is included more than a given number of times packing constraint . With respect to the claimed subject matter the input sets are probes and the elements are destination paths internal city pair paths and measurement nodes e.g. node and or . Each probe typically contains all three types of elements.

It should be noted that the set covering packing problem is typically NP hard but greedy heuristics are known to yield good solutions. Accordingly system can implement one such greedy heuristic where probes are added to the measurement set until all elements are covered at least once. At each step the probe that covers the most as yet uncovered elements is added.

To extract subpaths of interest system needs to know where an Internet Service Provider ISP begins and ends in the measured path. Further to obtain a geographic view of the Internet Service Provider s ISP s network system can also need to map the Internet Service Provider s ISP s IP Internet Protocol addresses to their locations. IP Internet Protocol addresses typically can be seen in disseminated probes and can be mapped to owner Internet Service Providers ISPs and locations based primarily on their names which often can be embedded within this information. For instance the name s1 gw12 sea 4 0 0.telinc.net can correspond to a router belonging to Telinc and situated in Seattle. To map IP addresses to Intranet Service Provider ISP and locations system can use functionality e.g. undns which uses encoded rules about the Internet Service Providers ISPs naming convention to determine the mappings. System can extend the rule set to improve the number of names that the foregoing functionality can successfully map. IP Internet Protocol addresses that do not have names can be mapped using methods based on majority voting for example.

To normalize paths based on geography system can infer the rough location of destination networks. To accomplish this system can use a geolocation database compiled from websites that ask uses their location. Typically utilization of such geolocation databases can have an accuracy of 99 in determining the country of an IP address and in ascertaining more granular locations within a country can have an accuracy exceeding 80 .

Recognizing that there can be multiple sources of noise and error in data and to ensure that inferences made by system are robust to such errors system can detect each source of an erroneous data and filter it appropriately. For example errors in DNS names or majority voting can incorrectly map an IP Internet Protocol address to an Internet Service Provider ISP . To accommodate for this eventuality system can check for such occurrences by observing the gathered traceroute data. IP Internet Protocol addresses belonging to the same Internet Service Provider ISP typically must appear consecutively e.g. IP Internet Protocol addresses should not be separated by an IP Internet Protocol address that belongs to another Internet Service Provider ISP . Transient routing problems can cause such an anomaly as well but where system observes such an anomaly across many traceroutes system can conclude that the Internet Service Provider ISP of the intervening IP Internet Protocol address has been incorrectly assigned.

Further noise and error can be introduced into the data where errors in DNS names or majority voting incorrectly assign an incorrect location to a router IP Internet Protocol address. To accommodate for this situation system can check for such errors using two sanity checks. First the traceroute for a particular Internet Service Provider ISP typically should not exit and enter a city again. As before some of these anomalies can arise because of transient routing issues persistent issues indicate incorrect location mapping. The location mapping of IP Internet Protocol addresses that are frequently sandwiched between the two IP Internet Protocol addresses of a different location is typically incorrect.

Second system can run a speed of light test among neighbors to detect erroneous mappings. The differences in the round trip latency observed to neighboring IP Internet Protocol addresses typically should be more than the minimum time it takes for light to travel between the locations of the IP Internet Protocol addresses. The latter time can be computed using the geographical location coordinates assigned to locations and the speed of light in fiber this test typically can also detect problems in assignment of geographic coordinates as well. Because of asymmetric routing a speed of light test can fail even when the underlying data is correct. If an IP Internet Protocol address fails this test for a majority of its neighbors system can conclude its location to the incorrect.

Depending on the Internet Service Provider ISP only 0.2 1.1 of traceroutes typically fail one of the above two tests. In each case deleting the mapping of a handful of IP addresses by system can resolve most of these anomalous traceroutes. These apparently faulty mappings can stem from both the facility that uses encoded rules about Internet Service Providers ISPs naming conventions to determine the mappings e.g. undns and or majority voting.

To detect cases where the geolocation database incorrectly infers the coordinates of a destination IP Internet Protocol address system can again utilize a test based on speed of light. System can for example use traceroutes to the destination and then can compare i the differences in the round trip latency between the destination and intermediate IP Internet Protocol addresses e.g. whose locations system knows and ii the minimum time it would typically take light to travel that path. Destinations for which the former is often less than the latter can be considered to have incorrect location assignment.

Because system can infer path latency using single ended measurements the system needs to guard against inference is being confused by significant asymmetries in forward and reverse paths. To accomplish this system can discard traceroutes for which forward and reverse hop length to an IP Internet Protocol address of interest differs by more than three for example. The forward hop length can typically be obtained directly from the traceroute measurement while the reverse hop length can be inferred using the remaining Time To Live TTL e.g. period of time that a unit of data for instance a record packet and the like can experience before it should be discarded in the probe response.

Further in order to ensure against inferences being confused by either measurement nodes e.g. node and being overloaded or a link between the measurement node and the Internet Service Provider ISP being overloaded such overload events can make the Internet Service Provider s ISP s performance appear bad . System can detect such overload events by observing the variance in the round trip time from a node to the IP Internet Protocol address where the probe enters the Internet Service Provider ISP . On detection of such overload events system can discard data from the node during periods when the variance is high for example.

As illustrated prober can be implemented entirely in software hardware and or a combination of software and or hardware. Further prober can be incorporated within and or associated with other compatible components such as devices and or appliances that can include processors e.g. desktop computers laptop computers notebook computers cell phones smart phones personal digital assistants multimedia Internet enabled mobile phones multimedia players and the like . Prober can be responsible for probing to destinations and maintaining a fresh routing view to all Border Gateway Protocol BGP atoms. Prober can be in one of four states idle initializing ready or busy. Idle probers e.g. prober typically are not being actively used for measurement because they are co located with an active prober generally only one active prober is used for site because others do not contributed additional paths. Initializing probers e.g. prober can be located at sites from which no fresh routing view has emanated and which are in the process of acquiring a fresh routing view. Acquiring routing views can normally take several hours. Ready probers e.g. prober can be located at sites from which fresh routing views have been obtained required but ready probers are typically not county probing any Internet Service Provider ISP . Busy probers e.g. prober can actively probe an Internet Service Provider ISP .

In addition to Internet Service Provider ISP specific probing active probers e.g. prober can probe to all destinations at a low rate to maintain a fresh routing view. Due to the large number of atoms roughly 55 000 probers can spread this task over the course of the day.

In order to effectuate probing to destinations and maintaining fresh routing views to all Border Gateway Protocol BGP atoms prober can utilize a customized version of traceroute for probing paths. For speed this customized version can probe the first eight hops simultaneously then the next four then the next two the remaining homes can thereafter be probed sequentially for example. The reduction in the number of hops that are probed simultaneously can minimize the chances of triggering an intrusion detection system at the destination network. To minimize the chances that probes take different router level paths to the destination due to load balancing routers all the packets can have the same source destination port numbers and type of service ToS value. Multiple destinations can be probed in parallel subject to the configured maximum probing rate.

Controller like prober can be implemented entirely in software hardware and or as a combination of software and or hardware. Further controller can be any type of machine that includes a processor and is capable of effective communication with network topology . Illustrative machines that can comprise controller can include desktop computers server class computing devices cell phones smart phones laptop computers notebook computers Tablet PCs consumer and or industrial devices and or appliances hand held devices personal digital assistants multimedia Internet mobile phones and the like.

Network topology can include any viable communication and or broadcast technology for example wide and or wireless modalities and or technologies can be utilized to effectuate the claimed subject matter. Moreover network topology can include utilization of Personal Area Networks PANs Local Area Networks LANs Campus Area Networks CANs Metropolitan Area Networks MANs extranets intranets the Internet Wide Area Networks WANs both centralized and distributed and or any combination permutation and or aggregation thereof.

While system as depicted can be considered conceptually simple there are two major challenges in executing the process above. First as a large scale distributed system for example system can have to deal with a continuously evolving environment. Nodes die and reappear routing and topology changes software evolves etc. Second in order to measure target Internet Service Providers ISPs as frequently as possible system has to maximize the time it spends probing while minimizing other overhead. Thus unless system is not careful even the simple task of transferring a single file to all probes can run into tens of minutes if a prober is unresponsive.

Interface can provide various adapters connectors channels communication pathways etc. to integrate the various components included in system into virtually any operating system and or database system and or with one another. Additionally interface can provide various adapters connectors channels communication modalities and the like that can provide for interaction with various components that can comprise system and or any other component external and or internal data and the like associated with system .

Software updater can ensure that all probers e.g. prober have up to date probing software and configuration files. Where software updater finds a node e.g. prober with stale files it can install the latest software. Typically there are only two configuration files for probers a list of IP Internet Protocol addresses to probe within atoms for obtaining the routing view and a list of IP Internet Protocol prefixes to which they should never probe. Because Border Gateway Protocol BGP tables can change for example once a day software updater can re compute atoms and randomly select an IP Internet Protocol to probe in it. The second list can typically contain destination networks that affirmatively request not to be probed.

Probe monitor can maintain a local view of the state of each prober e.g. prober by polling them periodically.

Data collector can copy or retrieve data generated by the probers e.g. prober back to controller . There can be two types of data files routing view files and probing result files. The former can be processed by topology mapper discussed below to maintain a fresh view of the Internet Service Provider ISP topology and the latter can be used by a data analyzer discussed infra to analyze Internet Service Provider ISP performance.

Topology mapper can recover Internet Service Provider ISP topologies from routing view files. Topology mapper accomplishes this by determining where an Internet Service Provider ISP begins and ends. Topology mapper can also ascertain a geographic view of the Internet Service Provider s ISP s network and maps the Internet Service Provider s ISP s IP Internet Protocol addresses to their locations. Accordingly topology mapper can map IP Internet Protocol addresses seen in disseminated probes to owner Internet Service Providers ISPs and locations primarily based on their names which often are embedded within this information. For instance the name a1 gw08 bos 5 0 0.telcom.net can correspond to a router belonging to a telecommunications provider Telcom situated in Boston. To map IP Internet Protocol addresses to Internet Service Provider ISP and location topology mapper can employ a facility which uses encoded rules about the Internet Service Providers ISPs naming conventions to determine and mappings e.g. undns . Further to map IP Internet Protocol addresses that do not have names topology mapper can use methods based on majority voting.

In order to normalize paths based on geography topology mapper can infer the rough location of destination networks. For example topology mapper can employ a geolocation database typically compiled from websites that ask users for their location.

Additionally topology mapper that can convert the IP level routing view from each prober e.g. into a city level view. Unlike other systems that measure Internet Service Provider ISP topologies but once the claimed subject matter and in particular network topology mapper evolves its view of Internet Service Provider ISP topologies as such topologies change over time. Thus topology mapper can expire IP Internet Protocol addresses and links in developed topological views that have not been observed for a period of time. The expiration period can represent a trade off between the freshness of data and the additional cost of processing newly discovered IP Internet Protocol addresses and links compared to those that have been observed before. Based on the assumption that Internet Service Provider ISP topologies do not change rapidly the expiration period can be configured to be one week for example. Additionally to account for the possibility of DNS name changes topology mapper can re query names that are more than a week old for instance. Furthermore topology mapper can also continuously monitor the quality of the current routing and topological views. For example a monitoring script can look for indicators such as the number of IP Internet Protocol addresses in a Internet Service Provider ISP the number of IP Internet Protocol addresses not resolved by the mechanism that uses encoded rules about Internet Service Providers ISPs naming conventions to determine mappings e.g. undns and the number of anomalous traceroutes. The output of such a script can provide guidance as to whether any action such as adding new rules needs to be taken with respect to the facility that employs encoded rules about Internet Service Providers ISPs naming conventions in order to determine mappings e.g. undns . Additionally in order to enable analysis over historical data topology mapper can persist the current view of Internet Service Providers ISPs topology once a day for example.

Probing optimizer can combine a list of probers e.g. probers with fresh routing views e.g. obtained from prober monitor and the city level routing views of these probers e.g. obtained from topology mapper to generate lists of destinations to probe for the target Internet Service Provider ISP . Probing optimizer can utilize redundancy elimination mechanisms described earlier.

Probing coordinator can drive the measurement cycles. At the beginning of the cycle probing coordinator can retrieve a list of destinations for the current Internet Service Provider ISP and can translate each list to its corresponding prober e.g. prober for example using a customized version of parallel scp. This customized version of parallel scp can for instance ensure that all files are either completely copied or not copied in a preconfigured time period e.g. 60 seconds . Thus measurement cycles will not be blocked by any slow transfers. Probing coordinator can periodically obtain the states of all probers from prober monitor . When probing coordinator finds that there are no busy probers it can proceed to the next cycle.

To prevent a measurement cycle from being blocked by a prober with low network bandwidth or heavy CPU load probing coordinator can use a timeout period to define the maximum time the prober can spend probing in a cycle. After this period all probers typically will be ready for the next cycle. The timeout generally can be set to 15 minutes. A prober can normally measure approximately 9000 paths in this period.

A unique aspect of the claimed subject matter is that all probers can be synchronized every 15 minutes so that they may stop measuring a Internet Service Provider ISP at roughly the same time. Much of the complexity of the claimed subject matter can stem from this. Alternative implementations can also be used such as performing most tasks sequentially. While such sequential implementation can be easier it nevertheless has high overhead in terms of how frequently new measurement cycles can be commenced. A delay in any of the functions e.g. software update or gathering the results can lead to the slowdown in the entire chain. Accordingly in the case of the claimed subject matter most tasks are typically performed in parallel and different tasks do not wait for each other. While this version can be more challenging to implement it meets its goal of maximizing the time spent probing. The only tasks that typically do not necessarily happen in parallel can be transferring the list of destinations at the beginning of each cycle and checking their status and the end of each cycle.

System can also include analysis component that can convert raw measurement result data received or obtained from probers into results that can be employed to provide meaningful and cogent comparison of Internet Service Providers ISPs . Analysis component can receive via controller raw probing result data files from probers extract information about subpaths of interest from the raw measurement files produce intermediate files that can contain latency information about all visible paths of target Internet Service Providers ISPs in a particular cycle and aggregate latency samples of a path into an estimate for that path in that cycle. Additionally analysis component can aggregate across cycles to obtain an average view of the latency of a path.

After processing the raw measurement files generated in a cycle an intermediate file can be produced that contains latency information about all the visible paths of a target Internet Service Provider ISP in a particular cycle. Given that a path can be measured from multiple sources a grouping component can be utilized to group the latency samples of a path by the source where the measurement is taken. This enables the system and more particularly grouping component to identify and discard bad latency samples due to asymmetric paths. In addition grouping component can also filter out bad samples due to overloaded node or nearby links.

The remaining latency samples of a path can be aggregated by an aggregation component into one estimate for the path in that cycle. There are many methods to accomplish this for example arithmetic mean geometric mean median etc. Given that the latency samples sometimes can be distorted by unpredictable router response time aggregation component can utilize a method that is robust to both small and large outliers and yields representative results. Accordingly aggregation component can utilize the median when aggregating multiple latency samples for the same path from the same source and then can use the arithmetic mean when aggregating across sources.

When aggregating across cycles to obtain an average view of the latency of a path aggregation component can produce two values. The first value can be the trimmed mean which can be computed by taking the mean of the latency estimates between the 10th and the 90th percentile of all the latency estimates for example. The second value can capture the variance in the latency across cycles using the difference between the 90th and 10th percentile of all of the latency estimates for instance.

It is to be appreciated that store can be for example volatile memory or non volatile memory or can include both volatile and non volatile memory. By way of illustration and not limitation non volatile memory can include read only memory ROM programmable read only memory PROM electrically programmable read only memory EPROM electrically erasable programmable read only memory EEPROM or flash memory. Volatile memory can include random access memory RAM which can act as external cache memory. By way of illustration rather than limitation RAM is available in many forms such as static RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM enhanced SDRAM ESDRAM Synchlink DRAM SLDRAM Rambus direct RAM RDRAM direct Rambus dynamic RAM DRDRAM and Rambus dynamic RAM RDRAM . Store of the subject systems and methods is intended to comprise without being limited to these and any other suitable types of memory. In addition it is to be appreciated that store can be a server a database a hard drive and the like.

The independent components may be used to further fill out or span an information space and the dependent components may be employed in combination to improve quality of common information recognizing that all sensor input data may be subject to error and or noise. In this context data fusion techniques employed by data fusion component may include algorithmic processing of sensor input data to compensate for inherent fragmentation of information because particular phenomena may not be observed directly using a single sensing input modality. Thus data fusion provides a suitable framework to facilitate condensing combining evaluating and or interpreting available sensed or received information in the context of a particular application.

In view of the foregoing it is readily apparent that utilization of the context component to consider and analyze extrinsic information can substantially facilitate determining meaning of sets of inputs.

Users can also interact with regions to select and provide information via various devices such as a mouse roller ball keypad keyboard and or voice activation for example. Typically the mechanism such as a push button or the enter key on the keyboard can be employed subsequent to entering the information in order to initiate for example a query. However it is to be appreciated that the claimed subject matter is not so limited. For example nearly highlighting a checkbox can initiate information conveyance. In another example a command line interface can be employed. For example the command line interface can prompt e.g. via text message on a display and an audio tone the user for information via a text message. The user can then provide suitable information such as alphanumeric input corresponding to an option provided in the interface prompt or an answer to a question posed in the prompt. It is to be appreciated that the command line interface can be employed in connection with a graphical user interface and or application programming interface API . In addition the command line interface can be employed in connection with hardware e.g. video cards and or displays e.g. black and white and EGA with limited graphic support and or low bandwidth communication channels.

In view of the exemplary systems shown and described supra methodologies that may be implemented in accordance with the disclosed subject matter will be better appreciated with reference to the flow chart of . While for purposes of simplicity of explanation the methodologies are shown and described as a series of blocks it is to be understood and appreciated that the claimed subject matter is not limited by the order of the blocks as some blocks may occur in different orders and or concurrently with other blocks from what is depicted and described herein. Moreover not all illustrated blocks may be required to implement the methodologies described hereinafter. Additionally it should be further appreciated that the methodologies disclosed hereinafter and throughout this specification are capable of being stored on an article of manufacture to facilitate transporting and transferring such methodologies to computers.

The claimed subject matter can be described in the general context of computer executable instructions such as program modules executed by one or more components. Generally program modules can include routines programs objects data structures etc. that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined and or distributed as desired in various aspects.

Out of all the probes that a measurement node can distribute or propagate many do not even traverse an Internet Service Provider ISP of interest and thus are not typically useful for measuring that Internet Service Provider ISP . Accordingly at a view of recent routing from a measurement node can be obtained and utilized to restrict probing to those probes that are likely to traverse an Internet Service Provider ISP of interest and thus probes can be selected based on recent routing history.

At redundancies can be eliminated. The set of probes from a measurement node to destinations can include many redundancies. An example redundancy is where the path of interest of one probe is contained within another. Or if probes from two nodes enter the Internet Service Provider ISP at the same Point of Presence PoP only one is required. Similarly for internal paths a probe that traverses three Points of Presence PoPs can provide information about performance between three pairs of cities and other probes that traverse individual pairs are not required for this purpose. Thus eliminating such redundancies can lower the probing overhead and can also be used to balance load across nodes.

The redundancy reduction problem can be expressed as follows. Suppose it is known e.g. from the routing view the path that would be taken by each possible probe. Out of these a subset needs to be selected such that i each Internet Service Provider ISP city to destination network is probed ii each internal path between two cities is probed and iii the probing load at a measurement node does not exceed a threshold. Such a problem can be viewed as an instance of the set covering packing problem given multiple sets over a universe of elements take a subset of input sets such that each element is included at least a given number of times covering constraint and no element is included more than a given number of times packing constraint . In this case the input sets are probes and the elements are destination paths internal city pair paths and measurement nodes. Each probe typically contains all three types of elements. As noted infra the set covering packing problem is NP hard but greedy heuristics are known to yield good solutions. One such greedy heuristic that can be used necessitates adding probes to the measurement set until all elements are covered at least once. At each step the probe that covers the most as yet uncovered elements is added.

The claimed subject matter can be implemented via object oriented programming techniques. For example each component of the system can be an object in a software routine or a component within an object. Object oriented programming shifts the emphasis of software development away from function decomposition and towards the recognition of units of software called objects which encapsulate both data and functions. Object Oriented Programming OOP objects are software entities comprising data structures and operations on data. Together these elements enable objects to model virtually any real world entity in terms of its characteristics represented by its data elements and its behavior represented by its data manipulation functions. In this way objects can model concrete things like people and computers and they can model abstract concepts like numbers or geometrical concepts.

The benefit of object technology arises out of three basic principles encapsulation polymorphism and inheritance. Objects hide or encapsulate the internal structure of their data and the algorithms by which their functions work. Instead of exposing these implementation details objects present interfaces that represent their abstractions cleanly with no extraneous information. Polymorphism takes encapsulation one step further the idea being many shapes one interface. A software component can make a request of another component without knowing exactly what that component is. The component that receives the request interprets it and figures out according to its variables and data how to execute the request. The third principle is inheritance which allows developers to reuse pre existing design and code. This capability allows developers to avoid creating software from scratch. Rather through inheritance developers derive subclasses that inherit behaviors that the developer then customizes to meet particular needs.

In particular an object includes and is characterized by a set of data e.g. attributes and a set of operations e.g. methods that can operate on the data. Generally an object s data is ideally changed only through the operation of the object s methods. Methods in an object are invoked by passing a message to the object e.g. message passing . The message specifies a method name and an argument list. When the object receives the message code associated with the named method is executed with the formal parameters of the method bound to the corresponding values in the argument list. Methods and message passing in OOP are analogous to procedures and procedure calls in procedure oriented software environments.

However while procedures operate to modify and return passed parameters methods operate to modify the internal state of the associated objects by modifying the data contained therein . The combination of data and methods in objects is called encapsulation. Encapsulation provides for the state of an object to only be changed by well defined methods associated with the object. When the behavior of an object is confined to such well defined locations and interfaces changes e.g. code modifications in the object will have minimal impact on the other objects and elements in the system.

Each object is an instance of some class. A class includes a set of data attributes plus a set of allowable operations e.g. methods on the data attributes. As mentioned above OOP supports inheritance a class called a subclass may be derived from another class called a base class parent class etc. where the subclass inherits the data attributes and methods of the base class. The subclass may specialize the base class by adding code which overrides the data and or methods of the base class or which adds new data attributes and methods. Thus inheritance represents a mechanism by which abstractions are made increasingly concrete as subclasses are created for greater levels of specialization.

As used in this application the terms component and system are intended to refer to a computer related entity either hardware a combination of hardware and software or software in execution. For example a component can be but is not limited to being a process running on a processor a processor a hard disk drive multiple storage drives of optical and or magnetic storage medium an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a server and the server can be a component. One or more components can reside within a process and or thread of execution and a component can be localized on one computer and or distributed between two or more computers.

Artificial intelligence based systems e.g. explicitly and or implicitly trained classifiers can be employed in connection with performing inference and or probabilistic determinations and or statistical based determinations as in accordance with one or more aspects of the claimed subject matter as described hereinafter. As used herein the term inference infer or variations in form thereof refers generally to the process of reasoning about or inferring states of the system environment and or user from a set of observations as captured via events and or data. Inference can be employed to identify a specific context or action or can generate a probability distribution over states for example. The inference can be probabilistic that is the computation of a probability distribution over states of interest based on a consideration of data and events. Inference can also refer to techniques employed for composing higher level events from a set of events and or data. Such inference results in the construction of new events or actions from a set of observed events and or stored event data whether or not the events are correlated in close temporal proximity and whether the events and data come from one or several event and data sources. Various classification schemes and or systems e.g. support vector machines neural networks expert systems Bayesian belief networks fuzzy logic data fusion engines . . . can be employed in connection with performing automatic and or inferred action in connection with the claimed subject matter.

Furthermore all or portions of the claimed subject matter may be implemented as a system method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed subject matter. The term article of manufacture as used herein is intended to encompass a computer program accessible from any computer readable device or media. For example computer readable media can include but are not limited to magnetic storage devices e.g. hard disk floppy disk magnetic strips . . . optical disks e.g. compact disk CD digital versatile disk DVD . . . smart cards and flash memory devices e.g. card stick key drive . . . . Additionally it should be appreciated that a carrier wave can be employed to carry computer readable electronic data such as those used in transmitting and receiving electronic mail or in accessing a network such as the Internet or a local area network LAN . Of course those skilled in the art will recognize many modifications may be made to this configuration without departing from the scope or spirit of the claimed subject matter.

Some portions of the detailed description have been presented in terms of algorithms and or symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and or representations are the means employed by those cognizant in the art to most effectively convey the substance of their work to others equally skilled. An algorithm is here generally conceived to be a self consistent sequence of acts leading to a desired result. The acts are those requiring physical manipulations of physical quantities. Typically though not necessarily these quantities take the form of electrical and or magnetic signals capable of being stored transferred combined compared and or otherwise manipulated.

It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like. It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the foregoing discussion it is appreciated that throughout the disclosed subject matter discussions utilizing terms such as processing computing calculating determining and or displaying and the like refer to the action and processes of computer systems and or similar consumer and or industrial electronic devices and or machines that manipulate and or transform data represented as physical electrical and or electronic quantities within the computer s and or machine s registers and memories into other data similarly represented as physical quantities within the machine and or computer system memories or registers or other such information storage transmission and or display devices.

Referring now to there is illustrated a block diagram of a computer operable to execute the disclosed system. In order to provide additional context for various aspects thereof and the following discussion are intended to provide a brief general description of a suitable computing environment in which the various aspects of the claimed subject matter can be implemented. While the description above is in the general context of computer executable instructions that may run on one or more computers those skilled in the art will recognize that the subject matter as claimed also can be implemented in combination with other program modules and or as a combination of hardware and software.

Generally program modules include routines programs components data structures etc. that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the inventive methods can be practiced with other computer system configurations including single processor or multiprocessor computer systems minicomputers mainframe computers as well as personal computers hand held computing devices microprocessor based or programmable consumer electronics and the like each of which can be operatively coupled to one or more associated devices.

The illustrated aspects of the claimed subject matter may also be practiced in distributed computing environments where certain tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules can be located in both local and remote memory storage devices.

A computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by the computer and includes both volatile and non volatile media removable and non removable media. By way of example and not limitation computer readable media can comprise computer storage media and communication media. Computer storage media includes both volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital video disk DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer.

With reference again to the exemplary environment for implementing various aspects includes a computer the computer including a processing unit a system memory and a system bus . The system bus couples system components including but not limited to the system memory to the processing unit . The processing unit can be any of various commercially available processors. Dual microprocessors and other multi processor architectures may also be employed as the processing unit .

The system bus can be any of several types of bus structure that may further interconnect to a memory bus with or without a memory controller a peripheral bus and a local bus using any of a variety of commercially available bus architectures. The system memory includes read only memory ROM and random access memory RAM . A basic input output system BIOS is stored in a non volatile memory such as ROM EPROM EEPROM which BIOS contains the basic routines that help to transfer information between elements within the computer such as during start up. The RAM can also include a high speed RAM such as static RAM for caching data.

The computer further includes an internal hard disk drive HDD e.g. EIDE SATA which internal hard disk drive may also be configured for external use in a suitable chassis not shown a magnetic floppy disk drive FDD e.g. to read from or write to a removable diskette and an optical disk drive e.g. reading a CD ROM disk or to read from or write to other high capacity optical media such as the DVD . The hard disk drive magnetic disk drive and optical disk drive can be connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical drive interface respectively. The interface for external drive implementations includes at least one or both of Universal Serial Bus USB and IEEE 1494 interface technologies. Other external drive connection technologies are within contemplation of the claimed subject matter.

The drives and their associated computer readable media provide nonvolatile storage of data data structures computer executable instructions and so forth. For the computer the drives and media accommodate the storage of any data in a suitable digital format. Although the description of computer readable media above refers to a HDD a removable magnetic diskette and a removable optical media such as a CD or DVD it should be appreciated by those skilled in the art that other types of media which are readable by a computer such as zip drives magnetic cassettes flash memory cards cartridges and the like may also be used in the exemplary operating environment and further that any such media may contain computer executable instructions for performing the methods of the disclosed and claimed subject matter.

A number of program modules can be stored in the drives and RAM including an operating system one or more application programs other program modules and program data . All or portions of the operating system applications modules and or data can also be cached in the RAM . It is to be appreciated that the claimed subject matter can be implemented with various commercially available operating systems or combinations of operating systems.

A user can enter commands and information into the computer through one or more wired wireless input devices e.g. a keyboard and a pointing device such as a mouse . Other input devices not shown may include a microphone an IR remote control a joystick a game pad a stylus pen touch screen or the like. These and other input devices are often connected to the processing unit through an input device interface that is coupled to the system bus but can be connected by other interfaces such as a parallel port an IEEE 1494 serial port a game port a USB port an IR interface etc.

A monitor or other type of display device is also connected to the system bus via an interface such as a video adapter . In addition to the monitor a computer typically includes other peripheral output devices not shown such as speakers printers etc.

The computer may operate in a networked environment using logical connections via wired and or wireless communications to one or more remote computers such as a remote computer s . The remote computer s can be a workstation a server computer a router a personal computer portable computer microprocessor based entertainment appliance a peer device or other common network node and typically includes many or all of the elements described relative to the computer although for purposes of brevity only a memory storage device is illustrated. The logical connections depicted include wired wireless connectivity to a local area network LAN and or larger networks e.g. a wide area network WAN . Such LAN and WAN networking environments are commonplace in offices and companies and facilitate enterprise wide computer networks such as intranets all of which may connect to a global communications network e.g. the Internet.

When used in a LAN networking environment the computer is connected to the local network through a wired and or wireless communication network interface or adapter . The adaptor may facilitate wired or wireless communication to the LAN which may also include a wireless access point disposed thereon for communicating with the wireless adaptor .

When used in a WAN networking environment the computer can include a modem or is connected to a communications server on the WAN or has other means for establishing communications over the WAN such as by way of the Internet. The modem which can be internal or external and a wired or wireless device is connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the computer or portions thereof can be stored in the remote memory storage device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers can be used.

The computer is operable to communicate with any wireless devices or entities operatively disposed in wireless communication e.g. a printer scanner desktop and or portable computer portable data assistant communications satellite any piece of equipment or location associated with a wirelessly detectable tag e.g. a kiosk news stand restroom and telephone. This includes at least Wi Fi and Bluetooth wireless technologies. Thus the communication can be a predefined structure as with a conventional network or simply an ad hoc communication between at least two devices.

Wi Fi or Wireless Fidelity allows connection to the Internet from a couch at home a bed in a hotel room or a conference room at work without wires. Wi Fi is a wireless technology similar to that used in a cell phone that enables such devices e.g. computers to send and receive data indoors and out anywhere within the range of a base station. Wi Fi networks use radio technologies called IEEE 802.11x a b g etc. to provide secure reliable fast wireless connectivity. A Wi Fi network can be used to connect computers to each other to the Internet and to wired networks which use IEEE 802.3 or Ethernet .

Wi Fi networks can operate in the unlicensed 2.4 and 5 GHz radio bands. IEEE 802.11 applies to generally to wireless LANs and provides 1 or 2 Mbps transmission in the 2.4 GHz band using either frequency hopping spread spectrum FHSS or direct sequence spread spectrum DSSS . IEEE 802.11a is an extension to IEEE 802.11 that applies to wireless LANs and provides up to 54 Mbps in the 5 GHz band. IEEE 802.11a uses an orthogonal frequency division multiplexing OFDM encoding scheme rather than FHSS or DSSS. IEEE 802.11b also referred to as 802.11 High Rate DSSS or Wi Fi is an extension to 802.11 that applies to wireless LANs and provides 11 Mbps transmission with a fallback to 5.5 2 and 1 Mbps in the 2.4 GHz band. IEEE 802.11g applies to wireless LANs and provides 20 Mbps in the 2.4 GHz band. Products can contain more than one band e.g. dual band so the networks can provide real world performance similar to the basic 10 BaseT wired Ethernet networks used in many offices.

Referring now to there is illustrated a schematic block diagram of an exemplary computing environment for processing the disclosed architecture in accordance with another aspect. The system includes one or more client s . The client s can be hardware and or software e.g. threads processes computing devices . The client s can house cookie s and or associated contextual information by employing the claimed subject matter for example.

The system also includes one or more server s . The server s can also be hardware and or software e.g. threads processes computing devices . The servers can house threads to perform transformations by employing the claimed subject matter for example. One possible communication between a client and a server can be in the form of a data packet adapted to be transmitted between two or more computer processes. The data packet may include a cookie and or associated contextual information for example. The system includes a communication framework e.g. a global communication network such as the Internet that can be employed to facilitate communications between the client s and the server s .

Communications can be facilitated via a wired including optical fiber and or wireless technology. The client s are operatively connected to one or more client data store s that can be employed to store information local to the client s e.g. cookie s and or associated contextual information . Similarly the server s are operatively connected to one or more server data store s that can be employed to store information local to the servers .

What has been described above includes examples of the disclosed and claimed subject matter. It is of course not possible to describe every conceivable combination of components and or methodologies but one of ordinary skill in the art may recognize that many further combinations and permutations are possible. Accordingly the claimed subject matter is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims. Furthermore to the extent that the term includes is used in either the detailed description or the claims such term is intended to be inclusive in a manner similar to the term comprising as comprising is interpreted when employed as a transitional word in a claim.

