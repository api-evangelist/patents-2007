---

title: Security level establishment under generic bootstrapping architecture
abstract: Security level establishment for an application in a terminal equipment under a generic bootstrapping architecture offering a plurality of different bootstrapping mechanisms, the terminal equipment comprising a credential establishment entity and an application entity, comprising a request for a credential for the application from the application entity to the credential establishment entity and a response from the credential establishment entity to the application entity, wherein the response comprises the requested credential and credential quality information.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08037522&OS=08037522&RS=08037522
owner: Nokia Corporation
number: 08037522
owner_city: Espoo
owner_country: FI
publication_date: 20070323
---
This application claims priority of U.S. Provisional Patent Application Ser. No. 60 787 213 filed on Mar. 30 2006. The subject matter of this earlier filed application is hereby incorporated by reference.

The present invention relates to security level establishment under generic bootstrapping architecture. In particular the present invention relates to security level establishment for an application in a terminal equipment using a generic bootstrapping architecture that may utilize a plurality of different bootstrapping mechanisms such as for example SIM USIM and ISIM based bootstrapping.

In recent years various kinds of communication systems in particular mobile and or IP based IP Internet Protocol communication systems as well as a multitude of services offered in these systems have been developed.

In such advanced communication systems such as e.g. Third Generation mobile communication networks currently under development by the Third Generation Partnership Program 3GPP and the Third Generation Partnership Program 2 3GPP2 aspects relating to security and trustworthiness are playing a more and more important role.

Starting from the concept of subscriber certificates which support services that mobile operators provide and whose provision assists mobile operators and in consideration of a need for more generic security capabilities 3GPP and 3 GPP2 standardization work lately concentrated on the evolution of a generic authentication architecture GAA . GAA defines bootstrapping of a shared symmetric secret based on specific credentials. As can be gathered from showing an overview of a generic authentication architecture environment in interrelation with a home subscriber system HSS a user equipment UE and a network entity NE GAA basically consists of three sub aspects. That is a generic bootstrapping architecture GBA subscriber certificates and an authentication proxy AP e.g. based on HTTPS Secure Hypertext Transport Protocol . Thereby the generic bootstrapping architecture GBA also builds a basis for both the other sub aspects in that GBA offers generic authentication capability for various applications based on an application specific shared secret or a public private key pair. Usually GBA functions to bootstrap authentication and key agreement for application security and it is based on the AKA Authentication and Key Agreement mechanism.

In there is illustrated a network model for generic bootstrapping. A bootstrapping server function BSF and the user equipment UE which are connected via a bidirectional link mutually authenticate using the AKA protocol and agree on session keys. These keys are afterwards to be used for a bootstrapping session and to be used between the user equipment and a network application function NAF which is also connected to the user equipment by means of a bidirectional link. After a bootstrapping mechanism selection procedure and a bootstrapping procedure based on a selected bootstrapping mechanism the user equipment and the network application function can run some application specific protocol where the security of messages will be based on those session keys generated during mutual authentication. Accordingly GAA GBA can in general be regarded as a 3 party authentication scenario wherein the bootstrapping server function is further connected to a home subscriber system HSS or Home Location Register HLR .

The reference points interfaces between the individual entities in are denoted by Ub Ua Zn and Zh. The interface Zh is based on Diameter and may be based on MAP not standard the Zn interface can be based on Diameter or Web Services i.e. SOAP over HTTP the interface Ub is based on a reuse of HTTP Digest AKA messages i.e. 3G authentication with USIM or ISIM or some variant of it e.g. 2G GBA of 3 GPP that is based on legacy GSM authentication and legacy GBA in 3GPP2 that is based on CDMA 1x and CDMA 1x EvDo are all based on HTTP Digest AKA but with some modifications and the protocol used on the interface Ua depends on the application to be executed.

The utilization of the generic bootstrapping architecture is divided into two phases i.e. the generic bootstrapping procedure as such and the generic bootstrapping usage procedure. The present invention is concerned with the generic bootstrapping usage.

For further details on the generic bootstrapping architecture reference is made to the document 3GPP TS 33.220 v7.3.0 as for 3GPP standardization and to the document 3GPP2 S.P0109 0 version 0.6 as for 3GPP2 standardization both being published in December 2005.

It is an object of the present invention to remove the drawbacks inherent to previous solutions and to provide an accordingly improved system and terminal equipment as well as accordingly improved methods and computer programs for these.

According to a first aspect of the invention this object is for example achieved by a method of security level establishment for an application in a terminal equipment under a generic bootstrapping architecture offering a plurality of different bootstrapping mechanisms the terminal equipment comprising a credential establishment entity and an application entity the method comprising the steps of sending a request for a credential for the application from the application entity to the credential establishment entity and returning a response from the credential establishment entity to the application entity wherein the response comprises the requested credential and credential quality information.

According to a second aspect of the invention this object is for example achieved by a method of operating an application entity in a terminal equipment under a generic bootstrapping architecture offering a plurality of different bootstrapping mechanisms the method being configured for security level establishment for an application in the terminal equipment the method comprising the steps of sending a request for a credential for the application from the application entity to a credential establishment entity of the terminal equipment and receiving from the credential establishment entity a response which comprises the requested credential and credential quality information.

Further advantageous refinements of the present invention under the above aspect are in accordance with those as set out in connection with the first aspect.

According to a third aspect of the invention this object is for example achieved by a method of operating a credential establishment entity in a terminal equipment under a generic bootstrapping architecture offering a plurality of different bootstrapping mechanisms the method being configured for security level establishment for an application in the terminal equipment the method comprising the steps of receiving from an application entity of the terminal equipment a request for a credential for the application acquiring the required credential and credential quality information associated thereto and returning a response to the application entity wherein the response comprises the acquired credential and credential quality information.

Further advantageous refinements of the present invention under the above aspect are in accordance with those as set out in connection with the first aspect.

According to a fourth aspect of the invention this object is for example achieved by a computer program embodied in a computer readable medium comprising program code configured to perform a security level establishment for an application in a terminal equipment under a generic bootstrapping architecture offering a plurality of different bootstrapping mechanisms the terminal equipment comprising a credential establishment entity and an application entity the computer program being configured to perform the steps of sending a request for a credential for the application from the application entity to the credential establishment entity and returning a response from the credential establishment entity to the application entity wherein the response comprises the requested credential and credential quality information.

According to a fifth aspect of the invention this object is for example achieved by a computer program embodied in a computer readable medium comprising program code configured to operate an application entity in a terminal equipment under a generic bootstrapping architecture offering a plurality of different bootstrapping mechanisms the method being configured for security level establishment for an application in the terminal equipment the computer program being configured to perform the steps of sending a request for a credential for the application from the application entity to a credential establishment entity of the terminal equipment and receiving from the credential establishment entity a response which comprises the requested credential and credential quality information.

According to a sixth aspect of the invention this object is for example achieved by a computer program embodied in a computer readable medium comprising program code configured to operate a credential establishment entity in a terminal equipment under a generic bootstrapping architecture offering a plurality of different bootstrapping mechanisms the method being configured for security level establishment for an application in the terminal equipment the computer program being configured to perform the steps of receiving from an application entity of the terminal equipment a request for a credential for the application acquiring the required credential and credential quality information associated thereto and returning a response to the application entity wherein the response comprises the acquired credential and credential quality information.

According to a seventh aspect of the invention this object is for example achieved by a system for security level establishment for an application in a terminal equipment under a generic bootstrapping architecture offering a plurality of different bootstrapping mechanisms the terminal equipment comprising a credential establishment entity and an application entity the system comprising means for sending a request for a credential for the application from the application entity to the credential establishment entity and means for returning a response from the credential establishment entity to the application entity wherein the response comprises the requested credential and credential quality information.

According to an eighth aspect of the invention this object is for example achieved by an apparatus for security level establishment for an application in a terminal equipment under a generic bootstrapping architecture offering a plurality of different bootstrapping mechanisms the apparatus comprising a credential establishment entity and an application entity comprising means for sending a request for a credential for the application from the application entity to the credential establishment entity and means for returning a response from the credential establishment entity to the application entity wherein the response comprises the requested credential and credential quality information.

It is an advantage of the present invention that a security level establishment and differentiation in an application of a terminal equipment is provided.

Based on a corresponding security level differentiation an internal and external processing of applications network and services is improved.

It is another advantage of the present invention that no external signaling is necessary particularly no signaling between an application server and an application in a terminal equipment as well as between the application server and a bootstrapping server.

It is still another advantage of the present invention that an unpromising and or unauthenticated external service request to a network application function can be avoided. Thereby signaling overhead and physical resources occupancy is reduced.

Another advantage is that some fraud scenarios are prevented and that the possibility exists to inform the application in the terminal that the application specific credentials it has stored are revoked e.g. due to cancellation of contract between NAF and operator .

However the terminal application might still want to indicate to the application server the security level even if the NAF is contacted this might still improve the performance between NAF and BSF.

The present invention is described herein with reference to particular non limiting examples. A person skilled in the art will appreciate that the invention is not limited to these examples and may be more broadly applied.

In particular the present invention is described in relation to a 3GPP GBA example implementation. For example the present invention may as well be utilized everywhere where different credential establishment mechanisms are in use. As such the description of the embodiments given herein specifically refers to terminology which is directly related thereto. Such terminology is only used in the context of the presented examples and does not limit the invention in any way. In particular any suitable today s or future bootstrapping mechanism may be used for bootstrapping credentials as long as this mechanism complies with the general GBA framework.

When an application in a terminal equipment such as a user equipment UE is to be carried out within a GBA framework an application entity in the terminal equipment has to contact a respective network application function NAF. For assuring its entitlement for carrying out the desired application the application entity of the terminal equipment has to authenticate itself by means of certain credentials. The application entity obtains these credentials together with a lifetime information from a credential establishment entity of the terminal equipment which serves for bootstrapping shared keys i.e. credentials between the terminal equipment and a bootstrapping server function BSF of the generic bootstrapping architecture. Upon request the credential establishment entity provides the application entity with corresponding credentials which are to be used for the desired application. Hence the application can use the received credentials keys in any way the application requires e.g. within PSK TLS RFC 4279 .

The trust that an application or application entity puts into the credentials received from the credential establishment entity might depend on the security level inherent to those credentials. However the application or application entity is according to the known solutions not able to judge about the security level inherent to the received credentials. Especially for certain applications which require a particular minimum security level this situation poses a problem in that the application in the terminal or in the peripheral device split terminal case i.e. an external device is connected via local means to the mobile terminal cannot be sure whether the received credentials are of sufficient quality or their usage is permitted by the application server. Also an application residing in the terminal might request a service from a NAF without having a sufficient security level. The NAF would then contact the BSF to obtain knowledge of the security level. In the case that the security level is too low the current technology leads to quite some network load and decrease general network performance.

In the case that the terminal platform is not open the application requesting the application specific credentials from the GAA server does not know the used security level. So the only way currently to keep a sufficient security level is not to allow the service. Even if the user obtains a sufficient security level e.g. by obtaining a new smartcard the application in the terminal can currently not use the higher security level since the application would not know that a higher level of security has been reached. Currently the only possibility is to update the phone software by the manufacturer. The only way to differentiate would be that the operator would provide different kind of phone models for every bootstrapping type e.g. card type different application software would be preinstalled. This would lead to different terminal implementations depending on the card used especially updating the card would not be easily possible. Also the current implementations offer no application specific deletion of keys e.g. when the card has been removed and would allow fraud.

This problem is even more severe in open platform environments. That is when a terminal equipment is based on an open platform environment it is possible to install new applications to the terminal equipment. This may be done by any user of the terminal via an application programming interface API . The downloaded new application has currently no possibility to know what kind of smart card is in the device. Hence the security level baseline for the application specific credentials is not known to the application. The application can be specifically customized for each card but that would require that the user or the operator but that would not be possible for free open software state what kind of smart card or security level baseline is used.

Another problem that is currently not solved is that the application is not aware when the application specific credentials received from the GAA server should be deleted.

This missing information might lead to the case that a first user generates application credentials and gives then a second user the smart card who in turn generates application specific credentials on a second device and hence might obtain a service free of charge.

In summary there exist problems in the known solutions within a generic bootstrapping architecture that an application of a terminal equipment cannot be sure about the security level inherent to bootstrapped credentials received from a credential establishment entity. Stated in other words the application just does not know what kind of basis for credential generation was used after having received the application specific credential and it is not aware of any events leading to a invalidity of the received credentials.

Thus a solution to the above problems is needed for providing security level establishment for an application in a terminal equipment under a generic bootstrapping architecture.

According to the terminal equipment comprises a GAA server acting as a credential establishment entity in terms of e.g. GBA ME or GBA U a GAA client acting as an application entity device drivers which represent a conventional implementation detail and are not relevant for the present invention and a smartcard which can bean UICC Universal Integrated Circuits Card or a SIM Subscriber Identity Module card or some other form of secure storage like trusted computing platform.

The smartcard can be to be a multi application card on which several different applications run which define different bootstrapping mechanisms. By means of these different bootstrapping mechanisms of the UICC the GAA server is able to bootstrap specific credentials in cooperation with a bootstrapping server function BSF over the network interface Ub. Since the present invention does not relate to the bootstrapping mechanism as such no description thereof will be given herein. Examples of known bootstrapping mechanisms include bootstrapping based on a subscriber identity module SIM a universal subscriber identity module USIM an Internet protocol multimedia services subscriber identity module ISIM a cellular authentication and voice encryption CAVE a point to point PPP challenge handshake authentication protocol CHAP a removable user identity module RUIM a digital certificate a private public key pair other form of cryptographic master key or username password based schemes. Apart from the known bootstrapping mechanisms mentioned above the present invention is generally also applicable to any other suitable bootstrapping mechanism including future bootstrapping mechanisms.

The GAA server is either part of the platform of the terminal equipment or is e.g. downloaded to the terminal equipment after it has been sold. As required for an open terminal platform under generic bootstrapping architecture the GAA server comprises a generic bootstrapping architecture application programming interface denoted by GBA API. The GBA API interfaces the GAA server with the GAA client. The GBA server takes care that the GBA master key can be established from which NAF specific keys are deduced and hands out the needed NAF specific keys credentials . The GAA client interacts with a network application function NAF over the network interface Ua for executing network applications as explained above.

According to the present embodiment of the invention the GAA client as the application entity sends a request to the GBA API indicated by a respective arrow . By way of such a request the GAA client requests at least one credential from the GAA server which is needed at the GAA client for execution of a certain application. Upon such a request the GAA client via the GBA API returns the requested credential s which is are retrieved from a respective credential storage of the GBA server or the smart card. This returning operation is platform dependent. According to the bootstrapping mechanism used the returned credential is of a particular bootstrapping type. In its response to the GAA client indicated by a respective arrow the GAA server in addition to the requested credential and possible its lifetime also includes credential quality information. This credential quality information indicates the type of bootstrapping mechanism on the basis of which the returned credential is generated such as for example SIM USIM ISIM RUIM CAVE CHAP certificate or password based. In case of any other bootstrapping mechanism being used the type of this mechanism is indicated including future bootstrapping mechanisms. The master credentials can be stored on different media e.g. secure memory smart card or other trusted environment.

By way of this additional credential quality information according to the present invention the GAA client i.e. the application entity is enabled to determine the security level of the returned credential and thus the security level of the application executed using this credential.

Further the GAA client is able to compare the determined security level of the credential with a desired security level of the application to be executed using the returned credential. If the determined security level is lower than the desired security level the GAA client is operable to decide e.g. to refrain from executing the application. Thus no service request for this application is to be sent to the NAF entity in the network whereby physical resources are spared and costs are avoided for the user. On the other hand if the determined security level is higher than the desired security level the application is ensured to be sufficiently secure with regard to its requirements. For example a certain application e.g. broadcast application e.g. 3GPP MBMS may require at minimum a USIM based credential thus not being executed when the returned credential is only of SIM based bootstrapping type. This prevents that the terminal contacts the service and may establish a connection that is charged for a service that can not be obtained with that level of security.

From the point of view of application designers for open platform terminal equipment the functionality according to embodiments of the present invention is important as they can deduce the authentication quality in the GAA client i.e. part of the application from information received upon a credential request and the application takes into account the level of security e.g. by limiting the service scope . The application is only executed and possible costs are generated for the user if the security level matches or is higher and there is a reasonable chance for the user to obtain actually the service. This allows the application designers to take into account specifics that are due to 3GPP or 3GPP2 specific GBA information e.g. hacked algorithms or general strength of used algorithms . Namely the GAA client is able to detect whether 3GPP bootstrapping is based on Second Generation 2G specifics e.g. SIM or Third Generation 3G specifics e.g. USIM ISIM or whether 3GPP2 based bootstrapping is based on CAVE i.e. CDMA 1 CHAP i.e. CDMA 1 EvDo or AKA e.g. USIM or some other not yet standardized means.

As a further aspect of the present embodiment the GAA client in the terminal equipment notifies the NAF entity of the generic bootstrapping architecture about the returned credential quality information i.e. the bootstrapping type of the returned credential. Thereby it can be avoided that that the NAF entity has to retrieve the bootstrapping type information from the BSF entity thus preventing unnecessary backend signaling if desired.

This is for example particularly interesting for the roaming case where the NAF entity is not located in the user s i.e. terminal equipment s home network and the NAF entity wants to know directly at the first contact i.e. the GAA client sending a service request including respective credentials for its authentication what type of bootstrapping has been used to generate the credentials. Then the NAF entity is operable to decide whether it will trust the credential quality information from the terminal equipment and if yes whether the credentials are of a sufficiently high security level.

In addition or alternatively to the credential quality information the response from the GAA server to the GAA client according to an embodiment of the present invention comprises credential deletion information. The credential deletion information according to this embodiment defines at least one condition under which the requested and returned credential becomes invalid and thus is to be deleted at the GAA client or all of the GAA clients in the terminal equipment .

In contrast to conventional lifetime information this credential deletion information defines an actual expiry date that is bound to a condition or event revocation of credential removal of smart card device power down and not a theoretical one that is set during key generation. That is although the lifetime of a credential has not yet passed it may expire immediately due to a certain event. For example when the smartcard is removed from the terminal equipment or when the terminal equipment is powered down or when the associated application is closed or when the used and or stored credential is revoked certain credentials validity may expire in order to ensure security and prevent security threats. Thus the credential deletion information according to this aspect of the present invention represents an alterable freshness information. Usually an application in the terminal would not be aware that for example the credentials are revoked or the smart card has been removed hence it would not know that it is supposed to delete the stored application specific credentials. Thereby a fraud scenario can be prevented where a user of the first terminal equipment generates a first set of credentials in the first terminal equipment using the UICC the application gets these credentials from the UICC via GAA server and GBA API and then the user removes the UICC from this first terminal equipment and inserts the same UICC into a new second terminal equipment in order to generate another set of credentials with the same UICC while the first terminal equipment still using the first set of credentials. This e.g. prevents that a UICC is plugged into another terminal equipment to obtain a service for free.

If such credential deletion information is returned to the GAA client i.e. GAA using application in the terminal the GAA client is operable to delete the specified credential upon the defined condition is fulfilled or the defined event takes place. This can for example be implemented as a callback function to the GAA client. That is whenever a GAA client is expected to delete GBA related credentials obtained earlier from the GAA server the GAA server calls a callback function on a specific or all GAA clients that have registered with the GAA server.

As regards credential deletion generally speaking there are two scenarios bring covered by embodiments of the present invention 

a a condition for deletion is pushed from the GAA server to the GAA client then the event happens i.e. the condition is fulfilled then the GAA server pushes the information that the event has occurred then the application GAA client reacts according to the event condition or

b an event takes place at the GAA server then the GAA server just pushes a delete command to the GAA client without being informed in advance about potential deletion conditions.

For case a the credential quality information comprises credential deletion information defining at least one condition under which the requested credential is to be deleted at the application entity. The credential deletion information defines as a condition at least one of the following 

Then the GAA server pushes a credential deletion notice from the credential establishment entity to the application entity that the condition is fulfilled and the GAA client deletes the returned credential from the application entity upon receipt of the credential deletion notice.

For case b the GAA server pushes to the GAA client a credential deletion command for deleting a credential at the application entity when a predetermined condition is fulfilled at the GAA server. Upon receipt of the credential deletion command the GAA client deletes the credential.

Such deletion procedures may also occur in an unsolicited manner. That is if a respective condition is fulfilled the GAA server pushes a credential deletion command or a credential deletion notice to the GAA client even if no credential request has occurred beforehand.

Although the principles of the present invention are described above in terms of method steps embodiments of the present invention also include corresponding software implementations in the form of computer programs and hardware implementations in the form of respective entities systems and terminals.

According to a system of the present embodiment comprises a credential establishment entity such as a GAA server and an application entity such as a GAA client. For the sake of simplicity a GBA application programming interface like that in has been omitted in this figure. However a skilled person would know from general knowledge as to how such a GBA API is located within an implementation of the credential establishment entity.

Both entities depicted in are operable according to the methods as set out above or in the appended claims. To this end the respective means of each entity are configured to perform method steps with similar denotation. It is to be noted that the entities according to certain embodiments of the present invention do not necessarily have to comprise any of the means as depicted in but any combination thereof is conceivable.

In detail the application entity comprises requesting means being configured to send a request for certain credentials which the application entity requires to the credential establishment entity. On the application entity side determining means are configured to determine upon receipt of a response including credential quality information and possible credential deletion information a security level of the returned credential. Further comparing means are configured to compare a security level determined by the determining means with a desired security level of the application to be executed by the application entity. In case the comparison yields that the returned security level is equal to or higher than the desired security then executing means of the application entity are configured to execute the desired application using the returned credentials. Otherwise the application will not be executed. If a certain event takes place e.g. the GAA server receives a revocation request smart card is removed device powered down this event information is pushed to the GAA client via the GBA API so that these can take appropriate measures e.g. delete the keys.

Notifying means which are an optional constituent of the application entity are configured to notify the returned credential quality information and or the determined security level to a network application function i.e. a NAF server.

Furthermore the application entity optionally comprises deleting means being configured to delete the credentials of the application entity. The deleting means are operable on the basis of associated credential deletion information returned together with the credentials from the credential establishment entity and certain conditions or events as specified by the credential deletion information such as for example removal of the smartcard from the terminal equipment power down of device or revocation push from BSF.

The credential establishment entity comprises returning means being configured to return upon request from the requesting means of the application entity requested credentials together with credential quality information and or credential deletion information as specified above. To this end the returning means are further configured to retrieve these pieces of information from a secure storage denoted by DB which may for example be a directory in UICC some secure trusted computing hardware or secure memory where they are stored on the credential establishment entity side.

The contents of the secure storage i.e. shared symmetrical keys credential based on GBA as well as corresponding lifetime information quality information and deletion information originates from generic bootstrapping. The generic bootstrapping is performed by a bootstrapping means of the credential establishment entity of the terminal and a bootstrapping server function i.e. a BSF server. Then the bootstrapping means store the bootstrapped information into the secure storage for future use e.g. by the returning means.

Furthermore the returning means are configured to push a credential deletion notice to the GAA client that a credential deletion condition is fulfilled or to push a credential deletion command for deleting a credential at the GAA client from the GAA server to the GAA client wherein the credential deletion command is pushed when a predetermined condition is fulfilled at the GAA server.

In general it is also to be noted that the mentioned functional elements e.g. requesting means or managing returning according to the present invention can be implemented by any known means either in integrated or removable hardware and or software respectively if it is only adapted to perform the described functions of the respective parts. For example the returning means of the credential establishment entity can be implemented by any data processing unit e.g. a microprocessor being configured to retrieve and return requested credentials and associated quality information as defined by the appended claims. The mentioned parts can also be realized in individual functional blocks or by individual devices or one or more of the mentioned parts can be realized in a single functional block or by a single device. Correspondingly the above illustration of is only for illustrative purposes and does not restrict an implementation of the present invention in any way.

Furthermore method steps likely to be implemented as software code portions and being run using a processor at one of the entities are software code independent and can be specified using any known or future developed programming language such as e.g. Java C C and Assembler. Method steps and or devices or means likely to be implemented as hardware components at one of the peer entities are hardware independent and can be implemented using any known or future developed hardware technology or any hybrids of these such as MOS CMOS BiCMOS ECL TTL UICC TCB Trusted computing base etc using for example ASIC components or DSP components as an example. Generally any method step is suitable to be implemented as software or by hardware without changing the idea of the present invention. Devices and means can be implemented as individual devices but this does not exclude that they are implemented in a distributed fashion throughout the system as long as the functionality of the device is preserved. For example the GAA client might reside in a secondary entity like a PC and calls the GAA server through a local interface e.g. via Bluetooth or WLAN Wireless Local Area Network . Such and similar principles are to be considered as known to those skilled in the art.

According to the present invention and its embodiments there is provided security level establishment for an application in a terminal equipment under a generic bootstrapping architecture offering a plurality of different bootstrapping mechanisms the terminal equipment comprising a credential establishment entity and an application entity comprising a request for a credential for the application from the application entity to the credential establishment entity and a response from the credential establishment entity to the application entity wherein the response comprises the requested credential information i.e. key identifier keys key lifetime and credential quality information.

The invention describes a new functionality between a credential establishment entity e.g. a GAA server and an application entity e.g. a GAA client which functionality indicates the credential quality. The trust that an application puts into received credentials might thus depend on the bootstrapping type and the actual expiry point of time. Hence the application may require a certain security level especially no service request should be made when the credentials have been revoked the security level is to low or the credentials are no longer be valid due to certain events.

Even though the invention is described above with reference to the examples according to the accompanying drawings it is clear that the invention is not restricted thereto. Rather it is apparent to those skilled in the art that the present invention can be modified in many ways without departing from the scope of the inventive idea as disclosed in the appended claims.

