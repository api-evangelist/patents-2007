---

title: Method and system for tracking an operating performed on an information asset with metadata associated therewith
abstract: A system and method are provided for tracking an operation performed on an information asset. The information asset has metadata associated therewith. In use, the metadata is preserved during the at least one operation.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07673324&OS=07673324&RS=07673324
owner: McAfee, Inc.
number: 07673324
owner_city: Santa Clara
owner_country: US
publication_date: 20070409
---
The present application is a continuation of a PCT application filed Jun. 19 2006 under serial number PCT IL2006 000706 which claims priority of a provisional application filed Jun. 21 2005 under Ser. No. 60 692 260 which are each incorporated herein by reference.

The present invention generally refers to methods and systems for leakage protection and more particularly to a method and system for providing comprehensive protection against leakage of sensitive information assets from the enterprise using host based agents content meta data and rules based policies.

Host based Information Leakage Detection and Prevention Systems HILDP are closely related to Host based Intrusion Prevention Systems HIPS and therefore both types of systems shall be considered as prior art. HIPS focus on detecting and preventing attempts by outsiders to gain unauthorized access to resources on the host or execution of malicious code. By contrast HILDP systems focus on detecting and preventing the transmission of sensitive information from the host to unauthorized destinations outside the enterprise.

In spite of the difference in focus and terminology these systems are similar in structure and use essentially the same technical means to achieve their goals detection and or prevention of host based activities which may constitute a violation of the organization s security policy. In this context HIPS and HILDP shall be considered as two specific cases of a common class. The qualifier Host based indicates that activity is monitored within each network connected computer host in contrast to Network based IPS and ILDP systems which analyze the network traffic on a shared computer network.

Application software running on the host can directly access only the application s memory space. Access to any other resources such as file storage network resources or attached physical devices is mediated by the operating system kernel or other system services. The application communicates with the operating system or system services via various Application Programming Interfaces API System calls Inter Process Communication IPC or similar software interfaces. HIPS HILDP systems use various means to intercept requests from the application software to the operating system kernel or system services. The software components performing this function are variously referred to as Sensors Probes Data gathering components or other terminology and are tailored to the type of interface and type of requests they are designed to intercept.

Sensors gather information about application requests and encapsulate the request parameters and context into a data structure which will be referred to as an Event or Event Description. If the request is a data transmission request the event may also include the actual content or summary of the transmitted information. Events are communicated from the Sensors to a software component known as an Agent.

An HILDP HIPS agent must be able to correlate or aggregate multiple low level events to a smaller number of high level events which may be more meaningful to the goals of the system. The agent then applies a Policy to the Events. A Policy is a collection of Rules. Each Rule consists of a Condition sometimes referred to as a Template or Pattern and a Reaction to be performed by the Agent when an Event matching the Condition is detected. It is worth noting that in order to distinguish events and potentially respond to them with different reactions the agent must have the pertinent information available as part of the event description at the time of the event.

In the case of HIPS such as anti virus applications the policy is established to control unauthorized access to the host. Typically sensors will report external access attempts to the host as well as unusual local activity which may be an indication that an intruder has already gained some access and is attempting to extend or use it. The agent will apply a set of reactions such as ignore allow the operation to proceed Block cause the operation to fail or Log allow the operation to proceed but log its details .

An ILDP system may establish a policy to control the leakage of information from the organization by insiders. For example the policy may specify which applications are allowed to access certain files devices or network services in order to prevent an application from reading a file and then forward a copy of it over the network or to an external device. Again the possible Reactions may include Ignore allow Block or Log the attempted operation.

Occasionally the information immediately available to the agent and encapsulated within an event upon a request may not be sufficient to make a proper decision. For example when an attempt is made to send a file to an external email destination the fact that the file has been copied several weeks earlier from a designated internal folder may be relevant to the decision even though this information is not immediately available.

One approach to addressing this problem is to compare the content of the transmitted file against a global database of all sensitive documents in the organization. Such an approach is implemented by existing network based ILDP systems. However this approach suffers from several problems. It requires a centralized database which is difficult to scale and is bound to produce many false positives. Furthermore this database will not be available to hosts working offline or outside the organization s network. Finally this approach assumes that the content of the transmission is always accessible. Also if the information asset is stored in an encrypted format this type of system will not be able to compare it against the global database.

Thus it would be advantageous to provide a method that addresses the problems of comparing the content of the transmitted file against a global database of all sensitive documents and the problem of information assets stored in encrypted format.

Prior art includes Stamos et al in US patent application 20050060537 which discloses a technique for establishing digital control over digital assets such as computer files. There is no content analysis. The system is gateway based for e mails. The system offers a way of tagging digital assets but does not maintain the tagging through the life cycle of the information.

Carson et al. in US patent application 20040167921 teaches a technique for efficient representation of dependencies between electronically stored documents such as an enterprise data processing system. The file history of the meta data type of information is made available but not by paragraphs. The application aims at controlling port and IP traffic.

A system and method are provided for tracking an operation performed on an information asset The information asset has metadata associated therewith. In use the metadata is preserved during the at least one operation.

Accordingly it is a principal object of the present invention to provide a method and system that addresses the problems of comparing the content of the transmitted time against a global database of all sensitive documents.

It is one more principal object of the present invention to provide a method and system wherein an information asset stored in an encrypted format can be compared against the global database by attaching the content meta data to the encrypted container at the time the plaintext is transformed into the encrypted format.

It is one other principal object of the present invention to provide a method and system for attaching content meta data to information assets in order to make this type of information available in real time.

It is another principal object of the present invention to provide a method and system for comprehensive protection against leakage of sensitive information assets from the enterprise.

It is still another object of the present invention to provide a method and system for protecting information sent from within the organization hosts to destinations outside the organization s boundaries via physical devices such as printers USB devices and via the communications network such as email HTTP and Instant Messengers.

A method is disclosed for implementing a rule based policy for security of information Assets in an enterprise system. The system for implementing the method includes a plurality of computers information assets stored as information containers on the plurality of computers at least one Tag attached to the information containers as metadata and a Policy consisting of a plurality of Rules. The system also includes an agent installed on each of the plurality of computers operative in a manner which enables it to perform the functions of the method. The functions include tracking the information assets as they are transmitted between different computers of the plurality of computers tracking the information assets as they are transmitted between the information containers tracking the information assets as they are modified to different representations tracking the information assets as they are transformed to different representations and preserving attachment of the at least one Tag to the information assets through the transmissions and transformations. The functions also include generating descriptions of events representing at least the transmissions and transformations applying said plurality of Rules of the Policy to the Event Descriptions to ascertain whether the Events comply with the Policy and Enforcing any Reactions prescribed by the plurality of Rules of the Policy in response to the Events. The system also includes a Logging Server for storing the Event Descriptions generated by the Agents and a Management Console for setting the Policy and reviewing the Event Descriptions.

The existence and validity of content meta data is crucial for the operation of the present invention. However the operating system and application software may not be aware of the presence of such meta data. As a result this meta data may not be preserved upon transmission and transformation of information assets. Consequently the present invention contains a component for tracking host activities and preserving content meta data upon transmissions and transformations of information assets.

The present invention relates to the field of Host based Information Leakage Detection and Prevention Systems HILDP . The primary distinguishing feature from prior art information leakage prevention systems is association of meta data to information assets and preservation of such meta data through transmission and transformation of information assets.

The form of content meta data used by the preferred embodiment is a set of Tags where each tag represents a class of information assets of importance to the organization. For example a Finance tag may be attached to any confidential financial information. Information assets containing a mixture of data from multiple sources can be marked by a set of tags associated with these sources.

Where applicable tags may be associated to pans of the information asset rather than the entire information asset. In this case the form of meta data is a mapping between tags and the ranges of text within the information asset associated to the tag. When insufficient information is available or when the information asset is not textual the association is between a tag and the entire information asset.

Tagging of information can be done in several methods however it should be preferably done in a manner that requires minimal manual involvement. The system uses any combination of the following methods to attach tags to information assets.

The tagging techniques 1 3 are performed by the agent in accordance with the definitions of tagging rules in the policy. These methods are initiated in response to user operations which are intercepted by the agent. These methods will be fully described later. The techniques 4 5 are external to the agent interception module and are scheduled by the user or administrator.

Once the system identifies that an information asset should be associated with a set of tags it must record this association in some form of persistent storage. Tag storage methods are strongly dependent on the underlying information container and therefore the system shall utilize a combination of methods for content meta data storage in order to cope with tagging for a variety of information container types. The current embodiment uses the following methods for persistence of content meta data 

Applications running in the host manipulate information containers. Some of these containers may have tags attached to them. These manipulations include low level operations such as deleting reading and writing of information containers. The system tracks and analyzes these operations to infer higher lever events such as file copy or transformation of data from one format to another. The purpose of the content tracking subsystem is to maintain the persistency of tag association to content throughout these low level operations. Note that the tracking mechanism is active as long as the system is installed regardless of the agent policy. The actions performed by the content tracking subsystem are independent of any other operations the agent may apply according to its policy.

If the low level operation is a deletion of an information container the system can allow this operation to proceed without interference. If the meta data storage technique uses separate storage the system may need to update the database to reflect the deletion of the information asset. When the meta data is attached to the container no involvement is necessary.

If the low level operation is a reading operation the content tracking subsystem reads the content of the information container and the associated meta data. This information is not used immediately but is stored in an internal database for future reference.

If the low level operation is a write operation the content tracking subsystem reads the written content and compares it against its internal database. If the written container contains content substantially identical to content previously read the tags associated with the matching content are attached to the newly written container. If the output is textual then the tag is associated to specific text ranges in the written container.

Some file formats may require special treatment. For example archive formats capable of containing other information containers. When these containers are processed the same process must be applied recursively on all of their embedded containers. Another special case is encrypted formats in which the content can not be determined by the system and therefore it shall apply a pessimistic approach assuming all content read by the process creating the encrypted container is written to it. Consequently all the tags associated with the read data are associated with the encrypted file. The same treatment may be applied to file formats which are not encrypted but the system can not read their contents because of technical limitations.

Designated applications specified by the system administrator may be ignored by the content tracking subsystem. The ignore list should include applications with known behavior that can not result with information leakage. Ignoring these applications conserves system resources.

Designated documents specified by the system administrator may be ignored by the content tracking subsystem. Content from these documents is excluded from processing by the content comparison process.

The internal database need not be preserved after system restart. The content of the computer s volatile memory is erased on restart and therefore the potential set of information assets from which content may have originated is limited by the set of information assets read within the same session.

The purpose of the tagging and content tracking mechanisms is to make the content meta data available to the agent when K needs to apply the security policy. The policy consists of a set of rules namely tagging and reaction rules. The set of tagging rules is used for identifying sensitive information and performing tagging operations. Reaction rules are used to define the set of operations the agent should apply in case of unauthorized operations. A Reaction Rule consists of a condition and a set of actions. The condition is a Boolean function of the parameters of the event description. The actions are a subset of the following set of possible actions 

The system administrator deploys the policy to all the installed agents in the organization through deployment means described below.

The method of the invention may be implemented and distributed using computer readable media such as diskettes CD ROMS disk on keys or other memory devices for saving and using software.

There has thus been outlined rather broadly the more important features of the invention in order that the detailed description thereof that follows hereinafter may be better understood. Additional details and advantages of the invention will be set forth in the detailed description and in part will be appreciated from the description or may be learned by practice of the invention.

The agent software is installed on some or all of the organization s workstations used by the end users. The agent software receives a copy of the system policy from the directory server via the policy distribution mechanism provided by the hosting operating system e.g. Microsoft Group Policy . Once the agent retrieves the system policy it begins enforcing it. If a workstation is temporarily disconnected from the network it will continue to enforce the last valid received policy. When an event is processed by the agent software the policy may indicate that the event should be recorded. In this case the agent software will send the event to logging server . If workstation is disconnected from the network the agent will store the event in a local queue and transmit it as soon as workstation is reconnected.

The network probe intercepts requests to establish network connections using the TCP IP protocol. It is implemented in the form of a kernel mode Transport Data Interface TDI filter driver for the Windows NT kernel. The HTTP probe intercepts requests in the HTTP protocol. In this embodiment it is implemented in the form of a plug in conforming to the plug in interface of Microsoft Internet Explorer. The printer probe intercepts printing requests.

In the current embodiment it is implemented by replacing the printing dynamic link library of the operating system with an alternative library having a compatible interface. Any API requests intercepted by the alternative library are reported to the agent and according to the agents policy are either forwarded to the original library or reported to the calling application as unsuccessful blocked .

All probes format the gathered information into a common representation of an event description and send the events to the policy resolver . Policy resolver applies the current policy to the event and calculates the set of reactions to be performed in conjunction with the policy storage and update module . If the reaction set includes logging Monitor the event description along with the reaction set is sent to the logging service module . If the reaction set includes Block this information is fed back into the original reporting probe which is responsible to cause the original application request to fail.

The content tracking module receives the low level events from the probes and according to the event type read write delete consults with the fingerprinting database and text extraction service in order to maintain the attachment of tags according to the undergoing transmission. Content tracking module may attach new tags to the accessed information asset according to the policy tagging rules. Tag set to be attached is fed back to the original reporting probe which is responsible for storing them into the information asset using the method appropriate for the type of the information container if applicable. This process will be described shortly in details.

Network traffic which is not intercepted by the email or HTTP probes is handled by network probe . Network probe may intercept network connections by applications using unknown or unsupported protocols. In this case the content of the transmission is not available for inspection. The system makes the worst case assumption that the transmission contains the set of all tags attached to information containers previously accessed by the same process opening the network connection.

An event describing such a potential transmission of information is triggered either when an application opens a network connection after having accessed tagged information assets or when a tagged information asset is accessed by a process having an active network connection. A Block reaction to this type of event may be enforced by closing the network connection preventing its establishment or by preventing access to the information asset.

Certain applications may make superficial changes to the text such as changing spacing and punctuation formatting or typographical conventions. This may cause text comparison to fail even when the compared documents contain significantly similar text. The purpose of the text normalization step is to remove such changes and help identify the text correctly. A suitable algorithm is described in the following Unicode technical reports

The chunking process takes as input a sequence of normalized characters and breaks it down into a number of chunks. A suitable algorithm for the chunking process is described in the article Copy detection mechanisms for digital documents S Brin J Davis H Garcia Molina. Proceedings of the 1995 ACM SIGMOD international conference.

The hashing step calculates a fingerprint of each chunk using a low probability of collision hash function e.g. SHA 1 . The resulting set of fingerprints is a compact representation of the textual contents of the document. Two documents containing matching section of lengths exceeding some predefined threshold will contain overlapping fingerprints.

If the result of applying the reaction rules indicates that the operation is to be blocked the original intercepting probe returns a failure result to the application . If the operation is allowed to continue the content tracking module associates the tags identified in with the written information asset . If the written information assets is non textual the tag set is associated with the entire information asset. For textual information assets a more selective process is applied where each tag is associated with specific text segments of the document as described below in .

This is the normal situation resulting from initial tagging via tagging rules or other initial tagging methods. As a result of the content tracking process the new document is also tagged with instances of Tag and Tag . Note that in the new document the tags are associated only with the specific text excerpts which are copied from the source documents not with the entire document. The boundaries of the identified text range may be an approximation of the actual copied text range as they are rounded by the chunking algorithm to the next neighboring chunk.

Each element in the policy can be edited by a dedicated wizard user interface component . In an exemplary embodiment a wizard for editing an email reaction rule is described allowing the administrator to configure a rule by specifying the email domain the tags associated with potential transmission attempt and the required reaction. This user friendly representation of the rule is subsequently converted into a machine readable condition embedded into the policy as described above with reference to .

When the administrator completes editing the policy it may be deployed to the agents installed on the work stations via the system directory server as shown in above.

Management console may also supply either a monitoring system that allows the administrator to view recent events. The monitoring system may be incorporated as part of management console or as a stand alone application.

Having described the present invention with regard to certain specific embodiments thereof it is to be understood that the description is not meant as a limitation since further modifications will now suggest themselves to those skilled in the art and it is intended to cover such modifications as fall within the scope of the appended claims.

