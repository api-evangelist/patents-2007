---

title: Systems and methods for access and control of hardware device resources using device-independent access interfaces
abstract: Systems and methods are provided that enable seamless access and control of hardware device resources through a common, device-independent interface without the need for device-specific drivers. For instance, system and methods are designed to expose capabilities/functions of hardware devices as web-based services which can be invoked to provide specific services based on the capabilities of the hardware devices.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09361264&OS=09361264&RS=09361264
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09361264
owner_city: Armonk
owner_country: US
publication_date: 20071015
---
The present invention relates generally to systems and methods for providing seamless access and control of hardware device resources through a common device independent interface without the need for device specific drivers and in particular systems and methods for exposing functions of hardware devices as Web based Services that can be accessed for specific services based on the capabilities of the hardware devices.

Technological innovations and developments in distributed computing systems and applications has led to a significant increase in the amount and variety of network computing devices and peripheral hardware devices that may be interconnected and remotely accessible over communications networks such as the Internet corporate intranets wireless networks e.g. Bluetooth small home or office networks etc. Such network accessible peripheral devices may include for example printers cameras video audio conferencing end points cell phones and other handheld computing devices. Typically computing devices are designed to be web ready for network applications in that the devices are capable of receiving transmitting control data messages once connected to a shared communications network. However in order for a client device application to access functionalities of network accessible peripheral devices a device driver typically must be installed or be present on the client device.

Drivers are essentially hardware dependent operating system specific programs that are executed on the client to provide an interface to functions of the network hardware devices. For example installing a driver for a network printer enables an end user to print documents select printing options such as duplex printing page collation etc. and check printer queue and availability. Although certain types of hardware devices may perform functionally similar tasks e.g. printers for printing such devices can have completely different interfaces requiring the user to install different drivers to communicate with each device. Indeed even physical devices of the same brand and model may require different device drivers. As the number of network accessible peripherals increases it can be burdensome for a user to install multiple different drivers in his her client device e.g. laptop so as to communicate with each of a wide range of network accessible peripheral hardware devices. Moreover when an individual connects to a shared communications network using a laptop computer or other portable computing device at a new location the individual may not have access to the device drivers e.g. printer driver that are needed to communicate with the network hardware devices or resources available at that location.

Exemplary embodiments of the invention generally include systems and methods that enable seamless access and control of hardware device resources through a common device independent interface without the need for device specific drivers. Exemplary embodiments of the invention include system and methods for exposing capabilites functions of hardware devices as web based services which can be invoked to provide specific services based on the capabilities of the hardware devices.

More specifically in one exemplary embodiment of the invention a computing system includes a network comprising a plurality of network nodes including one or more device nodes and computer nodes a network hardware device located at each device node over the network and a web services platform hosted by one or more computer nodes over the network. The web services platform allows access and control of the hardware devices over the network through common device independent interfaces that expose capabilities of the network hardware devices as web services that can be invoked to perform a service. The capabilities of the network hardware devices can be invoked to provide a specific task atomic service or as part of a composite web service workflow incorporating control of the network devices.

In one exemplary embodiment the web services platform implements each common device independent interface to access and control a set of heterogeneous hardware devices that are associated with a class of network devices having a varied set of capabilities and interfaces but which perform a similar common function. For example the common device independent interfaces may be implemented sing web service device adaptors that expose the capabilities of classes of network devices based on a common functionality wherein each web service device adaptor exposes a common interface to a set of heterogeneous network hardware devices which perform a same common function but which have diverse capabilities and interfaces associated with the common function.

In response to a client request for a given service the web services platform uses the common device independent interfaces to seamlessly identify one or more available network devices that support one or more capabilities needed to perform the requested service and control the one or more identified network devices to perform the requested service. In addition the common device independent interface can be used to seamlessly negotiate available capabilities of one or more of the identified network devices to perform the requested service and select one or more of the identified network devices having available capabilities to perform the client requested service. The web services platform can establish a direct network connection between the requesting client and one or more of the identified network hardware devices.

These and other aspects features and advantages of the present invention will become apparent from the following detailed description of the preferred embodiments which is to be read in connection with the accompanying drawings.

Systems and methods providing seamless access and control of hardware device resources through platform device independent web services interfaces without the need for device specific drivers will now be discussed in further detail with reference to . For purposes of illustration exemplary embodiments for accessing and controlling network hardware devices through web services will be discussed with regard to the use of web service adaptor technologies to access and control network hardware devices as web services. In general web services adapters are used to build a common interface through which a client application can access control networked hardware devices from various vendors which perform functionally similar tasks to provide specific services without the need for installing vendor specific drivers on the client. The use of web service adaptor technology allows the integration of hardware device with legacy proprietary interfaces as web services without requiring changes to the hardware device interfaces.

The web services platform comprises functional modules including for example an API application programming interface a services controller a plurality of device adapters web service programs and a service metadata repository . The web service platform provides an application framework for integrating network hardware devices into a web based services architecture in which heterogeneous network hardware devices having varying capabilities hardware only software only and combined software hardware can be seamlessly controlled and accessed by the client device to provide specific services based on the capabilities of the network devices.

As will be explained in further detail below the constituent software modules of the web services platform include various functions that enable hardware devices as web based services including but not limited to i providing a standard SOAP XML web services interface across disparate network devices ii identifying different sets of network accessible hardware devices physical location type etc and the capabilities available with each set iii seamlessly setting up direct data connections to and between network hardware devices iv controlling the capabilities of the different hardware devices using standard desktop collaboration tools such as email client or calendar and v allowing the network hardware devices to seamlessly communicate with and invoke other network devices or web services to execute composite workflows e.g. for example log usage of the endpoint for billing or statistics collection .

The API provides a standard web services interface that allows a client to invoke services of network hardware devices and other web services through the web services platform . The API may also include methods for advertising locating discovering and registering hardware device services through standard web service interfaces and protocols. The web service controller controls invocation and process flow execution of the web services application logic for accessing services of one or more network hardware devices through the web service adaptor in response to access requests. The services controller comprises logic to drive the service invocation behavior of the platform and control the runtime logic flow for executing single or composite services.

In one exemplary embodiment the web service adapters are used to build a common interface through which networked physical hardware devices from various vendors which perform functionally similar tasks can be accessed to provide specific service without the need for installing vendor specific drivers on the client. The device adaptors may comprise one or more vendor specific and or standards specific web service adaptors A B C that expose a common services interface to a set of heterogeneous network hardware devices having diverse capabilities and interfaces but which perform a functionally similar task. Essentially each web service device adapter A B C corresponds to a generic device type or device class e.g. printer that implements a common function e.g. printing and exposes a standard access interface to over different devices that implement the common function.

For instance in the exemplary embodiment of the device adaptor A supports a print web service for printer device class the device adaptor B provides a display web service for display device class and the device adaptor C provides a video capture web service for a camera device class. Essentially each device adaptor for a given class of hardware device provides a common services interface that enables access and control of heterogeneous hardware devices which implement a common function but having dissimilar capabilities and interfaces through a web service that provide function abstraction and capability negotiation. With regard to function abstraction each device adaptor enable aggregating and controlling a set of heterogeneous hardware devices e.g. printer having diverse capabilities and interfaces but perform a functional similar task e.g. printing . Each deice adaptor provides a common interface to a set of abstract functions that enable standard access to the different capabilities of each device. The adapters provide the necessary functions for communication with and executing commands on associated hardware devices e.g. providing connections to hardware devices converting messages between abstract and low level control signals and providing an abstract set of commands that abstract the hardware s device operating protocol commands control signals i.e. abstract code that implements the device control.

With regard to capability negotiation when given a particular task e.g. printing the web service can determine which device s have the capabilities to perform the task. A task may have multiple steps which require orchestration of capabilities whereby the web service allows one to choose and orchestrate devices with respect to these constraints. Furthermore device capabilities are subject to negotiation thus the typical process of service identification by searching a registry may be a two step process in the case of hardware devices a identify a suitable device in the registry and b negotiate with the device as to which of its capabilities can be used. The capabilities of the physical devices around the user are exposed using the web services adapters and the capability negotiation as well as device selection and configuration happens seamlessly without the source having to install separate drivers based on different client requirements.

In one embodiment a functional discovery mechanism may be used to query the list of web service adapters which match the capabilities required to perform a particular task and select one or more hardware devices on this basis. This is in contrast to a search of WSDL files enabled by repositories such as Universal Description Discovery and Integration UDDI . Firstly each task may comprise the orchestration of services from multiple hardware devices which may reside in multiple repositories. Secondly there may be constraints on the use of devices based on the user and the time of the task instantiation. Thirdly there may be constraints based on how the devices are used in the task as an example a task involving using a fax machine and a copier machine may require the use of the copier while the fax is ongoing thus one combo box which can both fax and copy data may not be able to perform the task although it may be able to satisfy the requirements placed on individual service elements needed to orchestrate the task. In another embodiment we envisage the use of user specific profiles as an example one person who uses multiple offices and multiple computers might want to use the same configurations for the printers audio and video conferencing equipment fax machine etc. thus a user profile which is not part of either the client device nor the web service adapter which can track and manage these profiles would be of use.

Web service device adaptors enable hardware devices to be accessed controlled to perform a task in a specified fashion either immediately or be configured to perform such task at a later time. Using the web services adapters capabilities of physical devices to be published in a searchable directory that may be accessed using well established protocols and allow the physical devices to be compostable into workflows and complex aggregate business services. For example several different components including physical devices from multiple vendors and different software services may be composed together to achieve complex aggregate services inside enterprises. Moreover hardware devices can behave as services playing a part in these aggregate services as individual components. In particular a device can actively participate in a business process work flow i.e. devices can not only be invoked through service interfaces but also invoke other services as part of the work flow. For example hardware devices may invoke web services programs which provide supporting ancillary service access that may be common to or requested by multiple web services. The supporting web services may be services such as billing authentication and other types of services that may support or relate to access or controlling hardware device services. In the context of the proposed invention a hardware device s capabilities are not only exposed as web services but the device would also play an active role in composable workflows involving web services thus services are not just leaf nodes in a work flow but they actively participate and invoke other services.

After identifying the hardware device s that match the capabilities required to perform the particular task the web services platform will communicate with the available hardware devices through the corresponding web service device adaptors to negotiate with the hardwares devices as to which of capabilities are available for performing the requested service step The capability negotiation for services from physical devices can be for an atomic service or a composite surface including composition of different hardware device services and software services into a given workflow that is seamlessly controlled and executed using the web services interface. For example several different components including physical devices from multiple vendors and different software services may be composed together to achieve complex aggregate services inside enterprises wherein physical hardware devices behave as services playing a part in aggregate services as individual components.

The web service adaptor will access and configure one or more physical devices based on the client request and results of capability and service negotiation and establish the appropriated network communication channels step and the client source with send the content to the appropriate end points step On completion the hardware device can invoke other web services and or hardware devices in accordance with a negotiated workflow process step . With the exemplary process all the capability negotiation for the physical devices and software services and composition into the workflow is performed using standard web services interfaces. The physical devices can provide services invoked using standard web services interfaces and furthermore the devices themselves actively invoke other services to complete the workflow. This is in direct contrast to the typical use of web service adapters as a means for allowing data exchange between disparate software programs.

The above exemplary embodiments discussed with reference to are high level conceptual system frameworks and methods for providing web services based on capabilities of physical devices. It is to be appreciated that inventive concepts can be implemented in various application environments and distributed computing systems. For instance exemplary embodiments of the invention will now be discussed with reference to implementation of web services framework for accessing and controlling hardware devices in the context of a video conferencing applications. Conventional video conferencing systems are built around the H.323 LAN H.320 ISDN standards and have followed a separate development path from the traditional IT infrastructure. As the number and capabilities of desktop collaboration tools have increased there has been increased pressure on the video conferencing vendors to develop solutions that span both the PC and traditional hardware based video conferencing infrastructure. This leads to the presence in one video conference of several hardware and software endpoints with varied sets of capabilities.

The conference systems layer is essentially a physical device layer comprising various end point hardware devices including a camera and network display that transmits or receive data in a videoconference. An MCU Multipoint Control Unit serves as the conference room for a multipoint conference and controls where each data stream audio video etc. is sent and allows more than two users to communicate simultaneously. A Gateway Call Manager component in an H.323 conference translates between different audio and video codecs or different protocols. This may allow a user with an ordinary phone working over the POTS or Plain Old Telephone Service to participate in an H.323 conference.

IN the context of the videoconference application the conferencing web services adapter middleware is adapted to i provide a standard SOAP XML web services interface for these devices ii identify the different sets of endpoints their physical location their type etc and the capabilities available with each set e.g. for instance the hardware endpoint comes with additional capability to serve as a multi point conferencing unit MCU that can mix video from several sources into a common stream for the endpoints iii provides a mechanism to setup a direct data connection between these different endpoints having varied capabilities enabling the video conference iv provides a mechanism to control the capabilities of the different devices e.g. allow the scheduling of video conferences using other standard desktop collaboration tools such as email client or calendar v allows the devices to communicate with other devices or services to execute workflows e.g. for example log usage of the endpoint for billing or statistics collection .

The web services platform comprises one or more software services that may be accessed via a web services interface and incorporated as part of a workflow for accessing one or more end points and controlling scheduling videoconferences. The security and policy enforcement service enables a client application to gain controlled access to video conferencing resources e.g. access privileges enforcement of policies to allow prioritized allocation of resources such as MCUs . The conference scheduler service provides the ability to reserve conferencing resources by maintaining a registry. Back end database enables the scheduler to maintain transactional consistency in allocating resources. The statistics and logging service operates to log conferencing resources usage and monitor the activities of individual users. This service may be used by applications such as billing and usage policy enforcement. The archival service operates to establish a connection with an ongoing video conference and record the data in a standard compliant format. Applications may use this service to generate an archive of a particular video conference. The conference connection service operates to connect conference end points in a conference provide the ability to query the health of an ongoing conference. Applications can use this service to establish the connection and monitor its health during the conference. The conferencing system directory service operates to maintain a list of conferencing end points. The service may correlate the list of conferencing end point addresses with a corporate LDAP so that a single corporate wide user id can be maintained.

These services require coordination between hardware and software components. By using a web services architecture multi vendor multi modality software hardware or a combination thereof conferences can be scheduled on the fly to control hardware devices incorporating various capabilities H.323 H.320H.239 etc.

Although illustrative embodiments have been described herein with reference to the accompanying drawings it is to be understood that the present system and method is not limited to those precise embodiments and that various other changes and modifications may be affected therein by one skilled in the art without departing from the scope or spirit of the invention. All such changes and modifications are intended to be included within the scope of the invention as defined by the appended claims.

