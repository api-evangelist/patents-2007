---

title: Creating optimized gradient mesh of a vector-based image from a raster-based image
abstract: A method for creating an optimized gradient mesh of a vector-based image from a raster-based image. In one implementation, a set of boundaries for an object on a raster-based image may be received. An initial gradient mesh of the object may be created. A residual energy between the object on the raster-based image and a rendered initial gradient mesh may be minimized to generate an optimized gradient mesh.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08773423&OS=08773423&RS=08773423
owner: Microsoft Corporation
number: 08773423
owner_city: Redmond
owner_country: US
publication_date: 20070507
---
Typically images may be saved on a computer as raster based representations or vector based representations. Raster based images or bitmaps may be defined as a data file or structure representing a generally rectangular grid of pixels or points of color. Vector based images may represent an image through the use of geometric objects such as points lines curves and polygons which may be based upon mathematical equations. In some applications a vector based image may be advantageous. For example vector based images may be scaled indefinitely without degradation but raster images lose clarity when scaled because they are based on pixels. Depending upon how they are created vector based images may be scalable editable easily stylized and easily animated. However vector based images may be very time consuming for an artist to create. Also it may be difficult to create photo realistic vector based images.

Currently vector based images are typically drawn manually on the computer. Most computer vector based drawing systems may provide various methods to draw geometric objects such as points lines curves and polygons. Color changes may be applied linearly or along the paths of the curves or within the fill regions of polygons. However drawing complex multi colored images may be extremely difficult. The more complex the vector based images are the more difficult they would be to edit.

A gradient mesh which is a drawing tool may be used to create a multi colored mesh on which colors may flow in different directions and transition smoothly. In general gradient mesh images may have a simpler structure and therefore may be easier to edit than other vector based images. However as with other forms of vector based images gradient mesh images may be difficult and time consuming to create. A few techniques exist to semi automatically convert a raster based image to a vector based image. However each of these techniques results in a vector based image that is difficult to edit.

Described herein are implementations of various techniques for creating an optimized gradient mesh of a vector based image from a raster based image. In one implementation a raster based image may be received. User selected boundaries for an object on the raster based image may then be received. An initial gradient mesh of the object may be created. The initial gradient mesh may then be rendered. By minimizing a residual energy between the object on the raster based image and the rendered initial gradient mesh an optimized gradient mesh may be generated. The optimized gradient mesh may then be rendered. The residual energy between the object on the raster based image and the rendered initial gradient mesh may be minimized by first calculating the residual energy and then applying a Levenberg Marquardt LM algorithm to minimize the residual energy.

In one implementation the initial gradient mesh may be created by evenly distributing one or more control points over the object such that an n m mesh of rectangular patches is created to cover an area defined by the boundaries of the object.

In another implementation the initial gradient mesh may be created by receiving user selected control points on the object and adding horizontal and vertical gradient mesh lines passing through the received control points to cover an area defined by the boundaries of the object.

The above referenced summary section is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description section. The summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.

In general one or more implementations described herein are directed to various techniques for creating an optimized gradient mesh of a vector based image from a raster based image. In one implementation a user may select an object from a raster based image. An initial gradient mesh may then be automatically or semi automatically created. An optimized gradient mesh representation of a vector based image may then be generated by minimizing the difference between the raster based image and the rendered initial gradient mesh. The optimized gradient mesh may then be saved and rendered. One or more implementations of various techniques for creating an optimized gradient mesh representation of a vector based image are described in more detail with reference to in the following paragraphs.

As used herein a gradient mesh may be defined as a drawing tool used to create a vector based image. A gradient mesh may be a grid of control points in which each control point is assigned a color such that colors may flow in different directions and transition smoothly. A gradient mesh may be a topologically rectangular patch made up of multiple Ferguson patches. A Ferguson patch may be defined as a rectangular patch defined by four control points.

A gradient mesh may be made up of multiple Ferguson patches such that a gradient mesh may be defined as M Q Q where P equals the number of patches in the gradient mesh. For each control point in the gradient mesh three types of variables may be interactively edited position partial derivatives and Red Green Blue RGB color. The 2D position of control point q may be defined as x y. The partial derivatives may be specified by direction handles and may be represented as m m m m. The RGB color may be defined as c c r c g c b . The control point variables are contained in the Qand Qmatrices. As the control points in the gradient mesh are moved or edited the position partial derivatives and RGB color may be changed. An image may be created using a gradient mesh by defining the position partial derivatives and RGB color of various control points. illustrates a gradient mesh made up of four Ferguson patches defined by nine control points . As illustrated in within a gradient mesh Ferguson patches may share control points . Various gradient mesh techniques will be described in more detail with reference to in the following paragraphs.

Implementations of various techniques described herein may be operational with numerous general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the various techniques described herein include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The various techniques described herein may be implemented in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. The various techniques described herein may also be implemented in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network e.g. by hardwired links wireless links or combinations thereof. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

The computing system may include a central processing unit CPU a system memory and a system bus that couples various system components including the system memory to the CPU . Although only one CPU is illustrated in it should be understood that in some implementations the computing system may include more than one CPU. The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus. The system memory may include a read only memory ROM and a random access memory RAM . A basic input output system BIOS containing the basic routines that help transfer information between elements within the computing system such as during start up may be stored in the ROM .

The computing system may further include a hard disk drive for reading from and writing to a hard disk a magnetic disk drive for reading from and writing to a removable magnetic disk and an optical disk drive for reading from and writing to a removable optical disk such as a CD ROM or other optical media. The hard disk drive the magnetic disk drive and the optical disk drive may be connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical drive interface respectively. The drives and their associated computer readable media may provide nonvolatile storage of computer readable instructions data structures program modules and other data for the computing system .

Although the computing system is described herein as having a hard disk a removable magnetic disk and a removable optical disk it should be appreciated by those skilled in the art that the computing system may also include other types of computer readable media that may be accessed by a computer. For example such computer readable media may include computer storage media and communication media. Computer storage media may include volatile and non volatile and removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media may further include RAM ROM erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computing system . Communication media may embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and may include any information delivery media. The term modulated data signal may mean a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. Combinations of any of the above may also be included within the scope of computer readable media.

A number of program modules may be stored on the hard disk magnetic disk optical disk ROM or RAM including an operating system one or more application programs an optimized gradient mesh module program data and a database system . The operating system may be any suitable operating system that may control the operation of a networked personal or server computer such as Windows XP Mac OS X Unix variants e.g. Linux and BSD and the like. The optimized gradient mesh module will be described in more detail with reference to in the paragraphs below.

A user may enter commands and information into the computing system through input devices such as a keyboard and pointing device . Other input devices may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices may be connected to the CPU through a serial port interface coupled to system bus but may be connected by other interfaces such as a parallel port game port or a universal serial bus USB . A monitor or other type of display device may also be connected to system bus via an interface such as a video adapter . In addition to the monitor the computing system may further include other peripheral output devices such as speakers and printers.

Further the computing system may operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer may be another personal computer a server a router a network PC a peer device or other common network node. Although the remote computer is illustrated as having only a memory storage device the remote computer may include many or all of the elements described above relative to the computing system . The logical connections may be any connection that is commonplace in offices enterprise wide computer networks intranets and the Internet such as local area network LAN and a wide area network WAN .

When using a LAN networking environment the computing system may be connected to the local network through a network interface or adapter . When used in a WAN networking environment the computing system may include a modem wireless router or other means for establishing communication over a wide area network such as the Internet. The modem which may be internal or external may be connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the computing system or portions thereof may be stored in a remote memory storage device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

It should be understood that the various techniques described herein may be implemented in connection with hardware software or a combination of both. Thus various techniques or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the various techniques. In the case of program code execution on programmable computers the computing device may include a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs that may implement or utilize the various techniques described herein may use an application programming interface API reusable controls and the like. Such programs may be implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the program s may be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language and combined with hardware implementations.

At step the optimized gradient mesh module may receive a raster based image. illustrates an example of a raster based image that may be received.

At step the optimized gradient mesh module may receive user selected object boundaries. Depending on the complexity of the raster based image the image may be converted as one object or separated into two or more objects that may be converted separately. If the image is converted as two or more objects the boundaries of the selected objects may overlap each other such that when the objects are reassembled the overlapping gradient meshes may hide color discontinuities.

Each object boundary may consist of four segments approximating a rectangle. As described in the above paragraphs a gradient mesh may be made up of one or more Ferguson patches which may be defined by four control points resulting in four mesh line segments. In one implementation a user may draw the four segments to delineate an object boundary using a standard spline editing tool. Each segment may be converted to one or more cubic B splines. A spline may be defined as a cubic curve between a pair of control points. Splines may be connected at control points. To make sure that curves join together smoothly the first and second derivative at the end of one curve must equal the first and second derivative at the start of the next curve. B splines are a category of splines in which modifying one control point only affects the part of the curve near that control point. In other implementations a user may use an interactive image cutout tool to extract the boundary of an object. The user may then manually split the selected boundary into four segments that may be converted to cubic B splines. illustrates a selected object boundary . Note that the boundary is separated into four segments and .

After step an optional step may be performed in which occluded regions in an object may be smoothed. For example when converting a human face from a raster based image to a vector based image the eyes may be converted as separate objects from the face. Therefore before the face is converted to a vector based image the eyes may be smoothed out such that the vector based eye images may be overlaid on smooth areas of the vector based face image.

At step an initial gradient mesh may be automatically or semi automatically created. The optimized gradient mesh module may automatically create an initial gradient mesh by evenly distributing control points over the object selected in step such that an n m mesh of rectangular patches is created. In other implementations the initial gradient mesh may be created semi automatically. The optimized gradient mesh module may receive user selected control points. The optimized gradient mesh module may then add the horizontal and vertical gradient mesh lines passing through the user selected control points following the object boundary curvature. It should be noted that the user may need to select only one control point defining each horizontal line and vertical line and other control points may be automatically added by the optimized gradient mesh module where gradient mesh lines cross. illustrates an initial gradient mesh that was created semi automatically. The initial gradient mesh is not evenly distributed rather user selected control points indicated by black dots were received by the optimized gradient mesh module . The optimized gradient mesh module then added horizontal and vertical gradient mesh lines to pass through each user selected control point black dots . Because the user may have select only one control point defining each horizontal and vertical line other control points indicated by white dots may be automatically added by the optimized gradient mesh module where gradient mesh lines cross. Note that only a few of the user selected control point black dots and automatically added control points white dots are indicated in .

At step the initial gradient mesh may be rendered. The initial gradient mesh may be defined as M Q Qwhere P equals the number of patches in the initial gradient mesh . Equations 1 and 2 may be used to render the initial gradient mesh . illustrates a rendered initial gradient mesh .

At step an optimized gradient mesh may be generated by minimizing the difference between the rendered initial gradient mesh of the selected object and the corresponding objection portion on the received raster based image . In one implementation the difference between rendered initial gradient mesh and the corresponding objection portion on the received raster based image may be determined by minimizing the residual energy in the following energy equation.

In one implementation the Levenberg Marquardt LM algorithm may be used to minimize the residual energy in Equation 3 by solving the NLLS problem. The LM algorithm may require the computation of a Jacobian or derivative information represented as

In one or more implementations the LM algorithm may include a boundary constraint such that during optimization control points along the boundaries only move along the boundary edges. For example as described in step the boundary may be divided into four segments that may be described by one or more cubic B splines. A control point q on a boundary spline S in the u direction may have a reduced number of unknown variables. The unknown variables may be t m c c where t is the parametric coordinate of the control point q on the boundary spline S. The scale may be one and the variables mand may be a function of t. If two adjacent control points of the control point q are q 1 and q 1 then the enforced boundary constraints may be

In other implementations a smoothness constraint may be added to Equation 3 to yield an energy equation used to minimize the residual energy between the received raster based image and the rendered initial gradient mesh with a smoothness term. The following equation results.

In other implementations Equation 4 may be further modified to allow for user guided optimization. A user may specify a few vector lines in the raster based image at step or step . The user specified vector lines may be configured to control the optimization of the gradient mesh. Vector fields may be computed in a narrow band along the user specified vector lines. If vector fields Vand Von the u and v directions are computed the optimized energy equation may be modified by adding a new energy term as follows.

At step the optimized gradient mesh module may save the optimized gradient mesh to memory and render the optimized gradient mesh for display. Equations 1 and 2 may be used to render the optimized gradient mesh M Q Q. It should be noted that a standard rendering algorithm may be used which includes standard anti aliasing. Additionally a Bayesian matting algorithm may be used along the optimized gradient mesh edges to insure proper color sampling along the edges. illustrates a rendered optimized gradient mesh .

At step the optimized gradient mesh module may receive a request to return to step such that another object of the raster based image may be selected. Alternatively the optimized gradient mesh module may receive a notification that the process is complete.

It should be noted that various optimized gradient meshes of various objects may be then be used to reconstruct images edit objects create new images and the like. In one implementation the optimized gradient meshes may be combined to reconstruct the raster based image. Further various optimized gradient meshes from different raster based images may be combined to create new images.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

