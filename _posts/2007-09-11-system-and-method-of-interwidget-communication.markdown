---

title: System and method of inter-widget communication
abstract: A method and apparatus enabling inter-widget communication and control uses a central server to receive selected widgets and settings associated with at least one widget, wherein the received settings are used to at least partly determine the settings of the other selected widgets according to a pre-defined relationship between or among the widgets.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08352966&OS=08352966&RS=08352966
owner: Yahoo! Inc.
number: 08352966
owner_city: Sunnyvale
owner_country: US
publication_date: 20070911
---
Aspects of the present invention relate generally to the ability of widgets to communicate with other widgets and dynamically build their content based on the communication.

As is known in the art widgets also known as gadgets badges modules etc. offer a simple and easy way for end users to embed various third party functionality into their web pages onto their computers and even onto their mobile devices including mobile phones Personal Digital Assistants PDAs etc. Widgets may be used to display most anything and examples include modules that show the weather forecast for a particular city or the current stock price of a certain company etc. The inclusion of a widget in a web page can be accomplished through a JavaScript call an IFRAME element an EMBED element or any of a host of other methods which bring the widget code into the web page where it runs locally within the user s browser or on a user s desktop etc. . While the widget code can consist entirely of HyperText Markup Language HTML widgets are more commonly developed either in JavaScript or Adobe Flash .

Traditionally the content displayed by widgets has been fairly static and is generally limited to data which has been informed by a user s initial input when configuring the widget e.g. telling a widget that displays weather information to display information related to Orlando Fla. etc . Moreover widgets have been generally independent from each other and cannot share content. For example Yahoo Finance offers a customizable widget for displaying financial information which can include stock quotes. If a user decides he wants the widget to show stock quotes for a certain stock he tells the widget which stock he is interested in and from that point on it will display those stock quotes. The widget will display only those stock quotes until the user tells it to display something else the widget is informed only by the last settings that the user has provided.

Thus it would be desirable to enable widgets to share information between them and use that information to inform their content. It would also be desirable to control when the widget actually appears on a web page or desktop so that it does not take up valuable space when it is not needed or desired.

In light of the foregoing it is a general object of the present invention to generate a widget s content by taking into account the content of other related widgets.

It is another object of the invention to control the timing and duration of a widget s display on a web page or desktop.

Detailed descriptions of one or more embodiments of the invention follow examples of which may be graphically illustrated in the drawings. Each example and embodiment is provided by way of explanation of the invention and is not meant as a limitation of the invention. For example features described as part of one embodiment may be utilized with another embodiment to yield still a further embodiment. It is intended that the present invention include these and other modifications and variations.

Aspects of the present invention are described below in the context of widgets and widget groups that can derive information from one another and use that information to inform their content.

Inter widget communication allows one or more widgets belonging to a widget group as defined by end user to share their information with each other by referencing a functional relationship between them the shared information may include the settings or content preferences that each widget requires for its operation e.g. a weather widget may need to be told which geographic location to monitor etc. . Further widget groups may share information between them just as widgets can. In some circumstances the widget group may share a common informative goal e.g. gather all desired information about a particular city etc. . In one embodiment the inter widget communication can be managed and controlled by structuring the functional relationship between the selected widgets in a hierarchical fashion with a master widget and one or more retainer widgets. In such a setup the user chooses a widget to be the master and other widgets to be the retainers. Content preferences that are defined on the master widget filter down to the retainer widgets and inform their content as outlined in more detail below.

As illustrated at block IWC Server receives those widgets selected by a user to belong to the master retainer group of inter related widgets. For example assume that the user is trying to decide on a vacation trip to an as yet undetermined location during a certain part of the year and wishes to base her decision mainly on the cheapest airfare but would also like to take a few other disparate things into consideration such as for example world news local news and weather information for the competing locations. Given the user s goals and restrictions she may want to choose various widgets to belong to a single group themed around travel other examples of themes might include investment strategy car shopping etc. . These widgets might include those shown in namely 1. Best Fare Tracker to monitor the best ticket prices for the competing locations 2. Weather for reporting the weather forecasts in the competing locations 3. Top Reuters Stories and 4. World Reuters Stories .

As illustrated at block the user may specify the functional master retainer relationships used to control the selected widgets discussed more fully herein as shown in . For example in this situation because the cheapest airfare is the most important criterion the user may make the Best Fare Tracker the master widget and set the remaining widgets up as retainers. illustrates this functional relationship by assigning to each of the selected widgets a number e.g. 1 2 3 or 4 specifying its position in the hierarchy. The master retainer relationship may be of varying degrees of elasticity. For example illustrates rather strict relationships between each of the widgets Best Fare Tracker is the master widget and so it influences the content of Weather Top Reuters Stories and World Reuters Stories as shown by the arrows from Best Fare Tracker to each of the retainer widgets. Similarly if the retainer widgets do not have relevant content i.e. content they can use to inform the content of other widgets the second widget in the hierarchy can assume a master role and inform those widgets below it. Also various and more complex functional relationships may be implemented between the widgets such as for example two way communication i.e. the user may wish to have a widget from the middle of the hierarchy influence widgets both above and below it . It also should be noted that while in this example the user has set airfares as the master criterion the user could just as easily have set weather or local events as the master criterion.

In one embodiment the user may also be able to define schedules for each widget or widget group as shown in . Schedule settings may allow the user to specify certain times during which a widget or widget group may appear and with what frequency. For example using the travel situation outlined above the user may wish that the information regarding her travel plans only be shown on her web page or desktop for the next two weeks and only after 6 PM when she is out of the office and back home. In this case the user would define start and end dates and start and end times of day. As another example the user may wish for a traffic information widget to appear on her desktop or web page only between 4 30 PM and 5 30 PM each weekday so that she can get the most recent traffic information regarding her route home by defining a schedule and frequency in this way the user s desktop or web page is not cluttered with useless traffic information i.e. before 4 30 PM the information provided by the traffic widget is unusable and the space can be more effectively utilized by for example other more pertinent widgets. Where schedule and frequency settings are enabled IWC Server may take them into account when deciding which Widget Servers need to be sent information requests if the schedule and or frequency settings disallow the to be requested information to be shown on the desktop or web page then the requests may not be sent.

After these settings have been defined IWC Server may receive and process them at block where processing may include various functions including deciding what information to request from each of Widget Servers based on the hierarchical structure defined by the user. For example if Best Fare Tracker has some influence over Weather then IWC Server may decide to request weather information from Weather that corresponds to a location the user has specified in Best Fare Tracker . The processing functionality may also include the ability to determine whether a widget should display any information at all as discussed above with reference to .

After the settings have been processed information requests may be sent to Widget Servers at block . These information requests may work in a number of different ways depending how Widget Servers are configured.

In one embodiment Widget Servers may be configured to handle general requests as they normally would i.e. those requests as would usually come from the widgets they power . In that case the information requests may simply be custom or automated versions of the requests that would be sent by the widgets themselves. For example Weather may reside on a user s web page and the user may specify a geographic location for Weather to monitor. Each time Weather updates its information e.g. once an hour on every page load etc. it must send a request to Widget Server . The custom or automated requests sent by IWC Server instead of the widgets themselves may be substantially similar to those usually sent by individual widgets Widget Server would treat the requests the same no matter how they were carried out as expounded on below . In one implementation and still referencing Weather Widget Server may simply supply eXtensible Markup Language XML based feeds e.g. RSS Atom etc. corresponding to all requested locations and combinations of locations which are read by Weather using various protocols such as for example the HyperText Transfer Protocol HTTP etc. In another implementation Widget Servers may offer an Application Programming Interface API for accessing its information in such a case Weather may perform an API call over for example the Internet where it may be received processed and responded to by Widget Server . Irrespective of how the information is ultimately requested by Weather and received processed by Widget Server IWC Server may mimic the information request so as to allow Widget Server to operate in substantially the same way it has always operated.

In another embodiment Widget Servers may be configured in such a way as to offer increased functionality speed etc. to those information requests coming from IWC Server . For example Widget Servers may be made aware of some elements of the hierarchical structure used by IWC Server and in light of this information may treat a particular request from IWC Server differently than if it had come from an individual widget. As another example Widget Servers may accept different arguments etc. to information requests if they come from IWC Server such arguments may be used to specify that only a certain amount of data be returned e.g. only show weather information for the next three days not an entire week etc. or may put a further restriction on the content of the returned data e.g. only show weather information for location two if it is raining for the next three days at location one etc. etc. In such an embodiment there may exist two separate Widget Servers one for each type of requester i.e. individual or IWC Server .

Irrespective of the form the information requests take they are ultimately received and processed by Widget Servers as illustrated at block . As discussed in some detail above Widget Servers parse the information requests and return the data asked of them. For example an information request for the current weather information at a particular location may be received by Widget Servers in which case the requested information may be compiled or as the case may be the information may already be compiled and returned. As illustrated at block the requested information is sent from Widget Servers to IWC Server .

IWC Server receives the requested information from Widget Servers at block . After each of Widget Servers has responded with the requested information IWC Server may process the information and populate the widgets accordingly. Alternatively IWC Server may simply act as a proxy for the information requests and in this case the widgets may be populated by Widget Servers directly the requested information does not necessarily need to go back through IWC Server before it is received by the widgets.

The hierarchical master retainer relationship structure may be set in a number of different ways. In one embodiment the structure may be defined through a drag and drop interface through which the user can choose the widgets to belong to a widget group and also the relationships among the widgets. For example the user may be shown a list of available widgets e.g. a list of widget names list of previews of the widgets etc. and a list of sequential numbers to represent the levels of the hierarchy by dragging a widget to a particular number dragging a number to a particular widget etc. the user can define the hierarchical structure. As another example there may be a form next to each available selected widget where the user can enter a number to specify its position in the hierarchy.

Those of skill in the art will appreciate that the concept of inter widget communication is not limited to the ideas outlined above. For example a widget s content does not necessarily have to be informed by another widget but may in fact be informed by a host of various things other than an end user . As an example some Internet companies offer home pages also known as portals etc. that allow users to define their content. That content can sometimes include various widgets as chosen by the user. In many cases the home page also contains search functionality to allow the user to search the Internet at large or the particular Internet company s site etc. In such a situation the widgets selected by the user could be informed by the terms of their latest search such that the results page s will show not only the regular search results but also the information received by the various widgets whose content has been informed by the search terms. For example a user may search for Orlando Fla. and in addition to the regular search results may receive weather information supplied by a weather widget displayed next to the search results.

The sequence and numbering of blocks depicted in is not intended to imply an order of operations to the exclusion of other possibilities. It will be appreciated by those of skill in the art that the foregoing systems and methods are susceptible of various modifications and alterations. For example instead of returning the requested information to IWC Server at block Widget Servers may send the information directly to the widgets themselves. As another example the reception and processing of the hierarchical and schedule settings at block may take place at the user s device e.g. computer mobile phone PDA etc. and not necessarily at IWC Server .

Several features and aspects of the present invention have been illustrated and described in detail with reference to particular embodiments by way of example only and not by way of limitation. Those of skill in the art will appreciate that alternative implementations and various modifications to the disclosed embodiments are within the scope and contemplation of the present disclosure. Therefore it is intended that the invention be considered as limited only by the scope of the appended claims.

