---

title: Method and apparatus for upgrading a memory card that has security mechanisms for preventing copying of secure content and applications
abstract: A secure flash memory card or flash drive protects user content from unauthorized duplication. However, even the protected user content can be moved from one flash card or drive to another by its rightful owner or licensee. Additionally, secure firmware applications that may be added to the flash card over time in order to add additional functionality to the card may also be moved, although many of them are device specific and also designed to only operate on one particular piece of hardware.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08423794&OS=08423794&RS=08423794
owner: SanDisk Technologies Inc.
number: 08423794
owner_city: Plano
owner_country: US
publication_date: 20070620
---
This application claims the benefit of U.S. Provisional Patent Application No. 60 882 268 filed Dec. 28 2006 entitled Upgrading a Memory Card That Has Security Mechanisms That Prevent Copying Of Secure Content and Applications to Michael Holtzman et al. This application is incorporated in its entirety by reference as if fully set forth herein.

All patents patent applications articles books specifications other publications documents and things referenced herein are hereby incorporated herein by this reference in their entirety for all purposes. To the extent of any inconsistency or conflict in the definition or use of a term between any of the incorporated publications documents or things and the text of the present document the definition or use of the term in the present document shall prevail.

The invention generally relates to memory cards with secure content and copy protection mechanisms and in particular relates to allowing transferring of secure content to another memory card in the event of an upgrade.

There are many different types of protection mechanisms that prevent unauthorized copying and duplication of digital content. Many of these are often loosely referred to and thought of as a type of digital rights management DRM . Great efforts have been made specifically to stop duplication and transfer from device to device. For example musical or audio visual content cannot be transferred from one iPod to another in order to prevent what may include unauthorized duplication. Likewise in a secure memory card SIM card megaSIM card or USB flash drive collectively referred to hereafter as a card protected content cannot be moved from card to card.

Various different embodiments of the present invention allow a user to move or transfer the contents of a card to a card of equal or larger capacity when a user wishes to upgrade to larger capacity card. Other embodiments allow transfer of content regardless of the capacity of the source and target so log as the quantity of data to be moved will fit in the target. The target must have an equal or greater level of security than the source if copy protected content is to be moved to the target. Different methods are used to determine the authenticity of the target before the protected content can be moved. In embodiments of a card where the firmware and other software of the card is inoperable in any card other than the original card in which it was loaded embodiments of the invention overcome this obstacle and re bind them to a new card so that the transferred copy protected content can be decrypted which would otherwise be strictly forbidden outside of an authorized upgrade.

Additional aspects advantages and features of the present invention are included in the following description of exemplary examples thereof which description should be taken in conjunction with the accompanying figures and wherein like numerals are used to describe the same feature throughout the figures unless otherwise indicated.

The firmware of the card may have any number of different security routines and mechanisms that prevent unauthorized duplication or transfer of user files. For more information on other security mechanisms and techniques present in SD please refer to the following patent applications and patents all of which are hereby incorporated by reference in the entirety Secure Yet Flexible System Architecture for Secure Devices With Flash Mass Storage Memory to M. Holtzman et al. application Ser. No. 11 317 339 Secure Memory Card With Life Cycle Phases to M. Holtzman et al. application Ser. No. 11 317 862 In Stream Data Encryption Decryption and Error Correction Method to M. Holtzman et al. application Ser. No. 11 313 447 Control Structure for Versatile Content Control to F. Jogand Coulomb et al. application Ser. No. 11 313 536 System for Creating Control Structure for Versatile Content Control to F. Jogand Coulomb et al. application Ser. No. 11 314 055 Mobile Memory System for Secure Storage and Delivery of Media Content to B. Qawami et al. application Ser. No. 11 322 766 and In Stream Data Encryption Decryption Method to M. Holtzman et al. application Ser. No. 11 314 030. The present application should not be limited to those security techniques or mechanisms in the aforementioned applications.

In the case of some cards secure applications may also be loaded onto the card during the life of the card. These applications run on top of the system firmware and may involve additional manipulation of confidential data. For example applications that allow password management can be added to increase the functionality of a memory card or USB flash drive. For more information on this please refer to U.S. patent application Ser. No. 11 319 835 to Gonzalez et al. entitled Mass Storage Device With Automated Credentials Loading. As another example applications relating to medical or financial records can be loaded into the card. These software or firmware applications are executed by a processor of the card alone or in combination with the processor of a host device and may not only handle confidential information but also the secret information used in encrypting and safeguarding the contents of the card. As such they may be deeply interconnected and reliant upon the security mechanisms and information within the card. In some cases the security mechanisms of the applications themselves utilize card specific information and will not function on another card. The applications themselves may also be encrypted and device specific in order to prevent them from being copied and hacked.

In essence these security mechanisms aim to make it impossible to copy secure or copy protected user files to another device and thereafter utilize them with the other device. As an example in some cards a copied song may not be played back from a card or host coupled to the card. This has the unfortunate result in some devices that even the authorized owner or licensee of the protected content cannot move it from one of his devices to another even though only one instance of the content will exist both before and after the move.

Referring to the memory space of mass storage flash memory MSM is shown. MSM comprises a system partition or area A that is hidden from a user host. Stored within the system partition A is system firmware and soft keys . System firmware is the operating firmware that controls all data storage operations of SD and communications with host device . The soft keys are keys that can be utilized by software of the device including the firmware to encrypt and decrypt data within SD . This differs from hardware key that is not available for general encryption decryption of user files as mentioned earlier. MSM may also comprise private partition B and user partition C. In certain embodiments one partition may serve as both the system and private partition. Secure applications and protected data may be stored in private partition B. Protected data may be any type of operating parameter or other data that is desirable to have safeguarded from unfettered access which would be the case if it were stored in user partition C. Secure applications run on top of system firmware and may comprise security routines that utilize soft keys alone or in combination with keys provided by the secure application itself. These applications provide additional functionality to the card above and beyond typical data storage operations and can be added by a user at anytime during the life of the card. Furthermore the secure application may use information specific to the card e.g. diversification data that will only function on the specific card upon which the application was loaded. For example a secure application may generate one time passwords using a serial number or other diversification data of the card and then submit them for login or verification of a user or user s account. This is only an example and any number of algorithms used in security or other functions may be based upon at least in part card specific data. The applications may be loaded over time by a user. All of these applications should ideally be transferred to a target card and function after upgrade despite the fact that the underlying hardware has changed. This difficulty will be addressed later.

Data stored in user partition C is generally publicly available. User partition C comprises diversification data copy protected content and unprotected content . Diversification data comprises information used to diversify a master key or keys into keys that are derived from the master key s but limited to a subset of devices or users such that if the derived keys are compromised not all instances of a particular file can be pirated or freely reproduced. Copy protected content is content that is either restricted from being transferred or alternatively content that may be transferred or copied but useless without the proper means to access it. The security may be provided by the system firmware soft keys and or secure applications . In many embodiments copy protected content is typically encrypted and although the encrypted content may be copied it cannot be decrypted unless a device is authenticated or authorized and has the proper keys to decrypt the content.

The protected data and secure applications of private partition B are also transferred from source to target as seen in step . If they are encrypted with a HW key they are decrypted with the source HW key encrypted with a session key for transport and subsequently decrypted and again encrypted with the target HW key as described above. In embodiments where they are simply encrypted with soft keys or other keys of secure applications they are then preferably encrypted with a session key and decrypted with the session key after transport. Again as mentioned above while usage of the session key is preferable it may be omitted in certain embodiments for example in scenarios where the host and transport process may occur in a known secure environment or over a private network.

Diversification data may be encrypted with the session key or sent in an un encrypted state as represented by step . This is also true for unprotected content .

Copy protected content such as music films and other sensitive content and the like is also transferred from source to target as represented by step . As mentioned previously the copy protection of the content is provided by system firmware alone or in conjunction with secure applications . It is encrypted with soft keys alone or with other keys provided by the providers of secure applications . The secure applications may call the security routines and or soft keys of the system firmware through an API of the firmware or may utilize keys provided with and by the secure applications. Furthermore the secure applications may provide an additional layer of encryption above and beyond that provided by the system firmware and soft keys . In any case the copy protected content may be transferred as it is stored in the target or further encrypted with a session key during transport before being decrypted with the session key upon arrival at the target.

It is important that the protected content is not duplicated in such a fashion that additional unauthorized copies are not made and in a way that the protected content cannot be available at both the source and one or more targets. The device must protect itself from aborted upgrades and other hacks or attacks while at the same time ensuring that both source and target remain functional in the case of an inadvertent failure during the upgrade process. A state machine of the device enables this in conjunction with the system firmware.

In certain embodiments after the upgrade has taken place the target will contain both the target s original diversification data and the source s diversification data. This is especially useful in the situation where the contents of the target are merged with pre existing contents of the source. In certain embodiments similar to the diversification data the soft keys and or credentials after upgrade may include both those of the target and the source.

The protocol comprises 5 main stages phases or steps. These are correlated with states of the state machine. The first is the set up of the devices for the upgrade as seen in step . The proxy will prepare both the source and target to send receive data. Each of them will in turn acknowledge that they are prepared.

The second state step of the protocol is authentication as seen in step . This may involve authentication of the target or alternatively authentication of both the source and target. In some embodiments the authentication comprises a mutual authentication where both the source and target authenticate each other. This type of authentication involves a key exchange. Some preferred methods of authentication will be discussed later with regard to and .

The third state step of the protocol is the upgrade transfer itself as seen in step . As part of this state the proxy instructs the target to send the secure database which comprises system firmware soft keys and optionally protected data and secure applications if present. The source then sends a copy of the secure database through the proxy to the target. The proxy then gets the partition map from the source and determines if the partition map should be resized for the target. The target will have equal or greater storage capacity as the source and it may be desirable for any number of reasons to alter and or resize the partition map. Additionally user demands and input may dictate resizing the partitions and thus altering the partition map. If the map does not need to be resized then the partition data will be retrieved from the source and passed onto the target without first being updated.

The fourth state step of the protocol is the copy acknowledgement as seen in step . The proxy requests that the target acknowledge that the copy operation has been completed successfully and once that it is done it informs the source that the copy operation was successfully completed.

The fifth state step of the protocol is the erasing of the source as seen in step . The erase will only be done if the copy operation was successful. Otherwise there is a risk that neither the source nor the target will have the complete contents of the memory. The proxy requests that the source acknowledge that the erase has been completed and when the acknowledgement is received the target is informed. With this information the target may be used. In some embodiments this involves an activation step.

If alternatively as determined in diamond the state flag is determined to be normal as represented by box and an upgrade event is triggered the state will be advanced to a card set up state as represented by box . This corresponds to state step of . The next state is the authentication state as represented in box . The card will be assigned a role of either source or target while in this or the card set up state. If the authentication succeeded in step of for example the state will be updated to reflect that the device is in card upgrade mode state and the trusted ID or serial number of the card will be stored. The stored trusted ID is that of the other source or target card that participated in the original attempt to upgrade. The ensures that if there is an aborted upgrade that when the process restarts that only the originally participating pair of cards can participate. For example a third card cannot act as a target and receive the data from the source. This ensures that at the end of the process that there will only be one copy of the data.

The next state is the copy acknowledge state corresponding to step phase in as represented by box . Once the copy acknowledge is received the device is transitioned to erase state as represented by box and the erase is acknowledged as a result as represented by box . The state is then advanced to a normal use state as represented by box . The device is therefore once again ready for normal usage.

In step the source signs the encrypted package with its private key and attaches the source certificate to the encrypted package. A transaction ID may also be generated at this or some other point in the process. The transaction ID would preferably be generated by the target and would guard against a replay attack or a copy operation disguised as a move. This aids in assuring that the data can be transferred only once. In step the encrypted package and certificate is passed to the selected target via the host or other proxy. Then in step the target validates that the source is a trusted device for example by checking with a PKI certificate authority. If in step the source is not found to be a trusted one the upgrade transfer is aborted as seen in step . If alternatively the source is trusted the target then checks the data integrity and returns the result to the source via the host in step . This check may involve comparing the checksum or the cryptographic signature from step . If the package integrity is not verified in step the process will again be aborted as seen in step . If alternatively the integrity of the package is verified the source will then pass an activation code to the target via the host in step and the packaged security items will be deleted from the source in step . In step the source uses the activation code to unpack the package and if necessary merge it with pre exiting contents of the card. In step the content of the card in other words the protected and or unprotected files in user partition C are then copied from source to target. As the copy protected files that are encrypted are useless without the proper keys they can be freely copied without the precautions provided for the secure package.

A secure channel creation phase is also illustrated in . Establishing the secure channel comprises generating a third random number at the initiating one of the devices encrypting the third random number at the initiating device passing the third random number to the responding device decrypting it at the responding device generating a fourth random number at the responding device and performing an exclusive disjunction operation on the decrypted second random number and the third random number at the responding device. This can be seen with random number B labeled and random number D labeled . The disjunction operations are labeled and .

Once authentication is complete the secure database described earlier and partition map may in some embodiments be encrypted based upon the result of the exclusive disjunction operation. This result is the session key or .

Although the various aspects of the present invention have been described with respect to exemplary embodiments thereof it will be understood that the present invention is entitled to protection within the full scope of the appended claims.

