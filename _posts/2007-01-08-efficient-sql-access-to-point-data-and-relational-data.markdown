---

title: Efficient SQL access to point data and relational data
abstract: Some embodiments include reception of a structured query language query, determination of at least one point data query and at least one relational data query based on the structured query language query, transmission of the at least one point data query to at least one point data server, transmission of the at least one relational data query to at least one relational data server, reception of point data and relational data in response to the point data query and the relational data query, and joining of the received point data and the received relational data into a result rowset.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08078598&OS=08078598&RS=08078598
owner: Siemens Aktiengesellschaft
number: 08078598
owner_city: Munich
owner_country: DE
publication_date: 20070108
---
This application claims priority to Provisional Application Ser. No. 60 757 793 filed Jan. 9 2006 and entitled SQL Access to Real Time Historic Point Data and Relational Data from the XHQ System . This application is related to U.S. Pat. Nos. 6 700 590 and 7 069 514 the contents of which are incorporated by reference herein for all purposes.

The embodiments described below relate generally to retrieval of data from relational database management systems and industrial systems.

Conventional industrial systems often rely to some extent on computer based automation and monitoring. For example data arising from the operation of a manufacturing plant may be acquired analyzed and responded to if necessary. The data may arise from independent physical elements of the manufacturing plant e.g. pumps tanks etc. with each element configured to provide substantially raw or native point data at pre defined intervals in real or near real time. The point data may include numerical values produced by gauges and or monitors e.g. speed temperature or pressure .

Examples of systems that may acquire analyze and act on point data include industrial automation systems supervisory control and data acquisition SCADA systems and general data acquisition systems. In general point data obtained from selected sources is subject to dynamic change and is monitored and reported through various operations and functions associated with processing the point data. In industrial automation and control systems decision support and reporting capabilities may be provided based on point data that is monitored over very short timeframes ranging in the sub second to sub minute range.

Monitoring and or control applications use standard or proprietary Application Programming Interfaces APIs to acquire point data from point data sources and or data historians. Many existing client applications e.g. report writing applications are designed to issue queries that comply with a standardized query language in order to access relational data stored in a relational database. It may be desired to use such existing applications to access both point data and relational data. However the above mentioned APIs may be difficult to integrate into existing applications.

In order to address the foregoing some embodiments concern a system a method an apparatus a medium storing processor executable process steps and means to receive a structured query language query determine at least one point data query and at least one relational data query based on the structured query language query transmit the at least one point data query to at least one point data server transmit the at least one relational data query to at least one relational data server receive point data and relational data in response to the at least one point data query and the at least one relational data query and join the received point data and the received relational data into a result rowset.

In some embodiments the point data is derived from an industrial process which may comprise a continuous process and or operations of facilities involved in at least one of manufacturing assembly natural resource procurement natural resource refinement chemical synthesis water treatment power generation power transmission food processing beverage processing raw materials processing agricultural processing and materials processing.

The appended claims are not limited to the disclosed embodiments however as those in the art can readily adapt the teachings herein to create other embodiments and applications.

System includes structured query language SQL client data provider point data server and relational data server . Each of elements through may be implemented using any combination of hardware and software and one or more of such elements may share common hardware and or software. One or more of elements through may be located remote from one or more other elements and portions of a single element may be remote from other portions of the single element.

SQL client in some embodiments may comprise processor executable program code of a client application. The client application may be capable of generating and transmitting an SQL query for retrieving desired data. According to some embodiments the desired data may comprise point data and relational data. SQL client may also comprise a device to execute the program code.

Data provider may also comprise program code and may or may not be integrated into program code providing SQL client . Data provider may therefore be implemented as a dynamic link library code module kernel element standalone application and or in any other manner that is or becomes know. Data provider receives an SQL query from SQL client and determines a point data query and a relational data query based on the SQL query.

Data provider transmits the point data query to point data server and transmits the relational data query to relational data server . The point data query may comply with a standard or proprietary API also supported by point data server . Point data server may comprise any system for providing client access to point data. Point data server may comprise any system for generating point data as well as any system for storing generated point data such as a data historian. In some embodiments point data server does not support SQL queries.

Relational data server may comprise any database management system for supporting relational data queries received from data provider . The relational data queries may be SQL compliant or may comply with any other relational database management system.

Point data server may transmit point data to data provider in response to a point data query received therefrom. Similarly relational data server may receive a relational data query from data provider and return relational data in response thereto. Data provider may thereafter join the point data and the relational data into a rowset and provide the rowset to SQL client .

As used herein point data may be characterized as current real time or value data associated with one or more instruments components or portions of a manufacturing industrial commercial or other system. Any of these instruments components or portions may be configured to generate measure and or sample point data of interest. For example a data acquisition system for a particular instrument or machine may continuously or periodically acquire data reflecting a motor s operating speed and or operating temperature as point data from a point data source associated with the motor. In certain instances the point data may be a simple numerical value or string value. Point data may further be associated with monitoring control and reporting functions of various instruments components and applications to provide information relating to the operation of a selected system. This information may also be made available for collection and review by various data acquisition and control systems.

Point data is often acquired in a raw or unstructured form wherein the point data reflects a numerical or string value without supporting details description and or attributes. As previously described certain types of point data may be associated with real time or near real time information e.g. current temperature pressure speed voltage current etc. that may be desirably sampled updated or refreshed relatively frequently. The exact frequency of these operations is typically dependent on the characteristics of the point data itself and may be different across the multiple point data sources incorporated into a particular system.

Although system includes only one point data server and one relational data server embodiments are not limited thereto. In some embodiments data provider transmits point data queries to two or more point data servers and or transmits relational data queries to two or more relational data servers. The transmitted queries may be determined based on a single received SQL query.

Process steps may be embodied in processor executable program code read from one or more of a computer readable medium such as a floppy disk a CD ROM a DVD ROM a Zip disk a magnetic tape or a signal encoding the process steps and then stored in a compressed uncompiled and or encrypted format. In alternative embodiments hard wired circuitry may be used in place of or in combination with processor executable program code for implementation of processes according to some embodiments. Thus embodiments are not limited to any specific combination of hardware and software.

Initially at step S an SQL query is received from a client. The client may comprise a remote client device a local client application or any other suitable client. The SQL query may be generated using currently or hereafter known techniques. In some embodiments the client may generate the SQL query in response to a user request for a particular report or particular data. According to some embodiments the desired data may comprise point data and relational data.

A point data query and a relational data query are determined at S based on the received SQL query. According to some embodiments of S a detailed example of which is provided below the SQL query is parsed to identify requested point data and requested relational data. A point data query for acquiring the requested point data is then generated as is a relational data query for acquiring the requested relational data. The point data query may comply with a standard or proprietary API for acquiring point data and the relational data query may comply with a relational database management system.

The point data query is transmitted to a point data server at S and is transmitted to a relational data server at S. In response point data and relational data are received at S. Next at S the received point data and relational data are joined into a result rowset. The rowset may thereafter be provided to the SQL client.

System may be used to aggregate real and or near real time operations data arising from the operation of an industrial plant. The operations data may represent any type of operation including but not limited to batch processes discrete processes and or continuous industrial processes employed in the oil industry e.g. in an oil refinery gas industry and or chemical industry.

In this regard the various embodiments described herein can be employed in a wide variety of industries and operational facilities. Any industrial process with differing types of operations data may supply data to systems utilizing the invention. For instance facilities involved with natural resource refinement and procurement oil and gas procurement oil and gas refinement chemical synthesis and refinement water treatment power generation power transmission food and beverage processing raw materials processing e.g. pulp lumber metals and minerals agricultural processing and materials processing e.g. steel mills and foundries may be suited to utilize platforms and software built upon concepts described herein. Additionally facilities involved in finished goods manufacturing and production such as product assembly lines may utilize one or more embodiments or systems with such features.

These facilities may have various assets equipment machinery flows etc. that produce operations data which may be continuous or discrete and may involve operations data that is presented in batches. Examples include pumps motors tanks pipelines mills lathes mixers assembly lines and so on. Operations data may include data from machinery assets process historians maintenance systems enterprise resource planning systems and the like. Examples of such data include pressure temperature capacities volumes rates of flow production totals inventories performance indicators and the like.

Client application may be used to present views consisting of point data and relational data. Client application may reside on any suitable user device including but not limited to a desktop computer a laptop computer a computer terminal a personal digital assistant a telephone and a tablet computer.

Client application may include client code and data provider . Client code and data provider may be embodied as described above with respect to SQL client and data provider respectively of system . In some embodiments client code is an ADO.NET data consumer such as a reporting package. Accordingly data provider may comprise an ADO.NET provider. Data provider may also comprise any SQL oriented data driver including but not limited to ODBC OLE DB etc.

Data provider may receive SQL queries from client code and may communicate with application environment via a standard or proprietary API to fulfill the queries. Such communication may consist of calling APIs to acquire point data specified in the SQL queries and or transmitting other SQL queries to acquire relational data specified in the SQL queries.

Application environment may comprise enterprise server Web server and solution server . Application environment may comprise a single server device or multiple devices. In various embodiments enterprise server and solution server comprise application programs developed in Java and or C and running under Windows XP NT 2000 2003. Application environment may comprise the XHQ system from IndX Software Corporation according to some embodiments.

Web server may manage data communication between application environment and client application . Accordingly client application may execute one or more Java applets to interact with Java servlets of Web server according to some embodiments.

Solution server is used to access data from data sources . In some embodiments solution server includes connection groups and connection processes. A connection group includes one or more object instances each of which is associated with a particular data source of operational data sources . Different connection groups are associated with different data sources. A connection process comprises processor executable program code to retrieve data from a particular type of data source e.g. an Oracle database . A connection process may comply with standard or proprietary protocols including but not limited to ODBC JDBC OPC DA OPC HDA OPC AE and Web Services.

Several different connection groups may use a same connection process to access their respective data sources. Moreover each object instance may include scripts e.g. Structured Query Language scripts to populate itself based on retrieved data. Solution server manages the objects connection groups and connection processes to access data that is acquired and stored by disparate systems of operational data sources .

Solution server may transmit the data acquired from data sources to data store and or data store for storage according to some embodiments. Data store may comprise a relational database for storing any data used during the operation of application environment . Data may be stored in data store according to any currently or hereafter known protocol for storing data. Data store may also comprise a relational database management system that is usable to access and or manage the data stored therein.

Data store may comprise a point data server such as a data historian. A data historian may comprise a database that is optimized for a high rate of data insert. Data store may comprise a point data server to receive point data queries and to provide point data in response.

Commonly assigned U.S. Pat. No. 6 700 590 describes a system to use a class based object and view model to collect and display data received from multiple heterogeneous sources. This system encapsulates received point or relational data as objects which are instantiations of defined components. The use of components and objects may provide reusability consistency inheritance and other benefits known to those familiar with object oriented techniques. The component model may be established and utilized in any manner including but not limited to those specified in aforementioned U.S. Pat. No. 6 700 590 and or U.S. Pat. No. 7 069 514 the contents of which are herein incorporated by reference for all purposes. The component model may follow any suitable modeling protocol or format including those mentioned in the foregoing references.

Data store may therefore receive definitions of objects and or object collections from solution server . Each object and or object collection may comprise an instantiation of a component defined in the component model. For example a component may represent a generic pump with members of the component representing data related to the pump such as name location speed temperature etc. An object or object collection that is instantiated based on this component may represent a specific physical pump or several specific physical pumps .

According to some embodiments a database management system of application environment is associated with data store and determines a plurality of relational database tables based on the received component definitions and object definitions. The relational database tables may reflect some or all of the associations and relationships between data components and objects within the received definitions. Data stores 328 and 329 may comprise one or more devices and is not limited to a device that exclusively or primarily provides database functionality.

Data sources may comprise various data sources including but not limited to plant floor production systems enterprise resource planning data systems and other data systems. When employed in an industrial context data arising from data sources may be associated with any aspect of industrial operations and may consist of point data. Each data source of data sources may comprise one or more disparate hardware and software systems some of which are not interoperational with one another.

The elements of may be configured differently than as shown and each block shown may be implemented by one or more hardware and software elements. The hardware and software elements of one or more blocks may be located remotely from each other. Some embodiments may include less or more elements than those shown.

As described above data provider may transmit point data queries to two or more point data servers and or transmits relational data queries to two or more relational data servers. Accordingly application environment may comprise two or more point data servers and or two or more relational data servers. Moreover data provider may transmit point data queries to one or more point data servers which are independent of i.e. externally connected or unconnected to application environment e.g. a point data server of data sources and or may relational point data queries to one or more relational data servers which are independent of application environment .

Client device includes microprocessor in communication with communication bus . Microprocessor may comprise an Intel Itanium microprocessor or other type of processor and is used to execute processor executable program code so as to control the elements of device to provide functionality such as that described herein.

Also in communication with communication bus is network interface . Network interface is used to transmit data to and to receive data from devices external to client device such as a device housing Web server of application environment . Network interface is therefore preferably configured with hardware suitable to physically interface with desired external devices and or network connections. For example network interface may comprise an Ethernet connection to a local area network through which client device may receive and transmit information over the Web.

Input device and display are also in communication with communication bus . Any known input device may comprise input device including a keyboard mouse touch pad voice recognition system or any combination of these devices. Of course information may also be input to client device via network interface . Display may be an integral or separate CRT display flat panel display or the like used to present graphics and text in response to commands issued by microprocessor .

According to some embodiments display displays user interfaces that may be manipulated by a client using input device to request a view or report. Client device may operate to generate an SQL query and proceed as described herein in response to the request.

RAM is connected to communication bus to provide microprocessor with fast data storage and retrieval. In this regard processor executable program code being executed by microprocessor is typically stored temporarily in RAM and executed therefrom by microprocessor . ROM in contrast provides storage from which data can be retrieved but to which data cannot be stored. Accordingly ROM may be used to store invariant process steps and other data such as basic input output instructions and data used during boot up of device or to control network interface . One or both of RAM and ROM may communicate directly with microprocessor instead of over communication bus .

Data storage device stores among other data processor executable program code of client application . Client device may execute client application to provide the functions attributed herein to client application and or SQL client and data provider . Client application may comprise a Java applet or a standalone application suitable for the operating system of client device .

Web browser may comprise processor executable program code of a Web client. As such client device may execute process steps of Web browser to request and receive Web pages from a Web server such as Web server . A Java applet may execute within an execution engine provided by Web browser .

Data storage device also includes processor executable program code of other applications . Other applications may include program code to perform calendaring e mail functions word processing accounting presentation development and the like. Data storage device may also store process steps of an operating system unshown . An operating system provides a platform for executing applications device drivers and other process steps that interact with elements of client device . Data files may include any electronic files usable by any application of client device .

Initially data handling classes are determined at step S. A data handling class may be used to acquire certain types of data. Also determined are data tables associated with each data handling class. Accordingly a data handling class may be used to acquire data stored in the data tables that are associated with the data handling class.

In some embodiments S comprises determining available data handling classes and determining the data tables that can be handled by each available data handling class. The following code portion may be used at S to return a list of available data handling classes i.e. command types 

An SQL query is received in S. The SQL query may require point data and relational data as described above. illustrate SQL queries and respectively which may be received at S according to some embodiments. SQL query is intended to generate an answer to the question How much oil is currently available in tanks across the unit SQL query asks How much oil is currently available in all tanks in the facility grouped by product type and SQL query addresses the question How much oil was available during December 2006 in all tanks in the facility grouped by product type 

Returning to process data tables associated with the received SQL query are determined at S. The associated data tables may be determined based on a FROM clause of the SQL query. Taking SQL query as an example the associated data tables determined at S are Tanks solution instances and solution values .

A data handling class associated with each determined data table is then determined at S. The data handling class may be determined based on the associations determined at S. In a particular example 

The determined data handling classes are then executed at S to determine a data reader for each data table. In a case that a data table is associated with relational data the data reader may comprise an SQL query e.g. XhqCollectionCommand of the data table. The following code portion may implement some embodiments of S 

A point data reader is called for each data table associated with point data at S. The point data reader may comprise a standard or proprietary API supported by a point data server. Similarly an SQL table query is passed at S for each data table associated with relational data.

A rowset is synthesized at S based on the results of each call and SQL query. Rowsets and illustrate rowsets that may be synthesized based on respective queries and and according to some embodiments of S through S. As shown rowsets and include relational data as well as point data. Continuing with the present code example the following code may provide S through S according to some embodiments 

The rowsets are combined at S into a result rowset based on columns specified in the received SQL query. The rowsets may be combined in some embodiments using a nested loop or hash algorithm and based on columns specified in a JOIN clause of the SQL query. For example result rowsets and reflect a combination of respective rowsets and based on JOIN clauses of respective SQL queries and .

The result rowset is transmitted at S. The result rowset may be transmitted to the entity from which the original SQL query was received.

Those in the art will appreciate that various adaptations and modifications of the above described embodiments can be configured without departing from the scope and spirit of the claims. Therefore it is to be understood that the claims may be practiced other than as specifically described herein.

