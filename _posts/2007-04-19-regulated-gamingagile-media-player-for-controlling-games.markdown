---

title: Regulated gaming—agile media player for controlling games
abstract: A method for agile downloading and controlling regulated games in a distributed gaming system, the games being selected from a large library of certified games. A preferred embodiment of the method is a plug-in for the ubiquitous personal media player whereby the regulated games distributed on CD-ROM are catalogued in the media library through a “rip-like” operation and are downloaded to the gaming machines through a “sync-like” operation much like for downloading music, photos and movies to an iPod®. Preventing execution of non authorized games is enforced in the gaming machine through software restriction policy (SRP) much like digital right media (DRM) prevents listening or viewing illegal media files. Other media content such as promotional photos, videos and audio may be downloaded and controlled through the same casino media player. A free-text entry selection accelerator enables rapid selection of media titles, game titles and target gaming machines according to a wide range of indexed embedded information and metadata. Operators already acquainted with downloading media content to portable media player such as the Apple iPod®, Microsoft Zune® and other digital music players will feel immediately at ease with downloading regulated gaming content to gaming machines via the same paradigm, from a control workstation in the central computer room or directly at any location on the floor using a mobile PC.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08491391&OS=08491391&RS=08491391
owner: IGT
number: 08491391
owner_city: Reno
owner_country: US
publication_date: 20070419
---
This application is related in subject matter to application Ser. No. 10 789 975 filed Feb. 27 2004 which application is hereby incorporated herein by reference in its entirety.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by anyone of the patent document or the patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyright rights whatsoever. The following notice applies to the software and data as described below and in the drawings referred to herein Copyright 2007 Cyberview Technology Inc. All Rights Reserved.

The present inventions relate generally to the field of network connected pay computer controlled games either games of skills or games of chance and more particularly to the field of automated monitoring and control of a large number of clusters of pay gaming terminals. The gaming terminals may be slot machines video lotteries bingo systems or lottery terminals in all their forms that is desktop terminals wall or pedestal mounted kiosks or full size consoles operating either in a local area network LAN or in a wide area network WAN . The present inventions also relate to the monitoring and control systems linked to the gaming terminals.

Pay entertainment and gaming systems of the prior art either of the cash in or the cash less type are seriously limited due to the technical choices made in order to comply with gaming regulatory requirements. Regulators are mainly concerned with funds that may be illegally acquired by individuals as well as with funds that may not be acquired by legitimate winners as a result of flaws cheating and or stealing. Game regulators are reluctant to accept state of the art operating systems multimedia and Internet technologies because of security concerns and tend to favor antiquated technology based upon secrecy rather that open state of the art technology. A Request Authorize method for downloadable games has been proposed by another company IGT s Secure Virtual Network in a Gaming Environment Publication US2002 0116615 A1 but the method disclosed therein does not cover how to ensure that only certified authorized components may execute. Although downloadable games are undeniably going to flourish they have yet to create confidence within the regulatory arena.

When downloadable games become established the number of games available to any one gaming machine will become quite large likely in the thousands. When the traditional paradigm of one game to one gaming machine is shattered each gaming machine may potentially be configured to run any number of games. Selecting which games to download and activate on which machines to maximize both player enjoyment and profit will then become very important. As of yet no convenient and immediately intuitive methods of selecting scheduling and activating games on selected gaming machines or groups of gaming machines exists.

Embodiments of the present invention overcome the security limitations of the prior art and allow game operators the flexibility to dynamically configure their estate of gaming terminals. It is to be noted that although the gaming industry has coined the term downloadable game and that gaming standard GLI 21 entitled Game Download System has been published by Game Laboratory International GLI the term downloadable game is rather restrictive as the downloading of software components to computer terminals and computer servers is by itself pervasive in any network distributed computer system. However downloading certified game components in a secure manner is a problem that has yet to find a satisfactory solution.

Embodiments of the present invention may allocate an individual PKI certificate to each executable software component and each of its versions binding the PKI certificate to the executable software by code signing and associating a distinctive restriction policy for each PKI certificate. The PKI certificate s Subject Name or Issued to field or Common Name field may be a concatenation of the software component identification its version number and optionally other identification characters for example.

According to other embodiments the present invention offers a method to enable dynamic configuration of gaming terminals installed in one or a plurality of gaming premises whereby certified games certified data files and certified support software components may be activated in accordance with a predetermined schedule or automatically in response to the observed gaming activity. This may be accomplished by configuring and then enforcing the software execution policies for selected PKI certificates in accordance with the desired authorized game configuration and schedule.

Further embodiments of the present invention offer a method to ensure the trust of non executable files such as initialization or configuration files video files sound files multimedia files file containing list of hashes CRCs and or signatures. This method relies on the certificate Software Restriction Policy as described herein.

Still further embodiments of the invention enable the certification authority to bind the certificates to the tested software components.

The present invention according to still further embodiments thereof enables a dynamic generation of the list of games made available to the players without transferring a configuration file or files from the central server to the gaming machines. For example a method according to an embodiment of the present invention relies on attempting to execute a game component on which a certificate Software Restriction Policy is enforced.

Embodiments of the present invention leverage the technology described in commonly assigned U.S. patent application filing 60 393 892 entitled Secure Game Download in which code signing and Software Restriction Policy enable executing authorized game software. Code signing and Software Restriction Policy SRP technologies are available in Microsoft Windows XP Windows 2000 and Windows 2003 Embedded Windows XP as well as Windows Vista to ensure that only executable software components from a trusted publisher let s say Microsoft are allowed to run. Code signing and Software Restriction Policy technology are applied to executable components such as .exe .dll .ocx .vbs .msi .cab etc. In addition Software Installation Policy SIP ensures that software components are installed in a controlled fashion. Embodiments of the present invention extend the use of code signing Software Restriction Policy and Software Installation Policy to individual software components that are allowed to execute in a network connected gaming system by associating a distinctive code signing certificate to each executable software component. Each executable software component version usually comprising major version minor version revision and build may have a unique certificate. A distinctive certificate may be created for each software component version and the two entities the compiled code and the certificate may be bound together by a code signing operation herein called signcode.exe. 

Code signed software components may be packaged together with non signed software components if any into a MSI Microsoft installation package MSI Microsoft Software Installation . An MSI package is an executable component that in turn receives a distinctive certificate bound to its content by a code signing operation. Only the software component version that has successfully passed the regulatory certification process may be allowed to run by enforcing an unrestricted policy to the associated certificate.

Moreover embodiments of the present invention extend the use of code signing and Software Restriction Policy to ensure that only authorized non executable components are used by the authorized executable components. This is of particular value for configuration files or media files that may affect the game outcome such as fixing the return to player at for example 95 between 5 00 PM and 11 00 PM or at 98 during other time periods. For this non executable components may be placed in code signed MSI Microsoft Software Installation installation packages. Each individual MSI package is an executable component whose execution can be controlled by Software Restriction Policy SRP . A distinctive certificate may be created for each package version a part number is created for a preselected aggregate of non executable components and the two entities may be bound together by the code signing operation signcode.exe. Within the network connected gaming system trust for non executable components may be established by executing the associated authorized code signed packages using SRP upon computer startup or alternatively on demand resulting in the re installation of the original non corrupted non executable components. The non executable components may be initialization or configuration files video files sound files multimedia files file containing list of hashes CRCs and or signatures for example.

For example DRM Digital Rights Management technology offered by Microsoft Windows Media Player may be used to ensure that only authorized multimedia files may be played or viewed.

Also RM Rights Management technology offered with Microsoft Office 2003 with the associated RM services and SDK Software Development Kit may be used to ensure that only authorized data files may be accessed viewed copied or modified.

Software Installation Policy SIP and Software Restriction Policy SRP configured with an individual PKI certificate associated to each authorized software component offer a Policy Enforce model or in other words a Configure the Policy and then Enforce the Policy model to enable network installation or game download and activation at predetermined times or game scheduling of selected authorized software components in order to control the software of the network connected gaming system and offer selected games to players. This Policy Enforce method may be constructed on a demonstrable trusted base it offers transparent security and fine grained auditing contrasting with conventional Request Authorize methods that do not demonstrate reliance on a trusted base to enforce the use of only trusted software components.

A network connected gaming system comprises hundreds of authorized certified software components that may be selectively downloaded and scheduled. Considering on going support for 50 customers and for 200 distinctive games over a period of 5 years tens of thousands of software components will each need to receive individual certificates and be certified. Accordingly embodiments of the present invention include an automated certification platform. Herein such a certification platform is denoted Integrated Certification Environment or ICE. Embodiments of such a certification platform according to the present invention are designed to automate the stepping through the procedure that must be done by the regulatory certification authority to produce only authorized software components that may be dynamically installed in a gaming system and to prevent generation of erroneous software components. In addition the ICE offers support to selectively enable the download of approved system software components using Microsoft Software Update Services SUS for example.

Embodiments of the present methods rely on established security standards and a demonstrable trusted base as opposed to relying on security by secrecy in order to offer transparent security and allow fine grained auditing. Embodiments of the present inventions are also applicable to any of the subsystems available in a network connected gaming system that require preventing non authorized software components from executing or affecting the game outcome such as the gaming terminals the game management system CMS or MCS that monitor and control whole or part of the estate of gaming machines the progressive jackpot systems the bonusing systems as well as game payment verification systems such as IGT s EasyPay and Cyberview s PVU Payment Verification Unit and PVS Payment Verification System . Gaming subsystems may be tested against gaming standards such as those produced by GLI the game standards are mandated by game regulators in accordance with local regulation and laws. The network connected subsystems may be located within the premises accommodating the estate of gaming machine connection via a LAN or outside of the premises connection via a WAN .

According to further embodiments of the present invention a game management application is described affording gaming operators the ability to catalog manage search filter categorize push download activate schedule and or remove selected games and other media content to be rendered or played on selected gaming machines by extending a customary interface available for personal consumer devices.

Accordingly a method for controlling media content for network connected gaming machines may include managing selecting and transferring via a download or push paradigm for example regulated games and or other media content in a distributed gaming system the games being selected from a large library of certified games and media content. An embodiment of the present invention includes a plug in for a personal media player whereby the regulated games distributed on CD ROM are catalogued in the media library through a rip like operation and are downloaded to the gaming machines through a sync like operation much like for downloading music photos and movies to a personal music device. Preventing execution of non authorized games and or content may be enforced in the gaming machine through software restriction policy SRP much like digital rights management DRM prevents listening or viewing illegal media files. Other media content such as promotional photos videos and audio may be transferred to selected gaming machines and controlled through the same casino media player. Operators already acquainted with downloading media content to portable media player such as the Apple iPod Microsoft Zune and other media e.g. MP3 players will feel immediately at ease with downloading regulated gaming content to selected gaming machines via a similar paradigm.

Popular PC media players such as Microsoft Media Player and WinAmp feature a SDK software Developers Kit or plug in API Application Programming Interface allowing software developers to extend the basic functionalities of the player to include new capabilities. Although these media players are primary aimed at cataloging and playing immediately media on the host PC then optionally downloading selected media to a portable media player e.g. iPod Zune their functionally may be advantageously extended to support games as well. Non regulated consumer games such as Halo Doom and Flight Simulator are very large in size and may span over several CD ROMs or DVD ROMs which makes them unwieldy to manage via a customary media player interface. In contrast regulated games such as video slot machine games and video poker games are contained within a well delimited and controlled envelop or package that comprises all necessary files may advantageously be managed via a casino media player according to embodiments of the present invention. Sieving through the game play parameters of a large library of regulated games using the same in build search and classification tools album artist genre star rating immediate search accelerators etc. . . . adapted for use with media content for gaming machines according to embodiments of the present invention therefore is believed to be very intuitive. Embodiments of the present invention may be used by casino operators to select and schedule regulated games and other media content for activation on selected gaming machines for selected periods of time. Alternatively embodiments of the present invention may be deployed on gaming machines to enable the players of the gaming machines to search and select a regulated game together with for example audio and or video content that he or she may wish to listen to and or view during game play. When used at the central site a game operator may use the casino media player according to an embodiment of the present invention to search for and select games together with audio and or video content that may be downloaded or pushed to selected gaming machines to be made available to the players.

The regulated games may but need not be received at the casino premises on a CD ROM or a DVD supplied by the game supplier. A regulated game contained in a CD ROM or DVD may advantageously be read and cataloged into the casino media player or into the media library that is accessible to the casino media player via a rip like operation subsequent to which an icon symbolizing for example a CD with a CD tray photo representative of the game title may be added to the media library. The casino media player plug in software according to an embodiment of the present invention may bind all the security data found on the CD ROM to the virtualized CD now entered in the media library. The security data may include the software restriction directive derived during the certification process. When selected for immediate play via the casino media player the software restriction policies are enforced. When selected for download to selected gaming machines via the casino media player sync like command the code of the regulated game may be downloaded or pushed to the remote gaming machines via the network and the software restriction policies may be enforced in each of the selected gaming machines to which the regulated game s has been downloaded or pushed .

As customary with consumer media players when the user clicks the mouse on a CD icon with the right or menu button a list of possible actions may be displayed to enable the user to choose from a number of selections of possible actions with respect to the file represented by the icon such as play now add to queue add to playlist add to connected device etc. . . . Similarly according to further embodiments of the present invention right clicking on a game CD icon the plug in software enables the casino operator to choose from a number of selections of possible actions with respect to the game and or other media content represented by the icon such as for example download or push to a predetermined bank of gaming machines schedule to activate at 10 00 pm etc. . . . When selecting a function via the right click button the function may advantageously open a pop up window interface such as a graphical GUI for a scheduler a graphical floor map showing all or portion of the gaming machines that may support the selected games.

According to another embodiment thereof the present invention may be implemented as complete proprietary developed software that intrinsically provides the functions of the plug in described above for regulated games that are controlled via a CD icon Graphical User Interface GUI and that in addition provides the customary functions of a consumer media player for standard media files.

Accordingly an embodiment of the present invention is a method for controlling audio video media content for network connected gaming machines. The method may include steps of providing a media player configured to manage audio video media content stored in a media library and to transfer audio video media content to personal audio visual media player devices providing a plug in for the media player the plug in being configured to enable the provided media player to transfer audio video media content from the media library to selected gaming machines coupling the provided plug in to the provided media player adding audio video media content to the media library selecting audio video media content from the media library using the media player and coupled plug in and transferring the selected audio video media content from the media library to the selected gaming machines using the media player and coupled plug in.

The plug in may be further configured to enable the provided media player to control the audio video media content when the transferred selected audio video media content is loaded on the selected gaming machines. The media player may be a consumer media player and the second providing step may be carried out by a developer that may be different from the developer of the consumer media player. The first providing step may include a step of providing an Application Programming Interface API and or a Developer s Kit SDK and the second providing step may include using the API and or the SDK to provide the plug in. A step may be carried out of a first supplier developing the provided media player and a step of a second supplier developing the provided plug in and the first supplier may be different from the second supplier. The method may further include a step of a first supplier developing the provided media player and a step of the first supplier developing the provided plug in. The second providing step may be carried out with the provided plug in being configured to enable the provided media player to control an availability of the transferred audio video media content on the selected gaming machines. The selected audio video media content may include digital rights management functionality. The method may further include a step of authorizing installation of transferred audio video media content on the selected gaming machines by software restriction policy SRP . The method may further include a step of authorizing playback of the transferred audio video media content on the selected gaming machines by software restriction policy SRP . The availability controlling step may be carried out via a scheduler software module that may be accessible via the media player and coupled plug in. The availability controlling step may be carried out via a menu designer software module accessible via the media player and coupled plug in. The availability controlling step may be carried out via a floor plan editor software module accessible via the media player and coupled plug in. The floor plan editor software module may provide a graphical representation of a plurality of gaming machines and their physical distribution within one or more gaming establishments or a portion thereof.

The audio video media content may include metadata to define for example a producer studio media name media genre media year and media rating of the selected audio video media content to name only a few possibilities. The second providing step may be carried out with the plug in enabling the media player to select display and transfer the audio video media content based upon the metadata of the media content. The media library may be stored on a deployment server coupled to the network and the media player may be executed on an authorized computer device coupled to the network. The adding step may be carried out with the audio video media content being retrieved from a CD ROM or a DVD ROM for example . The selecting the audio video media content make use of a free text entry selection acceleration to enable rapid selection of audio video media content according to related indexed embedded information and metadata the selection being narrowed as each character is typed in.

The media player may be a software media player that may be configured to execute on a mobile device coupled to the network and at least the selecting and transferring steps may be carried out from the mobile device. The method may further include the mobile device carrying out a step of accepting an identification of a group of gaming machines from a user and the audio video selecting step may be carried out from a selection set of audio video content from the media library that has been narrowed according to capabilities of constituent gaming machines of the identified group of gaming machines. The method may further include a step of accepting an identification of a group of gaming machines from a user and subsequent to accepting an identification of the group of gaming machines the floor plan editor software module may carry out a step of narrowing those gaming machines that may be controlled via the floor plan editor to only the gaming machines in the identified group. The floor plan editor software module may be configured a to allow free text selection acceleration entry and b to narrow the selection of gaming machines subsequent to receiving each character according to indexed identifiers of individual or groups of gaming machines and c to control the selected gaming machines.

According to another embodiment thereof the present invention is a method for controlling regulatory certified game content for network connected gaming machines. The method may include steps of providing a media player configured to manage audio video media content stored in a media library and to transfer audio video media content to personal audio visual media player devices providing a plug in for the provided media player the plug in being configured to enable the provided media player to a add regulatory certified game content to the media library b select the regulatory certified game content from the media library and c enable transfer of regulatory certified game content from the media library to selected gaming machines coupling the plug in to the media player adding regulatory certified game content to the media library selecting regulatory certified game content from the media library using the media player and coupled plug in and transferring the selected regulatory certified game content from the media library to the selected gaming machines using the media player and coupled plug in.

The plug in may be further configured to enable the provided media player to control the regulatory certified game content when the transferred selected regulatory certified game content is active on the selected gaming machines. The media player may be a consumer media player and the second providing step may be carried out by a developer that is different from the developer of the consumer media player. The first providing step may include a step of providing an Application Programming Interface API and or a Developer s Kit SDK and the second providing step may include using the API and or the SDK to provide the plug in. The method may further include a step of a first supplier developing the provided media player and a step of a second supplier developing the provided plug in and the first supplier may be different from the second supplier. The method may further include a step of a first supplier developing the provided media player and a step of the first supplier developing the provided plug in. The second providing step may be carried out with the provided plug in being configured to enable the provided media player to control an availability of the transferred regulatory certified game content on the selected gaming machines. The method may further include a step of authorizing installation of transferred regulatory certified game content on the selected gaming machines by software restriction policy SRP . The method may further include a step of authorizing execution of the transferred regulatory certified game content on the selected gaming machines by software restriction policy SRP . The availability controlling step may be carried out via a scheduler software module that may be accessible via the media player and coupled plug in. The availability controlling step may be carried out via a menu designer software module accessible via the media player and coupled plug in.

The availability controlling step may be carried out via a floor plan editor software module accessible via the media player and coupled plug in. The floor plan editor software module may provide a graphical representation of a plurality of gaming machines and their physical distribution within at least one gaming establishment or a portion thereof. The regulatory certified game content may include metadata to define for example a game studio game name game genre game year game rating and return to player RTP of the selected media content to name but a few possibilities. The second providing step may be carried out with the plug in enabling the media player to select display and enable transfer of the regulatory certified game content based upon the metadata of the game content. The media player may be a software media player that may be configured to execute on a mobile device coupled to the network. The media library may be stored on a deployment server coupled to the network and the media player may be executed on an authorized computer device coupled to the network. The adding step may be carried out with the audio video media content being retrieved from a CD ROM or a DVD ROM. Similarly the adding step may be carried out with the regulatory certified game content being retrieved from one of a CD ROM and a DVD ROM among a number of possible data carriers as the embodiments described herein at not limited to retrieving media content or regulatory certified games from CD ROMs or DVD ROMs . Selecting the audio video media content may make use of a free text entry selection acceleration to enable rapid selection of audio video media content according to related indexed embedded information and metadata the selection being narrowed as each character is typed in. Similarly selecting the regulatory certified game content may make use of a free text entry selection acceleration to enable rapid selection of regulatory certified game content according to related indexed embedded information and metadata the selection being narrowed as each character is being typed in.

The media player may be a software media player that may be configured to execute on a mobile device coupled to the network. The mobile device may carry out a step of accepting an identification of a group of gaming machines from a user and the regulatory certified game content selecting step may be carried out from a selection set of regulatory certified game content from the media library that has been narrowed according to capabilities of constituent gaming machines of the identified group of gaming machines. The method may also include a step of accepting an identification of a group of gaming machines from a user and subsequent to accepting an identification of the group of gaming machines the floor plan editor software module carries out a step of narrowing those gaming machines that may be controlled via the floor plan editor to only the gaming machines in the identified group. The floor plan editor software module may be configured a to allow free text selection acceleration entry and b to narrow the selection of gaming machines subsequent to receiving each character according to indexed identifiers of individual or groups of gaming machines and c to control the selected gaming machines.

Reference will now be made in detail to the construction and operation of preferred implementations of the present invention illustrated in the accompanying drawings. The following description of the preferred implementations of the present invention is only exemplary of the invention. The present invention is not limited to these implementations but may be realized by other implementations.

It will be apparent to those of skill in the art of software development that intrinsic information that uniquely identifies each executable software component may be obtained in various combinations of assembly directives and file property fields. Additional information may be configured such as for example the software component part number major version number minor version number build number revision number project name type of software component language variant game regulation variant friendly name identification of the certification laboratory identification of the client and other predetermined identification identifiers. The identifiers associated with the executable software component using source code assembly directives may therefore be traceable via the File Property features of the Windows operating system.

An example of such a configuration is CST3000 0006 00001 00 1.0.1.0 21 11 9 S CyberInv.exe that comprises a concatenation of identifiers that may be used in a file name or a PKI certificate subject name. According to this example CST3000 is the marketing system product identification or the project name 0006 00001 00 is the software component part number 1.0.1.0 details the software component major version number minor version number build number revision number 21 is the software component variant identifier 11 identifies the certification lab that certifies the software component 9 identifies the customer for which this software component is certified S is the software component language variant S for Spanish in this example CyberInv.exe is the software component friendly name for quick identification. Spaces may be used freely and the identifier fields may be written in any order so as to facilitate reading. Identifier fields may be omitted whenever the context already provides such information. The framing or delimiter characters such as which are allowable characters to be used in file names and certificate subject names facilitate human recognition as well as string searches for particular attributes global search for all Spanish variants for example .

In the same manner a selected set of identification information making up the certificate subject name may be used for making up the file name of PKI certificate related files such as .CER .P7B and .PVK such as to facilitate human identification string searches and file searches.

Reference numeral in illustrates the information that may be entered to configure a type certificate Software Restriction Policy rule. A Software Restriction Policy SRP may be configured using the Group Policy Object Editor . The type certificate Software Restriction Policy rule may be entered in the Additional Rules node of the Software Restriction Policy object . In the part number version and friendly name configured in the source code assembly are recognizable in the certificate subject name .

Reference numeral in illustrates an exemplary cycle from the moment a game is being created until it is first executed on a gaming terminal according to an embodiment of the present invention. The flowchart starts at when the decision to initiate a project to develop and release a new game is made. The game developer Cyberscan here for illustrative purposes only develops a new game application whose code must be certified at by a recognized certification lab . The certified code must then be signed as shown at using PKI certificates produced by a certificate issuing authority CA controlled by a trusted party . The trusted party may be the certification lab . The signed executable software components may be packaged in code signed MSI installation packages signed in a manner substantially identical to the executable software components that is with a unique PKI certificate whose subject name contains part number version and friendly name identifiers for the MSI package. The MSI packages together with scripts may then be copied to a removable media such as a CD ROM for example.

The game operator receives the CD ROM and when it decides to deploy the new game it copies the packages and associated scripts from the removable media into a library repository on a server the DEPLOY server in this case . The scripts contain automation tasks such as copying to the repository and configuring the policies.

In the case of gaming terminals connected in a LAN each gaming terminal is controlled by the policies as soon as they are enforced. The Software Installation Policies SIPs controlling the installation of the new game automatically execute the MSI installation packages upon policy enforcement provided the corresponding Software Restriction Policies have been configured to authorize the execution of the MSI installation packages. This process is performed at . If no SRP authorizes the execution of the MSI installation packages the installation is ignored as shown at . When the MSI installation package is authorized to execute the software components and other files contained in the package may be copied to the gaming terminals as suggested at reference numeral . Other configuration tasks may also be carried out during the Microsoft installer installation process such as for example setting the Windows registry setting shortcuts and installing software patches.

Download of the game software components from the game repository to the gaming terminals may occur as soon as the associated Software Installation Policies are enforced and the SRPs for the MSI installation package is permitted accordingly . Therefore scheduling of the download may be achieved by simply enforcing the associated software installation policies at a given time this may be accomplished by having an operator manually enforcing the SIP at a predetermined time via the group policy management console or having a process automatically enforcing the SIP at a predetermined time via the API to the group policy management console. Enforcing a policy may be achieved by linking the selected policy to the selected policy object in the domain controller active directory.

Game activation that authorizes execution of the game may be achieved by enforcing the associated Software Restriction Policies. In the same manner scheduled game activation and deactivation in order to offer selected authorized games to the players at predetermined authorized times may be achieved by simply enforcing the associated Software Restriction Policies at a given time this may be accomplished by having an operator manually enforce the SRP at a predetermined time via the group policy management console or having a process automatically enforce the SRP at a predetermined time via the API to the group policy management console. Enforcing a policy may be achieved by linking the selected policy to the selected policy object in the domain controller active directory. Alternatively a selected executable software component may be prevented from executing by configuring its associated SRP security level to disallowed. 

At this stage a global verification process as described relative to may advantageously be executed to verify the trust of every software component installed on the gaming terminal. Should the global verification fail the gaming terminal may be locked at pending servicing by an attendant.

When a player selects a game from a gaming terminal from a selection menu and requests execution thereof as shown at the authentic odes of the game s executable software components are verified by the associated enforced Software Restriction Policy as shown at before beginning execution . Should the authenticode verification fail at the gaming terminal may be locked at pending servicing by an attendant. If the code is trusted as verified by the associated enforced SRP the game is allowed to execute as shown at .

Policy changes are automatically distributed by the Windows server operating system throughout the network connected gaming system at periodic intervals this automatic process may be disabled if required. Alternatively the RegisterGPNotification function may be used by the game application software executing on each gaming terminal to check if an applicable group policy has changed. The gaming terminal may then decide on enforcing the policies locally immediately. The gpupdate.exe service the Refresh Policy function or the RefreshPolicyEx function may be used by the game application software executing on each gaming terminal to enforce the configured policies. A reboot may optionally be performed in order to recheck the gaming terminal trusted base and ensure the policies have been completely enforced long game installation for example .

The RegisterGPNotification function enables an application to receive notification when there is a change in policy. When a policy change occurs the specified event object is set to the signaled state. Further information on the RegisterGPNotification function may be found at the Microsoft Development Network Library website. The RefreshPolicy function causes policy to be applied immediately on the client computer. Further information on the RefreshPolicy function may be found at the Microsoft Development Network Library website. The RefreshPolicyEx function causes policy to be applied immediately on the computer. The extended function allows specifying the type of policy refresh to apply to be specified. Further information on the RefreshPolicyEx may be found at the Microsoft Development Network Library website.

The menu of authorized games offered to the player may be dynamically generated by each terminal without requiring the central system to dispatch the list of authorized games or having each terminal fetch the list of authorized games from the central system this may be done by having each terminal check the policies enforced on the games. This may be accomplished by having a process in each terminal attempt to execute each of the entry point for each game the parent module which is first called upon selecting a game to play . If the execution succeeds then the game is authorized and may be added to the games menu offered to the player. If the execution is denied SRP is unlinked or the security level is disallowed then the game is not authorized and it is removed from the games menu offered to the player. Similarly if a game entry software component file is not found then the software is not installed or has been removed and is removed from the games menu offered to the player. The process of dynamically generating the game selection menu may be optimized in many ways in order to reduce the game time to start overhead to check if it is authorized.

In a casino although new games may be scheduled to be downloaded to gaming terminals and activated at predetermined times it is a requirement that games may not be changed while a player is playing. In practical terms a player is considered to have terminated his or her game play when the player s credit balance remains at zero for a predetermined period of time. The predetermined period time is sufficient for allowing the player to enter a new bill or other form of credit instrument to continue playing. Therefore the game application software on each game terminal may according to embodiments of the present invention continually test for this condition credit 0 for a predetermined time before checking for change in policy enforcing the policy changes and then updating the menu of games to be made available to the next player.

The process may start with a computer cold or hot reboot such that the operating system trusted base may be thoroughly verified before the game software components are verified. The trusted base is detailed in commonly assigned and copending US application serial number PCT US2002 029927 entitled Secure Game Download the specification of which is incorporated herein by reference and also in Microsoft Next Generation Secure Computing Base NGSCB also incorporated herein by reference. Details of Microsoft s NGSCB are located at the Microsoft NGSCB web site. During the trusted base verification the integrity of the Driver Signing framework the Windows File Protection framework and Software Restriction Policies framework are verified. With NGSCB operating system such as forthcoming Longhorn a framework called Nexus deeply integrated directly within the hardware components in each major chipsets and the BIOS which constitutes a mechanism for authenticating the trustworthiness of the software and hardware configuration is booted prior to checking the integrity of the Driver Signing framework the Windows File Protection framework and Software Restriction Policies framework.

On completion of the operating system boot up or at another time the global verification process may be executed. The CyberInv process is also shown and described at . The CyberInv process verifies all the executable files in given folder trees such as .exe .dll .ocx .vbs .bat .msi .cab for example for trustworthiness. If any file is found to be untrusted as shown at then the gaming terminal may be frozen as shown at pending examination by security personnel. A spreadsheet file may be produced that list the verification status of each executable file. If the authenticode of all the files is trusted as shown at then the CyberInv process returns at a trusted status as shown at . Consequently all of the executable software components may be considered to be trusted as shown at .

However it is to be noted that the fact that an executable software component is trusted does not imply that the software component is authorized to execute it merely indicates that the software executable software component has a valid authorized authenticode certificate and that the software component binary data is not corrupted. Checking whether an executable software component having a valid authorized authenticode certificate is authorized to execute requires that the applicable Software Restriction Policy be checked. This may be performed automatically when the software component is loaded by the operating system to start its execution either when dynamically building the menu of authorized games or each time upon starting execution of the game when the player has selected a game to play or using an appropriate service that may be called by an application.

Although RM Rights Management and DRM Digital Rights Management technology from Microsoft is readily available for authenticating the trustworthiness of non executable files such as media files Word files and emails for example it adds management complexity on top of the Software Restriction Policy framework when used in a network connected gaming system. Addressing this embodiments of the present invention offer a method for a network connected gaming system to trust non executable files such as initialization or configuration files video files sound files multimedia files file containing list of hashes CRCs and or signatures. The present method relies on packaging the non executable files in a MSI installation package the MSI package being subsequently code signed with a unique certificate and the appropriate Software Restriction Policy is configured to enable installation execution in fact of this MSI package. Executable files and non executable files may be packaged together for convenience. The selected aggregate of executable files and non executable receives at least a part number and preferably a version number as well that is used in the subject name of the associated certificate. Consequently according to embodiments of the present invention when the MSI package is installed the installed non executable files are obtained from a trusted and authorized source.

As the CyberInv process has authenticated the trustworthiness of all the .msi files therefore whenever there is a need to ensure that the non executable files are trusted the associated MSI package is re installed. It is to be noted that the service that performs the installation of the MSI packages msiexec.exe in the current versions of Windows may be executed with a variety of execution modifiers such as those shown at the Mircrosoft TechNet website. Of particular interest is the c option that reinstalls a file if it is missing or if the stored checksum of the installed file does not match the new file s value the log file will contain the anomalies detected for subsequent forensic analysis as shown at . In the global verification process the c option of the msiexec.exec command may be used for re installing every package containing configuration files such as initialization or configuration files files containing list of hashes CRCs and or signatures Flash files Macromedia Flash and Director and other media assets files in order to ensure the trustworthiness of these files.

Subsequent to completion of process all the MSI packages for the executable software components may be re installed with for example the msiexec.exe command using the p option in order to re install missing authorized executable software components the log file will contain the anomalies detected for subsequent forensic analysis .

Subsequent to the successful completion of the global verification process the trustworthiness of the game application framework is established and may be started as shown at .

It is to be noted that when a player wins an amount equal to or greater than 25 000 in a casino there is a requirement to check the integrity of the gaming application. With legacy gaming terminals the gaming terminal is powered down and the ROMs are extracted in order to be verified in a trusted verifier named a Kobetron. The Kobetron produces a signature for each of the ROMs that is compared with the corresponding signature produced by the certification lab. In this manner the integrity of the all the software components of the legacy gaming terminal including the operating system the game application and the configuration data may be verified. According to embodiments of the invention when executing the global verification process subsequent to the gaming terminal bootup at a verification equivalent to a Kobetron verification may be performed. This metaphor helps greatly in the acceptability of downloadable game technology by game regulators who are reluctant to accept state of the art operating systems multimedia and network technologies.

The game developer supplies the certification lab with a CD ROM or other media containing the software components to be tested as shown at . The certification lab then certifies the software components supplied on the CD ROM and provides the game developer with a CD ROM containing the certified software components for deployment as shown at . The CD ROM containing the authorized software components that were tested and certified by the certification lab may then be provided to the game operator e.g. the casino for installation and deployment on one or more of the gaming machines GM GM GM coupled to the network . The certified authorized software components are code signed using a certificate produced in accordance with an embodiment of the present invention as described hereinabove. The network is preferably not coupled to any external network as suggested at .

Step at may include compiling the source code and producing binary executable code. Microsoft Visual Studio is constructed so as to manage source code as projects a project can be a given game regrouping all of the dependent source code and data files. Step is also referenced as building the projects or BUILD Projects as shown at . Media assets may require a different compiling environment on the DEV computer such as the Macromedia Director .

Step shown at may include producing the projects MSI packages for the source code compiled in Step . Relevant non executable file such as configuration files and media assets may be packaged in MSI packages with the compiled source code. It is to be noted that packages will be built again step hereafter after code signing of EXE DLL OCX and other executables step hereafter . Step may be referenced as BUILD Packages Pass .

The CyberInv.exe process produces the CyberInv.xls Excel spreadsheet file shown at which is examined by an authorized user in the MS Excel program . The CyberInv.xls file is copied to the folder Step CyberInv folder in in . The binary files having just been compiled are not code signed consequently the authenticode field shows an Untrusted status for each of the binary components. The friendly name file type part number and version including build number are extracted directly from the assembly information contained in the source code therefore truly reflecting the identity of the source code component.

Because the build number is incremented each time the code is recompiled in a Build operation it is to be noted that the version number will change accordingly. The authorized user eliminates the rows that are irrelevant to the game to be certified and saves the file under the CyberCert.xls file name which contains the necessary friendly name executable type part number and version information to compose the PKI certificate subject name in accordance with method detailed at for subsequent code signing. The program path location of the unsigned software components is also available for later retrieval of the unsigned binary file. The CyberCert.xls file is copied to the folder Step CyberCert folder in in .

The CyberCert.xls file may be securely copied in encrypted form to a removable media such as a floppy disk a CD ROM or a USB disk or alternatively transferred to another location by secure communication means.

The CyberCert.xls file is split into 2 files CyberSign1.xls and CyberSign2.xls . CyberSign2.xls contains only the rows associated to the MSI packages and CyberSign1.xls contains the rows corresponding to the other executable file. CyberSign1.xls is copied to the Step CyberSign Pass folder in in and CyberSign2.xls is copied to the Step CyberSign Pass folder.

Step at includes having a certification authority CA located at the game developers site or controlled by an authorized trusted party such as VeriSign generating certificates in accordance with the details provided in the CyberCert.xls file that is with a subject name created in accordance with the method detailed relative to . An automated process CyberCert.exe executing on the off line CA computer Windows server named CS11 may automate the generation of the PKI public certificates and the associated private keys using the CyberCert.xls file.

The trusted root certificate for the authorized CA is supplied to the certification lab the game regulators or other parties for reference and for importing as a trusted root into the ICE computer system and the gaming system certificates store.

The public certificates and their associated private keys are forwarded to the DEV computer of the ICE system in encrypted form on a removable media such as a floppy disk a CD ROM or a USB disk or alternatively transferred by secure communication means. Public certificates and their associated private keys that are associated with the MSI packages are copied into the Step CyberSign Pass folder in and the other public certificates and their associated private keys that are associated with other software components are copied to the Step CyberSign Pass folder.

Step includes steps of code signing the non MSI executable components listed in the CyberSign1.xls file using the corresponding public certificates and their private keys . The code signing may be performed using the SignCode.exe utility provided by Microsoft or equivalent. A password may be required for the private key depending on the security option selected when generating the certificate at the CA. The CyberSign.exe process may automate the code signing of all the non MSI executable components listed in the CyberSign1.xls file using the friendly name file type part number and version including build number given in each row. The CyberSign.exe process may call the SignCode.exe utility or the equivalent API. During the code signing process the compiled executable software components may be replaced at by their code signed form. Step is designated as CodeSign Pass .

Step at includes re building all the MSI install packages performed during step at . This time the MSI packages contain the non MSI code signed executable components.

Step at includes code signing the MSI executable components listed in the CyberSign2.xls file using the corresponding public certificates and their private keys . The code signing may be performed using the SignCode.exe utility provided by Microsoft or equivalent. A password may be required for the private key depending on the security option selected when generating the certificate at the CA. The CyberSign.exe process may automate the code signing of all the MSI executable components listed in the CyberSign2.xls file using the friendly name file type part number and version including build number given in each row. The CyberSign.exe process may call the SignCode.exe utility or the equivalent API. During the code signing process the executable MSI software components may be replaced by their code signed form. Step is designated as CodeSign Pass at . The executable MSI software components are copied as shown at to the CD Pre Burn repository .

Because of the necessity of performing step the CyberSign code signing process to be used for the ICE Integrated Certification Environment is designated a 2 Pass code sign as indicated at .

Step includes a configuring the software restriction policy SRP for the ICE system test gaming terminals via the active directory in the domain controller DC with the certificate rules corresponding to the certificate produced at step the .p7b certificate at reference numeral may be converted to .cert certificates for compatibility reasons when configuring the SRP b configuring the Software Installation Policy SIP for the ICE system test gaming terminals with the MSI packages produced at step then c using the GPMC Group Policy Management Console or equivalent service exporting the SIP via SIP export scripts and the SRP via SRP export scripts the policy export facility is available in the Group Policy Management Console GPMC . These SIP and SRP export scripts may be copied into the folder Step SIP SRP folder in . These SIP and SRP export scripts may be later imported in the gaming operator s gaming system for enforcing the policies on the game components. SIP export scripts and SRP export scripts are stored in the CD Pre Burn repository or into the folder Step CD Burn Casino Release folder in .

Step at includes steps of burning at to a CD ROM or other removable media the content of the CD Pre burn repository comprising a the executable MSI software components b the SIP export scripts and SRP export scripts and c other automation scripts in order to automate the installation of a and b . A copy of CD ROM may be forwarded a to the gaming operator s gaming system for game deployment such as a casino b to the certification lab and c a trusted party such as a lawyer or in escrow for impartial reference in case of later dispute. The CD ROM may later be inserted at in the gaming operator s gaming system for game deployment.

Step at includes steps of a taking a snap shot of the entire development environment for a selected certified game Visual Studio repository and Visual Source Safe repository that contains all the source file the compiled code signed executable files and dependant executable files the non executable files project solution automation scripts the source and compiled signed code from other development platforms the media assets from media development platforms such as MacroMedia Director in b taking a snap shot of the code signed MSI installation packages in c optionally encrypting them and then in d copying them into a CD pre burn repository or into the folder Step CD Burn VS Snapshot folder in .

Step at includes steps of burning at to a CD ROM or other removable media the content of the CD Pre burn repository comprising the software components of step . A copy of CD ROM may be forwarded to the certification lab and to a trusted party such as a lawyer or in escrow for impartial reference in case of later dispute.

Steps to step should be carried out each time a source code is being recompiled subsequent to a modification because a unique certificate must be associated to each build. Deviating from this order may jeopardize certificate integrity because of the risk of a human error that may result in the wrong certificate being used during the code signing process.

Noting the hierarchical tree composed of the OUs and sub OUs illustrated at all the policies apply to the OU Gaming Terminals Floor which contains all the sub OUs and . Using this technique all the policies may apply to all the 3000 gaming terminals of a large casino. In the same manner the policies apply to the bank the policies apply to the bank and the policies apply to the bank .

In the illustration the exemplary game named Roulette is assigned a policy named Sbm1.5 SIP Roulette GLI which configures the Software Installation Policy SIP and a policy named Sbm1.5 SRP Roulette GLI which configures the Software Restriction Policy SRP for that game.

In the same manner the exemplary game named Infinity is assigned a policy named Sbm1.4 SRP Infinity GLI which configures the Software Installation Policy SIP and a policy named Sbm1.4 SRP Infinity GLI which configures the Software Restriction Policy SRP for that game.

The keyword Sbm1.4 in this example denotes the certification submission number 1.4 and the keyword GLI denotes the certification lab GLI Game Laboratories International approving the Infinity game software.

In the illustration all of the game terminals regrouped in the bank Ashown at are therefore configured to execute the Roulette game all the game terminals in the bank Bshown at are configured to execute the Roulette game and the Infinity game and all the game terminals in the bank Cshown at are configured to execute the Infinity game.

Package friendly name Infinity95.msi contains the executable software components for the Infinity game and package friendly name Infinity95.Config.msi contains the configuration files the non executable files for the Infinity game. Package Infinity95.Config.msi is re installed in the process .

The certificate rules and that are configured with the Unrestricted attribute authorize the installation of the software components for the Infinity95 game contained in the two MSI installation packages and by authorizing the unique PKI certificate associated to those MSI produced in accordance with the present method. The . dll executable software component is authorized has its security level attribute set to Unrestricted and is therefore authorized to execute once it is installed.

The two MSI installation packages and for installing the software components for the Infinity95 game have their associated unique PKI certificate and produced in accordance with the method described herein configured with the Unrestricted security level attribute via the certificate rules thus enabling or authorizing execution and installation of the software components for the Infinity95 game.

The . dll executable software component contained in the package has its security level attribute set to Unrestricted thus it is authorized to execute once it is installed.

Alternatively the same procedure may be automated via an API called from an appropriate application. It is to be noted that the linking of the policy will in fact enable the enforcement of the policy but the policy will only be enforced on the gaming terminal when a gpupdate command or equivalent command is performed at the terminal a terminal reboot may also be required for the policy to be enforced. Also to be noted is that policy changes are automatically distributed by the Windows server operating system throughout the network connected gaming system at periodic intervals this automatic process may preferably be disabled such as to obtain more predictable policy enforcement changes by issuing explicit commands instead.

Enabling enforcement of policies as described relative to and may be carried out interactively by an authorized user at predetermined authorized times or alternatively may be controlled by a process at predetermined authorized times via the appropriate API. At the central system the game download server in this illustration at a given time a user or a process may verify a change in the list of games to be made available to players on a selected set of gaming terminal banks. In case of a schedule change as shown at or other reasons such as introducing a new game or revoking an existing game policies on the domain controller are being changed accordingly either interactively by a user in the Group Policy Management console as described for and or by a process via the equivalent APIs . The changed policies are being enabled for enforcement at in the domain controller.

In a casino although new games may be scheduled to be downloaded to gaming terminals and activated at predetermined times it is a requirement that games are not to be changed while a player is playing. In practical terms it is considered that a player terminates playing when his or her credit balance remains at zero for a predetermined period of time. The predetermined period time should be sufficient to allow the player to enter a new bill or other form of credit or payment instrument to continue playing. Therefore the game application software on each game terminal continually tests for this condition credit 0 for a predetermined period of time before checking for change in policy enforcing the policy changes and then updating the menu of games to be made available to the next player.

Upon power up each gaming terminal executes a boot loads its operating system and enforces the policies that are configured at the time of the start up process. When the game application starts at it displays a menu of authorized activated games as shown at to the player using for example the dynamic method described relative to . Whenever the player balance is non zero the player may play as shown at the games listed on the menu in accordance with the enforced policies. When the player s balance reaches zero at and remains zero for a predetermined period of time it is considered that the player is no longer playing. The gaming application of the gaming terminal may then verify at if a policy has changed . This may be done via the RegisterGPNotification. The RegisterGPNotification function enables an application to receive notification when there is a change in policy. When a policy change occurs the specified event object is set to the signaled state. Additional details regarding the RegisterGPNotification function may be found at the Microsoft Development Network Library website.

At if there is no change in policy the games listed on the menu will be unchanged for the next player. If there is a change in policy at the gaming terminal may enter into a process whereby the policies are enforced as shown at using for example the gpupdate.com service the RefreshPolicy function or the RefreshPolicyEx function or equivalent services or API. It is to be noted that the verification of change in policy and the enforcement of the changed policies may be carried out by each terminal independently.

The RefreshPolicy function causes policy to be applied immediately on the client computer. Additional details regarding the RefreshPolicy function may be found at the Microsoft Development Network Library website.

The RefreshPolicyEx function causes policy to be applied immediately on the computer. The extended function allows specifying the type of policy refresh to apply. Additional details regarding the RefreshPolicyEx function may be found at the Microsoft Development Network Library website.

Once the change in policy is enforced at the gaming terminal may reboot as shown at or exit and re enter the gaming application which would dynamically recreate the menu list of games to be made available to the next player as detailed at .

A similar method relying on explicit WMI calls and administrative templates .adm may be applied to obtain the same result in gaming environments whereby the domain controller active directory is not available such is the case with gaming terminals connected in WAN Wide Area Network whereby the network bandwidth is limited or the network availability is poor.

An alternative method relying on SMS System Management Server code download instead of SIPs Software Installation Policy for installing software components and software MSI packages may be used. However the executable software components remains under SRP Software Restriction Policy in accordance with the unique PKI certificate generated for each component as described in the invention.

The process may involve several subsystems as illustrated in the central game control wherein policies are selected the domain controller that enables enforcement of the policies a selection set of gaming terminals wherein each gaming terminal enforces the policies and make the selected games available to the player a central game monitoring system that produces activity reports in real time .

The process shown at of comparing the observed activity and the targeted activity and then selecting a change in game policies may be carried out by the floor manager or the floor director or alternatively by a knowledge base process. In both cases a close loop enforcement of policies relying on the unique PKI certificate SRP associated to each executable authorized and certified software component is achieved resulting in the dynamic configuration of the gaming system either for LAN configurations such as casino floors or WAN configuration such as video lottery terminals distributed across a large geographic area .

Embodiments of the present invention therefore provide secure means to update a list of authorized games to be offered to the player. The menu of authorized games offered to the player may be dynamically generated by each terminal without requiring the central system to dispatch the list of authorized games or having each terminal fetch the list of authorized games from the central system both are illegal without extreme precaution of the same order as the installing downloading of software components using a unique PKI method because they may affect the game outcome this is achieved by having each terminal checking the certificate Software Restriction Policies enforced on the games a unique PKI certificate being generated for each of the executable game components in accordance with the methods detailed in this document .

As illustrated in at each terminal when executing the gaming application gets a list of the file names for the games available at from a trusted configuration file an updated trusted configuration file may have been downloaded in a certified code signed MSI package with the last game download and a menu is initially compiled for this list. Attempts to execute each of the game entry module of the games contained in the list are made. If the game entry module is not found at the software components do not exist on the gaming terminal and the game is removed from the menu whereupon the process iterates to next game as suggested at . If the execution of the game entry module is denied at because the Software Restriction Policy is preventing this game to execute the game is removed from the menu as shown at and the process iterates to next game as shown at . If the execution of the game entry module is successful at then the game is authorized and may be added to the games menu offered to the player. The process iterates through other games in the list as shown at if any. Once the iteration is completed at the games menu may be composed at and the menu is displayed to the player at .

Another embodiment of the present invention therefore provides a method to quickly verify the policy enforcement on a game without starting the entire game in order to generate the list of available games to be made available to the player in a menu. For each game a very short companion .dll file may be created having for example only one line of code which would return the exemplary HELLO string when called. Assuming Infinity.dll is the main game component file name or friendly name then the companion file may be named Infinity.Hello.dll . Preferably the companion s source code would have in its assembly information a part number as shown at and a version number as shown at that is identical to the main component part number and a version number but this is not mandatory. In addition assuming the PKI certificate s subject name associated to the Infinity.dll is GDS.exe.0099 0001 00 1.0.101.0 Infinity.dll which is used for the code signing of the Infinity.dll we may proceed with the code signing of Infinity.Hello.dll with the same GDS.exe.0099 0001 00 1.0.101.0 Infinity.dll certificate as shown at .

It is to be noted that code signing two distinct software executables with the same certificate is a deviation from the method taught earlier in this document. However the fact that the role of the companion file is very well defined as having for example only one line of code which would return the HELLO string when called this does not present an issue with the regulators or the certification lab.

The embodiments of the present invention described herein are also applicable to any of the subsystems available in a network connected gaming system that require preventing non authorized software components to execute or affect game outcome such as the gaming terminals the game management system CMS or MCS that monitor and control whole or part of the estate of gaming machines the progressive jackpot systems the bonussing systems as well as game payment verification systems such as IGT EasyPay and Cyberview PVU Payment Verification Unit and PVS Payment Verification System . Gaming subsystems are tested against gaming standards such as those produced by GLI Game Laboratory International the game standards are mandated by game regulators in accordance with local regulation and laws. The network connected subsystems may be located within the premises accommodating the estate of gaming machines connection via a LAN or outside of the premises connection via a WAN .

The methods described in the document rely on software installation policies and Software Restriction Policies which may be configured a via the domain controller active directory as this is advantageously the case whenever the network connection is a LAN and which may also be configured b to each of the local computers via WMI services Windows Management Instrumentation or administrative templates .adm files in order to configure and enforce local group policies when a domain controller is not available as this is the case whenever the network connection is a WAN. Microsoft SMS Systems Management Server may be used as an alternative to using software installation policies.

The methods described in the document leverage on software installation policies and or software restriction policies technology implemented in Microsoft Windows operating system. Whenever similar technology is implemented in other operating systems such as Linux Unix Windows CE and QNX it is considered as part of the invention herein.

In another embodiment of the invention it order to make game regulators more at ease with the huge shift in paradigm from prehensile physically secured ROM based gaming machines whereby access to the ROM is via multiple layers of keys locks and tamper detectors to a totally virtual or volatile fashion of downloading game code via a network it may be advantageous to perform download of the game code when the gaming machine is not operational. Consequently the network downloading of game code from a central repository may not interfere with the games. This is accomplish by terminating all gaming software in order to transform the gaming machine into a generic PC then transferring the game software under the control of the operating system using pervasive network code download available in most information technology networked environments. An Out of service message may be displayed on the screen to indicate that the machine is no longer playable thus is no longer a gaming machine. Once the game code is downloaded by the generic PC the game code is verified for trustworthiness and is executed thus transforming the generic PC back into a gaming machine.

Prior art depicts how conventional consumer media players allow individuals to transfer media content from a variety of sources to personal media devices like Apple s Ipod or Microsoft s Zune or other digital media players. Individuals typically use media player software on their personal computer to store manage and retrieve media content. Users may listen to the audio media on large speakers and may view the video media on a large display attached to their PC or alternatively on a network connected Microsoft XBOX gaming console having media extender capability. The main sources of input into such media players are music CDs digital photos and video and media content downloaded from the Internet which are ripped or downloaded into the PC. The library of media stored on the PC may be very large and span hundreds of gigabytes. A selected portion of the media library may then be distributed to docked mobile personal media devices like Apple s iPod and Microsoft s Zune via a sync or synchronization . Thereafter when the device is undocked and transported the individual may listen and view the media on the road. During a sync operation media content may also be transmitted from an individual s personal media device back to the PC media player provided that the individual owns rights to any copyrighted material. At home the most common media transmitted during a sync operation are music digital photos and video . DRM or Digital Rights Management technology may be used to verify that a user has rights to view or access copyrighted media. It should also be noted that after receiving synched content personal media devices act as smart clients able to perform their full function in this case allowing users to view picture and video and listen to music while disconnected from their parent computer or device. DRM is enforced subsequent to media synching and device undocking.

According to an embodiment of the invention plug in adds a set of functionalities to a PC media player for uploading storing managing retrieving playing and dispatching regulatory certified game content. According to embodiments of the present invention the set of functionalities may be operable via controls that are consistent with conventional media players and that are rapidly and intuitively understood by those already acquainted with the operation of standard media players. The regulated game content may be added to the media library via a Rip like operation and may be identified in the media browser by a graphic media icon representative of the game.

Casino operators may make use of the media player paradigm by ripping or loading certified games typically stored in CD or DVD format onto a media library within or accessible to a gaming deploy server via a casino media player interface which may be a standard media player that has been configured with a customized plug in according to an embodiment of the present invention. It is to be noted that the certified games may be stored on data carriers other than CD ROMs or DVD ROMs and that embodiments of the present invention are not limited to the manner in which certified games are provided to the casino operator. Game content may then be pushed transmitted or otherwise made available to gaming machines via the familiar sync paradigm for example used at home though in this environment the sync is one way as no content need be transmitted from the gaming machines back to the Casino Media Player or game servers. In the casino environment music video and pictures may be distributed to gaming machines for advertising promotions and or entertainment purposes for example. Player help functionality and or player tutorials may also be distributed to the gaming machines in this manner. In addition game content may be distributed to gaming machines via this paradigm. Because the Casino Media Player plug in combination according to embodiments of the present inventions will allow game operators to manage game information and distribute game content together with related advertising and promotions media in a more intuitive user friendly manner than had previously been available this tool may help operators to manage their gaming floor in a more agile fashion thereby potentially increasing the revenue to the casino. In the casino game environment DRM technology may be used to verify that a user has rights to view or access copyrighted music pictures and video promotional or entertainment while Software Restriction Policy hereafter SRP may be used to ensure that only authorized regulated games may be transmitted to gaming machines and executed on the casino floor in accordance with local regulation and internal control procedures. Indeed preventing execution of non authorized games and or content may be enforced in the gaming machine through software restriction policy SRP much like digital rights management DRM prevents listening to or viewing illegal media files. The casino media player plug in software or an integrated casino media player having the plug in functionalities natively integrated therein according to embodiments of the present invention may bind all the security data found on the CD DVD ROM received from the certification laboratory to the virtualized CD i.e. ripped to the deploy server and represented by an icon now entered in the media library. Such security data may include the software restriction directive derived during the certification process. When selected for immediate play on a gaming machine via the casino media player the software restriction policies may be enforced by the gaming machine. When selected for download to selected gaming machines via the casino media player sync like command the code of the regulated game may be downloaded or pushed to the remote gaming machines via the network and the software restriction policies may be enforced in each of the selected gaming machines to which the regulated game s has been downloaded or pushed . After receiving synched content the depicted gaming machines may act as smart clients able to offer full gaming capability to players even when disconnected from their gaming network.

Reference numeral shows games that have been certified by the relevant gaming certification lab as described herein above. shows these games as being stored on CD ROMs or DVD ROMs that contain the certified authorized software components although the present embodiments are not limited by the medium on which the authorized game software components are stored. Rather than loading such physical media manually or loading them in a game jukebox embodiments of the present invention provide for ripping the certified game components onto a persistent storage such as for example a hard disk or other mass storage device. The hard drive or other mass storage device which need not be co located with the gaming machines is preferably in a secured locked cabinet and or is otherwise secured and access controlled. The disk drive may advantageously be configured for example as a Redundant Array of Inexpensive Disks RAID for security redundancy and robustness.

Thereafter each of the certified games whose CD ROM or DVD ROMs have been ripped onto the deploy server hard disk may thereafter be represented to the gaming operator as an icon or other user selectable representation. Indeed embodiments of the present inventions call for the certified games or certified game components and other non certified and non regulated media content such as music graphics photos video player help files player tutorials etc. to be accessible by the gaming operator from an integrated and intelligent framework that allows the gaming operator to classify search select and push certified games to selected gaming machines over a network. Such integrated and intelligent framework may be implemented as a for example Microsoft Windows game management application on a personal computing device or server or may be implemented as a game management application on a portable device such as a portable media device using available Application Program Interfaces APIs for such devices. The certified games may appear on the game management application as icons and or as text based entries for example.

Preferably the certified games or game components may include or may refer to game metadata that provide useful information such as the name of the game a brief description of the game the game type e.g. fruit game scripted game racing game 5 reel game card game etc. gaming lab certification information and version number for example. The metadata associated with the game may structured for example in a manner similar to the ID3 tags of digital music. According to embodiments of the present invention the game management application may read such game metadata or tags to enable the application s search classification and other management functions. The metadata may be stored together with the game or in a separate library of e.g. binary files. Metadata may also be stored in a library of XML files which the present game management application may access to derive for example game and usage information such as for example game play count last game play date game play duration and or other types information. Such information encoded in the XML library file for each game may be accessed by the preset game management application to its enable the search classification categorization and scheduling functionalities to be described hereunder. As shown in the game management application may run on a personal computer either mobile or desktop that is coupled in a secure manner to a network including for example the Internet .

The interfaces on such media players are typically clean and easy to use. In the depicted Microsoft Media Player 11 the cover of each music album is displayed prominently as well as information about each artist s name a current song title a song length and a user rating as collectively shown at . Buttons for playing and toggling between songs and for adjusting the music s volume are clearly displayed on the device. Buttons on the device also make uploading Rip downloading Sync and duplicating Burn media a simple straight forward task.

The differences between iTunes and Media Player 11 are almost wholly cosmetic. iTunes displays the current media being played as well as that media s progress at the top center of the application as shown at . Other searchable media are included at the center of the device in a large grid configuration where information like media name media s creator and media length is displayed. Although iTunes as of this writing has not yet released an API application programming interface for independent developers to offer plug ins this feature is a trend and may well be offered at some stage in the future. Both Microsoft s Media Player and Apple s iTunes are suitable candidates although not the only candidates for accepting plug in according to embodiments of the present invention to enable casino owners and operators to manage and deploy games on their estates of gaming machines.

Another popular media player and candidate for a plug in according to an embodiment of the present invention is Winamp media player which offers a free SDK Software Development Kit to access enhance and add new Winamp s functionalities.

The Casino Media Player may include criteria attributes that allow operators to sort lab certified games based on key game metadata such as genre game studio year created popularity and RTP Return to Player . Casino Media Players such as shown at may also feature a search window to enable users to locate games based on free form search criteria by typing letters words phrases questions and or wildcard characters for example. Casino Media Players may prominently feature game artwork or a representative game icon and game information in a format that may be similar to the format in which conventional media player may display music artwork and information. Gaming controls and gaming buttons may appear within such devices in the space normally reserved for music controls. Volume adjustment controls may be used to configure the volume attribute of some pre selected games or media assets for controlling volume in the associated gaming machine or volume adjustment controls may be deactivated. Controls for the management of downloads and uploads may also be used unchanged as shown at although existing controls for duplicating or burning media may be disabled. Some other standard controls of the media player may be deactivated by the plug in depending of the context of the operation being selected for example the Burn service to write a CD ROM may be disallowed when a game is selected.

For example in the game Vice City has been selected by the operator and or other user of the Casino Media Player and is ready to be pushed or otherwise transferred or made available to gaming machines of the user s choosing as shown at . The process of pushing games onto gaming machines may be done one section of the floor at a time as is depicted in where the section being updated is labeled U or it may be done individually be gaming machine or globally for example.

According to other embodiments of the present inventions each gaming machine on the casino floor may have a serial number or other unique identifier associated or assigned therewith a machine icon and an activation push button . Users may activate the push buttons for gaming machines onto which they wish to push a particular gaming title and not activate the push buttons for gaming machines onto which they do not wish to push a particular gaming title. Pushed game titles may be simultaneously or subsequently made available to the players via a menu displayed on the gaming machine in accordance with applicable regulations and internal procedures.

Physical landmarks of the casino floor such as stairs escalators elevators plants fountains and bars and or restaurants may be displayed to help orient users. A Scheduler icon button may allow users to open a scheduler configuration window not shown in order to set a specific time range for each game s availability on each game on the casino floor.

The Media Player plug in according to embodiments of the present invention may be configured to dynamically control the casino floor through the aforementioned Active Directory organization units OUs and associated policies SIPs SRPs via an ubiquitous media player graphical user interface. The media player plug in may according to an embodiment of the present invention implement its software functions using an application interface to the Active Directory named ADSI Active Directory Service Interface which is at the core of Microsoft Windows server. Embodiments of the present invention however are not limited to implementations using a Microsoft operating system. Indeed functions may be implemented via similar services and associated application interface for other operating systems having centrally federated distributed policies such as for example Linux configured with Fedora capability.

Embodiments of the present invention are related to the use of one or more computer systems that may be configured as mobile computing device laptop or desktop computer or gaming machines to control media content for network connected gaming machines. According to one embodiment the computer implemented methods for controlling media content for gaming machines may be provided by one or more computer systems in response to processor s executing sequences of instructions contained in memory. Such instructions may be read into memory from a computer readable medium such as a data storage device. Execution of the sequences of instructions contained in the memory may cause the processor s to perform the steps and have the functionality described herein. In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement the claimed embodiments of the present inventions. Within the context of this document a computer readable medium may be or include any means that can contain store communicate propagate or transport a program or application that implements an embodiment of the present invention for use by or in connection with a computerized system apparatus or device. Indeed the computer readable medium may be or include but is not limited to for example an electronic magnetic optical electromagnetic infrared or semi conductor system apparatus device or propagation medium. More specific examples a non exhaustive list of computer readable media may include the following an electrical connection having one or more wires a portable computer diskette a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber and a portable compact disk read only memory such as a CD or DVD ROM for example or other data carriers.

In a preferred embodiment of the invention an operator standing near a bank of gaming machines observing players activity there may be no player activity at all and holding a wirelessly connected handheld PC or Ultra compact PC may enter an identifier of the bank either via manual entry or other wireless identifying means such as RFID laser CCD barcode scan and 2D barcode scanner using miniature camera as found on mobile phones . Subsequent to entering the bank ID or other identifier for a selected group of gaming machines the Casino Media Player according to an embodiment of the present invention may automatically narrow the range of capabilities accordingly such that for example only the games activated on these gaming machines belonging to the entered bank ID may be displayed on the operator s screen and that only the games available in the server library and not yet downloaded or activated on these gaming machines that may execute of the model of these gaming machine may be shown for operator selection. Conveniently and discreetly using the friendly Casino Media Player interface the operator may reconfigure the parameters of the bank of gaming machines for optimal activity within the allowed regulatory space for example by refactoring the selection menu order and the promotional activity video and sound .

While the foregoing detailed description has described preferred embodiments of the present invention it is to be understood that the above description is illustrative only and not limiting of the disclosed invention. Those of skill in this art will recognize other alternative embodiments and all such embodiments are deemed to fall within the scope of the present invention. For example proprietary software emulating a media player look and feel may be entirely developed by a game supplier and in such case the game plug in may be implemented as a built in function or service. However a plug in strategy may be desirable so as to be able to benefit from advances made in the future releases of the host media player e.g. WMP WMP etc. . . . . Those of skill in this art may also recognize that embodiments of the present invention may be adapted to manage media content for non regulating gaming devices such as gaming consoles. According to such embodiments the media content may include games that have not been and need not be certified by any certification laboratory. Other variations will no doubt occur to those of skill in this art. Thus the present invention should be limited only by the claims as set forth below.

