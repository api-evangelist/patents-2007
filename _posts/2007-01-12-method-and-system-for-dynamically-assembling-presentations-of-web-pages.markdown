---

title: Method and system for dynamically assembling presentations of web pages
abstract: A web designer defines attributes including business rules, properties and standard user interface library components. These attribute definitions allow look and feel specifications of a web page to be dynamically changed without requiring code modifications to any web application. A presentation assembly engine (PAE) receives a Uniform Resource Locator of a web page along with associated attributes and generates a unique identifier associated with a request of the web page. The PAE receives from a web application a web page request that includes the associated unique identifier. The PAE utilizes the unique identifier to identify and access the attributes needed to assemble a presentation of the web page. The PAE uses the attributes to assemble the web page presentation and sends the completed page to the web application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07765464&OS=07765464&RS=07765464
owner: International Business Machines Corporation
number: 07765464
owner_city: Armonk
owner_country: US
publication_date: 20070112
---
The present invention relates to a method and system for dynamically assembling presentations of web pages and more particularly to a technique for employing a web services engine and business rules to dynamically construct updated presentations of hypertext markup language HTML web pages.

Conventional web development processes require mechanisms such as JavaServer Pages JSP servlets etc. to allow generation of HTML web pages. Even if templates are used to separate content these known web development techniques require that HTML components be developed repeatedly thereby driving up development costs. Further when changes to business requirements dictate modifications to HTML pages relative to multiple custom web applications additional development costs are incurred. In response to such changes to business requirements multiple developers associated with the multiple custom web applications must manually change all pertinent web pages. Thus there exists a need to overcome at least one of the preceding deficiencies and limitations of the related art.

The present invention provides a computer based method of dynamically assembling presentations of web pages the method comprising 

defining a plurality of attributes for facilitating presentations of a plurality of web pages associated with a plurality of custom web applications CWAs in a many to one correspondence the plurality of attributes including a plurality of business rules a plurality of properties and a plurality of standard user interface UI library components wherein the defining is performed without adding code to or modifying code in any custom web application of the plurality of CWAs 

receiving at a presentation assembly engine PAE of a computing system and from a custom web application CWA of the plurality of CWAs a page request for a web page of the plurality of web pages the page request including a unique identifier associated with the web page and the page request being initiated by an initial web page request from a browser and

assembling the web page the assembling performed by the PAE in response to the receiving the page request the assembling including utilizing the unique identifier to identify one or more attributes of the plurality of attributes and utilizing the one or more attributes to assemble a presentation of the web page.

A system computer program product and process for supporting computing infrastructure corresponding to the above summarized method are also described and claimed herein.

Advantageously the present invention provides a presentation assembly engine that accesses dynamically generated properties business rules and template content for the assembly of a web page so that the business process of look and feel design is separated from web page development tasks. Further the present invention allows a web developer to avoid 1 consulting look and feel standards 2 being concerned with mechanisms to manually construct web pages and 3 writing HTML look and feel components. Instead the web developer s tasks are focused on data specific to a web application and the retrieval of certain information from databases.

The present invention provides a rules based approach for dynamically assembling presentations of web pages subsequent to dynamic and centralized updates of look and feel specifications related to the design of the web pages. The dynamic updates of look and feel specifications e.g. HTML components are separated from the coding tasks of normal web development. The assembly of the web page presentations utilize dynamically generated HTML content that is accessed via web services.

A standardized template a.k.a. web template or template in database is a web page design tool that includes presentation specifications that are used to customize the look and feel of a web page. A template is included in for example a HTML eXtensible Markup Language XML eXtensible Stylesheet Language XSL or text document. The presentation specifications included in a template are related to for instance web page layout website navigability and web page structure. Templates are capable of being dynamically updated and are defined differently per custom web application or per client.

A standardized UI component included in database includes presentation specification s that are used to customize the look and feel of a portion of a web page e.g. the header or footer of a web page . Similar to a template a standardized UI component is included in for example a HTML XML XSL or text document.

Property files database includes properties defined for each standardized template or standardized UI component in database . As used herein properties are layout specifications that are to be used to assemble a web page. Properties are included in for example XML documents. The present invention allows properties to be updated dynamically so that a subsequent request for a web page results in the assembly of a web page presentation that utilizes the layout specifications in the updated properties. In one embodiment properties are updated by web designers or UI designers instead of web developers i.e. outside of normal web development and these property updates do not require any additions to or modifications of the code of any custom web application. Further these property updates do not require a modification to any database record managed by a custom web application.

Business rules definition database includes business rules a.k.a. rules that determine which properties apply to the assembly of a particular web page presentation. Rules can for instance change the presentation of a web page based on variations in laws from country to country or state to state. For example a rule is provided by the value of a country code associated with a web page request. In this example if the country code indicates the United States then properties X Y and Z apply to the layout of the footer of the requested web page and if the country code indicates Canada then only properties M and N apply to the same layout. The present invention allows business rules to be updated dynamically so that a subsequent request for a web page results in the assembly of a web page presentation based on the updated rule. In one embodiment rules are updated by web designers or UI designers instead of web developers i.e. outside of normal web development and these rule updates do not require any additions to or modifications of the code of any custom web application. Further these rule updates do not require a modification to any database record managed by a custom web application.

In one embodiment PAE resides on a first computing system and the custom web applications . . . reside on other computing systems. In one embodiment web services engine resides on a computing system that is different from the computing system that includes PAE .

The standard UI library components business rules and properties defined in step comprise web page presentation attributes a.k.a. specifications to be used to construct web pages associated with any of the multiple custom web applications . . . see . Subsequent to step PAE see determines which of the aforementioned attributes defined in step are available for use by each of the multiple custom web applications . . . see thereby exposing specific interfaces files and variables. PAE see assigns to each custom web application the properties and rules that are determined to be available to that custom web application.

In one embodiment the templates defined in step are configured to include country lookups that provide National Language Support NLS . As used herein NLS is defined as the ability for a user to communicate with hardware and software products in a human language of choice to obtain results that are culturally acceptable. In another embodiment a translation engine is included in system see to provide on demand NLS in which templates are requested by any of a plurality of human languages.

In one embodiment the properties defined in step are defined in XML format by web designers or UI designers and are formulated by the aforementioned methods. The properties provide web page presentation specifications that are available to each custom web application and indicate the locations e.g. file names of the presentation attributes.

This centralization and separation of template content style and page properties from the multiple custom web applications permits on the fly changes to properties and rules that result in dynamic look and feel changes to all custom web applications without requiring modifications to the code in each of the web applications. Thus the dynamic changes to the look and feel of multiple custom web applications need the involvement of only web designers or UI designers who can make the dynamic changes to the properties and rules in a centralized location without the involvement of the multiple web developers who develop and maintain the code of the multiple custom web applications.

Step includes a startup of each of the custom web applications e.g. custom web application of . Each custom web application startup submits web page information to PAE see and each custom web application receives unique identifiers for web page requests or actions. This custom web application startup process is described in more detail below relative to .

In step the set of business rules and or the set of properties defined in step are dynamically updated. For example the layout of a footer of a requested web page can be changed on the fly in step by changing properties in database see . As another example a rule can be dynamically added so that a specified set of properties apply to the footer of a web page if a country code indicates the United Kingdom.

In step a custom web application e.g. custom web application of receives a web page request or action from browser see . As used herein a web page request refers to either a request for a web page or for one or more web page components. The custom web application obtains any specific data that is associated with the particular web page or web page component s being requested. The specific data includes for example content to be included in the white space of the requested web page or specific application links associated with the requested web page e.g. links to be associated with the left navigation or right navigation actions .

In step the custom web application that received the web page request in step makes one or more query calls to PAE see . The query call s include the unique identifier for the web page request received in step along with the specific data obtained in step . From the list of unique identifiers received in step the custom web application obtains the unique identifier associated with the web page request. The specific data is the data that is to be used in the dynamic assembly of the presentation of the web page or one or more web page components.

In step PAE see determines web page assembly a.k.a. web page rendering information based on the updated rules and or updated properties i.e. according the update in step . This web page assembly process is described in more detail below relative to .

In step the custom web application sends a completed web page or completed web page component s to the end user s browser. The look and feel of the completed web page or completed web page component s is automatically and dynamically determined by the updated rules and properties see step . The dynamic web page construction process ends at step . Again the dynamic changes to the rules and or properties in databases see see respectively allow for automatic dynamic changes to the look and feel of web pages requested by multiple custom web applications . . . see without requiring coding changes or additions to any of the custom web applications.

The selected properties are provided to the PAE thereby allowing the PAE to format the web page when the web page is requested. After this initial submission of web page information to the PAE the custom web application avoids any further association with the presentation specifications i.e. the look and feel of the web page.

PAE see receives the web page information as an identifier request i.e. a request for a list of unique identifiers . In response to receiving the identifier request the PAE generates a list of unique identifiers in step . The list generated in step uniquely identifies the submitted web page requests or actions which are associated with the custom web application whose startup submitted the web page information. A different list of unique identifiers is generated for each set of web page information submitted so that each web page request or action associated with any of the custom web applications see . . . of is uniquely identified. In step PAE see sends to each custom web application its associated list of unique identifiers to be used to request the assembly of web page or web page component presentations. In step the custom web application whose startup submitted the web page information in step see receives and caches the list of unique identifiers sent in step . In step the custom web application caches the properties that the PAE determined were available to that custom web application. The custom web application startup process ends at step .

In step the PAE also reads i.e. retrieves the properties associated with the requested web page or web page component s determines the styles to use in the construction of the web page or web page component s and merges the template content with the specific data to assemble a web page or web page component s . In step PAE see sends the assembled HTML web page or HTML web page component s to the custom web application. The web page assembly process ends at step .

In one embodiment the custom web application s functionality is standardized as a framework thereby allowing the framework to be reused as an application programming interface API for other web applications. This framework separates out the standardization to still another layer making it possible for a web application to avoid having to implement calls to PAE see and to instead use methods that already know how to call and use the PAE.

In another embodiment the dynamic nature of the present invention is moved to the end user s browser requests i.e. dynamic changes are allowed via the browser code . In this embodiment the steps of are modified so that the browser s request for a web page is sent directly to the PAE i.e. bypassing the custom web application where the request triggers the PAE s call to the web services engine to retrieve the appropriate web page or web page component s .

A UI designer defines and enters into database see the templates that are used for the assembly of web pages and web page components. is an example of a template entered at step of . Template is an example of a left navigation template that is called by PAE see with the following method call 

getLeftNavTemplate ArrayList links int numberOfCurrentSelection In an upcoming step of the web page construction process see step of specific links included in the specific data received from custom web application CWA see are placed into the loop of template . Other templates not shown are also entered into database see . For instance templates for the web page s header footer and right navigation component are entered in step see and related method calls access these templates.

The UI designers also define and enter properties and business rules into databases see and database see respectively. The properties are defined in XML format. is an example of template properties that are entered in step of . Properties include specifications related to various types of web page layouts e.g. one column two column and three column layouts .

The end user makes a web page request of http www.ibm.com us support which is received and processed by CWA see in step see . In step the CWA receives the page request for the Support Download web page and begins to make query calls to PAE see . Via these query calls a.k.a. requests the CWA requests web page X  SUPPORT DOWNLOAD passes left navigation links as an array list passes titles and links for the right navigation as an array list and passes specific white space content for the requested web page. The CWA also makes sendContent requests along with the page being requested. Furthermore the CWA makes a receiveContent call to receive the completely assembled web page or web page components. Examples of these step query calls made by the CWA are shown in document of .

In step of PAE see receives the requests from the CWA and constructs the requested page. In this example the PAE receives the request for page X  SUPPORT DOWNLOAD and looks up the page properties in properties file see that had been defined previously by UI designers see step of . The PAE also knows the page layout and page structure since the CWA submitted these attributes based on UI standards in step see . With knowledge of the page properties the page layout and the page structure the PAE knows all the components needed to format the requested web page. The PAE calls web services engine see to retrieve the following templates from database see Left Nav Template Right Nav Template Page Layout and Search Template see step of . The PAE merges the templates together with the application specific data received from the CWA in step see . The template loops are run to fill in the specific data. The merging of the templates forms a completed web page. The PAE places the completed web page into a queue for retrieval by the CWA in step of . After receiving the completed web page the CWA sends the completed web page to the end user s browser in step see .

Memory may comprise any known type of data storage and or transmission media including bulk storage magnetic media optical media random access memory RAM read only memory ROM a data cache a data object etc. Cache memory elements of memory provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution. Moreover similar to CPU memory may reside at a single physical location comprising one or more types of data storage or be distributed across a plurality of physical systems in various forms. Further memory can include data distributed across for example a LAN WAN or storage area network SAN not shown .

I O interface comprises any system for exchanging information to or from an external source. I O devices comprise any known type of external device including a display monitor keyboard mouse printer speakers handheld device printer facsimile etc. Bus provides a communication link between each of the components in computing unit and may comprise any type of transmission link including electrical optical wireless etc.

I O interface also allows computing unit to store and retrieve information e.g. program instructions or data from an auxiliary storage device . The auxiliary storage device may be a non volatile storage device such as a magnetic disk drive or an optical disk drive e.g. a CD ROM drive which receives a CD ROM disk . Computing unit can store and retrieve information from other auxiliary storage devices not shown which can include a direct access storage device DASD e.g. hard disk or floppy diskette a magneto optical disk drive a tape drive or a wireless communication device.

Memory includes a dynamic presentation assembly system which implements steps in the process of . Further memory may include other systems not shown in such as an operating system e.g. Linux that runs on CPU and provides control of various components within and or connected to computing unit .

The invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code of dynamic presentation assembly system for use by or in connection with a computing unit or any instruction execution system to provide and facilitate the capabilities of the present invention. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette RAM ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

Any of the components of the present invention can be deployed managed serviced etc. by a service provider that offers to deploy or integrate computing infrastructure with respect to the dynamic web page presentation assembly process of the present invention. Thus the present invention discloses a process for supporting computer infrastructure comprising integrating hosting maintaining and deploying computer readable code into a computing system e.g. computing unit wherein the code in combination with the computing system is capable of performing a method of dynamically assembling a web page presentation.

In another embodiment the invention provides a business method that performs the process steps of the invention on a subscription advertising and or fee basis. That is a service provider such as a Solution Integrator can offer to create maintain support etc. a process of dynamically assembling a web page presentation of the present invention. In this case the service provider can create maintain support etc. a computer infrastructure that performs the process steps of the invention for one or more customers. In return the service provider can receive payment from the customer s under a subscription and or fee agreement and or the service provider can receive payment from the sale of advertising content to one or more third parties.

The flow diagrams depicted herein are provided by way of example. There may be variations to these diagrams or the steps or operations described herein without departing from the spirit of the invention. For instance in certain cases the steps may be performed in differing order or steps may be added deleted or modified. All of these variations are considered a part of the present invention as recited in the appended claims.

While embodiments of the present invention have been described herein for purposes of illustration many modifications and changes will become apparent to those skilled in the art. Accordingly the appended claims are intended to encompass all such modifications and changes as fall within the true spirit and scope of this invention.

