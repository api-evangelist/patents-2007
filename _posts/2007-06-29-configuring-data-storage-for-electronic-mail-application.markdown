---

title: Configuring data storage for electronic mail application
abstract: Described are techniques for processing a data storage configuration request for an application A first user level of a plurality of user levels at which said data storage configuration request is made is determined. One or more rule sets defining mappings between different ones of said plurality of user levels are provided. Each of the different user levels is associated with a different level of abstraction with respect to processing performed in the data storage system for implementing the data storage configuration request. One of the rule sets is selected in accordance with the application, a data service requested in said data storage configuration request, and a user grouping including said plurality of user levels. The data storage configuration request is serviced using rules of the selected rule set.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07634567&OS=07634567&RS=07634567
owner: EMC Corporation
number: 07634567
owner_city: Hopkinton
owner_country: US
publication_date: 20070629
---
This application generally relates to data storage and more particularly to techniques used for data storage configuration.

Configuring data storage resources adequately for electronic mail and other messaging systems is challenging both from an application performance standpoint and a storage space allocation standpoint.

For example messaging systems typically allocate message mailboxes of fixed size to the subscribers of the messaging service. So if a subscriber rapidly receives a large number of messages or does not regularly retrieve received messages there is a good chance that the capacity of the subscriber s mailbox will be exceeded and the mailbox will overflow. This results in loss of messages or inability of message senders to leave further messages for the subscriber. Yet other subscribers may no longer be using their mailboxes or use only a small portion of their mailboxes capacities resulting in a waste of storage space.

Many voice and or multimedia messaging systems have warning announcements which are provided to subscribers to advise them of the fill level of their mailboxes. While this is a worthwhile feature it does not specifically help with the problem of mailbox overflow conditions. It can be frustrating to a caller to be informed that the party they are trying to reach has a full mailbox. The result can be loss of business loss of necessary information and or loss of productivity. Two other related problems from the system administrator s point of view are the allocation of storage space to mailboxes which are seldom or never fully utilized and the persistence of logins and their associated mailboxes that are still in place for subscribers who have changed messaging systems or ceased to be subscribers. This last problem is especially of concern in very large systems and or those designed for public service provider use.

Some systems provide audits that the system administrator may use manually to provide a means for sizing mailboxes and for expiring logins. But this does not provide the prompt response to changing conditions that is desirable.

Messaging systems typically rely on computer systems that may include different resources used by one or more host processors. Resources and host processors in a computer system may be interconnected by one or more communication connections. These resources may include for example data storage devices such as those included in the data storage systems manufactured by EMC Corporation. These data storage systems may be coupled to one or more servers or host processors and provide storage services to each host processor. Multiple data storage systems from one or more different vendors may be connected and may provide common data storage for one or more host processors in a computer system.

A host processor may perform a variety of data processing tasks and operations using the data storage system. For example a host processor may perform basic system I O operations in connection with data requests such as data read and write operations.

Host processor systems may store and retrieve data using a storage device containing a plurality of host interface units disk drives and disk interface units. The host systems access the storage device through a plurality of channels provided therewith. Host systems provide data and access control information through the channels to the storage device and the storage device provides data to the host systems also through the channels. The host systems do not address the disk drives of the storage device directly but rather access what appears to the host systems as a plurality of logical disk units. The logical disk units may or may not correspond to the actual disk drives. Allowing multiple host systems to access the single storage device unit allows the host systems to share data in the device. In order to facilitate sharing of the data on the device additional software on the data storage systems may also be used.

Different tasks may be performed in connection with a data storage system. For example a customer may perform data storage configuration tasks. Such tasks may include for example configuring storage for use with an email application. In connection with the configuration processing tasks may include allocating storage specifying the logical and or physical devices used for the storage allocation specifying whether the data should be replicated the particular RAID Redundant Array of Independent or Inexpensive Disks level and the like. With such options in connection with performing the configuration a customer may not have the appropriate level of sophistication and knowledge needed.

Thus it may be desirable to utilize a flexible technique which assists customers in connection with performing data storage services such as related to data storage configuration. It may be desirable that the technique be adaptable to the particular knowledge level of the user.

Data storage is configured for electronic mail application. A user interface is provided to allow a user to issue a data storage configuration request to provision storage for an email application. The user interface is customized based on a user sophistication level. Based on the data storage configuration request communication is executed with a service provider to implement the data storage configuration request. Implementing of the data storage configuration request includes allocating storage for storing mailbox data of the email application.

In accordance with one aspect of the invention is a computer implemented method for processing a data storage configuration request for an application comprising 

determining a first user level of a plurality of user levels at which said data storage configuration request is made 

providing one or more rule sets defining mappings between different ones of said plurality of user levels each of said different user levels being associated with a different level of abstraction with respect to processing performed in the data storage system for implementing the data storage configuration request selecting one of said one or more rules sets in accordance with said application a data service requested in said data storage configuration request and a user grouping including said plurality of user levels and servicing the data storage configuration request said servicing including using a first rule of said selected rule set to map data of the data storage configuration request from said first user level to another user level and performing a first call from a first service provider associated with the first user level to a second service provider associated with a second of said plurality of user levels. The data storage configuration request may be for provisioning storage for the application. The data storage configuration request may be made from a host to an appliance hosting data storage for the application. The particular rule set selected by said selecting may include one or more quality of service parameters having values selected for a first usage of the application differing from other values for said one or more quality of service parameters selected from a different rule set for a second usage of the application. The first service provider and the second service provider may be located on the appliance. The data storage request may be made from a host to a network configuration of a plurality of data storage systems and said first service provider and said second service provider may be located on a different ones of said plurality of data storage systems. One or more rules engines may be used to perform processing in accordance with said selected rule set to service said data storage configuration request. The first rule may map a first user selected parameter to a second parameter and said second parameter may be included in said first call. The first rule may specify one or more default parameter values and said one or more default parameter values may be included in said first call. The servicing may further include using a second rule of said selected rule set to map data of the first call to the second service provider to data used for a second call from the second service provider to a third service provider associated with a third of said plurality of user levels. The user grouping may include said first second and third user levels in which the first user level provides a greatest level of abstraction of said first second and third user levels and said third user level provides a least level of abstraction of said first second and third user levels. The first rule may provide for application specific mappings of user interface data to other terms included in said first call. The application may be one of an email application a database application a medical office application a law office application or a banking application. The first rule may include at least one of a variable or a conditional statement evaluated at runtime when processing said data storage configuration request. A rule set selected by said selecting may include one or more rules in which the one or more rules may include at least one default specified in accordance with a requirement of said application. The at least one default may be mapped by said one or more rules to at least one parameter that varies with a data storage system on which storage is used for the data storage configuration request.

In accordance with another aspect of the invention is a data storage system comprising executable code stored in a computer readable medium for processing a data storage configuration request for an application the computer readable medium comprising executable code for determining a first user level of a plurality of user levels at which said data storage configuration request is made providing one or more rule sets defining mappings between different ones of said plurality of user levels each of said different user levels being associated with a different level of abstraction with respect to processing performed in the data storage system for implementing the data storage configuration request selecting one of said one or more rules sets in accordance with said application a data service requested in said data storage configuration request and a user grouping including said plurality of user levels and servicing the data storage configuration request said servicing including using a first rule of said selected rule set to map data of the data storage configuration request from said first user level to another user level and performing a first call from a first service provider associated with the first user level to a second service provider associated with a second of said plurality of user levels. The executable code for servicing may further include code for using a second rule of said selected rule set to map data of the first call to the second service provider to data used for a second call from the second service provider to a third service provider associated with a third of said plurality of user levels. The user grouping may include said first second and third user levels said first user level providing a greatest level of abstraction of said first second and third user levels and said third user level providing a least level of abstraction of said first second and third user levels. The first rule may provide for application specific mappings of user interface data to other terms included in said first call. The selected rule set may define best practices for said application and provide for different levels of automation of said best practices in connection with said servicing different levels of automation being associated with different ones of said plurality of user levels.

Provisioning data storage for email can be facilitated for users having different levels of sophistication.

Referring to shown is an example of an embodiment of a computer system that may be used in connection with performing the techniques described herein. The computer system includes one or more data storage systems connected to server or host systems through communication medium . The system also includes a management system connected to one or more data storage systems through communication medium . In this embodiment of the computer system the management system and the N servers or hosts may access the data storage systems for example in performing input output I O operations data requests and other operations. The communication medium may be any one or more of a variety of networks or other type of communication connections as known to those skilled in the art. Each of the communication mediums and may be a network connection bus and or other type of data link such as a hardwire or other connections known in the art. For example the communication medium may be the Internet an intranet network or other wireless or other hardwired connection s by which the host systems may access and communicate with the data storage systems and may also communicate with other components not shown that may be included in the computer system . In one embodiment the communication medium may be a LAN connection and the communication medium may be an iSCSI or fibre channel connection.

Each of the host systems and the data storage systems included in the computer system may be connected to the communication medium by any one of a variety of connections as may be provided and supported in accordance with the type of communication medium . Similarly the management system may be connected to the communication medium by any one of variety of connections in accordance with the type of communication medium . The processors included in the host computer systems and management system may be any one of a variety of proprietary or commercially available single or multi processor system such as an Intel based processor or other type of commercially available processor able to support traffic in accordance with each particular embodiment and application.

It should be noted that the particular examples of the hardware and software that may be included in the data storage systems are described herein in more detail and may vary with each particular embodiment. Each of the host computers the management system and data storage systems may all be located at the same physical site or alternatively may also be located in different physical locations. In connection with communication mediums and a variety of different communication protocols may be used such as SCSI Fibre Channel iSCSI and the like. Some or all of the connections by which the hosts management system and data storage system may be connected to their respective communication medium may pass through other communication devices such as a Connectrix or other switching equipment that may exist such as a phone line a repeater a multiplexer or even a satellite. In one embodiment the hosts may communicate with the data storage systems over an iSCSI or a Fibre Channel connection and the management system may communicate with the data storage systems over a separate network connection using TCP IP. It should be noted that although illustrates communications between the hosts and data storage systems being over a first connection and communications between the management system and the data storage systems being over a second different connection an embodiment may also use the same connection. The particular type and number of connections may vary in accordance with particulars of each embodiment.

Each of the host computer systems may perform different types of data operations in accordance with different types of tasks. In the embodiment of any one of the host computers may issue a data request to the data storage systems to perform a data operation. For example an application executing on one of the host computers may perform a read or write operation resulting in one or more data requests to the data storage systems .

The management system may be used in connection with management of the data storage systems . The management system may include hardware and or software components. The management system may include one or more computer processors connected to one or more I O devices such as for example a display or other output device and an input device such as for example a keyboard mouse and the like. A data storage system manager may for example view information about a current storage volume configuration on a display device of the management system provision data storage system resources and the like.

In one embodiment the one or more data storage systems of may be an appliance with hardware and software for hosting the data storage of the one or more applications executing on the hosts . The appliance may include one or more storage processors and one or more devices upon which data is stored. The appliance may include software used in connection with storing the data of the hosts on the appliance and also software used in connection with configuring the data storage for use by the hosts in connection with techniques described herein. As an example in connection with an email application server component that may executed on the hosts the data storage configuration tasks may include allocating storage for user accounts or mailboxes specifying the devices logical and or physical used to store the email data specifying whether data replication is performed for disaster recovery and the like. Techniques that may be used in connection with performing data storage configuration and configuration tasks are described in more detail in following paragraphs in order to provide ease of use to customers of the data storage system s .

In connection with an embodiment in which the data storage is an appliance including hardware and software the appliance may also include other software for performing different data services. For example the appliance may include backup server software which interacts with software on the hosts when performing a backup operation.

In another embodiment the data storage systems may include one or more data storage systems such as one or more of the data storage systems offered by EMC Corporation of Hopkinton Mass. Each of the data storage systems may include one or more data storage devices such as disks. One or more data storage systems may be manufactured by one or more different vendors. Each of the data storage systems included in may be inter connected not shown . Additionally the data storage systems may also be connected to the host systems through any one or more communication connections that may vary with each particular embodiment and device in accordance with the different protocols used in a particular embodiment. The type of communication connection used may vary with certain system parameters and requirements such as those related to bandwidth and throughput required in accordance with a rate of I O requests as may be issued by the host computer systems for example to the data storage systems . It should be noted that each of the data storage systems may operate stand alone or may also be included as part of a storage area network SAN that includes for example other components such as other data storage systems. Each of the data storage systems may include a plurality of disk devices or volumes. The particular data storage systems and examples as described herein for purposes of illustration should not be construed as a limitation. Other types of commercially available data storage systems as well as processors and hardware controlling access to these particular devices may also be included in an embodiment.

In such an embodiment in which element of is implemented using one or more data storage systems each of the data storage systems may include code thereon for performing the techniques as described herein for processing a data storage configuration request.

Servers or host systems such as provide data and access control information through channels to the storage systems and the storage systems may also provide data to the host systems also through the channels. The host systems may not address the disk drives of the storage systems directly but rather access to data may be provided to one or more host systems from what the host systems view as a plurality of logical devices or logical volumes LVs . The LVs may or may not correspond to the actual disk drives. For example one or more LVs may reside on a single physical disk drive. Data in a single storage system may be accessed by multiple hosts allowing the hosts to share the data residing therein. An LV or LUN logical unit number may be used to refer to the foregoing logically defined devices or volumes.

In following paragraphs reference may be made to a particular embodiment such as for example an embodiment in which element of is an appliance as described above. However it will be appreciated by those skilled in the art that this is for purposes of illustration and should not be construed as a limitation of the techniques herein.

Described in following paragraphs are techniques that may be used to assist customers of a data storage system in connection with performing data storage services such as related to data storage system configuration provisioning of data storage and the like. The techniques herein are adaptable to the particular knowledge level of the user. The techniques are flexible and allow for implementation of best practices and defaults in an automated fashion which are customized for the particular application user or customer and or underlying data storage system and environment to meet specific customer needs. As will be described in more detail depending on the level at which a user interacts with the data storage system different levels or amounts of automation of the best practices may be performed. The user may elect to bypass the automation of best practices or limit the amount of automation performed by interacting with the system at various levels.

Referring to shown is an example representation of components that may be included on the data storage system for use in performing the techniques herein for data storage configuration. The example includes a user interface one or more levels of service providers and adapters . In the example the element includes 3 service provider layers or levels . It should be noted that although 3 service provider levels are shown in an embodiment may include any number of service provider levels.

The adapters are used in connection with facilitating communications between the service providers such as the level service provider and other components. The different service providers included in the example may be able to communicate directly with one another. However when one of the service providers at one of the levels communicates with another component other than one of the service providers an adapter may be utilized. An adapter may be characterized as a layer of software between one of the service providers such as service provider and another component such as a lower level component invoked to implement data storage platform specific functionality. An adapter may convert a service provider API to the API of another component. As an example the service provider may perform a call to an external component to create a file system. An adapter may be used as an intervening layer between and the external component in which the adapter converts the API call from to the API of the external component. The conversion may include for example mapping parameters between the API calls performing multiple calls to the external component for the one API call from and the like. It should be noted that an adapter may not utilized if such conversion is not needed.

The user interface UI provides for one or more different types of user interfaces and associated data. For example the UI may provide support for a graphical user interface GUI command line interface CLI and the like to support interactions between the data storage system and the hosts of . Each of the different service provider levels of may provide a different logical view and level of abstraction with respect to a data storage configuration task to be performed for an application executing on one of the hosts. In connection with the techniques herein a user may interact through the UI with any one of the different levels of service providers when performing data storage configuration requests. Each of the service providers of may provide a different level of detail or abstraction with respect to the underlying operations and tasks performed on the data storage system in accordance with different levels of user sophistication and knowledge. As will be described in more detail below the language or terminology UI data e.g. content or data used to populate the UI menus and UI presentation or structure e.g. commands presented or particular hierarchical menu structure may vary in accordance with the particular level of service provider selected by the user. Thus a user may interact with the data storage system at a variety of different levels when issuing data storage configuration requests for the same application. The UI may be customized for the particular level and application for which the request is performed.

In an embodiment the UI may be characterized a set of different user interfaces that may vary depending on the target user and associated user level at which the user interacts with the system. As described in more detail in following paragraphs each level may provide a different user interface for a different level of user interaction and level of knowledge and sophistication. Each level may also be associated with a different level of automation of the best practices for example with users interacting at level obtaining the greatest amount of automation of best practices and users interacting at level obtaining none or minimal amount of automation. The UI may provide multiple different user interfaces in accordance with the different levels allowing a user the option of connecting and interacting with the data storage system at any level. By allowing a user to select a level of interaction and automation the techniques herein provide a user with a flexible approach to choose deeper levels and entry points e.g. level providing less automation and more detail as well as selection of other levels e.g. level when greater automation of best practices is desirable.

For example level service provider may provide a beginner or most simplistic view of the data storage system and tasks performed for data storage configuration. Interaction with the level service provider requires the least amount of knowledge and may be geared toward interacting with users having minimal knowledge when performing a data storage configuration request by providing the greatest level of abstraction of the underlying system and operations performed. The language may be more non technical in comparison to the interface language of other levels. As the level increases so does the assumed level of knowledge of the user in connection with interactions. Level service provider in the example may be utilized by the most knowledgeable users providing a greatest granularity of control of all levels in connection with a data configuration request. Level exposes more detailed information to the user than interactions at levels and . As an example a level user may issue a data storage configuration request to provision storage for a number of mailboxes for storing data of an email application executing on one of the hosts. The level user may specify a minimal amount of information in connection with the request such as only a number of mailboxes. A user may interface with the data storage system using a GUI and issue the data storage configuration request. The language and terminology of user interactions via the GUI may be customized for the level user of the email application. In connection with the same email application a more knowledgeable user may choose to issue a data storage configuration request via a GUI for a same number of mailboxes by interacting with level service . At level the user provides more detailed information about the request regarding the underlying data storage device and how this data storage device is used by the application. To further illustrate the level data storage configuration request may specify the physical and or logical devices upon which storage is allocated provide vendor specific attributes or settings indicate a number and type of file created and the like. In connection with the type of file created this may be particular to the email application. A file may be a database or a log file. The log files are used to keep a record of transactions taking place and may be used in connection with recovery operations. The database files hold mailbox stores such as email data. In connection with the user communicating with the level service provider such detail is not provided and defaults may be specified by the data storage system when implementing the level data storage configuration request. The defaults may be customized for the particular application.

When implementing the request the level service provider may communicate with one or more other level service providers such as and . Different defaults for the particular application may be used by service providers and . For example with reference to the level request for the email application described above the level service provider may communicate with the level service provider . Provider may then communicate with the level service provider to implement the request and allocate the requested storage along with specifying other defaults such as for example a default level of data protection. The service provider may communicate with other data storage system hardware and or software when implementing the configuration request.

As illustrated in the example a service provider at a level n may generally communicate directly or indirectly with one or more other service providers at levels lower than level n when processing a data storage configuration request. A user may select the level of interaction and the user s data configuration request is received at the data storage system by the UI . The UI in turn communicates with the appropriate level service provider to initiate the request. Furthermore a request received at a first level can result in multiple requests to a lower level to perform an operation. For example a user may connect to the data storage system at level . In response the level service provider may issue more than one request to provider . In turn each request to provider may result in one or more requests to provider which in turn communicates with adapters and other code modules to perform the requested operation.

The data storage configuration request may identify the user e.g. by user identifier or other authentication information the application for which the request is being made and any user selections or input parameters.

In one embodiment the service providers may be code modules which are included in the same appliance. Each of the service providers may provide a published interface or API application programming interface . A first service provider at level n may issue a request of another lower level service provider by issuing an API call to the lower level service provider. The API may also be used to facilitate communications between the UI and the different level service providers of . As described in more detail in following paragraphs an API call from a first service provider to a second service provide may use rules or mappings to map the data received by the first service provider to the appropriate API call with parameters and any defaults in accordance with the received data. Thus the rules or mappings may be used to map between levels of abstractions of the different service providers.

Although an embodiment may have all service providers located in the same appliance or other component the service providers may be characterized as remotable. One or more of the service providers may be located on different components having connectivity so that the API calls between service providers may be remote API calls as well as local API calls e.g. service providers on same component . As an example an embodiment may have multiple data storage systems included in a network. Each of the service provider may be located on a different data storage system.

An embodiment may determine the level at which a user interacts with the system using a variety of different techniques. With reference to a user may be allowed to interact at any of the 3 levels. The menus may be directed to a level user. The user may select whether to interact at a lower level by selecting further detailed menu options providing more detailed information at lower levels. As a variation a user may have associated roles or permissions. If the user does not have the associated roles or permissions to perform operations or view such detailed information associated with particular levels the associated menu options wizards and the like may not be displayed or may otherwise be disabled when interacting with the particular user.

As a variation to the foregoing the levels exposed to a user may be limited in that a user may not be allowed to interact with one or more lower levels. For example user interaction with the data storage system may start at level and provide wizard or other menu options for more detailed selection by the user for level . However information and interactions at level may never be exposed if the product is intended only for a certain level of users or a particular target market. In other words the capability to drill down and interact may be limited to only levels and but not level .

An embodiment may also utilize user preferences to determine the initial or default level of interaction and exposure. For example user preference settings stored on the data storage system or on the host may specify a default level used for the user interface menus language and the like. No further detailed buttons or drill down capabilities may be provided via the interface unless the user changes his her preferences and selects to apply such preferences.

In such an embodiment the user interface may be presented from a viewpoint of the user preferences having content structure and an interface language terminology in accordance with the selected level. The user preferences may be stored as configurable parameters or options on the appliance or remotely located such as on the host and used by the appliance. For example the configuration file for the users may be stored on the host. An agent on the host may read the configuration file and communicate the preferences to software on the appliance providing data for populating and presenting the user interface. A user may change the preferences via menu options directly editing a configuration file and the like. As a user gains experience and knowledge a user may select to interact at a lower level for some or all requests.

Referring to shown is another example representation of components that may be included on the data storage system for use in performing the techniques herein for data storage configuration. The example is a more detailed illustration setting forth a particular instance of the different service providers and levels that may be included in an embodiment. Elements and are similar respectively to elements and . Element includes 3 service providers application service provider intermediate or generic storage service provider and physical storage service provider . With respect to a level hierarchy may correspond to level service provider of may correspond to level service provider of and may correspond to level service provider of .

The application service provider may have an application specific focus and provide a level of abstraction customized for an application such as for example a particular email application law office application or medical office application as well as a class of related applications such as a multiple email applications. When interacting with provider for a particular application the interface language may vary with the application. For example if the application is a law office application the interface language menu options and the like may be tailored to the law profession. Similarly a medical office application may utilize an interface language menu options and the like familiar to the medical office. As such the application service provider may use one set of rules or mappings for each application to implement the application specific best practices for the user level. A first set of rules for the medical office application may be used to map the user input parameters using medical office terminology to parameters for the appropriate API calls for other service providers and or . A second set of rules for the law office application may be used to map the user input parameters using law office terminology to parameters for the appropriate API calls for other service providers and or . The user connecting to the data storage system at the application service provider level may be provided with a user interface customized for the selected level and application to perform a requested data storage configuration.

The intermediate storage service provider may be an intermediate or second level of user interaction. As illustrated the provider may communicate with when implementing a request for data storage configuration. In one embodiment a user connecting to provider may be provided with a generic level of interaction which may not be tailored for the particular application. In other words the same language and user interface may be presented to a user for multiple applications such as the medical application or law office application. As a variation to the foregoing the service provider may be customized for each application and provide for a more detailed level of exposure that varies per application.

The physical storage service provider provides the most detailed or greatest level of exposure of the underlying data storage system. The provider may be customized for the particular storage vendor and associated options. The user interface for a user connected at level to service provider may include menu options and terms particular to the underlying storage vendor and the more knowledgeable user. For example the user may specify particular devices RAID levels and techniques file types SCSI and iSCSI terminology and the like.

The best practices and the automation of the best practices as described in more detail in following paragraphs may be customized for a particular application and the particular data storage system and environment. In other words the best practices may vary in accordance with the particular application as well as the underlying data storage system and environment. For example different practices may be preferred for a same application as the underlying data storage system changes. In such an instance for example there may be a first set of mappings used for mapping level information to level providing automation of best practices for a user connecting at level for the application. The same first set of mappings may be used even if the data storage system differs. Other mapping rules may be used to map level information to level information in accordance with the best practices for the underlying data storage system. As the data storage system changes the mappings used for level level mapping may change although the same first set of mappings may be used.

Referring to shown is an example illustrating how the different service providers of may be used to perform the mapping between levels to perform a data configuration request and also provide different levels of user interaction.

Elements and correspond to the different levels of service providers described in connection with . Elements and represent the information obtained via the UI at the various levels and service providers. Element represents the information obtained for a user connected at level to service provider . Element represents the information obtained for a user connected at level to service provider . Element represents the information obtained for a user connected at level to service provider . Information obtained by a user at level n may be subsequently passed on via an API call to one or more other lower level e.g. greater than n service providers in order to perform the user request.

Element may also represent the information communicated by the service provider after the provider applies mapping rules to resulting in an API call of the form as illustrated in . Element may represent the information communicated by the service provider after the service provider applies mapping rules to resulting in an API call of the form as in

With reference to the example if a user interacts with the system at level the application service provider obtains the data included in which is passed on in form to provider as illustrated by . Provider in turn maps data from form to the form of to provider as illustrated by . If a user interacts with the system at level the intermediate service provider obtains the data included in and passes the data of to provider in the form represented in . If a user interacts with the system at level the physical storage service provider obtains the data from the UI in the form . In this example the provider may implement or execute the one or more operations to perform the request indicated by by invoking one or more other code modules . The code modules may communicate with other components on the data storage system to perform the requested task.

In one embodiment the UI of may query each service provider to obtain the appropriate UI data and via API calls in accordance with a user selected level of interaction using any one of a variety of different techniques as described herein and known to those skilled in the art. The UI data and may be used to populate the menus and other UI elements that may be displayed to a user.

The example illustrates the user inputs for creating a file system for an application with interactions at the various levels . Element illustrates the input received from the most basic user level in which the user may enter a command to create a particular files system. The file system created with user level interactions uses all default options specified via mapping rules and API calls to levels and . For level the parameters input from the user or received via mapping and an API call from level are illustrated in . By default parameters related to size e.g. SIZE size device speed e.g. QOS FAST wherein QOS is quality of service and data protection e.g. REDUNDANT are specified. At level there is a level of abstraction from the underlying data storage system but the attribute characteristics may be specified. For level the parameters input from the user or received via mapping and an API call from level are illustrated in . At level details regarding the underlying data storage system such as devices RAID levels vendor specific attributes which file system e.g. NFS CIFS or block storage and the like are specified. For example level indicates that storage for the file system is to be located on a FAST device. Level mapping rules map the abstract FAST attribute to the particular device e.g. LUN s on the data storage system that may be characterized as FAST with respect to other data storage devices . As more physical devices and or logical devices added which are also FAST different LUNs may be used and specified by the mapping rules without any change in the data of . Thus data obtained from users interacting at level and need not change as the underlying data storage system changes when devices are added removed.

In connection with the bottom most level service provider or service provider associated with the greatest level of user knowledge and detail may optionally not include and utilize rules . An embodiment may have the language of the user interface map directly with low level calls to code modules to implement the request. In other words the language terms and parameter values specified by the user at level may not require mapping in order to be utilized by the system.

As will be appreciated by those skilled in the art the examples such as those of and following may be simplistic for purposes of illustration of the techniques herein. At lower levels there may be greater amounts of detail and complexity in order to provide automation of the best practices.

Referring to shown is another representation of the mapping of the different parameters that may be performed by the rules of the different service providers. The example further illustrates the parameter mapping between levels. Element represents the data obtained by service provider . Element represents the data obtained by service provider via direct user interaction or from provider . Element represents the data obtain by service provider via direct user interaction or from provider . The FILESYSTEM type is passed as a parameter from level to level and then passed to level . Level mapping rules may define defaults based on best practices for the particular application as indicated by the parameters SIZE size specifying a default size for the file system and QOS FAST REDUNDANT specifying default quality of service QOS parameters for a fast device with redundancy. Level mapping rules map the parameters of to parameters of as indicated by and . Additionally level mapping rules introduce additional default parameter values as indicated by element when interacting with level .

As described herein the user can connect and interact with the data storage system at various levels to perform data configuration requests. The user may select the level of interaction that can vary with each request. The mapping rules provide for specifying any defaults that may be needed to implement the request. When implementing a same data configuration request for different applications the defaults introduced at one or more levels may vary with application. The mapping rules at the different levels allow for implementation of best practices while insulating and abstracting the details from the user. For example the rules used by the application service provider of may be used to implement application specific best practices. The rules used by the intermediate storage service provider may be used to implement best practices with respect to the underlying data storage system. As such using the techniques herein a framework may be defined which provides customized interfaces for different user levels of interaction with respect to a particular application when performing a data service for data storage configuration for the particular application. Rules included in the framework may be selected for use depending on the application data service and defined set of one or more user groupings. A user grouping may be defined as a set of one or more user levels and associated service providers. For example illustrates a single user grouping of levels with associated service providers and . A data service may be defined as a particular service performed in connection with a data storage configuration request. Example data services are provided elsewhere herein.

Referring to shown is a function that may be used to select a particular rule set. The example illustrates a 3 dimension mathematical function F in representing in a parameterized form a function that may be used in connection with selecting a rule set. As described in more detail elsewhere herein a rule set may be defined as a set of rules or mappings used by the different service provider levels for a specified user grouping. Element indicates the user grouping defined in the example of having 3 user groups or levels.

For purposes of illustrating the 3 dimensional function the first dimension the user grouping has a value as indicated by the user grouping of . The rule sets available for selection with the user grouping are illustrated by element . Element is a matrix of specified rule sets from which one is selected for a particular set of values for the function F of . Other 2 dimensional matrices may be defined for different user groupings. The matrix uses a row index to indicate the rule sets for use with a particular data service and a column index to indicate the rule sets for use with a particular application . Generally data services may include any service that transforms or utilizes the data and or the storage of the data. Exemplary data services include storage capacity provisioning disaster recovery data protection and hierarchical storage management. Storage capacity provisioning data service may include operations to allocate storage. A data configuration request such as a request to create a file system described elsewhere herein may be provided by the storage capacity provisioning data service . The disaster recovery data service may perform services to plan for possible drive failures. Disaster recovery services may include for example data replication. Data protection services may include for example providing data backups encryption services and the like. Hierarchical storage management services may provide services for managing the storage devices. Hierarchical storage management services may include for example moving data between different types of data storage devices such as between a fibre channel data storage disk and an ATA Advanced Technology Attachment disk between one of the foregoing disks and a tape and the like. Other examples of services that may be included in an embodiment are retention services which focus on preventing deleting data until a certain time period and or automated deletion of data after a specified time period and classification services which may index content as stored to allow for other operations such as retrieval of content based on subsequent search criteria categorization of data content and the like. Example application of may include an email application a database application and a banking application as well as the law office application and medical office application described elsewhere herein. It should be noted that a same rule set may be specified for more than one entry in the matrix. An entry in the matrix may not specify a rule set indicating that the particular combination of application and data service for the user grouping e.g. parameters of F is not supported. Other data services as a category or included in a broader data service category may provide for snapshots cloning migration recovery and the like.

It should be noted that application can refer to a particular application category including one or more applications. For example a column of may refer to email applications as a category including multiple email applications from different vendors. However a column of may also be associated with a particular instance of an email application such as Microsoft Exchange.

It will be appreciated by those skilled in the art that the number of dimensions of the function may vary from what is illustrated in . For example if there is only a single user grouping for a set of applications and associated data services then a 2 dimension or 2 parameter function may be used. Additionally as illustrated in more detail in following paragraphs the number of dimensions or parameters for the function may be more than 3.

Referring to shown is an example of a rule set for two applications. The example includes a rule set and another rule set . Each of the rule sets may be identified by an identifier in one entry of the matrix of . The rule set comprises rules used by each level service provider. For example includes level rules and level rules as well as other rules used by other level service providers. Rule set includes level rules and level rules. In this example the level rules of the two rule sets and may be different. However the level rules may be the same for both rule sets as indicated by . As an example described elsewhere herein with respect to the medical office application and the law office application in an embodiment having 3 user levels a different set of level rules may be used to map the different language and terminology of the user interface for each application and a same set of rules may be used to perform the level to level mapping. In such case one entry in a matrix similar to corresponding to the medical application may specify a rule set represented by and another entry in the matrix corresponding to the law office application may specify a rule set represented by .

Referring to shown is a data flow diagram of processing that may be performed by components in accordance with the techniques herein. In the example the rule set determination process selects a rule set from one of the rule set matrices based on the selector inputs . With reference to the selector inputs may indicate values for the parameters of the function F. Based on the particular parameter values the rule set is selected and used by the rule engine . The element may identify the particular rule set as illustrated in specifying the mapping rules used by the different levels of service providers for the user grouping instance included in . Based on the rules engine retrieves the rules used in the mappings from the data store . Each service provider may include one or more of the rules engines to perform the mappings using rules for the level of the service provider. A rules engine may invoke one or more other code modules such as an API of another service provider once a rule has been applied.

It should be noted that elements and may represent a data store such as a file or memory location at which the matrices and rules respectively are stored.

In connection with the rule set determination processing the selector inputs used to select the rule set may be determined in whole or in part implicitly based on the user selections and user input parameters. For example a user may select a menu option to perform a requested task such as provision storage for use with mailboxes for an email application. Thus the application parameter can be determined for the function F of . Based on the requested task the particular data service may be determined. There may be one user grouping of user levels defined for the application and data service instances so the rule set may be selected. The user may input one or more parameters via a GUI. Based on the one or more parameters the user level of interaction may be determined. For example user level may be the only level to have a single parameter. If only a single input parameter is received from the user it may be determined implicitly by the UI to interact with the level service.

At a later point the user may navigate to a different menu level and issue a different data storage configuration request. Accordingly a different rule set may be determined.

It should be noted that each instance of a data service and application may have a different number of user levels and associated service providers. For example a first data service for an application may have 3 levels and a second data service for the same application may have 5 levels or 2 levels. Furthermore in connection with implementing a request for a first data service one or more calls may be made at different levels to other data services. For example a user level request to perform a storage capacity data service operation may use rule set to perform a first call to the data protection service e.g. backup which uses rule set .

Referring to shown is a more detailed representation of the mapping rules as may be utilized in an embodiment. The example is a further illustration of the example described in connection with . The rule set illustrates rules used for the level to level application service provider to intermediate storage service provider mapping and the rules used for the level to level intermediate storage service provider mapping.

The rules indicate that the data of is mapped to the data of . Elements and respectively represent the data from and of . Element indicates that the service to be invoked is the intermediate storage service provides using the API Create with the parameters indicated. The rules indicate that the data of is mapped to the data of . Elements and respectively represent the data from and of . Element indicates that the service to be invoked is the physical storage service provides using the API Create with the parameters indicated. Lines indicate the particular parameter mapping and portions of the rule used for the mapping. In connection with for determining the QOS parameters the rule may include conditional statements and other language elements for implementing the rules. The particular language syntax may be parsed by the rules engine in connection with performing the mapping as described herein. The rules may be evaluated at runtime so that the rule language elements may use variables expressions statements and the like which can be evaluated at runtime in accordance with the user inputs values specified by a calling service provider variables indicated a current state of the data storage system and the like. In this example the element includes statements which may be conditionally evaluated to determine the particular one or more QOS parameters passed in the call to the physical storage service provider. The variable QOS represents a list of parameter values. The example includes 3 if statements which are evaluated based on particular values specified for the first QOS parameter p and the second QOS parameter p. For example if the QOS parameters have values as indicated in of the first if statement evaluates to true and fast device is specified as one of the QOS parameters in the level level call. The second if statement evaluates to false. The statement evaluates to true and RAID information e.g. such as RAID level RAID devices used etc. is added to the QOS parameters in the level level call. Element indicates additional default parameter values specified in the level level call.

In connection with the rules a policy may be used to determine one or more default values. For example in connection with provisioning storage for a level a user request the lower level mapping rules may specify a particular default LUN set used until those LUNs reaches a certain capacity and then a different LUN set may be used. The parameter values in the rules representing the particular LUNs may be modified during operation of the system. The LUN set and the capacity may be included in a policy. The rules may include expressions for runtime evaluation of the amount of consumed storage on the specified LUN set and may use alternately specified LUN sets depending on the consumed capacity. Another way this may be implemented is to have the rules specify a dynamic parameter having a value which is determined at runtime such as by having the rules engine obtain a dynamic parameter value at a current point in time during operation of the data storage system. The dynamic parameter values may be updated by other software which performs monitoring or some other function in accordance with determining the particular parameter.

As a further example illustrating use of the techniques herein different QOS parameters may be provided as defaults using the rule sets for the same application. Different rule sets may be specified depending on the particular usage user grouping s and the like for the same application. For example the same application may be used to provide services to two different groups of users to create a file system. With reference to both user groups may enter a command as in . However the default mapping rules such as illustrated by may vary with each user group. For example a first set of rules used for a first group may create the file system on a FAST device with REDUNDANT storage as illustrated in of . However a second set of rules used for the second user group may create the file system on a SLOW device without providing REDUNDANT storage. Thus the rules used for the second group may be represented as 

rather than as illustrated in of . The rules may be used to customize the default QOS parameters and others for the same application depending on the particular usage and or user group.

As illustrated herein the techniques provide for use of rules processed by the rules engine. The rules are associated with a particular application and requirements or needs of the application as well as the particular storage capabilities of the underlying data storage system. Thus an application s requirements may be mapped to the particular underlying data storage system capabilities using the rules. For example and of may represent the particular needs of the application for the usage. The application needs or requirements are mapped using the rules to the underlying data storage system capabilities such as for example represented in . Thus the rules may be characterized as representing a configuration profile of the application for the particular usage on the data storage system.

Referring to shown is an illustration in more detail of rules that may be used in connection with the medical office application and the law office application as described elsewhere herein. As described above in connection with these two applications mappings used by of may implement application best practices and mappings used by provider may be the same for two applications The rules used by may specify different mappings for the different user interface language terms. The medical office application and the law office application may each have a different set of terms for the UI language at level . Both applications may perform the same data storage configuration request to create a files system but the customers of each application may be in the different market segments each market segment using different terminology. For example a medical office may refer to a customer as a patient and the law office refers to its customer as a client. Requests may be made for both applications to create a file system of a particular size based on parameters particular to each application. Thus the UI data provided by for the medical office application for presentation to a user is different than the UI data provided by for the law office application.

The example includes user interface data for the law office application and the medical office application . The elements and may each represent the user input for a user request. As illustrated both are requests to create a file system. In connection with the request the size of the file system is determined based on the number of clients 100 and particular areas of law for which client data will be stored in the file system. The user request is provisioning storage for 100 clients 60 of which are real estate and 40 of which are patent clients. In connection with the request the size of the file system is determined based on the number of clients 100 . Element includes rules and . Rule is used for the level to level mapping for the law office application. Rule is used for the level to level mapping for the medical office application. In the total size of the file system is determined using a first size defaultsize for each real estate client record to be stored in the file system and a second size defaultsize for each patent client record stored in the file system. In the total size of the file system for the medical office application is based on defaultsize. Rules and illustrate calls to the same API of the level service in which the parameters of the call have different values determined by the level level mapping rules.

Referring to shown is another example of a function that may be used to select a particular rule set. The example illustrates a 4 dimension mathematical function F in representing in a parameterized form a function that may be used in connection with selecting a rule set. Element of provides a fourth parameter vertical market in addition to those previously illustrated in . As a fourth parameter value that may be specified in connection with selecting a rule set a vertical market may be specified such as indicated by . The vertical market may specify a particular specialty or niche market such as for a professional group. In one embodiment a different rules set may be specified for the same combination of user grouping application and data service. For example with reference back to the different user interface data and mapping rules may be specified for the same application in which the user interface data is customized for interaction with the particular law and medical vertical market segments. As such a different rule set may be used for the same application user grouping and data service in which only the level to level mapping rules may vary.

Referring to shown is a flowchart of processing steps that may be performed for each application for which the data storage system will perform processing using the techniques herein. The flowchart generally outlines analysis or the steps that may be performed for each application by developers implementing the techniques herein. At step the one or more user groupings and associated levels are determined. Each user groupings may specify a number of user interaction levels in which levels vary with the particular end users of the application. At step the vertical markets may be determined. Step may be an optional step or may result in only a single vertical market being determined of there is no rule set variation for different vertical markets. Similarly with respect to step a single user grouping e.g. single user grouping with 3 levels or layers may be determined. At step the data services provided by the application are determined. At step the application may be profiled for the data services vertical markets and user groupings determined in previous steps. The profiling may describe how the application interface with the underlying data storage when the data service is provided for the user groupings in the different vertical markets. Step may include determining the best practices for implementing a particular data storage configuration request. When performing requests for an application the profiling describes how that request is to be implemented. Step may include for example determining application specific best practices as may be reflected in the UI language and terms and mapping rules for the different levels. The best practices may also vary with each storage vendor as reflected for example in the level mapping rules described herein by specifying vendor specific attributes for each application or selected groups of different applications and or services. At step the profiling information for the application from step may be expressed in a parameterized form using the rules APIs and functions as described herein to define the framework used by the data storage system in connection with processing a user request.

Referring now to shown is a flowchart of processing steps that may be performed by a data storage system in connection with the techniques herein. At step an incoming user configuration request is received. At step one or more rule sets may be selected. In one embodiment as described herein the request may not be executed immediately. Rather as described in subsequent steps the user allowed to preview a work list of the tasks to implement the request. At step the mappings to implement the request may be processed and the API calls between the different service providers may performed to generate the work list. Step may provide for determining the specific tasks that are to be executed to complete the request received. The specific tasks may be included in the work list and provided to the user for review at step . At step the user may accept or reject the work list. If the user does not accept step evaluates to no and rejection processing is performed. Step may include for example outputting a message that the request will not be performed and waiting for the next user input. If step evaluates to yes control proceeds to step to perform processing to execute the request in accordance with the work list. At step a determination is made as to whether the work list tasks were performed successfully. If not control proceeds to step to perform failure processing. Step may include a variety of different options such as for example attempting to retry the failed operation a number of times outputting an error message undoing or rolling back processing performed in the work list up to the failure point so that the data storage system is placed back in a state before the work list as executed and the like. If step evaluates to yes control proceeds to step to according perform success processing such as for example indicate completion of the request to the user with a message.

It should be noted that as part of the review process of step a user may examine the different objects and entities used to see the result or impact to the data storage system if the request is executed. For example a level user request provisioning storage for a file system may see how much storage would be allocated for the request if the request processing is executed. Such information may be important in evaluating the impact of the request and determining whether a user wants to execute the request.

In a specific application of the system and techniques described above storage may be configured for use with an email application and for storing mailboxes that include electronic mail messages and other information stored or used by the email application. In connection with the configuration processing tasks may include allocating storage specifying the logical and or physical devices used for the storage allocation specifying whether the data should be replicated the particular RAID Redundant Array of Independent or Inexpensive Disks level and the like. With such options in connection with performing the configuration conventionally a customer or user may not have the appropriate level of sophistication and knowledge needed.

For example a typical email application or server is characterized by requiring the storage system to record as a condition precedent to the completion of a transaction information related to that transaction. Assume an author or sender sends a message to a list of recipients. Some email applications respond by producing a write transaction to the mailbox for each recipient and to other locations such as a sent file or folder. Each write transaction involves multiple transfers with the storage system. For example the email application in some email systems writes a log entry for each write transaction directed to a recipient in the email data base and for other transactions. Each log entry identifies the sender the mailbox address for the recipient and the source of the message. In some email systems this log entry is a first of two log entries and indicates that data is to be written to the specified location. After the log entry is successfully completed the application copies the message reading it from its source and writing to the recipient s mailbox. When that transfer is successfully completed the application produces another log entry as a second entry. The log entries for the transactions are important in the case of a system failure. In that situation the log file containing all the log entries can be analyzed to determine which previous email messages have been written successfully and resend any messages that do not have both log entries. In the storage system a single dedicated logical storage device that may reside on one or more physical disk drives normally stores all the log entries for the email application. Also each mailbox in the storage system may either reside on its own logical storage device or reside with other mailboxes on a logical storage device. In such applications the connection between the application and the storage system is usually a shared resource such as a resource that includes a SCSI interface. Once the transaction to write the log device is sent the storage system and application are essentially disconnected until the log device completes recording the log entry. Then the log device reconnects so that the host application can complete the transaction or continue to perform added task functions. Such a disconnection and reconnection also occurs with write transfers and certain other transactions. In email systems with many users writing entries to the log device can produce a bottleneck particularly when a single email message is written to a large number of recipients on an email list so that a large number of write operations are directed to the log device. Thus proper configuration of the storage system for use with the email application is important otherwise response times increase and can become evident in the form of prolonged response times for the user of the host applications.

In one embodiment the one or more data storage systems of may be an appliance with hardware and software for hosting the data storage of an email application executing on the hosts . The appliance may include one or more storage processors and one or more devices upon which data including mailboxes is stored. The appliance may include software used in connection with storing the mailbox data of the hosts on the appliance and also software used in connection with configuring the data storage for use by the hosts in connection with techniques described herein. In particular in connection with an email application server component that may executed on the hosts the data storage configuration tasks may include allocating storage for user accounts or mailboxes specifying the devices logical and or physical used to store the email data specifying whether data replication is performed for disaster recovery and the like.

For example a level user may use screen to issue a data storage configuration request to provision storage for a number of mailboxes for storing data of an email application executing on one of the hosts. As shown in the level user may specify a minimal amount of information in connection with the request such as only a number of mailboxes. A user may interface with the data storage system using screen and issue the data storage configuration request. As shown in the language and terminology of user interactions may be customized for the level user of the email application. In connection with the same email application a more knowledgeable user may choose to issue a data storage configuration request via a GUI for a same number of mailboxes by interacting with level service . At level the user provides more detailed information about the request regarding the underlying data storage device and how this data storage device is used by the email application. To further illustrate the level data storage configuration request may specify the physical and or logical devices upon which storage is allocated provide vendor specific attributes or settings indicate a number and type of file created and the like. In connection with the type of file created this may be particular to the email application. A file may be a database or a log file. The log files are used to keep a record of transactions taking place and may be used in connection with recovery operations. The database files hold mailbox stores such as email data. In connection with the user communicating with the level service provider such detail is not provided and defaults may be specified by the data storage system when implementing the level data storage configuration request. The defaults may be customized for the particular email application.

When implementing the request the level service provider may communicate with one or more other level service providers such as and . Different defaults for the particular email application may be used by service providers and . For example with reference to the level request for the email application described above the level service provider may communicate with the level service provider . Provider may then communicate with the level service provider to implement the request and allocate the requested storage along with specifying other defaults such as for example a default level of data protection. The service provider may communicate with other data storage system hardware and or software when implementing the configuration request.

The application service provider may provide a level of abstraction customized for a particular email application as well as a class of related applications such as a multiple email applications. When interacting with provider for a particular email application the interface language may vary with the email application. For example the interface language menu options and the like may be tailored to Web based email or client software based email. As such the application service provider may use one set of rules or mappings for each email application to implement the application specific best practices for the user level. A first set of rules for the Web based email application may be used to map the user input parameters using Web browser terminology to parameters for the appropriate calls for other service providers and or . A second set of rules for the client software based email application may be used to map the user input parameters using client software based terminology to parameters for the appropriate calls for other service providers and or . The user connecting to the data storage system at the application service provider level may be provided with a user interface customized for the selected level and email application to perform a requested data storage configuration.

Thus storage may be allocated and configured for the appropriate email application. For example in at least one implementation the storage system may be configured so that certain types of email application data are stored at specific respective logical storage devices and the storage system may further be configured so that the completion of tasks associated with different email application transactions with one logical storage device are conditions precedent to the completion of other transactions. Specific tasks related to the one logical device may be given priority over tasks related to all other logical storage devices. Reconnect tasks may be given the highest priority with reconnect tasks from the one logical storage device being given the highest priority. A second category of tasks related to the one logical storage device may be given priority over all other tasks except reconnect tasks. All other tasks may be given a priority below that of the first and second task categories.

An embodiment may implement the techniques herein using code executed by a computer processor. For example an embodiment may implement the techniques herein using the rules rules engines and the like using code which is executed by a processor of the data storage system. As will be appreciated by those skilled in the art the code may be stored on the data storage system on any one of a computer readable medium having any one of a variety of different forms including volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by a data storage system processor.

The foregoing provides a flexible approach for automated implementation of best practices that can be customized in accordance with the particular application data service and or data storage system. The best practices may vary with application as well as the particular data storage system. A user may select a level of interaction with the system in which the level selected varies the assumed knowledge or user sophistication level of detail and level of automation for the particular application. The user may select a level such as level to obtain a greater level of automation of best practices customized for the particular application. A user may also select to obtain a lesser level of automation of best practices as the user knowledge level and sophistication increases. The selected level may be associated with a particular user interface level of automation and interaction with the data storage system for performing data services for a particular application. The automation of the best practices may be implemented using a variety of different frameworks and infrastructures. The exemplary one set forth herein uses a rule based system although it will be appreciated by those skilled in the art that others are possible to implement the techniques set forth herein.

While the invention has been disclosed in connection with preferred embodiments shown and described in detail their modifications and improvements thereon will become readily apparent to those skilled in the art. Accordingly the spirit and scope of the present invention should be limited only by the following claims.

