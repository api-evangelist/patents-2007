---

title: Post-install configuration for applications
abstract: Embodiments of the present teachings provide for standardized post installation configuration of a software application. For Linux-based applications, a portal service provides a Red Hat Packet Manager (“RPM”) package that includes selected software to be installed on a user's computing device, and a post install configuration file (“PIC”). A post-install configurator accesses the PIC file and performs post-installation configuration based on the contents of the PIC file. The PIC file thus provides a standardized mechanism in which software vendors can specify post-installation configuration of their applications, without having to develop their own tools or applications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08370829&OS=08370829&RS=08370829
owner: Red Hat, Inc.
number: 08370829
owner_city: Raleigh
owner_country: US
publication_date: 20070831
---
The present invention relates to application and configuration. More particularly the embodiments of the present invention relate to providing an efficient mechanism and process for standardizing post installation configuration of applications.

Computers and computer applications have become a way of life for the majority of society. Although most computers come pre configured with some computer applications most users must install and or configure additional computer applications on their computer to tailor their computer for their particular needs. Such computer application installation and or configuration can be as easy as a one step activation of an installation program. Because of this complex nature the post install configuration can not be automated without some level of user interaction or knowledge of the prexisting system. However in order to make an application truly operational more complex computer applications require a user to perform post installation configuration of the application.

Unfortunately post installation configuration can be difficult. Some post installation configuration decisions require knowledge of an installation parameter and or a configuration parameter e.g. parameters of a user s computer hardware operating system parameters other computer programs installed on the user s computer etc. Without a user making the proper post installation configuration the installed application may either not execute at all or alternately may not execute in the manner desired.

Typically if a user has a question with any portion of the installation and post installation a user can attempt to look up an answer on the Internet. Knowledgebase assistance is widely available at numerous websites on the Internet. However to find an answer to a particular post installation question a user must know what keywords to use in a search field in order to obtain a helpful answer. A user could literally spend hours searching a particular installation question before finding a helpful answer.

Alternately a user can attempt to call some type of help line or use an instant messaging window to obtain help from a live assistance person. However calling a help line typically results in having to wait for a help person to answer the call and must hope they get a help person that has the knowledge that they need and can convey it in the manner that will assist the user.

Accordingly it would be desirable to provide a way for efficiently performing post installation configuration of applications.

For simplicity and illustrative purposes the principles of the present teachings are described by referring mainly to exemplary embodiments thereof. However one of ordinary skill in the art would readily recognize that the same principles are equally applicable to and can be implemented in all types of networked computer systems and that any such variations do not depart from the true spirit and scope of the present teachings. Moreover in the following detailed description references are made to the accompanying figures which illustrate specific embodiments. Electrical mechanical logical and structural changes may be made to the embodiments without departing from the spirit and scope of the present teachings. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present teachings is defined by the appended claims and their equivalents.

Embodiments of the present teachings provide for standardized post installation configuration of a software application. For Linux based applications a portal service can provide a Red Hat Package Manager RPM package that includes selected software to be installed on a user s computing device post install configurator and a post install configuration file PIC . The post install configurator accesses the PIC file and performs post installation configuration based on the contents of the PIC file. The PIC file thus provides a standardized mechanism in which software vendors can specify post installation configuration of their applications without having to develop their own tools or applications.

A post install configuration PIC tool at a client provides a standardized application post install configuration of a software application after it has been installed. The PIC tool is integrated into the RPM package and can parse information in the PIC file and prompt a user for configuration information. The user provided information is then used to perform the post install configuration. Since it is integrated into the RPM package the PIC tool can be placed in a known predefined location during installation and initiated once the software has been installed. The PIC tool can have an interface such as a graphical user interface GUI and a text user interface TUI . The PIC tool may also be able to query a remote server or service for additional information and can be accessed remotely by the portal service if needed.

An independent software vendor ISV can provide the parameters for the PIC file to be placed on the portal service. The ISV can use a web browser or other similar graphical user interface GUI to interact with the portal service. In some embodiments the PIC file is in a standardized format such as an extensible markup language XML file that the ISV uses to specify post installation configuration.

Reference will now be made in detail to the present embodiments examples of which are illustrated in the accompanying drawings. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts.

The users can be an individual user a small business owner a user within a business or governmental entity etc. The users can interact with the portal server using computing platforms such as laptops personal computers workstations servers or other similar devices.

The users can interface with the portal server through the network via a network connection not shown . Users can access the portal server to retrieve software application s that they desire to install on their computing device. A user can access the portal server via known Internet communication protocols e.g. Transmission Control Protocol Internet Protocol TCP IP using known Internet addressing schemes. The network connection can be a private network e.g. a business network an educational network etc. an Internet service provider or other similar interfaces means. The network can be a combination of local wide area networks as well as private or public networks or combinations thereof. In some embodiments the Internet can be used as the network .

A user computing device can also include a PIC tool that can provide a common interface with other software application configurations. The PIC tool can configure a software application after it has been installed. The PIC tool can parse the information in the PIC and prompt a user for information Additionally the PIC tool can poll a portal server to retrieve updated or recommended settings and information. The information provided by the user can be used to perform the post install configuration.

Since the PIC tool can be integrated into a RPM package it s installation and location of the PIC file may be standardized and automated. The PIC tool can then be initiated once the PIC file is placed in a predefined location on the user computing device. The PIC tool can have both a GUI and text user interface TUI or application programming interface API for interfacing from third party applications. As noted because the PIC can be distributed from a central location i.e. portal server the user can be provided with a standardized post installation configuration GUI or TUI that is not ISV dependent.

The portal server can be implemented with a variety of servers from manufacturers such as DELL. HEWLETT PACKARD TRANSMETA SUN MICROSYSTEMS etc. as known to those skilled in the art. The portal server can store and execute a multi user operating system such as RED HAT Linux 5.xx WINDOWS Enterprise UNIX HP or other operating systems known to those skilled in the art. Similar to the users the portal server can interface with the network via a network interface such as private network a T connection or other similar high throughput network interface.

The portal server can store a plurality of software applications that a user can install on their computing device s that can be transferred to a user along with a software application to ease configuration of the software application.

The portal server can include an installation and configuration assistant ICA module that are accessible by the ISVs to add delete or modify the PIC files of their applications as described in more detail below . The ICA module can be configured to provide an ISV with a list of their software applications that are available on the portal server .

In some embodiments the PIC file can be an extensible markup language XML file or similar language that can describe what the software application requires to direct execution of a processor. The PIC file can describe what is prompted to a user buffering any user supplied information and the processing the user supplied information. The PIC file can also be specific for each software application. For example it is often common to specify items such as the time zone passwords user accounts etc. during post installation. The PIC file may thus comprise the parameters for specifying these items.

The ICA module can be further configured to query a user to input the parameters of the computer system of the user i.e. a computing environment. For example the ICA module can generate a configuration GUI that allows a user to input parameters such as operation system type and version central processing unit amount of memory installed applications number of disk drives number of users security requirements etc.

ISVs may interface with the portal server through the network via a network connection not shown . The network connection can be a private network e.g. a business network an educational network etc. an Internet service provider or other similar interfaces means. The network can be a combination of local wide area networks as well as private or public networks or combinations thereof. In some embodiments the Internet can be used as the network .

As shown in the ICA module can comprise an ICA manager module a user interface module a RPM packager a RPM package database module a PIC manager module and a PIC database module . These components of ICA module will now be further described.

The ICA manager module can be configured to manage modules to coordinate the internal functionality of the ICA module . In some contexts the ICA manager module can be considered the main thread or routine that manages the data flow and processing sequences of data flowing throughout the ICA module .

The ICA manager module can interface with the user interface module . The user interface module can be configured to generate GUIs to retrieve information from a user as well as provide the user a mechanism for receiving information. The user interface module can be configured to generate GUIs to retrieve information from a user as well as provide the user a mechanism for receiving information. The GUIs of the user interface module can be written in e.g. HTML XML Java etc. as is known to those skilled in the art.

The RPM packager can be configured to accept the selections of software application s from the user interface module through the ICA manager module . The RPM packager can retrieve the selected applications from the RPM database .

The RPM packager can also be configured to receive a PIC from the PIC manager module and package the selected applications and the PIC as an RPM package .

The PIC manager module can retrieve the PIC s from the PIC database module . More particularly the user software application selection s can be passed to the PIC manager module from the user ICA manager . The PIC manager module can formulate a database query with the user software application selection s . The PIC manager module can issue the formulated database query to the PIC database module . The PIC database module can pass a PIC s that corresponds to the formulated database query back to the PIC manager manager . The PIC manager module can then pass the PIC s to the PIC manager module .

In some embodiments the RPM package database module can also store prerequisite software application s that may be required by the selected software application s . Thus the RPM packager can automatically retrieve prerequisite software application s and package the RPM package that not only conventionally includes software application files but additionally includes prerequisite software application s and the PIC s retrieved from the PIC database as well as PIC tool . For example a user selecting the ZIMBRA Collaboration Suite can automatically receive the MYSQL software application and PIC s associated with the ZIMBRA Collaboration Suite and the MYSQL software application.

Once the system specific RPM package is packaged the ICA manager module can direct the user interface module to generate a results GUI that provides a link for the user to download the system specific RPM package to a user as a RPM package. Alternately the RPM package can be a separate file from the PIC s that a user can download individually and then executed individually to perform their respective installation and post installation configuration.

The PIC database module can be populated by the ISVs using a web browser or other similar graphical user interface GUI widget to interact with the portal server . The ISVs can interact with the user interface module to establish a desire to populate the PIC database module . Their desire can be conveyed through an ISV GUI provided by the user interface module . The ISV GUI can provide a menu selection to allow the ISVs to pass their created PIC s to the PIC database module . The user interface module can receive the ISV PIC s and transfer the PIC s to the ICA manager . The ICA manager can transfer the ISV PIC to the PIC manager which can store the ISV PIC s on the PIC database .

An ISV can use a developer tool to create the PIC that populates the PIC database . The developer tool can have knowledge of what other software applications that exist on the portal service what services those software applications provide and how to package them into a PIC. The developer tool may thus assist an ISV in developing a PIC for their software application.

In step an ISV submits a PIC file to the ICA manager module . In some embodiments the ISV may be required to authenticate to the portal server to gain access. Once the ISV has been authenticated the ICA manager module can invoke the user interface module to display a standard interface to the ISV. Through this interface an ISV can be directed the PIC manager to retrieve their appropriate PIC file s from the PIC database for editing etc. or may be permitted to add or delete PIC file s from the PIC database as desired.

In step upon request by a user such as user the RPM packager can be configured to package the software application s a PIC tool and a PIC file into a RPM package . Next in step RPM packager can pass the RPM package to the ICA manager module . The ICA manager module may then make the RPM package available to the user for download. The user can then choose to download the RPM package at their convenience. Alternatively the RPM package can be placed on a portable storage medium such as compact disc tape flash drive or other similar persistent storage device.

In step at the system of user the RPM package is downloaded and installed. The RPM package may be installed over a network or from a medium such as a compact disc flash drive and the like. As noted within RPM package the PIC tool and PIC files are integrated as part of the RPM package. Thus as part of the installation process of the software application s the PIC tool and PIC files are also installed at a standardized directory location. This information may be specified for example in what are known as a RPM kickstart file.

In step after installation the PIC tool is started. The PIC tool can be initiated automatically or user directed i.e. manually. Upon startup the PIC tool may perform various checks such as whether all of the prerequisite software has been installed and identifies the operating environment of the software application s .

In step the PIC tool performs post installation configuration of the software application s . In particular the PIC tool may be configured to find and locate the PIC files on the system of user . PIC tool may then read PIC files and use this information to perform the post installation configuration.

For example the PIC tool may specify basic items such as the time zone to be used by the software application create a default account create one or more user accounts configure network connections of the software application s etc. Of course during post install configuration PIC tool may interactively prompt user for various feedback or parameters. Alternatively the PIC tool may pull configuration settings and options from the Portal server. Those skilled in the art will recognize that any sort of post installation configuration may be performed by the PIC tool and using PIC files .

In step the PIC tool concludes its post install configuration of the application and shuts down. Optionally the PIC tool may then startup the software application or ask user for a response.

Of note since the PIC tool and PIC files are integrated as part of a RPM package this allows these items to be managed by the Linux RPM command. Thus it allows user to add and remove PIC tool and PIC files query for version information and check their dependencies and integrity. This feature allows post install configuration to leverage the benefits of the RPM packaging and RPM functions of the Linux operating system.

The various modules disclosed herein can be implemented in hardware in software or a combination of hardware and software. Implementation in hardware or a combination of hardware and software would have the various modules communicating with over a data interface e.g. a universal serial bus a Peripheral Component Interconnect PCI interface a Firewire interface etc.

As shown in the computer system includes one or more processors such as processor that provide an execution platform for embodiments of the present invention. Commands and data from the processor are communicated over a communication bus . The computer system also includes a main memory such as a Random Access Memory RAM where the ICA module may be executed during runtime and a secondary memory . The secondary memory can include for example a hard disk drive and or a removable storage drive representing a floppy diskette drive a magnetic tape drive a compact disk drive etc. The removable storage drive can read from and or writes to a removable storage unit in a well known manner. A user interfaces with the security client and certificate management system with a keyboard a mouse and a display . A display adapter interfaces with the communication bus and the display . The display adapter also receives display data from the processor and converts the display data into display commands for the display .

Certain embodiments may be performed as a computer program. The computer program may exist in a variety of forms both active and inactive. For example the computer program can exist as software program s comprised of program instructions in source code object code executable code or other formats firmware program s or hardware description language HDL files. Any of the above can be embodied on a computer readable medium which include storage devices and signals in compressed or uncompressed form. Exemplary computer readable storage devices include conventional computer system RAM random access memory ROM read only memory EPROM erasable programmable ROM EEPROM electrically erasable programmable ROM and magnetic or optical disks or tapes. Exemplary computer readable signals whether modulated using a carrier or not are signals that a computer system hosting or running the present invention can be configured to access including signals downloaded through the Internet or other networks. Concrete examples of the foregoing include distribution of executable software program s of the computer program on a CD ROM or via Internet download. In a sense the Internet itself as an abstract entity is a computer readable medium. The same is true of computer networks in general.

While the teachings has been illustrated with respect to one or more implementations alterations and or modifications can be made to the illustrated examples without departing from the spirit and scope of the appended claims. In addition while a particular feature of the teachings may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular function. Furthermore to the extent that the terms including includes having has with or variants thereof are used in either the detailed description and the claims such terms are intended to be inclusive in a manner similar to the term comprising. 

Other embodiments of the teachings will be apparent to those skilled in the art from consideration of the specification and practice of the teachings disclosed herein. It is intended that the specification and examples be considered as exemplary only with a true scope and spirit of the teachings being indicated by the following claims.

