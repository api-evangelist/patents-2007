---

title: Method and arrangement for mediating web services using UDDI
abstract: The present invention relates to a UDDI server and method in a UDDI server for mediating Web services provided by a number of service providers to a number of service requesters. The UDDI server according to the present invention is adapted to provide support for taking dynamic quality of service into account in the mediation of Web services. The UDDI server comprises a Web service register which includes data sets for storing QoS status information. The QoS status information is information on the current QoS that an associated Web service can offer to a service requester. The QoS status information stored in the data sets is updated periodically based on dynamic service status information received from the service providers. The UDDI server may optionally include a decision making function for selecting a Web service that satisfy a set of QoS requirements of a service requester.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09197708&OS=09197708&RS=09197708
owner: Telefonaktiebolaget L M Ericsson (publ)
number: 09197708
owner_city: Stockholm
owner_country: SE
publication_date: 20070314
---
The present invention relates to a method and arrangement for support for Web services and more particularly to management of dynamic quality of service QoS for Web services.

The World Wide Web Consortium W3C has defined a Web service as a software system designed to support interoperable Machine to Machine interaction over a network. Web services are frequently just application programming interfaces API that can be accessed over a network such as the Internet and executed on a remote system hosting the requested services. Examples of Web services include e.g. a booking service for air tickets provided by a travel agency over the Internet a call set up service for setting up a HSDPA High Speed Downlink Packet Access connection provided by a 3G operator and a service for setting up a multimedia session between two end users.

UDDI Universal Description Discovery and Integration is a protocol for publishing and discovering metadata about Web services. A UDDI server acts as a service broker for Web services. Service providers can register information about their services in the UDDI server and service requesters can contact the UDDI server to find a suitable service based on the information stored in the UDDI server.

WSDL Web Services Description Language is an XML extensible Markup Language format that is used for describing a Web service to be provided. A service requester may for instance receive a WSDL file from a UDDI server or from a service provider as the result of a service request. The WSDL file will explain the details that the service requester needs to know in order to use the Web service.

SOAP Simple Object Access Protocol is an XML based message envelope format that can be used for communication between e.g. a service provider and a service requester.

A service provider who has implemented a service for open use by others can post information about the service on a UDDI server. This means that information on the service is stored in the UDDI server and searchable when a service requester contacts the UDDI server in the search for a desired service. If one or several suitable services are found when the UDDI server receives a service request it can respond e.g. by sending the address of the service provider of each suitable service or a WSDL file or URL Uniform Resource Locator associated with each service to the service requester.

The information that is stored in the UDDI server about a service will generally include such data as the name of the company that provides the service the type of the service and information required for connecting to the service e.g. a URL . The information may also include QoS information such as the capacity of the Web service i.e. the number of simultaneous requests that can be supported information on robustness of the Web service and information relating to the performance of the Web service. The W3C document QoS for Web Services Requirements and Possible Approaches http www.w3c.or.kr kr office TR 2003 ws qos describes QoS requirements for web services.

The US patent application US 2005 0235053 discloses a method and mechanisms for searching for Web services that makes it possible for a service requester to receive a list of possible services along with information on the service history of each service. The service requester can then select a service from the list based on the received information. For this purpose the service provider will collect information regarding the delivered quality of service in the past i.e. the service history resulting from actual operation of the service and provide this information to the UDDI site.

However from the point of view of the service requester the prior art mechanisms for searching for Web services have drawbacks since they are not particularly focused on the interests and needs of the service requester. A service requester may have special QoS requirements for a certain service. But with the Web service solutions that are available today it is difficult for the service requester to find a Web service that fulfils his her requirements. For example a service requester may want to use a Web service to set up a multimedia session between two end users. The requester has certain QoS requirements for the session such as transmission rate packet loss transmission delay and jitter delay. With the Web service solutions that are described in the above mentioned W3C document and US patent application the service requester may be able to receive some information either relating to the capacity of a web service in general or information relating to the QoS that the service has been able to provide in the past but this will not give the requester any information on the QoS that the requester will receive for his her session. The capacity of a Web service is changing dynamically depending on the number of currently ongoing sessions and their QoS requirements. The service that historically has provided the best QoS may not be the best choice for the requester at the time he she wishes to set up the multimedia session due to a very large number of ongoing sessions at that time. If there are several service providers the service requester wants to get the service from the service provider who can best satisfy his her QoS requirements. The service requester will probably not be interested in general QoS requirements such as the number of simultaneous requests that can be supported. He she will mainly be interested in what the best quality of service is that he she can get for the moment from the service provider.

As mentioned above the Web service solutions that are available today are not focused on QoS support from the viewpoint of the service requester. An object of the present invention is therefore to provide methods and arrangements for supporting dynamic QoS requirements in Web services.

The above stated object is achieved by means of a UDDI server and a method in a UDDI server according to the present invention.

A first embodiment of the present invention provides a UDDI server for mediating Web services provided by a number of service providers to a number of service requesters. The UDDI server comprises a Web service register for storing information associated with the Web services. The Web service register includes data sets for storing QoS status information associated with each Web service respectively. The QoS status information is information on the current QoS that the associated Web service can offer to a service requester. The UDDI server also comprises means for updating the QoS status information stored in the data sets periodically based on dynamic service status information received from the service providers.

A second embodiment of the present invention provides a method in a UDDI server for mediating Web services provided by a number of service providers to a number of service requesters. The method comprises a step of registering at least one Web service in the UDDI server. This registering step includes storing information associated with each Web service which information includes QoS status information associated with each Web service. The QoS status information is information on the current QoS that the associated Web service can offer to a service requester. Furthermore the method comprises a step of updating the stored QoS status information periodically based on dynamic service status information received from the service provider of each Web service respectively.

Further embodiments of the present invention provide a method and UDDI server for selecting a Web service that satisfy QoS requirements of a service requester in response to a service request.

An advantage of the present invention is that it allows for Web service mediation that takes dynamic QoS into account. The present invention provides support for QoS provisioning that makes it is possible for a UDDI server to provide better service to service requesters by matching the service providers with Web services that satisfy the service requesters requirements.

Another advantage of the present invention is that it provides a tool for better resource management of the resources of service providers. According to the present invention service requests may be better distributed between different service providers since the different service providers capacity may be taken into account. Thereby it is possible to avoid overloading a service provider with no available capacity with service requests and instead steer the service requests to service providers with capacity available. This will probably be better for all parties since giving poor quality of service or no service at all to a service requester may damage a service provider s reputation.

A further advantage of an embodiment of the present invention is that it may provide for faster delivery of a Web service since unnecessary requests for Web services may be avoided. This is possible since the UDDI server according to an embodiment of the present invention is able to give a service requester information about Web services that satisfy the service requester s QoS requirements. Thereby the service requester may avoid making requests to Web services that cannot support the service requester s requirements.

Yet a further advantage of an embodiment of the present invention is that a possibility to customize requests for Web services through a preference register may be provided.

Further advantages and features of embodiments of the present invention will become apparent when reading the following detailed description in conjunction with the drawings.

The present invention now will be described more fully hereinafter with reference to the accompanying drawings in which preferred embodiments of the invention are shown. This invention may however be embodied in many different forms and should not be construed as limited to the embodiments set forth herein rather these embodiments are provided so that this disclosure will be thorough and complete and will fully convey the scope of the invention to those skilled in the art. In the drawings like reference signs refer to like elements.

A common architecture for realizing a Web service is illustrated schematically in . A service provider has implemented a Web service that is open for use by others via a network such as the Internet. In order to promote the Web service the service provider registers the Web service with a UDDI server which acts as a Web service broker. The registration step may include that the service provider transmits information such as the name of the service provider the type of service and information required for accessing the service. It is also possible that the service provider transmits a WSDL file describing the Web service to the UDDI server. The UDDI server stores the information that it has received about the Web service from the service provider along with information regarding other Web services provided by other service providers in a Web service register . A service requester who wishes to use a certain type of Web service may find suitable services by sending a search request to the UDDI server . Assume for instance that the service requester would like to book an air ticket on line that the Web service is a travel booking service and that the service provider e.g. is a travel agency. The search request will then indicate that the service requester would like to search for a travel booking service. The UDDI server will check the Web service register for travel booking services and return information regarding any registered travel booking services in a search response . In this case the UDDI server will send information regarding the Web service and possibly also about other travel booking services registered with the UDDI server in the search response . The search response may for instance include such information as the name of the service provider a URL for accessing the service or a WSDL file depending on what type of information the UDDI server has stored for the particular Web service. The search response may be followed by the service requester connecting to the service provider to request use of the Web service . The service provider may then respond by sending a WSDL file to the service requester that provides the service requester with all the information that is needed to use the service. In this case the WSDL file may e.g. specify the parameters such as desired departure time destination and airline that the service requester should send when using the Web service . Based on the information in the WSDL file a Web service client may be set up at the service requester . In case the service requester has received the WSDL file describing the service already from the UDDI server then the service requester can start using the Web service directly without contacting the service provider first to receive the WSDL file.

It should be noted that there are several different ways of realizing Web services and that and the description above merely constitutes one example.

As mentioned above the Web service solutions that are available today are not focused on QoS support from the viewpoint of the service requester. However embodiments of the present invention provide a method and UDDI server for supporting dynamic QoS requirements in Web services.

The QoS status information stored in the service status data sets is periodically updated based on updated information received from the different service providers. These updates may take place e.g. in response to reception of a periodic automatic push message from the service provider or by means of a periodic active pull by the UDDI server. The mode by which the updated dynamic QoS status information is transported to the UDDI server may depend on the Web service. As an example push may be used for updating the QoS status information for popular Web services that are often requested while pull is used for updating of seldom requested services for which the QoS status update is not so critical. But many different schemes for transporting the updates to the UDDI server are possible and the one that is implemented is matter of choice. The QoS status information may e.g. be carried in SOAP messages between the different service providers and the UDDI server.

The UDDI server may optionally also include a QoS model register . The QoS model register includes a number of pre defined QoS models . The QoS models each specifies a number of QoS parameter fields and represent a QoS profile of a Web service. The QoS models may serve as templates for the service status data sets . Using a QoS model register with a set of pre defined QoS models will simplify the handling of the service status data sets .

As mentioned each entry i.e. each QoS model in the QoS model register has a number of fields that represent the QoS profile of a Web service. Two examples of QoS models are illustrated in and . illustrates a QoS model that is particularly adapted for describing the QoS profile of a service for setting up a data connection. The QoS model comprises fields and for storing transmission rate packet loss transmission delay peak rate and average rate. illustrates a QoS model that is particularly adapted for describing the QoS profile of a service for setting up a multimedia session. The QoS model comprises fields and for storing transmission rate packet loss transmission delay and jitter delay. The QoS parameters used will accordingly depend on the type of Web service. Some other examples of QoS parameters that may be relevant are maximum rate average rate minimum rate resolution sampling rate etc. or parameters relating to the quality of audio video and data.

It is possible that the same QoS model is used by many different services. The use of the same QoS model will make it easier to compare Web services of the same type. It is also possible for a Web service to be associated with several QoS models if the Web service corresponds to a combination of several different types of services.

If a QoS model register is used it is preferable that when a new service is registered at the UDDI server it has to be associated with at least one QoS model . If none of the QoS models fits the service a new QoS model can be created and stored in the QoS model register . This should preferably be done in a controlled way by the UDDI server.

Services which do not guarantee QoS requirements may be associated with a NULL entry in the QoS model register .

Once a service is registered and a QoS model is selected the UDDI server will create the service status data set for QoS monitoring using the selected QoS model as a template. The service status data set is linked to the registered service. As mentioned above the content of the service status data set will be updated dynamically based on information that is received periodically or upon request from the provider of the Web service. The content of the service status data set will indicate the highest QoS requirements that currently can be supported by the associated Web service.

When QoS models are used the equipment of a service requester may be adapted to directly include a set of QoS requirements in a service request . Alternatively the service requester may send a service request to the UDDI server for a particular type of service without QoS requirements and the UDDI server may respond to the service request by sending the service requester a message including a QoS model that corresponds to the requested service type in order to indicate what QoS parameters the service requester may specify in a set of QoS requirements. The service requester will then respond by specifying the desired QoS requirements in a response message and the UDDI server will start looking for a suitable service after having received the desired QoS requirements from the service requester .

It will be apparent for the person skilled in the art from the description above that implementation of the present invention will require some adaptation of a UDDI server according to prior art. The natural choice is to implement the present invention by providing the UDDI server with new software although implementations in firmware hardware or combinations thereof are also feasible. The UDDI server will e.g. have to be adapted so that the Web service register is arranged to store the QoS status information. The UDDI server will also have to be provided with means for communicating with the service providers to receive and update the QoS status information. Such updating means are schematically illustrated in and denoted by reference numeral . The updating means would generally be implemented in software and would probably be arranged use an already existing interface for communicating with the service providers.

Apart from adaptations in the UDDI server some adaptation of the equipment of the service providers may also be required since the service provider should be able to provide the UDDI server with the service status information and periodically send updates of this information to the UDDI server. Furthermore the service providers should also have the necessary means to keep track of their own QoS status for instance in terms of their current available capacity. It may also be necessary to adapt the equipment of the service requesters somewhat. According to embodiments of the present invention the service requesters should have the means for communicating QoS requirements to the UDDI server. If QoS models are used the service requester should e.g. be able to obtain QoS models and present QoS requirements to correspond with an appropriate QoS model. Such adaptations would generally be made in software as is apparent for the person skilled in the art.

The above mentioned features of adapting the UDDI to store and monitor QoS status information regarding the current QoS that Web services can offer to service requesters will make it possible for the UDDI to provide better service request responses to the service requesters. However the UDDI may be able to provide even better service to service requesters and service providers if a number of additional features are implemented in the UDDI server as is illustrated in and will be described below.

When the UDDI receives a service request R from e.g. service requester for a desired type of service along with a set of QoS requirements the DMF will process the service request and select a Web service from the Web services of the desired type that are registered in the Web service register so that the current QoS that the selected Web service can offer as indicated by the QoS status information stored in the associated service status data set fulfills the set of QoS requirements. The UDDI will then send information about the selected Web service to the service requester in a service request response message. Thereby instead of receiving a list of possible Web services from the UDDI the service requester would receive information about a single Web service that is known to fulfill the QoS requirements of the service requester. From the service requesters point of view this is thought to be very attractive compared to the prior art solutions since it spares the service requester the trouble of possibly having to choose between a plurality of Web services. According to the prior art solutions the service requester would not even know if the Web services that the UDDI has sent information about are suitable or not since no information regarding the Web services capability of fulfilling the QoS requirements of the service requester were provided according to the prior art.

The UDDI server illustrated in may optionally also comprise a preference register . In the preference register more static preference information about the service requesters . . . M and or service providers . . . N may be stored. The preference information stored in the preference register is usually not service request specific. It could be ratings from others preferred charging schemes preferred service providers requesters weights on QoS parameters etc. It is not excluded that actual QoS requirements also may be stored in the preference registry if e.g. a service requester always requests the same service with the same QoS requirements. But the QoS requirements are normally not stored in the preference registry. The service requesters can continuously update the preference register depending on e.g. pricing policy previously received service etc.

If a preference register is used the DMF should be adapted to take the relevant preference information stored in the preference register into account when selecting a Web service as will be explained in further detail below.

The UDDI server may furthermore optionally comprise one or several request queues . One request queue for each type of Web service registered in the UDDI may be provided. The service requests for a specific type of Web service may be put in the request queue associated with the specific type of Web service if there is currently no capacity available for the registered Web services such that the preferences and or QoS requirements associated with the service requests can be fulfilled. The service requests are placed in the request queue to wait for available capacity.

The DMF of the UDDI server is preferably arranged to base its selection of a Web service on not only the QoS requirements and the QoS status information of the registered Web services but also on any stored preference information relating to the service requester and or service providers and the request queue status. The DMF is not limited to any specific type of decision making or selection algorithm. There are many different algorithms that may be used. When there are several suitable Web services to choose from it is for instance possible to use an algorithm that selects the Web service with the largest capacity a random selection algorithm or a round robin mechanism.

If one or several request queues are used there are several different ways of managing the requests in the request queue. A new check to see if any of the service requests in the request queue may be fulfilled may e.g. be made at pre determined intervals. An alternative is to perform a check when the QoS status information is updated for a Web service of the type that the request queue is associated with. is a flow chart illustrating such an embodiment. illustrates an example of how the DMF may manage the request queue when QoS status information about a Web service is updated. In a step the QoS status information of a Web service is updated.

 Supposedly an increase in the capacity but there may be several QoS parameters maybe some increase and others decrease. According to this embodiment the check is made for every service status update. In a step the request queue associated with the type of service for which the update was made is checked. If the request queue is empty there will be no action step . Otherwise the first service request in the request queue is taken for processing in a step . In a step the DMF checks if the Web service is in the above mentioned second set of Web services created when the request was received as described above in connection with step of . If it is not in the second set no action is taken step . Otherwise the process proceeds to a step where the QoS requirements are checked against the updated QoS status information. If the Web service can satisfy the QoS requirements the Web service is selected and a service request response is sent back to the requester in a step . Otherwise the process will continue to get the next request in the queue in a step and then a repeat of process steps will start at step . If the service request was the last request in the request queue no action is taken step .

According to the above described embodiments of the present invention a service provider that provides a Web service with large capacity is more likely to be assigned to the service requesters. The present invention may also provide the possibility of a new business opportunity for a provider of a UDDI server. The provider of the UDDI server may for instance provide a service level scheme in which service providers may pay a fee to the UDDI server provider to have their service ranked as a premium level service in the UDDI server. If there are several Web services to choose from that can fulfill the QoS requirements the UDDI may be arranged to always choose a premium level service prior to any other Web services with a lower level in the service level scheme.

As mentioned above prior art UDDI servers provide only a service lookup service without support for QoS provisioning. Embodiments of the present invention on the other hand provides such support for QoS provisioning and may also provide a tool for efficient resource management. Since the UDDI server acts as a broker for web services it is desired for the broker to provide the best possible service for both service provider and service requester. The service requester wants to get services which can satisfy the QoS requirements of the service requester. The service provider s goal is to maximize its system resources and provide services to as many satisfied user as possible. This is made possible by means of embodiments of the present invention.

From the description above the person skilled in the art will realize what software firmware and or hardware modifications are necessary and or suitable in order to implement the different described embodiments of the present invention.

In the drawings and specification there have been disclosed typical preferred embodiments of the invention and although specific terms are employed they are used in a generic and descriptive sense only and not for purposes of limitation the scope of the invention being set forth in the following claims.

