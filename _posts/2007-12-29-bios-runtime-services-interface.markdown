---

title: BIOS runtime services interface
abstract: A method and article of manufacture for accessing at least one unexposed runtime service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08127312&OS=08127312&RS=08127312
owner: Intel Corporation
number: 08127312
owner_city: Santa Clara
owner_country: US
publication_date: 20071229
---
Computer system designers implement a firmware resource on computer system designs that in a pre boot environment initializes a computer system. This firmware resource is known as a basic input output system BIOS and may provide services for instance simple network connectivity display output keyboard input and or disk drive operation to a computer system prior to executing an operating system boot process. The BIOS is generally stored on a non volatile memory device such as a flash memory that is designed or integrated into most computer systems. BIOS may test hardware at start up start the operating system and support the transfer of data among hardware devices. Conventionally BIOS is stored in a read only memory ROM so that it can be executed when a processor based system is turned on. For applications running in an operating system the ability to leverage BIOS system services is limited by what is exposed by the underlying operating system.

In the following detailed description numerous specific details are set forth in order to provide a thorough understanding of claimed subject matter. It will however be understood by those skilled in the art that claimed subject matter may be practiced without these specific details. In other instances well known methods procedures and components have not been described in detail so as not to obscure claimed subject matter.

The terms basic input output system and BIOS are used throughout the following disclosure and are intended to refer to the software and or firmware that executes on a data processing system to perform operations such as discovering testing initializing providing configuring hardware and or providing runtime services. The term Extensible Firmware Interface EFI and Unified Extensible Firmware Interface UEFI are used interchangeably throughout the disclosure and are intended to refer to a specification that defines a model for the interface between operating systems and platform firmware. The interface may comprise data tables that contain platform related information plus boot and runtime service calls that are available to the operating system OS and its loader. The term Application Programming Interface API is used throughout the following disclosure and is intended to refer to an interface by which an application program may access an OS and other services. The term runtime service is used throughout the following description and is intended to refer to basic services and functions for instance simple network connectivity display output keyboard input and or disk drive operation provided by the BIOS. The term exposed runtime service is used throughout the following description and is intended to refer to basic services for instance simple network connectivity display output keyboard input and or disk drive operation provided by the BIOS that are accessible via the OS. The term unexposed runtime service is used throughout the following description and is intended to refer to basic services for instance simple network connectivity display output keyboard input and or disk drive operation provided by the BIOS that are not accessible via the OS. The term platform is used throughout the following disclosure and is intended to refer to a computing system comprising a variety of hardware and software.

In a particular embodiment BIOS may comprise a variety of runtime services such as for instance underlying platform network services memory services and or security services and claimed subject matter is not limited in this regard. In a particular embodiment for OS application running on OS the ability to access runtime services may be limited to what is exposed via OS . In a particular embodiment platform firmware may provide such runtime services to OS via an established library access mechanism. According to a particular embodiment one or more exposed runtime services may be communicated to OS through communication interface . Communication interface may comprise a firmware communication interface such as EFI and or UEFI and claimed subject matter is not limited in this regard. According to a particular embodiment exposed runtime services may be communicated to OS application for instance via communication interface . Communications interface may comprise any of a variety of communications interfaces such as for instance API EFI and or UEFI and claimed subject matter is not limited in this regard. According to a particular embodiment application may communicate directly with BIOS via communication interface . OS application may however not be able to access any runtime services directly from BIOS . In a particular embodiment communications interface may comprise any of a variety of communications interfaces such as for instance API EFI and or UEFI and claimed subject matter is not limited in this regard.

In a particular embodiment BIOS may comprise a variety of runtime services such as for instance underlying platform network services memory services and or security services and claimed subject matter is not limited in this regard. In a particular embodiment OS may comprise a library access mechanism for accessing exposed runtime services . In a particular embodiment OS application may comprise runtime services interface . In a particular embodiment runtime services interface may be capable of leveraging such library access mechanism to provide a conduit for accessing unexposed runtime services from platform BIOS even if OS has not provided an access mechanism for such unexposed runtime services . In a particular embodiment runtime services interface may run within OS context and may comprise a process as described with reference to for accessing all runtime services available on BIOS regardless of whether the runtime services are available on OS and without requiring OS cooperation. Accordingly OS application may access exposed runtime services as well as other runtime services available from BIOS via runtime services interface .

According to a particular embodiment application may communicate indirectly with BIOS via OS . In another embodiment OS application may communicate with BIOS directly via communication interface . OS application itself may not however be able to access any runtime services directly from BIOS . In a particular embodiment runtime services interface may enable unexposed runtime services requests between platform specific OS application and BIOS via communication channels accessible through OS such as communications interface and or directly via communications interface . Communication interfaces and may comprise any of a variety of communication interfaces for instance API EFI and or UEFI and claimed subject matter is not limited in this regard.

In a particular embodiment runtime services interface may communicate OS application requests for unexposed runtime services to BIOS by leveraging runtime service calls from OS for exposed runtime services . In a particular embodiment runtime services interface may give BIOS directives by providing such directives within the data payload of request call wherein such request is an outbound exposed services request call function sent from OS . In a particular embodiment such directives may trigger a recognition event in BIOS to enable BIOS to parse such directive data from request . Such directives may direct BIOS to return a physical parameter address via inbound packet for a specifically requested runtime service and or return a library access mechanism via inbound packet . In a particular embodiment a trigger may enable the BIOS to recognize request as something that is special by a variety of methods such as adding a trigger to a variable name and or a portion of a variable name within request and claimed subject matter is not limited in this regard. Accordingly in one particular embodiment passing such directives to BIOS within request may enable OS application to directly access an unexposed runtime service using physical parameter address and or access exposed runtime services and or unexposed runtime services using library access mechanism .

In a particular embodiment in which OS application is enabled to access BIOS directly then such a library access mechanism may be communicated via communication interface and may enable OS application to directly access all available runtime services from BIOS . In a particular embodiment library access mechanism may enable OS application to access unexposed runtime services from BIOS via communications interface by providing a runtime service description sufficient to access alternate or unexposed runtime services from BIOS . Such description may comprise a table of functions and pointers. In a particular embodiment in which OS application communicates with BIOS via OS runtime services interface provides a vehicle for accessing unexposed runtime services via OS . Such vehicle may be communicated via communications interface . Such communication interface may comprise any of a variety of communication interfaces such as API EFI and or UEFI and claimed subject matter is not limited in this regard.

In a particular embodiment at block it may be determined whether there are exposed runtime services available via the OS by issuing a firmware call for exposed runtime services. Such a firmware call may comprise a variable indicator for accessing the first runtime service. In a particular embodiment if a first runtime service is accessible process may flow to block . At block it may be determined whether the OS application has direct access to the BIOS or whether the OS application communicates with the BIOS via the OS. Such a determination may be made for instance by evaluating a variable name associated with a calling function for accessing exposed runtime services. In a particular embodiment if the function is a get function it may indicate that the OS application has direct access to the BIOS.

In a particular embodiment if the OS application has direct access to the BIOS process may flow to block . At block a request for a library access mechanism may be inserted into the calling function s data payload. For example such a request may comprise a request for a table of functions and pointers however claimed subject matter is not so limited. According to a particular embodiment process may then flow to block where a calling function may trigger the BIOS to intelligently parse such a request from the calling function. In a particular embodiment the BIOS may retrieve a library access mechanism and prepare an inbound data packet with return data comprising such a library access mechanism. According to a particular embodiment process may flow to block where return data may be passed back to the OS application via the OS providing the OS application with information for accessing runtime services without regard to whether they are exposed via the OS.

Returning to block if in a particular embodiment the OS application communicates with the BIOS via the OS the process may flow to block where a calling function for accessing an exposed runtime service may be loaded with a request for an unexposed target function. In a particular embodiment process may then flow to block where the calling function may trigger the BIOS to intelligently parse such a request for unexposed runtime services from the calling function. Process may then flow to block where BIOS may prepare an outbound packet providing physical parameter address for the requested unexposed function. According to a particular embodiment process may flow to block where return data may be passed back to the OS application via the OS providing the OS application with information for accessing runtime services without regard to whether they are exposed via the OS.

While certain features of claimed subject matter have been illustrated as described herein many modifications substitutions changes and equivalents will now occur to those skilled in the art. It is therefore to be understood that the appended claims are intended to cover all such embodiments and changes as fall within the spirit of claimed subject matter.

