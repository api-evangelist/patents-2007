---

title: System and method for real-time co-rendering of multiple attributes
abstract: Systems and methods for enhancing the combined image of multiple attributes without comprising the image of either attribute. The combined image of the multiple attributes is enhanced for analyzing a predetermined property revealed by the attributes. The combined image can be interactively manipulated to display each attribute relative to an imaginary light source or highlighted using a specular component. The systems and methods are best described as particularly useful for analytical, diagnostic and interpretive purposes.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07616213&OS=07616213&RS=07616213
owner: Landmark Graphics Corporation, a Halliburton Company
number: 07616213
owner_city: Houston
owner_country: US
publication_date: 20070926
---
This application is a continuation of U.S. application Ser. No. 10 628 781 filed on Jul. 28 2003 which is hereby incorporated by reference. Applicant therefore claims priority based on the filing date of U.S. application Ser. No. 10 628 781.

The present invention relates to a visualization technique for co rendering multiple attributes in real time thus forming a combined image of the attributes. The combined image is visually intuitive in that it distinguishes certain features of an object that are substantially indistinguishable in their natural environment.

In the applied sciences various fields of study require the analysis of two dimensional 2 D or three dimensional 3 D volume data sets wherein each data set may have multiple attributes representing different physical properties. An attribute sometimes referred to as a data value represents a particular physical property of an object within a defined 2 D or 3 D space. A data value may for instance be an 8 byte data word which includes 256 possible values. The location of an attribute is represented by x y data value or x y z data value . If the attribute represents pressure at a particular location then the attribute location may be expressed as x y z pressure .

In the medical field a computerized axial topography CAT scanner or magnetic resonance imaging MRI device is used to produce a picture or diagnostic image of some specific area of a person s body typically representing the coordinate and a determined attribute. Normally each attribute within a predetermined location must be imaged separate and apart from another attribute. For example one attribute representing temperature at a predetermined location is typically imaged separate from another attribute representing pressure at the same location. Thus the diagnosis of a particular condition based upon these attributes is limited by the ability to display a single attribute at a predetermined location.

In the field of earth sciences seismic sounding is used for exploring the subterranean geology of an earth formation. An underground explosion excites seismic waves similar to low frequency sound waves that travel below the surface of the earth and are detected by seismographs. The seismographs record the time or arrival of seismic waves both direct and reflected waves. Knowing the time and place of the explosion the time of travel of the waves through the interior can be calculated and used to measure the velocity of the waves in the interior. A similar technique can be used for offshore oil and gas exploration. In offshore exploration a ship tows a sound source and underwater hydrophones. Low frequency e.g. 50 Hz sound waves are generated by for example a pneumatic device that works like a balloon burst. The sounds bounce off rock layers below the sea floor and are picked up by the hydrophones. In either application subsurface sedimentary structures that trap oil such as faults and domes are mapped by the reflective waves.

The data is collected and processed to produce 3 D volume data sets. A 3 D volume set is made up of voxels or volume elements having x y z coordinates. Each voxel represents a numeric data value attribute associated with some measured or calculated physical property at a particular location. Examples of geological data values include amplitude phase frequency and semblance. Different data values are stored in different 3 D volume data sets wherein each 3 D volume data set represents a different data value. In order to analyze certain geological structures referred to as events information from different 3 D volume data sets must be separately imaged in order to analyze the event.

Certain techniques have been developed in this field for imaging multiple 3 D volume data sets in a single display however not without considerable limitations. One example includes the technique published n called Constructing Faults from Seed Picks by Voxel Tracking by Jack Lees. This technique combines two 3 D volume data sets in a single display thereby restricting each original 256 value attribute to 128 values of the full 256 value range. The resolution of the display is therefore significantly reduced thereby limiting the ability to distinguish certain events or features from the rest of the data. Another conventional method combines the display of two 3 D volume data sets containing two different attributes by making some data values more transparent than others. This technique becomes untenable when more than two attributes are combined.

Another technique used to combine two different 3 D volume data sets in the same image is illustrated in U.S. patent application Ser. No. 09 936 780 assigned to Magic Earth inc. and incorporated herein by reference. This application describes a technique for combining a first 3 D volume data set representing a first attribute and a second 3 D volume data set representing a second attribute in a single enhanced 3 D volume data set by comparing each of the first and second attribute data values with a preselected data value range or criteria. For each data vale where the criteria are met a first selected data value is inserted at a position corresponding with the respective data value in the enhanced 3 D volume data set. For each data value where the criteria are not met a second selected data value is inserted at a position corresponding with the respective data value in the enhanced 3 D volume data set. The first selected data value may be related to the first attribute and the second selected data value may be related to the second attribute. The resulting image is an enhanced 3 D volume data set comprising a combination or hybrid of the original first 3 D volume data set and the second 3 D volume data set. As a result the extra processing step needed to generate the enhanced 3 D volume data set causes interpretation delays and performance slow downs. Furthermore this pre processing technique is compromised by a lossy effect which compromises data from one seismic attribute in order to image another seismic attribute. Consequently there is a significant loss of data visualization.

In non scientific applications techniques have been developed to define surface details texture on inanimate objects through lighting and or shading techniques. For example in the video or computer graphics field one technique commonly used is texture mapping. Texture typically refers to bumps wrinkles grooves or other irregularities on surfaces. Textured surfaces are recognized by the way light interacts with the surface irregularities. In effect these irregularities are part of the complete geometric form of the object although they are relatively small compared to the size and form of the object. Conventional texture mapping techniques have been known to lack the necessary surface detail to accomplish what is conventionally meant by texture. In other words conventional texture mapping techniques provide objects with a colorful yet flat appearance. To this end texture mapping was expanded to overcome this problem with what is now commonly referred to as a bump mapping.

Bump mapping is explained in an article written by Mark Kilgard called A Practical and Robust Bump Mapping Technique for Today s GPU s hereinafter Kilgard which is incorporated herein by reference. In this article bump mapping is described as a texture based rendering approach for simulating lighting effects caused by pattern irregularities on otherwise smooth surfaces. Kilgard p. 1. According to Kilgard bump mapping simulates a surface s irregular lighting appearance without the complexity and expense of modeling the patterns as true geometric perturbations to the surface. Kilgard p. 1. Nevertheless the computations required for original bump mapping techniques proposed by James Blinn in 1978 are considerably more expensive than those required for conventional hardware texture mapping. Kilgard at p. 2.

In view of the many attempts that have been made over the last two decades to reformulate bump mapping into a form suitable for hardware implementation Kilgard proposes a new bump mapping technique. In short Kilgard divides bump mapping into two steps. First a perturbed surface normal is computed. Then a lighting computation is performed using the perturbed surface normal. These two steps must be performed at each and every visible fragment of a bump mapped surface. Kilgard.

Although Kilgard s new technique may be suitable for simulating surface irregularities texture representative of true geometric perturbations it does not address the use of similar lighting effect to distinguish certain features of an object that are substantially indistinguishable in their natural environment.

The present invention meets the above needs and overcomes one or more deficiencies in the prior art by providing systems and methods for co rendering multiple attributes in a three dimensional data volume.

In one embodiment the present invention includes a computer implemented method for co rendering multiple attributes in a three dimensional data volume that comprises i selecting a first attribute volume defined by a first attribute and a second attribute volume defined by a second attribute ii creating a three dimensional sampling probe wherein the sampling probe is a subvolume of the first attribute volume and the second attribute volume iii drawing at least a portion of an image of the sampling probe on a display device using a graphics card the image comprising an intersection of the sampling probe the first attribute volume and the second attribute volume and iv repeating the drawing step in response to movement of the sampling probe within each attribute volume so that as the sampling probe moves through each attribute volume the image of the sampling probe is redrawn at a rate sufficiently fast to be perceived as moving in real time.

In another embodiment the present invention includes a computer readable medium for storing computer executable instructions for co rendering multiple attributes in a three dimensional data volume. The instructions are executable to implement i selecting a first attribute volume defined by a first attribute and a second attribute volume defined by a second attribute ii creating a three dimensional sampling probe wherein the sampling probe is a subvolume of the first attribute volume and the second attribute volume iii drawing at least a portion of an image of the sampling probe on a display device using a graphics card the image comprising an intersection of the sampling probe the first attribute volume and the second attribute volume and iv repeating the drawing step in response to movement of the sampling probe within each attribute volume so that as the sampling probe moves through each attribute volume the image of the sampling probe is redrawn at a rate sufficiently fast to be perceived as moving in real time.

In another embodiment the present invention includes a computer implemented method for co rendering multiple attributes in a three dimensional data volume that comprises i selecting a first attribute and a second attribute from multiple attributes the first attribute the second attribute each having its own vertices ii creating a normal map using at least one of the first and second attributes the normal map having its own vertices iii converting the normal map vertices and the vertices of the at least one of the first and second attributes used to create the normal map into a tangent space normal map iv calculating a diffused lighting component from the tangent space normal map and the at least one of the first and second attributes used to create the normal map v combining an ambient lighting component with the diffused lighting component and the first and second attributes using a graphics card to form an enhanced image comprising at least part of the first attribute and part of the second attribute and vi displaying at least a portion of the enhanced image to a user on a display device.

In yet another embodiment the present invention includes a computer readable medium for storing computer executable instructions for co rendering multiple attributes in a three dimensional data volume. The instructions are executable to implement i selecting a first attribute and a second attribute from multiple attributes the first attribute the second attribute each having its own vertices ii creating a normal map using at least one of the first and second attributes the normal map having its own vertices iii converting the normal map vertices and the vertices of the at least one of the first and second attributes used to create the normal map into a tangent space normal map iv calculating a diffused lighting component from the tangent space normal map and the at least one of the first and second attributes used to create the normal map and v combining an ambient lighting component with the diffused lighting component and the first and second attributes to form an enhanced image comprising at least part of the first attribute and part of the second attribute.

Additional aspects advantages and embodiments of the invention will become apparent to those skilled in the art from the following description of the various embodiments and related drawings.

While the present invention will be described in connection with presently preferred embodiments it will be understood that it is not intended to limit the invention to those embodiments. On the contrary it is intended to cover all alternatives modifications and equivalents included within the spirit of the invention.

The present invention may be implemented using hardware software or a combination thereof and may be implemented in a computer system or other processing system. The following description applies the present invention to various seismic data attributes which are contained within a specified space or volume referred to as a probe. Each probe comprises voxel data represented by x y z data value. Each data value is associated with a particular seismic data attribute at a specified location x y z . The present invention therefore may employ one or more of the hardware and software system components required to display and manipulate the probe as described in U.S. patent application Ser. No. 6 765 570 570 Patent assigned to Landmark Graphics Corporation and incorporated herein by reference. For a more complete description of the probe requirements reference is made to the 570 Patent.

In addition to the probe requirements the present invention may be implemented using current high performance graphics and personal computer commodity hardware in order to insure real time performance. Examples of available hardware for the personal computer include graphics cards like GeForce marketed by NVIDIA and 2.4 Ghz x86 instruction set computer processors manufactured by Intel or AMD .

One embodiment of a software or program structure for implementing the present invention is shown in . At the base of program structure is an operating system . Suitable operating systems may include for example UNIX or Linux operating systems Windows NT and other operating systems generally known in the art.

Menu and interface software overlays operating system . Menu and interface software are used to provide various menus and windows to facilitate interaction with the user and to obtain user input and instructions. Menu and interface software may include for example Microsoft Windows X Free 86 MOTIF and other menu and interface software generally known in the art.

A basic graphics library overlays menu and interface software . Basic graphics library is an application programming interface API for 3 D computer graphics. The functions performed by basic graphics library include for example geometric and raster primitives RGBA or color index mode display list or immediate mode viewing and modeling transformations lighting and shading hidden surface removal alpha blending translucency anti aliasing texture mapping atmospheric effects fog smoke haze feedback and selection stencil planes and accumulation buffer.

A particularly useful basic graphics library is OpenGL marketed by Silicon Graphics Inc. SGI . The OpenGL API is a multi platform industry standard that is hardware window and operating system independent. OpenGL is designed to be callable from C C FORTRAN Ada and Java programming languages. OpenGL performs each of the functions listed above for basic graphics library . Some commands in OpenGL specify geometric objects to be drawn and others control how the objects are handled. All elements of the OpenGL state even the contents of the texture memory and the frame buffer can be obtained by a client application using OpenGL . OpenGL and the client application may operate on the same or different machines because OpenGL is network transparent. OpenGL is described in more detail in the OpenGL Programming Guide ISBN 0 201 63274 8 and the OpenGL Reference Manual ISBN 0 201 63276 4 both of which are incorporated herein by reference.

Visual simulation graphics library overlays the basic graphics library . Visual simulation graphics library is an API for creating real time multi processed 3 D visual simulation graphics applications. Visual simulation graphics library provides functions that bundle together graphics library state control functions such as lighting materials texture and transparency. These functions track state and the creation of display lists that can be rendered later.

A particularly useful visual simulation graphics library is OpenGL Performer which is available from SGI . OpenGL Performer supports the OpenGL graphics library discussed above. OpenGL Performer includes two main libraries libpf and libpr and four associated libraries libpfdu libpfdb libpfui and libpfutil .

The basics of OpenGL Performer is the performance rendering library libpr a low level library providing high speed rendering functions based on GeoSets and graphics state control using GeoStates. GeoSets are collections of drawable geometry that group same type graphics primitives e.g. triangles or quads into one data object. The GeoSet contains no geometry itself only pointers to data arrays and index arrays. Because all the primitives in a GeoSet are of the same type and have the same attributes rendering of most databases is performed at a maximum hardware speed. GeoStates provide graphics state definitions e.g. texture or material for GeoSets.

Layered above libpr is libpf a real time visual simulation environment providing a high performance multi process database rendering system that optimizes use of multiprocessing hardware. The database utility library libpfdu provides functions for defining both geometric and appearance attributes of 3 D objects shares states and materials and generates triangle strips from independent polygonal input. The database library libpfdb uses the facilities of libpfdu libpf and libpr to import database files in a number of industry standard database formats. The libpfui is a user interface library that provides building blocks for writing manipulation components for user interfaces C and C programming languages . Finally the libpfutil is the utility library that provides routines for implementing tasks and graphical user interface GUI tools.

An application program which uses OpenGL Performer and OpenGL API typically performs the following steps in preparing for real time 3 D visual simulation 

Once the application program has created a graphical rendering environment by carrying out steps 1 through 6 above then the application program typically iterates through the following main simulation loop once per frame 

Alternatively Open Scene Graph can be used as the visual simulation graphics library . Open Scene Graph operates in the same manner as OpenGL Performer providing programming tools written in C C for a large variety of computer platforms. Open Scene Graph is based on OpenGL and is publicly available.

A multi attribute co rendering program of the present invention overlays visual simulation graphics library . In a manner generally well known in the art program interfaces with and utilizes the functions carried out by the probe described in the 570 Patent which interfaces with and utilizes the functions carried out by the visual simulation graphics library basic graphics library menu and interface software and the operating system . Program is preferably written in an object oriented programming language to allow the creation and use of objects and object functionality. One preferred object oriented programming language is C .

In this particular embodiment program stores the 3 D volume data set in a manner generally well known in the art. For example the format for a particular data volume may include two parts a volume header followed by the body of data that is as long as the size of the data set. The volume header typically includes information in a prescribed sequence such as the file path location of the data set size dimensions in the x y and z directions annotations for the x y and z axes annotations for the data value etc. The body of data is a binary sequence of bytes and may include one or more bytes per data value. For example the first byte is the data value at volume location 0 0 0 the second byte is the data value at volume location 1 0 0 and the third byte is the data value at volume location 2 0 0 . When the x dimension is exhausted then the y dimension and the z dimension are incremented respectively. This embodiment is not limited in any way to a particular data format.

The program facilitates input from a user to identify one or more 3 D volume data sets to use for imaging and analysis. When a plurality of data volumes is used the data value for each of the plurality of data volumes represents a different physical parameter or attribute for the same geographic space. By way of example a plurality of data volumes could include a geology volume a temperature volume and a water saturation volume. The voxels in the geology volume can be expressed in the form x y z seismic amplitude . The voxels in the temperature volume can be expressed in the form x y z C. . The voxels in the water saturation volume can be expressed in the form x y z saturation . The physical or geographic space defined by the voxels in each of these volumes is the same. However for any specific spatial location x y z the seismic amplitude would be contained in the geology volume the temperature in the temperature volume and the water saturation in the water saturation volume. The operation of program is described in reference to .

Referring now to a method is illustrated for co rendering multiple attributes in a combined image. The following description refers to certain bump mapping algorithms and techniques discussed in Kilgard.

In step a first attribute and a second attribute are selected from the available attributes using the GUI tools menu interface software described in reference to . Although other available stored attributes may be used such as frequency and phase semblance is used as the first attribute illustrated in the probe of and amplitude is used as the second attribute illustrated in the probe of . The seismic data is displayed on the visible planar surfaces of the probe using conventional shading opacity texture mapping techniques however may be displayed within the planar surfaces defining the probe using volume rendering techniques generally well known in the art. In order to display seismic data in the manner thus described voxel data is read from memory and converted into a specified color representing a specific texture. Textures are tiled into 256 pixel by 256 pixel images. For large volumes many tiles exist on a single planar surface of the probe. This process is commonly referred to by those skilled in the art as sampling and is coordinated among multiple CPU s on a per tile basis. These techniques and others employed herein are further described and illustrated in the 570 Patent.

In step a normal map is calculated in order to convert the texture based semblance attribute illustrated in sometimes referred to as a height field into a normal map that encodes lighting information that will be used later by the register combiners. This technique enables the application of per pixel lighting to volumetric data in the same way the probe displays volumetric data. In other words it is a 2 D object which is actually displayed however because it is comprised of voxel data and the speed at which it is displayed appears as a 3 D object. In short this step converts the data values representing the semblance attribute into perturbed normalized vectors that are used by the graphics card to calculate lighting effects which give the illusion of depth and geometry when in fact a planar surface is displayed.

The normal map comprises multiple perturbed normal vectors which collectively are used to construct an illusion of height depth and geometry on a planar surface. Each perturbed normal vector is derived from the cross product of the vertical and horizontal components for each data value on a given surface e.g. in . Each perturbed normal vector is stored in the hardware as a texture unit normal map wherein each spatial coordinate x y z for each perturbed normal vector is assigned a specified color red green or blue RGB value. The coordinate space in which these coordinates are assigned RGB values is generally known as texture coordinate space. Thus the blue component of the perturbed normal vector represents the spatial coordinate z . A pixel in the texture that is all blue would therefore represent a typical tangent vector in planar objects such as the surface in . As the data values vary the normal map appearance becomes less blue and appears almost chalky. The techniques necessary to derive a normal map from a height field are generally described in Section 5.3 of Kilgard. By applying the equations referred to in Section 2.6 of Kilgard to the data values shown in the probe of a normal map may be constructed. One set of instructions to perform this method and technique is illustrated in Appendix E of Kilgard.

In order to obtain a more accurate lighting effect a vertex program is applied in step to the vertices that constrain the planar surface of the underlying attribute illustrated in and the vertices that constrain the corresponding planar surface of the normal map not shown . A new coordinate space tangent space is contained in a transformation matrix used by the vertex program. The programmable hardware on the graphics card is used for rendering coordinate space transforms that drive the vertex program. The tangent space is constructed on a per vertex basis and typically requires the CPU to supply per vertex light angle vectors and half angle vectors as 3 D texture coordinates. The light angle vectors and half angle vectors are likewise converted to tangent space when multiplied by the tangent space matrix. This step employs the techniques generally described in Section 5.1 of Kilgard.

For example normal and tangent vectors are calculated on a per vertex basis for a given geometric model like the probe in . A bi normal vector is calculated by taking the cross product of the tangent and normal vector components for each vertex. The tangent normal and bi normal vectors thus form an ortho normal basis at each vertex. The ortho normal basis represents a matrix used to transform objects space light and eye position into tangent space. One set of instructions for performing this technique is illustrated in Appendix C of Kilgard.

Register combiners or texture shaders not shown are applied by the graphics card in step to calculate the lighting equations described in Sections 2.5 through 2.5.1 of Kilgard. The GeForce and Quadro register combiners available through NVIDIA provide a configurable but not programmable means to determine per pixel fragment coloring shading and replace the standard OpenGL fixed function texture environment color sum and fog operations with an enhanced mechanism for coloring shading fragments. With multi textured OpenGL filtered texels from each texture unit representing the normal map and the second attribute amplitude illustrated in the probe of are combined with the fragments current color in sequential order. The register combiners are generally described in Section 4.2 of Kilgard as a sequential application of general combiner stages that culminate in a final combiner stage that outputs an RGBA color for the fragment. One set of instructions for programming OpenGL register combiners is illustrated in Appendix B of Kilgard.

As further explained in Section 5.4 of Kilgard the register combiners are configured to compute the ambient and diffuse illumination for the co rendered image that is displayed in step by means generally well known in the art. In short the register combiners are used to calculate ambient and diffuse lighting effects illumination for the normal map after the vertex program is applied and the second attribute which are combined to form an enhanced image representing the first and second attributes. The resulting data values for the combined image represent a blended texture or combined texture of both the first and second attributes. One set of instructions for programming the register combiners to compute the ambient and diffuse illumination is illustrated in Appendix G of Kilgard.

Alternatively fragment routines generally well known in the art may be used with the register combiners to provide a more refined per pixel lighting effect for the normal map.

As illustrated in certain geological features such as faults represented by the black color values are distinguished from the blue color values due to discontinuity between the adjacent data values measured along the z axis. In the same geological features are barely distinguishable because they are illustrated by a different attribute amplitude that is assigned multiple color values and contains more consistent adjacent data values along the z axis. The same geological features are even more readily distinguished in due to the enhanced surface texture which appears to give the planar surface on the probe depth and height.

In the first attribute semblance is distinguished by shading from the second attribute amplitude which is shown by various color values. This illusion is uncharacteristic of the actual geological feature which is substantially indistinguishable in its natural environment. Although both attributes are not visible at the same time over the planar surface of the probe they are imaged in the same space and capable of being simultaneously viewed depending on the angle of the probe relative to the light source. Thus as the probe is rotated certain voxels representing the first attribute become masked while others representing the second attribute become visible and vice versa. This technique is useful for enhancing images of certain features of an object which are substantially indistinguishable in their natural environment. The present invention may also be applied using the same techniques to image volume rendered seismic data attributes.

As the image is displayed in step several options described in reference to steps through may be interactively controlled through the menu interface software to compare and analyze any differences between the various images.

In step the specular or diffuse lighting coefficients may be interactively controlled to alter the shading lighting effects applied to the combined image. Accordingly the register combiners are reapplied in step to enhance the image displayed in step .

In step the imaginary light source may be interactively repositioned or the probe may be interactively rotated to image other geological features revealed by the attributes. The movement of the probe is accomplished by means generally described in the 570 Patent except that the graphics card is programmed to draw the probe. In the planar surface of the probe illustrated in is fixed at a position perpendicular to the line of sight as the light source is interactively repositioned. As the light source moves different voxels become illuminated according to the position of the light source. The effect is similar to that achieved when the probe is rotated. Accordingly steps and are reapplied to provide different perspectives of the image displayed in step .

In for example the light source is positioned to the left of the probe face so that voxels which are perceived as indentions appear darker while voxels which are perceived as bumps appear lighter or more illuminated. When the light source is repositioned to the right of the probe face as in different voxels appear darker and lighter than those illustrated in . As illustrated in the light source is positioned perpendicular to the probe face and the entire image appears brighter. This effect is attributed to the specular component of the lighting equation and enhances the illusion of depth and height in the image as the light source is repositioned or the probe is rotated. One set of instructions explaining how to configure the register combiners to compute the specular component is illustrated in Appendix H of Kilgard. In this manner the combined image can be interactively manipulated to simultaneously reveal multiple attributes with nominal loss in the clarity of each attribute.

In step the per pixel lighting height is interactively controlled to alter the normal depth of the indentions and or height of the bumps which are shaded and illuminated as described in reference to step . The per pixel lighting height is interactively controlled by scaling each perturbed normal vector from zero which cancels any indentations or bumps. If the per pixel lighting is scaled in positive increments then each perturbed normal vector height bump or depth indentation is increased. Conversely if the per pixel lighting is scaled in negative increments then each perturbed normal vector height or depth is decreased. The net effect produces an image that appears to alter the position of the light source so that different features of the object are enhanced. Accordingly steps and are reapplied to provide different perspectives of the image displayed in step .

In step different attributes are interactively selected in the manner described in reference to step . Accordingly steps and are reapplied to provide an entirely new image illustrating different data values in step . Furthermore the image displayed in step may illustrate more than two attributes which are selected in step . For example if the available attributes include amplitude phase and semblance then a normal map is created for any two of these attributes in the manner described in reference to step . In other words a normal map is calculated or each of the two selected attributes and the resulting value for each perturbed normal vector in one normal map is then added to the value of each perturbed normal vector in the other normal map at the same location to create a single normal map that is used in the manner described in reference to steps and . Alternatively the voxels for one of the selected attributes can be added to the voxels of the other selected attribute at the same location and a normal map is calculated for the combined voxel values in the manner described in reference to step . The normal map is then used in the manner described in reference to steps and . In either application where there are more than two attributes one attribute will serve as the static attribute until step while the others will be used in the manner thus described.

In step the probe is interactively controlled so that it can be resized or moved in a manner more particularly described in the 570 Patent. This step necessarily alters the voxels displayed on the planar surfaces of the probe for the combined image displayed in step . As a result the first and second attributes must be re sampled in step and steps and must be reapplied to display a new image in step illustrating the same attributes at a different location.

The techniques described by the foregoing invention remove the extra processing step normally encountered in conventional bump mapping techniques by interactively processing the attributes using hardware graphics routines provided by commodity PC graphics cards. These techniques are therefore particularly useful to the discovery and development of energy resources.

While the present invention has been described in connection with presently preferred embodiments it will be understood by those skilled in the art that it is not intended to limit the invention to those embodiments. The present invention for example may also be applied to other types of data according to the methods described herein. It is therefore contemplated that various alternative embodiments and modifications may be made to the disclosed embodiments without departing from the spirit and scope of the invention defined by the appended claims and equivalents

