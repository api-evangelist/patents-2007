---

title: System and method for calculating real-time costing information
abstract: Real-time costing information is provided by a central knowledge base in communication with a database. The central knowledge base provides an application programming interface (API) through which queries are run on the content in the database. The database content includes a harmonized system (HS) module holding an HS tree unified across multiple countries, a tariffs module holding tariffs applicable to goods classified in the unified HS tree, and a freight rates module holding rules and data for calculating freight rates for a shipment of goods. A knowledge workbench includes a catalog harmonizer that enables goods in a catalog to be harmonized according to one or more countries' HS trees and the results to be stored in the database. An applications server provides applications for generating queries for costing information, such as landed cost estimates, analyzing the results.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08321356&OS=08321356&RS=08321356
owner: United Parcel Service of America, Inc.
number: 08321356
owner_city: Atlanta
owner_country: US
publication_date: 20071018
---
This application is a continuation of U.S. patent application Ser. No. 09 991 428 filed Nov. 16 2001 which is a continuation in part of U.S. patent application Ser. No. 09 939 206 filed Aug. 24 2001 which is a continuation in part of U.S. patent application Ser. No. 09 573 583 filed May 18 2000 the contents of which are hereby incorporated by reference herein.

This invention pertains in general to estimating costing information for domestic and internationally shipped goods and in particular to a computer system and method for automatically calculating the same.

Estimating costing information for goods shipped internationally is a very complex process. Countries typically charge duties on imported goods based on the goods classifications in the countries harmonized tariff schedules. However different countries often place identical goods in different classifications. In addition different countries place different tariffs on goods even when the countries assign goods to the same class.

International treaties such as trade agreements between two or more countries may reduce or eliminate tariffs on certain goods. Countries may also have quotas two stage tariff systems or anti dumping and countervailing duties wherein the tariff on a good is determined by the amount of that good previously imported into the countries. There may also be restrictions on the types of goods that can be exported out of or imported into certain countries or shipped to certain people or addresses.

In addition shipping rates vary greatly for different types of goods and shipping methods. Moreover different companies or other suppliers of goods frequently negotiate custom rates with one or more shippers that need to be considered when estimating landed costs. Plus currency exchange rates fluctuate regularly.

All of the above factors make it extremely difficult to calculate costing information for a good. As such it is difficult for a salesperson or other interested party to provide a reasonably accurate price quotation in real time e.g. while a potential buyer is on the telephone . Therefore there is a need in the art for a way to provide a fast and accurate estimate of costing information for a good.

The above need is met by a system and method that delivers real time estimates of costing information. The system includes a central knowledge base that includes a database holding content including rules and data for generating the costing information and an engine providing an application programming interface API through which it receives queries. The central knowledge base executes the queries on the content in the database to produce the requested costing information. The database preferably includes a harmonized system HS module holding an HS tree unified across multiple countries and a tariffs module holding tariffs applicable to goods classified in particular classifications in the unified HS tree. The database also preferably holds a compliance module holding information related to legal compliance of contemplated shipments a freight rates module holding rules and data for calculating freight rates and a trade information module holding miscellaneous trade information utilized by the system. The database also preferably includes a custom content module holding custom rules and other content for use when generating particular types of costing information.

The central knowledge base preferably includes a classification module for accepting information about a good and in response identifying one or more classifications in one or more countries HS trees appropriate for the good. The classifications for the good are preferably stored in the database. The central knowledge base also preferably includes a landed cost generation module for accepting information about a proposed shipment of a good and utilizing the content in the database including the good s classification the applicable tariffs and the freight rates to generate a landed cost estimate. Other modules in the central knowledge base utilize the content in the database to generate other types of costing information.

A developer or other user preferably utilizes a publisher to transmit content to the central knowledge base. This content includes updates to modules in the central knowledge base and updates to content in the database. The publisher preferably transmits content as datapacks. A datapack contains the content as well as instructions for applying the content to the central knowledge base and or database. A data subscription module in the central knowledge base along with a subscriber module in the database preferably initiate transfer of the datapacks and responsively update the content in the central knowledge base and or database.

A customer preferably utilizes a knowledge workbench to create customer specific content and store it in the database. Custom content includes for example freight rates catalogs of goods and the goods associated harmonizations and custom rules for the modules in the central knowledge base to apply when generating costing information for the customer. In addition a customer preferably utilizes an applications server to execute applications that access the functionality of the central knowledge base and content of the database to perform functions such as duty optimization identifying documents necessary for certain shipments and integrating sales information with the database content. The customer can preferably execute queries requesting costing information from a client application transmit the queries to the central knowledge base via the API and receive the requested costing information in response. The customer can also preferably bypass the client application and transmit the queries via the API directly or cause the queries to be transmitted by an application executing on the application server.

The figures depict an embodiment of the present invention for purposes of illustration only. One skilled in the art will readily recognize from the following description that alternative embodiments of the structures and methods illustrated herein may be employed without departing from the principles of the invention described herein.

The answers to these types of questions are generically referred to as costing information. This phrase is utilized because it is expected that questions of the first type What will the goods cost the buyer will predominate. Still it should be understood that costing information also refers to information not directly related to a cost. For example the answers to whether a transaction is prohibited or what documents are required for a transaction are types of costing information. The system can also be used to provide costing information addressing questions other than those listed above.

The system is adapted to provide costing information in real time. In this description the phrase real time means fast enough to respond to someone or something that is waiting for the information. For example an embodiment of the system is used to provide estimates to a salesperson quoting costs to a potential customer and generates the estimate within a few seconds. Alternatively an embodiment of the system providing costing information as part of a larger computer performed calculation may generate the information in under a second. The answers supplied by the system are not necessarily exact and may represent estimates based on the available data.

The answer to the first question what will the goods cost the buyer is commonly referred to as the goods landed cost. The landed cost for a quantity of goods is the total cost of shipping the goods from a specified origin to a specified destination or conversely the total cost of receiving the goods at the stated destination. Typically the landed cost includes components such as freight insurance customs tariffs and taxes in addition to the cost of the goods themselves. The exact landed cost is almost impossible to calculate in advance due to fluctuations in currency exchange rates fuel costs etc. Nevertheless the system provides an estimate of the landed cost that is accurate enough to be used by the interested parties. The present invention is designed to provide estimates for goods shipped internationally although it can also be used to estimate landed costs for domestic shipments. In one embodiment the present invention supports shipping to from any country in the world. In another embodiment the present invention supports only a subset of the world s countries. As used herein the term country refers to nations economies trade zones and or any other entity. Goods as used herein refers to articles of commerce. Typically the goods are commodities but this relationship is not required.

Since estimating a landed cost is one of the more important functions performed by the system of the system is sometimes referred to as a landed cost system. illustrates an application service provider ASP embodiment of the system A. In the ASP embodiment a central knowledge base A is located remote from a customer. As used herein the term customer refers to an entity utilizing the landed cost system and does not necessarily imply that the entity is in fact a customer of another entity. The term customer is utilized herein because in one embodiment the entity using the system is in a customer merchant relationship with an entity that operates the system. However other embodiments in which the customer is not in a customer relationship are within the scope of the present invention.

In one embodiment the central knowledge base A is co located with one or more servers at a co location facility having high speed access to the Internet. As is known in the art the term ASP implies that the central knowledge base A supports many customers from the centrally managed co location facility. However the central knowledge base A may support one or only a few customers in some embodiments. In addition the central knowledge base A despite its name may be a distributed system. Advantages of the ASP embodiment of the system A include lower startup and maintenance costs for the customer.

The central knowledge base A preferably includes a database A for storing information utilized in answering the questions stated above and is in communication with a publisher A via a communications link A. The communication link A preferably supports communications via the hypertext transport protocol HTTP and or via the file transport protocol FTP over the transmission control protocol TCP Internet protocol IP . As such the communication link A may include dedicated private links and or public links such as the Internet a telephone network or another publicly accessible network. In general the communications link A may use any conventional communications technologies and communications media. The communications link A may also pass data through one or more other computer systems not shown such as routers load balancers and the like. In one embodiment the communications link A is a local area network LAN at the co location facility.

The publisher A preferably provides new and or updated content to the central knowledge base A and database A. A development system A is preferably utilized to supply content to the publisher A and is preferably in communication with the publisher via another communications link A. In one embodiment the communication link A between the development system A and the publisher A is a secure communications circuit such as an encrypted T1 line. However this link A as with the other communications links described herein can use any known communications technology or communications media. In one embodiment moreover the publisher A is located on the same computer system as the development system A and therefore the communications link A is simply an intra computer communications link.

Another communications link A preferably couples the central knowledge base A to a knowledge workbench A behind a firewall A at a customer site. In one embodiment this communications link A is a standard Internet connection and utilizes standard secure networking technologies such as the secure sockets layer SSL . The customer preferably utilizes the knowledge workbench A to view add delete and or modify data stored at the central knowledge base A. As is known in the art the firewall A prevents unauthorized users from gaining access to the customer s computers and or monitors transfers of information to and from the customer s computers. In one embodiment the customer does not have a firewall A. Nevertheless the firewall A is representative of a logical division between the customer and the Internet at large in which the central knowledge base A is located.

The customer also preferably has an applications server A and a client A. These two entities A A preferably access the functionality of the central knowledge base A via an applications programming interface API A provided by the knowledge base. These two entities A A can preferably generate the same types of queries to the API A. The API A is illustrated as being within the customer s firewall A to indicate that the API is accessible to computer systems executing behind the firewall that are coupled together via another communications link A such as the customer s LAN. In reality the API A is preferably a publicly accessible interface to the central knowledge base A. As such the API A is illustrated as being in communication with the central knowledge base A via the SSL based Internet communications link A.

The applications server A preferably holds customer provided and third party applications that utilize the functionality of the central knowledge base A. The client A is preferably utilized by a user to access the functionality of the central knowledge base A. For example the client A in one embodiment is a computer system having a web browser that is utilized by a person to obtain a landed cost estimate through interactions with the central knowledge base A. Although the client A is illustrated as being within the firewall A the client may be located outside the firewall or anywhere else where it can access the API A.

In contrast to the ASP embodiment of illustrates an alternative embodiment of the landed cost system B wherein the entire system with the exception of the publisher B and development system B is located within the customer s firewall B. In the central knowledge base B knowledge workbench B applications server B and client B communicate via the customer s internal computer network B. In one embodiment the customer s network B is a conventional local or wide area network utilizing conventional communications technologies to support communications among the various computer systems and other entities at the customer s site. As in the ASP embodiment of the system A the development system B preferably communicates with the publisher B via a secure communications link B. Advantages of the non ASP embodiment include greater security and faster response times greater control over the content and software in the system B etc.

In this embodiment of the system B the central knowledge base B is preferably dedicated to the single customer at whose facility it is located and there are preferably multiple central knowledge bases installed at multiple customers. If necessary or desired to support the customer s requirements however a customer can have multiple central knowledge bases B. The publisher B is preferably in communication with each customer s central knowledge base B.

In either embodiment the entities in the landed cost system preferably perform substantially the same functions except for the differences necessitated by the different architectures. In addition additional embodiments of the system wherein one or more other entities are inside or outside of the firewall and or local or remote to the customer are within the scope of the present invention.

Initially a user utilizes the knowledge workbench to harmonize A a catalog of goods supplied by the customer according to one or more countries harmonized systems HSs . As part of this process each good is matched with an HS code describing tariffs and other factors that apply to the good. During this phase the user also preferably utilizes the knowledge workbench to create other custom information about the customer such as custom freight rates in the database . The user preferably utilizes the knowledge workbench to store the harmonized catalog and other custom information in the database of the central knowledge base . In an alternative embodiment of the system some or all of this information is provided by the user when asking for the costing information and is not stored in the database .

Asynchronously with the harmonization of the catalog a developer preferably utilizes the development system to develop B content for the central knowledge base . This content includes information such as default freight rates and delivery schedules denied party and license requirements other compliance information a unified HS tree representing the HSs of multiple countries associated tariff information etc. Although the developer operates asynchronously from the user the developer preferably develops at least some of the content such as the unified HS tree before the customer harmonizes the catalog since the customer would otherwise be unable to perform the harmonization . The developer preferably utilizes the publisher to publish the information to the central knowledge base .

Once the central knowledge base is loaded with information a user at the customer preferably utilizes the client to access the API and execute queries on the information. Alternatively the user may execute an application module on the application server and cause it to execute query. The queries request costing information with respect to one or more specified goods in the customer s product catalog and other variables in the system. Modules in the central knowledge base determine the answers to the queries and return the answers to the user via the client .

The processor may be any specific or general purpose processor such as an INTEL x86 or POWERPC compatible central processing unit CPU . The storage device may be any device capable of holding large amounts of data like a hard drive or some other form of fixed or removable storage device. The memory holds instructions and data used by the processor . The pointing device may be a mouse track ball light pen touch sensitive display or other type of pointing device and is used in combination with or instead of the keyboard to input data into the computer system . The network adapter couples the computer system to a computer network via a communications link such as link or .

Program modules for providing the functionality attributed to the computer system are preferably stored on the storage device loaded into the memory and executed by the processor . Alternatively hardware or software modules may be stored elsewhere within the computer system . As used herein the term module refers to computer program logic data and or any software hardware or circuitry utilized to provide the functionality attributed to the module. The types of hardware and software within the computer system may vary depending upon how the computer system is utilized. For example a computer system used as the central knowledge base is likely to have greater processing power and storage capacity than a typical personal computer or portable electronic device used as the client . In addition the central knowledge base may lack a display and or other components.

Returning to the user preferably uses the client to interface with and send queries to the central knowledge base via the API . In other embodiments the client interfaces with a dedicated client server not shown or another of the entities illustrated in . In one embodiment the client is a personal computer executing browsing software such as NETSCAPE NAVIGATOR MICROSOFT INTERNET EXPLORER a terminal emulator or dedicated client software. Alternatively the client is a wired or wireless telephone a personal digital assistant PDA or some other electronic device. Although only one client is illustrated in each of embodiments of the present invention may have multiple clients.

The central knowledge base preferably includes a conventional application server supporting the API and the client preferably accesses the API using known HTTP communications techniques. In one embodiment the API is implemented as JAVA and component object module COM plug ins. The plug ins preferably communicate with the other elements in the central knowledge base and or other entities in the system through conventional communication transports including the extensible markup language XML the simple object access protocol SOAP and or direct Enterprise JavaBeans EJB calls.

The user can preferably interact with the system in one of three primary manners stateful semi stateful or stateless. The differences among these manners are in the amount of data a query passes to the system via the API . In stateful interactions only data that cannot be known in advance such as the quantity buyer etc. are passed to the system with the query. All other data relied upon by the system to respond to the user s query are already stored in the system typically in the central knowledge base . In semi stateful interactions some of the data stored in the system are overridden by data passed with the query via the API . illustrates the stateful and semi stateful interactions. In stateless interactions all of the data stored in the system that can be overridden by data passed with the query via the API are overridden. In one embodiment the data that cannot be overridden via the API include freight rates tariffs VAT rates etc. If the system lacks data needed to answer a query either because the data are not in the central knowledge base and or not in the query one embodiment returns an error message to the client explaining the error and how to rectify it.

In general the system is easier to use if frequently utilized data are stored in the system rather than being included with every query. Moreover a dedicated group of developers or users can store the frequently utilized data in the system in advance leaving the majority of users free to use the system in a stateful or semi stateful manner. For example in a stateful embodiment where large amounts of data are stored by the system a user can obtain a landed cost estimate by merely identifying a type of good a ship to destination and a quantity. For this reason the stateful and semi stateful interactions are preferred.

In response to the query received from the client the application server in the central knowledge base delivers the costing information such as the landed cost estimate to the client. In one embodiment the application server provides the answers in formats such as the hypertext markup language HTML XML JAVA applets JavaScript scripts voice or other audio prompts etc. In this latter embodiment a user uses a telephone to input touch tone signals to the central knowledge base via the API and receives voice prompts and audio data in response.

The central knowledge base preferably contains a classification module for finding the best harmonized system HS code in which to classify a good. The central knowledge base also preferably holds a rule compilation execution module for compiling and or executing rules stored in the database . Compiling certain rules may be desired because compiled rules generally execute faster than interpreted rules i.e. rules that are executed from an uncompiled state . The central knowledge base also preferably holds a denied party screening module for determining whether a transaction involves prohibited individuals companies countries addresses etc. a license detection module for interfacing with the compliance module to detect whether an export license is needed to export a particular good a landed cost generation module for generating real time landed cost estimates from information held in the database or otherwise provided to the system and a data subscription service module for controlling updates to the data in the database .

Preferably the above described modules are independent and can be installed and executed separately. In addition the modules are preferably platform independent and in one embodiment the modules are written in JAVA and are Java 2 Platform Enterprise Edition J2EE compliant.

The database preferably holds data modules holding data utilized by the other modules in the central knowledge base . Much of the data in the database is tabular and thus is stored in conventional database formats. Some of the data however is ad hoc meaning that the data is intended to perform a specific purpose. Preferably ad hoc content is implemented as rules either in uncompiled or compiled form. Thus ad hoc content is a form of executable data. In one embodiment the rules are represented as Prolog language code although other embodiments may use different representations. The rule based representation of ad hoc data is preferred because it allows algorithmic behavior of the system to be altered simply by altering the data held in the database .

The database preferably holds an HS module which in turn preferably holds a unified HS code hierarchy also referred to as the unified HS tree . The HS also known as the Harmonized Commodity Description and Coding System is a multipurpose international good nomenclature developed by the World Customs Organization WCO . The HS comprises about 5 000 commodity classifications each identified by a six digit code although countries can and typically do add additional digits and having an associated description arranged in a hierarchical structure. The system is used by more than 177 countries and economies as a basis for their customs tariffs and over 98 of the merchandise in international trade is classified in terms of the HS. The United States uses a Harmonized Tariff Schedule HTS based on the HS. The HS tree in the HS module is unified because it holds data representative of all of the HS trees of the countries supported by the system .

Returning to a tariffs module preferably holds information about duties taxes and fees including preferences value added taxes VATs anti dumping duties countervailing duties duty units etc. applied by the country or countries supported by the system . The tariffs are indexed by the countries HS codes. The tariffs module additionally holds rules for applying the tariffs such as the de minimis noncommercial shipments and effectively dates rules. The tariffs module also preferably holds information about miscellaneous accessorial charges such as inspections insurance etc. applied or required by the various countries.

A compliance module preferably holds information for determining whether a proposed shipment complies with the laws of the countries involved. The compliance module preferably holds a denied parties module that stores data representative of import and export restrictions imposed by the countries supported by the system . The compliance module also preferably holds information about import export licenses granted to certain parties customers etc. In addition the compliance module preferably holds quota information describing import and or export quotas enforced by the countries. The compliance module also preferably holds rules for applying the content in the module to proposed shipments contemplated by the system .

A freight rate module preferably holds information describing rates and average shipping times for shipping goods domestically and internationally. In general the freight rates are divided into two broad categories custom rates and default rates. The custom rates typically result from negotiations between the customer and one or more shippers and are preferably utilized when determining a landed cost for goods shipped by that customer. Accordingly the freight rate module preferably holds the custom freight rates for the one or more customers that use the system . The default freight rates are preferably utilized by the system in the absence of custom freight rates. In one embodiment the default freight rates are published rates for large shipping companies such as United Parcel Service UPS and DHL Worldwide Express.

A logging module preferably logs and stores logs of transactions and other data generated by the system . In one embodiment the logs include transaction reports billing records and debugging information. The logs also preferably include information describing variances between quoted landing costs or other quoted information and the actual landing costs in order to verify the accuracy of the system .

A packaging module preferably holds information related to packaging calculations such as weights and dimensions. In one embodiment the information includes rules describing the space occupied by certain types of goods in certain configurations. The dimensions occupied by goods and calculated by the rules may not scale linearly with the quantity of the goods. For example assume a good in an individual contain may occupy a first amount of space. However a quantity of the good must be shipped on a pallet that occupies a second amount of space. In this example the packaging module includes rules that identify and account for the pallet in order to provide accurate estimates of the required packaging dimensions and or the storage space required to ship the goods.

A security module preferably holds security information utilized by the system . In one embodiment the security information includes login password pairs utilized by users to log into the system permissions information describing the features and data accessible to the users and any other information that is necessary or desired to maintain security in the system .

A trade information module preferably holds miscellaneous trade information utilized by the system. This information includes geographic data describing the locations of countries provinces counties cities airports seaports and or other locations necessary or desired to generate a landed cost estimate or answer other questions posed by the user. The trade information module also preferably holds current exchange rates for the currencies of countries supported by the system . The module also holds Incoterm International Commerce Term definitions in a format that can be utilized by the system when determining landed cost estimates.

A custom content module preferably holds custom content supplied by and pertinent to the one or more customers utilizing the system with the exception of the custom freight rates stored in the freight rate module . In one embodiment the custom content includes catalog trees hierarchically identifying categories and subcategories of goods supplied by a customer and the goods respective HS codes product information such as SKUs names descriptions weights dimensions United States Export Control Classification Numbers ECCNs if applicable country of origin information and or preference flags. The custom content module in one embodiment also contains kit information e.g. bills of material top level assembly information configuration information etc. cross references a customer specific glossary to aid in classification custom classification terms accessorial charges tariff rules denied parties licenses and or exceptions quotas and or compliance rules.

In general customers can provide the custom content to the custom content module through use of the tools described herein. The custom content in the module overrides the default content specified by the other modules in the central knowledge base and or database . In the ASP embodiment of the system A each customer preferably supplies custom content to the database A which the system then uses when answering questions posed by users associated with the customer. Thus the database A holds custom content for multiple customers. In the embodiment of the system B the database B preferably holds custom content associated with only the single customer with which the system is associated.

A subscriber module in the database preferably interfaces with the data subscription module and the publisher to update non custom content stored in the database. The publisher is preferably a module executing on a conventional computer system such as the development system . In one embodiment the data subscription module has a digital certificate and a login password pair that it provides to the publisher module to authenticate itself and allow the two modules to communicate securely.

Content is preferably provided to the publisher by developers utilizing the development system . In addition the publisher may receive content from other sources although the developers may use the development system to establish rules for filtering and or formatting the content received by the publisher. For example the publisher may receive data related to currency exchange rates and denied parties from third party information providers. The development system preferably receives content via conventional means such as via a network connection not shown or via optical or magnetic media not shown .

The developers preferably utilize the development system to organize data to be distributed by the publisher into compressed self contained self extracting packets called datapacks. Each datapack contains the new content and computer executable instructions for unpacking and applying the content to the central knowledge base . A datapack also preferably contains a digital signature checksum and or other information for authenticating the datapack. In one embodiment datapacks are generated on a daily basis in order to update exchange rate and other volatile data in the database .

In one embodiment the data subscription module in the central knowledge base initiates a transfer of datapacks from the publisher module to the subscriber module . For example the data subscription module may initiate an update at scheduled intervals such as every day. In another embodiment the publisher module initiates a connection with the data subscription module to commence an update. In either case the publisher module preferably authenticates the identity of the data subscription module and then sends the datapack or datapacks containing the update to the data subscription module. The data subscription module in turn preferably utilizes the digital signature and or checksum to verify the integrity of the datapack. In one embodiment customers can subscribe to particular content. The data subscription module ensures that the publisher only provides the customer s subscriber module with datapacks containing the subscribed to content.

Then the subscriber module unpacks and executes the content in the datapack thereby updating the content in the central knowledge base . Preferably only non custom content is updated in this manner. Accordingly it is incumbent on the customers to update their custom content. Preferably the content in the central knowledge base remains available while the content is being updated thereby allowing updating without interrupting the operation of the system .

In one embodiment after the datapacks are transferred and the subscriber module updates the content of the central knowledge base the data subscription module sends status information to the publisher module indicating whether the update was successful. If the datapacks were not successfully transferred to the central knowledge base or the update did not complete successfully the data subscription module preferably sends diagnostic information to the publisher module . A developer can then analyze the diagnostic information to determine likely problems and solutions.

In order to reduce the likelihood that the central knowledge base enters an inconsistent state the subscriber module preferably performs an update as a large atomic transaction. The final version state which indicates the update level of the software in the central knowledge base is preferably the last data written by the subscriber module . If the update fails midway through the transaction due for example to a power failure hardware error or software error the subscriber module preferably automatically returns the central knowledge base to its prior state. At this point the update can be attempted again. This behavior enhances the fault tolerant capabilities of the central knowledge base .

As illustrated in the unified HS tree is comprised of several different types of nodes and cross references between nodes. Standard nodes are nodes corresponding to particular countries classifications that have not been altered by merging cross referencing etc. as described below. For example if a particular country has a classification that is unique among the HSs of the countries supported by the system the classification is represented in the unified HS tree by a standard node.

The unified HS tree also preferably contains classification nodes . Classification nodes are nodes that account for logical classifications in the HS that are not distinguished by HS codes. For example assume the HS contains classifications as follows 

The unified HS tree also preferably contains subnodes . Subnodes are nodes below the standard leaf nodes in the HS tree . Some countries HS trees have additional classifications such as lists of exceptions beneath the leaf nodes of their respective HS trees. For example a leaf node for widgets made of sanded wood may have exceptions for blue widgets and red widgets and there may not be HS codes for the blue and red widget exceptions. When this situation occurs the system preferably manufactures subnode codes using the convention HSCodeofParent ExceptionNumber. For example if the HS code for widgets is 1234.20.20 the system preferably creates subnode code 1234.20.20 1 to classify blue widgets and 1234.20.20 2 to classify red widgets. Different embodiments of the system can use different representations such as text strings or other tokens for the exception numbers. Thus the representation of the exception number can be tailored to match particular countries classification styles. The subnodes allow the harmonization and tariff calculations to be extended deeper in the HS tree so that the system works the same for subnodes i.e. exceptions as it does with official HS codes. Preferably a customs official reviewing customs documents that refer to subnodes recognizes or is told that the portions of the HS codes after the colons refer to exceptions.

The unified HS tree also preferably contains merged nodes sharing the same set of HS terms. A merged node is created by merging nodes from two or more countries HS trees to produce a single node shared by those countries and having a single shared node description. Merged nodes are desirable because they save space by compacting the HS tree and make it easier to classify a good in the HS trees of multiple countries.

In one embodiment of the system nodes are merged in three different situations. First nodes are preferably merged when the nodes are semantically and syntactically identical i.e. the nodes have the same parent the same HS code and the same description. Preferably node descriptions from different countries HSs are considered the same even if they contain minor textual differences. For example extra blanks different line breaks or other minor differences are preferably ignored. Likewise differences in commas semicolons colons dashes braces parentheses quotes and periods are preferably ignored and certain symbols such as and are treated as equivalent to their corresponding words. In one embodiment if the text of two or more node descriptions contains the word other all of the siblings of the two nodes are compared. The two nodes are merged only if the siblings are the same.

Second two or more nodes are preferably merged when the nodes are semantically identical and syntactically identical again ignoring minor textual differences except for their HS codes which differ. In other words the nodes are merged when the nodes have identical parents and descriptions but different HS codes. In this case the resulting merged node is associated with all of the merged nodes HS codes.

Third two or more nodes are candidates for merging when the nodes are semantically identical but syntactically different. In other words the parents of the candidate nodes are the same and the HS codes are the same but the classification descriptions are syntactically different but semantically identical. For example one description states cobalt oxides commercial cobalt oxides and the other description states oxides of cobalt including those intended for commercial use. 

Preferably the development system contains a node merging module for performing automatic and assisted merging of nodes. In one embodiment the node merging module automatically merges nodes fitting the first two situations described above. The node merging module preferably merges nodes fitting the third situation the parents of the candidate nodes are the same and the HS codes are the same but the classification descriptions are syntactically different with developer input. In one embodiment the node merging module presents a developer with a graphical description of the HS trees of two or more countries. The node merging module identifies two or more nodes that are candidates for merging under the third situation and presents the nodes to the developer. The developer then indicates whether to merge the nodes. If the developer indicates to merge the nodes the developer also preferably indicates which of the nodes descriptions to apply to the merged node. Because merging nodes often produces a new common parent for nodes further down the trees this process continually finds new candidate nodes for merging. Therefore the process is preferably repeated until all of the leaf nodes are reached.

When merging two or more related nodes is not possible then the system preferably utilizes a cross reference between the nodes. For example if two nodes are semantically identical but have different parent nodes or two nodes are semantically similar but not identical then the nodes are linked by a cross reference. Although cross referenced nodes may not necessarily have exactly equivalent descriptions the descriptions are preferably such that no good could fall within one node and not within the cross referenced node.

Preferably the developer utilizes a cross reference module in the development system to create and maintain the cross references among the nodes. In one embodiment the cross reference module shares functionality with the node merging module i.e. the same module may perform both node merging and cross reference generation.

A preferred embodiment of the cross reference module maintains cross references between HSs of multiple countries by assigning nodes to groups. All nodes assigned to a particular group are deemed to have the same meaning. Therefore to find nodes that are cross referenced to a given node the cross reference module finds all groups to which the given node belongs. Each of the nodes in those groups is a cross reference.

The Group Terms table associates one or more term IDs with each of the groups. In this example group is associated with term ID s and . Each term ID identifies a particular good that falls within the group. The Terms table identifies the actual good or class of goods associated with each term ID. For example term ID is associated with grouper while term ID is associated with bass. In one embodiment of the present invention an additional table Node Terms specifies exceptions to the shared classifications of nodes in the groups. For example the Node Terms table specifies that node is also associated with term ID rockfish . The other nodes in the same group as node only node in this example are not associated with term ID .

Thus to find nodes in other countries HSs that cross reference to a leaf node in a first country s HS the cross reference module preferably identifies the group to which the leaf node belongs. The other nodes in the same group are the cross referenced nodes. Preferably heuristics in the cross reference module detect cases where node group equivalency is not true for a particular good such the case where rockfish is associated with node but not with the other node in the group node .

From the other direction if a term ID is known for a good being classified then the cross reference module preferably uses the Group Terms and Node Terms tables to identify the groups and or nodes associated with the term ID. Then the module uses the groups table to identify the cross referenced nodes. In this manner the cross reference module tracks cross references between the nodes of various countries HS trees.

Returning to the unified HS tree also preferably holds nodes that are identified as potential stopping points . In one embodiment a node is a potential stopping point in a particular country s HS tree if 1 the duty rates for all of the children of the given node are equivalent 2 the tax rates for all of the children of the given node are equivalent 3 any other rates for the children of the given node are equivalent 4 the structure of the rates are equivalent across all of the child nodes e.g. the rates are calculated as a percentage fixed fee etc. for all of the children nodes and 5 the rules and other information in the central knowledge base and database that govern landed cost rates are equivalent for all of the children of the given node. Stopping points are used to efficiently classify goods as described in more detail below.

In order to calculate the last of these factors whether the rules and other information are equivalent one embodiment of the system parses all of the rules and other information and builds a map between the rules and information and the nodes to which they apply. Then the rules and information are applied to all of the children of the nodes in the map to which they were initially applied. At this point the nodes that meet all of the factors described above are stored in the unified HS tree as potential stopping points . The process of generating the potential stopping points may be performed on and or supervised from the development system .

The knowledge workbench preferably includes a freight rate manager for enabling a customer to enter data describing negotiated shipping rates into the freight rates module . is a block diagram illustrating a more detailed view of the freight rate manager according to an embodiment of the present invention. The freight rate manager contains a rate sheet input module for receiving data representative of a rate sheet. A rate sheet is a document enabling the determination of the cost of shipping goods from an origin to a destination. Preferably the rate sheet input module accepts the rate sheet in the MICROSOFT EXCEL spreadsheet format. Since this is a popular format many major shipping companies make rate sheets available as Excel spreadsheets. In addition scanning software can turn printed rate sheets into Excel spreadsheets through an optical character recognition OCR process and electronic rate sheets in other formats can be converted into the Excel format. Of course alternative embodiments of the rate sheet input module accept rate sheet data in other formats.

Table 1 zone based and is interpreted using a second sheet that assigns geographic areas to zones. For example the second sheet may contain a map of the United States and identify certain states as being within certain zones. The second sheet typically also contains a matrix mapping the zones to the rate scales such as the matrix of Table 2.

Different types of rate sheets specify rates in different manners. For example other zone based rate sheets may identify zones by ZIP code or by assigning each state or country to a separate zone. Other rate sheets specify for example point to point rates volume based rates freight based i.e. weight based rates or hybrid rates. Those of skill in the art will recognize that the freight rate manager can also support other types of rate sheets.

Preferably the rate sheet input module allows the user to provide additional information about the rate sheet. Preferably the rate sheet input module provides the user with a wizard with which the user can input the additional information. A wizard provides the user with a graphical user interface GUI having menu choices text boxes etc. that the user can select or fill out to indicate certain information. In one embodiment market research and historical data are analyzed to identify information commonly requested from users. The wizard allows a user to input this information by for example providing the user with a check box and or data entry fields with which the user can indicate the information.

In one embodiment the module prompts the user to input the type of rate sheet. If the user indicates that the rate sheet is zone based the module prompts the user to identify the geographic regions in each zone. The module may accomplish this task for example by presenting the user with a map of the world or certain countries and a Zones list box and asking the user to identify the countries in each zone. The user may also indicate the currency utilized in the rate sheet and or whether the weights and measures in the rate sheet are in English or metric units. In one embodiment of the present invention all or some of the information is determined automatically by the freight rate manager instead of through a wizard or other user interaction.

The rate sheet data received by the rate sheet input module are provided to a rate sheet analyzer module hereinafter referred to as the rate sheet analyzer or simply the analyzer . The analyzer applies heuristics and templates to the rate sheet data in order to interpret the rates and other information contained therein. The output of the analyzer is provided to a rule generator .

In one embodiment the heuristics applied by the analyzer identify keywords in certain cells of the rate sheet that signify the types of data. Such keywords may include overnight minimum Colombia door to door zones weight etc. Different keywords may have different meanings or weights depending upon the keywords locations in the rate sheet. For example keywords along the top or left side of the rate sheet typically define headings. Likewise blocks of numbers in the middle of the sheet are probably shipping costs weight data etc.

Preferably the heuristics include logic for identifying OCR errors. For example if a particular shipping rate within the rate sheet is far outside an expected value the heuristics flag the shipping rate as a possible error. In one embodiment the freight rate manager provides a dialog box or other interface to the user to allow the user to view and possibly alter the suspect data.

The rate sheet analyzer preferably makes use of one or more rate sheet templates stored in a rate sheet template storage module to interpret the rate sheet data. In one embodiment the template storage module is local to the freight rate manager . In another embodiment the template storage module is remote from the freight rate manager and may be stored in the central knowledge base or on a server accessible via the Internet or another network. The templates are preferably generated by analyzing typical rate sheets and identifying standard formats. In one embodiment specialized templates are generated for the rate sheets of major shipping companies.

The heuristics within the analyzer preferably use the identified keywords or other information to find a template that fits the rate sheet data. The analyzer then interprets the rate sheet data as specified by the template. For example assume that the analyzer isolates the keyword UPS from the rate sheet data. Also assume that the template storage contains a specialized template for interpreting UPS rate sheets. The analyzer is likely to select the UPS template unless other rate sheet data do not match the template and use it to interpret the remainder of the data in the rate sheet.

In another example assume that the heuristics identify the word weight on the left side of the spreadsheet defined by the rate data and the word zones across the top. Also assume that the template storage contains a template containing rules for interpreting rate sheets having weight and zones in the aforementioned locations. If the analyzer determines that the template matches the rate data the analyzer uses the rules in the template to interpret the rate data.

In a preferred embodiment if the rate sheet analyzer cannot match a template to the rate data the analyzer passes the rate data to a communications module . In one embodiment the communications module passes the rate sheet data to another location where developers can analyze the data. Preferably the communications module is coupled to a communications link such as link with which it can send data to and receive data from a remote computer via the Internet. The analyzer preferably passes the rate sheet data to the communications module . The communications module in turn passes the data to a remote server where developers analyze the rate sheet data and preferably generate a new template or modify an existing template to process the rate sheet data. Then the developers pass the new or modified template and the rate sheet data back to the analyzer via the communications module . The analyzer stores the template in the template storage and applies the template to the formerly unknown rate sheet data.

In an alternative embodiment the communications module stores the rate data locally. This alternative may be desirable for example when the shipper or user considers the rate data proprietary and does not allow it to be sent offsite for analysis. Accordingly a developer can visit the physical location of the freight rate manager and review the rate data.

The freight rate manager also preferably includes an accessorial charge module for adding accessorial charges. Accessorial charges are exceptions or special fees that need to be considered in addition to the rates specified by the rate sheet. For example accessorial charges may be added if a forklift is required more than two people are required to move the goods the goods require refrigeration or other special care or the delivery address is a school or hospital. In one embodiment the accessorial charge module allows the user to select from a menu of possible accessorial charges. Preferably the menu items are determined by analyzing typical rate sheets and shipping needs to identify common accessorial charges. In addition the module preferably has a facility allowing the user to modify the preset accessorial charges and or add new accessorial charges. The accessorial charge module preferably communicates the accessorial charges to the rule generator .

The rules generator preferably generates Prolog code describing the rate sheet and accessorial charge data respectively received from the rate sheet analyzer and the accessorial charge module . When this code is given inputs and executed it generates a shipping cost according to the terms of the rate sheet and any accessorial charges. Preferably the rules generator stores the Prolog code in the freight rates module in the central knowledge base .

The freight rate manager analyzes the rate sheet data using heuristics and then attempts to select a template that matches the rate sheet. If the manager cannot find a matching template it preferably stores the rate sheet data either locally or remotely and flags it for further review by a developer. If the manager finds a matching template it preferably applies the template to the rate sheet data.

The freight rate manager also accepts information about accessorial charges from the user or another source. Then the manager generates rules embodying the rate sheet data and accessorial charges. In one embodiment these rules take the form of Prolog code. The freight rate manager preferably stores the rules in the freight rates module in the central knowledge base .

Returning to the knowledge workbench also preferably includes a catalog harmonization module also referred to as a catalog harmonizer . In general a user uses this module to harmonize the customer s catalog of goods according to one or more countries HSs. is a block diagram illustrating a more detailed view of the catalog harmonizer and the central knowledge base .

The catalog is preferably an electronic list of at least a subset of the goods shipped by the customer. The catalog may contain information describing the goods such as the weights and dimensions of the goods. The catalog may also be hierarchical so that goods are classified by class and subclass unorganized or some state in between.

The catalog harmonization module receives the catalog as an input. If necessary a meta catalog generation module hereinafter the meta catalog generator or generator within the catalog harmonizer receives the catalog . The generator preferably generates a hierarchical meta catalog from non hierarchical catalog data. Thus the generator is preferably utilized if the catalog data is not hierarchical. In one embodiment of the present invention the generator utilizes a GUI with which the user can identify and hierarchically order the goods in the catalog . In one embodiment heuristics within the generator assist the user by identifying and classifying similar goods in similar categories. For example the GUI may allow the user to specify that all goods having a description containing the term sweaters are classified as a subclass of the clothing class. In this description the term catalog refers to either a hierarchical catalog received as input or a hierarchical meta catalog created by the meta catalog generator from at least partially non hierarchical data.

A GUI module provides the GUI for the generator the GUI for the catalog harmonizer and the GUI for a harmonizer wizard module utilized by the harmonizer. A user uses these latter two GUIs to harmonize the goods in the catalog with one or more countries HSs. To support harmonization of the goods in the catalog a database interface module in the catalog harmonization module interacts with the classification module and the HS module in the central knowledge base in order to determine suggested classifications in one or more countries HSs for the goods in the catalog . In one embodiment the database interface receives information describing the good or goods to be harmonized and the country or countries in which to harmonize the good from the GUI module . The information about the good may include its name SKU description price position in the catalog hierarchy and or any other information known about the good. Preferably the database interface performs any formatting of the information if necessary and passes the information to the classification module in the central knowledge base .

The classification module preferably utilizes the HS module to find the most likely matching classifications in the selected country or countries for the identified good or goods. In one embodiment the output of the classification module is a ranking of the one or more classifications in one or more countries in which the good is likely to fall. Since any given classification i.e. node in the unified HS tree may be associated with one or more other classifications through merged nodes or cross references each classification returned by the classification module may pertain to multiple countries.

Oftentimes the classification module will return classifications having fewer than the full number of digits of precision i.e. the returned classifications are not leaf nodes in the unified HS tree . In some situations the classification module cannot classify the good to the precision required at the leaf node.

In other situations it is unnecessary or undesirable for the classification module to classify a good at the maximum precision. There are situations when it is desirable to stop classifying the good after a certain level of precision. For example if every classification beneath a certain level of a branch of the unified HS tree has the same entry rates duties taxes fees etc then all classifications below that point can be treated as the same for landed cost purposes and there is no reason to classify the good any further because it will not affect the landed cost estimate. Because the stop location may have only six or even four digits of precision and the leaf nodes of the unified HS tree may have 20 or more digits it is inefficient and costly to classify the good at greater than the necessary levels of precision.

Accordingly a preferred embodiment of the harmonizer interfaces with the module in the unified HS tree holding the potential stopping points and selectively indicates when a reached node is a potential stopping point. Preferably the user can use an interface provided by the GUI module to selectively indicate whether to use the potential stopping point as the classification or to continue classifying the good at a greater level of precision.

In one embodiment of the present invention the classification module selects keywords from the received description of the good and then searches for the keywords in the HS classification descriptions. If no description is available the classification module preferably searches on keywords generated from the other received information about the good.

Alternative embodiments of the classification module perform more sophisticated searching. For example one embodiment uses a stored thesaurus not shown to generate search keywords related to the words in the description. Another embodiment assigns weight values to the search terms and gives more weight to those terms that are likely to produce valid results. Yet another embodiment of the classification module uses statistical modeling to analyze feedback from the user and assign more frequently selected classifications a greater weight in subsequent search results.

Moreover one embodiment of the classification module includes logic for automatically improving its classifications over time by adding new words and associations to the HS tree in response to users harmonizations. Thus the classification module remembers harmonizations selected by users and uses these harmonizations to improve the classifications selected in response to future harmonization of the same or similar goods. This feature can preferably be selectively disabled in order to avoid mis training the classification module .

In one embodiment the classification module can be overridden by user specified classification rules stored in the custom content module in the database . In one embodiment the classification module or another module in the system provides the user with a graphical wizard that allows the user to specify rules for determining classifications. In one embodiment the classification module allows the user to specify rules such as If SKU is x then use classification y or If the good s description contains PDA then use classification z. These classifications are returned by the classification module .

The output of the classification module is preferably passed back to the database interface . The database interface preferably reformats the classifications if necessary and passes it to the GUI module . The user interacts with the GUI module to classify the goods in the catalog according to the HS classifications returned from the classification module . The end result is the harmonized catalog . The user preferably uses the knowledge workbench to store the harmonized catalog in the custom content module in the database of the central knowledge base .

In a preferred embodiment the catalog harmonizer in addition to classifying a good with an HS code returns an HS identification HS ID to the user. An HS ID is a unique ID associated with the node i.e. HS code in the unified HS tree and represents the HS code at a particular point in time. Preferably the system stores HS IDs in the HS module in the database . In one embodiment if a change occurs to the unified HS tree that affects the HS code the system indicates to the user that the HS code identified by the HS ID has changed. In another embodiment the user occasionally provides the HS IDs to the system to determine whether the HS codes have changed.

When a country makes a change to an HS code user action may be required. For example a country may eliminate an HS code or change a leaf node into a parent by giving it two or more new descendents. In the first case an eliminated HS code the HS code identified by the HS ID becomes invalid and the user preferably re harmonizes the good. In the second case new child nodes the HS code and its associated HS ID remain valid but the user preferably re harmonizes the good in one of the new child nodes. Other situations where an HS code change may require user action include when a country changes the numbering associated with a code changes a code so that it is no longer a potential stopping point and or changes the description associated with a code. The system preferably retains all custom content and learning associated with changed nodes.

If the unified HS tree is modified in a way that changes a node but does not invalidate the node s associated HS ID such as when the node is merged with another node the system preferably redirects the HS ID to the new or changed node. In one embodiment the system maintains an HS ID redirection table not shown in the database . This table points the old HS ID to the new or changed node. In this manner the HS tree can be modified without invalidating HS IDs.

In the catalog is being viewed as a hierarchical tree where each node of the tree represents a particular class or subclass of goods. Preferably nodes can be expanded to display a list of goods classified in the catalog hierarchy at the nodes. Preferably the GUI provides a graphical icon indicating whether a particular good has been classified. In one embodiment the icon is colored to indicate the status of the good. In alternative embodiments different techniques can be used to indicate whether a good has been harmonized such as changing the color of the text for the good changing the shape of the icon etc. Preferably the user uses normal navigation techniques such as arrow keys mouse clicks etc. to navigate through the catalog hierarchy select particular nodes in the tree and or select one or more goods listed at a node.

The right side of the GUI is preferably the information area . This area displays fields containing information about the specific good goods or nodes selected in the catalog hierarchy area . The fields are preferably editable so that the user can update the information. This information is preferably contained in the catalog itself although it can also be stored separately. In one embodiment the displayed information includes the good s number e.g. SKU number name description duty units preferences United States Export Control Classification Number ECCN if applicable and country of origin.

The displayed information preferably also includes information necessary or useful for calculating the shipping cost for the good such as the dimensions of the good with or without packaging the weight of the good the quantity of the good included in one unit whether the good is stackable etc. Alternative embodiments of the GUI can list additional or different information about the good.

Preferably the catalog harmonizer includes interfaces and controls not specifically shown in that allow the user to simultaneously assign the same HS code to multiple goods. For example if the user knows that all goods at a certain node in the hierarchical catalog should be assigned the same HS code the user uses the interfaces and controls to select the node and assign it the code. All of the goods at the node will inherit the HS code. In the same manner the user can preferably assign an HS code to a parent node and the catalog harmonizer will automatically cause all goods belonging to nodes descending from that parent node to inherit the HS code.

The information displayed by the GUI also preferably includes the countries for which a particular catalog category or good should be harmonized. The user selects these countries and then preferably invokes the harmonizer wizard which preferably appears in a separate window to harmonize the selected good or goods in the selected countries.

Launching the harmonizer wizard preferably causes the database interface to interact with the classification module and the HS module in the central knowledge base and return one or more suggested HS classifications for the selected good in at least one of the selected countries. The harmonizer wizard presents the user with an initial results page not shown containing the suggested HS classifications and the user selects from among them. Then the user uses the harmonizer wizard to harmonize the good in the country or countries. Once the harmonization is finished the harmonizer wizard preferably closes its window and the countries and their HS codes for the selected category or good are listed in the information area .

In an alternative embodiment of the system the harmonizer portion of the catalog harmonizer executes as a standalone application. In this embodiment the harmonizer portion presents the user with an initial page with which the user provides a description of a good and selects the country or countries in which to harmonize the good. Then the user invokes the harmonizer wizard . After the harmonizer wizard executes the user is provided with a page showing the good and the associated HS codes.

The GUI also preferably includes a tree area that displays a representation of the nodes in the selected country s HS tree. The tree area may indicate through highlighting or some other means that a particular node is selected.

The GUI also preferably includes a text area that includes a description of the currently selected node in the HS tree along with available child nodes. For example if the selected node corresponds to HS code 8524.99.10 and the current country is Canada the description may read Magnetic disks of an educational scientific or cultural character . . . The GUI also preferably displays controls with which the user can navigate the nodes of the tree .

The user preferably utilizes the GUI to pick the HS classification that best fits the good or goods being harmonized. This classification may be associated with one or more countries because the node may be merged and or cross referenced. These one or more countries may be the same as the set of countries selected by the user or different but having at least one country in common. The harmonizer wizard may ask the user to answer refining questions and navigate through the unified HS tree hierarchy starting at the picked classification until the harmonization code typically a leaf node or stopping point for the good is determined for one country. Since the leaf node may be merged the harmonization code may apply to multiple countries.

If there are remaining countries for which the good must be harmonized the wizard preferably analyzes the cross references from the harmonized nodes to find nodes associated with the HS trees of the remaining countries. The wizard preferably follows the cross reference that points to the node associated with the most remaining countries. At this point the user uses the wizard and controls to answer refining questions and navigate past the cross referenced node until the harmonization code is determined. If there is no cross reference the wizard preferably searches up the HS tree hierarchy of the selected node until a node in common with i.e. merged or cross referenced a node from one of the remaining countries is identified.

Returning to the knowledge workbench also preferably includes a denied parties licenses editor module . A user uses this module to enter custom denied parties custom license requirements and or exceptions to the denied parties and license requirements information held in the compliance module in the database . Preferably the custom information is held in the custom content module in the database .

The rules editor module in the knowledge workbench preferably allows the user to create custom rules that affect the operation of the system . For example the user can create rules that say pad all quotes by 1.5 ignore quota restrictions for goods X Y and Z being shipped to Mexico add two inches to specified dimensions to allow for packaging add two days to all estimated shipping times etc. In one embodiment these rules are compiled by the rule compilation module in the central knowledge base and stored in the custom content module in the database .

The administrator module in the knowledge workbench preferably allows certain users to start stop and restart the various modules provided on the local remote server and or knowledge workbench . The administrator module also preferably allows certain users to add modify and delete other users and their permissions. For example not all users may be allowed to enter custom rules or denied parties or harmonize goods.

Preferably the denied parties licenses editor rules editor and administrator modules are implemented as wizards. Alternative embodiments of the knowledge workbench may contain greater fewer or different modules than those described herein as may be necessary to support the functionality of the system.

Returning to the applications server is preferably a conventional computer system holding additional application modules for execution on the system . The application modules on the applications server preferably access the content in the central knowledge base through the API . Accordingly the functionality of the system can be expanded through the application modules.

A documentation module preferably supplies information about documents that may be required or desired when shipping goods among the destinations supported by the system. This module preferably utilizes the content in the central knowledge base to determine any needed information about the goods and shipment and then uses this information to identify and generate necessary documents. In one embodiment the functionality of the documentation module is provided by the TRADEPAQ product available from TRADEPAQ Corporation of New York City N.Y.

An optimizations module preferably performs duty engineering functions such as identifying optimal manufacturing and warehousing locations based on the information in the central knowledge base . For example in one embodiment the optimizations module generates a matrix of destinations warehouse locations and unit landed costs and uses this matrix as an input into an optimization system in order to identify the optimal warehouse locations with respect to shipping costs tariffs and or other variables. Other embodiments may analyze the information in the system to perform other types of optimizations. One embodiment of the optimization module utilizes an optimization system from i2 Technologies Inc. of Dallas Tex.

A sales information module preferably integrates customer and sales information directly into the system. In one embodiment the sales information module includes the Siebel Sales application available from Siebel Systems Inc. of San Mateo Calif.

The module receives information about a shipment of goods. This information enables the module to identify the particular type of good or goods the quantity of the goods and the goods origin and destination. Depending upon whether a user is interacting with the system in a stateful semi stateful or stateless manner some or almost all of this information may be supplied via the API or already stored in the central knowledge base .

The landed cost generation module preferably utilizes the information about the goods to determine the classification of the goods in the HS tree of the destination country if necessary. Preferably the landed cost generation module determines the classification by accessing the harmonized catalog stored in the custom content module in the database . The landed cost generation module preferably utilizes the classification to access the tariffs module and determine any tariffs or other charges that are applicable to the shipment of goods.

The landed cost generation module also preferably determines the freight rates for the goods. Preferably the module determines the freight rates by accessing the freight rates and or executing the rules stored by the freight rates module in the database . The landed cost generation module may also access the packaging information stored in the packaging module . With this information the landed cost generation module can determine the approximate freight rates for shipping the goods from the origin to the destination.

In some embodiments the landed cost generation module determines other costs that affect the landed cost estimate. For example the module preferably determines the cost of the goods themselves. The module also preferably identifies and applies any custom rules such as quote padding held in the custom content module . The module also preferably accesses the trade information module in the database to retrieve currency exchange rates in order to perform any necessary currency conversions.

Once this information has been assembled the landed cost generation module preferably outputs a landed cost estimate. In one embodiment this estimate is the sum of the various costs calculated by the module . Alternative embodiments of the module use different formulae for calculating the estimate. The module preferably provides the estimate to the requester via the API .

In sum the present invention allows a user to quickly and accurately determine answers to questions related to domestic and international shipping of goods. The system utilizes the content in the central knowledge base to determine a landed cost for goods whether the shipment will be denied when the goods will arrive what documents will be needed to support the shipment and where the goods should be warehoused to maximize efficiencies.

The above description is included to illustrate the operation of the preferred embodiments and is not meant to limit the scope of the invention. The scope of the invention is to be limited only by the following claims. From the above discussion many variations will be apparent to one skilled in the relevant art that would yet be encompassed by the spirit and scope of the invention.

