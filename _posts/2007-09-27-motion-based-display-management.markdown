---

title: Motion based display management
abstract: A display manager is configured to handle the drawing of windows on one or more displays for an application differently based on detected motion information that is associated with a device. The display manager may not display windows for some applications while motion is detected, while the display manager may display windows for other applications even when motion is detected. Motion enabled applications may interact with the display manager and motion information to determine how to display windows while motion is detected.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08077143&OS=08077143&RS=08077143
owner: Microsoft Corporation
number: 08077143
owner_city: Redmond
owner_country: US
publication_date: 20070927
---
Computers today are used in many different environments. Not only are computers common at home computers are becoming more mainstream in moving devices such as cars and other moving devices. Computing systems however are typically designed for use while stationary. Using these computing systems while a device is in motion can be difficult and even dangerously distracting.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

A display manager is configured to handle the drawing of windows for an application on one or more displays based on motion information that is associated with a device. Each of the displays that is associated with the application may be drawn differently. Additionally each application may use different display characteristics based on the motion. For example the display manager may not display windows for some applications while motion is detected while the display manager may display windows for other applications even when motion is detected. Motion enabled applications may interact with the display manager and the motion information to determine how to display windows while motion is detected.

Referring now to the drawings in which like numerals represent like elements various embodiment will be described. In particular and the corresponding discussion are intended to provide a brief general description of a suitable computing environment in which embodiments may be implemented.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Other computer system configurations may also be used including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. Distributed computing environments may also be used where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Referring now to an illustrative computer architecture for a computer utilized in the various embodiments will be described. While the computer architecture shown in is generally configured as a mobile computer it may also be configured as a desktop. Computer includes a central processing unit CPU a system memory including a random access memory RAM and a read only memory ROM and a system bus that couples the memory to the central processing unit CPU .

A basic input output system containing the basic routines that help to transfer information between elements within the computer such as during startup is stored in the ROM . The computer further includes a mass storage device for storing an operating system a display manager a motion manager motion integrated applications and legacy applications which are described in greater detail below.

The mass storage device is connected to the CPU through a mass storage controller not shown connected to the bus . The mass storage device and its associated computer readable media provide non volatile storage for the computer . Although the description of computer readable media contained herein refers to a mass storage device such as a hard disk or CD ROM drive the computer readable media can be any available media that can be accessed by the computer .

By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM Erasable Programmable Read Only Memory EPROM Electrically Erasable Programmable Read Only Memory EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer .

According to various embodiments computer may operate in a networked environment using logical connections to remote computers through a network such as the Internet. The computer may connect to the network through a network interface unit connected to the bus . The network connection may be wireless and or wired. The network interface unit may also be utilized to connect to other types of networks and remote computer systems. The computer may also include an input output controller for receiving and processing input from a number of other devices including a keyboard mouse or electronic stylus not shown in . Similarly an input output controller may provide output to a display screen a printer or other type of output device. The computer also includes one or more motion devices that are designed to provide motion information. The motion devices may include but are not limited to devices such as global positioning systems accelerometers speedometers cameras and the like. Generally any device that determines motion may be utilized.

As mentioned briefly above a number of program modules and data files may be stored in the mass storage device and RAM of the computer including an operating system suitable for controlling the operation of a networked personal computer such as the WINDOWS VISTA operating system from MICROSOFT CORPORATION of Redmond Wash. The operating system may utilize a display manager that is configured to draw graphical windows on the display of the computing device . Generally display manager draws the pixels e.g. windows to a display such as display instead of an application drawing the pixels directly to the display. Motion manager is configured to process information received by motion device s and interact with display manager . While motion manager is shown within display manager motion manager may be separated from display manager. Additionally display manager may be configured as part of operating system . The mass storage device and RAM may also store one or more program modules. In particular the mass storage device and the RAM may store one or more motion integrated application programs and legacy applications .

Legacy applications are applications that are created without knowledge of motion information that may be exposed by display manager . Motion integrated applications are applications that are created that include logic to utilize the motion information that is exposed by display manager .

Generally display manager is configured to determine how to display windows on a display based on the motion data provided by motion devices . For example the display manager may never display windows for some applications while motion is detected while the display manager may display windows for other applications even when motion is detected. According to one embodiment when motion is detected display manager ceases to draw the windows that are associated with the legacy applications currently running. Other applications such as motion integrated applications may be informed of the motion by display manager and react appropriately based on the functionality of the application. For example when a device is in motion a motion integrated application may instruct the display manager to draw a window larger than normal and the application may activate a touchscreen as opposed to receiving input through a keyboard. The display manager may also be configured to change the appearance of windows based on the detected motion e.g. drawing windows larger only showing one window on a display and the like . Additional details regarding the display manager and motion manager will be provided below.

Display manager is located between the applications and the displays and controls the drawing of pixels to the displays. Instead of individual windows that are associated with an application drawing directly to a display the display manager causes the drawing for an application to be directed to off screen surfaces in video memory which are then rendered into a desktop image and presented on the display when determined. Display manager coordinates with motion manager in order to determine motion of a device. Motion manager is configured to receive information from a motion device such as a GPS device accelerometer or some other motion device and provide the motion manager to windows desktop manager . In response to a motion event the display manager may decide whether or not to draw a window to a display.

According to one embodiment motion enabled applications have access to motion information through an Application Programming Interface API . For example a motion enabled application may have a window displayed even while the device is moving if it makes an API call to acknowledge the motion before the display manager displays the contents of the window. The motion enabled applications may also register for events concerning the motion detected by motion manager . The events may related to predetermined motion conditions such as speed location acceleration and the like. The motion enabled applications can then make the decision of what is an appropriate display based on the motion events.

As discussed above a legacy application is not aware of the motion information and a as a result does not know when a device is in motion. According to one embodiment no windows are displayed for a legacy application when motion is detected. According to another embodiment the display manager may provide an option to bypass the blocking of displaying of windows when motion is detected. The display manager may also be configured show a display indicating that the display has been stopped based on the motion.

In addition to controlling the display of windows to a display the display manager can change the user interface on a display based on the motion. For example the default text sizes of a window can be changed the window controls can be changed e.g. increased in size and the like. The shell experience of the display can also change. For example different menus could be displayed. When the motion of the device stops or falls below a predetermined threshold the display manager displays the windows normally.

Motion enabled applications and display manager may also be configured to change behavior based on motion thresholds and or the location of a display within a device. For example one application may be within a car that allows displays to be shown that are not near a driver when motion is detected. In this example the displays away from the driver would be treated as a normal display . A motion enabled application may also restrict a display depending on the motion. For example when motion is less than a predetermined amount restricted display may be used. When motion is greater than a certain amount restricted display N may be used. Each display that is associated with an application may be treated differently.

When reading the discussion of the routines presented herein it should be appreciated that the logical operations of various embodiments are implemented 1 as a sequence of computer implemented acts or program modules running on a computing system and or 2 as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance requirements of the computing system implementing the invention. Accordingly the logical operations illustrated and making up the embodiments described herein are referred to variously as operations structural devices acts or modules. These operations structural devices acts and modules may be implemented in software in firmware in special purpose digital logic and any combination thereof.

Referring now to a process for managing the displays for legacy applications and motion integrated applications is described.

After a start operation the process flows to operation where a motion event is detected. A motion event may be configured to be any event based on motion such as motion detected motion stopped certain speed detected certain acceleration detected location changed and the like. According to one embodiment motion is detected using motion devices including but not limited to GPS devices accelerometers speedometers cameras and the like.

Moving to decision operation a determination is made as to whether the motion event is an end of motion event. An end of motion event is an event that indicates that no motion is detected and or the motion is under a predetermined threshold. For example an end of motion event may be indicated for a device traveling less than three 3 miles per hour or some other predetermined threshold. When the motion event is an end of motion event the process flows to operation where the display for the application returns to normal operation. During normal operation the display manager draws the windows on the displays without modification. When the motion event is not an end of motion event i.e. motion is detected the process flows to decision operation .

At decision operation a determination is made as to whether the application is a legacy application. When the application is legacy application the process flows to operation where the display for the legacy application is shut off until an end of motion event is detected. Alternatively as discussed above the legacy application may be allowed to display if a bypass has be established for the legacy application. Additionally some other modification may be made to the display.

When the application is not a legacy application the process moves to decision operation where a determination is made as to whether the change the display. According to one embodiment motion integrated applications are treated as legacy applications unless the motion integrated application includes logic to override the default behavior. When the display is to be changed the process flows to operation where the display is changed. The display change may be many different display changes. For example the display may be shut off the display may be modified i.e. bigger font fewer windows etc. one display may be modified while another display is allowed to be drawn. When the display is not to change the process flows to an end operation.

Referring now to a process for using events for managing the displays of motion integrated applications is described.

After a start operation the process flows to operation where a motion event is detected as described above.

Moving to operation a determination is made as to what applications have registered for the detected motion event. For example one application may register for all motion events whereas another application may only register for a motion event when the device exceeds a certain speed e.g. 10 mph .

Flowing to operation the motion event is sent to the registered applications. For example the motion event may be delivered to the applications through a callback mechanism or some other delivery method may be used.

Moving to operation any instructions are received from the motion enabled applications in response to the motion event. The instructions are used by the display manager to determine how to render the display s that are associated with the application.

Transitioning to operation the display s that are associated with the application are drawn. The process then moves to an end operation.

After a start operation the process flows to operation where a motion event is detected as described above.

Moving to decision operation a determination is made as to whether to change the drawing policy of the device. For example a display manager may determine to only show one window when a motion event is detected a window may be displayed differently e.g. larger bigger fonts less information windows may be tiled and the like. According to one embodiment the drawing policy change may affect both the drawing for legacy applications as well as the drawing for motion integrated applications. When the drawing policy is not changed the process returns to operation . When the drawing policy is to change the process flows to operation where the windows are displayed according to the drawing policy. The process the moves to an end block.

The above specification examples and data provide a complete description of the manufacture and use of the composition of the invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention the invention resides in the claims hereinafter appended.

