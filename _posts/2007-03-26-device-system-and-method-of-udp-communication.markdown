---

title: Device, system and method of UDP communication
abstract: Device, system and method of UDP communication. For example, an apparatus in accordance with an embodiment of the invention includes a non-kernel UDP protocol handler adapted to perform a UDP operation of a user mode application by bypassing the operating system kernel and directly accessing a communication adapter having an operating system bypass capability.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07848322&OS=07848322&RS=07848322
owner: Voltaire Ltd.
number: 07848322
owner_city: Raanana
owner_country: IL
publication_date: 20070326
---
A computing device may utilize an operating system OS having multiple modes of operation for example a kernel mode and a user mode. The kernel mode may directly access one or more components of the computing device for example a memory unit. The user mode may allow execution of one or more software applications which may not directly access one or more components of the computing device. For example a user mode software application may indirectly interact with a physical component of the computing device e.g. utilizing an interface provided by the OS kernel. Unfortunately the indirect interaction of a user mode software application may cause one or more performance drawbacks for example increased latency increased consumption of processing power increased consumption of bandwidth reduced throughput or the like.

Some embodiments of the invention may include for example devices systems and methods of UDP communication.

In some embodiments an apparatus may include for example a non kernel UDP protocol handler adapted to perform a UDP operation of a user mode application by bypassing the operating system kernel and directly accessing a communication adapter having an operating system bypass capability.

In some embodiments the non kernel UDP protocol handler is adapted to perform the UDP operation using a native semantic of the communication adapter.

In some embodiments the communication adapter includes an InfiniBand adapter or an Ethernet network interface card.

In some embodiments the non kernel UDP protocol handler is adapted to perform the UDP operation in user space.

In some embodiments the UDP operation includes an Internet Protocol IP UDP operation and the non kernel UDP protocol handler is adapted to perform the IP UDP operation externally to a TCP UDP IP stack of the operating system kernel.

In some embodiments the non kernel UDP protocol handler is adapted to monitor operations sent by the user mode UDP application for execution by the operating system kernel.

In some embodiments the non kernel UDP protocol handler is adapted to intercept a UDP operation selected from a group consisting of a UDP send operation a UDP receive operation an operation to add a UDP socket an operation to delete a UDP socket an operation to modify a UDP socket and an operation to control a UDP socket.

In some embodiments wherein the apparatus further includes a processor adapted to execute instructions of a UDP application.

In some embodiments a method may include for example intercepting a UDP operation of a user mode application and performing the UDP operation by bypassing an operating system kernel and directly accessing a communication adapter having an operating system bypass capability.

In some embodiments the method may include performing the UDP operation using a native semantic of the communication adapter.

In some embodiments the method may include performing the UDP operation using a native InfiniBand semantic.

In some embodiments the method may include performing the UDP operation externally to a TCP UDP IP stack of the operating system kernel.

In some embodiments the method may include monitoring operations sent by the user mode application for execution by the operating system kernel.

In some embodiments the method may include selectively intercepting the UDP operation in accordance with a pre defined criterion.

In some embodiments the method may include intercepting a UDP operation selected from a group consisting of a UDP send operation a UDP receive operation an operation to add a UDP socket an operation to delete a UDP socket an operation to modify a UDP socket and an operation to control a UDP socket.

Some embodiments may include for example a machine readable medium having stored thereon instructions that when executed by a machine cause the machine to perform a method in accordance with embodiments of the invention.

In the following detailed description numerous specific details are set forth in order to provide a thorough understanding of some embodiments of the invention. However it will be understood by persons of ordinary skill in the art that embodiments of the invention may be practiced without these specific details. In other instances well known methods procedures components units and or circuits have not been described in detail so as not to obscure the discussion.

Embodiments of the invention may be used in a variety of applications. Some embodiments of the invention may be used in conjunction with various devices and systems for example a personal computer PC a desktop computer a mobile computer a laptop computer a notebook computer a tablet computer a server computer a handheld computer a handheld device a personal digital assistant PDA device a handheld PDA device a wireless communication station a wireless communication device a wireless access point AP a modem a network a wireless network a local area network LAN a wireless LAN WLAN a metropolitan area network MAN a wireless MAN WMAN a wide area network WAN a wireless WAN WWAN a personal area network PAN a wireless PAN WPAN devices and or networks operating in accordance with existing IEEE 802.11 802.11a 802.11b 802.11e 802.11g 802.11h 802.11i 802.11n 802.16 802.16d 802.16e standards and or future versions and or derivatives and or long term evolution LTE of the above standards units and or devices which are part of the above networks one way and or two way radio communication systems cellular radio telephone communication systems a cellular telephone a wireless telephone a personal communication systems PCS device a PDA device which incorporates a wireless communication device a multiple input multiple output MIMO transceiver or device a single input multiple output SIMO transceiver or device a multiple input single output MISO transceiver or device or the like.

Some embodiments of the invention may be used in conjunction with one or more types of wireless communication signals and or systems for example radio frequency RF infra red IR frequency division multiplexing FDM orthogonal FDM OFDM time division multiplexing TDM time division multiple access TDMA extended TDMA E TDMA general packet radio service GPRS extended GPRS code division multiple access CDMA wideband CDMA WCDMA CDMA 2000 multi carrier modulation MDM discrete multi tone DMT Bluetooth RTM ZigBee TM or the like. Embodiments of the invention may be used in various other devices systems and or networks.

Although embodiments of the invention are not limited in this regard discussions utilizing terms such as for example processing computing calculating determining establishing analyzing checking or the like may refer to operation s and or process es of a computer a computing platform a computing system or other electronic computing device that manipulate and or transform data represented as physical e.g. electronic quantities within the computer s registers and or memories into other data similarly represented as physical quantities within the computer s registers and or memories or other information storage medium that may store instructions to perform operations and or processes.

Although embodiments of the invention are not limited in this regard the terms plurality and a plurality as used herein may include for example multiple or two or more . The terms plurality or a plurality may be used throughout the specification to describe two or more components devices elements units parameters or the like. For example a plurality of stations may include two or more stations.

Although portions of the discussion herein may relate for demonstrative purposes to wired links and or wired communications embodiments of the invention are not limited in this regard and may include one or more wired links may utilize one or more components of wireless communication may utilize one or more methods or protocols of wireless communication or the like. Some embodiments of the invention may utilize wired communication and or wireless communication.

Although embodiments of the invention are not limited in this regard the term UDP as used herein may include for example a User Datagram Protocol which may be used in addition to or instead of TCP IP. For example UDP communication may include wireless or wired UDP communication UDP communication over the Internet or over a global communication network UDP web cast communication e.g. using the World Wide Web UDP communication utilizing InfiniBand UDP communication utilizing Ethernet UDP communication utilizing iWarp UDP communication utilizing network adaptors with OS bypass capabilities communications using kernel UDP socket s e.g. in addition to or instead of using kernel TCP IP sockets and or other types of UDP communication. In some embodiments for example UDP communication may be used by or in conjunction with streaming audio streaming video streaming audio video other streaming media applications online games voice over IP VoIP video conferencing applications utilizing Trivial File Transfer Protocol TFTP applications in which dropped packets are not re transmitted applications in which erroneous packets are not re transmitted applications utilizing transmission and or reception of short messages or datagrams applications utilizing time sensitive datagram transmissions applications that do not require checking whether packets actually arrived state less communication applications applications responding to relatively small size queries from a relatively large number of clients broadcast applications or communication UDP applications or communication multicast applications or communication web cast applications or communication non unicast applications or communications domain name server DNS applications or the like. In some embodiments UDP may be used in conjunction with reliable delivery of information for example utilizing an application based packet sequence checking utilizing an application based error notification a packet ordering mechanism Infiniband reliable send receive or other reliable Infinband transport mechanism or other mechanisms. In some embodiments UDP may be used in conjunction with Infiniband and or iWarp infrastructure with Infiniband and or iWarp components and or using other high speed interconnect infrastructure or components

Although embodiments of the invention are not limited in this regard the term TCP UDP IP stack as used herein may include for example a stack implemented completely or partially using TCP UDP IP a stack implemented completely or partially using UDP a UDP over IP stack a TCP IP stack able to handle UDP communication using the TCP IP suite of protocols a TCP UDP IP stack a UDP IP stack an OS kernel based stack or mechanism able to handle UDP communication and or other suitable implementations.

Although embodiments of the invention are not limited in this regard the term UDP operation as used herein may include for example a UDP related operation an operation of a UDP process an operation of a UDP transmission process an operation of a UDP reception process an IP UDP operation a TCP IP UDP operation or other one or more operations associated with UDP communication.

Although some portions of the discussion herein may relate for demonstrative purposes to a fast or high speed interconnect infrastructure to a fast or high speed interconnect component or adapter with OS bypass capabilities to a fast or high speed interconnect card or Network Interface Card NIC with OS bypass capabilities or to a to a fast or high speed interconnect infrastructure or fabric embodiments of the invention are not limited in this regard and may be used in conjunction with other infrastructures fabrics components adapters host channel adapters cards or NICs which may or may not necessarily be fast or high speed or with OS bypass capabilities. For example some embodiments of the invention may be utilized in conjunction with InfiniBand IB infrastructures fabrics components adapters host channel adapters cards or NICs with Ethernet infrastructures fabrics components adapters host channel adapters cards or NICs with gigabit Ethernet GEth infrastructures fabrics components adapters host channel adapters cards or NICs with infrastructures fabrics components adapters host channel adapters cards or NICs that have OS with infrastructures fabrics components adapters host channel adapters cards or NICs that allow a user mode application to directly access such hardware and bypassing a call to the operating system namely with OS bypass capabilities with infrastructures fabrics components adapters host channel adapters cards or NICs that have OS bypass capabilities with infrastructures fabrics components adapters host channel adapters cards or NICs that are connectionless and or stateless and or other suitable hardware.

In accordance with some embodiments of the invention a UDP communication operation may be performed for example by a user mode application that may directly access a communication adapter thereby bypassing the OS kernel and or the kernel TCP UDP IP stack and or OS device driver s and utilizing instead a user mode API or a standard IP based API or a connectionless API.

In some embodiments for example a UDP communication server may include a hardware adapter or card or NIC having OS bypass capabilities and or allowing direct access from a user space application. The user space application may utilize a user space API for example implemented as a library instead of using the OS kernel or a device driver thereof or the kernel TCP UDP IP stack in order to directly access the OS bypass capable adapter and using its native semantics. Similarly a UDP communication listening station may utilize UDP communications bypassing its OS kernel and or device driver thereof and or the kernel TCP USP IP for example using a user space API able to directly access an OS bypass capable adapter and using its native semantics. In some embodiments thus a UDP operation e.g. transmitting or receiving a UDP packet may be performed substantially exclusive in user space externally to the OS kernel bypassing the OS kernel substantially without utilizing the kernel TCP UDP IP stack substantially without utilizing device driver s utilizing a standard API using an IP based or other API and utilizing a direct and non kernel access from the user space application to the hardware communication adapter or vice versa.

Processor may include for example a central processing unit CPU a digital signal processor DSP a microprocessor a host processor a controller a plurality of processors or controllers a chip a microchip one or more circuits circuitry a logic unit an integrated circuit IC an application specific IC ASIC or any other suitable multi purpose or specific processor or controller. Processor may for example execute one or more software applications and may process signals and or data transmitted and or received by device .

Input unit may include for example a keyboard a keypad a mouse a touch pad a stylus a microphone or other suitable pointing device or input device. Output unit may include for example a cathode ray tube CRT monitor or display unit a liquid crystal display LCD monitor or display unit a screen a monitor a speaker or other suitable display unit or output device.

Memory unit may include for example a random access memory RAM a read only memory ROM a dynamic RAM DRAM a synchronous DRAM SD RAM a flash memory a volatile memory a non volatile memory a cache memory a buffer a short term memory unit a long term memory unit or other suitable memory units or storage units. Storage unit may include for example a hard disk drive a floppy disk drive a compact disk CD drive a CD ROM drive a digital versatile disk DVD drive or other suitable removable or non removable storage units. Memory unit and or storage unit may for example store data processed by device .

Communication unit may include for example a wired or wireless network interface card NIC a remote direct memory access RDMA device e.g. InfiniBand a wired or wireless modem a wired or wireless receiver and or transmitter a wired or wireless transmitter receiver and or transceiver a radio frequency RF communication unit or other units able to transmit and or receive signals blocks frames transmission streams packets messages and or data. Communication unit may optionally include or may optionally be associated with for example one or more antennas e.g. a dipole antenna a monopole antenna an omni directional antenna an end fed antenna a circularly polarized antenna a micro strip antenna a diversity antenna or the like.

Device may further include an operating system OS for example Microsoft RTM Windows RTM Unix RTM Linux RTM Sun RTM Solaris RTM Apple RTM Mac OS RTM or the like. The OS may include multiple operating modes for example a kernel mode and a user mode .

The kernel mode may directly access and interact with one or more components of device . The kernel mode may include a TCP UDP IP stack e.g. having multiple layers for example an application layer a transport layer a network layer a data link layer and a physical layer. The TCP UDP IP stack may be utilized by software applications running in the user mode through one or more sockets for example sockets which may be created added destroyed deleted modified and or controlled using an application programming interface API of the kernel operating mode of OS .

In some embodiments device may allow communication operations to be performed utilizing one or more high speed interconnect components or infrastructure for example an InfiniBand IB communication fabric or switch fabric an EtherFabric interconnect or protocol or the like. In some embodiments one or more components modules or drivers may be used by the OS kernel to perform UDP operations over an InfiniBand infrastructure over an Ethernet hardware or port or the like. In some embodiments for example an IP over InfiniBand module may be able to interact with an InfiniBand host channel adapter HCA . Additionally or alternatively for example a network driver interface specification NDIS driver for example a NIDS IP over InfiniBand module may be able to communicate with a gigabit Ethernet GEth hardware or port .

The user mode of OS may allow a user of device to run one or more software applications for example utilizing an interface provided by the kernel mode in order to indirectly access one or more components of device . In some embodiments for example a UDP application may be executed by processor in user mode . The UDP application may be or may include for example a software application which may perform a UDP operation. For example the UDP application may attempt to create a UDP socket e.g. by attempting to add a UDP membership to sockets .

In some embodiments a UDP protocol handler may monitor intercept and or handle UDP operations of the UDP application . For example the UDP protocol handler may handle the UDP operation e.g. directly utilizing or accessing high speed interconnect components or infrastructure or communication unit instead of utilizing the kernel mode TCP UDP IP stack . The UDP protocol handler may run in user mode may be executed or may reside in a user space of user mode may not be a part of the kernel mode may be external to the kernel mode may be implemented as a non kernel extension library or may be otherwise implemented externally to the kernel mode .

The UDP protocol handler may listen to or may otherwise monitor UDP operations of UDP application . For example the UDP protocol handler may listen to or monitor interactions or communications from the UDP application to one or more of the sockets the API and or the TCP UDP IP stack . In some embodiments for example the UDP protocol handler may listen to or may otherwise monitor an attempt or operation of the UDP application to create or add a UDP socket an attempt or operation of the UDP application to add or create a UDP membership to sockets or other attempts or operations of the UDP application to otherwise create delete add destroy control and or modify a UDP socket or a UDP process.

In some embodiments the UDP protocol handler may be or may include for example a layered service provider LSP to replace kernel operations handling UDP operations and or UDP related calls to the TCP UDP IP stack and or to replace kernel operations handling creation destruction addition deletion control and or modification of UDP related sockets . For example when the UDP application adds or attempts to add a UDP membership to sockets the UDP protocol handler may intercept the socket calls e.g. send receive or the like that are made by the UDP application to the sockets . The UDP protocol handler may then directly handle and fulfill the socket calls for example substantially without using components of the kernel mode e.g. without using the kernel TCP UDP IP stack and or the kernel API utilizing instead a native or proprietary API to perform a kernel bypass of the UDP operation and optionally by directly accessing directly utilizing or directly interacting with one or more high speed interconnect components or infrastructure.

In some embodiments the UDP protocol handler may optionally include multiple modules or sub units. For example the extension library may include a listener interceptor module able to monitor and intercept attempts or operations of the UDP application to create destroy add delete control or modify a UDP kernel socket or a UDP related kernel socket. The UDP protocol handler may further include a bypass handler module able to handle the intercepted UDP related attempts or operations e.g. by utilizing a native InfiniBand API.

In some embodiments for example the bypass handler module may include one or more sub modules specifically tailored to efficiently perform UDP input output I O operations utilizing the high speed infrastructure. In some embodiments the bypass handler module of UDP protocol handler may directly access and or may directly interact with the InfiniBand HCA e.g. externally to the kernel mode components for example without utilizing the OS s network interface e.g. the IP over IB module of the kernel mode . In some embodiments the bypass handler module of UDP protocol handler may directly access and or may directly interact with the GEth hardware e.g. externally to the kernel mode components for example without utilizing the OS s network interface e.g. the NDIS IP over IB driver of kernel mode . In some embodiments UDP protocol handler may implement the required bypass operations in user mode space e.g. in user space and may utilize native semantics and or parameters and or operations of the high speed interconnect infrastructure e.g. of InfiniBand of GEth or the like . This may allow for example UDP communication packets or data to be transferred directly between the InfiniBand HCA or the GEth hardware and the UDP application e.g. bypassing the components of the kernel e.g. bypassing the TCP UDP IP stack the kernel sockets the kernel API or the like .

In some embodiments for example the UDP application may listen to UDP communication data and may make socket listen calls to the UDP socket address family. The calls may be intercepted by the UDP protocol handler which may implement the underlying operations in user space for example utilizing native InfiniBand or GEth API s and or semantics. This may allow for example the UDP packets to be sent and received directly to or from the InfiniBand HCA or the GEth hardware thereby bypassing the kernel and the TCP UDP IP stack .

In some embodiments the UDP application may utilize multiple network interfaces for example the InfiniBand HCA and the GEth hardware and or other ports or cards. The UDP protocol handler may be configured to directly handle UDP communications associated with multiple network interfaces e.g. serially in parallel substantially simultaneously or the like. In one embodiment substantially all UDP communication operations of the UDP application may be exclusively handled by the UDP protocol handler and not by the kernel components e.g. without using the kernel TCP UDP IP stack the kernel sockets the kernel API or the like. In another embodiment some of the UDP communication operations of the UDP application may be exclusively handled by the UDP protocol handler whereas other UDP operations of the UDP application may be handled by kernel components e.g. by the TCP UDP TP stack the kernel sockets the kernel API or the like .

For example in some embodiments a hybrid UDP application may listen to UDP communications incoming from the listener of InfiniBand HCA by using its VERBS API or other API or similar alternative network device such as Ethernet NIC or iWarp NIC. If the data is received from the listener of InfiniBand HCA or alike then the UDP protocol handler may intercept the socket call and may perform the underlying operations utilizing native RDMA semantics for example InfiniBand native semantics. In contrast if the data is received from the Ethernet NIC the UDP protocol handler may pass the socket call to the kernel API responsible for handling UDP operations. Also in contrast some of the UDP data may be received from the TCP UDP IP kernel socket API while some of the UDP data may be received by the UDP protocol handler from the user mode listener of for example the InfiniBand HCA . Thus in some embodiments a single e.g. hybrid UDP application may listen on multiple network components e.g. the InfiniBand HCA the GEth port an Ethernet NIC or the like and multiple user and kernel modes without requiring configuration changes to accommodate the hybrid environment.

In some embodiments the UDP protocol handler may be implemented using for example a library extension a library module or component a non library component or module a shared object a non shared object a dynamic link library DLL a non DLL such as static library or the like. For example in some embodiments listener interceptor module and or bypass handler module need not be implemented using an extension library and may be implemented for example as a code block included or embedded within UDP application as a plug in or portable code associated with UDP application as a dynamically loaded library e.g. which may be dynamically loaded using an OS environmental variable or parameter or an OS service provider or OS loader provider for example LD PRELOAD or pre registered service provider as a compile able or link able code block or object or the like.

Some embodiments of the invention may allow for example a substantially complete kernel bypass for UDP operations lower CPU utilization e.g. of processor decreased consumption of processing power processing time or processing resources reduced latency increased packets per second PPS rates reduced overhead of the TCP UDP IP stack elimination of context switches reduction of CPU interrupts e.g. utilizing an implementation in user space in the context of the UDP application thereby allowing a UDP communication server or client to generate or absorb a greater number of UDP messages elimination of kernel buffer copies for example such that data may flow from the InfiniBand HCA or the GEth hardware substantially directly to a UDP application buffer in user space and without intermediate kernel I O buffers or kernel memory buffers elimination of CPU interrupts for newly received UDP packets elimination of queue congestion problems associated with TCP UDP IP stack usage reduced memory consumption elimination of memory starvation due to elimination of kernel buffer copies of UDP data reduced memory cache miss events for example due to elimination of context switches or the like. Some embodiments of the invention may provide additional and or other benefits or advantages.

As indicated at block the method may optionally include for example intercepting an operation of a UDP application e.g. sent from the UDP application to the OS kernel.

As indicated at block the method may optionally include for example checking whether the intercepted operation is or includes a UDP operation.

As indicated by arrow if the intercepted operation is not a UDP operation or specific UDP operation that was pre defined as non intercepted then the method may optionally include as indicated at block transferring the intercepted operation to the OS kernel for execution by the OS kernel.

In contrast as indicated by arrow if the intercepted operation is a UDP operation then the method may optionally include as indicated at block performing the UDP operation externally to the OS kernel e.g. utilizing native semantics of a high speed interconnect component or infrastructure such as InfiniBand API.

Although the method of may be used for demonstrative purposes in conjunction with processing of UDP sending operations similar methods may be used in conjunction with UDP listening operations. For example in some embodiments a UDP listening operation may be intercepted and may be replaced or bypassed by performing the UDP operation externally to the OS kernel e.g. utilizing native semantics of a high speed interconnect component or infrastructure such as InfiniBand API.

Although relates for demonstrative purposes to UDP transmission similar methods may be used in accordance with embodiments of the invention in conjunction with UDP reception or UDP listening. Some embodiments of the invention may utilize UDP transmission and or UDP reception which may for example bypass the OS kernel bypass the kernel TCP UDP IP stack bypass the kernel sockets allow direct e.g. non kernel or substantially non kernel communication between the user mode application and a network adapter having OS bypass capabilities e.g. InfiniBand iWarp or the like and or may utilize native semantics of the network adapter having OS bypass capabilities. Accordingly portions of the discussion herein that may relate for demonstrative purposes to UDP transmission may be used in accordance with embodiments of the invention also in conjunction with UDP reception or UDP listening.

The UDP socket manager may include for example a socket switch able to intercept application level calls to socket API. The UDP socket manager may detect relevant UDP calls to be routed or switched to the bypass handler e.g. the bypass handler of for example the bypass handler may utilize the fast interconnect API to handle such UDP calls. The UDP socket manager may detect non relevant calls and may route them for kernel processing may drop them or may perform other type of pre defined handling.

The fast interconnect native API may include for example RDMA communication manager CM API which may be a user mode native API able to perform the fast interconnect I O operations.

The fast interconnect native API with OS bypass capabilities may include for example RDMA communication manager CM API which may be a user mode native API able to perform the fast interconnect I O operations.

The fast interconnect channels may include for example the fast interconnect hardware communication channels that correspond to the user application sockets. For example a fast interconnect channel per socket or per process that has one or more sockets may be used.

In some embodiments at startup the library may establish a handle to the fast interconnect hardware and may perform initialization operations and resource allocation per process when loaded. When a UDP socket is created by a user mode application the creation is intercepted by the UDP socket manager and a protocol handler context is allocated corresponding to the created socket. The context may include hardware and or software resources required for subsequent I O operations using this socket which are routed to the fast interconnect hardware for example an InfiniBand channel queue pair QP and a completion object or completion queue CQ . Additionally I O memory buffers may be allocated and posted for the I O operations.

Although portions of the discussion herein may relate for demonstrative purposes to protocol handler context per socket or to fast interconnect channel per socket embodiments of the invention are not limited in this regard and may be used for example in conjunction with protocol handler context per process channel per process or other suitable implementations.

In some embodiments when an IP membership registration is performed by the user mode application the operation may be mapped to the fast interconnect hardware UDP address. The mapping may include for example registration of the local fast interconnect port towards the fast interconnect fabric and attachment of the fast interconnect s channel to the created group. In some embodiments the mapping of the IP address to the fast interconnect hardware UDP address may be substantially similar to the mapping used with the fast interconnect OS network interface mapping for example the IP over InfiniBand network interface. Accordingly each one of the communication sides sender or receiver may be using or non using the library . Furthermore one of the communication sides may reside outside the fast interconnect fabric for example an Ethernet fabric and may communicate with a server residing on the fast interconnect fabric using the UDP offload library .

Upon substantially any socket operation for example send recv select or the like where the socket is mapped to a UDP offload library socket the corresponding context is selected in order to map the socket to the fast interconnect communication channel per this socket for example QP may map the socket for InfiniBand.

With regard to a receive operation the UDP packet may be routed to the pre joined fast interconnect port and then routed internally by the local fast interconnect hardware for example from the InfiniBand HCA to the attached communication channel QP. The communication channel QP may be associated with a user application receive buffer which may absorb the incoming packet. The application may receive the incoming packet using a socket receive call which may be mapped by the offload library directly to the fast interconnect hardware namely communication channel receive buffer. The receive operation may thus be fulfilled substantially without direct OS intervention.

With regard to a transmit operation the UDP message may be sent using any send operation call which may be initiated in the user mode application. The offload library may intercept the UDP send operation by mapping of the user application socket to its UDP socket context. The offload library may then build an IP packet for example a standard IP socket in accordance with the Internet Engineering Task Force IETF standard containing the user application data. The offload library may use the fast interconnect communication channel QP associated with the user application socket for routing the packet directly to the local fast interconnect hardware for example the InfiniBand HCA . The send operation may thus be fulfilled substantially without direct OS intervention.

In some embodiments using the fast interconnect s completion queue CQ the offload library may allow mapping of multiple user application socket operations completion notifications to a single hardware queue. This may allow the mapping of socket notifications multiplexing operations for example select call to a single fast interconnect shared completion queue. This may be performed for example by associating the communication channels corresponding to the multiplexed sockets operations with this single fast interconnect completion queue.

In some embodiments upon the user application s UDP socket close operation the corresponding offload library socket context is released with its registered fast interconnect resources namely the communication channel QP and its completion queue CQ. Furthermore the communication channel may be de attached from the local fast interconnect hardware the InfiniBand HCA and the fast interconnect s port operations may be de registered.

Although portions of the discussion herein may relate for demonstrative purposes to bypassing of the OS kernel or components thereof or the kernel TCP UDP IP stack embodiments of the invention are not limited in this regard and may include for example a substantially complete bypassing a partial bypassing a significant bypassing a selective bypassing a bypassing of one or more components or modules or the like.

Some embodiments of the invention may be implemented by software by hardware or by any combination of software and or hardware as may be suitable for specific applications or in accordance with specific design requirements. Embodiments of the invention may include units and or sub units which may be separate of each other or combined together in whole or in part and may be implemented using specific multi purpose or general processors or controllers or devices as are known in the art. Some embodiments of the invention may include buffers registers stacks storage units and or memory units for temporary or long term storage of data or in order to facilitate the operation of a specific embodiment.

Some embodiments of the invention may be implemented for example using a machine readable medium or article which may store an instruction or a set of instructions that if executed by a machine for example by device of by processor of or by other suitable machines cause the machine to perform a method and or operations in accordance with embodiments of the invention. Such machine may include for example any suitable processing platform computing platform computing device processing device computing system processing system computer processor or the like and may be implemented using any suitable combination of hardware and or software. The machine readable medium or article may include for example any suitable type of memory unit e.g. memory unit or storage unit memory device memory article memory medium storage device storage article storage medium and or storage unit for example memory removable or non removable media erasable or non erasable media writeable or re writeable media digital or analog media hard disk floppy disk Compact Disk Read Only Memory CD ROM Compact Disk Recordable CD R Compact Disk Re Writeable CD RW optical disk magnetic media various types of Digital Versatile Disks DVDs a tape a cassette or the like. The instructions may include any suitable type of code for example source code compiled code interpreted code executable code static code dynamic code or the like and may be implemented using any suitable high level low level object oriented visual compiled and or interpreted programming language e.g. C C Java BASIC Pascal Fortran Cobol assembly language machine code or the like.

While certain features of the invention have been illustrated and described herein many modifications substitutions changes and equivalents may occur to those skilled in the art. It is therefore to be understood that the appended claims are intended to cover all such modifications and changes as fall within the true spirit of the invention.

