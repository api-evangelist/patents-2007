---

title: Credit data processing system for controlling electronic trading based on credit arrangements
abstract: A credit data processing system for controlling trades in an electronic trading system according to credit arrangements, comprising a computer-readable storage medium, an interface to an electronic trading system and a credit data processor. The computer-readable storage medium stores information representing the credit relationship network, including a plurality of credit entities in the network and a plurality of credit relationships existing between at least some of those credit entities. The system uses preferred counterparty rankings provided by the participating credit entities to determine and select the optimal credit paths to use for booking multiple-legged trades between credit entities even though the credit entities may not have a direct credit relationship. The system then checks each leg of the selected optimal credit path to verify that, taking into account the current net open positions on that leg, executing the trade required on that leg to carry out the proposed deal will not cause a credit limit associated with that leg to be exceeded. If the credit limit of any leg in the selected optimal credit path is exceeded, then the system will repeatedly try to find viable credit path based on the preferences specified by the credit entities involved in the trade, until a viable credit path is found or it is determined that no credit path that can accommodate the proposed deal without exceeding a credit limit currently exists.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07991683&OS=07991683&RS=07991683
owner: FX Alliance, LLC
number: 07991683
owner_city: New York
owner_country: US
publication_date: 20070411
---
This application is related to and claims priority under 35 U.S.C. 119 to provisional application Nos. 60 791 135 filed on Apr. 11 2006 and 60 801 749 filed on May 19 2006 which are both incorporated into this application in their entirety by this reference.

The present invention relates generally to trading foreign exchange instruments over a data communications network using an electronic trading system. More particularly the invention pertains to systems and methods for checking authorizing monitoring and controlling credit arrangements between counterparties trading instruments on the electronic trading system.

U.S. Pat. Nos. 7 130 789 and 7 184 984 disclose a system for facilitating multiple hop trades between two trading agents in a network of credit relationships where the two agents initiating the trade do not have a direct credit relationship between them. The multi hop trades which are realized through the use of credit relationships with intermediate credit bridging agents are restricted according to credit limits associated with the intermediate credit relationships. For determining the actual flow of credit to complete a multi hop trade a central computer uses a minimum cost flow algorithm where the cost to be minimized is a function of the actual cost to execute the trade and other factors such as projected settlement costs flow balancing heuristics and a randomizing component. Ahuja R. K. Magnanti T. L. and Orlin J. B. Printice Hall Inc. 1993 U.S.A. at Chapter 9 contains examples and descriptions of such minimum cost flow algorithms.

There are significant disadvantages associated with allowing a central computer system to determine credit flows for multiple back to back trades according to a minimum cost flow algorithm. One disadvantage is that minimum cost flow algorithms rely too much cost and not enough on other significant business considerations such as maintaining important long standing and mutually beneficial business relationships with certain trading counterparties. Trading entities often prefer to use these business relationships and deal with certain counterparties despite the fact that doing so may require paying slightly higher or even significantly higher fees. Additionally for business reasons having nothing to do with cost trading entities frequently need or want to temporarily or permanently avoid using certain counterparties. It has been found that conventional trading systems that rely exclusively on minimum cost flow algorithms to determine the flow of credit which in turn determines which counterparties will be involved in a proposed deal do not give trading entities the control they need in order to properly manage these concerns.

Accordingly there is considerable need in the electronic trading business for a system that permits the trading entities to determine the flow of credit in a credit relationship network and therefore the flow of assets based on the counterparty preferences provided by the credit entities that are making the trades. It would be even more desirable for this system to be capable of successively falling back to less preferred counterparty preferences when the most preferred counterparties cannot accommodate a proposed trade.

The present invention addresses the above described needs as well as other disadvantages associated with conventional credit checking systems for electronic trading platforms by providing a credit data processing system for controlling trade executions carried out on an electronic trading system based on existing credit arrangements. In general a credit data processing system according to the present invention comprises a computer readable storage medium an interface to an electronic trading system and a credit data processor. The computer readable storage medium stores information representing the credit relationship network including a plurality of credit entities in the network and a plurality of credit relationships existing between at least some of those credit entities. Each credit relationship in the network comprises at least a credit limit a preferred counterparty ranking and a net open position for the credit relationship. The credit data processor is configured to receive from the electronic trading system via the interface a request to confirm sufficient credit arrangements to permit processing of a matched pair of orders. Typically the matched pair of orders includes a buy order received from a computer operated by a buyer credit entity in the credit relationship network a sell order received from a computer operated by a seller credit entity in the credit relationship network and an order amount. The credit data processor determines based on the information stored in the computer readable storage medium a set of potential credit paths for the matched pair of orders each potential credit path comprising a route through the credit relationship network that directly or indirectly links the buyer credit entity to the seller credit entity each potential credit path comprising one or more credit legs corresponding respectively to one or more credit relationships in the route. Using one or more preferred counterparty rankings retrieved from the computer readable storage medium to identify the appropriate credit legs the credit data processor selects an optimal credit path from the set of potential credit paths for the flow of credit.

After selecting an optimal credit path the credit data processor retrieves from the computer readable storage medium the credit limit and net open position associated with each leg of the selected optimal credit path and determines whether the sum of the order amount and the net open position on any credit leg in the selected optimal credit path exceeds the credit limit for that any credit leg thereby creating a credit limit exception. If there are no credit limit exceptions then the credit data processor sends a credit confirmation notice to the electronic trading system. But if there is a credit limit exception the credit data processor deletes from the set of potential credit paths the selected optimal credit path and every other potential credit path that encompasses the credit leg that caused the exception. Then the path selection and credit limit exception testing steps are repeated as many times as required until the credit confirmation notice is sent or the set of potential credit paths is empty.

The invention allows members of a credit relationship network to make deals that result in trades with other members of the network even though no credit arrangements exist between the two members who initially requested the deal. These deals are accomplished by carrying out a series of back to back deals using credit intermediaries e.g. prime brokers and broker dealers who are willing to extend credit to other members of the network. For a single proposed deal therefore it is possible that the flow of credit as well as the flow of assets required to execute the deal must successively pass through one two several or even more credit intermediaries.

Given that some members of the credit relationship network may have credit arrangements with multiple credit intermediaries there may be and usually are multiple credit paths along which the credit and traded instruments may flow in order to execute a proposed deal. Unlike conventional and prior art credit processing systems however the present invention gives members of the credit relationship network more control over the selection of the credit paths used for multi legged deals by permitting the members to specify and rank preferred counterparties and then use those preferred counterparty rankings to determine and select the optimal credit paths. Therefore the credit paths used by the system to carry out a proposed deal are selected based on the counterparty preferences configured by the entities involved in the proposed deal rather than for example a minimum cost algorithm which could be at least from the point of view of the counterparties involved in the deal a far more abstract and possibly far less important consideration.

For example credit entities participating in a credit relationship network operated according to the principles of present invention will typically provide via a graphical user interface coupled to a credit administration module a list of preferred counterparties the system should use when determining potential credit paths for those credit entities as well as a ranking for each of the counterparties on the list. Thus credit entity A might specify for example that when there is a direct trade to be done it prefers to try arranging the deal with credit entities B C D and E in that particular order until the deal is successful and not at all with credit entity F. In other words credit entity B is credit entity A s most preferred counterparty credit entity C is credit entity A s second most preferred counterparty credit entity C is credit entity A s third most preferred counterparty and so on. Computer systems configured to operate according to the present invention will receive and store this preferred counterparty ranking information and then when it becomes necessary later to determine an optimal credit path for orders submitted by credit entity A the system will first select and try to use the credit path that has credit entity A trading with credit entity B. If and only if that credit path fails then the system will try to use the credit path that has credit entity A trading with credit entity C. If the credit path including credit entity C also fails then the system will try to use the credit path that has credit entity A trading with credit entity D and so on. However the system will not select or try to use the credit path that has credit entity A trading with credit entity F under any circumstances even if all of the other potential credit paths have been tried and failed because credit entity A has essentially blocked credit entity F as a potential trading partner.

When a potential credit path is selected the system checks each leg of that credit path to verify that taking into account the current open positions on that leg executing the intermediate trade required on that leg to carry out the proposed deal will not cause a credit limit associated with that leg to be exceeded. If the credit limit of any leg in the selected credit path is exceeded then the system will repeatedly try to find and credit check another credit path based on the preferred counterparty rankings specified by the entities involved in the trade until a valid credit path is found or the system determines that there are no credit paths that will satisfy the specified counterparty preferences and also accommodate the proposed deal without exceeding a specified credit limit.

A credit arrangement will be found to be sufficient when there exists one or more credit relationships in the credit relationship network that directly or indirectly links the buyer credit entity to the seller credit entity and each of the relationships provides a credit limit that is not less than the sum of the current net open position and the order amount for the proposed trade. Typically the request to confirm a sufficient credit arrangement will include one or more pieces of data pertaining to the matched pair of orders including without limitation a buyer credit entity identifier a seller credit entity identifier a buy currency a buy amount a sell currency a sell amount a buyer order identifier a seller order identifier a deal type and a value date. In some case the request will include all of these pieces of data.

In response to receiving the credit confirmation notice from the credit data processor the electronic trading system retrieves the selected optimal credit path from the computer readable storage medium and executes a series of trades involving all of the credit entities in the selected optimal credit path. The credit data processor will then calculate based on the order amount and the net open positions for the credit legs in the selected optimal credit path a plurality of new net open positions for the credit legs used to execute the series of trades and store the plurality of new net open positions in the computer readable storage medium. In some cases one of the parties who submitted one of the orders in the matched pair of orders it could be the buyer credit entity or the seller credit entity has made the order contingent on the submitter s acceptance of an offer to deal on the order. In these cases embodiments of the invention may be configured so that the series of trades will not be executed by the electronic trading system until after the electronic trading system sends an offer to deal to the provider trading system and receives from the provider trading system an acceptance responsive to the offer to deal.

If the credit data processor does not find any credit paths directly or indirectly linking the seller credit entity to the buyer credit entity the set of potential credit path is empty or does not find any paths having a sufficient amount of available credit due to the current net open positions on one or more credit legs of the path then the credit data processor will send a credit failure notice to the electronic trading system. Preferably the credit failure notice includes information that will allow the parties to determine the reason for the failure such as a credit failure type a credit failure party and an identifier for the orders for which the credit failed.

Credit data processing systems configured to operate according to the present invention may also include a plurality of connections to a respective plurality of computers operated by the plurality of credit entities and a credit administrator module configured to i receive from the plurality of credit entities via the plurality of connections credit data pertaining to the plurality of credit relationships ii generate the information representing the credit relationship network based at least in part on the credit data and iii store the information in the computer readable storage medium. The credit administrator module may also be configured to create the information based at least in part on credit data received from a centralized credit administrator. The connections between the credit entity computers and the credit administrator module may be established by using any conventional telecommunications technology including for example wired and or wireless wide area and local area networks the Internet virtual private networks etc.

A credit data processing system according to the present invention may be programmed using for example a procedural programming model an object oriented programming model or both. When a procedural model is used the information stored in the computer readable memory will typically comprise a database with a plurality of records each record being configured to hold a plurality of values associated with a credit relationship in the plurality of credit relationships including for example an identifier for the credit maker in the credit relationship an identifier for the credit taker an identifier for the credit account a credit relationship type identifier the credit limit the preferred counterparty ranking and the net open position. When the object oriented programming model is used the information may comprise for example a plurality of credit relationship objects each credit relationship object having a plurality of data members configured to hold the values associated with the credit relationship the values again including an identifier for the credit maker in the credit relationship an identifier for the credit taker an identifier for the credit account a credit relationship type identifier the credit limit the preferred counterparty ranking and the net open position.

In another aspect of the present invention there is provided a method of using a computer processor to control trade executions carried out on an electronic trading system based on existing credit arrangements. The method comprises 1 storing in a computer readable storage medium accessible to the computer processor information representing a credit relationship network the credit relationship network comprising a plurality of credit entities and a plurality of credit relationships between at least some of said credit entities each credit relationship comprising a credit limit a preferred counterparty ranking and a net open position 2 receiving from the electronic trading system a request to confirm a sufficient credit arrangement to permit processing of a matched pair of orders the matched pair of orders comprising a buy order received from a computer operated by a buyer credit entity in the credit relationship network a sell order received from a computer operated by a seller credit entity in the credit relationship network and an order amount and 3 operating the computer processor to a determine based on the information stored in the computer readable storage medium a set of potential credit paths for the matched pair of orders each potential credit path comprising a route through the credit relationship network that directly or indirectly links the buyer credit entity to the seller credit entity wherein each potential credit path comprises one or more credit legs corresponding respectively to one or more credit relationships in the route b select an optimal credit path from the set of potential credit paths by using one or more preferred counterparty rankings to select credit legs for the optimal credit path c if the sum of the order amount and the net open position on any credit leg in the selected optimal credit path exceeds the credit limit for that credit leg delete from the set of potential credit paths the selected optimal credit path and every other potential credit path that encompasses that credit leg otherwise to send a credit confirmation notice to the electronic trading system and d repeat steps b and c as many times as required until the credit confirmation notice is sent or the set of potential credit paths is empty.

With reference now to the figures a detailed discussion of exemplary embodiments of the invention will now be presented. Notably the invention may be implemented using software hardware firmware or any combination thereof as would be apparent to those of skill in the art upon reading this disclosure.

For the purpose of simplifying the discussion that follows has been drawn such that the computer systems operated by the buyer and seller credit entities appear to be separate and distinct in function from the computer systems operated by the intermediate credit entities. It should be kept in mind however that this is not necessarily true in most cases. In fact it should be readily apparent from the discussion below that in most cases a party that serves as an intermediary credit entity for a proposed multi legged deal by definition also serves as a buyer credit entity a seller credit entity or both for his two legs for the same multi legged deal. Moreover it should also be understood from the discussion that follows that a party acting as an intermediary in one deal may serve as the ultimate buyer or seller in another deal.

Credit data processing system includes credit data processor computer readable storage medium and interface . Computer readable storage medium may comprise for example a local or remote fixed or removable permanent or temporary magnetic or optical memory storage area or device including without limitation one or more random access memory areas cache memory areas hard disk drives tapes DVDs CD ROMs floppy disks or memory cards. Computer readable storage medium stores credit relationship information which represents the details of a credit relationship network. An example of such a credit relationship network is shown in and described in more detail below with reference to . Included in the credit relationship information stored in computer readable storage medium are data structures records variables fields object oriented programming methods and the like which together represent in the computer system real world concepts associated with the credit relationships of the credit relationship network. Accordingly the credit relationship information stored in computer readable storage medium typically includes information representing things such as identification information for the participating credit entities and preferred counterparties dollar amounts for credit limits associated with credit relationships existing between the credit entities current net open positions for the credit relationships preferred counterparty rankings for the credit relationships and identifiers for counterparties that have been blocked by the credit entities. Typically all of this information will be initially set up and controlled by the credit entities or a central credit administrator by accessing and using a credit administrator module of credit data processor . As will be explained in more detail below computer readable storage medium also includes an area for storing one or more credit path tables which will be accessed by other components of the electronic trading platform to store and retrieve potential and optimal credit paths generated by credit data processor .

As shown in credit data processor includes credit administrator module credit checker position manager and credit path generator . Typically credit administrator module creates the credit relationships in the credit relationship network based on credit information supplied by participating credit entities a central credit administrator or both. Thus credit administrator is configured to receive from a credit entity and or central credit administrator data input comprising a variety of credit account information including for example preferred counterparties preferred counterparty rankings credit limits associated with those counterparties counterparties that should be blocked from trading with the credit entity and so on. Preferably credit administrator module collects this information via a plurality of network connections not shown in for simplicity between credit data processing system and the computers operated by a central administrator and or the plurality of credit entities participating in the credit relationship network such as buyer credit entity computer seller credit entity computer and intermediate credit entity computers A N . A variety of techniques for programming graphical user interfaces suitable for guiding human operators through the process of inputting the credit relationship data for use by credit administrator module are well known and understood in the computer industry. Once the credit relationship data is received credit administrator module converts the data to information e.g. populated databases programming objects and the like that can be easily manipulated and stored by a computer system and stores the converted information in computer readable storage medium .

Credit checker preferably comprises one or more software or hardware programs or processors programmed to execute one or more routines functions or object oriented programming methods to verify whether the sum of the proposed order amount for a proposed deal and the current net open position for a credit leg in a selected credit path for the proposed deal will exceed a specified credit limit for that credit leg. explained in more detail below contains one example of an algorithm credit checker may be programmed to execute in order to carry out its credit checking function according to the principles of the present invention.

Position manager maintains and updates an aggregate net open position for all currency positions for all credit relationships i.e. credit legs in the credit relationship network. In preferred embodiments net open positions for foreign exchange instruments are calculated as follows NOP MAX SUM all long currency positions ABS all short currency positions 

Thus if the net total for any currency is bought the value for net open position will be a positive value and if the net total for any currency is sold then the net open position will be a negative value.

In preferred embodiments the net open position is updated when 1 a matched order passes its credit check for a selected credit path and 2 the end of the settlement day for that matched order occurs. The end of settlement day is typically determined on a currency by currency basis and may be expressed for example in Greenwich Mean Time GMT . This means that all matched orders with a settlement value date of today will have their corresponding net open position updated today. Because matched orders for foreign exchange instruments have two currencies each matched order is processed twice once for each currency.

The conversion rates used for converting order amounts to the currency used by a credit entity to specify the credit limit are typically those taken from the midpoint of an indicative price for each currency as provided by a conventional foreign exchange rate feeder. Preferably the current net open position for a credit leg is calculated using the aggregated positions of all the users of a credit entity of all positions from both base and terms currencies across all value dates i.e. all active deals that are not yet settled . described in more detail below contains an example of the steps that may be performed by one embodiment of the present invention to calculate the net open position subsequent to a credit path credit leg limit checking operation.

Credit Path Generator comprises one or more software or hardware programs or processors programmed to determine the set of potential credit paths for a matched pair of orders and then to select the optimal credit path from the set of potential credit paths based on the preferred counterparty rankings provided by the credit entities that would be involved in the trades required to process the deal. which are described in greater detail below contain flow diagrams illustrating by way of example the steps credit path generator may be programmed to execute in order to determine and select optimal credit paths.

In preferred embodiments credit data processing system operates as a stand alone component that can be used with and by a variety of diverse electronic trading systems and applications that can benefit from invoking credit checks for proposed trades before those proposed trades are carried out. To this end it is preferable and more efficient to limit the number of external dependencies required for credit data processing system to function properly. Interface comprises a programmatic mechanism e.g. an application programming interface API comprising libraries of subroutines and functions object oriented programming class definitions and the like by which credit data processing system communicates with outside trading systems or applications such as electronic trading system . Using an object oriented programming model for example the interface may be defined to include methods that various components of the credit data processing system must respond to. An example of one such interface definition will be described in more detail below.

Electronic trading system typically includes an order management system and an order matching system . Order matching system matches orders received from the computer systems operated by buyer and seller credit entities participating in the credit relationship network e.g. buyer credit entity computer seller credit entity computer of based for example on currency order size and price and then having found a matched pair of orders submits a request to credit data processing system to confirm sufficient credit arrangements for the matched pair of orders. If credit data processing system returns a credit confirmation notice along with the details of the selected optimal credit path then matching system will cause order management system to carry out a series of trades using the credit entities identified in the returned credit path.

In some situations one of the orders in the matched pair of orders sent to credit processing system by electronic trading system is a quote submitted by a foreign exchange provider who has designated his quote as contingent. A contingent quote can be matched with an offer frequently referred to as an offer to deal submitted by another party but cannot be executed until the provider has had an opportunity to review and accept the offer to deal. Accordingly preferred embodiments of the present invention are configured so that upon receiving from credit processing system a credit confirmation notice and selected optimal path pertaining to a provider s contingent order electronic trading system will send an offer to deal to the computer system operated by that provider and then execute the series of trades using the selected optimal credit path only after the provider s computer system has responded to the offer to deal by returning a message indicating the provider s acceptance. In cases where the order submitted by the provider is not contingent electronic trading system is configured to execute the order automatically without sending an offer to deal or receiving a response thereto.

When the electronic trading system has received everything it needs to execute the matched pair of orders including the credit confirmation notice and credit path from credit processing system and if necessary an acceptance from the provider trading system for a contingent order it will typically send to credit processing system a request to commit the order amount for the trades. Upon receiving the commit request position manager will add the order amount to the current net open positions for every credit relationship i.e. every credit leg used for executing the series of trades. This step insures that the next time credit path generator selects a credit leg for a new credit path the net open position for that credit leg will be up to date.

Although the embodiment shown in shows credit data processing system and electronic trading system as physically separate components that are coupled together via an interface interface and a computer readable storage medium that resides with the credit data processing system it should be readily apparent from reading this disclosure that this particular physical arrangement may be modified without departing from the scope and spirit of the claimed invention. Therefore computer and or data communication systems wherein the credit data processing electronic trading interfacing and memory storage functions are carried out by fewer or more software programs or hardware devices but which perform substantially the same functions as those described herein are nevertheless consistent with and intended to fall within the scope of the invention as claimed.

A direct relationship is a credit relationship between two credit entities where neither party pays a brokerage fee to the other party. Direct relationships arise for example when a large party or organization comprises distinguishable subunits e.g. divisions departments groups or branches who for obvious reasons have between them an agreement or understanding that trades with each other will not be subject to brokerage fees. However direct relationships may also arise when the two parties are not legally related but have nevertheless entered into an agreement not to charge each other brokerage fees for other business reasons. Accordingly it is frequently the case that prime brokers have established direct relationships with other prime brokers user groups have established direct relationships with other user groups and customers e.g. corporations have established direct relationships with other customers prime brokers and or broker dealers. The parties who are members of a direct relationship are often referred to as peers. 

In as well as credit intermediary relationships are represented by dotted lines with an arrowhead at the end connected to the credit intermediary credit maker in the relationship. Thus as can be seen in PB which stands for prime broker is a credit intermediary credit maker and parent for C which stands for customer . Conversely C is a subordinate credit taker and child of PB. On the other hand direct relationships are represented in by solid lines that do not have arrowheads. Therefore for the exemplary credit relationship network shown in A A A A A and A there are eight direct relationships indicated by eight solid lines and nineteen credit intermediary relationships indicated by nineteen different arrowheads . The direct relationships for the example credit relationship network represented by the graph of are shown in Table 1 below 

The following table shows the credit intermediaries and subordinates for the nineteen credit intermediary relationships in the example credit relationship network represented by the graph of 

Notably two of the credit entities in the exemplary credit relationship network represented by A A A A A and A specifically credit entities C and UG do not have any credit relationships either direct or credit intermediary .

As discussed in more detail below and with reference to it may not be possible for the electronic trading system to carry out the two back to back trades required to use the credit path shown in because for instance executing one or both of the back to back trades would cause a credit limit exception on one or both of the two credit legs. In such a situation computer systems configured to operate according to the present invention would select another credit path based on the preferred counterparty rankings of the credit entities involved and try to use the second credit path to carry out the required trades. show a second potential credit path route in the credit relationship network which also links credit entity C to credit entity C. However this credit path has three credit legs and passes through credit entities PB and PB instead of two credit legs which pass through credit entity BD. To carry out a trade using this credit path PB would act as a credit intermediary to C in a first trade corresponding to the first credit leg PB and PB would act as peers in a direct trading relationship for a second trade corresponding to the second credit leg and PB would act as a credit intermediary to C in a third trade corresponding to the last credit leg of the selected credit path.

As shown in a family tree graph for the credit path represented by the graph of includes two levels of credit intermediaries. In this case BD would serve as both a credit intermediary to C and subordinate to PB while BD would serve as both a credit intermediary to C and subordinate to PB . In this arrangement PB would be considered to be a parent of BD as well as a grandparent of C while PB would be considered to be a parent of BD as well as a grandparent of C. As illustrated in the example path selection algorithm depicted in discussed in more detail below these parent and grandparent relationships may be used in embodiments of the present invention to determine and select optimal credit paths for a proposed deal when the set of potential credit paths contains only credit intermediary relationships.

In a typical scenario for an electronic trading system a matching system or engine such as matching system in will receive a new order from a computer system operated by a buyer credit entity or a seller credit entity such as for example buyer credit entity computer or seller credit entity computer . The offer typically comprises an offer or a bid to trade a certain quantity of one currency for another. Usually the incoming order is time stamped and then compared to one or more unmatched orders previously received by the matching system. The comparison is performed to determine if there exists a suitable match in respect to the new order s and the old order s terms including for example the currency to be traded the direction of the trade the rate and order amount. If a suitable match is not found then the matching system will save the new order to be compared with subsequently received orders. But if the new order can be suitably matched to an old order then the new order and the old order are linked by the matching system to form a matched pair of orders.

For purposes of the discussion which follows the newer order in the matched pair is referred to as the aggressor order while the older order in the matched pair that is the order that was waiting in the matching system for a suitable match the longest is referred to as the passive order. In addition the counterparty that submitted the aggressor order may be referred to as the aggressor counterparty and the counterparty who submitted the passive order may be referred to as the passive counterparty. Notably any passive order which may comprise either an order to sell or an order to buy was at some earlier point its lifespan an aggressor order which the matching system failed to match with an even older passive order.

Before the electronic trading system such as order management system in this case will be allowed to execute one or more trades required to process the matched pair of orders the matching system must receive a confirmation from the credit data processing system that sufficient credit arrangements i.e. credit lines exist in the credit relationship network to accommodate the trades. For example if the aggressor order was submitted by a credit entity that because of earlier executed but as yet unsettled trades has exhausted all of its credit with all of its preferred counterparties or simply does not have sufficient credit available on any credit path linking the aggressor credit entity to the passive credit entity then the trades that would have to be executed to fill the aggressor order should be rejected. Accordingly the matching system sends a request to the credit data processing system to confirm that sufficient credit arrangements exist to accommodate a deal between the credit entity that submitted the aggressor order and the credit entity that submitted the passive order.

A detailed discussion of the steps performed by a credit data processing system configured to operate according to one embodiment of the present invention is presented below with reference to . To aid understanding of the detailed discussion however a more general overview of the credit path selection and limit checking processes will be presented first.

When the credit data processor system receives a request to confirm sufficient credit arrangements from the electronic trading system it first determines the set of potential credit paths in the credit relationship network that exist between the owner of the aggressor order the aggressor counterparty and the owner of the passive order the passive counterparty which might be used to effect the trade. Initially the set of potential credit paths will be all of the credit paths that exist between the aggressor counterparty and the passive counterparty. If there is only one potential credit path that can be used to effect a trade between the aggressor counterparty and the passive counterparty and if effecting the trade using that one credit path will not cause any credit limit exceptions on any credit leg in the credit path then the credit data processing system will send to the electronic trading system a credit confirmation notice and the details for that single available credit path.

On the other hand if there are multiple potential credit paths that could be used to effect the trade as shown for example in discussed above then the credit data processor will run those multiple credit paths through a series of filters to select an optimal credit path based on the preferred counterparty rankings provided by the credit entities associated with the aggressor counterparty the passive counterparty and the intermediate counterparties associated with the multiple potential credit paths. If at any point during the filtering process there remains only one credit path in the set of potential credit paths as the result of a filter then that single credit path will be selected as the optimal credit path and no further filtering is required. Information about the selected optimal credit path will then be sent to a limit checking routine or object oriented programming method to determine whether any credit limits on any of the credit legs in the selected optimal credit path would be exceeded by any of the trades required to effect the overall trade.

If the credit limit check for the selected optimal credit path fails then the credit data processor will delete the failed credit path from the set of potential credit paths as well as every other credit path that contains the credit leg that failed. Having reduced the number of members in the set of potential credit paths in this fashion the credit data processor will then find in the reduced set the most optimal credit path remaining again based on the preferred counterparty rankings of the counterparties in each path and run the credit limit checking routine or method against that credit path. The credit data processor will continue to select and credit limit check credit paths in the set of potential credit paths until the credit limit check succeeds or every credit path in the set of potential credit paths has been eliminated or tried and failed. Thus the credit data processing system will return to the electronic trading system either a confirmation of sufficient credit along with the details for the selected optimal credit path or a credit failure notice optionally including details about the credit legs and or counterparties which caused the failure .

The optimal credit path in a set of multiple potential credit paths is determined according to the preferred counterparty rankings supplied by the aggressor and passive counterparties. In a preferred embodiment the preferred counterparty rankings for the aggressive counterparty are given priority over the preferred counterparty rankings of the passive counterparty and direct trades are given priority over trades involving credit intermediaries. Thus if there are multiple credit paths in the set of potential credit paths then the credit data processor will first reduce the set of potential credit paths so that it includes only the credit paths that use the aggressor counterparty s highest preferred counterparty. In other words the first step will be to remove from the set of potential credit paths all of the potential credit paths that do not pass through the aggressor counterparty s highest ranked preferred counterparty. Next if any of the remaining credit paths has a subsequent credit leg that represents a direct relationship then the set of potential credit paths will be reduced again so that it includes only those credit paths that have as its subsequent credit leg a credit leg that represents a direct relationship. If there are multiple credit paths available after taking into consideration the preferences of the entities on aggressive side of the direct trade the preferences of the entities on the passive side of the direct trade will be used. If however none of the credit paths remaining in the set of potential credit paths has a subsequent credit leg representing a direct relationship then the next credit intermediary selected for the optimal path will be the highest ranked preferred counterparty of the aggressor counterparty. If there are multiple credit paths available after selecting the highest ranked credit intermediary of the aggressor counterparty then the credit paths using the highest ranked preferred credit intermediary for the passive counterparty will be selected.

When an optimal credit path has been selected the credit data processor will next perform a credit limit check on the optimal credit path to determine whether there is sufficient credit available on every credit leg in the selected optimal path to permit every intermediate trade required to carry out the overall trade. The credit limit check on the selected optimal credit leg will fail if executing any one of the intermediate trades would cause a credit limit exception on the credit leg corresponding to that intermediate trade. A credit limit exception occurs if the sum of the current net open position for the credit leg and the amount of the order exceeds the credit limit the credit maker has specified for the credit taker on the credit leg.

As shown in at step the system first stores in a computer readable storage medium such as a hard drive information representing the details of a credit relationship network including credit entities credit relationships between and among at least some of the credit entities preferred counterparty rankings for the credit entities and net open positions associated with the credit relationships. Typically this step is carried out by a credit administrator module configured to receive and store credit data supplied by credit entities via a connection between the credit data processing system and the computers operated by those credit entities. Some of the credit data may also be supplied by a centralized credit administrator charged with setting up credit accounts on behalf of the credit entities participating in the credit relationship network. Some of the credit data stored in the storage medium particularly the credit data pertaining to current net open positions may be produced and periodically updated by a program or processor such as position manager in running on the credit data processing system configured to monitor manage and update this information. In response to receiving the credit data the system may be configured for example to create and store in the computer readable storage medium computer readable versions of relationship tables similar to Table 1 and Table 2 discussed above.

Next at step the system receives a request to confirm sufficient credit arrangements for processing a matched pair of orders. Based on the credit relationship information stored in the computer readable storage medium at step the system determines the set of credit paths i.e. routes existing in the credit relationship networks which might be used to effect a trade between the two parties responsible for submitting the orders in the matched pair of orders. For example if the credit relationship network comprises the credit entities and relationships shown in discussed above and the matched pair of orders comprises orders submitted by credit entities C and C then the system would automatically identify at least all of the potential credit paths shown in . The system may be configured to identify the members of the set of potential credit paths for example by retrieving from the storage medium computer readable version of relationship tables like Table 1 and Table 2 above.

If the set of potential credit paths does not contain at least one credit path as would be the case for example if the aggressor or passive order owner was C or UG in then the system would send to the calling program or system a credit failure notice steps and . Preferably the credit failure notice would contain sufficient failure details and or warnings so that the calling program and ultimately the parties or systems who invoked the calling programs will be able to tell why the order was rejected and if possible address the cause for the credit failure so that future orders will not be rejected for the same reason. On the other hand if the set of potential credit paths includes at least one credit path then the system calls a routine to select an optimal credit path from the set of potential credit paths using the preferred counterparty rankings specified by the credit entities involved to select the optimal credit path s credit legs step . which are discussed in more detail below contain flow diagrams illustrating by way of example steps such a routine may perform in order to carry out selecting an optimal credit path.

After an optimal credit path is selected from the set of potential credit paths the system next calls a routine to check for credit limit exceptions on the selected optimal credit path step . discussed in more detail below contains a flow diagram illustrating by way of example the steps such a routine may perform in order to carry out checking for credit limit exceptions on the selected optimal credit path. If the limit exception routine does not return a failure notice then every credit leg in selected optimal credit path has passed the credit limit check and a credit confirmation notice containing the details of the selected and verified optimal credit path will be sent to the calling program or system steps and . On the other hand if the limit exception routine produces a failure notice then the system will delete the selected optimal credit path from the set of potential credit paths along with every other potential credit path containing the credit leg that failed the credit limit check step .

Next processing returns again to step where the system will again check the set of potential credit paths to see if it contains at least one potential credit path. If not then the system will return a credit failure notice indicating that no credit paths capable of handling the order amount for the matched pair exists. But if the set of potential credit paths still contains at least one potential credit path then the routines for selecting and credit limit checking an optimal credit path will be performed for a second time. This overall process will repeat itself until either a credit confirmation is sent or every credit path in the set of potential credit paths has been tried and failed or otherwise eliminated because it contained a credit leg that failed a credit limit check associated with another failed potential credit path.

As previously stated preferred embodiments of the invention give priority to credit paths containing credit legs that represent direct relationships as these credit paths usually involve fewer credit intermediaries and fewer brokerage fees. Therefore at step the system determines whether any credit paths in the set of optimal credit paths contain a credit leg that represents a direct relationship. If so then the system calls a routine at step which is configured to find the optimal credit path among credit paths having one or more credit legs representing direct relationships. If not then the system calls a different routine at step configured to find the optimal credit path among credit paths having only credit legs representing credit intermediary relationships. Finally at step the optimal credit path selected by either one of the path selection routines called in steps and are stored in the computer readable storage medium.

If it is determined at step that neither end credit leg represents a direct relationship or at step that more than one credit path remains in the set of optimal credit paths then the system next finds in the set of optimal credit paths the aggressor credit entity s highest ranked counterparty and deletes from the set of optimal credit paths all credit paths that do not pass through that highest ranked counterparty steps and . If this deletion causes the set of optimal credit paths to be trimmed to only one credit path then once again control will pass to steps and where the single remaining credit path will be designated as the optimal credit path see step . Otherwise the system next finds in the set of optimal credit paths the passive credit entity s highest ranked counterparty and deletes from the set of optimal credit paths all credit paths that do not pass through that highest ranked counterparty steps and . If this deletion causes the set of optimal credit paths to be trimmed to only one credit path then once again control will pass to steps and where the single remaining credit path will be designated as the optimal credit path see step . But if there still remains more than one credit path in the set of optimal credit paths then the system will effectively move the aggressor and passive labels toward each other in all of the remaining credit paths up a level in their respective family trees so that they point to the previously used highest ranked counterparties step . Then the system will pass control back to step where the process starts all over again using the newly assigned aggressor and passive parties as a starting point. By moving the aggressor and passive labels to the previously used highest ranked counterparties the system effectively repeats the steps in the credit path selection process steps through while ignoring the previous two end credit legs.

Using these steps the system could determine for example that the optimal credit path for the matched pair of orders submitted by the aggressor credit entity and the passive credit entity comprises the path that passes from the aggressor credit entity to the aggressor credit entity s highest ranked parent then to the passive credit entity s fourth highest ranked parent and then to the passive credit entity. Thus it can be seen that using these particular steps in the particular order herein described would give priority to the preferred counterparty rankings expressed by the aggressor credit entity. However it is noted that the steps and processes described herein may easily be modified to give priority to the passive s credit entity s preferred counterparty rankings without departing from the spirit and scope of the claimed invention.

If a common parent is not found the system next determines whether aggressor s highest ranked parent happens to be a grandparent of the passive counterparty. The family tree diagram for such a credit path would look like the family tree diagram shown in discussed above. Accordingly at steps and the aggressor s highest ranked parent will be successively compared to the highest ranked parent of passive s highest ranked parent i.e. passive s highest ranked grandparent then to passive s second highest ranked grandparent then to passive s third highest ranked grandparent and so on until a common ancestor is found or until the passive counterparty has no more grandparents to compare. If one of passive s grandparents is found to be the same credit entity as aggressor s highest ranked parent then the three legged credit path passing through aggressor s highest ranked parent who happens to be a grandparent of the passive counterparty is selected as the optimal credit path step .

On the other hand if none of passive s grandparents are found to be the same credit entity as aggressor s highest ranked parent then control passes to step of by way of flow chart connector FC A whereupon the aggressor s highest ranked grandparent is successively compared to passive s first highest ranked parent followed by passive s second highest ranked parent followed by passive s third highest ranked parent and so on to see if they are the same credit entity steps and . If so then the three legged credit path passing through aggressor s highest ranked grandparent and passive s parent is designated as the optimal credit path step and details for the designated optimal credit path are returned to the calling program or system step . But if not then the highest ranked parent of aggressor s highest ranked parent i.e. aggressor s highest ranked grandparent is successively compared to the highest ranked parent of passive s first highest ranked parent i.e. passive s highest ranked grandparent passive s second highest ranked grandparent passive s third highest ranked grandparent and so on to determine whether aggressor s highest ranked grandparent and one of passive s grandparents are the same credit entity steps and . If they are the same then the four legged credit path passing through aggressor s highest ranked grandparent and passive s grandparent is designated as the optimal credit path step and the details of the designated optimal credit path are returned to the calling program or system step for further processing.

Finally at step if no common ancestors have been found after comparing all of passive s grandparents to aggressor s highest ranked grandparent operators of credit data processing systems according to the present invention may choose to return a credit path failure notice or alternatively proceed to comparing aggressor s grandparents to passive s great grandparents. Whether the system returns a credit path failure notice or continues looking for a common ancestor at this point is a matter of implementation choice. However both possibilities would fall within the scope and spirit of the present invention.

First the system calculates the net buy and sell positions respectively for each currency in the matched pair by adding the bought currency for the matched pair to the previous bought currency net position and subtracting the sold currency for the matched pair from previous sold currency net position step . Typically the previous bought currency net positions and the previous sold currency net positions were calculated and stored in memory contemporaneous with the previous credit authorization for the credit leg. Next at step for each single net currency position the system calculates a corresponding USD value or a corresponding EUR value according to the option selected by the credit maker in the credit administrator module based on a specified exchange rate. The system then sums all resulting long USD or EUR values to generate the long current usage net open position for that credit leg step . Then the short current usage net open position for that credit leg is calculated by finding the absolute value of the sum of all resulting short USD or EUR values step . The new aggregate net open position for that credit leg is set to the greater of the summed long and short positions step .

Using the object oriented programming model the interface for a credit data processing system according to one embodiment of the invention may be defined as follows 

The register method shown below registers a listener for events relating to credit relationships i.e. credit paths . Events are typically generated for credit relationship modifications. For example the graphical user interfaces coupled to the credit administration module which displays credit relationship details to credit entities may need to be updated when credit relationship attributes change.

The check method shown below performs a check to see if a match between two counter parties would be possible. This entails finding a credit path between the two counter parties and possibly doing additional checks on the order attributes. The version of this method that takes two arguments only checks for existence of a credit path. The other variation of this method tests for existence of a credit path as well as available credit on those lines. This method does not reserve the credit against the credit relationships. In order to improve performance of the overall system this method may be implemented within a proxy running on the local machine where the calling application is running

The authorize method shown below selects an optimal credit path between the two counter parties and performs a check on the selected optimal credit path to see if processing a matched pair of orders would be allowable given the current credit limits. This method also will temporarily book the order amount against each credit leg in the selected credit path. This entails checking the net open position NOP to verify that enough credit exists for the trade to be booked. If multiple credit pathways are found then the preferred credit intermediary list is used to identify the preferred credit path. To improve performance this step may be performed against a cache memory area that is local to the proxy. This method temporarily reserves the credit against the credit relationships in the credit path. The return value from this method is a transaction instance that needs to be committed or rolled back by the caller. It is important to note that although the return object implements the transaction interface it does not in preferred embodiments lock or synchronize the credit relationships according to the proposed trade. Thus the caller will subsequently need to invoke another method to commit the order amount to the credit relationships or otherwise abort the reservation on this object depending upon other conditions.

The getCreditIntermediaries method shown below obtains a list of the credit intermediaries for a supplied credit entity. This list is used to identify the best credit path for a matched pair of orders based on the preferred counterparty rankings provided by the credit entity.

In preferred embodiments of the credit data processing system three variations of classes are defined to hold credit relationship data CreditLine RealCreditLine and Line.

CreditLine Represents the open position as a float for faster performance. This class is used primarily within the proxy to speed the credit authorization. In the case of a Subordinate Credit Intermediary relationship this instance will represent a consolidated instance of the two lines.

RealCreditLine Represents the open position as BigDecimal for accuracy. This class is used during the commit call that occurs post trade. In the case of a Subordinate Credit Intermediary relationship this instance will represent a consolidated instance of the two lines.

Line Represents a line from the database. This class is used within the credit administration module. In the case of a Subordinate Credit Intermediary relationship there will be two instances of this class one for the subordinate credit line and one for the credit intermediary credit line.

The present disclosure includes that contained in the appended claims as well as that of the foregoing description. Although this invention has been described in its preferred form with a certain degree of particularity it is understood that the present disclosure of the preferred form has been made only by way of example and that numerous changes in the details of the structures and the combination of the individual elements may be resorted to without departing from the spirit and scope of the invention.

