---

title: Fast error detection system and related methods
abstract: A system apparatus and method generates a communications signal having an error detection mechanism. A circuit generates a data packet. An encoder multiplies and accumulates data words with values in a distance table containing non-repeated n-bit multipliers having “m” number of one bits that are set to obtain accumulated sum bits and appends the accumulated sum bits to the data packet as an error detection code to form a communications signal to be transmitted.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07865808&OS=07865808&RS=07865808
owner: Harris Corporation
number: 07865808
owner_city: Melbourne
owner_country: US
publication_date: 20070509
---
The present invention relates to the field of communications and more particularly to error detection in communications systems and related methods.

Cyclic redundancy check CRC codes are often used to detect errors in a block of transmitted bits. In general an N bit CRC code will have a probability of failure of which occurs in a very high noise environment. Values of 8 16 and 32 are common for N. A failure is defined as the code check passing when there are errors in the message. A second failure mode exists when there are no errors in the message but the CRC check fails signifying that one or more of the CRC bits were in error. This mechanism occurs much less frequently and the associated cost of discarding a good message is small.

Modern data networking communication systems are relying more and more on burst transmissions to perform network command and control functions as well as the transmission of burst data. Since it is standard practice in industry to use a CRC code for error detection each packet or burst of data includes a CRC code with its data. This allows the receiver to determine with fairly high accuracy if the received bits are correct. The disadvantage of this technique however is that it adds overhead to the transmission by requiring the transmission of extra bits. The CRC bits that are appended to the data message to send over the air can be calculated in a number of different ways but often rely on feedback shift register architectures where all the bits of the entire message to be encoded are passed through the shift register. The CRC bits are the state of the shift registers at the conclusion of the process. Standard sizes for CRC codes used in industry are 32 16 and 8 bits. For short burst transmissions these may end up being a significant portion of a transmission.

As noted above cyclic redundancy check CRC codes are commonly used in many packetized data transmissions to provide error detection. The CRC is an additional 8 16 or 32 bits that are sent along with the packetized data. A receiver recalculates the CRC and checks it against the received CRC to determine if the received packet is error free.

As the data rates increases however the time allowed to implement the CRC processing decreases which creates loading and latency issues in the system. It would be advantageous if an alternative fast error detection FED mechanism with a performance similar to a standard CRC could be provided which can be implemented in a computationally efficient form suited for digital signal processor DSP technology often used in modern radios for example software defined radios and or cognitive radio systems.

A system apparatus and method generates a communications signal having a fast error detection FED mechanism. Standard circuit generates a data packet. FED words are generated by multiplying each data word from the packet with a unique value contained in a distance table array and summed together. The resulting sum is further processed to generate the desired length of error detection i.e. 8 bit 16 bit 32 bit and appended to the data packet as a FED code to form a communications signal to be transmitted.

In one non limiting aspect a digital signal processor DSP has a multiply accumulate MAC unit and equivalent assembler instruction for multiplying and accumulating values from the distance table with the data words. The DSP is operative for computing a product of two 16 bit numbers and adding the result to the accumulator.

The circuit that generates a data packet and the DSP can be implemented in software defined radio. The FED encoder can multiply the data words with values from the distance table containing 16 bit numbers. In a preferred embodiment each value in the distance table contains M one values where M is a number between 1 and 16 preferably six or seven . The FED encoder can be operative for obtaining x number of bits as a first number of sum bits i.e. number of bits for accumulator function and reducing the x sum bits down to y bits. X can be 32 40 or 64 bits and y can be 8 16 or 32 bits.

A parity bit can also be used to replace one of the bits of the computed FED bits appended to the data packet. The values of the distance table can be pre computed and optimized to provide good distance properties for bits in error.

The system can also include a receiver that receives the communications signal after it is transmitted. An error detection mechanism can process the signal using the values of the distance table to detect errors in communication based on the FED bits appended to the data packet.

Different embodiments will now be described more fully hereinafter with reference to the accompanying drawings in which preferred embodiments are shown. Many different forms can be set forth and described embodiments should not be construed as limited to the embodiments set forth herein. Rather these embodiments are provided so that this disclosure will be thorough and complete and will fully convey the scope to those skilled in the art.

In accordance with non limiting examples of the present invention the system method and device can use a fast multiply accumulate MAC unit of a digital signal processor DSP or elements of a Field Programmable Gate Array FPGA to generate an error detection mechanism similar to a standard cyclic redundancy check CRC . The system method and device is more efficient than standard or table based CRC implementations. In accordance with non limiting examples the use of a spreading distance table minimizes error alignment and cancellation and has a performance similar to CRC techniques.

As will be appreciated by those skilled in the art portions of the present invention may be embodied as a method data processing system or computer program product. Accordingly these portions may take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment combining software and hardware aspects. Furthermore a computer program product on a computer usable storage medium having computer readable program code on the medium can be used. Any suitable computer readable medium may be used including but not limited to static and dynamic storage devices hard disks optical storage devices and magnetic storage devices.

The present invention is described below with reference to block diagram and flowchart illustrations of methods systems and computer program products according to non limiting embodiments. It will be understood that blocks of the illustrations and combinations of blocks in the illustrations can be implemented by computer program instructions which may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus implement the functions specified in the block or blocks.

These computer program instructions may also be stored in a computer readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable memory result in an article of manufacture including instructions which implement the function specified in the flowchart block or blocks. The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions specified in the flowchart block or blocks.

It should be understood that a CRC is typically a hash function that produces a checksum as a small fixed number of bits against a block of data for example a packet of network traffic that detects errors after transmission. Usually transmitted messages can be divided into predetermined lengths that are divided by a fixed divisor. According to the CRC calculation the remainder number is appended onto and sent with a message. As the message is received a processor at the receiver recalculates the remainder and compares it to the transmitted remainder. If any numbers do not match an error is considered to be detected.

Usually a CRC checksum is the remainder of a binary division with no bit carry XOR used instead of a subtraction of the message bit stream by a predefined or short bit stream of length N 1 which represents the coefficients of a polynomial with a degree N. Usually N zeros are appended to the message stream before the division. There are different variations of a CRC. For example it is possible to run a CRC calculation on an entire code word or initialize a shift register with 1 s instead of 0 s or any other value or invert the CRC before it is appended to the message stream.

As discussed communication systems may use burst transmissions to perform network command and control functions for the transmission of burst data. Each packet or burst of data includes a CRC code with its data. This allows the receiver to determine with fairly high accuracy if the received bits are correct. The transmitted CRC bits can be calculated in a number of different ways but most techniques rely on the feedback register architecture where the entire message to be encoded is passed into the register. The final CRC bits are the state of the register at the conclusion of the process. Standard sizes for CRC s used in industry are 32 16 and 8 bits. For short burst transmissions these CRC s may become a significant portion of a transmission.

A register is typically a semiconductor device that stores several bits of digital data. It basically includes a set of flip flops with each flip flop representing one bit of the register. Thus an n bit register has n flip flops. A basic register is also known as a latch. 

The shift register transfers bits of data from one flip flop to another in the shifting process. Shift registers are useful for transferring data in a serial manner while allowing parallel access to the data. Usually the flip flops are interconnected in such a way that the input to a flip flop is the output of the one before it. Clocking all the flip flops at the same time will cause the bits of data to shift or move toward the last flip flop. A shift register can also be implemented in software or a computer or Field Programmable Gate Array FPGA as would be appreciated by those skilled in the art.

CRC codes may be generated by an M state feedback shift register. The flip flops of the feedback shift register are placed in a known state and the N message bits are shifted into the structure. The input bits are added exclusive or d with several of the bits of the shift register for example. The result is shifted into the shift register. The M bit state of the feedback shift register after all message bits have been shifted into it is known as the CRC code. The CRC bits can be transmitted along with the message bits to provide error detection capability. Those skilled in the art will appreciate that other techniques for generating the CRC code may also be used.

At the receive site all of the transmitted bits including the message bits and appended CRC bits are processed by an equivalent shift register based device. The resulting state of the receive shift register will typically be zeros if there are no errors in the transmission. Another method to determine CRC errors is to shift the N message bits through the shift register and then implement a Xor function with the received M CRC bits. Of course other techniques may also be available as would be appreciated by the skilled artisan.

Some existing systems use a look up table to calculate the CRC based on 16 bit input words instead of the bit by bit processing of the shift register. An examples of a pseudo code used in such system and method is set forth below 

In accordance with a non limiting example of the present invention the fast multiply accumulate feature such as part of a MAC unit available on many DSP devices 1 cycle can be used to obtain a pseudo CRC i.e. FED for use in non limiting examples of the present invention. The system and method multiplies 16 bit data words for example with a distance table which is pre computed and optimized to give any bit errors some redundancy and distance. For example i 0 i

The distance table contains non repeated 16 bit multipliers that have m 1 one bits. Six or seven bits have been found to be sufficient. Bit 0x02000 is always set in one non limiting embodiment which can be a preferred embodiment. The sum is x number of bits for example either 32 40 or 64 bits in one non limiting example. A final manipulation stage reduces the sum bits down to a y number of bits such as 8 16 or 32. Optionally bit zero of the result is replaced with a parity bit. This implementation has been benchmarked at 40 times faster than the 8 bit table look up method using code as described above for a 16 bit CRC on a state of the art DSP.

Typically the multiply accumulate function is operative in a multiply and accumulate MAC unit as part of a DSP. It computes a product and adds the result to an accumulator. This operation can be accomplished with integers as a computed modulo of a power of two. With floating point numbers the process can be performed with two roundings. In many digital signal processors it can be accomplished with a single rounding called a fused multiply add FMA . Generally the MAC unit takes a stream of numbers that are scaled and summed.

A MAC unit can be formed as a multiplier implemented in combinational logic and followed by an adder and an accumulator register which stores the result when clocked. The output of the register is fed back to one input of the adder such that on each clock the output of the multiplier is added to the register. Some combinational multipliers require a large amount of logic but can compute a product more quickly than an alternative method of shifting and adding.

A receiver receives signals via antenna from the transmitter processes the signals in a front end circuit and conducts error checking in decoder . Further processing occurs in circuit which can include various other decode or demodulation circuits.

The Fast approach set forth will sometimes but very infrequently fail with two or three errors. The standard CRC approaches typically have a failure rate approaching as the channel error rate approaches 50 . The results presented in the tables appear similar between the two approaches.

The system and method in accordance with a non limiting example of the present invention provides a fast error detection mechanism using the multiply accumulate function of a DSP or similar processor to speed up computation. The system can detect bit errors using only multiply accumulate operations of packet data and the distance table. The distance table can be randomly generated but with some constraints on the randomness.

The distance table has properties that allow the system to detect errors without remapping bit errors to another sequence. The system and method is such that the probability of double and triple errors creating a pattern that the system cannot detect is small.

An example of a communications system that can be used and modified for use with the present invention is now set forth with regard to .

An example of a radio that could be used with such system and method is a Falcon III radio manufactured and sold by Harris Corporation of Melbourne Fla. It should be understood that different radios can be used including software defined radios that can be typically implemented with relatively standard processor and hardware components. One particular class of software radio is the Joint Tactical Radio JTR which includes relatively standard radio and processing hardware along with any appropriate waveform software modules to implement the communication waveforms a radio will use. JTR radios also use operating system software that conforms with the software communications architecture SCA specification see www.jtrs.saalt.mil which is hereby incorporated by reference in its entirety. The SCA is an open architecture framework that specifies how hardware and software components are to interoperate so that different manufacturers and developers can readily integrate the respective components into a single device.

The Joint Tactical Radio System JTRS Software Component Architecture SCA defines a set of interfaces and protocols often based on the Common Object Request Broker Architecture CORBA for implementing a Software Defined Radio SDR . In part JTRS and its SCA are used with a family of software re programmable radios. As such the SCA is a specific set of rules methods and design criteria for implementing software re programmable digital radios.

The JTRS SCA specification is published by the JTRS Joint Program Office JPO . The JTRS SCA has been structured to provide for portability of applications software between different JTRS SCA implementations leverage commercial standards to reduce development cost reduce development time of new waveforms through the ability to reuse design modules and build on evolving commercial frameworks and architectures.

The JTRS SCA is not a system specification as it is intended to be implementation independent but a set of rules that constrain the design of systems to achieve desired JTRS objectives. The software framework of the JTRS SCA defines the Operating Environment OE and specifies the services and interfaces that applications use from that environment. The SCA OE comprises a Core Framework CF a CORBA middleware and an Operating System OS based on the Portable Operating System Interface POSIX with associated board support packages. The JTRS SCA also provides a building block structure defined in the API Supplement for defining application programming interfaces APIs between application software components.

The JTRS SCA Core Framework CF is an architectural concept defining the essential core set of open software Interfaces and Profiles that provide for the deployment management interconnection and intercommunication of software application components in embedded distributed computing communication systems. Interfaces may be defined in the JTRS SCA Specification. However developers may implement some of them some may be implemented by non core applications i.e. waveforms etc. and some may be implemented by hardware device providers.

For purposes of description only a brief description of an example of a communications system that could incorporate the Fast Error Detection FED method in accordance in accordance with a non limiting example is described relative to a non limiting example shown in . This high level block diagram of a communications system includes a base station segment and wireless message terminals that could be modified for use with the present invention. The base station segment includes a VHF radio and HF radio that communicate and transmit voice or data over a wireless link to a VHF net or HF net each which include a number of respective VHF radios and HF radios and personal computer workstations connected to the radios . Ad hoc communication networks are interoperative with the various components as illustrated. The entire network can be ad hoc and include source destination and neighboring mobile nodes. Thus it should be understood that the HF or VHF networks include HF and VHF net segments that are infrastructure less and operative as the ad hoc communications network. Although UHF radios and net segments are not illustrated these could be included.

The HF radio can include a demodulator circuit and appropriate convolutional encoder circuit block interleaver data randomizer circuit data and framing circuit modulation circuit matched filter circuit block or symbol equalizer circuit with an appropriate clamping device deinterleaver and decoder circuit modem and power adaptation circuit as non limiting examples. A vocoder circuit can incorporate the decode and encode functions and a conversion unit could be a combination of the various circuits as described or a separate circuit. A clock circuit can establish the physical clock time and if necessary a virtual clock time. The network can have an overall network clock time. These and other circuits operate to perform any functions necessary for the present invention as well as other functions suggested by those skilled in the art. Other illustrated radios including all VHF mobile radios and transmitting and receiving stations can have similar functional circuits.

The base station segment includes a landline connection to a public switched telephone network PSTN which connects to a PABX . A satellite interface such as a satellite ground station connects to the PABX which connects to processors forming wireless gateways . These interconnect to the VHF radio or HF radio respectively. The processors are connected through a local area network to the PABX and e mail clients . The radios include appropriate signal generators and modulators.

An Ethernet TCP IP local area network could operate as a radio mail server. E mail messages could be sent over radio links and local air networks using STANAG 5066 as second generation protocols waveforms the disclosure which is hereby incorporated by reference in its entirety and of course preferably with the third generation interoperability standard STANAG 4538 the disclosure which is hereby incorporated by reference in its entirety. An interoperability standard FED STD 1052 the disclosure which is hereby incorporated by reference in its entirety could be used with legacy wireless devices. Examples of equipment that can be used in the present invention include different wireless gateway and radios manufactured by Harris Corporation of Melbourne Fla. This equipment could include RF5800 5022 7210 5710 5285 and PRC 117 and 138 series equipment and devices as non limiting examples.

These systems can be operable with RF 5710A high frequency HF modems and with the NATO standard known as STANAG 4539 the disclosure which is hereby incorporated by reference in its entirety which provides for transmission of long distance HF radio circuits at rates up to 9 600 bps. In addition to modem technology those systems can use wireless email products that use a suite of data link protocols designed and perfected for stressed tactical channels such as the STANAG 4538 or STANAG 5066 the disclosures which are hereby incorporated by reference in their entirety. It is also possible to use a fixed non adaptive data rate as high as 19 200 bps with a radio set to ISB mode and an HF modem set to a fixed data rate. It is possible to use code combining techniques and ARQ.

Many modifications and other embodiments of the invention will come to the mind of one skilled in the art having the benefit of the teachings presented in the foregoing descriptions and the associated drawings. Therefore it is understood that the invention is not to be limited to the specific embodiments disclosed and that modifications and embodiments are intended to be included within the scope of the appended claims.

