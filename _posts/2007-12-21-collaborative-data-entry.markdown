---

title: Collaborative data entry
abstract: A method for collaborative data entry in which a primary user enters data into an input terminal includes data being entered into a number of input fields on an input screen by the primary user. The input terminal has an interface for assigning entry of data into at least one of the input fields to an alternate user. The method includes, with the interface, assigning entry of data into at least one of the input fields to an alternate user. An apparatus allowing collaborative data entry includes an input terminal comprising a display device for displaying data to a user and a user input device for receiving input from a user; and a user interface of the input terminal, the interface comprising a number of input fields for receiving the input from a user and for assigning at least one the input field to an alternate user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09477942&OS=09477942&RS=09477942
owner: INTERNATIONAL BUSINESS MACHINES CORPORATION
number: 09477942
owner_city: Armonk
owner_country: US
publication_date: 20071221
---
The present application is filed under 35 U.S.C. 371 as a national stage submission of International Application No. PCT JP2007 074755 which has an international filing date of Dec. 21 2007 and a priority date of Dec. 28 2006. Accordingly the present application claims a priority filing date of Dec. 28 2006 pursuant to 35 U.S.C. 119 a and 365 b .

Modern enterprise systems generally have web application systems installed. For example in a reimbursement processing system using such web application systems an employee may enter a route traveling expenses lodging expenses accounting codes and other information into input fields in a web browser. The entered data is transmitted to a reimbursement processing application server for execution of the reimbursement processing.

If an employee of a company having such an enterprise system is unsure or has forgotten any input information for example the accounting code necessary for any reimbursement processing the employee must use a collaboration tool such as an electronic mail or instant messaging program to confirm the input information with another employee in order to accomplish the reimbursement processing.

However such confirmation jobs associated with data inputs by the employees may lead to a considerable cost for the company as a whole. It will be appreciated from the foregoing that there is a need for an information system that does not require such plain and troublesome confirmation jobs as described above.

Japanese Unexamined Patent Publication Kokai No. 2005 321937 discloses a part information management system aiming at enhancing efficiency in the input of parts information. In the system a part code management server receives an input request of part information for a new part and in accordance with an instruction of a manager transmits an electronic mail requesting input of part information to a vendor corresponding to the part that is an input object. Each vendor in receipt of the electronic mail accesses a mediation server from the vendor terminal. The mediation server provides the accessed vendor with a corresponding part information input screen. Each vendor performs input of the part information of the requested part from the part information input screen. The inputted part information is managed by the mediation server and is registered in the part code management server after being confirmed by the manager.

Japanese Unexamined Patent Publication Kokai No. 2002 279166 discloses a system allowing a user to readily obtain his her desired household account book data without the need to access a data providing mechanism related to the user him herself. In the system a service request from a user terminal regarding the household account book data is received at a service agent server. In the service agent server requested data desired by the user is requested of the data providing mechanism such that the service agene server collects the requested data from the data providing mechanism with the inquiry. The collected data is edited to household account book data desired by the user which is then delivered to the user terminal. After the collection of the data desired by the user is finished the completion of the service is informed from the user terminal to the service agent server and the edited household account book data is erased.

A method for collaborative data entry in which a primary user enters data into an input terminal includes data being entered into a number of input fields on an input screen by the primary user. The input terminal has an interface for assigning entry of data into at least one of the input fields to an alternate user. The method includes with the interface assigning entry of data into at least one of the input fields to an alternate user.

An apparatus allowing collaborative data entry includes an input terminal comprising a display device for displaying data to a user and a user input device for receiving input from a user and a user interface of the input terminal the interface comprising a number of input fields for receiving the input from a user and for assigning at least one the input field to an alternate user

A computer program product for collaborative data entry in which a primary user enters data into a number of input fields on an input terminal and solicits data from an alternate user for input into at least one of the input fields includes computer readable instructions stored on a physical computer readable medium the instructions causing a computer to display a user interface comprising the input fields to the primary user and accept assignment by the primary user of at least one of the input fields as to be filled with data obtained from the alternate user.

Throughout the drawings identical reference numbers designate similar but not necessarily identical elements.

In order to delegate the task of entering any data into an input field of an existing web application to another person it might be necessary to prepare a workflow process template in advance or revise the existing web application. This leads to a lack of flexibility in the system configuration. As such with the background technologies it is not possible to delegate the entering of information into input fields for an existing web application.

In view of the foregoing the present specification provides improvement in a method and program product for supporting data input for business processing in an application server. In order to achieve this the present specification provides a method for supporting data input necessary for performing business processing in a data processing system. The data processing system includes an input terminal and a delegate terminal. The data processing system may be connected to an application server performing the business processing.

The method includes a set of steps to be performed at the input terminal and a set of steps to be performed at the delegate terminal. At the input terminal the steps include starting recording of user input at the input terminal displaying a screen containing one or more input fields for data necessary for the business processing the screen including an interface for designating a delegate user for at least one of the input fields and receiving from the input user a designation of the delegate user for at least one of the input fields.

At the delegate terminal the steps include starting reproduction processing of operations performed at the input terminal by using an input reproduction file being created based on the recording of the terminal operation of the input user stopping the reproduction processing and prompting the delegate user to enter data into the input field assigned to the delegate user receiving the data entered into the delegated input field or fields by the delegate user and transmitting the entered data from the delegate user to the data processing system.

While the present technique has been outlined above as a method it will also be understood as a data processing system a program or a program product. For example the program product may include a storage medium having the program stored therein or may include a medium for transmitting the program.

As will be appreciated by one skilled in the art aspects of the present invention may be embodied as a system method or computer program product. Accordingly aspects of the present invention may take the form of an entirely hardware embodiment an entirely software embodiment including firmware resident software micro code etc. or an embodiment combining software and hardware aspects that may all generally be referred to herein as a circuit module or system. Furthermore aspects of the present invention may take the form of a computer program product embodied in one or more computer readable medium s having computer readable program code embodied thereon.

Any combination of one or more computer readable medium s may be utilized. The computer readable medium may be a computer readable signal medium or a computer readable storage medium. A computer readable storage medium may be for example but not limited to an electronic magnetic optical electromagnetic infrared or semiconductor system apparatus or device or any suitable combination of the foregoing. More specific examples a non exhaustive list of the computer readable storage medium would include the following an electrical connection having one or more wires a portable computer diskette a hard disk a random access memory RAM a read only memory ROM an erasable programmable read only memory EPROM or Flash memory an optical fiber a portable compact disc read only memory CD ROM an optical storage device a magnetic storage device or any suitable combination of the foregoing. In the context of this document a computer readable storage medium may be any tangible medium that can contain or store a program for use by or in connection with an instruction execution system apparatus or device.

A computer readable signal medium may include a propagated data signal with computer readable program code embodied therein for example in baseband or as part of a carrier wave. Such a propagated signal may take any of a variety of forms including but not limited to electro magnetic optical or any suitable combination thereof. A computer readable signal medium may be any computer readable medium that is not a computer readable storage medium and that can communicate propagate or transport a program for use by or in connection with an instruction execution system apparatus or device.

Program code embodied on a computer readable medium may be transmitted using any appropriate medium including but not limited to wireless wireline optical fiber cable RF etc. or any suitable combination of the foregoing.

Computer program code for carrying out operations of the present invention may be written in an object oriented programming language such as Java Smalltalk C or the like. However the computer program code for carrying out operations of the present invention may also be written in conventional procedural programming languages such as the C programming language or similar programming languages. The program code may execute entirely on the user s computer partly on the user s computer as a stand alone software package partly on the user s computer and partly on a remote computer or entirely on the remote computer or server. In the latter scenario the remote computer may be connected to the user s computer through a local area network LAN or a wide area network WAN or the connection may be made to an external computer for example through the Internet using an Internet Service Provider .

The present invention is described below with reference to flowchart illustrations and or block diagrams of methods apparatus systems and computer program products according to embodiments of the invention. It will be understood that each block of the flowchart illustrations and or block diagrams and combinations of blocks in the flowchart illustrations and or block diagrams can be implemented by computer program instructions. These computer program instructions may be provided to a processor of a general purpose computer special purpose computer or other programmable data processing apparatus to produce a machine such that the instructions which execute via the processor of the computer or other programmable data processing apparatus create means for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

These computer program instructions may also be stored in a computer readable memory that can direct a computer or other programmable data processing apparatus to function in a particular manner such that the instructions stored in the computer readable memory produce an article of manufacture including instruction means which implement the function act specified in the flowchart and or block diagram block or blocks.

The computer program instructions may also be loaded onto a computer or other programmable data processing apparatus to cause a series of operational steps to be performed on the computer or other programmable apparatus to produce a computer implemented process such that the instructions which execute on the computer or other programmable apparatus provide steps for implementing the functions acts specified in the flowchart and or block diagram block or blocks.

The agent server receives a designation for a delegate user for at least one input field included in a screen for entering data necessary for the application server from an input user terminal . In response the agent server generates an instruction to generate a workflow process which includes a delegate input task to be performed by the delegate user. The agent server then transmits the instruction to the workflow server to generate the workflow process. Further the agent server provides the delegate user with an interface for performing the delegate input task. Furthermore the agent server uses the data entered by the delegate user through the delegate terminal to carry out processing on behalf of the application server hereinafter referred to as delegate processing . The functions and operations of the agent server will be described in detail later.

The client may be a personal computer provided for a respective user. The client is provided with a web browser which allows the user to interact with another computer connected to the network via the browser. In one embodiment of the present technique a plug in for the browser is downloaded from the agent server and installed on the client . The plug in will add an advanced function which will be described in detail later.

In one embodiment of the present invention the client may use Internet Explorer provided by Microsoft Corporation Firefox provided by Mozilla Corporation or any other web browser. Herein the client that is operated by a user entering data in pursuit of the reimbursement process for his or herself is referred to as the input terminal whereas the client that is operated by a delegate user entering data input on behalf of the primary user according to their request is referred to as the delegate terminal .

The collaboration server provides a service for allowing the employees of the company possessing the network system to collaborate by exchanging information with each other. More specifically the collaboration server may provide an instant messaging service an electronic mail service or any other collaborative service. In one embodiment of the present technique the agent server can exchange information with the clients using a service provided by the collaboration server .

The user management server is responsible for managing information regarding the users of the network system including e.g. mail addresses and other user Identifications IDs and passwords. The user management server provides the information it manages over the network to various applications as appropriate through a published Application Programming Interface API and in an appropriate format. The applications may include an instant messaging client and e mail client software.

The workflow server generates a workflow process based on a segmented task structure created by an agent server from a model structure and manages the generated workflow process. The contents and details in generation of the model structure the segmented task structure and the workflow process created by the workflow server will be described later.

The application server interacts with other computer devices of the system to provide a business service. It may be assumed that the application server provides the exemplary reimbursement processing service of traveling and other expenses necessary for employees to conduct business in the real world.

The network is a communication path connecting the client the agent server and the application server . In one embodiment the network can be implemented as a Local Area Network LAN . The network may connect computer systems using Transmission Control Protocol Internet Protocol TCP IP a communication protocol well known to those skilled in the art.

In one embodiment the agent server includes a client communication unit a server communication unit a plug in management unit a model structure storage unit a segmented task structure generation unit a segmented task structure storage unit a workflow control unit an input operation storage unit a delegate user based reproduction processing unit a delegate input value storage unit a delegate processing control unit and a web browser .

The client communication unit provides a function which enables the agent server to communicate with either an input terminal client or a delegate terminal client . The server communication unit provides a function which enables the agent server to communicate with a server group connected to the network . The server group may include a collaboration server a user management server a workflow server and an application server .

The plug in management unit stores a plug in program used in collaboration with the web browser of a client . In response to a request from the client the plug in management unit provides the plug in program to a client through a client communication unit .

The model structure storage unit stores a model structure received from the input terminal through the client communication unit . The segmented task structure generation unit generates a segmented task structure based on the model structure stored in the model structure storage unit . The segmented task structure generated by the segmented task structure generation unit is stored in the segmented task structure storage unit . The contents and details in generation of the model structure and the segmented task structure will be described later.

The workflow control unit has a function which generates an instruction to dynamically generate a workflow process. The workflow process includes at least one delegate input task corresponding to a delegate user assigned the input task. The delegate user input task is based on the segmented task structure stored in the segmented task structure storage unit . The workflow control unit transmits the generated instruction to the workflow server through the server communication unit . When the workflow server receives the instruction it generates the workflow process and then performs activation of both the workflow process and the managing of the progress of the task s . The contents and details in generation of the workflow process generated by the workflow server will be described later.

The input operation storage unit stores a recording of input terminal operations performed by a primary user. The input operation storage unit receives the recording via the client communication unit . The recording of the terminal operations performed by a primary user and stored in the input operation storage unit is used for reproduction processing by the delegate terminal and for delegate processing by the delegate processing control unit .

When the delegate terminal which has received a processing request for a delegate input task requests an input reproduction file from the delegate user based reproduction processing unit the delegate user based reproduction processing unit generates and transmits to the delegate terminal the input reproduction file. The input reproduction file provides a data input interface for an input field assigned to the delegate user.

The delegate input value storage unit stores a delegate input value that was received through the client communication unit from the delegate terminal that performed the delegate input task.

The delegate processing control unit automatically initiates the delegate processing upon completion of all the delegate input tasks. More specifically the delegate processing control unit generates a delegate processing file based on the recording of the input operations stored in the input operation storage unit and the delegate input values stored in the delegate input value storage unit . The delegate processing control unit is also capable of activating the web browser of the agent server . A plug in similar to the one installed onto a client is installed on the web browser of an agent server . The delegate processing control unit of the agent server carries out the reimbursement processing by interacting with the application server according to the delegate processing file in the web browser environment containing the plug in.

The input unit has a function that receives input from a client user using a keyboard and or a mouse . The display unit has a function that displays information on any display device in order to provide the information to the client user. The server communication unit has a function that communicates with the agent server and other server computers connected to the network .

The web browser is a software application used for browsing electronic documents such as web pages. In one embodiment the web browser may download files from a server and display them in a Hyper Text Markup Language HTML or an eXtensible Markup Language XML format. A user may transmit data to the server using an input screen displayed on the web browser . Further the web browser can be enhanced in function by installing a small program referred to as a plug in .

In one embodiment the web browser may be one of the existing web browsers such as Internet Explorer provided by Microsoft Corporation or Firefox provided by Mozilla Corporation as explained above.

A plug in is a small program for providing the web browser with any additional function s . In one embodiment the client user downloads and installs a plug in from the agent server . The plug in technology in and of itself is well known in the technical field of web browsers. Thus a detailed description thereof will not be provided here.

In one embodiment the plug in includes a model structure generation unit a model structure storage unit an input operation acquisition unit an input operation storage unit a reproduction processing unit an input reproduction file storage unit a delegate input value acquisition unit a delegate input value storage unit and a web browser interface control unit .

In response to designation of a delegate user input field the model structure generation unit generates a model structure which includes an input screen ID an input field ID and a delegate user ID. The model structure generated by the model structure generation unit is stored in the model structure storage unit . The model structure recorded in the model structure storage unit is transmitted through the server communication unit to the agent server to be used for generating a segmented task structure.

When the recording of terminal operations has been initiated by a primary user the input operation acquisition unit acquires all the terminal operations performed in the web browser by the primary user. The input operation storage unit records the user s terminal operations which are acquired by the input operation acquisition unit . In one embodiment the user s terminal operations which are recorded in the input operation storage unit are transmitted to the agent server and may then be used by the agent server for reproduction of any operations performed by the client .

In response to the event that a delegate user receives a processing request for a delegate input task from the agent server and the delegate user then accepts the request the reproduction processing unit transmits a request for an input reproduction file to the agent server via the server communication unit . The input reproduction file storage unit stores the input reproduction file. The input reproduction file is received by the server communication unit as a reply to the request for the input reproduction file. The input reproduction file provides a data input interface for the input field assigned to the delegate user. Further the reproduction processing unit executes on the web browser the input reproduction file stored in the input reproduction file storage unit .

The delegate input value acquisition unit acquires a delegate input value entered by the delegate user into the assigned input field included in the input screen displayed on the display unit . The delegate input value storage unit temporarily stores the delegate input value acquired by the delegate input value acquisition unit . The delegate input value which is stored in the delegate input value storage unit is transmitted to the agent server via the server communication unit .

The browser interface control unit controls the web browser interface. For example in response to the event that a delegate input mode is selected in the client the browser interface control unit generates an input screen including an interface for designating a delegate user from the input screen received from the application server and displays the generated screen on the display unit .

The process proceeds to step wherein the browser environment of the input terminal is activated when the primary user double clicks on an icon representing the web browser. The icon may be provided on a desktop screen of an input terminal s display device.

Next in step recording of the input operations performed by a primary user into an input terminal s web browser is initiated in response to a prescribed operation by the primary user. For example the primary user could press a button entitled operation recording start button which may be added to the web browser by the browser interface control unit of the plug in . After the prescribed operation any input operations performed by the primary user on the input terminal s web browser are all recorded. Next in step the primary user instructs the input terminal to request the reimbursement processing of the application server and then displays an input screen received as the reply on the display device. In one embodiment the input screen thus provided to the primary user includes one or more input fields for entering data items necessary for conducting the reimbursement processing.

As the process proceeds to step the primary user instructs the input terminal to switch from a normal mode to a delegate input mode. The normal mode is a mode in which the primary user performs data input necessary for the reimbursement processing by the application server for all the input items. The delegate input mode is a mode in which the data input necessary for the reimbursement processing is delegated to another employee or person for at least one input item.

In step if the normal mode has been selected the process proceeds along the NO arrow to step in which conventionally existing normal reimbursement processing is carried out based on the interaction between the application server and the input terminal . Such normal business processing is known to and appropriately done by those skilled in the art. Therefore a detailed description thereof will not be provided here.

If it is determined in step that the delegate input mode has been selected the process proceeds along the YES arrow to the symbol A corresponding to step and further to step in a flowchart in .

Next in step the primary user uses the input terminal to enter either an actual value or a designation of delegate user onto one of the input fields included in the input screen displayed in step . The actual value may conform to the specification of the data required for the business processing in terms of format and believed by the primary user to be accurate. If the primary user enters the designation of delegate user the primary user enters a tentative value. The tentative value may be inaccurate although it conforms to the specification of the data required for the business processing.

More specifically in step the browser interface control unit of the input terminal communicates with the user management server to display a selection list of available delegate users and receives the primary user s selection of a delegate user from the selection list.

Referring again to the process proceeds to step wherein it is to be determined whether or not the delegate user has been designated for the input field in step . If it is determined in step that the delegate user has been designated the process proceeds along the YES arrow to step in which a form of marking indicates which delegate user assigned to the input field has been chosen. If a delegate user has not been designated the process proceeds to step along the NO arrow.

The process further proceeds to step in which the input terminal records a model structure for the delegate user which has been designated by the primary user in step . The model structure includes an input field for which the delegate user is designated and the input screen including the input field.

At its root the tree structure of the model structure has the business processing ID for specifying the business processing requested by the primary user from the application server . The business processing IDs are allocated in advance to the respective business processing. In one embodiment the business processing ID allocated to the current reimbursement processing is recorded.

On one hierarchical level beneath that of the business processing ID the model structure has at least one input screen ID for specifying the input screen for entering data necessary for performing the business processing specified by the business processing ID . In one embodiment only the input screen ID of an input screen containing the input field for which a delegate user has been designated is included in the model structure. In one embodiment the input screen ID for specifying the input screen is a Uniform Resource Locator URL to the corresponding input screen.

On one hierarchical level beneath that of the input screen ID the model structure has an input field ID . The input field ID is included in the input screen specified by the input screen ID . In one embodiment only the input field ID of the input field for which a delegate user has been designated is included in the model structure. The input field ID is an XPath XML Path Language of the corresponding input field.

On one hierarchical level beneath that of the input field ID the model structure has a delegate user ID for specifying the designated delegate user. In one embodiment the input field ID and the delegate user ID are associated with each other. In one embodiment the delegate user ID is a mail address of the corresponding designated delegate user.

Returning to the flowchart in after the model structure is recorded in step the process proceeds to step . As mentioned above when it has been determined in step that a delegate user has not been designated i.e. an actual value has been entered the process proceeds to step along the NO arrow.

In step it is determined whether or not there is any input field yet to be completed in the input screen currently displayed. If it is determined in step that there is an input field yet to be completed the process returns to step along the YES arrow and steps through are repeated for any input field yet to be completed until there are no more input fields yet to be completed. During the repetition of steps through recording of the model structure is added as appropriate for the input field to which a delegate user is designated.

If it is determined in step that there are no more input fields yet to be completed the process proceeds along the NO arrow to step . At step it is determined whether or not there are any remaining screens containing input fields yet to be completed for performing the reimbursement processing.

The use of a plurality of input screens for entering data required for the reimbursement processing in the above described manner may have the benefit of implementing a more user friendly interface. For example multiple input screens could allow the user to input traveling expenses on a first input screen food and drink expenses on a second input screen and lodging expenses on a third input screen. Using a plurality of input screens is a frequently adopted way of designing an application program.

The primary user may instruct the input terminal to select either GO TO NEXT SCREEN or EXECUTION RESERVATION in accordance with the determination made in step . shows an example of the interface for selecting either GO TO NEXT SCREEN or EXECUTION RESERVATION according to one embodiment of the present technique. In the interface shown in the primary user selects GO TO NEXT SCREEN or EXECUTION RESERVATION from the selection list displayed by the browser interface control unit of the input terminal .

If it is determined in step that there is at least one remaining input screen the process proceeds along the YES arrow to step where GO TO NEXT SCREEN is selected. Next in step in response to selection of GO TO NEXT SCREEN the input data including a tentative value entered in step if any is transmitted to the application server and data for a next screen is requested.

The process then proceeds to step where the input terminal receives from the application server the data for the next input screen requested in step . Thereafter the process returns to step and the steps through are repeated for the input screen according to the data received in step until there are no more screens for entering data necessary for performing the reimbursement processing.

If it is determined in step that there are no more input screens the process proceeds along the NO arrow to step where EXECUTION RESERVATION is selected. Next the process proceeds to step where the input terminal transmits the model structure including the information for designating a delegate user to the agent server . In step the input terminal also transmits to the agent server a part of the recording of terminal operations performed by the primary user. The recording was initiated in the above described step that concerns the current business processing i.e. the reimbursement processing . Next the process proceeds to step wherein the process is terminated.

As its root the tree structure of the segmented task structure has a delegate input task ID for specifying the delegate input task assigned to a respective delegate user. In one embodiment the delegate input task IDs are generated by a number corresponding to the number of the delegate user IDs existing in the model structure received by the agent server . The generated delegate input task IDs are each recorded as a root of the segmented task structure .

On one hierarchical level beneath that of the delegate input task ID the segmented task structure has a delegate user ID for specifying the delegate user who is responsible for performing the task and a business processing ID generated from the business processing ID of the model structure .

The segmented task structure has an input screen ID on one hierarchical level beneath that of the business processing ID and an input field ID on one hierarchical level beneath that of the input screen ID . Both the input screen ID and the input field ID of the segmented task structure are generated from the input screen ID and the input field ID respectively of the model structure . Only those related to the delegate user ID included in the segmented task structure are extracted and recorded.

Returning to the flowchart in in step the agent server generates an instruction to dynamically generate a workflow process . The workflow process includes at least one delegate input task which indicates that a delegate user has been asked to enter data into an assigned input field enters data into the input field.

The process proceeds to step where the agent server transmits to the workflow server an instruction to dynamically generate the workflow process generated in step and the segmented task structure generated in step .

In step the workflow server receives the instruction to dynamically generate the workflow process and the segmented task structure . In response the workflow server generates the workflow process based on the segmented task structure in step . In one embodiment of the present invention the generated workflow process is activated as well in step .

The in house network system operates according to the workflow process in the following manner. When the workflow process is activated the workflow process starts at the start process step . In the multicast process step for each delegate input task a processing request for a delegate input task is transmitted to the delegate terminal of the assigned delegate user. Thereafter the delegate input task is carried out in the delegate terminal and the input data entered by the delegate user is transmitted to the agent server .

Next if every delegate input task has been completed or more specifically if notification of completion has been received for all of the delegate input tasks from the agent server that received the input data the process proceeds to the aggregation process step . In the aggregation process step an instruction to start the delegate processing is transmitted to the agent server . The process then proceeds to the end process step wherein the workflow process is terminated.

Returning to the flowchart in in step the agent server uses the collaboration server to transmit a processing request for a delegate input task of entering data into a corresponding input field to the delegate terminal of a designated delegate user.

The process further proceeds to step wherein the agent server transmits notification of completion of execution reservation to the input terminal . The notification then notifies the primary user of the completion of the execution reservation. Thereafter the process proceeds to step wherein the process is terminated.

In response to reception of the processing request for a delegate input task the delegate terminal starts the processing of the delegate input task included in the assigned workflow process . This is done in order to receive a data input from the designated delegate user to the corresponding input field. Specifically the delegate user performs the processing of the delegate input task through the following steps.

First in step an input reproduction file is requested from the agent server . The input reproduction file causes a primary user operation performed at the input terminal to be reproduced at the delegate terminal in a pseudo manner.

Next in step the delegate user based reproduction processing unit of the agent server generates the input reproduction file requested by the delegate terminal in step . The request is based on both the segmented task structure stored in the segmented task structure storage unit and the recording of input operations stored in the input operation storage unit . The generated input reproduction file includes the operation s made by the primary user at the input terminal the input field s assigned to the delegate user who requested the relevant input reproduction file and information of a stop point of the reproduction processing necessary to allow the delegate user to enter data into the assigned input field s .

Further in step the delegate terminal uses the above described input reproduction file to reproduce the operation s of the primary user at the input terminal in a pseudo manner. In one embodiment the reproduction processing carries out interaction with the application server via the agent server . The reproduction processing is also carried out on the background i.e. carried out only inside the computer so as to prevent visual recognition of the delegate user .

The process then proceeds to step wherein the plug in installed on the web browser of the delegate terminal displays an input screen which accepts input to only the input field s which have been designated to the delegate user. The plug in then prompts a data entry from the delegate user into the designated input field s . shows an example of the input screen on which only the input field to be completed by the delegate user is made to accept the input. In the input screen in a portion other than the input field to which the delegate user is supposed to enter data is changed to a darker color and made to prohibit data entry thereto by the browser interface control unit of the input terminal .

The process proceeds to step wherein the delegate user enters data into any delegated input field on the input screen accepting input. Only the input field s to be entered by the delegate user are made to accept any input.

Next in step it is determined whether or not there are any remaining input fields assigned to the delegate user. If it is determined that there are any remaining input fields assigned to the delegate user the process returns to step along the YES arrow wherein steps through are repeated for any remaining input fields.

If it is determined in step that there are no more input fields assigned to the delegate user the process proceeds along the NO arrow to step . In step the delegate terminal transmits to the agent server the input data entered by a delegate user through steps .

Next in step in response to reception of the input data transmitted from the delegate terminal in step the agent server transmits to the workflow server notification that the corresponding delegate input task has been completed. In step the agent server generates a delegate input task completion screen and then transmits the same to the delegate terminal . Thereafter the process proceeds to step wherein the process is terminated.

The process proceeds to step in which the workflow server determines whether or not all delegate input tasks have been completed. If there are any remaining tasks the process returns to step along the NO arrow. If it is determined in step that all of the tasks have been completed specifically if notification of completion has been received from the agent server for all the delegate input tasks the process then proceeds to step . In step the workflow server generates an instruction to start the delegate processing and transmits the same to the agent server .

Next in response to reception of the instruction to start the delegate processing the agent server uses the data entered by the delegate user to perform the delegate processing for the business processing in the application server. More specifically the agent server performs the delegate processing through the following steps.

First in step in response to reception of the instruction to start the delegate processing the agent server starts the delegate processing process. Subsequently in step the agent server replaces any tentative value s in the recording of input operations with the actual value s entered by the delegate user. The agent server may then create a delegate processing file that records procedure for conducting the delegate processing in the browser environment. Next in step the agent server activates the browser environment for executing the delegate processing file.

In step the agent server executes the delegate processing file in the browser environment to carry out the delegate processing through the interaction with the application server . Subsequently in step the agent server saves the last screen received from the application server in the delegate processing.

The process then proceeds to step in which the agent server transmits to the input terminal notification that the delegate processing is completed. The notification transmitted in step that the delegate processing is completed includes a link to the last screen of the delegate processing saved in step . This allows the primary user to access the last screen and confirm further information about the completion of the business processing. The process then proceeds to step wherein the process is terminated.

The recording media such as flexible disks MOs CD ROMs and DVD ROMs are inserted into the removable storages. These recording media the hard disk drives and a ROM are capable of recording computer program codes for implementing the present invention by providing instructions to the CPU and others by cooperating with an operating system. The computer program is executed as it is loaded to the maim memory . The computer program may be compressed or divided into a plurality of pieces to be recorded on a plurality of media.

The information processing apparatus receives an input from input devices such as a keyboard and a mouse via a keyboard mouse controller . The information processing apparatus is connected via a Digital Analog Converter Liquid Crystal Display Classification DAC LCDC to a display device for providing visual data to a user.

The information processing apparatus can connect to a network via a network adapter Ethernet card or token ring card to communicate with other computers. The information processing apparatus can also connect to a printer via a parallel port or to a modem via a serial port.

It will readily be appreciated from the above description that the information processing apparatus suitable for implementing the system according to an embodiment of the present invention can be implemented by an ordinary information processing apparatus such as personal computer workstation mainframe and the like or by a combination thereof. However these elements are only illustrative and all the elements are not necessarily indispensable to the present invention.

It is of course readily possible for those skilled in the art to conceive various modifications such as combining a plurality of machines and distributing to the machines the functions of the hardware elements of the information processing apparatus used in the embodiment of the present invention. Such modifications are naturally concepts embodied in the idea of the present invention.

The client and servers according to the embodiment of the present invention may each adopt an operating system supporting the Graphical User Interface GUI multi window environment such as the Windows operating system available from Microsoft Corporation the MacOS available from Apple Computer Incorporated or the UNIX based system provided with the X Window System for example AIX available from International Business Machines Corporation .

It can be understood from the foregoing that the system used in an embodiment of the present invention is not restricted to a specific operating system environment. That is any operating system may be adopted as long as it can provide a resource management function to allow the application software to use the resources of the data processing system. While the resource management function may include a hardware resource management function file handling function spool function job management function memory protective function virtual memory management function and others these functions are well known to those skilled in the art and thus detailed description thereof will not be provided here.

Further the present invention can be implemented as hardware software or a combination of such. A typical example of implementing the present invention by a combination of the hardware and software is implementation with a data processing system having a prescribed program. In this case as the prescribed program is loaded to and executed by the data processing system the program controls the data processing system to let it execute the processing according to the present invention. The program is composed of an instruction set that can be expressed by an arbitrary language code or notation. The instruction set allows the system to perform a particular function directly or after either or both of the following 1 conversion to another language code or notation and 2 reproduction in another medium.

It is needless to say that not only such a program itself but also the medium having the program recorded thereon is within the scope of the present invention. The program for execution of the functions of the present invention can be stored in any computer readable recording medium such as a flexible disk MO CD ROM DVD hard disk drive ROM Magnetoresistive Random Access Memory MRAM and Random Access Memory RAM . In order for storage to the recording medium the program may be downloaded from another data processing system connected via a communication line or may be duplicated from another recording medium. Further the program may be stored in one recording medium or a plurality of recording media by compressing or dividing it into a plurality of pieces. Furthermore it is of course possible to provide a program product for implementing the present invention in various forms.

It will be apparent for those skilled in the art that various modifications or improvements are possible for the embodiment described above. For example although the collaboration server the user management server and the workflow server are prepared separately from the agent server in the embodiment of the present invention it is possible to implement the servers with logically divided partitions existing on one and same package hardware. Alternatively part or all of the functions provided by the servers that are necessary for accomplishing the present invention may be implemented as a software component introduced into the agent server.

In one embodiment of the present invention the selection list is used for the primary user to select a delegate user by communicating with the user management server. Alternatively it may be configured such that on the condition that a delegate user matching a specific notation method defined in advance for an input field is designated the plug in detects and interprets the same to specify the designation of a delegate user.

While the normal mode or the delegate input mode is explicitly selected by the primary user in the embodiment of the present invention it may also be configured such that it is determined that the delegate input mode has been selected on the condition that the plug in detects matching with the above described specific notation method. In this case it is preferable that the plug in redirects the data transmission to the application server and the like to the agent server as required. Further while the reproduction processing is carried out on the background in one embodiment of the present invention it may be carried out on the foreground in order to provide the delegate user with more information necessary for the delegate input operation.

In one embodiment of the present invention the reproduction processing at the delegate user terminal is performed through interaction with the application server. Alternatively it may be configured such that the input terminal records input screen data in the HTML XML format and transmits the same to the agent server and the agent server uses the received input screen data to provide a delegate user with the interface for processing the delegate input task without the need to interact with the application server.

While it is configured in one embodiment of the present invention such that the primary user enters a tentative value together with the designation of a delegate user it may also be configured such that the plug in automatically allocates the tentative value based on the attribute of the input field and or the input history in the past.

While the delegate processing file is executed in the browser environment of the agent server in one embodiment of the present invention it may also be configured such that the agent server remotely controls the input terminal and others so that the delegate processing is performed in the browser environment of the input terminal.

It should be noted that the modified or improved embodiments described above are naturally within the technical scope of the present invention.

The flowchart and block diagrams in the Figures illustrate the architecture functionality and operation of possible implementations of systems methods and computer program products according to various embodiments of the present invention. In this regard each block in the flowchart or block diagrams may represent a module segment or portion of code which comprises one or more executable instructions for implementing the specified logical function s . It should also be noted that in some alternative implementations the functions noted in the block may occur out of the order noted in the figures. For example two blocks shown in succession may in fact be executed substantially concurrently or the blocks may sometimes be executed in the reverse order depending upon the functionality involved. It will also be noted that each block of the block diagrams and or flowchart illustration and combinations of blocks in the block diagrams and or flowchart illustration can be implemented by special purpose hardware based systems that perform the specified functions or acts or combinations of special purpose hardware and computer instructions.

The terminology used herein is for the purpose of describing particular embodiments only and is not intended to be limiting of the invention. As used herein the singular forms a an and the are intended to include the plural forms as well unless the context clearly indicates otherwise. It will be further understood that the terms comprises and or comprising when used in this specification specify the presence of stated features integers steps operations elements and or components but do not preclude the presence or addition of one or more other features integers steps operations elements components and or groups thereof.

The corresponding structures materials acts and equivalents of all means or step plus function elements in the claims below are intended to include any structure material or act for performing the function in combination with other claimed elements as specifically claimed. The description of the present invention has been presented for purposes of illustration and description but is not intended to be exhaustive or limited to the invention in the form disclosed. Many modifications and variations will be apparent to those of ordinary skill in the art without departing from the scope and spirit of the invention. The embodiment was chosen and described in order to best explain the principles of the invention and the practical application and to enable others of ordinary skill in the art to understand the invention for various embodiments with various modifications as are suited to the particular use contemplated.

Having thus described the invention of the present application in detail and by reference to embodiments thereof it will be apparent that modifications and variations are possible without departing from the scope of the invention defined in the appended claims.

