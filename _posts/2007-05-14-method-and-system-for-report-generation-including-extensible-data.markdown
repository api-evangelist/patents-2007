---

title: Method and system for report generation including extensible data
abstract: A method of extending a user interface to include additional data fields is provided. A first response is received at a first application. The first response indicates a selection of an add button associated with addition of a data field to a first window associated with a user interface of a second application. A second window is presented to a user of the first application. A second response is received at the first application. The second response includes a name for the data field entered by the user using the presented second window and a data type of the data field. A position of the data field is identified on the first window. The received name, the received data type, and the identified position for the data field are stored. The data field is presented in the first window at the stored position using the stored name when a second user executes the second application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09224179&OS=09224179&RS=09224179
owner: The University of Utah Research Foundation
number: 09224179
owner_city: Salt Lake City
owner_country: US
publication_date: 20070514
---
The field of the disclosure relates generally to computer systems. More specifically the disclosure relates to a method and a system for generating reports that include extensible data added by an end user to an existing application.

Currently there is no common repository for cancer specific clinical and research data to support translational research. Clinical research programs are interested in collecting a detailed set of clinical and research information on their patients that is easy to maintain and from which relevant data can be analyzed and extracted. The information needed is not a repetition of the existing electronic medical record but instead provides additional complementary and specific information for analysis and presentation of the data for various research studies. Each program however has established their own mechanisms for extracting recording and using this data using a variety of technical approaches. These mechanisms have so far been incomplete difficult to maintain and difficult to extract data from. Thus what is needed is a method and a system for allowing the user to extend the research application to collect additional data in combination with pre defined data collection. What is additionally needed is a method and a system for allowing the generation of reports which include the extensible data added to the application for collection analysis and information extraction.

In an exemplary embodiment a device for extending a user interface to include additional data fields is provided. The device includes a computer readable medium having computer readable instructions therein and a processor coupled to the computer readable medium and configured to execute the instructions. The instructions include receiving a first response at a first application wherein the first response indicates a first selection of an add button. The add button is associated with addition of a data field to a first window associated with a user interface of a second application. The instructions further include presenting a second window to a user of the first application and receiving a second response at the first application. The second response includes a name for the data field entered by the user using the presented second window and a data type of the data field. The instructions still further include identifying a position of the data field on the first window and storing the received name the received data type and the identified position for the data field. The data field is presented in the first window at the stored position using the stored name when a second user executes the second application 

In another exemplary embodiment a method of extending a user interface to include additional data fields is provided. A first response is received at a first application. The first response indicates a selection of an add button associated with addition of a data field to a first window associated with a user interface of a second application. A second window is presented to a user of the first application. A second response is received at the first application. The second response includes a name for the data field entered by the user using the presented second window and a data type of the data field. A position of the data field is identified on the first window. The received name the received data type and the identified position for the data field are stored. The data field is presented in the first window at the stored position using the stored name when a second user executes the second application.

In yet another exemplary embodiment computer readable instructions are provided that upon execution by a processor cause the processor to implement the operations of the method.

Other principal features and advantages of the invention will become apparent to those skilled in the art upon review of the following drawings the detailed description and the appended claims.

With reference to a block diagram of a medical research system is shown in accordance with an exemplary embodiment. The term exemplary is used herein to mean serving as an example instance or illustration. Any aspect or design described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs. Medical research system may include a first computing device a second computing device and a records database which may be stored at first computing device at second computing device or at a third computing device. Records database includes electronic medical records that provide demographics encounters results and diagnostic information from a clinical system for a plurality of patients.

First computing device may include a display an input interface a first memory a first communication interface a first processor and a browser application . Second computing device may include a second memory a second communication interface a second processor a medical research application a bio sample tracking application a metabuilder application and a database . Different and additional components may be incorporated into medical research system first computing device and second computing device . For example computing device may also include medical research application bio sample tracking application metabuilder application and or database . Medical research application bio sample tracking application metabuilder application and database may be implemented in one or more computing devices. Thus the components of medical research system may be positioned in a single device or a plurality of devices in a single location in a single facility and or remote from one another.

Display presents information to a user of first computing device as known to those skilled in the art. For example display may be a thin film transistor display a light emitting diode display a liquid crystal display or any of a variety of different displays known to those skilled in the art now or in the future.

Input interface provides an interface for receiving information from the user for entry into first computing device as known to those skilled in the art. Input interface may use various input technologies including but not limited to a keyboard a pen and touch screen a mouse a track ball a touch screen a keypad one or more buttons etc. to allow the user to enter information into first computing device or to make selections presented in a user interface displayed on display . Input interface may provide both an input and an output interface. For example a touch screen both allows user input and presents output to the user.

First memory is an electronic holding place or storage for information so that the information can be accessed by first processor as known to those skilled in the art. Second memory is an electronic holding place or storage for information so that the information can be accessed by second processor as known to those skilled in the art. First computing device and second computing device may have one or more memories that use the same or a different memory technology. First computing device and second computing device may have one or more memories that use the same or a different memory technology. Memory technologies include but are not limited to any type of RAM any type of ROM any type of flash memory etc. First computing device and second computing device also may have one or more drives that support the loading of a memory media such as a compact disk or digital video disk.

First communication interface provides an interface for receiving and transmitting information communicable between computing devices. Second communication interface provides an interface for receiving and transmitting information communicable between computing devices. Communications between first computing device second computing device and other devices may use various transmission technologies and media as known to those skilled in the art.

First processor and second processor execute instructions as known to those skilled in the art. The instructions may be carried out by a special purpose computer logic circuits or hardware circuits. Thus first processor and second processor may be implemented in hardware firmware software or any combination of these methods. The term execution is the process of running an application or the carrying out of the operation called for by an instruction. The instructions may be written using one or more programming language scripting language assembly language etc. First processor and second processor execute an instruction meaning that they perform the operations called for by that instruction. First processor may operably couple with display with input interface with first memory and with first communication interface to receive to send and to process information. Second processor may operably couple with second memory and with second communication interface to receive to send and to process information. First processor and second processor may retrieve a set of instructions from a permanent memory device and copy the instructions in an executable form to a temporary memory device that is generally some form of RAM. First computing device and second computing device may include a plurality of processors that use the same or a different processing technology.

First computing device and second computing device may include computers of any form factor such as a laptop a desktop an integrated messaging device a personal digital assistant etc. First computing device and second computing device may interact using a network such as a local area network a wide area network a cellular network the Internet etc. If implemented in separate computing devices medical research application bio sample tracking application metabuilder application and database may communicate using the same or a different network.

Database can be a standard structured query language SQL database. Database may store information for use by medical research application bio sample tracking application and or metabuilder application . Database may be organized into multiple databases to improve data management and access. The multiple databases may be organized into tiers.

Computing devices may act as web servers providing information or data organized in the form of websites accessible over a network. A website may comprise multiple web pages that display a specific set of information and may contain links to other web pages with related or additional information. Each web page is identified by a Uniform Resource Locator URL that includes the location or address of the computing device that contains the resource to be accessed in addition to the location of the resource on that computing device. The type of file or resource depends on the Internet application protocol. For example the Hypertext Transfer Protocol HTTP describes a web page to be accessed with a browser application. The file accessed may be a simple text file an image file an audio file a video file an executable a common gateway interface application a Java applet or any other type of file supported by HTTP.

In an exemplary embodiment medical research application bio sample tracking application and metabuilder application are web applications which can be accessed using browser application from first computing device using a network such as the Internet. Thus medical research application bio sample tracking application and metabuilder application may be accessed for example using a URL entered in a browser address window of browser application as known to those skilled in the art. Medical research application bio sample tracking application and metabuilder application may communicate with database directly or over a network.

Medical research application performs operations associated with conducting medical research based on patient medical histories. Some or all of the operations and interfaces subsequently described may be embodied in medical research application . The operations may be implemented using hardware firmware software or any combination of these methods. With reference to the exemplary embodiment of medical research application is implemented in software stored in second memory and accessible by second processor for execution of the instructions that embody the operations of medical research application . Medical research application may be written using one or more programming languages assembly languages scripting languages etc. Medical research application may integrate with or otherwise interact with bio sample tracking application and or metabuilder application .

Bio sample tracking application performs operations associated with finding and accessing information related to biological samples. Some or all of the operations and interfaces subsequently described may be embodied in bio sample tracking application . The operations may be implemented using hardware firmware software or any combination of these methods. With reference to the exemplary embodiment of bio sample tracking application is implemented in software stored in second memory and accessible by second processor for execution of the instructions that embody the operations of bio sample tracking application . Bio sample tracking application may be written using one or more programming languages assembly languages scripting languages etc. Bio sample tracking application may integrate with or otherwise interact with medical research application and or metabuilder application .

Metabuilder application performs operations associated with extending the functionality of an application based on user requirements. Some or all of the operations and interfaces subsequently described may be embodied in metabuilder application . The operations may be implemented using hardware firmware software or any combination of these methods. With reference to the exemplary embodiment of metabuilder application is implemented in software stored in second memory and accessible by second processor for execution of the instructions that embody the operations of metabuilder application . Metabuilder application may be written using one or more programming languages assembly languages scripting languages etc. Metabuilder application may integrate with or otherwise interact with medical research application and or bio sample tracking application .

Exemplary embodiments are described herein with reference to medical research. Application to medical research is not intended to be limiting. In general information to be tracked in support of medical research is associated with a patient. In order to be considered a patient for a specific medical condition such as cancer arthritis Alzheimer s diabetes a patient may be linked to that medical condition group. In the exemplary embodiments shown and described herein the medical condition is cancer though use of cancer as a medical condition is not intended to be limiting.

In an exemplary embodiment a user may access medical research application from first computing device using browser application and known login procedures. After a user is validated based on authentication using a username password a welcome screen may be presented as shown with reference to in accordance with an exemplary embodiment. Welcome screen for example presented at display using browser application provides an entry point to medical research application . Welcome screen may include a cancer group selector a session purpose selector a study selector a de identified selector a continue button and a cancel button . Cancer group selector session purpose selector and study selector determine the user s role during the session. The options selectable using cancer group selector session purpose selector and study selector may be determined based on control parameters defined for the user based on the authentication process and may be presented using drop down menus.

A cancer group of interest is selected using cancer group selector if more than one cancer group is accessible by the user based on the control parameters associated with the user s username. Cancer group selector may be a drop down box. A session purpose is selected using session purpose selector which may include options such as clinical quality assurance research general research study etc. Session purpose selector may be a drop down box. A study is selected using study selector which may be a drop down box. For example if the selected session purpose is research study the user may select a study from a list of studies sponsored by the selected cancer group to which the user has been granted access.

The user may choose to work with patient data that does not include patient identification information by selecting de identified selector which may be a checkbox. Medical research application may display the cancer group session purpose study and de identified status prominently throughout the session for user reference. After login patients and information retrieved during the session may be limited based on the selected user role and permissions associated with the user the selected session purpose and the de identified status. If the selected session purpose is research study patients retrieved may be limited to those who have consented to inclusion in the study. A patient may be linked to more than one medical condition group. Some information may be shared across medical condition groups. For example basic demographic information may be shared by all medical condition groups and all applications within medical research system .

User selection of cancel button may end the session. After user selection of continue button the user may be presented a main menu shown with reference to in accordance with an exemplary embodiment. In an exemplary embodiment main menu allows the user to quickly find a patient add a patient or invoke reporting and administration functions associated with medical research application . Main menu may include a text box which indicates the cancer group session purpose and study selections made by the user from welcome screen . Main menu further may include a patient look up section a patient quick search section and a common task section. The patient look up and patient quick search sections provide common criteria for finding a patient. The searches may be limited to patients in the cancer group specified for the session and to consented patients for a study if the session purpose is Research Study for example.

The patient look up section may include a patient look up text box and a proceed button . The user may enter a medical record number MRN into patient look up text box and select proceed button using input interface . Database is searched using the entered MRN and matching information is returned to the user. The patient quick search section may include patient name text boxes date range boxes for the patient s first visit a medical event type selector a patient classification selector a stage selector and a search button . The user enters data into and or selects data from patient name text boxes date range boxes medical event type selector patient classification selector and stage selector before selecting search button . For example patient classification selector may be implemented as a drop down box which includes user defined selections which can be different for example for each cancer group. Exemplary classifications may include Dr. X Patients Needs Review Surgical Candidate etc. Database is searched using the entered selected data and matching information is returned to the user.

With reference to a search results window provides the matching patient information to the user of computing device . Search results window may include a list of patients and a list of patient identification information . For example the list of patient identification information includes the MRN the last name the first name the birth date the age the deceased status the sex and the first visit date for each matching patient in the list of patients .

With continued reference to the common tasks section may include an advanced search button a new patient wizard button an administration button an encounter review button a reporting button and an ad hoc reporting button . Selection of advanced search button causes presentation of a search screen for finding groups of patients with shared characteristics. With reference to an advanced search criteria selection window presented to the user allows the user to specify search criteria for identifying one or more patient from database and or records database . Advanced search criteria selection window allows many more search criteria to be used in identifying a patient or a group of patients that share similar characteristics within the cancer group or study context.

Advanced search criteria selection window may include a patient parameters section a medical event parameters section a pathology report section a diagnosis parameters section a staging parameters section a tumor section a study section a search button and a clear button . Patient parameters entered selected by the user in patient parameters section may include MRN last name first name middle name gender first visit date birth date progression free days survival days classification and extended attributes which can be custom defined as described later with reference to metabuilder application . Medical event parameters entered selected by the user in medical event parameters section may include event type start date and extended attributes which can be custom defined as described later with reference to metabuilder application . Pathology reports entered by the user in pathology report section may include extended attributes which can be custom defined as described later with reference to metabuilder application . Diagnosis parameters entered selected by the user in diagnosis parameters section may include International classification of diseases for oncology ICD O morphology cancer group morphology ICD 9edition ICD 9 ICD O topography diagnosis date and diagnosis age. Staging parameters entered selected by the user in staging parameters section may include a tumor size status a lymph node spread status a metastasis status TNM status a stage selector an initial stage indicator and a current stage indicator. Tumor parameters entered selected by the user in tumor section may include a body site selector a tumor type selector and extended attributes which can be custom defined as described later with reference to metabuilder application . Study parameters entered selected by the user in study section may include a study selector a consent type selector a patient study identifier and extended attributes which can be custom defined as described later with reference to metabuilder application .

The user enters as many search criteria as needed and selects search button . Clear button can be selected to blank out all selections in advanced search criteria selection window . To select search criteria from one of the extended attributes a button may be selected. A dialog window not shown may be presented which presents the user with a list of attributes available for selection. After selecting search button the user is presented with a list of patients that match the search criteria. For example search results window may be presented with a list of matching patients as described with reference to .

With continued reference to selection of new patient wizard button causes presentation of windows that walk the user through the steps of searching for and registering a patient of interest to the cancer group. With reference to a new patient wizard window allows the user to specify search criteria for identifying a patient from records database . New patient wizard window may include a plurality of tabs an add patient button a view patient button and a cancel button . The plurality of tabs may include a lookup by MRN tab a lookup by name tab and a non clinic patient tab . Lookup by MRN tab may include an MRN text box a search button and a results section . The user may enter a MRN into MRN text box and select search button using input interface . Records database is searched using the entered MRN and matching information is returned to the user in results section .

Results section may include patient identification information such as the MRN the first name the middle name the last name the birth date and the gender. If the correct patient is identified in results section the patient may be added for use clinically or for research study using medical research application by selecting add patient button . For further verification additional patient information may be presented by selecting view patient button . Execution of the new patient wizard may be cancelled by selecting cancel button . Lookup by name tab allows the user to identify a patient by entering name information instead of a MRN. Using non clinic patient tab an application programming interface is presented to the user to add a patient to database whose medical information is not stored in records database .

With continued reference to administration button reporting button and or ad hoc reporting button may be selectable or not based on the user s privileges. Selection of administration button causes presentation of windows which allow the user to manage user and group access privileges for medical research system . Selection of reporting button and or ad hoc reporting button causes presentation of windows which allow the user to generate output data from medical research application .

Selection of encounter review button causes presentation of windows which support the efficient entry of additional data for a patient that results from subsequent medical encounters. With reference to a patient update window is organized into three sections associated with updating a patient s medical information. In accordance with the exemplary embodiment of patient update window may include a patient selection section a patient encounter selection section and a medical event selection section . Patient selection section may include a patient table and a patient mark button . Patient table may include MRN birth date gender and first and last name columns for patients that have new encounter information. Selection of a patient in patient table followed by selection of patient mark button marks the selected patient as having been reviewed so the user can focus on new encounters that have not been reviewed. Selection of a patient in patient table causes presentation of encounter information in patient encounter selection section which includes an encounter table . Encounter table may include event date encounter identifier provider and description columns. The encounter information may be received from database . The user can view additional information associated with the encounter for example by double clicking on an encounter listed in encounter table .

Medical event selection section may include a medical event selector and a medical event link button . If the user decides to enter a new medical event to capture the encounter information for one or more encounters listed in encounter table the user selects an appropriate medical event using medical event selector and selects medical event link button to store the medical event. In an exemplary embodiment the event start date and the type of event are filled in and stored automatically. Subsequently when the user views a patient s detailed record the new medical event is highlighted for example using color such as green to alert the user that additional information associated with the medical event may be entered.

With reference to and a patient information window allows the user to review a selected patient. For example patient information window may be presented to the user on display using browser application after a patient look up process a patient search process selection of view patient button etc. Patient information window may include information that is grayed out to indicate that the data is read only. Patient information window may include patient demographic data a plurality of tabs a remove patient button a records button a save button a save and close button and a cancel button . Demographic data may include the patient name birth date gender address phone numbers etc. and may not be editable using medical research application . Additional demographic information may be entered and tracked within medical research application using metabuilder application . The additional demographic information may include race ethnicity death information providers additional contact information first visit date other names or identifiers for the patient a group defined classification for the patient etc. as determined by the cancer group study. To access the additional demographic information the user may select an Additional Patient Data button which causes presentation of an additional patient data window shown with reference to . In the exemplary embodiment of additional patient data window includes risk factors related to alcohol smoking prior medical conditions and use of hormone replacement therapy. Of course additional patient data window may include a wide variety of parameters for example based on the research study involved.

With continuing reference to the plurality of tabs may include an overview tab an administration tab a labs tab a medical events tab etc. Overview tab may include basic identifying information and information that summarizes the state of the disease and the disease progression. Administration tab may include information necessary to administer the patient and study enrollments which is not part of the key summary information. Labs tab may include study and test result information for the cancer group. Medical events tab may include event information for the cancer group. Selection of remove patient button removes the presented patient from use clinically or in a research study using medical research application . Selection of records button accesses additional information related to the patient from records database including pathology reports lab results radiology reports general documents including textual pathology reports any additional encounters etc. Selection of save button saves the currently entered selected data for the patient and patient information window continues to be presented to the user. Selection of save and close button saves the currently entered selected data for the patient and closes patient information window . Selection of cancel button removes any currently entered selected data for the patient and closes patient information window .

Overview tab may include information that summarizes the state of the disease and the disease progression a diagnosis section and a tumor section . Diagnosis section may include a diagnosis grid a stage grid a show all checkbox a calculate stage button an enter stage button first add remove buttons and a remove button . Diagnosis grid may include diagnoses of interest to the cancer group and or entered by the cancer group. Associated with each diagnosis included in diagnosis grid may be the cancer group the date ICD 9 or ICD O codes cancer group specific morphology and comments patient age at diagnosis calculated if possible the source of the diagnosis the non microscopic or microscopic basis for the diagnosis etc. Diagnosis grid can be expanded to show all known diagnoses for the patient by selecting show all checkbox . After a cancer diagnosis has been entered calculate stage button and enter stage button may be activated. If sufficient pathologic and or clinical information is available to stage a cancer patient calculate stage button may be selected. Alternatively enter stage button can be selected to enter a stage that is not calculated. Selection of first add remove buttons adds removes diagnoses from diagnosis grid . Selection of remove button removes erroneous stages from stage grid . Tumor section may include a tumor grid and second add remove buttons . Tumor grid may include tumor information for each tumor such as an identification date a tumor type body site information etc. Selection of second add remove buttons adds removes diagnoses from tumor grid .

With reference to a diagnosis detail window allows the user to add a diagnosis to diagnosis grid or to edit an existing diagnosis in diagnosis grid . Diagnosis detail window allows entry edit of a diagnosis date an ICD 9 code an ICD O topography code an ICD O morphology code a group morphology code a diagnosis source a diagnosis basis and diagnosis notes. After entry of the diagnosis date an age at diagnosis can be automatically calculated using a calculate age button . If the diagnosis date cannot be determined from the available information the age can be directly entered in diagnosis detail window . Selection of a save button saves the entered data into diagnosis grid . Selection of a cancel button cancels entry of the entered data into diagnosis grid .

With reference to a stage detail window allows the user to add a stage to stage grid or to edit an existing stage in stage grid after user selection of calculate stage button or enter stage button shown with reference to . The stage history tracks stage entries for the patient including TNM status and grade stage code date the staging system and version the purpose for the stage entry such as initial stage status update restage or trial qualification etc. A stage entry is associated with a particular diagnosis being staged. Some cancers do not use traditional staging to determine prognosis but rather group patients based on a variety of factors in order to determine prognosis. A prognosis group field allows entry of specialized grouping codes for these cancers. Selection of a view diagnosis button allows the user to view the associated diagnosis. Selection of a save button saves the entered data into stage grid . Selection of a cancel button cancels entry of the entered data into stage grid .

A stage entry in the stage history represents an overall patient staging related to the diagnosis taking into account all of the information tests and imaging results available for the patient at that time as opposed to a single pathologic staging. If the stage is being calculated automatically stage detail window is presented with the staging information filled in by the calculator. If the information returned by the calculator needs to be corrected due to inaccuracy or incompleteness the controls on stage detail window are editable. Editing of the stage manually results in an auto checkbox becoming unchecked. If the stage is being manually entered stage detail window is presented without the staging information filled in. The user fills in the desired stage entries. From the stage history TNM status entries for a cancer group the system may calculate and store cancer progression related information. Cancer progression related information may include initial TNM status dates of regional and distant progression days to regional and distant progression progression free days until death progression or last known alive date survival days until death or last known alive date and relapse free survival days until death relapse or last known alive date .

With reference to a tumor detail window allows the user to add a tumor to tumor grid or to edit an existing tumor in tumor grid . In the exemplary embodiment of tumor detail window includes an overview tab and an additional data tab . Tumor entries track specific tumors along with tumor characteristics not ordinarily part of the diagnosis or that may be more conveniently summarized relative to the tumor. Overview tab may include the date the tumor was identified the type primary tumor local or distant recurrence body site details such as specific body location in the case of melanoma or sarcoma or more detailed placement within the organ for other cancers laterality and anterior posterior position and whether regional or distant metastasis was initially detected. The user may view attributes associated with a specific diagnosis in the diagnosis history linked to the tumor by selecting view diagnosis button . If no diagnosis is associated with the tumor the existing diagnoses for the patient may be reviewed.

In staging the patient the status of detection of nodal and distant metastasis is important. This information may eventually become available and be collected during pathologic investigation of tumor samples. However in cases where clinical investigation has determined that no nodal or distant metastasis has occurred this may be explicitly recorded with checkboxes included under overview tab . The explicit recording of nodal and distant metastasis status assists the staging calculator in selecting the correct stage. The tumor may also link to medical events such as tumor biopsy which may contain more detailed information on specific procedures and diagnostics performed for the tumor including pathology report data. The medical events may be added to or removed from a medical event grid . Selection of a save button saves the entered data into tumor grid . Selection of a cancel button cancels entry of the entered data into tumor grid .

With reference to additional data tab may be presented if the cancer group has specified additional fields to be captured for each tumor. The generic controls text select number and list may be replaced with cancer group specified fields. For example the additional fields are defined using metabuilder application discussed with more detail with reference to .

With reference to administration tab presents extended demographic contact classification and study enrollment information. Studies may be defined for the cancer group. Part of the definition of a study is the consent types to which a patient may consent to participate in the study. When a patient has consented users with write permission to the study may enroll the patient and enter the consent information including the date of consent the type of consent the date the consent will expire etc. Consent forms are added to a patient for a particular study by selecting a consent type from a list predefined for the study. The expiration of the consent is automatically calculated from the expiration period predefined for that consent type for the study. A scanned image of the consent form may be uploaded and linked to the enrollment. Patient information related to race ethnicity may be entered.

With reference to selection of labs tab presents sample and test result information for the patient. Labs tab may include a sample grid and a test grid . The samples and tests included in sample grid and in test grid may be cancer group specific. Samples may be added for the cancer group and they may also be linked to existing samples in database or in a separate biosample tracking BST database at computing device or at another computing device accessible using a network. Thus database may include the BST database. Alternatively the BST database may be separate from database . Sample grid includes a list of samples collected for the patient that the cancer group chooses to track. Sample grid may include a collection date a sample type and an identifier by which the sample is tracked.

A sample detail window presented using medical research application is shown in accordance with an exemplary embodiment. Sample detail window may be presented after double clicking on a sample in sample grid or using other methods known to those skilled in the art. Selection of a save button saves any modified sample data into sample grid . Selection of a cancel button cancels entry of any modified sample data into sample grid . Selection of a view in BST button transfers the user to BST application to view additional sample details if the sample has been linked through BST application . If the sample has not been linked to a sample view in BST button is replaced with a link to BST button not shown .

Access to biological samples and accurate information about them is essential to research. For example progress on research projects may hinge on the availability of tissue samples from individuals with particular phenotypes or genotypes. BST application addresses the need for researchers to find samples to track access to samples and to access related clinical data. Samples come into research programs through many avenues. Samples may come from a tissue acquisition and distribution facility a laboratory collaborative research sources or be purchased from a vendor. Using BST application the user can identify the quantity of the sample collected the preparation method and storage location of the sample which projects have received the sample how much of the sample remains for use how if the sample was transformed into DNA RNA or cell lines etc.

With reference to a sample detail window presented using BST application is shown in accordance with an exemplary embodiment for example after selection of view in BST button . BST application provides tracking of all types of samples. Sample detail window may include sample identification data products of sample division and transformation collection information status information storage disbursement information patient information pathology report information associated with the sample etc.

With reference to a BST application main window presented using BST application is shown in accordance with an exemplary embodiment. In an exemplary embodiment BST application main window may be presented to the user in combination with sample detail window and or other windows for presentation of sample information to the user. The user may enter search criteria such as a sample identifier a disbursed project selector a tissue type selector and cancer status selector a patient identifier etc. and select a search button associated therewith to search the BST database for a sample. BST application main window may include an add sample link . Selection of add sample link may cause presentation of an add sample window shown with reference to . Using add sample window the user may enter the collection storage disbursement and related pathology data associated with a sample. Selection of a save button saves the entered data into the BST database. Selection of a save add another button saves the entered data into the BST database and opens a new instance of add sample window . Selection of a cancel button cancels entry of the entered data into the BST database and returns the user to BST application main window .

With reference to a sample can be added to sample grid for example by user selection of a button not shown presented in labs tab . Selection of the button may cause presentation of add sample wizard window shown with reference to in accordance with an exemplary embodiment. An unlinked sample can be created by entering selecting the collection date the sample type and the sample identifier by which the sample is tracked and selecting a save button . Selection of a cancel button cancels entry of the sample into sample grid . Alternatively a sample may be linked to BST application using add sample wizard window . The user may search for the sample in the BST database using a BST sample identifier a MRN a patient name a tissue type etc. After entering the desired search criteria the user selects a search BST button to locate the sample in the BST database. Identified samples are presented in a search results window . If the correct sample is identified the user selects the sample in the search results list and selects a link this sample button which may cause two actions. First the sample may be added to medical research application . Second the sample may be linked using a common identifier to BST application . The advantage to linking to BST samples is that the sample can be viewed with its extended collection storage disbursement and related pathology data from medical research application .

With reference to a test detail window presented using medical research application is shown in accordance with an exemplary embodiment. Test detail window may be presented after double clicking on a test in test grid or using other methods as known to those skilled in the art. Test results may be entered for the patient by the cancer group. Test detail window may include a test date a test type a facility identifier where the test was performed test results and a note. The test results may include two different result values a test units selector a normal high value and a normal low value for the test. The user selects the test date the test facility and the test type. Valid entries for the result values may be determined based on a test result dictionary definition. Medical research application may automatically define the normal high value and the normal low value based on the test type and facility. The normal high and low values can be redefined by the user if they are not accurate for the test actually performed. Selection of a save button saves the entered test data into test grid . Selection of a cancel button cancels entry of the entered test data into test grid .

With reference to medical events tab presents medical event information for the patient collected about various events and procedures that are performed for the patient. The event may represent a single procedure on a single day or may summarize a course of treatment over a period of time such as radiation treatment or chemotherapy. Medical events tab may include a medical events grid . The patient may have any number of medical events which may be listed in a chronological order. The chronological order of presentation of the medical events in medical events grid is by date based on user selection of a first radio button . Viewing by date shows the activities associated with the patient longitudinally. The default presentation may be by the date. The chronological order of presentation of the medical events in medical events grid shown with reference to is by tumor based on user selection of a second radio button . Viewing by tumor shows those events linked to specific tumors in date order within the tumor association. The chronological order of presentation of the medical events in medical events grid shown with reference to is by classification based on user selection of a third radio button . Viewing by medical event classification shows only those events explicitly classified as belonging to a particular grouping. For example medical events may be grouped by diagnosis and treatment . Those medical events previously associated with the diagnosis classification appear under that heading ordered by date within the classification. A medical event may be added removed from medical events grid using add remove buttons .

With reference to a medical event detail window presented using medical research application is shown in accordance with an exemplary embodiment. Medical event detail window may be presented after double clicking on a medical event in medical events grid or using other methods as known to those skilled in the art. Individual medical events may be classified into categories defined by the cancer group. For example one cancer group may choose to create categories such as Diagnosis Treatment Palliative Care and Followup . When a medical event is entered for a patient in that cancer group it may be classified into one or more of these categories. Each cancer group may define the medical event types that it tracks and any number of custom data fields recorded for that event type. Examples of medical event types may be Tumor Biopsy Surgery Surgical Revision Initial Assessment Endoscopic Ultrasound ERCP Followup etc. Some event types are commonly used for many cancers so pre defined event types may be defined for these event types. Pre defined event types may be Radiation Therapy Chemotherapy Imaging etc.

Medical event detail window may include a first section which presents basic information shared by all medical events such as a pre defined set of data items and links that each medical event generally has available. First section may include an event type a start date an end date a performing provider a facility a report number and or a report number type a detailed procedure etc. Medical event detail window further may include a plurality of tabs which provide additional detail associated with a medical event. Exemplary tabs of the plurality of tabs include Overview Details Surgery Detail Room Detail and Outcomes tabs. Additional tabs may include Imaging and Radiation Therapy . An Overview tab may include an assessment details section a pathology report grid pathology report add remove buttons a medical event grid medical event add remove buttons and a context search button etc. The medical event may be classified according to the predefined groupings built for the cancer group to allow the views grouped based on classification. Selection of context search button allows the user to search textual reports stored in records database by matching strings in the text with the items that need to be entered using medical event detail window and other user interface windows of medical research application .

Assessment details section may include a vital status selector a performance score selector a treatment response selector and evidence of disease indicators. Assessment details section provides a mechanism for attaching summary level standardized measures of patient capabilities or response. These assessments are at the time of or due to the medical event. The vital status selector may be an overall vital and disease status. The performance score selector may be an overall performance score such as the World Health Organization five level scale from normal to completely disabled. The treatment response selector may be an overall measure of disease progression. The evidence of disease indicators may include clinical biochemical radiologic and pathologic. Any additional types of assessment needed especially fields to support detailed assessment systems are built and added by the cancer group as custom data for example using metabuilder application discussed with reference to .

Selection of a save button saves the entered data into the medical events grid but leaves medical event detail window open for further editing if needed. Selection of a save close button saves the entered data into the medical events grid and closes medical event detail window . Selection of a cancel button cancels entry of the entered data into the medical events grid and returns the user to medical events tab of patient information window .

With reference to a Details tab may include a test grid test add remove buttons a sample grid sample add remove buttons a current procedural terminology CPT code grid CPT code add remove buttons an event classification grid classification event add remove buttons a reviewing provider selector a review date selector and a review comment text box . A CPT code is a billing code defined by the American Medical Association to describe medical services and procedures provided to a patient. Test grid test add remove buttons sample grid and sample add remove buttons are similar to sample grid and test grid shown with reference to but are limited to those associated with the medical event.

With reference to and a medical event can be added using an add button of the add remove buttons . Selection of the add button may cause presentation of an add medical event window shown with reference to in accordance with an exemplary embodiment. The user may select an event type and start date. Selection of an add button creates the new medical event and opens an instance of medical event detail window for data entry. Selection of a cancel button closes add medical event window without creating a new medical event. Events with detailed clinical information such as surgeries biopsies treatments diagnostic procedures follow up etc. can be identified from database and a link created. In an exemplary embodiment the user enters a start date and an end date and selects a find encounter button . Search results may be presented in a result grid . The user identifies and selects the encounter of interest from result grid and a link this encounter button . An instance of medical event detail window opens for additional data entry. For example the user may enter data in assessment details section and any other desired details. Linking to the encounter provides the ability to utilize and assess the events of interest without replicating them and to integrate the encounter with the medical events.

A pathology report can be added using an add button of the pathology report add remove buttons shown with reference to . Selection of the add button may cause presentation of an add pathology report window shown with reference to in accordance with an exemplary embodiment. To enter pathology data for the medical event an existing pathology report can be identified and a link to it created or a new pathology report can be entered by the user. In an exemplary embodiment the user enters any or all of a tissue type a sample procedure type a patient name a report number and a report date. After entry of the search criteria the user selects a search button . Search results may be presented in a result grid . The user identifies and selects the pathology report of interest from result grid . To link the pathology report to pathology report grid the user selects a finish button . Selection of a cancel button closes add pathology report window without creating a new pathology report.

If the pathology report of interest is not found a Create New Pathology Report button may be selected. Selection of button may cause presentation of a pathology report window shown with reference to in accordance with an exemplary embodiment. Pathology report window may include a report type a report date a reporting institution a report number a procedure date a tissue type a procedure used to collect a sample a performing and a reporting provider a patient name and birth date an age at the procedure a age at diagnosis and pathologic stage data. The stage data can be calculated or manually entered. Pathology report window may include a TNM Staging tab and an Additional Pathological Findings tab . TNM Staging tab may include primary and metastatic tumor topography linked to ICD 9 or ICD O topography where possible tumor histologic type linked to ICD O morphology where possible TNM and grade status and the system used for staging. The Additional Pathological Findings tab may include custom elements for pathology based on the tissue type or tissue type sample procedure type combination added for example using metabuilder application discussed with reference to . The pathology data may be stored in database in the BST database or in a separate pathology database.

Metabuilder application provides the ability to include user extensible data configured by the end user into medical research application and or BST application . Metabuilder application may be accessed from medical research application and or BST application for example using a button. In an exemplary embodiment a user also may access metabuilder application from first computing device using browser application . One or more windows may be presented to the user. With reference to a custom extensions window may be presented for example at display using browser application . Extensible data may be added at multiple points in a hierarchy associated with the functionality provided for example by medical research application . In the exemplary embodiment of a cancer test extension constitutes the highest level of extension and identifies a group of one or more windows associated with the presentation and entry of data for one or more cancer tests.

In the exemplary embodiment of the user selects a first group resource from a plurality of group resources in which to add extensible data for presentation modification reporting etc. using an application such as medical research application or bio sample tracking application . In the exemplary embodiment of the plurality of group resources are associated with cancer tests. The user can display or hide details associated with each of the plurality of group resources using icons associated with a tree view as known to those skilled in the art. The plurality of group resources may include one or more data extensions . Expanding the data tree for one or more of the plurality of group resources causes the one or more data extensions that have been previously added to that group resource to appear as the next level of the data tree. In the exemplary embodiment of the one or more data extensions can be associated with a user interface window presented to a user associated with the conduct of a cancer test group resource .

Selection of an add button after selection of a group resource such as first group resource of the plurality of group resources allows the user to create a new data extension which can be added to the selected group resource. With reference to a new extension window may be presented at display in response to selection of add button . New extension window includes an extension type drop down . The user selects an extension type using extension type drop down which most closely matches the desired data entry requirements for the new extension. In an exemplary embodiment a first field may be presented in which the user may select enter the kind of record to which the extension appears to limit the kind of record for which the record appears. Selection of a create button saves the extension as an instance of a class for example as an instance of an Attribute Configuration class in database and adds the extension to the data tree under the selected group resource. A new extension is created but no tabs or fields have yet been added to the new extension.

With reference to tabs and fields where data is collected for an extension can be created. Below first group resource is a list of extensions associated with first group resource which have been modified to include extensible data. In the exemplary embodiment of first group resource is associated with a pancreas test and the list of extensions includes a plurality of custom user interface windows. In the exemplary embodiment of a first extension associated with a medical event for surgery is selected as indicated through highlighting. In a second window one or more custom user interface items defined for first extension are shown using a tree view. In the exemplary embodiment of the one or more custom user interface items include a plurality of tabs. Below each of the plurality of tabs the user may display a list of data items added to the tab. In the exemplary embodiment of a tab includes a first data item titled ExamScore . An indicator indicates the data type for first data item .

Second window may include a copy button a paste button an add button and a remove button . Selection of add button allows the user to create a new tab or a new field depending on the selected item in second window . For example if a first tree level is selected by the user a subsequent selection of add button causes presentation of a third window . Third window includes a text field for entry of a tab name and radio buttons for layout generation. Radio buttons allow the user to select whether or not the tab generation is automatic or custom defined by the user. Selection of an Ok button closes third window and adds the tab extension to the one or more custom user interface items with the defined tab name. The tab extension is saved as an instance of a class such as an instance of an Attribute Container class in database .

If tab is selected by the user a subsequent selection of add button causes presentation of a fourth window shown with reference to in accordance with an exemplary embodiment. Fourth window may include an attribute name field a display name field a reporting name field a data type selector an Ok button and a cancel button . In the exemplary embodiment of data type selector is a plurality of radio buttons. Each radio button of the plurality of radio buttons is associated with a data type. Exemplary data types include a drop down menu in which the user specifies choices available for selection by the user a drop down menu in which the choices available for selection by the user are selected from a dictionary a Boolean a check box a date a date and time an integer a numeric value a string a text area a label a line and a group. Selection of Ok button closes fourth window and adds the field to the tree under tab with the attribute name defined in attribute name field and indicator indicating the selected data type. Attribute name field is stored as an instance of a class such as an Attribute class with Attribute Choice class instances for the individual dropdown choices. The display name defined in display name field appears on the edit screen for this field when presented for example in medical research application . Selection of cancel button closes fourth window but does not add the field to the tree under tab .

Selection of copy button copies a selected extension. A subsequent selection of paste button pastes a copy of the copied extension into a group resource for use as a starting point for designing a new extension. As a result the user can start with a similar extension as a template rather than having to design an extension from scratch.

With continuing reference to selection of a remove button allows the user to delete a tab or a field depending on the highlighted item in second window . Positioning of the field on the screen may be done using default positioning or X Y positioning. Using default positioning metabuilder application determines where to place the field on the edit screen. The default layout has a standard width and uses a default of three fields maximum in one row though this is merely exemplary. Using X Y positioning the user decides where to place the field on the edit screen. The fields are first added to the plurality of tabs or to tab . The user selects a View Refresh Layout button . A screen layout is presented from which the user can drag the controls into the desired placement. The user can also specify the field height and width. Screen layout is a mockup of what the screen will look like when presented to a user for data collection for example using medical research application .

A meta attribute model to support the extensible data may be represented as a Java package and be deployed as a Java archive JAR file. From a class perspective the meta attribute model includes two main aspects a definitional aspect i.e. a tag and a runtime aspect i.e. a value . The main definitional class is for an Attribute which identifies a piece of extensible data to be collected. The Attribute has a data type which defines the kind of value to be collected. The data types supported by the model include the data types selectable using data type selector .

The meta attribute model supports the generalized concept of attaching extensible data to any persistent object in an application such as medical research application or BST application . For example users can define extensible data for patients medical events tumors study enrollments pathology reports etc. In the model these objects are considered Attribute Contexts meaning they have a set of attributes extensible data associated with them. Different kinds of extensible data may be collected for the same Attribute Context. For example a medical event the Attribute Context may have a different set of extensible data depending on the event type. To represent a differing set of extensible data the model uses a class Attribute Configuration which represents a level at which a set of extensible data i.e. the Attributes is defined. Thus an Attribute Configuration class may be identified by its Attribute Context and other data set filters like the event type and a set of Attributes.

Attributes can be organized under a group attribute. This hierarchy allows a set of attributes to be represented as a row while the collection of rows represents the group attribute. For example a group attribute named Drain Info may include a drain in date and drain out date as child Attributes as shown below in Table 1.

In addition to describing the kind of extensible data to be collected the meta attribute model can describe the way that the user interface presents the extensible data. A class Graphical Attribute which is a subclass of Attribute represents the customizable user interface aspect of the Attribute. For example Graphical Attribute contains information about layout x y size width height and tab order. Graphical Attributes may be organized in Attribute Containers which include panels or tabs. The Graphical Attributes in the Attribute Container are organized automatically default positioning or if desired can be organized and sized based on a custom layout defined by the user X Y positioning . The appropriate attribute information is defined using metabuilder application . At runtime portions of an Altio defined window may be created dynamically based on the Attribute and Graphical Attribute data collected for an Attribute Configuration. For example with reference to a custom window is shown in accordance with an exemplary embodiment. The meta attribute model associated with creation of custom window is defined in Table 2. The attribute context defined as Medical Event and the event type defined as Surgery by the user form the window header as Surgery Medical Event .

At runtime the data in the meta attribute model is used to construct custom window . For example a configure on demand COD window can be rendered using the AltioLive suite of software developed by Altio. Altio s COD feature allows a backend command to generate XML at runtime that represents an Altio window. This XML is interpreted by Altio s Presentation Manager and rendered as a window in an Altio container which enables medical research application and or BST application to present a customized user interface based on the meta attribute data defined using metabuilder application . To utilize this feature a set of classes that closely model Altio s concept of a window is used to encapsulate the code needed to generate the requisite XML.

A high level class in a COD package contains a method or a set of methods for building the Altio window XML based on the Attributes organized in the Attribute Container or set of Attribute Containers. Only a portion of the window may be configurable. A COD application programming interface API performs the work of building the configurable portion of the screen and inserting it into the fixed XML that defines the standard part of the window created. When the user enters and saves data the data is stored as Attribute Values. The set of Attribute Values stored for a given Attribute Configuration are stored in an Attribute Value Set. Using this class hierarchy allows the attachment of Attribute Values to any persistent object in an application such as medical research application because the Attribute Value has no reference to its parent . Thus the association flows downward from the parent e.g. the Medical Event to its Attribute Value Set and subsequently to its Attribute Values.

In order to better support the various representations of values including the primitive data types as well as list selections an AttributeValue class has various subclasses which correspond to the different data types. Exemplary data types which correspond with data types included in data type selector include AttributeValueString AttributeValueLongText AttributeValueBoolean AttributeValueExtendedBoolean AttributeValueInteger AttributeValueNumeric AttributeValueDate AttributeValueDateTime AttributeValueChoice AttributeValueDictionary.

Run time data collected may be represented as indicated in Table 3 using a tag format as known to those skilled in the art.

In general each field on the configurable tabs of the window are captured as an AttributeValue. However multiple attribute values may be captured for a screen element. For example an Attribute may be defined as multi valued in which the user can select more than one value for the screen element. Typically this is used to define a multi select list such as a drop down menu from which multiple selections may be made. For example to capture different Allergies a patient may have a multi value Attribute as shown in Table 4 below 

As a second example attributes organized within a Group Attribute and entered as shown in Table 5. may be captured as shown in Table 6 

To generate extensible markup language XML for attribute values in a way that makes them appear as normal Java data members of the class the toXMLDocument may be overridden in the class that contains the Attribute Value Set. In the example code block the Patient.toXMLDocument method has been overridden.

Because this XML replaces the normal XML generation for an Attribute Value Set the Attribute Value Set getter method is excluded when generating the XML in the example code block below 

String queryString select attr from Attribute as attr WHERE attr.configurableContent.codeAttributeContext PAT 

The Attribute Value class may be Hibernate mapped so that making the values persist is a straightforward exercise. However access to each attribute value should be qualified by the name or identifier of the Attribute. For example a query in Hibernate query language HQL syntax when the flag isSmoker is represented in a traditional object oriented relational O R model is shown below.

The HQL syntax is in contrast to the query when isSmoker is represented as an Attribute Value as shown below.

The attribute name qualification may be defined using JOIN criteria and a value comparison may be achieved using a WHERE clause for two reasons. First in cases where the isSmoker value is returned it is important that rows not be eliminated from the result set for those patients that do not have an isSmoker attribute value. This may be accomplished by using a LEFT JOIN and applying the attribute name qualification using the join criteria. Use of the WHERE clause to perform the attribute name qualification may eliminate rows Second for complex selection criteria involving ANDs and ORs it is important that the parentheses reflect the order of evaluation for the value comparisons not the attribute name qualifications. By isolating the attribute name comparisons in the JOIN criteria the parentheses can be applied correctly to communicate the proper order of evaluation.

JOIN avs.attributeValues as avDiabetic WITH avDiabetic.attribute.attributeName isDiabetic WHERE avSmoker.valueString Y AND avDiabetic.valueString N 

The attribute value s data type is identified in the query. For example when querying a date a Hibernate property valueDate may be queried as shown in the example below.

The following list identifies the Hibernate property to query and the corresponding database table column 

The AttributeValueChoice and AttributeValueDictionary provide a mapping to a selection list. For example to find all Patients with allergy Pollen an Attribute Choice the HQL query may be formed as 

JOIN avs.attributeValues as av WITH av.attribute.attributeName allergy AND av.valueAttributeChoice.choice Pollen 

JOIN avs.attributeValues as av WITH av.attribute.attributeName allergy AND av.valueAttributeChoice.idAttributeChoice 521

When querying Attribute Values from a standard vocabulary AttributeValueDictionary the query has a similar form though the value is represented by a different Hibernate property.

JOIN avs.attributeValues as av WITH av.attribute.attributeName deathSource AND av.valueIdAttributeDictionary 1621

When querying attributes belonging to different Attribute Value Sets each attribute value set may be joined separately. For example if the user is searching for patients with particular surgery medical events attribute values and Followup medical event attribute values two different Attribute Configurations are queried. If the search involves looking for patients with a recoveryTimeinMinutes greater than an hour and a medicalComplication Pulmonary the search uses two different Attribute Value Sets. As a result the query joins each Attribute Value Set to avoid returning an empty set in which no medical event has both recoveryTimeinMinutes and medicalComplication as an attribute. The following query illustrates a search across two different Attribute Value Sets 

JOIN avsFollow.attributeValues as avFollow WITH avFollow.attribute.attributeName medicalComplication WHERE avsurg.valueInteger 60 AND avFollow.valueIdAttributeChoice 121

To evaluate an attribute name qualification with its value comparison an OR logical operator with selection criteria on attribute values can be used. Normally parentheses are used in a query to establish an order of operation. For example to find all patients where isSmoker Y OR is Diabetic Y the query may have the following form 

LEFT JOIN avs.attributeValues as avDiabetic WITH avDiabetic.attribute.attributeName isDiabetic WHERE avSmoker.valueString Y OR avDiabetic.valueString Y 

When Attribute Values organized under a Group Attribute are queried it may be necessary to restrict the query to meet the criteria of the attributes within a particular Group Attribute row . For example to find all patients with a drain that was placed and removed in the first week of September the query may match the attribute values for one Drain Info row . This is accomplished by adding the additional criteria which restricts attribute comparison to the same groupAttributeRowId as shown below.

WHERE avDrainIn.valueInteger between 9 1 2005 and 9 8 2005 AND avDrainOut.valueInteger between 9 1 2005 and 9 8 2005 AND avDrainIn.groupAttributeRowId avDrainOut.groupAttributeRowId

Medical research application and or BST application may utilize a Java aspect components framework for basic client server interactions but the atomic control of what and how a report is displayed may be controlled using a project specific XML configuration file and report specific classes local to the project and global to the environment. Reports may be described in an XML file i.e. report.xml for each project. The XML file may define the following report attributes a. a report s name description processing class output file name b. a query for the data in the report c. owners of a report d. permissions required to run view a report e. columns displayed on the report including their display order and column header names f. parameters collected for the report s query including the parameter captions and display order for the report query form data type information and specific dictionary query information if referencing dictionary data.

With continuing reference to selection of ad hoc reporting button may cause presentation of a report generation window shown with reference to in accordance with an exemplary embodiment. Report generation window extracts information from medical research application and or BST application including extensible data added to medical research application and or BST application using metabuilder application . Users can formulate and run database queries using report generation window which hides the technical aspects of composing relational database queries from the user. Report generation is accomplished using a set of browser based windows that run for example in the Altio user interface environment.

Report generation window provides a means for extracting information from medical research application and or BST application by building running and reusing custom queries. In general the user formulates a query by selecting report columns and applying filters or selection criteria for defining the data to be reported. Report generation window may include a query selection section and a query definition section . Query selection section may include a tree view which may include a personal query folder and a shared query folder . Personal query folder includes one or more query files . Similarly shared query folder may include one or more shared query file not shown . The list of reports presented using personal query folder and shared query folder may be read from a cached list or processed from an XML file if there have been changes to the XML configuration. The class receives an action parameter from a request telling it to return the report list. The report list displayed may be controlled based on ownership and permission criteria defined by the project and based on the current user. The user may add remove queries reports using add remove buttons .

Query definition section may include a query name text box a share query selector a query description text box a report column tab a filter tab a query path text box a query owner text box a run button and a save button . The user defines a name for identifying the query using query name text box . The name identifies the query in the one or more query files . Selection of share query selector adds the query to shared query folder . De selection of share query selector adds the query to personal query folder . The user can describe the query in more detail using the query description text box .

Report column tab may include add remove buttons a move up button a move down button a consolidate selector a tally and consolidate selector and a report column grid . The user may add remove columns to a report using the add remove buttons . The user may define an order for presentation of the columns in the report using move up button and move down button . Selection of move up button shifts the report column to the left and selection of move down button shifts the report column to the right. Selection of consolidate selector consolidates identical information into a single row of information in the query so that a list of unique records or values is displayed. Similarly selection of tally and consolidate selector consolidates identical information into a single row of information in the report. Additionally however selection of tally and consolidate selector causes an additional column to be added to the report showing the number of records that match the information displayed in that row. Thus the report includes a list of unique values with a count of how many times each unique value appears among the records included in the query. Report column grid may include a data path identifier column and a column name column . Data path identifier column defines the data path for the data item to be evaluated in the column of the report. Column name column defines the header for the column in the report generated.

The user executes the defined queries for each column to generate a report using run button . Selection of run button invokes a request to AdhocRunQuery.java which passes in the query definition defined in report column tab and in filter tab . The request is processed checking the ownership and permission criteria. The identified parameters are loaded into the requested report object and the resulting success page is set based on the format passed in the request. When the query is executed the results are returned in a grid. The user saves the defined queries for each column using save button for later execution or modification. An existing query can be copied and modified to define a new query definition. The defined queries associated with a report generation are included in personal query folder or shared query folder depending on the status of share query selector .

Selection of a query folder from personal query folder or shared query folder causes presentation of the current query information in query definition section . For example selection of a query folder from the one or more query files causes presentation of a first query definition section shown with reference to . Selection of query folder invokes a request to AdhocRunQuery.java which includes the report name and requests the query for the named report. Execution of first query definition section defines five columns of data . The data path parameters defined in data path identifier column are organized similarly to the display of a directory structure on a disk with a vertical line or pipe separating different levels or data groupings until the last item is reached which is the name of a field. As a result related elements are grouped together in directories and subdirectories. As rows are added to report column grid the data structure is represented much like files and folders are displayed in a computer file system.

With reference to selection of a query folder from the one or more query files causes presentation of a second query definition section . Filter tab may include add remove buttons and a filter grid . The user may add remove filters using the add remove buttons . Each row of filter grid defines a filter to be applied to data identified based on the query. Filter grid may include a boolean connector column a data path identifier column a comparator selection column and a comparison value column . Boolean connector column includes a selection for defining how to combine the filters defined by each row of filter grid . Boolean connectors include and and or . Similar to data path identifier column data path identifier column defines the data path for the data item to be evaluated using the filter. Comparator selection column defines a type of comparison performed by the filter such as greater than less than greater than or equal to less than or equal to equal to in not in etc. Comparison value column defines a value s to which to compare the data item using the parameter defined in the corresponding comparator selection column .

User selection of an add button of the add remove buttons may cause presentation of an add report column window shown with reference to . Add report column window may include a select query path section and a column header section . Select query path section may include a query path window and a property window which present a user with two tree components that are used to select the data path and that allow the user to compose complex query paths by drilling down into a folder structure. Query path window includes one or more path folders which represent an object in the data model. For example in the exemplary embodiment of query path window includes a path folder for a Patient object. The user double clicks on a folder in query path window such as path folder in order to drill down into a data path. The user can continue to drill down into the data path until presented with a list of available report columns included in property window . Each available report column in property window represents an actual property table column of the data model. The user double clicks on a report column to add it to the report. Additionally the user may enter a report column header name in a text field not shown presented in column header section .

User selection of an add button of the add remove buttons may cause presentation of an add filter window shown with reference to . Adding a filter works much the same way as adding a report column. Add filter window may include a select query path section and a comparison section . Select query path section may include a query path window and a property window which present a user with a first tree component and a second tree component that are used to select the data path and that allow the user to compose complex query paths by drilling down into a folder structure. First tree component includes one or more path folders which represent an object in the data model. For example in the exemplary embodiment of first tree component includes a first path folder for a Patient object a second path folder for a Breast Patient object and a third path folder for a Diagnoses object. The user double clicks on a folder in first tree component in order to drill down into a data path. The user can continue to drill down into the data path until presented with a desired list of available filter data items in property window . Each available filter data column in property window represents an actual property of the data model. The user selects the appropriate filter data column from the desired list of available filter data items . The column selected represents the property on which filter criteria will be applied. The user selects a comparator type from a comparator drop down field of comparison section . Comparator drop down field describes how values in the field should be compared with the value s entered as a test for each record s inclusion in the query. The user selects and or enters a value or values if applicable in a value field of comparison section . The data in the specified field for each record is compared to the value s entered in value field based on the selected comparator type to determine inclusion in the query. The type of data entry field of value field may differ based on the comparator type selected in comparator drop down field . For example if the comparator type is greater than value field may be text box which allows the user to enter a numeric value. If the comparator type is in value field may be a drop down box which allows the user to select a plurality of parameters which define a set. Additional controls may be added to allow the user to add or remove items from the defined set.

The exemplary embodiments may be implemented as a method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer to implement the disclosed embodiments. The term computer readable medium can include but is not limited to magnetic storage devices e.g. hard disk floppy disk magnetic strips . . . optical disks e.g. compact disk CD digital versatile disk DVD . . . smart cards flash memory devices etc. Additionally it should be appreciated that a carrier wave can be employed to carry computer readable media such as those used in transmitting and receiving electronic mail or in accessing a network such as the Internet or a local area network LAN .

The foregoing description of exemplary embodiments of the invention have been presented for purposes of illustration and of description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed and modifications and variations are possible in light of the above teachings or may be acquired from practice of the invention. The functionality described may be implemented in a single executable or application or may be distributed among modules that differ in number and distribution of functionality from those described herein. Additionally the order of execution of the functions may be changed depending on the embodiment. The embodiments were chosen and described in order to explain the principles of the invention and as practical applications of the invention to enable one skilled in the art to utilize the invention in various embodiments and with various modifications as suited to the particular use contemplated. It is intended that the scope of the invention be defined by the claims appended hereto and their equivalents.

