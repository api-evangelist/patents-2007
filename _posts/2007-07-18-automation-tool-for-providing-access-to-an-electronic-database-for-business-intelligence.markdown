---

title: Automation tool for providing access to an electronic database for business intelligence
abstract: A method for providing access to an electronic database for business intelligence is provided. The method includes receiving a request to create a new universe to interface with the electronic database to access the electronic database for business intelligence, receiving an input of a first set of universe details to populate the new universe, executing at least a first application macro to populate the new universe with the received first set of universe details by calling a business intelligence application to create the new universe with the populated first set of universe details; and providing the created new universe as a metadata layer that interfaces with the electronic database to provide access to the electronic database.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07831630&OS=07831630&RS=07831630
owner: Accenture Global Services Limited
number: 07831630
owner_city: Dublin
owner_country: IE
publication_date: 20070718
---
There exist a number of software tools or suites that support queries and accesses to data warehouses such as electronic databases residing in servers and the like to provide business intelligence to businesses. As referred herein business intelligence includes applications and technologies that work together to collect provide access to and analyze data and information about operations of a business or any other desired entity. Thus a company can implement a business intelligence software application in its operations to obtain a more comprehensive knowledge of the factors affecting their business such as metrics i.e. data measurements on sales production human resources and other internal operations to enable the company to make better business decisions. Examples of commercially available business intelligent software applications include but are not limited to BusinessObjects of Business Objects S.A. Paris France MicroStrategy 8 of MicroStrategy Inc. McLean Va. and Hyperion Intelligence of Hyperion Solutions Corp. Santa Clara Calif.

A business intelligence software or application hereinafter BI application typically includes multiple components for providing report creation data viewing and data distribution in one or more databases of interest. To that effect a BI application creates a metadata layer also known as a universe to interface with a database in order to map everyday business terms to the data stored in the database. The universe simplifies the processes of creating reports viewing data and distributing data by providing an easy way to see and understand the data.

Conventionally to create a universe for interfacing with a database a template is initially created to prepare and capture the low level design specifications of the universe based on the data in the database of interest. Once the low level design specifications are prepared and captured the BI application may be used to develop or create a universe based on the low level design specifications. However the conventional approach to developing a universe takes a significant amount of time and requires knowledgeable information technology IT professionals because components of the universe classes objects etc. must be manually defined in a universe window as provided by the BI application with reference to the prepared low level design specifications. Thus once the universe design specifications are written most of the universe creation activities are manually intensive and time consuming. Accordingly the conventional approach is costly and causes a company to delay implementation of business intelligence to better manage its operations in the fast paced world.

For simplicity and illustrative purposes the principles of the embodiments are described by referring mainly to examples thereof. In the following description numerous specific details are set forth in order to provide a thorough understanding of the embodiments. It will be apparent however to one of ordinary skill in the art that the embodiments may be practiced without limitation to these specific details. In other instances well known methods and structures have not been described in detail so as not to unnecessarily obscure the embodiments.

Described herein are methods and systems that provide an automation tool for using a BI application to create develop or document a metadata layer or universe for accessing data in a database of interest. Once deployed this automation tool provides substantial time and cost savings over the conventional systems and methods for universe development.

The BI automation tool is also operable to automatically document an existing universe in a data file such as an electronic spreadsheet hereinafter spreadsheet file so as to simplify future maintenance of the universe via access to the universe documented file. Examples of spreadsheet programs or applications that may be used by the BI automation tool include but are not limited to Microsoft Excel and Lotus Improv .

The BI application typically provides or exposes a set of application programming interfaces APIs through an available software development kit SDK whereby the BI automation tool is operable to take advantage of the SDK and APIs therein to interact with the BI application and access stored data in a universe that has been created with such a BI application . Accordingly in one embodiment a single BI automation tool may be programmed or coded using the provided SDK to access the APIs of any desired number of commercially available BI applications to access universes created by such BI applications. In another embodiment a separate BI automation tool may be programmed or coded to access the APIs of each particular BI software application. In this alternative embodiment an operator may employ a different BI automation tool to access a universe created by a corresponding BI software application.

As referred herein a database such as the database is a structured collection of records or data that is stored in a electronic storage space such as a computer readable medium CRM so that such data may be queried retrieved or accessed. Examples of a CRM include a hard disk drive a removable storage drive representing a floppy diskette drive a magnetic drive a compact disk drive a flash drive e.g. USB drive and the like. Other examples of a CRM include ROM read only memory EPROM erasable programmable ROM EEPROM electrically erasable programmable ROM or any other electronic optical magnetic or other storage or transmission device capable of storing electronic data and providing a processor or processing unit with computer readable or electronic type instructions.

As also referred herein a universe such as the universe is a metadata layer or database interface that is logically situated above the database to provide an interface to the database. The universe maps everyday common terms to the data in the database through the creation of data classes and objects in the universe for the data structures such as data tables in the database . Objects represent fields in a database table or other data structure classes are logical groupings of objects and the universe is a collection of classes. Thus the universe simplifies the process of querying accessing and retrieving the structured collection of records or data in the database by providing automatic joins between the database tables based on predetermined key values or parameters.

The computer system includes one or more processors such as processor providing an execution platform for executing software. Thus the computerized system includes one or more single core or multi core processors of any of a number of computer processors such as processors from Intel AMD and Cyrix. As referred herein a computer processor may be a general purpose processor such as a central processing unit CPU or any other multi purpose processor or microprocessor. A computer processor also may be a special purpose processor such as a graphics processing unit GPU an audio processor a digital signal processor or another processor dedicated for one or more processing purposes. Commands and data from the processor are communicated over a communication bus or through point to point links with other components in the computer system .

The computer system also includes a main memory where software is resident during runtime and a secondary memory . The secondary memory may also be a CRM as described earlier that may be used to store software programs applications or modules for the BI automation tool the BI application the universe the database or any combination thereof. Thus the CRM is operable to store software programs applications or modules that implement the methods as described later. The main memory and secondary memory and an optional removable storage unit each includes for example a CRM. The computer system includes a display connected via a display adapter user interfaces comprising one or more input devices such as a keyboard a mouse a stylus and the like. However the input devices and the display are optional. A network interface is provided for communicating with other computer systems via for example a network.

At when an operator clicks on the button for a request to get or retrieve a standard design specifications template or universe template for detailing a universe the BI automation tool receives the request for a standard universe template.

At in response the BI automation tool proceeds to create or generate a standard blank universe template with predefined cell formats wherein universe details or low level design specifications may be entered. Each universe template corresponds to the particular BI application being used to create the universe. For example if the BI application is the BusinessObjects business intelligence application then the BI automation tool includes one or more spreadsheet macros that are executed to create or generate a blank standard universe template that is specific for use with the BusinessObjects business intelligence application. Thus the BI automation tool may further prompt the operator to select a desired template from a list of available standard universe templates in the case where BI automation tool is operable with different BI applications. In one example the standard universe template is a spreadsheet workbook with predefined cell formats where details of a universe may be stored such as multiple worksheets of classes objects tables joins conditions contexts and hierarchies.

The classes worksheet stores class names for the universe that are created to group objects found in the database . The objects worksheet is used to store data elements or fields and their associated data tables. These objects are to be used to construct queries on the database and to return with the corresponding queried values. The tables worksheet includes a listing of all data tables found in the database . The joins worksheet includes joins between the database tables based on key values or parameters. The conditions worksheet stores conditions that may be defined by a universe designer to help the business or reporting user to easily create reports on data stored in the database . The contexts worksheet stores defined paths for database queries to execute whereby each path is defined as a collection of joins. For example when database tables A B C are all connected or joined to each other and a report query is created with tables A and C two paths or contexts may be defined in the contexts worksheet to get to table A and C namely A B C and A C. The hierarchies worksheet stores the hierarchies to be defined in the universe. For example a time hierarchy is Year Quarter Month Week Day. These hierarchies are defined in the universe for better reporting. For example when a time hierarchy is defined a user is able to see a report with sales revenue or other items of interest for each year and the user may further see the sales revenues broken up by Quarters Month Week and Day.

At once a standard universe template is retrieved or created in response to the operator s request the BI automation tool prompts the operator to save the retrieved template.

At the BI automation tool receives a request or instruction from the operator to save the retrieved template whereby the BI automation tool saves the retrieved template in an electronic storage location or space such as a CRM. This template may be subsequently used by the operator or others to create a file compiled of universe details that include low level design specifications arranged in the predefined cell format for use to create a universe or modify a universe by the BI automation tool as further described later.

Referring to at when an operator clicks on the button for a request to reverse engineer an existing universe the BI automation tool receives the request.

At in response the BI automation tool prompts the operator to select or identify a universe such as the universe from a list of available universes that are of record to and accessible by the BI automation tool . The available universes may have been previously created by the operator or others via one or more selected BI applications in a manner known in the art and the BI automation tool is operable to call on the selected BI application s through a set of APIs provided by the SDK of the BI application. For example the BI application is the BusinessObjects business intelligence application and the BI automation tool is operable to call on the BusinessObjects application through the APIs provided by the SDK of such a BusinessObjects application.

At once the operator selects a universe such as the universe to reverse engineer the BI automation tool proceeds to access the selected universe through the aforementioned APIs provided by the BI software application that was used to create the selected universe to retrieve universe details from the selected universe . For example the BI automation tool includes one or more spreadsheet macros that are executed to use the APIs provided by BusinessObjects application to capture the complete details of all the classes objects joins tables conditions contexts and hierarchies used in the selected universe which was created by the BusinessObjects application. The spreadsheet macro also writes the captured universe details into respective worksheets to populate a new spreadsheet workbook which may be based on a universe template such as the standard template noted earlier. The BI automation tool also prompts the operator to document the selected universe by saving the populated new spreadsheet workbook.

At the BI automation tool receives a request or instruction from the operator to document the selected universe whereby for example the BI automation tool saves the new spreadsheet workbook as a spreadsheet file in an electronic storage location or space such as a CRM. Once the universe is documented in a file such as a spreadsheet file future maintenance correcting updating amending creating another universe etc. of the universe is simplified via access to the documented file as further described later with reference to the universe creating and updating functionalities .

At when an operator clicks on the button for a request to create a new universe the BI automation tool receives the request.

At in response the BI automation tool prompts the operator to select the desired universe details or low level design specifications to populate the new universe. The universe details may be stored in a file such as a spreadsheet file. For example the BI automation tool prompts the operator to select a spreadsheet file that contains the desired universe details for creating the new universe. The file may be one that was previously documented through reverse engineering an existing universe as described above with reference to . Alternatively the file may be one that was previously created to include all the desired universe details by the operator or others whereby the file was created with a template generated as described with reference to above.

At once the BI automation tool receives the selected universe details it proceeds to populate a blank universe with a pre defined connection to the database of the operator s choice using the SDK and APIs therein of a desired BI software application . The blank universe is populated via its corresponding template that is provided by the BI automation tool . For example the BI automation tool includes one or more application macros such as spreadsheet macros that are executed to retrieve the universe details from a user selected spreadsheet file to retrieve a template that corresponds with the blank universe and to populate the blank universe with a pre defined connection to the database with the retrieved universe details based on the retrieved template through use of APIs to the BusinessObjects application as provided by its SDK . Accordingly the application macro of the BI automation tool calls on the BusinessObjects application to create a new universe by populating the blank universe with the universe details retrieved by the macros.

At upon the operator s request or instruction the BI automation tool saves the newly populated universe for use to interface with the database . For example the BI automation tool retrieves the created universe from the BusinessObjects application and saves it in an electronic storage space such as a CRM in the database or anywhere else that is accessible by the BI automation tool .

At when an operator clicks on the button for a request to modify or update an existing universe the BI automation tool receives the request.

At in response the BI automation tool prompts the operator to select the desired universe details to update an existing universe. The universe details may be stored in a file such as a spreadsheet file. For example the BI automation tool prompts the operator to select a spreadsheet file that contains the desired universe details for updating the existing universe. The file may be one that was previously documented through reverse engineering an existing universe as described above with reference to and such a file may have been subsequently modified. Alternatively the file may be one that was previously created and populated with all the desired universe details by the operator or others such as a corresponding spreadsheet file that was used to initially create the existing universe as described above with reference to and subsequently modified. Thus the operator may desire to modify or update the existing universe to reflect the modifications in the corresponding file of universe details. Accordingly the BI automation tool allows an operator to easily modify or update an existing universe by modifying or updating the corresponding file of universe details for the existing universe. The BI Automation tool then automates the rest of the process by calling on the BI application to modify the existing universe with the modified universe details. This is in contrast to the conventional time consuming process of requiring the operator to actually employs the BI application to enter the modified universe details and generate a modified universe.

At once the BI automation tool receives the selected universe details it further prompts the operator to select or identify an existing universe from a list of available universes as described earlier with reference to to update.

At once the operator selects a universe to update the BI automation tool proceeds to update the selected universe with the selected universe details. Again for example the BI application is the BusinessObjects business intelligence application and the BI automation tool is operable to call on the BusinessObjects application through APIs provided by the SDK of such a BusinessObjects application. In this example the BI automation tool includes one or more spreadsheet macros that are executed access the APIs of the BusinessObjects application to call on such a BI application to update the selected universe with the selected universe details.

At upon the operator s request the BI automation tool saves the updated universe for use to interface with the database . It should be noted that the method for updating an existing universe is similar to the method for creating the universe except for the fact that updating an existing universe is often faster than creating an entirely new one because the BI automation tool does not need to create universe details in an existing universe that need not be updated from the selected universe details for updating.

At when an operator clicks on the button for a request to delete all components or details of an existing universe the BI automation tool receives the request.

At in response the BI automation tool prompts the operator to select or identify a universe from a list of available universes as described earlier with reference to from which to delete all components.

At one the BI automation tool receives the selected universe to delete all components therein it proceeds as instructed to delete all the components for example classes tables joins objects conditions contexts and hierarchies components. Again for example the BI application is the BusinessObjects application and the BI automation tool is operable to call on the BusinessObjects application through APIs provided by the SDK of such a BusinessObjects application. In this example the BI automation tool includes one or more spreadsheet macros that are executed to access the APIs of the BusinessObjects application to delete all components of the selected universe. Universe design is an iterative process. Thus once a user employs the BI automation tool to create a universe the user may desire to re create the universe with new or additional design specifications by deleting all components of a selected universe or begin anew with a blank universe.

At once all the universe components have been deleted the BI automation tool provides a message indicating that the selected universe is now blank and optionally asks the operator whether he or she would like to save the blank universe.

At upon receiving the operator s request or instruction to save the blank universe the BI automation tool saves the blank universe as a file in an electronic storage location or space such as a CRM for subsequent access as desired. This blank universe may be subsequently used in method for create a new universe.

In summary the various embodiments of the BI automation tool as described herein enable designers of database universes to create update and maintain database universes with ease through time saving and cost saving features such as the use of spreadsheet macros in conjunction with software development kits available from commercially available business intelligence software applications.

What has been described and illustrated herein is an embodiment along with some of its variations. The terms descriptions and figures used herein are set forth by way of illustration only and are not meant as limitations. Those skilled in the art will recognize that many variations are possible within the spirit and scope of the subject matter which is intended to be defined by the following claims and their equivalents in which all terms are meant in their broadest reasonable sense unless otherwise indicated.

