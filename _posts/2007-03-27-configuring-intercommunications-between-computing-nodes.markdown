---

title: Configuring intercommunications between computing nodes
abstract: Techniques are described for configuring intercommunications between multiple computing nodes, such as multiple virtual machine nodes hosted on one or more physical computing machines or systems. In some situations, virtual networks may be established and maintained for groups of computing nodes, such as those operated by or on behalf of various users. Such virtual networks may be established in some situations by automatically configuring various communication manager modules to associate communications from a computing node belonging to a virtual network with one or more networking identifiers associated with the virtual network, such that other communication manager modules may appropriately forward or otherwise process such communications.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08055789&OS=08055789&RS=08055789
owner: Amazon Technologies, Inc.
number: 08055789
owner_city: Reno
owner_country: US
publication_date: 20070327
---
The following disclosure relates generally to configuring intercommunications between computing nodes such as by establishing virtual networks that include virtual machines executing on physical computing systems.

Data centers housing significant numbers of interconnected computing systems have become commonplace such as private data centers that are operated by and on behalf of a single organization as well as public data centers that are operated by entities as businesses. For example some public data center operators provide network access power and secure installation facilities for hardware owned by various customers while other public data center operators provide full service facilities that also include hardware resources made available for use by their customers. However as the scale and scope of typical data centers has increased the task of provisioning administering and managing the physical computing resources has become increasingly complicated.

The advent of virtualization technologies for commodity hardware has provided a partial solution to the problem of managing large scale computing resources for many customers with diverse needs allowing various computing resources to be efficiently and securely shared between multiple customers. For example virtualization technologies such as those provided by VMWare XEN or User Mode Linux may allow a single physical computing machine to be shared among multiple users by providing each user with one or more virtual machines hosted by the single physical computing machine with each such virtual machine being a software simulation acting as a distinct logical computing system that provides users with the illusion that they are the sole operators and administrators of a given hardware computing resource while also providing application isolation and security among the various virtual machines. Furthermore some virtualization technologies are capable of providing virtual resources that span one or more physical resources such as a single virtual machine with multiple virtual processors that actually spans multiple distinct physical computing systems.

While the availability of data centers and virtualization technologies has provided various benefits various problems still exist. For example one problem that arises in the context of data centers that virtually or physically host large numbers of applications for a set of diverse customers involves providing network isolation for the applications hosted for each customer such as to allow communications between the computing systems executing a customer s applications while restricting undesired communications between those computing systems and other computing systems e.g. computing systems hosted for other customers computing systems external to the data center etc. . One traditional approach to providing network isolation in such situations has focused on providing dedicated physical networks to each customer such as a physical network that includes multiple computing systems interconnected via one or more networking switch hub and or bridge devices. Such dedicated networks may provide the desired network isolation for the computing systems of each customer but come at considerable cost in terms of network design implementation and provisioning. In particular changes to the number and or type of computing systems deployed by each customer may entail significant changes to the physical networking infrastructure used to connect those systems. Such problems may be exacerbated in the context of virtual hosting environments where hardware virtualization allows for highly dynamic flexible reconfiguration of computing environments. Providing dedicated physical networks to each customer in a virtual hosting environment may accordingly eliminate many of the benefits of virtual hosting such as the ability to dynamically reconfigure the computing environment to meet customer demand data center administrative needs etc.

Thus it would be beneficial to provide techniques that allow intercommunications between computing systems to be dynamically configured as well as to provide other benefits.

Techniques are described for configuring intercommunications between multiple computing nodes such as to provide network isolation for communications between selected nodes in a configurable manner. In at least some embodiments the computing nodes may be physical computing systems and or virtual machines that are each hosted on one or more physical computing systems and the intercommunications may include transmissions of data e.g. messages packets frames streams etc. between computing nodes over one or more networks. In addition in some embodiments at least some of the computing nodes are part of a program execution service for executing multiple programs on behalf of multiple users of the service such as a program execution service that uses multiple computing systems on multiple physical networks e.g. multiple physical computing systems and networks within a data center . In at least some embodiments the described techniques are automatically performed by an embodiment of a System Manager module as described in greater detail below.

In some embodiments intercommunications between computing nodes are configured by establishing virtual networks between selected computing nodes such that access to at least some communications from and or to the nodes of a particular virtual network are limited to other computing nodes that belong to the virtual network. In this manner network isolation may be achieved for computing nodes that belong to a virtual network even if those computing nodes are part of physical networks with other computing systems that are not part of the virtual network. In some cases such virtual networks may be established via the operation of one or more communication manager modules executing on host physical computing systems and or on networking devices. In particular in some embodiments configuring intercommunications between multiple computing nodes includes configuring one or more communication manager modules so that a selected computing node becomes associated with a particular virtual network such as when that selected computing node begins to execute one or more software programs that will exchange communications associated with that virtual network. For example when a particular computing node begins to execute one or more software programs on behalf of a user who is a customer of the program execution service and that customer user also has other software programs executing on other computing nodes the new computing node executing the customer s program s may be selected to be associated with a virtual network for the customer. The configured communication manager modules will manipulate communications from a selected computing node so as to reflect its associated virtual network such that computing nodes on other virtual networks do not gain access to those communications. In addition the configured communication manager modules may also forward communications from other computing nodes on that virtual network to the selected computing node as appropriate.

Furthermore in at least some embodiments at least some virtual networks may each use two or more distinct networking protocols for communications on the virtual network. For example for a computing node selected to be part of a virtual network a first networking protocol may be utilized to associate communications from the selected computing node with the virtual network for purposes of transport over a local physical network e.g. a local Ethernet based network possibly managed by a switch or other networking device to which the selected computing node belongs such as by using a first networking identifier based on the first networking protocol that is associated with the virtual network. A networking protocol that operates at layer two the Data Link layer of the seven layer Open Systems Interconnection OSI Basic Reference Model may be used for the physical network such as for example a networking protocol that uses tags based on the Virtual Local Area Network VLAN protocol. Additional details related to the VLAN protocol are discussed as part of the IEEE Institute of Electrical and Electronics Engineers 802.1Q standard. A second networking protocol may then be used to associate communications with the virtual network for purposes of transport over one or more interconnection networks that connect the first physical network with other physical networks that have one or more computing nodes that are part of the virtual network such as a networking protocol that operates at layer three the Network layer of the seven layer OSI Basic Reference Model or by using a mix of layer 2 and layer 3 functionality sometimes referred to as layer 2.5 . For example a distinct second networking identifier based on the second networking protocol that is also associated with the virtual network may be used for forwarding communications over the interconnection network s . One example of a networking protocol that may be used over one or more interconnection networks is by use of Label Switch Path LSP labels based on the Multi Protocol Label Switching MPLS protocol. In addition each of the other physical networks may similarly use a layer 2 and or layer 3 networking protocol for communications associated with the virtual network whether the same as the first networking protocol or a distinct third or more networking protocol. By using various networking protocols that are appropriate for transport of communications over various kinds of networks a virtual network may be established that efficiently and logically spans multiple and different kinds of networks.

As noted above one or more communication manager modules may be configured so that a selected computing node becomes associated with a particular virtual network. Furthermore in at least some embodiments multiple communication manager modules may operate in a coordinated manner to establish multiple virtual networks that each includes a number of intercommunicating participant computing nodes. Such communication manager modules may include virtual machine communication manager modules also referred to as virtual machine manager modules that each execute on a host physical computing system to manage the communications by the physical computing system such as communications by multiple virtual machines executing on the physical computing system. Communication manager modules may further operate as part of networking devices such as routers bridges and or switches such as to identify control and manipulate intercommunications between computing nodes associated with various physical and or virtual networks. In particular as part of provisioning a virtual machine on a first host physical computing system to execute one or more software programs the virtual machine communication manager module for the first host computing system may be configured to associate that virtual machine and its communications with the particular virtual network. For example if the virtual machine is associated with a first virtual network that uses a first networking protocol for the local physical network e.g. a first VLAN tag specific to the first virtual network the virtual machine communication manager module may associate that first VLAN tag with communications sent by that virtual machine and may similarly forward received communications having that first VLAN tag to that virtual machine. At the same time that virtual machine communication manager module may similarly support one or more other virtual machines on the first host physical computing system that are associated with a distinct second virtual network that uses a distinct second VLAN tag. In addition a networking device on the same physical network with the first host physical computing system may be configured to associate communications with the first VLAN tag with a second networking protocol for the first virtual network and may be configured to associate communications with the second VLAN tag with another networking protocol for the second virtual network. The configuration and operation of such communication manager modules is discussed in greater detail below.

As previously noted in some embodiments a program execution service executes third party customers programs using multiple physical computing systems e.g. in one or more data centers that each host multiple virtual machines with each virtual machine being able to execute one or more programs for a customer. In such situations the described techniques may be used by one or more communication manager modules executing as part of the program execution service to control communications to and from the programs of each customer. In some embodiments customers may provide programs to be executed to the execution service as discussed in greater detail below and may reserve execution time and other resources on physical or virtual hardware facilities provided by the execution service. In addition customers may define virtual networks that will be used by the program execution service so as to transparently provide computing nodes of the virtual network with the appearance of operating on a dedicated physical network.

In some embodiments at least some of the described techniques are performed by a System Manager module for an embodiment of a program execution service PES such as by coordinating the configuration of communication manager modules to support virtual networks for virtual machines hosted by the PES. For example the System Manager module may receive an indication of a virtual machine on a target physical computing system that is part of one of multiple physical networks of the PES. The System Manager module may then determine a virtual network with which the virtual machine is to be associated. After determining the virtual network associated with the virtual machine the System Manager module then initiates configuration of a virtual machine communication manager module for the target physical computing system to associate the virtual machine with the virtual network. Furthermore the System Manger module may further configure one or more other networking devices to support the virtual network such as on the physical network of the target physical computing system and or as part of an interconnection network that connects multiple physical networks.

For illustrative purposes some embodiments are described below in which specific types of computing nodes networks intercommunications and configuration operations are performed. These examples are provided for illustrative purposes and are simplified for the sake of brevity and the inventive techniques can be used in a wide variety of other situations some of which are discussed below.

The data center includes a number of physical computing systems and a System Manager module of the program execution service. In this example each physical computing system includes a virtual machine VM Manager module and one or more virtual machines such as VM Manager module and virtual machines executing on computing system . In other embodiments at least some physical computing systems at the data center may not host any virtual machines and instead may directly execute one or more software programs on behalf of a customer of the program execution service. The data center further includes multiple networking devices such as switches edge routers and core routers . Switch is part of a physical network that includes physical computing systems and is connected to edge router . Switch is part of a distinct physical network that includes physical computing systems and a computing system providing the PES System Manager and is connected to edge router . The physical networks established by switches in turn are connected to each other and other networks e.g. the global internet via an interconnection network which includes the edge routers and the core routers . The edge routers provide gateways between two or more networks. For example edge router provides a gateway between the physical network established by switch and the interconnection network . Edge router provides a gateway between the interconnection network and global internet . The core routers manage communications within the interconnection network such as by forwarding packets or other data transmissions as appropriate based on characteristics of such data transmissions e.g. header information including source and or destination addresses protocol identifiers etc. and or the characteristics of the interconnection network itself e.g. routes based on network topology etc. .

The illustrated PES System Manager module performs at least some of the described techniques in order to configure intercommunications between the virtual machines hosted by the physical computing systems . As described in more detail elsewhere intercommunications may be configured so as to be associated with virtual networks. The associating of virtual machines with virtual networks and the establishing of those virtual networks may include configuring of virtual machine manager modules e.g. VM manager and or networking devices e.g. edge router . In some cases at least some of the networking devices may also or instead automatically learn and or self configure such that only some communication manager modules e.g. VM managers and or routers need be configured by the PES System Manager in order to cause network configuration information for a particular virtual network to automatically propagate over the various networks to the appropriate communication manager modules.

In the illustrated example computing systems are each hosting two executing virtual machines and a virtual machine manager module. In particular computing system hosts Virtual Machine Manager module VM Manager and virtual machines having virtual machine identifiers VM IDs 1.1 and 1.2 respectively. Computing system hosts VM Manager and virtual machines having VM IDs 2.1 and 2.2 respectively. Computing system hosts VM Manager and virtual machines having VM IDs 3.1 and 3.2 respectively. In addition each virtual machine is illustrated as belonging to a virtual network. In particular virtual machines belong to virtual networks X Z Y X Z and Z respectively. In other embodiments some virtual machines may belong to zero or multiple virtual networks.

In this example each VM Manager includes groups of network configuration information respectively. Each network configuration information group includes a mapping between virtual machine identifier ID and a networking identifier Tag . In the illustrated embodiment the virtual machine manager module on a particular host associates communications originating from each virtual machine on that host with the appropriate networking identifier so that the communications may be accordingly identified and processed by networking devices and or other virtual machine manager modules. Associating a communication with a network identifier may be performed in various ways such as by marking labeling tagging encapsulating or otherwise modifying the communication such that the communication includes an indication of the networking identifier. In some embodiments this may include modifying or supplementing header information utilized to direct the communication over the network e.g. an Ethernet header IP header TCP header etc. . In the illustrated embodiment the virtual machine manager module on each host computing system tags communications originating from each virtual machine on that host with the networking identifier associated with that virtual machine. The tagged communications are then forwarded over the physical network and processed by downstream networking devices and or other virtual machine manager modules as will be explained in more detail below.

Each networking device includes network configuration information respectively. The network configuration information maintained by networking devices serves a purpose similar to that of the network configuration information maintained by the virtual machine manager modules. In the illustrated example the network configuration information maintained by networking devices provides a mapping between virtual network indicators V net networking identifiers associated with communications for purposes of transport over physical networks Tag and networking identifiers associated with communications for purposes of transport over the interconnection network Label . Networking devices may associate networking identifiers with communications as those communications are transported over the interconnection network so that they may be efficiently routed by any core routers not shown of the interconnection network and or forwarded only to routers that provide gateways to networks having nodes that also belong to the virtual networks associated with those networking identifiers.

Utilizing two types of networking identifiers such as tags and labels in the illustrated embodiment may provide various advantages. For example such an approach may decouple the implementation of virtual networking on the various physical networks. For example communication manager modules on separate physical networks may make independent decisions as to tag selection thereby simplifying virtual network management and implementation. In essence a separate tag namespace is created for each physical network such that nodes on the same virtual network but on different physical networks may be associated with the same or different tags without compromising performance or risk of tag collision or mismatch. For example in the illustrated example virtual machines VM ID 1.2 and VM ID 3.1 are both members of virtual network Z but respectively use physical network tags T and T as shown in network configuration information and . In this example for the sake of simplicity each virtual network is shown as using a single label through the interconnection network e.g. virtual network Z is shown using label L but in other embodiments multiple distinct labels or other networking identifiers may be used for a single virtual network in different portions of the interconnection network.

The types of networking identifiers used and techniques for associating and disassociating such networking identifiers with machine communications are described in more detail by various networking standards. The illustrated embodiment for example uses Virtual Local Area Network VLAN tags at Layer 2 i.e. the Data Link layer of the Open Systems Interconnection OSI protocol stack as networking identifiers for purpose of establishing virtual networks over physical networks. In addition the illustrated embodiment uses Multi Protocol Label Switching MPLS labels at OSI Layer 3 i.e. the Network layer together with Border Gateway Protocol BGP as a routing protocol for purposes of establishing virtual networks over interconnection networks. Other approaches are contemplated based on various other network virtualization standards and techniques such as IPSEC IP Security L2TP Layer 2 Tunneling Protocol PPTP Point to Point Tunneling Protocol IP in IP Encapsulation GRE Generic Routing Encapsulation IPv6 Internet Protocol version 6 VPLS Virtual Private LAN Services Generic Routing Encapsulation GRE etc.

In the illustrated embodiment virtual network Z is established and maintained by configuring virtual machine manager modules and or networking devices to associate networking identifiers with communications originating from members of the virtual network such that those communications can be appropriately forwarded by various networking devices and or virtual machine manager modules. For example a communication originating with virtual machine and destined for virtual machine and or will be associated with tag T as specified by network configuration information by VM Manager prior to being forwarded over the physical network connecting computing system and networking device . After networking device receives the communication it will disassociate the communication from tag T and associate the communication with label L as specified by network configuration information for purposes of transport over the interconnection network to networking device . Networking device will not forward the communication to any other systems or devices such as computing system or networking device because there are no members of virtual network Z in those regions of the network. After networking device receives the communication it will disassociate the communication from label L and associate the communication with tag T as specified by network configuration information for purposes of transport over the physical network connecting networking device and computing system . When computing system receives the communication it forwards the communication to VM Manager which then disassociates the communication from tag T and forwards it to virtual machine and or depending for example on whether the communication was directly addressed to one of those virtual machines or was a broadcast communication. Communications originating with virtual machine or and destined for virtual machine will be processed similarly by the illustrated system. It will be appreciated that communications over such a virtual network may have various forms in various embodiments. For example some embodiments may support broadcast transmissions that are forwarded to all computing nodes that are part of a virtual network unicast transmissions that are forwarded to a single destination computing node on a virtual network and or multicast transmissions that are forwarded to an indicated group of multiple destination computing nodes on a virtual network. In addition communication manager modules may be configured to ignore e.g. not forward received communications that are not intended for destination computing nodes associated with the communication manager module. For example if VM Manager module receives a communication from networking device that is not intended for virtual machines or or other virtual machines hosted on computing system not shown the module may determine to ignore the received communication.

As described with reference to virtual network Y is established and maintained by appropriately configuring virtual machine manager modules and or networking devices. For example a communication originating with computing system and destined for virtual machine will be associated with tag T by a networking module not shown of computing system prior to being forwarded over the physical network connecting computing system and networking device . After networking device receives the communication it will disassociate the communication from tag T and associate the communication with label L as specified by network configuration information for purposes of transport over the interconnection network to networking device . Although the intercommunication between computing system and networking device is here described in terms of the same networking protocol used to implement a virtual network over physical networks inside of the data center it is possible that a third networking protocol may be used in cases where a virtual network is to be extended over networks that are not local to or administered by the data center.

Networking device will not forward the communication to any other systems or devices such as networking device because there are no members of virtual network Y in those regions of the network. After networking device receives the communication it will disassociate the communication from label L and associate the communication with tag T as specified by network configuration information for purposes of transport over the physical network connecting networking device and computing system . When computing system receives the communication it forwards the communication to VM Manager which disassociates the communication from tag T and forwards it to virtual machine . Communications originating with virtual machine and destined for computing system will be processed similarly by the illustrated system.

In this example communications between virtual machines and will be processed in a manner similar to that described with reference to above. The extent of virtual network X in this example however is limited to the physical network connecting networking device with computing systems and . Because all members of virtual network X are on the same physical network there are no communications for members of the virtual network that will be transported over interconnection network . Accordingly the network configuration information need not include an entry for a label associated with virtual network X. While not illustrated here a networking switch that is not part of the interconnection network may instead interconnect computing systems and and if so the communications forwarded for virtual network X may never even reach the networking device

In some cases however members of a virtual network may desire to communicate with nodes that are not members of the virtual network. For example virtual machine may attempt to communicate with a node accessible via the internet e.g. a Web server . Such capability may be provided by one or more networking devices that associate and or disassociate communications with networking identifiers as appropriate as well as provide other services such as address translation e.g. routers providing network address translation functionality .

The PES System Manager computing system functions to manage the configuration of virtual networks within the data center as well as to provide other functions related to the provisioning initialization and execution of programs within the program execution service. The PES System Manager computing system includes a CPU various I O components storage and memory . The I O components include a display network connection computer readable media drive and other I O devices e.g. a mouse keyboard etc. .

The host computing system functions to host one or more virtual machines such as to execute programs on behalf of various customers. The host computing system includes a CPU I O devices storage and memory . A virtual machine manager module and one or more virtual machines are executing in the memory . The structure of the other host computing systems is similar to that of host computing system . In a typical arrangement data center may include hundreds or thousands of host computing systems such as those illustrated here organized into a large number of distinct physical networks.

An embodiment of a PES System Manager module is executing in memory . In some embodiments the PES System Manager may receive an indication of a virtual machine to be executed on host computing system . The PES System Manager may then determine a virtual network associated with the indicated virtual machine based on for example a customer identity associated with the virtual machine and or other factors. In some cases the structure and or membership of various virtual networks may be provided by the virtual machine provisioning database which stores information related to the physical and virtual resources e.g. networking hardware etc. associated with various customers and or executing virtual machines. The PES System Manager may then determine a first networking identifier based on a first networking protocol for the virtual network and a second networking identifier based on a second networking protocol for the virtual network as described in more detail with reference to . The PES System Manager may then configure virtual machine manager module to associate communications from the indicated virtual machine with the first networking identifier so as to associate such communications with the determined virtual network for purposes of transport over the physical network used by host computing system to communicate with other host computing systems and or the network . The PES System Manager may then configure networking device and or to associate communications from members of the determined virtual network with the second networking identifier so as to associate such communications with the determined virtual network for purposes of transport over network . In other embodiments rather than having the PES System Manager determine first and or second networking identifiers for a virtual network one or more communication manager modules may instead determine one or both such networking identifiers. For example virtual machine manager modules may instead determine first networking identifiers to use whether directly or in conjunction with communication manager modules associated with networking devices.

It will be appreciated that computing systems and and networking devices and are merely illustrative and are not intended to limit the scope of the present invention. For example computing system may be connected to other devices that are not illustrated including through one or more networks external to the data center such as the Internet or via the World Wide Web Web . More generally a computing node or other computing system may comprise any combination of hardware or software that can interact and perform the described types of functionality including without limitation desktop or other computers database servers network storage devices and other network devices PDAs cellphones wireless phones pagers electronic organizers Internet appliances television based systems e.g. using set top boxes and or personal digital video recorders and various other consumer products that include appropriate intercommunication capabilities. In addition the functionality provided by the illustrated modules and systems may in some embodiments be combined in fewer modules or distributed in additional modules. Similarly in some embodiments the functionality of some of the illustrated modules may not be provided and or other additional functionality may be available.

It will also be appreciated that while various items are illustrated as being stored in memory or on storage while being used these items or portions of them can be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively in other embodiments some or all of the software modules and or systems may execute in memory on another device and communicate with the illustrated computing system via inter computer communication. Some or all of the modules systems and data structures may also be stored e.g. as software instructions or structured data on a computer readable medium such as a hard disk a memory a network or a portable media article to be read by an appropriate drive or via an appropriate connection. The systems components and data structures may also be transmitted as generated data signals e.g. as part of a carrier wave or other analog or digital propagated signal on a variety of computer readable transmission mediums including wireless based and wired cable based mediums and can take a variety of forms e.g. as part of a single or multiplexed analog signal or as multiple discrete digital packets or frames . Such computer program products may also take other forms in other embodiments. Accordingly the present invention may be practiced with other computer system configurations.

The illustrated embodiment of the routine begins at block where it receives a request related to a virtual machine. In this embodiment the request may be received from various sources internal or external to the program execution service e.g. a remote customer computing system requesting execution of one or more virtual machines . In block the routine determines the type of request received.

If it is determined in block that the request is to associate the virtual machine with one or more virtual networks the routine continues with block . In block the routine associates the virtual machine with one or more virtual networks. Such an association may include for example storing a mapping between a particular virtual machine provided or used by a customer with a particular virtual network. Such associations may be established prior to or during the execution of the virtual machine. For example in one embodiment a customer may provide a virtual machine image to be executed at some future time and in such cases the customer may also request that the virtual machine image be associated with some virtual network used by the customer. In other embodiments a registered virtual machine image may be automatically assigned to a virtual network based on various criteria such as customer identity an organizational entity e.g. a branch department group division etc. virtual machine function e.g. Web server database server application server etc. protocol type e.g. HTTP SSL IP UDP etc. physical and or virtual identifiers e.g. virtual machine identifier IP and or MAC addresses etc. etc. For example in some embodiments a given customer or organization can specify a virtual network for use with one group of virtual machines provided by or operated for that customer and that virtual network can be decomposed into further virtual networks based on the communication protocols used by the virtual machines so that for example all HTTP transmissions are transported on a virtual network that is separate from another virtual network used to transport VoIP Voice Over IP transmissions. The association may be stored in the virtual machine provisioning database of or a similar data store.

If it is determined in block that the request is to notify the routine of initialization of a virtual machine the routine continues with block . In block the routine identifies a host computing system that has an associated physical network and that is to provide the virtual machine. In some embodiments this routine may dynamically determine a host computing system to use for purposes of execution based on various factors such as load balancing network allocation etc. In other embodiments selection of a host computing system may be performed by other modules of the program execution service and communicated to this routine as part of the received request.

In block the routine determines a virtual network associated with the virtual machine. This may include accessing a database such as the virtual machine provisioning database of in order to obtain information regarding previously associated virtual networks as described with reference to block above.

In block the routine initiates configuration of a virtual machine manager module associated with the identified host computing system to use the virtual network for the virtual machine. Initiating configuration of the virtual machine manager module may include notifying the virtual machine manager module of the identity of the virtual machine and the virtual network associated with the virtual machine. In this embodiment many other operations related to the implementation or use of the virtual network are left to the virtual machine manager module as described in more detail with reference to below. However in other embodiments this routine may perform at least some of those operations such as selecting one or more networking identifiers e.g. tags labels etc. that may be used to associate communications on the associated physical network with the virtual network.

In block the routine initiates configuration of one or more networking devices to use the virtual network. This may include sending management messages to one or more routers and or switches to inform such devices of the existence of the virtual network the identity of the virtual machine and or any networking identifiers to use. In other embodiments such information may be automatically propagated throughout the network automatically by operation of virtual machine manager modules switches routers and or other networking components. In addition in at least some embodiments at least some of the previously discussed configuring of virtual machine manager modules networking devices that connect a physical network to an interconnection network and or networking devices internal to an interconnection network may be performed in advance of associating particular virtual machines with particular virtual networks. For example some or all of the interconnection network may be pre configured to associate particular labels or other networking identifiers with particular virtual networks that are not yet in use or a virtual machine manager module for a physical computing system on a physical network may be pre configured to associate a particular first networking identifier for the physical network with a particular virtual machine that may later be hosted on the computing system. If so associating a virtual machine to a new virtual network may merely involve configuring one or more communication manager modules to use a first networking identifier and or second networking identifier for which one or more physical networks and or interconnection networks are already configured to use.

If it is determined in block that the request is to perform some other operation the routine continues with block . Other operations may include for example removing or eliminating virtual networks disassociating a virtual machine from one or more virtual networks notifications related to the operation of the virtual machine e.g. shutdown restart etc. etc. In block the routine performs the indicated operation as appropriate. For example if the request included a notification that a virtual machine shut down the routine may reclaim networking identifiers used to implement a virtual network associated with that virtual machine so long as no other members of the virtual network continue to execute.

After blocks and the routine continues with block and determines whether to continue and if so continues to block to await the next request. If not the routine terminates in block . The routine may determine not to continue execution when for example it receives a shutdown or restart notification.

The illustrated embodiment of the routine begins at block where it receives an outgoing transmission incoming transmission or a management message. In this embodiment an outgoing transmission is a communication sent by a virtual machine that is resident e.g. executing on the host computing system managed by this routine. An incoming transmission is a communication sent by some computing node to a virtual machine or program that is resident on the host computing system managed by this routine. Management messages may include messages related to the set up and or tear down of virtual networks as well as operation of virtual machines generally e.g. to initiate execution of a virtual machine to shut down a virtual machine etc. . In block the routine determines the type of transmission or message received.

If it is determined in block that an outgoing transmission has been received the routine continues with block . In block the routine identifies a virtual machine that is the source of the outgoing transmission. Identifying the virtual machine that is the source of the outgoing transmission may be accomplished by inspecting addressing information e.g. in a packet header that includes a source and destination address associated with the transmission.

In block the routine identifies a virtual network associated with the identified virtual machine. Identifying the virtual network associated with the identified virtual machine may include inspecting or otherwise accessing a network configuration database maintained by the virtual machine manager module or some other component on the host computing system and used to store network configuration information such as is described with reference to which includes associations e.g. mappings between virtual machines and virtual networks. In addition such a network configuration database may include a networking identifier e.g. a tag that may be used for purposes of associating the transmission with the identified virtual network.

In block the routine associates the outgoing transmission with a networking identifier used with the identified virtual network. Associating the outgoing transmission with the networking identifier may include marking tagging labeling encapsulating or otherwise modifying the data transmission so that it may be identified as being associated with the virtual network. For example if the transmission is a packet then the header of the packet may be modified or augmented with the networking identifier.

In block the routine forwards the outgoing transmission. Forwarding the outgoing transmission includes sending or otherwise transmitting it onto a physical network used by the host computing system to communicate with other nodes such as by providing the packet to a network driver or interface to be transmitted via a network interface device e.g. an Ethernet card .

If it is determined in block that an incoming transmission has been received the routine continues with block . In block the routine identifies a virtual network associated with the incoming transmission. The virtual network may be identified by inspecting addressing information associated with the incoming transmission. For example if the incoming transmission is a packet the packet header may include a networking identifier such as one applied by a remote virtual machine manager module and or networking device. The networking identifier can then be associated with the appropriate virtual network such as by inspecting or accessing the network configuration database.

In block the routine identifies a destination virtual machine associated with the incoming transmission. The destination virtual machine may be identified by inspecting addressing information as described in more detail with reference to block above. For example if the incoming transmission is a packet the packet header may include a destination address e.g. an IP address a MAC address etc. of a virtual machine. In some cases the incoming transmission may be a broadcast transmission in which case the routine will identify all of the virtual machines on the host computing system as destination virtual machines.

In block the routine determines whether the destination virtual machine belongs to the identified virtual network and if so continues with block . By performing this check the routine may assure that destination virtual machines only receive transmissions that have been correctly associated with a virtual network that is associated with the destination virtual machine. For example if the incoming transmission was a broadcast packet the packet should only be delivered to those virtual machines belonging to the virtual network identified in the broadcast packet. In block the routine forwards the incoming transmission to the destination virtual machine or machines. Forwarding the incoming transmission may include providing data associated with the transmission to the virtual machine such as by placing a packet or packet contents into a network queue. Typically a networking identifier utilized to associate the transmission with a virtual network will be stripped prior to forwarding so that the existence of the virtual machine is transparent to the destination virtual machine.

If it is instead determined in block that the destination virtual machine does not belong to the identified virtual network the routine continues with block . In block the routine drops the incoming transmission. As noted above this operation assures that only correctly addressed transmissions are forwarded to their respective destinations so as to enforce the proper operation of the established virtual networks.

If it is determined in block that a management message has been received the routine continues with block . In block the routine performs an operation responsive to the management message as appropriate. The received management message may be for example an instruction to associate a virtual machine with a particular virtual network. Such a management message may be received from for example the PES System Manager routine of . In response this routine may perform various operations such as updating the network configuration database as appropriate selecting networking identifiers to utilize for the virtual network and or initiating configuration of other networking devices e.g. sending a management message to a router or a switch to configure the device to recognize and properly process transmission associated with the virtual network . Other types of management messages may also be received and processed such as requests to disassociate a given virtual machine with a particular virtual network or requests related to the general operation of virtual machines on the host computing system e.g. to initiate execution of a virtual machine to shut down a virtual machine etc. .

After blocks and the routine continues with block and determines whether to continue and if so continues to block to await the next transmission or management message. If not the routine terminates in block .

The illustrated embodiment of the routine begins at block where it receives an outgoing transmission incoming transmission or a management message. An outgoing transmission is a communication sent by a virtual machine via a physical network and destined for one or more nodes that are reachable via the interconnection network and or via that physical network. An incoming transmission is a communication sent by some communicating node via the interconnection network to a virtual machine that is resident on a host computing system reachable via one of the physical networks accessible via the networking device. Management messages include messages related to the set up and or tear down of virtual networks notification of routing information e.g. related to dynamic updates of network topology etc. In block the routine determines the type of transmission or message received.

If it is determined in block that an outgoing transmission has been received the routine continues with block . In block the routine identifies a virtual network associated with the outgoing transmission. The virtual network associated with the outgoing transmission may be identified based on addressing information associated with the outgoing transmission. For example if the outgoing transmission is a packet sent by a virtual machine manager module such as the one described with reference to the packet will include a networking identifier e.g. a tag that associates the packet with a particular virtual network. Then by inspecting a network configuration database maintained by the networking device the routine can determine the virtual network associated with the packet as discussed in more detail with respect to .

In block the routine associates the outgoing transmission with an internetworking identifier used with the identified virtual network. As discussed with reference to some embodiments will use a first type of networking identifier e.g. a tag to associate communications with a virtual network for purposes of transport over a physical network and a second type of networking identifier e.g. a label for purposes of transport over an interconnection network. In this block the routine determines a networking identifier that may be associated with the transmission as it is forwarded to the interconnection network. The networking identifier may be determined based on the virtual network identified in block such as by looking up the virtual network in the network configuration database to find an associated label as described with reference to . Associating the outgoing transmission with the internetworking identifier may include first stripping any networking identifiers e.g. tags used to transport the transmission over the physical network to the networking device. Then the transmission may be labeled encapsulated or otherwise modified so that it may be identified as being associated with the virtual network as it is transported over the interconnection network.

In block the routine forwards the outgoing transmission to an interconnection network by for example providing the transmission to a networking interface connected to the interconnection network.

If it is determined in block that an incoming transmission has been received the routine continues with block . In block the routine identifies virtual and physical networks associated with the incoming transmission. Because an incoming transmission will typically have been forwarded to this routine by another similarly configured networking device the virtual network can generally be identified by inspecting the data transmission such as by examining header information associated with a packet to identify a networking identifier that is associated with a virtual network in the network configuration database maintained by the networking device executing this routine. The physical network associated with the incoming transmission is the destination physical network associated with the destination virtual machine as indicated by network topology information e.g. a routing table maintained by the networking device executing this routine. In some cases multiple physical networks may be identified for example if the incoming transmission is a broadcast transmission for all members of a virtual network and different members of the virtual network are associated with distinct physical networks accessible via this networking device.

In block the routine associates the incoming transmission with a physical networking identifier used with the identified virtual and or physical networks. Here any networking identifiers used to transport the transmission over the interconnection network are stripped from the transmission and then networking identifiers that will be used to transport the transmission over the identified physical network or networks are associated with the transmission.

In block the routine forwards the incoming transmission to the identified physical network by for example providing the transmission to an appropriate networking interface connected to the identified physical network.

If it is determined in block that a management message has been received the routine continues with block . In block the routine performs an operation responsive to the management message as appropriate. As noted above management messages may be related to set up or tear down of virtual networks resulting in adjustments or other changes to the network configuration database maintained by the networking device.

After blocks and the routine continues with block and determines whether to continue and if so continues to block to await the next transmission or management message. If not the routine terminates in block .

In addition various embodiments may provide mechanisms for customer users and other users to interact with an embodiment of the program execution service for purpose of configuring intercommunications between various virtual machines and or other programs. For example some embodiments may provide an interactive console e.g. a client application program providing an interactive user interface a Web browser based interface etc. from which users can manage the creation or deletion of virtual networks and the specification of virtual network membership as well as more general administrative functions related to the operation and management of hosted applications e.g. the creation or modification of user accounts the provision of new applications the initiation termination or monitoring of hosted applications the assignment of applications to groups the reservation of time or other system resources etc. . Additional details related to the operation of example embodiments of a program execution service with which the described techniques may be used are available in U.S. application Ser. No. 11 394 595 filed Mar. 31 2006 and entitled Managing Communications Between Computing Nodes and U.S. application Ser. No. 11 395 463 filed Mar. 31 2006 and entitled Managing Execution of Programs by Multiple Computing Systems both of which are incorporated herein by reference in their entireties.

In addition some embodiments may provide an API application programming interface that allows other computing systems and programs to programmatically invoke at least some of the described functionality. Such APIs may be provided by libraries or class interfaces e.g. to be invoked by programs written in C C or Java and or network service protocols such as via Web services.

Those skilled in the art will also realize that although in some embodiments the described techniques are employed in the context of a data center housing multiple physical machines hosting virtual machines and or in the context of a program execution service other implementation scenarios are also possible. For example the described techniques may be employed in the context an organization wide network or networks operated by a business or other institution e.g. university for the benefit of its employees and or members. Alternatively the described techniques could be employed by a network service provider to improve network security availability and isolation. In addition example embodiments may be employed within a data center or other context for a variety of purposes. For example data center operators or users that sell access to hosted applications to customers may in some embodiments use the described techniques to provide network isolation between their customers applications and data software development teams may in some embodiments use the described techniques to provide network isolation between various environments that they use e.g. development build test deployment production etc. organizations may in some embodiments use the described techniques to isolate the computing resources utilized by one personnel group or department e.g. human resources from the computing resources utilized by another personnel group or department e.g. accounting or data center operators or users that are deploying a multi component application e.g. a multi tiered business application may in some embodiments use the described techniques to provide functional decomposition and or isolation for the various component types e.g. Web front ends database servers business rules engines etc. . More generally the described techniques may be used to virtualize physical networks to reflect almost any situation that would conventionally necessitate physical partitioning of distinct computing systems and or networks.

Those skilled in the art will also appreciate that in some embodiments the functionality provided by the routines discussed above may be provided in alternative ways such as being split among more routines or consolidated into fewer routines. Similarly in some embodiments illustrated routines may provide more or less functionality than is described such as when other illustrated routines instead lack or include such functionality respectively or when the amount of functionality that is provided is altered. In addition while various operations may be illustrated as being performed in a particular manner e.g. in serial or in parallel and or in a particular order those skilled in the art will appreciate that in other embodiments the operations may be performed in other orders and in other manners. Those skilled in the art will also appreciate that the data structures discussed above may be structured in different manners such as by having a single data structure split into multiple data structures or by having multiple data structures consolidated into a single data structure. Similarly in some embodiments illustrated data structures may store more or less information than is described such as when other illustrated data structures instead lack or include such information respectively or when the amount or types of information that is stored is altered.

From the foregoing it will be appreciated that although specific embodiments have been described herein for purposes of illustration various modifications may be made without deviating from the spirit and scope of the invention. Accordingly the invention is not limited except as by the appended claims and the elements recited therein. In addition while certain aspects of the invention are presented below in certain claim forms the inventors contemplate the various aspects of the invention in any available claim form. For example while only some aspects of the invention may currently be recited as being embodied in a computer readable medium other aspects may likewise be so embodied.

