---

title: Dynamic user interface elements
abstract: A set of rules and a current context for a user is obtained. The set of rules and the current context are used to determine a rule weight for each of a set of user interface elements. One or more of the user interface elements is caused to be displayed. Which user interface elements are displayed is based at least in part on the rule weights.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07917859&OS=07917859&RS=07917859
owner: Adobe Systems Incorporated
number: 07917859
owner_city: San Jose
owner_country: US
publication_date: 20070921
---
In computer applications a list of user interface UI elements accomplishing various functionality are often shown at the same place for example the same window menu frame tab or pane. In typical applications displays of UI elements are limited in their usefulness to various users. Therefore improvements in the display of UI elements would be useful.

The invention can be implemented in numerous ways including as a process an apparatus a system a composition of matter a computer readable medium such as a computer readable storage medium or a computer network wherein program instructions are sent over optical or communication links. In this specification these implementations or any other form that the invention may take may be referred to as techniques. A component such as a processor or a memory described as being configured to perform a task includes both a general component that is temporarily configured to perform the task at a given time or a specific component that is manufactured to perform the task. In general the order of the steps of disclosed processes may be altered within the scope of the invention.

A detailed description of one or more embodiments of the invention is provided below along with accompanying figures that illustrate the principles of the invention. The invention is described in connection with such embodiments but the invention is not limited to any embodiment. The scope of the invention is limited only by the claims and the invention encompasses numerous alternatives modifications and equivalents. Numerous specific details are set forth in the following description in order to provide a thorough understanding of the invention. These details are provided for the purpose of example and the invention may be practiced according to the claims without some or all of these specific details. For the purpose of clarity technical material that is known in the technical fields related to the invention has not been described in detail so that the invention is not unnecessarily obscured.

The space for displaying UI elements is often limited. In addition the display of UI elements in a usable manner is desirable. As such in some embodiments which UI elements are displayed and the order or rank in which the UI elements appear varies based on the importance of value of each UI element. The value of a UI element could be dependent on how important the application user assesses the UI element to be or how valuable or important the application designer assesses the UI element to be. An application user might prefer an application to show the UI elements so that more important features are more prominent. By contrast in some applications UI elements are ranked in a static manner by either the application designer the application user or both.

As used herein a UI element can include a tab menu menu item icon text and tool tip text. In some embodiments selecting e.g. clicked on with a keyboard mouse touchpad or other pointing device a UI element causes an action or function to be performed. The action could include opening a window or dialog box opening a webpage performing an edit sharing or emailing a file or image etc. As used herein UI element can also refer to the functionality associated with a UI element such as a Photo Book Photo Calendar Photo Collage Online Gallery Slideshow Flipbook etc.

A method of ranking UI elements in a dynamic manner is disclosed. Unlike ranking UI elements in a static manner when ranking UI elements in a dynamic manner a set of rules is obtained to determine the ranking for a given user context where the context could include one or more of the locale of the user the time and date age of the user statistics associated with the user and or other users etc.

For example for a digital photo application e.g. Adobe Photoshop Elements a rule may include selectively displaying and highly ranking a creating Christmas card UI element when the application is used during the Christmas season and not displaying the creating Christmas card UI element otherwise. In contrast in a static system the application designer hard codes UI elements so that the same UI elements are always displayed.

In the example shown in a server is coupled to one or more clients through a network such as a public or private network and or combination thereof for example the Internet an Ethernet serial parallel bus intranet Local Area Network LAN Wide Area Network WAN or any other forms of connecting multiple systems and or groups of systems together.

The set of rules may be provided by either the computer on which the application is run client or by a server computer server . In various embodiments the client could be one or more of a portable device laptop computer mobile telephone personal digital assistant PDA digital music player e.g. MP3 player etc. In some embodiments an application associated with the UI elements is installed locally on client e.g. the application is a desktop application. In some embodiments an application associated with the UI elements is stalled remotely on server e.g. the application is a web application. In some embodiments the application itself keeps generating or modifying rules based on user actions for example showing the most frequently used UI element or last used UI element most prominently.

In some embodiments server determines a ranking of UI elements for an application user on client based on a set of rules and provides the ranking stored in a file to the application on client . In some embodiments the server provides a set of rules to the application on client whereby the application determines the ranking on client . In some embodiments if there is an update to the rules the server provides a subset of rules that have changed differential set of rules to client to conserve resources between server and client . In various embodiments the rules ranking and or differential set of rules is provided by a plugin or any other appropriate means for transferring information. In some embodiments a plugin has the intelligence to compute the ranking. In some embodiments rules are transferred by a file a plugin or other modes of transferring information including Hypertext Transfer Protocol HTTP File Transfer Protocol FTP Representational State Transfer REST Extensible Markup Language XML Hypertext Markup Language HTML and JavaScript Object Notation JSON .

Any UI elements in the More Options button are partially obscured to a user. In some embodiments less important UI elements are associated with the More Options button . By activating More Options button an additional menu shows menu items subset including options to order prints order third party photo greeting cards or items and menu items subset including options to create greeting cards optical disc jackets labels layouts menus and flipbooks.

By activating the More Options button an additional menu shows menu items subset including options to create greeting cards optical disc jackets labels layouts menus and flipbooks.

In comparing and the same application ranking UI elements in a dynamic manner gives a different ranking for the US user than it does for the Japanese user. In this example the application recognizes the different context for the US user and the Japanese user and ranks the UI elements differently within the UI element pane. In particular 

At step an application obtains a set of rules. In some embodiments the set of rules is stored on server client or device . In some embodiments the set of rules is stored in memory or in a file.

A variety of context and rank parameters may be used in various embodiments. Other examples of parameters include usage information such as popularity among a group of users or a particular user . For example if the popularity is over 75 give it a weight of 10. The popularity may be determined based on server statistics such as the number of times that UI element has been selected.

Another example is how recently a UI element has been used. For example the more recently used the higher the weight it is given. Other example parameters include age of the user or other user profile information tagging information etc. Rules and parameters can be added by an administrator and or customized by the user. Rules and parameters can be added manually or automatically. For example based on usage statistics new rules may be automatically added to the list and existing rules could be edited.

Accuracy is a metric that indicates on how accurately the rule applies to demographics or other marketing information. In some embodiments accuracy is a percentage between 0 and 100 inclusive. For the example of the digital photo application the rule author believes that 80 of users would find the Greeting Card UI element useful at all locations for all age ranges of users between December 15 and January 5 of every year. The rule author may have for example obtained this statistic based on marketing research.

Weight is a relative metric that indicates how important the rule is with respect to the selective display and ranking of the UI element. Weights do not require an upper or lower bound. In some embodiments weight is an integer between 10 and 10 inclusive and the greater the weight the higher the relative ranking. In some embodiments a rule with negative weight indicates that its corresponding UI element should not be displayed. For the example of the digital photo application to always hide a US Only Print Service UI element in Japan the rule author assigned a weight of 10 to the corresponding rule. For example a new feature that marketing would like to promote may be given a higher weight.

At step the set of rules is used to determine a ranking. In some embodiments dynamic parameters are used to determine the ranking.

In contrast to rank parameters dynamic parameters are dynamically calculated. One dynamic parameter is a current context metric current context a metric calculated based on whether the application the machine it is running on and the application user currently satisfy all the corresponding context parameters. In some embodiments current context is a Boolean value of 0 or 1.

For the example of the digital photo application if the application is running on Apr. 30 2007 the machine is located in the US and the user is sixteen years old then the current context of the rules shown would be 0 for the Christmas Chinese New Year in Korea and Hide Print Service in Japan rules and 1 for the Graduation and New Marketing Service rule.

Another dynamic parameter is a rule weight metric rule weight . In some embodiments a rule weight is a value used to determine which UI elements to display and or a ranking of UI elements. In some embodiments the rule weight is a metric calculated by multiplying other parameters to select which UI elements are to be displayed and to determine a ranking for the UI elements to be displayed. For example the rule weight is calculated as follows rule weight accuracy weight current context

In some embodiments a positive rule weight indicates that the corresponding UI element should be displayed if its rule weight is high enough and a zero or negative rule weight indicates that the UI element should be hidden or not displayed . In some embodiments a higher rule weight indicates that the corresponding UI element should be displayed more prominently e.g. higher or larger in size than other UI elements in the UI element pane.

For the example of the digital photo application if the application is running on Apr. 30 2007 the machine is located in the US and the user is sixteen years old then the rule weight of the rules shown would be 0 for the Christmas Chinese New Year in Korea and Hide Print Service in Japan rules. The rule weight of the Graduation rule would be 80 and the rule weight of the New Marketing Service rule would be 800.

In some embodiments a particular UI element may correspond to multiple rules. For example in the rules table of the Christmas rule and the Chinese New Year in Korea rule both correspond to a Greeting Card UI element. In this case the rule weights are summed to determine a net weight and that net weight is used to determine the ranking for the Greeting Card UI element.

In various embodiments the current context and rule weight are recalculated at fixed or variable intervals and or event triggered. As a result the UI element pane may be reconfigured dynamically as the user runs the application. In some embodiments the current context and rule weight is recalculated each time the user starts the application. In some embodiments the current context and rule weight is recalculated when a server downloads a revised set of rules or a differential set of rules to client .

In various embodiments any of the rules may be overridden either manually or automatically. For example if Koda print service is planning a maintenance shut down from 2 am 3 am on a particular date then a corresponding UI element may be given a rule weight of 1 during that time period. In some embodiments an administrator can manually adjust the rule weight for the Koda print service rule or this can be automatically performed e.g. via a script . Alternatively a particular user may decide that he never wants to use Koda print service and can manually override having the Koda print service rule. For example if according to the rules and the context for this user a Koda print service button would appear as the top button if the user desires to override this e.g. the user wants to make the button appear lower or not at all a user interface may be provided for this purpose. In some embodiments the user interface may cause the rule weight to be adjusted accordingly so that the button appears where the user desires or does not appear .

At step the application selectively displays the UI elements based on the ranking. The ranking may be used to display the UI elements in a variety of ways in various embodiments. In one example the UI elements are displayed as follows All UI elements that have a negative net weight are not displayed. Of the remaining UI elements the five with the highest net weight are displayed vertically from top to bottom ordered based on their net weights e.g. buttons in . The remaining UI elements are displayed when a More Options button is selected e.g. menu items or in . The menu items may be ordered based on the net weights or other criteria e.g. alphabetically in various embodiments. Depending on the implementation step may be performed by a server client and or device.

Other examples of ways in which the ranking can be used to display the UI elements include displaying the UI elements in different orders from left to right from top to bottom diagonally etc. displaying UI elements in varying sizes e.g. the higher the rank the larger the button and or using different UI elements for different rankings e.g. buttons for the 3 highest ranked UI elements menu items for the next 10 highest ranked UI elements and don t display the rest of the UI elements .

In some embodiments at or after step when the selective displaying and ranking of UI elements have been determined the CreationList is filled ignoring any UI elements of negative rank 

Although the foregoing embodiments have been described in some detail for purposes of clarity of understanding the invention is not limited to the details provided. There are many alternative ways of implementing the invention. The disclosed embodiments are illustrative and not restrictive.

