---

title: System diagnostics with dynamic contextual information of events
abstract: A network device and a method for monitoring operational messages is described. The method comprises monitoring an occurrence of an operational message of the network device, and storing dynamic context information at the time that the operational message occurred. The stored dynamic context information is then associated with the operational message. The operational message (e.g., a syslog message) may be stored together with the dynamic context information in a metalog memory and may comprise a snapshot of a procedure stack, the procedure stack including information indicative of a sequence of procedure invocations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07752504&OS=07752504&RS=07752504
owner: Cisco Technology, Inc.
number: 07752504
owner_city: San Jose
owner_country: US
publication_date: 20070531
---
The present disclosure relates generally to system diagnostics particularly to system diagnostics in a computer network.

System or event messages are usually automatically generated when specific events occur during operation of a computer system or computer network. Usually the most useful system or event messages are those generated when an error occurs in a system or network. In a network the system or event messages are typically syslog messages.

A syslog message may often provide important information to diagnose error conditions in a network. However in many cases situations are encountered in which a problem is indicated by a syslog message but the information that is provided with the syslog message does not provide sufficient information about what caused it. Network users often require assistance from Technical Assistance Centers TAC or help desks with diagnostics that involve such messages. In such cases information about the dynamic context under which the message occurred is helpful specifically information about what processing occurred at the network device when the message was generated as similar messages are often generated from very different processing paths within the device. Knowing the processing or procedure stack when a particular message was generated may therefore be of value however by the time diagnostics occurs and a particular syslog message is recognized as being crucial the state may of the system have changed some time ago. Turning on debug level messages in many cases provides the necessary information but it generates too much traffic for real world operations and reproducing the exact same error condition and turning on debug only for that duration may not be practical and convenient.

In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of example embodiments. It will be evident however to one skilled in the art that the present embodiments or other embodiments may be practiced without these specific details.

In an example embodiment there is provided a method comprising monitoring occurrence of an operational message of a network device storing dynamic context information at the time that the operational message occurred and associating the stored data with the operational message.

In instances where the network device is a router the network device may be operable to link at least two networks together e.g one being network A . Network A may be a packet switched network and may form part of the Internet. Instead network A may be a circuit switched network public switched data network or the like. It is to be appreciated that network A may include systems of linked computers or like devices. The system may include a plurality of networks but only network A is shown for ease of explanation.

The system may further include an administrator of network A and a network Helpdesk or a TAC Technical Assistance Center operable to interface with the network device and also with the administrator over a communications network . The communications network may be a packet switched network and may form part of the Internet. Instead the communications network may be a circuit switched network public switched data network telephony network e.g. a POTS network or the like. The administrator may be operated by human operators. Alternately the administrator may be or be operated by an automated computer system. The administrator may be any user of network A .

In accordance with an example embodiment network device may be operable to send system or event messages typically syslog messages to the administrator when an event such as a fault or error occurs in the network A or in the network device shown by way of example in . Although the syslog messages notify the administrator of the fault or error in the network A or the network device they often do not provide adequate information if any as to the cause of the error or the dynamic real time state or context of network A or the network device at the time when the syslog message was generated. If more information regarding the generation of a received syslog message is required the recipient of the syslog message the administrator may communicate with the network helpdesk or TAC via the communications network to query the received syslog message. The recipient of the syslog message the administrator may query the dynamic state or context of the Network A at the time of generation of the received syslog message. The Network Helpdesk or TAC may be operable to interact with the network device for example by way of a CLI command line interface to obtain information pertaining to a particular received syslog message while such information exists and communicate such obtained information to the querying administrator .

Referring now also to network device is shown in more detail by way of example to include a plurality of functional components. It is to be appreciated that the functional components are not necessarily consolidated into one device but may be distributed among a number of devices.

Broadly the network device includes a processor and a metalog memory module described in greater detail below as shown in . The processor comprises or defines a trigger module which is a conceptual module corresponding to a functional task performed by the processor . The trigger module may define a monitoring module or circuit to monitor the occurrence of an operational message at a network device. To this end the network device may include a machine readable medium e.g. memory in the processor main memory and or hard disk drive which carries a set of instructions to direct the operation of the processor for example being in the form of a computer program or any embedded logic. It is to be understood that the processor may be one or more microprocessors controllers or any other suitable computing device resource hardware software or embedded logic. The trigger module may be operable in response to the generation of a syslog message to store information in the metalog memory module . The metalog memory module may be any volatile or non volatile memory in the network device e.g. in memory cache of the network device or the like. When the metalog memory module includes non volatile memory the information stored therein is not lost upon shutdown or failure of the network device thus providing persistence of the information stored therein. The network device is shown in to be within the network A however it is to be appreciated that the network device may connect to network A as shown in . It is to be noted that for the purposes of this specification the term module includes an identifiable portion of code computational or executable instructions data or computational object to achieve a particular function operation processing or procedure. A module need not be implemented in software a module may be implemented in software hardware or a combination of software and hardware.

In particular the network device may include a communication interface see which is operable to transmit receive or transfer packets of data between network A and other networks respectively and a user input module which may be operable to receive input data from a user of the network device . The communication interface may also be operable to enable communication between the network device and the network helpdesk or TAC of . The user input module may include an API Application Programming Interface GUI Graphical User Interface a keypad or the like. Instead or in addition the user input module may include or utilize a CLI of the network device . In an example embodiment the input module is remote from the network device .

The processor further includes a discriminator module operable to receive an input from the trigger module and to dispatch an output e.g. a filtered output to the metalog memory module . It is to be understood that the discriminator module may also be a conceptual module corresponding to a particular task performed by the processor . The discriminator module may only create a metalog entry for a message when the particular message meets defined criteria.

The discriminator module may be operable to analyze an incoming syslog message to determine whether or not the syslog message meets discriminating criteria e.g. pre defined criteria or default criteria and thus subject to rules dictating the manner in which it will be treated . The discriminator module may also be operable to store the information associated with the interrogated syslog message in the metalog memory module only in response to the syslog message meeting the pre selected criteria or default criteria. The discriminator module may thereby function as an intelligent filter for incoming syslog messages. The default criteria may be defined by a network technician or the like. It will be understood that in accordance with an example embodiment the discriminator module may in addition to the default criteria receive discriminating criteria for which to interrogate the syslog message from a user either a network technician the administrator or the network helpdesk or TAC or the like via the user input module . In this regard the discriminator module may include a user definable discriminating data structure associated therewith to allow for selection of the discriminating criteria in addition to or instead of the default criteria. In accordance with an example embodiment the data structure of the discriminator may provide for a user to select the discriminating criteria e.g. rules from one or more of a syslog message facility severity level mnemonic format body feature flags or component specific data usually user specific data etc. of the syslog message.

The metalog memory module will be described by way of example in greater detail with reference to . The metalog memory module may be operable to receive and store information associated with a syslog message. The information may include at least the procedure stack of method invocations or data associated therewith generally referred to by reference numerals and respectively at the time of generation of the syslog message and information to identify the syslog message. It is to be appreciated that the procedure stacks and are merely schematic representations of a procedure stack of invocations in accordance with an example embodiment at two different points in time e.g. T and T respectively .

The procedure stack increases and decreases in size in a last in first out fashion LIFO and includes information indicative of or referenced to the procedure invocations or method invocations and . The method invocations may include those procedural or functional calls or a trace thereof made by the network A during normal operation. It is to be understood that the method invocations may further include information indicative of dynamic context information for example feature module specific data CPU usage link states or the like. Each time a method invocation is made reference thereto is entered in the procedure stack such that dynamic context information indicative of the operation of network A or the network device is included in the procedure stack . The LIFO configuration causes the reference to each of the method invocations and to be entered or pushed onto the top of the procedure stack in the order which it is generated or invoked and the reference to the method invocations and at the top of the stack to be removed or popped therefrom first after execution of the respective method invocation. In the example embodiment illustrated the method invocations and see invocations to as well as the dynamic context information CPU usage and link state and A and B in are shown to be made before the syslog message was generated. In this regard it is to be appreciated that the syslog message generation involves a corresponding syslog message procedure or method invocation and reference thereto is correspondingly pushed onto the stack . For example in at time T reference to the method invocation which corresponds to the generation of syslog message is pushed onto the top of the procedure stack upon generation thereof.

In at time T the syslog message has been emitted and the method invocations B and A have been executed the corresponding references thereto and respectively are therefore popped from the procedure stack in LIFO fashion leaving those unfinished method invocations therein. In an example embodiment the information to identify or reference to a particular syslog message may be the name of that particular syslog message and or a time stamp and or a particular mnemonic of that particular syslog message.

In accordance with an example embodiment the metalog memory module may include a circular metalog or circular buffer see in which the identifier of a syslog message is storable together with the procedure stack of method invocations and see at the time of generation of the syslog message e.g. syslog message . For ease of explanation the circular metalog will be described with reference to the procedure stack of . It is to be appreciated that the circular metalog may be a conceptual data structure provided in the metalog memory module . Further the circular metalog may be of user configurable size and the size thereof may be received via the user input module . For further ease of explanation the circular metalog will be described as having a size of eight conceptual data storage cells Cell to Cell in which data is storable. It is to be appreciated that the data storage cells merely serve to illustrate the storage of data in the circular metalog .

In accordance with an example embodiment the circular metalog may be operable to receive the procedure stack of method invocations upon generation of a syslog message which meets the discriminating criteria as determined by the discriminator module see . In accordance with an example embodiment with reference to the method invocations and in the procedure stack the procedure stack at the time of generation of the syslog message may be shifted into the circular metalog register fashion see . It is to be appreciated that in an example embodiment the procedure stack may be shifted register fashion into the circular metalog in no particular order. The circular metalog may be in the form of a buffer so that when the buffer is full the oldest entry may be overwritten.

The circular metalog as indicated in contains old entries in cell and cell respectively from a previous syslog message generation syslog message however the metalog is not full and the next invocation in the procedure stack method invocation A may be shifted register fashion into empty cell .

It is to be appreciated that the circular metalog may be operable to wrap when full such that the oldest entries therein are overwritten on entry of new information e.g. first in first out . For example shows the circular metalog being full and the next entry from the procedure stack to be entered in the metalog method invocation B will therefore have to overwrite the oldest entry in the circular metalog which is method invocation X in cell . In accordance with an example embodiment the overwritten entries may be irrecoverably erased.

Example embodiments will now be further described in use with reference to . The example methods shown in are described with reference to and although it is to be appreciated that the example methods may be applicable to other systems as well.

Referring now to a high level flow diagram of a method in accordance with an example embodiment is shown. The method may be performed prior the operations in the method as described above. The method may include receiving at block an input to configure the size of the metalog . In an example embodiment the input is received via the user input module . The method may also include receiving at block an input from the input module to select discriminating criteria for the discriminator module . It is to be understood that the size of the metalog and the discriminating criteria may be user specific.

Referring now to a low level flow diagram of a method in accordance with an example embodiment is shown. Like numerals to refer to like parts in unless otherwise indicated. Again a metalog is provided at a syslog message sender at block .

When a syslog message is generated at block for instance when an error or fault occurs in the network A or in the network device the trigger module detects the syslog message generation and transmits the syslog message to the discriminator module . At block the method includes taking a snapshot of the procedure stack at the exact time the syslog message was generated.

The processor determines at block the type of discriminating criteria e.g. rules which the syslog message has to comply with in other words whether the discriminating criteria is pre selected or default discriminating criteria in the example embodiment.

The discriminator module of the network device determines at block and whether the syslog message meets the pre selected or default discriminating criteria such as the syslog message severity level facility mnemonic or the like respectively. In an example embodiment pre selected discriminating criteria have preference over default discriminating criteria. Thus the discriminator may determine whether or not the syslog message meets the pre selected discriminating criteria before it determines whether the syslog message meets the default discriminating criteria if necessary.

If the syslog message complies with either the pre selected discriminating criteria or the default discriminating criteria the procedure stack of invocations at the time of generation of the syslog message or the snapshot thereof may be compressed or encoded at block to compress the procedure stack and make it human readable. The information about the syslog message stored in the metalog may also include a sequence number time stamp facility and mnemonic of the syslog message thereby to identify the syslog message. As shown at block the information entered into the metalog may be output or access may be allowed to the information in the metalog request.

Alternatively if the discriminator module determines that the syslog message does not meet the pre selected or default discriminating criteria the information about the syslog message is not stored in the metalog . It is to be understood that the method does not necessarily store information about all the syslog messages that are generated in the metalog but may store information about the syslog message in the metalog only if the syslog message meets the pre selected or default discriminating criteria or rules . In an example embodiment storing of the information into the metalog may be invoked as part of the syslog message generation.

Once stored in the metalog the information therein may be outputted or uploaded or accessed from the metalog memory module by way of the communication interface . The information in the metalog may be accessed by or outputted or uploaded to the network helpdesk or the administrator or the like. In accordance with an example embodiment the network helpdesk or TAC or the administrator has access to the information from the metalog via a CLI provided on the network device a GUI or a software map of the network device provided at the network helpdesk or TAC or the administrator and the like. With the information obtained from the metalog the network helpdesk or TAC or the administrator may be able to determine the dynamic context in which the syslog message was generated by looking at the method invocations that were made leading up to the generation of the syslog message thus aiding troubleshooting and diagnostics. In this regard the information in the metalog may be searchable or parsable thereby to enable specific entries therein to be located and accessed. In accordance with an example embodiment the network device may be operable to generate a log file based on a particular syslog message from the metalog particularly in response to a request thereof by the network helpdesk or TAC the administrator or the like.

Referring now to a high level flow diagram of a method in accordance with an example embodiment of data handling in the network device is shown. The method includes determining at block whether or not the metalog memory module is full in other words whether the information in the metalog memory module exceeds the information storage capacity of the metalog memory module .

In accordance with an example embodiment upon receiving a user command the method may include exporting or transferring at block the information stored therein out of the metalog memory module . In accordance with an example embodiment the information in the metalog memory module may be exported to the external memory module see .

Thus advantages of example embodiments may include retention of the dynamic context of event messages that are usually irrevocably lost. Recipients of syslog messages e.g. the network helpdesk or TAC and the administrator often do not know the circumstances under which a received syslog message was generated as the system state has since changed example embodiments of the invention as above described may improve interpretation of the syslog messages and thereby improve system diagnostic and troubleshooting.

The example computer system includes a processor e.g. a central processing unit CPU a graphics processing unit GPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT . The computer system also includes an alphanumeric input device e.g. a keyboard a user interface UI navigation device e.g. a mouse a disk drive unit a signal generation device e.g. a speaker and a network interface device .

The disk drive unit includes a machine readable medium on which is stored one or more sets of instructions and data structures e.g. software embodying or utilized by any one or more of the methodologies or functions described herein. The software may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system the main memory and the processor also constituting machine readable media.

The software may further be transmitted or received over a network via the network interface device utilizing any one of a number of well known transfer protocols e.g. HTTP .

While the machine readable medium is shown in an example embodiment to be a single medium the term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium shall also be taken to include any medium that is capable of storing a set of instructions for execution by the machine and that cause the machine to perform anyone or more of the methodologies of the example embodiments or that is capable of storing data structures utilized by or associated with such a set of instructions. The term machine readable medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media and carrier wave signals.

The Abstract of the Disclosure is provided to comply with 37 C.F.R. 1.72 b requiring an abstract that will allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description it can be seen that various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separate embodiment.

