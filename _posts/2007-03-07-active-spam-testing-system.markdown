---

title: Active spam testing system
abstract: A method and system for introducing spam into a search engine for testing purposes is provided. An active spam testing system receives from a tester a specification of spam that is to be introduced into the search engine for testing purposes. The testing system may then generate auxiliary data structures for storing indications of the spam that is to be introduced. A search engine has original data structures that may include a content index and a link data structure. The testing system stores the indications of the spam in the auxiliary data structures so that use of the search engine for non-testing purposes is not affected. When the search engine is used for testing purposes, the search engine generates search results based on a combination of the original data structures and the auxiliary data structures.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07680851&OS=07680851&RS=07680851
owner: Microsoft Corporation
number: 07680851
owner_city: Redmond
owner_country: US
publication_date: 20070307
---
Many search engine services such as Google and Overture provide for searching for information that is accessible via the Internet. These search engine services allow users to search for display pages such as web pages that may be of interest to users. After a user submits a search request i.e. a query that includes search terms the search engine service identifies web pages that may be related to those search terms. To quickly identify related web pages the search engine services may maintain a mapping of keywords to web pages. This mapping may be generated by crawling the web i.e. the World Wide Web to identify the keywords of each web page. To crawl the web a search engine service may use a list of root web pages to identify all web pages that are accessible through those root web pages. The keywords of any particular web page can be identified using various well known information retrieval techniques such as identifying the words of a headline the words supplied in the metadata of the web page the words that are highlighted and so on. The search engine service identifies web pages that may be related to the search request based on how well the keywords of a web page match the words of the query. The search engine service then displays to the user links to the identified web pages in an order that is based on a ranking that may be determined by their relevance to the query popularity importance and or some other measure.

Three well known techniques for page ranking are PageRank HITS Hyperlink Induced Topic Search and DirectHIT. PageRank is based on the principle that web pages will have links to i.e. out links important web pages. Thus the importance of a web page is based on the number and importance of other web pages that link to that web page i.e. in links . In a simple form the links between web pages can be represented by adjacency matrix A where Arepresents the number of out links from web page i to web page j. The importance score wfor web page j can be represented by the following equation 

This equation can be solved by iterative calculations based on the following equation Aw w where w is the vector of importance scores for the web pages and is the principal eigenvector of A.

The HITS technique is additionally based on the principle that a web page that has many links to other important web pages may itself be important. Thus HITS divides importance of web pages into two related attributes hub and authority. Hub is measured by the authority score of the web pages that a web page links to and authority is measured by the hub score of the web pages that link to the web page. In contrast to PageRank which calculates the importance of web pages independently from the query HITS calculates importance based on the web pages of the result and web pages that are related to the web pages of the result by following in links and out links. HITS submits a query to a search engine service and uses the web pages of the result as the initial set of web pages. HITS adds to the set those web pages that are the destinations of in links and those web pages that are the sources of out links of the web pages of the result. HITS then calculates the authority and hub score of each web page using an iterative algorithm. The authority and hub scores can be represented by the following equations 

The vectors a and h correspond to the authority and hub scores respectively of all web pages in the set and can be represented by the following equations a Ah and h Aa Thus a and h are eigenvectors of matrices AA and AA. HITS may also be modified to factor in the popularity of a web page as measured by the number of visits. Based on an analysis of click through data bof the adjacency matrix can be increased whenever a user travels from web page i to web page j.

Although these techniques for ranking web pages based on analysis of links can be very useful these techniques are susceptible to spamming both link spamming and to some extent content spamming. Spamming in general refers to a deliberate action taken to unjustifiably increase the rank relevance popularity importance and so on of a web page or web site. In the case of link spamming a spammer can manipulate links to unjustifiably increase the importance of a web page. For example a spammer may increase a web page s hub score by adding out links to the spammer s web page. A common technique for adding out links is to create a copy of an existing link directory to quickly create a very large out link structure. As another example a spammer may provide a web page of useful information with hidden links to spam web pages. When many web pages point to the useful information the importance of the spam web pages is indirectly increased. As another example many web sites such as blogs and web directories allow visitors to post links. Spammers can post links to their spam web pages to directly or indirectly increase the importance of the spam web pages. As another example a group of spammers may set up a link exchange mechanism in which their web sites point to each other to increase the importance of the web pages of the spammers web sites.

In the case of content spamming a spammer may create a web page with content that is deliberately added in an attempt to increase the relevance of the web page to certain queries. For example a web page for a banking service may have hidden data or metadata with the terms home loans low cost mortgages no closing costs no points home line of credit and so on. The spammer is hoping that the web page will have its relevance increase for queries that relate to home mortgages because of the spam content that has been added. The spam content can be added to any web page of the banking service. For example the spam no closing costs may be added as hidden text to web pages for mortgages that indeed have some closing costs.

Web spam presents problems for various techniques that rely on web data. For example a search engine service that orders search results in part based on relevance popularity or importance of web pages may rank spam web pages unjustifiably high because of the spamming. As another example a web crawler may spend valuable time crawling the links of spam web sites which increases the overall cost of web crawling and may reduce its effectiveness. Some techniques have been developed to try to combat spamming. It has however been difficult to test the effectiveness of these anti spamming techniques. First since the developers of an anti spamming technique typically provide a search engine service the developers do not want to intentionally add spam to web pages. In particular the spam that is introduced for testing purposes may negatively affect the quality of search results provided by their search engine for non testing purposes. Assuming that the anti spamming technique is as effective as hoped then this would not be a problem. However if the technique is not particularly effective then the search results for non testing purposes would be negatively affected by the spam introduced for testing purposes. Second since it is a time consuming process to crawl the billions of web pages and generate the various data structures e.g. content index and web graph and importance scores used by a search engine search engine services typically regenerate the data structures only infrequently. As a result the speed of testing of anti spamming techniques is constrained by the infrequent updating of the data structures. Third the developers of anti spamming techniques typically have to wait until spammers introduce new spam to develop an appropriate anti spamming technique. Although a developer could proactively introduce spam using a new spamming technique and try to develop an appropriate anti spamming technique the introduced spam would negatively affect non testing search results and the testing would be slowed by the infrequent updating of the data structures of a search engine.

A method and system for introducing spam into a search engine for testing purposes is provided. An active spam testing system receives from a tester a specification of spam that is to be introduced into the search engine for testing purposes. The testing system may then generate auxiliary data structures for storing indications of the spam that is to be introduced. A search engine has original data structures that may include a content index and a link data structure. The testing system stores the indications of the spam in the auxiliary data structures so that use of the search engine for non testing purposes is not affected. When the search engine is used for testing purposes the search engine generates search results based on a combination of the original data structures and the auxiliary data structures. Because the testing system represents the spam in the auxiliary data structures a tester can introduce spam for testing purposes independently of when the search engine regenerates its original data structures. Since the search engine for non testing purposes uses only the original data structures the search engine service generates search results that are not affected by the introduced spam.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

A method and system for introducing spam into a search engine for testing purposes is provided. In one embodiment an active spam testing system receives from a tester a specification of spam that is to be introduced into the search engine for testing purposes. For example the spam that is to be introduced may include content spam such as a new web page with terms intended to unjustifiably increase the relevance of the web page to certain queries and may include link spam such as adding links to other web pages that point to the new web page to unjustifiably increase the importance of the new web page. The testing system may then generate auxiliary data structures for storing indications of the spam that is to be introduced. A search engine has original data structures that may include a content index and a link data structure. The testing system stores the indications of the spam in the auxiliary data structures so that use of the search engine for non testing purposes is not affected. When the search engine is used for testing purposes the search engine generates search results based on a combination of the original data structures and the auxiliary data structures. When the search engine is used for non testing purposes the search engine generates results based only on the original data structures. Because the testing system represents the spam in the auxiliary data structures a tester can introduce spam for testing purposes independently of when the search engine regenerates its original data structures. In addition since the search engine for non testing purposes uses only the original data structures the search engine service generates search results that are not affected by the introduced spam. In this way a tester can actively introduce spam based on new spamming techniques so that effective anti spamming techniques can be developed even before spammers can introduce the same new spamming techniques.

In one embodiment the active spam testing system allows a user to introduce content spam that is represented in an auxiliary content index. The auxiliary content index includes a mapping of terms to the web pages that contain those terms. The specification of content spam may include the URL of a web page the title of the web page and the content of the web page. To add the specification to the auxiliary content index the testing system first determines whether an entry has already been created for that web page in a web page table. If not the testing system creates an entry for that web page with the specified title in the web page table. The testing system then generates a mapping from each term of the specified content to the web page. The auxiliary content index may include a term table with an entry for each term that contains the indexes of the web pages in the web page table that contains that term. When a search is conducted for testing purposes an index aggregator searches both the original content index and the auxiliary content index to identify relevant web pages. The index aggregator then presents to the search engine an aggregation of the web pages identified from both content indexes. The search engine can then rank the search results according to a conventional ranking algorithm. The search engine when used in test mode can invoke various anti spamming techniques that are to be tested. The developer of an anti spamming technique can then analyze the search results generated based on the introduced spam to evaluate the effectiveness of the anti spamming technique.

In one embodiment the active spam testing system allows a user to introduce link spam that is represented in an auxiliary link data structure that includes an auxiliary web graph and an auxiliary importance list. The auxiliary web graph may be represented as a matrix with a row and a column for each web page of the entire web. Each entry in the matrix may indicate whether link spam has been introduced as a link from one web page of the entry to the other web page of the entry. The auxiliary importance list contains an entry for each web page of the web that contains a score indicating the importance of the web page. The specification of a link spam includes an indication of a link between a source web page that contains the link and a target web page to which the link points. If the auxiliary web graph does not contain an entry for one of the web pages the test system adds a corresponding row and column to the auxiliary web graph. The test system updates the entry for the source web page and the target web page to indicate the link between the web pages. The test system then generates new importance scores for all the web pages using various techniques such as the incremental technique described in Desikan P. Pathak N. Srivastava J. and Kumar V. Incremental Page Rank Computation on Evolving Graphs WWW 2005 Chiba Japan May 10 14 2005 pp. 1094 95 and described in Desikan P. Pathak N. Srivastava J. and Kumar V. Incremental Page Rank Computation on Evolving Graphs AHPCRC Technical Report 2004 195. The incremental technique as described below in more detail identifies all web pages that are reachable by the introduced link spam. The incremental technique then recalculates the importance score e.g. PageRank score for those web pages and scales the importance scores for those web pages that are not reachable. Because the test system only calculates importance scores to the reachable web pages rather than all web pages the importance scores can effectively and efficiently factor in the introduced link spam. When a search is conducted for non testing purposes the search engine uses an original importance list when ranking search results. In contrast when a search is conducted for testing purposes the search engine uses the auxiliary importance list when ranking the results of the search. The search engine when testing can invoke various anti spamming techniques that are to be tested. The developer of an anti spamming technique can then analyze the search results to evaluate the effectiveness of the anti spamming technique.

In one embodiment the test system allows a tester to specify content spam and link spam using a script with instructions for modifying the content index and the web graph. The script may allow conventional programming language statements such as looping statements assignment statements function invocation statements and so on. The test system may provide an application programming interface API through which a tester can modify the content index and the web graph. The application programming interface has functions for adding content spam and link spam. For example the application programming interface has a function to add a new web page to the content index. The function inputs the URL of the web page the title of the web page and the content of the web page and updates the auxiliary content index as appropriate. The application programming interface also has a function to add a new link to the web graph. The function inputs the URL of the source web page the URL of the target web page and anchor text for the link on the source web page. The function updates the auxiliary web graph as appropriate. The application program interface may also have a function to incrementally regenerate the importance scores of the web pages. The function generates a new auxiliary importance list using the incremental technique as described above.

Table 1 illustrates an example script in one embodiment. This example script generates a star structured link farm. A star structured link farm contains many web pages that each contain a link to a target web page. Various other types of link farms can be introduced such as a completely connected link farm in which each web page has a link to each other web page of the farm. In line 1 the script initializes the number of web pages of the farm. In line 2 the script initializes a list of anchor text to contain four possible values. In line 3 the script invokes a modify page function to add a web page with the URL of http test.spam the title of test and the content of nasa spam test as introduced spam. This function adds a web page to the auxiliary index content. In lines 4 9 the script loops adding a link from each source web page to the target web page. In line 7 the script generates a new URL for a source web page. In line 8 the script invokes the modified link function to add a link from the web page of the newly generated URL to the target web page of the star structured link farm. In line 10 after the link farm has been created the script invokes the incremental importance function to incrementally regenerate the importance of the web pages.

The computing device on which the active spam test system is implemented may include a central processing unit memory input devices e.g. keyboard and pointing devices output devices e.g. display devices and storage devices e.g. disk drives . The memory and storage devices are computer readable media that may be encoded with computer executable instructions that implement the test system which means a computer readable medium that contains the instructions. In addition the instructions data structures and message structures may be stored or transmitted via a data transmission medium such as a signal on a communication link. Various communication links may be used such as the Internet a local area network a wide area network a point to point dial up connection a cell phone network and so on.

Embodiments of the test system may be implemented in various operating environments that include personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems programmable consumer electronics digital cameras network PCs minicomputers mainframe computers computing environments that include any of the above systems or devices and so on.

The test system may be described in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include routines programs objects components data structures and so on that perform particular tasks or implement particular abstract data types. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments. For example a separate computing system may crawl the web and generate the original content index and web graph. Also the search engine may be hosted on a separate computing system.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims. Accordingly the invention is not limited except as by the appended claims.

