---

title: Self cancelling product order based on predetermined time period
abstract: A provider server receives an order from a customer by way of a workstation for a customer selected configuration change of computing resources of an end user machine, the provider server having a predetermined time period and negotiates configuration change price for billing said customer for the purchase of said ordered customer selected configuration change, said negotiated configuration change price for billing said customer for the purchase of said ordered customer selected configuration change. If the customer takes delivery of said customer selected configuration change within said predetermined time period, the provider server billing said customer for said delivered customer selected configuration change, however if the customer does not take delivery of said customer selected configuration change within said predetermined time period, the provider server cancelling said order and cancelling said billing according to said configuration change price based on expiration of said predetermined time period.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07941347&OS=07941347&RS=07941347
owner: International Business Machines Corporation
number: 07941347
owner_city: Armonk
owner_country: US
publication_date: 20071004
---
This application is a continuation of U.S. patent application Ser. No. 10 426 158 METHOD SYSTEM AND COMPUTER PROGRAM PRODUCT FOR ON DEMAND ENABLEMENT OF DORMANT COMPUTING RESOURCES filed Apr. 28 2003 now U.S. Pat. No. 7 334 225.

IBM is a registered trademark of International Business Machines Corporation Armonk N.Y. U.S.A. IBM ESERVER ZSERIES THINKPAD and other names used herein may be registered trademarks trademarks or product names of International Business Machines Corporation or other companies.

The present invention relates in general to enablement of dormant hardware resources in a computing system. In particular the present invention relates to enabling dormant computing resources by providing customer installable code to a computing system the code being capable of enabling dormant computing resources.

As is known there exists considerable variation in the needs of computer users. A one size fits all approach to providing computing resources such as processor type number of processors memory input output I O etc. is therefore impractical. To meet the various needs of users therefore providers of computing resources should have the ability to tailor the resources and capabilities of a particular system to the needs of a particular user.

As is also known providers of computing systems and services operate in a highly competitive industry. In order to simultaneously maintain competitive pricing and adequate profit margins computing providers must control costs. In particular it is highly desirable for providers of computing systems to reduce the costs associated with manufacturing and inventory management of a proliferation of computing system models and configurations. Cost reductions may be achieved therefore by reducing the number of computing system models and configurations produced inventoried and sold.

While the above objectives appear contradictory methods have been developed to simultaneously reduce manufacturing and inventory complexity while tailoring computing system resources to the needs of specific users. For example the following patents each of which is assigned to the same assignee as the present application and each of which is hereby incorporated herein by reference in its entirety describe various aspects by which a computing system may be constructed with installed resources that are initially dormant U.S. Pat. No. 5 365 587 to J. E. Campbell et al. entitled Self Modifying Access Code for Altering Capabilities U.S. Pat. No. 5 530 749 to R. J. Easter et al. entitled Methods and Apparatus for Secure Hardware Configuration U.S. Pat. No. 5 530 753 to R. J. Easter et al. entitled Methods and Apparatus for Secure Hardware Configuration U.S. Pat. No. 5 553 144 to F. A. Almquist et al. entitled Method and System for Selectively Altering Data Processing System Functional Characteristics Without Mechanical Manipulation U.S. Pat. No. 5 671 281 to J. E. Campbell et al. entitled Self Modifying Access Code for Altering Capabilities. As taught in the referenced patents initially dormant computing resources may be activated or enabled as needed thereby allowing a system provider to manufacture a reduced number of system models each of which may be easily configured in a variety of ways simply by enabling various combinations of the initially dormant resources.

Computer systems having dormant resources may provide advantages to computer users as well. Such systems may be delivered to a customer location containing a set of installed hardware resources only some of which are enabled. The remaining dormant resources may be enabled at a future date at the customer location and without installing additional hardware resources. Such an arrangement provides a simplified path for the user to upgrade system resources.

While advances have been made in the underlying technologies enabling the activation of dormant computing resources the technologies and methods used to deliver these capabilities to computer users have not kept pace. While the needs of computer users may change in rapid and unpredictable ways the technologies and methods used to deliver system upgrades reflect an environment where system upgrades required the installation of physical hardware resources. These delivery technologies and methods do not therefore fully exploit the capabilities of the underlying technologies used to enable dormant resources.

For the foregoing reasons therefore there is a need in the art for an on demand method of enabling dormant computing resources that is responsive flexible and which leverages the capabilities of existing computer upgrade technologies.

The shortcomings of the prior art are overcome and additional advantages are provided through the provision of a method system and computer program product for enabling a subset of dormant computer hardware resources in an upgradeable computer system having a set of dormant computer hardware resources.

In one aspect of the present invention the method includes accepting an electronic customer request to enable the subset of dormant hardware resources and providing to a customer accessible console in communication with the upgradeable computer system computer readable instructions capable of enabling the subset of dormant resources where the computer readable instructions are customer installable.

Various enhanced aspects of the present invention are described and claimed herein. In one aspect the present invention involves storing data describing a current configuration of the system to be upgraded where the data describes hardware resources currently installed and resources currently enabled. Further aspects of the present invention involve updating the stored configuration information to represent a new configuration upon installation of control code and presenting prior to accepting an order current configuration information and information describing dormant resources available to be enabled. A further enhanced aspect of the present invention involves generating a pricing methodology prior to accepting an order. One embodiment of a pricing methodology involves determining a price per unit of performance determining a set of performance values indicating the increase in performance expected to be achieved by enabling certain resources and generating a price by multiplying the price per unit by the total performance increase expected by enabling selected resources. Further enhanced aspects of the present invention involve presenting prior to accepting an order information describing a current configuration of the system to be upgraded and information describing a proposed configuration of the system to be upgraded another aspect involves presenting a price for the proposed configuration. Further enhanced aspects of the present invention involve approving an order substantially concurrently with providing the instructions and in one enhanced aspect of the present invention providing the instructions prior to approving the order.

Additional features and advantages are realized through the techniques of the present invention. Other embodiments and aspects of the invention are described in detail herein and are considered a part of the claimed invention. For a better understanding of the invention with advantages and features refer to the description and the drawings.

In accordance with preferred embodiments of the present invention a method system and computer program product are disclosed for enabling a subset of dormant computer hardware resources in an upgradeable computer system the upgradeable computer system having a set of dormant computer hardware resources.

As further illustrated in user workstation is in networking communication with a user interface component of server . As described in detail herein a user desiring to enable dormant computing hardware resources installed in end user machine may use workstation to access provider server via the Internet and user interface . Server is further in communication with server database collection directly or through provider intranet . At least one server is in communication with console via communications link such as server . Through link provider enterprise systems are informed of hardware configuration changes in end user machine . Also through link an operator using console downloads control code from server for subsequent installation on end user machine thereby enabling certain dormant computing resources installed in end user machine .

With reference now to additional details of end user machine and console are described. System includes a set of computing resources and . Resources and include hardware resources that are capable of being installed in a dormant state and subsequently activated or enabled by control code such as processing units PU memory and Input Output I O . As illustrated in end user machine includes enabled resources and dormant resources . Dormant resources are installed but not enabled resources may be activated or enabled through the installation of appropriately coded instructions such as hardware control code utilizing support code . End user machine further includes base hardware such as the machine s frame s cooling unit s power supply s intra machine connections and support hardware . Base hardware performs functions such as power cooling and storage of control code and is not upgradeable through changes in hardware control code . Support hardware provides storage of support code as well as a service interface used for maintenance of end user machine . Support code contains hardware configuration information pertaining to computing resources and such as computing resources being utilized for example processors and memory . As used herein end user machine is currently upgradeable if there is a set of dormant resources available to be enabled through installation of new control code utilizing support code . The methods of the present invention may be used to enable a subset of the set of the available dormant resources up to and including the entire set of available dormant resources . In preferred embodiments of the present invention end user machine is an IBM server or other server capable of supporting on demand activation of dormant computing resources such as an IBM ESERVER ZSERIES machine for example the IBM 2064 and 2066 machines all models which support the capability to enable additional PUs and memory up to the amount dormant on a particular machine. Additional information regarding IBM ZSERIES systems is found in IBM eServer zSeries 900 Technical Guide IBM Publication Number SG24 5975 01 published September 2002 which is hereby incorporated herein by reference in its entirety hereinafter Technical Guide . In preferred embodiments of the present invention support hardware is a portable computer such as an IBM THINKPAD portable computer for example the IBM 2366 43U running support code and further running an operating system as known in the art such as the IBM OS 2 operating system Version 4.5 as well as other application programs which for instance read and store data on the support hardware and transfer configuration data between the support hardware and the control code . In preferred embodiments of the present invention support hardware and the control code are delivered as standard or optional features of end user machine . In preferred embodiments of the present invention console is a hardware management console HMC implemented by a personal computer as known in the art such as an IBM 8305 KUU or other personal computer and is preferably delivered as a feature of end user machine . Console is user accessible is in communication with and provides a user interface to one or more end user machines for the purpose of monitoring operation of connected machine s assigning a pseudonym to each end user machine configuring and controlling enabled computing resources and I O paths enabling transmission and retrieval of control code by utilizing support code and updates to management application between end user machine and the control code distribution server and end user machine configuration reporting database . Console includes input devices as known in the art such as keyboard and pointing device . Console includes an output device such as monitor . Console further includes at least one processor memory and nonvolatile storage such hard disk drive HDD . Console further includes operating system and user hardware management application . Further details of support hardware also referred to as Support Element SE in preferred embodiments and console HMC in preferred embodiments may be found in Technical Guide Appendix B. In preferred embodiments of the present invention operating system is a personal computer operating system as known in the art such as IBM OS 2 Version 4.5 operating system. Operating system supports the basic operation of console including all of its components. Management application provides the functionality and user interface by which an operator may perform various hardware management functions for end user machine including assignment of a user defined pseudonym to each end user machine control of enabled computing resources logical configuration of I O paths basic monitoring of end user machine operation including utilization alert monitoring etc. as well as downloading and installing new control code by utilizing support code and updates to management application . Console includes communication hardware such as modem capable of communicating with provider enterprise via communication link . In preferred embodiments of the present invention communications link is dedicated phone line with direct dial to sever in preferred embodiments of the present invention server is the IBM RETAIN system. As described in detail herein an operator at console may download new hardware control code from provider enterprise via communications link and subsequently install the downloaded code as new support code on support hardware on end user machine thereby enabling a subset of resources .

As previously noted methods of enabling or activating dormant computing resources through installation of properly coded hardware control code are known in the art. For example U.S. Pat. Nos. 5 365 587 5 530 749 5 530 753 5 553 144 5 671 281 discussed in the Background and incorporated herein by reference in their entirety discuss various aspects by which hardware resources may be installed in a dormant state and subsequently enabled through installation of appropriately coded control code. Further information regarding computer system hardware upgrades through the installation of control code is found in Technical Guide section 6.2 which was previously incorporated herein by reference in its entirety.

The code installation process of the present invention involves specific support code functions that are invoked from the support hardware . Support code provides all functions required to initiate an upgrade to end user machine including download and installation of control code associated with an upgrade. These functions communicate with hardware functions within the control code and control hardware . Validation is performed on the downloaded control code to be installed by the support code to ensure that it is properly downloaded and is not corrupted during transmission from server through the console to support hardware . Once validation is confirmed the new control code is passed to control code and control hardware and the appropriate dormant computing resources are enabled accordingly completing installation of the upgrade.

With reference now to additional details of user workstation are described. Workstation is an Internet capable computer as known in the art. Workstation includes processor memory nonvolatile storage such as HDD input devices such as keyboard and pointing device an output device such as monitor and communications hardware such as modem or other network communications devices as known in the art. Workstation further includes operating system Internet connectivity services such as TCP IP services and web browser . Workstation as described in detail herein is used to communicate with provider server via Internet . In preferred embodiments of the present invention workstation is an IBM desktop personal computer or other Internet capable workstation. In preferred embodiments of the present invention operating system is any version of MICROSOFT WINDOWS LINUX IBM AIX or other workstation operating system and web browser is a web browser as known in the art such as MICROSOFT INTERNET EXPLORER or NETSCAPE NAVIGATOR capable of supporting a security protocol as known in the art such as SSL for secure access to server . Alternative embodiments are envisioned in which any web enabled workstation may be used however.

With reference now to the components of a preferred embodiment of provider enterprise are described. As illustrated in provider enterprise includes two main components server and server database collection . Provider enterprise further includes at least one organization involved in generating control code such as manufacturing . Communication between server and server database collection may be either direct or may take place over a network connection such as provider intranet . As illustrated in server includes user interface configuration computing engine control monitoring engine management engine and provider interface . Server database collection includes control code distribution server with access to end user machine configuration reporting database working machine configuration database end user machine profile database and customer account database . As illustrated in to place an order a user operating web enabled workstation interacts with user interface component of server via Internet . In preferred embodiments of the present invention user interface component is an interactive web based application such as IBM s RESOURCE LINK . In preferred embodiments of the present invention server is an IBM RETAIN server which is preferably an IBM 9672 RX7 server. In preferred embodiments of the present invention server is an IBM RS 60000 model S80 machine.

Configuration computing engine includes a set of configuration rules for each model of upgradeable end user machine . Configuration rules ensure that a requested configuration does not exceed physical and technical capabilities of the specific end user machine . For instance using information accessed through server database collection configuration computing engine determines the quantity of computing resources and contained in a specific end user machine . It then determines the allowed configurations for that specific end user machine including allowable combinations of PUs and memory upgrades based on enabled computing resources and dormant computing resources . These configuration rules are enforced during the order process thereby insuring that a user is presented with upgrade options that are valid for the user s specific machine. For example in preferred embodiments of the present invention end user machine is an IBM ESERVER ZSERIES z900 machine type 2064 with models ranging for instance from where the third digit in the model designation reflects the number of Central Processors CPs that are part of the enabled computing resources for instance a has one active CP a has nine active CPs etc. Further designation as a model describes that up to twelve PUs are available to be enabled of which two may be configured as SAPs 9 may be configured as CPs IFLs ICFs and two are spares which may be substituted for any of the previous PUs in the event one should fail. This set of rules constitutes the configuration rules for an IBM ESERVER ZSERIES z900 machine type 2064 which are enforced by configuration computing engine during order process of the present invention as described herein.

Management engine communicates with end user machine profile database in which machine profile data is stored for each specific machine for which the present invention is to be used. As described in detail herein a machine profile is created for each specific machine for which the present invention is to be used. The machine profile is created during a prerequisite process described below. The machine profile uniquely identifies a specific machine using the machine type or model and serial number and the customer or end user of the machine. Management engine interacts with end user machine profile database and configuration computing engine extracting end user machine profile information as required. Management engine also interacts with end user machine profile database and provider user interface for ongoing maintenance of end user machine profile database .

Server further includes control monitoring engine which is in communication with working machine configuration database . Control monitoring engine is further in communication with end user machine configuration reporting database and control code distribution server server being in communication with console via communications link as previously described. Working machine configuration database contains information describing the current configuration of end user machine which has been extracted from end user machine configuration reporting database . The working machine configuration database like the end user machine profile database includes information for each specific machine for which the present invention is used. The current machine configuration includes information regarding which resources are currently enabled such as resources and which resource are installed but not available for use i.e. dormant . Furthermore the machine configuration stored in database includes information regarding resources that are physically installed but no longer available such as failed or damaged resources. As the configuration of end user machine changes end user machine uses console and communications link to notify databases and through servers and of the change thereby causing an update in the configuration record for end user machine . Control monitoring engine extracts information from working machine configuration database for use by configuration computing engine providing configuration computing engine with end user machine configuration information used in application of the configuration rules described above. Further control monitoring engine creates control code specific to the particular end user machine reflective of an upgrade requested by the end user via their interaction with the end user interface . This created control code is staged on end user machine configuration reporting database and transferred to control code distribution server at the appropriate time as described below.

With reference now to an overview of an end user machine upgrade process of preferred embodiments of the present invention is described. Information regarding an upgrade process of the present invention is presented in Technical Guide section 6.3 Customer Initiated Upgrade or CIU which was previously incorporated herein by reference in its entity. Additional information regarding architecture and configuration rules of end user machines per preferred embodiments of the present invention are presented in Technical Guide chapters 1 through 6 and Appendix B.

As illustrated in the upgrade process starts at step . Before an order may be placed for an end user machine various prerequisites should be in place step . If the prerequisites are not in place a one time prerequisite process is performed step . Once the prerequisites are in place for a specific end user machine a customer initiates and places an order to upgrade the end user machine at step . As previously discussed a customer uses any workstation with Internet and world wide web access such as workstation to place an order. A provider receives a customer order at server . Upon receipt of a customer order a provider fulfillment process is performed. One aspect of fulfillment process is providing new control code to a customer for download via console . In preferred embodiments of the present invention control code may be downloaded by a customer and installed by a customer. Installation is performed using console the installation of control code enables the set of resources ordered by the customer during step . In preferred embodiments of the present invention billing step is initiated upon successful installation of downloaded control code. As illustrated in upon successful code install a set of dormant resources is enabled thus modifying the configuration of end user machine . System then notifies provider enterprise of the configuration change. When provider enterprise receives notice of the configuration change step billing process is initiated. The order process is now complete step .

With reference now to a prerequisite process step of of preferred embodiments of the present invention is described. As illustrated in a prerequisite process of a preferred embodiment includes three components server access contract and end user machine setup . In preferred embodiments of the present invention these steps are performed serially in the order illustrated in alternative embodiments are envisioned however where these steps may be performed in a different order or in parallel.

Server access establishes a secure communication method between user workstation and provider server through interface . As noted in preferred embodiments of the present invention interface is an interactive web based application such as IBM s RESOURCE LINK application. Secure communication may be established by any security protocol and authentication methods known in the art a security protocol such as SSL secure sockets layer is preferred and authentication is preferably accomplished through the provision of a user ID and password. Access established in step may be used by a specific customer for more than one upgradeable end user machine.

Contract step establishes the basic business relationship between user and provider within which end user machine upgrade orders are placed fulfilled and for which invoices are generated and payment is made. Contract step also establishes the basic information needed by a provider to uniquely identify a specific end user machine and the set of installed resources on that end user machine. In preferred embodiments of the present invention a single base contract or agreement is established between user and provider under which multiple end user machines may be upgraded using the methods of the present invention. A specific contract supplement is then executed for each specific end user machine each supplement including information uniquely identifying the specific end user machine. In preferred embodiments of the present invention a base agreement includes the following terms a representation that the user owns the end user machine to be upgraded or has permission from the owner and lien holders to upgrade the end user machine b user is responsible for the use and security of any user ID s issued for access to provider s server s c any upgrade order placed in this manner is considered to be a firm order and subject to the standard terms conditions associated with orders placed with provider through other means d installation of ordered upgrade is considered to occur upon download of associated control code e the downloaded control code will self install f the purchase price for an upgrade is the price quoted by provider s system during the order process g that approval from an optional secondary ID may be accepted by provider in lieu of a signed purchase order and the user agrees to have appropriate processes in place to insure that secondary ID approval is the equivalent of a signed purchase order h appropriate termination provisions i an appropriate communication link is established between the end user machine to be upgraded and provider s enterprise and through that link the user will transmit end user machine configuration information to the provider j user grants provider a security interest in an upgraded machine upon installation of control code associated with the upgrade k user agrees not to circumvent technological measures used to secure control code.

Once a base agreement is in place a supplement may be established for each specific end user machine. The supplement establishes certain basic information about the machine and the user ID s authorized to order upgrades. In preferred embodiments of the present invention the supplement documents the following information for each end user machine a user ID authorized to initiate an upgrade order b a unique customer identifier such as a customer number c an end user machine type code identifying the machine type and the installed computing resources d a unique end user machine identifier such as a machine serial number. The user ID is the ID established during server access step . The customer identifier such as a customer number is a unique identifier associated with this customer throughout provider s enterprise. This identifier may be used to relate various provider records associated with a specific customer. The machine type code is a value that identifies the set of installed computing resources available within an end user machine. For example in preferred embodiments of the present invention an IBM ESERVER ZSERIES z900 machine is machine type 2064 with models ranging for instance from where the third digit in the model designation reflects the number of acquired CPs. Further designation as any model within the range describes that up to twelve PUs are available of which up to two may be configured as SAPs up to 9 may be configured as CPs IFLS ICFs and two are spares which may be substituted for any of the previous PUs in the event one should fail. The end user machine identifier is a value that uniquely identifies a specific machine throughout provider s enterprise such as a unique serial number.

Additionally preferred embodiments of the present invention optionally include a secondary approval ID. The optional secondary approval ID may be used by customers requiring an approval step such as by a purchasing specialist prior to final order submission. Each supplement indicates whether or not secondary approval is required for the specific machine and if required the secondary ID from which approval is to be provided.

Contract step further includes creation of an end user machine profile pricing and customer notification. Once a supplement is executed for a specific machine provider uses the machine specific information to establish a machine profile. In preferred embodiments of the present invention a machine profile includes the machine type code machine serial number customer number user ID and the secondary approver ID or an indication that secondary approval is not required for the end user machine. As illustrated in the end user machine profile information is stored in machine profile database . A pricing methodology is established for end user machine upgrades in preferred embodiments of the present invention pricing is established once an end user machine profile is created however alternative embodiments are envisioned in which these steps are performed in a different sequence or in parallel.

In preferred embodiments of the present invention an upgrade pricing methodology involves the following steps a establish a pricing metric or unit of measure b negotiate prices for the metric and c establish a relationship between end user machine hardware upgrade increments and the pricing metric. More than one pricing metric may be used for each end user machine. For example preferred embodiments of the present invention price memory upgrades as follows the pricing metric is gigabytes GB of memory provider negotiates a price per GB with the customer. In this memory pricing model there exists a direct relationship between the pricing metric GB and end user machine hardware upgrade increments also measured in GB . Preferred embodiments of the present invention support the pricing of I O paths on a peer path basis such that there is a specific price for each I O path enabled in the event I O paths are offered through this embodiment. Preferred embodiments of the present invention price processor upgrades as follows the pricing metric is a performance measurement such as capacity units provider negotiates a price per capacity unit with the customer provider establishes a relationship between the number of active processors and the performance metric. For example Table 1 below provides the estimated performance increase in MSUs Millions of Service Units expected by the addition of the nprocessor where n goes from 1 to the maximum number of processor installed in the specific model of the end user machine. The price for a specific upgrade is determined by adding the incremental performance numbers for each added processor and multiplying the total expected performance increase by the negotiated price per capacity unit. Subsequent negotiations between provider and customer may modify the pricing methodology simply by renegotiating the price per metric price per GB price per capacity unit .

Alternative pricing methodologies are possible within the spirit and scope of the present invention. For example an alternative pricing method useful for both memory and processor upgrades involves calculating a price based on a percent of a known reference price for the individual memory or processor upgrade request. The reference price is pre loaded within the end user machine profile database . Furthermore memory upgrades can be discounted based on a processor upgrade being purchased along with the memory upgrade. Finally once a machine profile is created and a pricing methodology is established provider may notify the customer that the upgrade process of the present invention is available for the specific machine.

In preferred embodiments of the present invention once contract step is complete end user machine setup step is executed. End user machine setup operates through console of enabling control hardware to download control code from provider enterprise via communications link and further enabling support code to install the downloaded control code on end user machine . End user machine setup is completed by issuing an INSTALL request to server from provider server . The next time the support code initiates a call home i.e. a call to server using facilities provided by console server remotely installs the CIU enablement feature using support code running on support hardware .

With reference now to a customer order process step of preferred embodiments of the present invention is described. While many of the process steps are described from a user perspective it is understood that a corresponding provider process enables the user steps described the steps of the corresponding provider process are also described herein. To upgrade an end user machine a user starts by entering the user ID established during the contract process step and a password associated with the user ID to sign on to user interface of server at step . In preferred embodiments user interface is IBM RESOURCE LINK. Additional information regarding RESOURCE LINK is presented in Technical Guide Appendix D which was previously incorporated herein by reference in its entirety. Server validates the user s ID and password and authorizes user access to machine profiles corresponding to end user machines associated with the validated user ID during a prerequisite process as described herein with reference to . Interface may provide a user with a variety of options in addition to end user machine upgrades to initiate an upgrade order when a variety of options are presented a user selects the upgrade option step which in preferred embodiments of the present invention is referred to as Customer Initiated Upgrade CIU . Once the user selects the CIU option the user is presented with a list of end user machines associated with the user ID and for which the prerequisite process of is complete. In preferred embodiments of the present invention the user is presented with the following information for each listed end user machine machine type machine serial number customer number pseudonym user ID and the secondary approver ID associated with this end user machine or an indication that no secondary approval is required. In preferred embodiments of the present invention the first three fields listed type serial number customer number are presented in a single field and are used to uniquely identify a specific machine. Server provides the end user machine list by accessing user machine profile database retrieving all machine profile records associated with the specific user ID and presenting the retrieved records to a user via interface . As previously noted the association between user ID and one or more end user machines is established during the prerequisite process of A user may then select a specific machine from the list of machines presented step .

Upon receipt of the user s end user machine selection step server accesses working machine configuration database to retrieve the current hardware configuration of the selected end user machine. Server then presents via interface a machine profile from end user machine profile database and information relating to the current configuration of the machine from working machine configuration database . In preferred embodiments of the present invention the current configuration information includes an indicator of the total number of processors enabled such as a model number and the number of processors currently enabled in a variety of configurations. Upon reviewing the current machine configuration information a user selects an order initiation option step to begin reconfiguring end user machine . Server responds by presenting an order screen to the user displaying the current configuration and a target configuration the target configuration being initialized to the current configuration when the order screen is first presented. The order screen is interactive allowing a user to modify the target configuration step and receive updated information regarding further configuration options based on the new target configuration. A user may iteratively modify the target configuration until acceptable steps and .

In preferred embodiments of the present invention each processing unit PU may be configured in a variety of ways as a central processor CP system assist processor SAP integrated facility for LINUX IFL or an internal coupling facility ICF . CPs are considered general purpose processors and are used for execution of end user application programs. IFLs are a specialized processor limited to the execution of the LINUX operating system corresponding prerequisite software and user application programs which run in the LINUX environment. SAPs are specialized processors used by the machine not by the end user or end user application programs for processing of input output data. ICFs are specialized processors used by the machine not by the end user or end user application programs for interaction between virtual computing environments executing on the same end user machine.

When presenting the end user machine configuration server lists the current model number or other indicator representing the total number of available processors and the number of processing units configured as each possible type. In preferred embodiments of the present invention server presents the current configuration in a column called current configuration with a line item for model number and a line item for each PU type. The current configuration column also displays the current amount of memory enabled in end user machine . Server also presents a second column of data in the order screen of steps and representing the target or upgrade configuration in preferred embodiments of the present invention the same line items are used for the target configuration model PU type i.e. CP ICF IFL and SAP and memory.

In preferred embodiments of the present invention the target configuration is presented in a series of drop down boxes where the contents of each box is initialized to the current configuration i.e. model number of active PU s of each type and active memory . Upon selecting a drop down box a user is presented with a set of values from which to select. The set of values represents the valid upgrade options available for the specific line item based on the existing end user machine profile and configuration and any target configuration inputs entered by the user during the present order session. The user creates a target configuration by selecting from the listed values in each drop down box for the model designation and for each resource type step . Selecting a new model determines the total number of processing units available for enablement as previously discussed with reference to configuration rules. In response to user selection of a new model configuration computing engine of server determines a new set of possible PU configurations for each PU type and updates the PU drop down boxes accordingly. As the user selects upgrade options for each processor type the total number of processors available to be enabled in other configurations may be reduced. The set of values presented in the drop down boxes is dynamically updated each time a user modifies the target configuration thereby continually presenting only valid upgrade options. Server accomplishes the dynamic update through a set of configuration rules enforced by configuration computing engine as previously described.

Configuration information provides valid upgrade options to a user limiting user input to configurations that do not exceed the total installed resources of end user machine i.e. resources and as constrained by configuration rules specific to end user machine . A variety of options exist for the presentation of configuration information . For example in one embodiment of the present invention illustrated in order entry screen configuration information includes the following line items model ICF LINUX SAP and memory. No line item appears for general purpose CP processor units this information is determined by subtracting the total number of specially configured PUs ICF LINUX SAP from the total number PUs indicated as enabled by the model designation. For example in the embodiment illustrated in order entry screen the current order upgrades end user machine from a model to a model increasing the number of enabled PUs by one from 7 enabled PUs to 8. The upgrade configuration indicates a total of 2 specially configured PUs the order is thus increasing the number of CPs from 5 enabled to 6 enabled. In this embodiment no CP line item is needed. Alternative presentations are possible within the spirit and scope of the present invention. For example in another embodiment of the present invention a line item is presented for each PU type including CP for the current and upgrade configurations. In this embodiment a model designation is used to identify the resources installed in end user machine whether or not enabled. In other words the model designation identifies the total set of resources and . In this embodiment each PU type is explicitly shown in a line item to increase the number of general purpose CPs in this embodiment a user makes a new selection in the drop down box for the CP line item upgrade configuration column.

In preferred embodiments of the present invention all configuration rules relating to end user machine are enforced during the order process steps and . As described above many configuration rules are enforceable through the use of drop down boxes having dynamically updated values from which a user makes selections. In some circumstances however one or more selections may interfere with some other option or configuration rule not represented by a drop down box. In such circumstances the methods of the present invention provide feedback by issuing a warning to the user. For example for end user machines with a feature such as IBM Capacity Backup Upgrade CBU enabled CBU is an offering which provides an enterprise with internal disaster recovery services by allowing for the on demand increase in a designated end user machine s number of CPs configuration computing engine will recognize when an upgrade configured through this present invention will enable CPs otherwise designated for availability to CBU in which case the server will present the end user with notification that the specified upgrade will reduce the number of CPs available for CBU. Additional information regarding CBU is presented in Technical Guide section 6.4 which was previously incorporated herein by reference in its entirety.

In preferred embodiments of the present invention server further calculates a price for the upgrade based upon the current target configuration and the pricing methodology established in the prerequisite process of . Each time a user modifies the target configuration step server provides an updated order price and an updated set of upgrade options. The user may then use this information to determine if the target configuration and price are acceptable step . If not the user iterates steps and until the target configuration and price are acceptable. At this point the user submits an order for the target configuration step . Upon receipt of the customer s order submission server provides an order verification screen to the customer. The order verification screen includes the current configuration the target configuration the order price and a list of terms under which the customer may accept the order. The customer reviews the order verification screen step and decides whether or not to accept the order. If the customer accepts the order the order is submitted and received at server for subsequent fulfillment processing step . The customer is then presented with an order confirmation screen showing the current configuration the ordered configuration and a message indicating that a current order is in process for this machine. In preferred embodiments of the present invention an order history is provide showing the status of all upgrade orders placed for the specific machine. Table 2 lists types of status indicators associated with order processing per preferred embodiments of the present invention.

An optional secondary approval step may be performed at this time if the customer establishes the requirement for secondary approval along with a secondary approver ID during the prerequisite process of . If secondary approval is required additional process steps are performed upon customer order verification step . Upon order verification for an end user machine requiring secondary approval server notifies the secondary approver ID associated with the machine corresponding to the verified order. In preferred embodiments of the present invention notification is sent by email the notice including the following information customer name end user machine type and serial number designation current configuration upgrade configuration and purchase price plus an explanation of why the notification is sent to the secondary approver and instructions for authorizing the order. The secondary approver uses an Internet capable workstation such as workstation or similar workstation to sign on to server via interface using the secondary approver ID. The secondary approver is presented with a screen providing information pertaining to the requested upgrade specific machine requested upgrade purchase price . The secondary approver types in his Purchase Order Number in the field provided on the screen using his keyboard and selects I Approve using pointing device . Should the secondary approver select I Do Not Approve the server cancels this request for an upgrade and sends email notification to both the primary and secondary approver Ids. Although the use of secondary approval is optional in preferred embodiments of the present invention using secondary approval the secondary approver is a customer purchasing representative and the secondary approval is the equivalent of a signed purchase order. As mentioned previously with respect to contract process of terms relating to secondary approval and purchase order requirements are included in the base agreement between customer and provider.

With reference now to a fulfillment process of preferred embodiments of the present invention is described. The fulfillment process represents a preferred embodiment of fulfillment process . As previously noted the fulfillment process is triggered when the provider receives an electronic order step upon the conclusion of the order process of . The order may be received upon completion of customer verification step if secondary approval is not required or upon receipt of secondary approval if required for the machine corresponding to the electronic order.

The fulfillment process of illustrates an important feature of the present invention the use of parallel processing and process gates. This feature provides the ability to respond quickly to customer upgrade orders effectively leveraging the underlying technologies to provide customer installable capacity upgrades on demand. As illustrated in and described in detail below once an order is received step processing begins in three parallel paths credit verification steps order processing steps and generation of control code step . Unlike a traditional manufacturing environment producing physical assets per a customer order the end user machine upgrade process of the present invention produces a deliverable consisting entirely of computer readable instructions. As described in detail below these instructions are generated by a provider server such as server . Therefore unlike a traditional manufacturing environment deliverables may be produced in parallel with operations such as credit verification with minimal risk to the provider. Parallel paths are subsequently joined using gates steps and where processing proceeds upon completion of all parallel paths leading into the gate. Through parallel processing and process gates a code deliverable is provided to a user shortly after conclusion of provider s internal approval process.

Fulfillment begins when an electronic customer order is received or upon receipt of secondary approval if required step . Upon receipt of an order or secondary approval three process steps are initiated in parallel step step and step . Each path is described in detail herein.

Credit approval begins with step notification of provider s credit approval organization. In preferred embodiments of the present invention Customer Service Operations CSO is notified by server through provider interface . In preferred embodiments of the present invention interface is IBM RESOURCE LINK. In preferred embodiments of the present invention CSO notification is accomplished by email and the notification includes customer name and customer number designation end user machine type and serial number purchase price plus an explanation of why this information is being provided and instructions for responding to the notice. Using the notice information passed in step CSO performs a credit check on the customer placing the order step as known in the art. If credit is approved processing continues to gate step joining the order entry process of steps and described below . If credit is not approved processing continues to step where the order is canceled and the customer is notified.

Order entry begins with step notification of the provider function responsible for initiating the order entry process. In preferred embodiments of the present invention server sends the notification via provider interface . The notification includes customer name and customer number designation machine type and serial number designation configuration of order as requested by the end user. Provider s order initiation organization uses a configuration tool called eConfig in preferred embodiments to translate the customer s requested upgrade order into the exact machine type model and or feature code designations required for order processing and billing step . This information is generated by the configuration tool and is passed to the order entry system step . Once in the order entry system this information is used to generate invoices and to update the provider s install base records. Upon completion of order entry step the order entry processing path joins the credit approval processing path at gate . Gate allows processing to continue to step only upon the successful completion of steps and thereby joining two parallel processing paths. After gate an order is entered and forwarded to manufacturing step allowing manufacturing to update their records and reflect for revenue accounting purposes shipment of the ordered upgrade to this customer. Manufacturing creates an order number for this upgrade order step using the information passed in step . In preferred embodiments of the present invention the order number is a Miscellaneous Equipment Specification MES number. The MES number is used in subsequent processing to identify the order and associate the control code used to implement the order with billing information. Once created therefore the MES number is passed to provider s customer account database such as database of along with other order information used in creating an invoice for the upgrade such as customer number machine model machine serial number and purchase price. The MES number is further used for the generation of other purchase transaction documents.

At this point step in fulfillment process illustrated in provider s internal approval process is complete. As illustrated in therefore provider s internal approval process includes a credit approval process and an order entry or administrative process.

The control code deliverable is created at step in parallel with provider s internal approval process which consists of credit approval steps and and order entry steps and . As previously discussed the present invention involved a deliverable consisting of control code capable of enabling or activating a subset of dormant resources . In preferred embodiments of the present invention the control code deliverable is licensed to the customer rather than sole title to the code remains with provider. In preferred embodiments of the present invention therefore the control code is called Licensed Internal Code Controlled Configuration LIC CC or LICCC . A control code deliverable or LICCC may be produced in a variety of ways. Preferred embodiments of the present invention create LICCC deliverables in one of two ways as ordered or in advance of an order. For example for systems having a manageable number of possible configurations such as the IBM ESERVER ZSERIES 2064 and 2066 machines all possible upgrade configurations for the control hardware are determined in advance using data in the working machine configuration database . This analysis and computation occurs when the machine is initialized for CIU capability by the provider server i.e. during prerequisite process . A GENERATE request is sent to manufacturing manufacturing generates and sends all support code LICCC records for the specific customer machine to server where the LICCC records are stored for future customer order requests. The data contained within the LICCC is encrypted and will only be capable of being used on the specific end user machine for which it is created. This security is accomplished by using a burned in key that is within the given processor memory or I O unit for which the LICCC applies and this key is used when generating the specific LICCC records within manufacturing . The code is encrypted in manufacturing when it is generated and can only be decoded on the given hardware for which the code is intended. When the customer initiates a download for the specific order using support code from the support hardware the LICCC record is securely downloaded to the machine in the form of a file. Support code decodes the record and applies it to the machine using control code . Alternatively for end user machines having a large number of possible upgrade configurations such as an IBM ESERVER ZSERIES 2088 it is more efficient to generate the LICCC records on demand. Under these circumstances LICCC records are generated within the end user machine configuration reporting server upon a customer request to download a specific CIU upgrade order. This eliminates the need to pre generate all possible upgrade combinations. The same download and install process is used as described herein with reference to systems for which all LICCC records are created in advance.

Once the control code or LICCC is created and stored processing continues at gate where order entry and credit processing merge with the control code process. While the control code or LICCC is produced whether of not the credit and order entry processes are successfully completed gate prevents the control code from being made available to the customer until credit and order entry processing are successfully complete i.e. provider s internal approval process . Once the order number called MES number in the preferred embodiment is recorded through the provider user interface management engine releases the control code prepared for this order. At step the control code or LICCC is made available for customer download or staged for download. Staging is accomplished by sending the control code to server . Once the control code or LICCC is staged in server the customer is notified that the code is available for download step . In preferred embodiments of the present invention server notifies the customer via email informing the customer that the LICCC for an upgrade is available for download and provides the date upon which the availability of this LICCC will expire. In preferred embodiments of the present invention the control code or LICCC may be downloaded for a specified period of time after staging after which time the code expires. After the customer is notified that the control code is available for download step provider waits until one of two possible events occurs the customer downloads the code or the code expires. If the customer download the control code step database notifies server which updates customer account database thereby notifying provider s billing organization that code download is complete. In preferred embodiments of the present invention an order is cancelable by a customer at any point prior to download. Once download is complete however the order is no longer cancelable. In preferred embodiments of the present invention billing is notified of code download however the customer is not invoiced until server receives notification from customer end user machine that the control code installation is complete. Alternatively if the customer fails to download the control code step server determines whether the code has expired step . If the code has not expired processing continues at step . If the code has expired step processing continues at step where the control code or LICCC is deleted from server . Processing then continues at step where the customer is notified that the order has been canceled. Preferred embodiments of the present invention apply a 30 day expiration period.

The download process is initiated by the end user customer. The customer logs onto console and selects the appropriate end user machine and associated control hardware for which he wishes to download and install upgrade code. In preferred embodiments the customer executes the Single Object Operations task available through management application . This allows the user to log directly on to support hardware and make appropriate selections to apply the upgrade which in the preferred embodiment is done by selecting the Perform Model Upgrade option. The end user is then instructed to enter in the order number which equates to the specific upgrade control code that is staged on the end user machine configuration reporting database server . When the end user enters the order number a communication request is initiated from support hardware directly to the end user machine s console where a connection is established to server using the console modem . The order number is sent to server and verified against outstanding orders for the specific end user machine including its support hardware and control hardware . If a match is found the upgrade control code is downloaded to the specific end user machine s support hardware . The connection from console to the server ends and the upgrade enablement function is continued on the support hardware via support code . All records that are downloaded to the support hardware are encrypted and can only be decoded within the support code control code and associated control hardware using keys linking the upgrade s control code to the specific end user machine.

The code installation process involves specific functions contained in the support code functions that are invoked from the support hardware . These functions communicate with hardware functions within control code and control hardware . Validation is performed on the upgrade s control code by the support code to ensure proper download i.e. that the code is not corrupted during transmission from server through console to support hardware . Once validation is confirmed the upgrade control code is passed to the end user machine control code and control hardware and the appropriate dormant computing resources are enabled accordingly completing installation of the upgrade.

With reference now to billing trigger step and billing step are described. As previously noted all information required to generate an invoice for the customer order is passed to customer account database upon customer download of the control code or LICCC step of . In preferred embodiments of the present invention code staging to server merely passes data and notification but does not trigger generation of an invoice. As shown in step invoice generation is triggered by customer download and installation of the control code or LICCC the event that results in a changed configuration of end user machine . Upon customer installation of the control code the configuration of end user machine is changed to the target configuration specified during order process step . When the configuration of end user machine is thus changed end user machine uses connection between console and server to notify server of the configuration change. This notification triggers two events configuration update and billing. Upon notification of a configuration change from end user machine server notifies server of the configuration change server then updates the working machine configuration database to reflect the new configuration of end user machine such that server has access to the most current detailed configuration associated with that machine. As previously noted the fulfillment process of provides database with all information needed to generate an invoice step triggers invoice generation.

Alternative embodiments of the present invention are envisioned such as an upgrade processed for leased end user machines an express upgrade process and a temporary upgrade process and a upgrade remarketing process. Each alternative is described in detail herein with reference to the aspects of the basic process that are modified for each embodiment.

The invention has thus far been illustrated in a circumstance where the customer owns the machine to be upgraded however there may be circumstances where the customer merely leases the machine from another party. The lessor may be the provider or a third party. While the customer may wish to initiate an upgrade order provider s processes should insure lessor s approval of the order and insure lessor s commitment to pay provider for the ordered upgrade. When end user machine is leased prerequisite process of is modified to establish the appropriate business relationships among the parties. In particular contract step of the prerequisite process of is modified in two ways. First a lessor approval ID is assigned to the machine profile associated with the leased machine. The lessor approval ID is analogous to the optional customer secondary approval ID when present notice is forwarded to the lessor approval ID upon customer order verification step if customer secondary approval is not required or upon receipt of customer secondary approval if required. Second an additional agreement is executed between provider and lessor establishing the terms under which provider accepts and fulfills upgrade orders for the leased machine. The important terms of this agreement require lessor to agree to provide authorization for the upgrade order and to pay provider for the upgrade upon customer installation. In preferred embodiments of the present invention lessor may authorize orders on a case by case basis or may provide blanket authorization for a specific machine. The blanket authorization remains in effect until revoked by lessor.

As previously described order process is modified when end user machine is leased in addition to order verification and customer secondary approval if required by customer lessor authorization is required prior to order fulfillment. Once the customer order is verified or further approved if required by customer lessor is notified of the pending upgrade order preferably via email sent by server via Internet to the ID provided by the lessor in their contract document. This notice provides lessor with customer name machine type and serial number designation requested upgrade configuration and identification number and purchase price. To authorize the order lessor accesses server through interface using workstation similar to workstation . Lessor signs on using the lessor approval ID associated with end user machine during the modified prerequisite process. Lessor selects the appropriate upgrade request using the upgrade identification number and selects either I Approve or I Do Not Approve using his pointing device .

Although the base process embodiment previously described results in significant reduction in the time necessary for a provider to deliver a computer hardware upgrade further improvements are possible in keeping with the spirit and scope of the present invention. As previously mentioned in the discussion of the nature of the deliverable involved i.e. computer readable instructions rather than custom built hardware allows a provider to create the deliverable in parallel with internal approval and administrative processes without incurring significant risk. In other words a provider loses little by creating a deliverable for an order that is not approved. The provider significantly improves responsiveness however by producing the deliverable in parallel with internal approval and administrative processes.

Further improvements in responsiveness may be obtained by an alternative embodiment of the present invention wherein the deliverable is provided to the customer before internal approval and administrative procedures are complete. The increased risk encountered by the provider may be managed through appropriate procedures and through additional terms and conditions in the agreement between provider and customer. The additional terms and conditions are part of a modified prerequisite process step of . The procedures are part of a modified fulfillment process step of . While in practice the modified prerequisite process takes place prior to fulfillment the fulfillment process modifications are described first to provide a better framework for describing the additional terms involved in the modified prerequisite process.

As illustrated in the express process embodiment differs from the base process in the order of steps following code generation step . In the express process embodiment of the control code or LICCC is made available to the customer or staged in database as soon as code generation step is complete. In contrast the base process embodiment of included gate step after code generation thereby allowing processing to continue to code staging only upon successful completion of credit and administrative processes steps through . Providing the control code or LICCC prior to completion of credit and administrative process involves a tradeoff for customer and provider. Provider gains an improvement in responsiveness that may be unattainable in a traditional process where credit approval is obtained prior to providing the ordered deliverable. Provider s risk is increased in exchange since the deliverable is provided prior to credit approval thus introducing the possibility that a deliverable may be provided to a customer who is unable to meet provider s credit approval requirements. Similar tradeoffs exist for the customer upgrades are provided sooner however the customer may need to agree to additional terms allowing provider to manage the increased risk. Once the control code or LICCC is staged for download in database the customer is notified that the control code is ready for download step . Step is analogous to step . Control code may now be downloaded by the customer step . If the control code is downloaded processing continues to gate . Gate allows processing to continue to step notify billing only upon the successful completion of step create MES and upon customer code download step . Upon completion of both events processing continues to step notify billing this step is analogous to step of . If the customer does not download the control code processing continues through step where the code expiration date is checked. If the code expires the LICCC is deleted from database step and the order is canceled step . Steps and are analogous to steps and respectively.

The express process embodiment introduces the possibility that an order may be canceled after the LICCC is downloaded. Order cancellation step therefore differs from step of . When at step the customer s credit is not approved processing continues to step order cancellation. Since code download steps through are no longer gated by step and preceding steps control code may have been downloaded at step when processing reaches step . When processing reaches step server determines if the control code has been downloaded i.e. has step been processed . If not the code is deleted from database and the customer is notified of order cancellation similar to actions taken in steps and and steps and . If the control code has been downloaded when processing reaches step however the customer has obtained an asset for which payment will not be received and remedial actions are taken by provider. When this occurs a RESTORE LICCC is created an staged for download in database and the customer is notified that the RESTORE LICCC is available for download. The RESTORE LICCC represents control code that when installed restores end user machine to its pre order configuration. Periodic reminders may be sent to the customer to download the RESTORE LICCC.

The prerequisite process step should be modified whenever the express fulfillment process is implemented. As previously mentioned the machine profile created during the prerequisite process indicates that the express process is enabled for a specific machine. To manage provide s risk additional terms may be used in the provider customer agreement. For example the following terms may be added to the base agreement a download and installation of control code does not constitute provider s acceptance of customer s order b if provider does not accept customer s order customer agrees to give provider access to the upgraded end user machine within a specified time periods for provider to restore the previously installed configuration c if provider does not accept customer s order customer is no longer able to use the express process for any of provider s end user machines d customer is responsible for payment upon provider s acceptance of customer order and e customer agrees not to transfer ownership of a machine during provider s order acceptance period.

Further improvements in functionality may be obtained by an alternative embodiment of the present invention wherein the deliverable is provided to the customer on a temporary basis. All components of the invention described in provide the same function as previously described herein. In order to participate in this process the end user must accept additional contract terms obligating them to pay for usage of additional computing resources until such time as they return these additional computing resources to the dormant classification thus rendering these additional computing resources once again as unavailable until reacquired at some point in the future either permanently or temporarily.

The temporary process embodiment introduces a requirement to monitor the end user machine such that changes to its configuration are noted with durations of usage of additional computing resources measured. This configuration information will be transmitted from end user machine to server and subsequently transferred to database . Server using control monitoring engine will calculate the duration of temporary computing resource enablement. Configuration computing engine will apply pricing derived from the same price tables established for permanent upgrades stored on database to calculate appropriate billing information. This billing information will be passed to the order initiation for creation of an order which is input to the order entry system such that an appropriate invoice will be generated and sent to the end user.

Further enhancement to the invention are obtained by enabling authorized provider remarketers to participate in the upgrade transaction whether temporary or permanent. In such cases the same components described in apply and the same process steps described in occur. In such instances where a remarketer is a party to a transaction the configuring ordering preparation download and installation of an upgrade to end user machine occur as previously described. To support the requirement for the remarketer to set prices and term of sale for these transactions the end user machine is identified as being under remarketer sales in end user machine profile database . As such no price table is established for these machines and instead the remarketer provides pricing for requested upgrades outside of the embodiment of this invention. The remarketer participates in the embodiment of this invention by serving as the initiator of an order in steps and of . Invoices that are ultimately generated in steps are sent to the remarketer who is liable for payment to the provider. Remarketer in turn invoices end user per their established prices and terms of sale.

While the invention has been described in detail herein in accord with certain preferred embodiments thereof many modifications and changes therein may be effected by those skilled in the art. Accordingly it is intended by the appended claims to cover all such modifications and changes as fall within the true spirit and scope of the invention.

For example the advantages of the present invention can be implemented in software hardware or in a combination thereof.

As an example one or more aspects of the present invention can be included in an article of manufacture consisting of at least one program storage device readable by a machine tangibly embodying at least one program of instructions executable by the machine to perform the capabilities of the present invention.

The flow diagrams depicted herein are just examples. Many variations of these diagrams or the steps described therein may be possible within the spirit and scope of the present invention. For example steps may be performed in different sequence steps may be added or modified. All such variations are considered part of the claimed invention.

