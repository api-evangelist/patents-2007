---

title: Named object view of electronic data report
abstract: A named object view of a report is generated from an electronic data file. Objects in the file to be published are identified in the file. A named object view of the report associated with the file is generated by displaying published identified objects according to associated viewing rights. A viewer at a client is presented with the named object view of the report, according to the viewing rights, such that the viewer's attention is focused on the published objects.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08566953&OS=08566953&RS=08566953
owner: Microsoft Corporation
number: 08566953
owner_city: Redmond
owner_country: US
publication_date: 20070924
---
This application claims the benefit under 35 U.S.C. 120 of U.S. patent application Ser. No. 11 223 541 filed on Sep. 9 2005.

Electronic document sharing allows multiple users to access the same document. Some documents such as spreadsheets may include multiple sheets with each sheet including a large amount of data. A report may be generated from the document to present the data in an organized format. However the report may confuse viewers if the report contains too much data. A viewer may need to search through the report to locate desired information which can be laborious and time consuming. Also electronic documents typically include security at a file level thereby allowing access to the entire file or denying access to the entire file. Such security may be under inclusive and over inclusive and not represent the desired security for objects of the electronic document.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key and or essential features of the claimed subject matter. Also this Summary is not intended to limit the scope of the claimed subject matter.

Aspects of the disclosure include a named object view of a report that is generated from an electronic data file. Objects in the file to be published are identified in the file. A named object view of the report associated with the file is generated by displaying published identified objects. A viewer at a client is presented with the named object view of the report such that the viewer s attention is focused on the published objects.

Other aspects of the disclosure include named object view of a report that is generated from an electronic data file. Objects in the file to be published are identified in the file. A named object view of the report associated with the file is generated by displaying published identified objects according to associated viewing rights. A viewer at a client is presented with the named object view of the report according to the viewing rights such that the viewer s attention is focused on the published objects with access rights.

Aspects may include a computer process a computing system or an article of manufacture such as a computer program product or computer readable media. The computer program product may be a computer storage media readable by a computer system and encoding a computer program of instructions for executing a computer process. The computer program product may also be a propagated signal on a carrier readable by a computing system and encoding a computer program of instructions for executing a computer process.

Embodiments are described more fully below with reference to the accompanying drawings which form a part hereof and which show specific exemplary embodiments. However embodiments may be implemented in many different forms and should not be construed as limited to the embodiments set forth herein rather these embodiments are provided so that this disclosure will be thorough and complete and will fully convey the scope. Embodiments may be practiced as methods systems or devices. Accordingly embodiments may take the form of an entirely hardware implementation an entirely software implementation or an implementation combining software and hardware aspects. The following detailed description is therefore not to be taken in a limiting sense.

The logical operations of the various embodiments are implemented 1 as a sequence of computer implemented steps running on a computing system and or 2 as interconnected machine modules within the computing system. The implementation is a matter of choice dependent on the performance requirements of the computing system. Accordingly the logical operations making up the embodiments described herein are referred to alternatively as operations steps or modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover the disclosure may be implemented with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. The disclosure may also be implemented in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

The computer architecture shown in illustrates a desktop or laptop computer including a central processing unit CPU a system memory including a random access memory RAM and a read only memory ROM and a system bus that couples the memory to the CPU . A basic input output system containing the basic routines that help to transfer information between elements within the computer such as during startup is stored in the ROM . The computer further includes a mass storage device for storing an operating system application programs and other program modules which will be described in greater detail below.

The mass storage device is connected to the CPU through a mass storage controller not shown connected to the bus . The mass storage device and its associated computer readable media provide non volatile storage for the computer . Although the description of computer readable media contained herein refers to a mass storage device such as a hard disk or CD ROM drive the computer readable media can be any available media that can be accessed by the computer .

By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer .

According to various aspects of the disclosure the computer may operate in a networked environment using logical connections to remote computers through a network such as the Internet. The computer may connect to the network through a network interface unit connected to the bus . It should be appreciated that the network interface unit may also be utilized to connect to other types of networks and remote computer systems. The computer may also include an input output controller for receiving and processing input from a number of other devices including a keyboard mouse or electronic stylus not shown in . Similarly the input output controller may provide output to a display screen a printer or other type of output device.

As mentioned briefly above a number of program modules and data files may be stored in the mass storage device and RAM of the computer including the operating system that is suitable for controlling the operation of a networked personal computer. The mass storage device and the RAM may also store one or more program modules. In particular the mass storage device and the RAM may store a web browser application program . The web browser application program is operative to request receive render and provide interactivity with electronic documents such as a web page that has been formatted using a mark up language ML such as HTML or XML.

As will be described in greater detail below the web page may comprise a named object view of a report associated with electronic data from an application program . The application program may include a spreadsheet application program. It should be appreciated that although some embodiments described herein are presented in the context of a spreadsheet application program other types of application programs that support electronic data reporting are contemplated. For instance embodiments may include a word processing application program a presentation application program a drawing or computer aided design application program or a database application program in order to allow the rendering of and interaction with a document without requiring a dedicated application program. Additional details regarding the process for generating a named object view of a report are provided below with respect to .

As shown in the computer is connected to the network . Also connected to the network is an application server . The application server comprises a server computer which may contain some or all of the conventional computing components described above with respect to . Additionally the application server is operative to execute a web server application for receiving and responding to requests for documents stored at or accessible to the application server . Moreover the application server is operative to receive and respond to requests for pages generated by a web application . It should be appreciated that the web application may comprise code executable at the application server executable code for communicating with other computers and may include templates graphics audio files and other content.

The web application is operative to provide an interface to a user of the computer to view a named object view of a report associated with electronic data accessible via the network . In particular the web application utilizes a server application programming interface API . The server API may be operative to enable communication with a spreadsheet calculation server . The spreadsheet calculation server is operative to execute a spreadsheet calculation server program . The spreadsheet calculation server program comprises an executable program for retrieving and calculating a named object view of a report associated with electronic data. The electronic data may be any file such as a workbook stored in a data store . The spreadsheet calculation server may include many of the conventional hardware and software components discussed above with respect to .

The computer may transmit a request to the application server for a named object view of a report of the workbook within the context of the web browser application . In response to such a request the web application communicates with the spreadsheet calculation server through the server API . In particular the web application requests from the spreadsheet calculation server the requested named object view of the report.

The spreadsheet calculation server program loads the appropriate workbook from the data store and processes the workbook . The workbook is processed as discussed in detail below. Briefly the spreadsheet calculation server identifies the objects to be published in the workbook . The spreadsheet calculation server generates the named object view of the report associated with the workbook by publishing the identified objects. The report renderer converts the published objects into ML such that each object that is identified for publishing may be individually rendered by the web application . The application server forwards the ML version of the published objects to the client for display by a web browser via the network . A user at the client may then view the published objects of the workbook .

In another aspect an author and or administrator of workbook may set rights associated with the objects of workbook . The rights may include an access right a no access right a write access right a read access right an edit access right and or any other type of right or security for securing objects. The viewer rights may be associated with a specific viewer identifier and or a group identifier associated with a plurality of viewers. In one aspect the viewer identifier and or group identifier is an identifier associated with a document management server or user management server. In this manner an author and or administrator may easily set rights for objects of workbook below the file level. In one aspect the rights are associated with the objects generated from the data of workbook . The data of workbook may include a different set of rights that are separate from the rights of the objects generated from the data. The data of workbook may include no access rights for any viewer except for the author. The objects generated from the data of workbook may include a combination of access rights depending of the rights granted to a particular viewer. As an example an author administrator may grant no rights to the data of workbook and grant an access right to a pivot table object generated from the data in the workbook to a first viewer and grant no access rights to a chart object generated from the data in the workbook to the first viewer.

Continuing with the above example the computer may transmit a request to the application server for a named object view of a report of the workbook within the context of the web browser application . The request may include an associated viewer identifier and or group identifier. In response to such a request the web application communicates with the spreadsheet calculation server through the server API . In particular the web application requests from the spreadsheet calculation server the requested named object view of the report.

The spreadsheet calculation server program loads the appropriate workbook from the data store and processes the workbook . The spreadsheet calculation server identifies the objects to be published in the workbook . The spreadsheet calculation server generates the named object view of the report associated with the workbook by generating the named object view based on the file publication. The report renderer determines whether the objects include security rights. The security rights are identified by a viewer identifier and or group identifier associated with the objects of workbook . The viewer identifier and or group identifier associated with the request is compared to the security rights of the objects to determine whether to grant access. When the requesting viewer has access rights to the object the report renderer converts the published objects into ML such that each object that is identified for publishing and has the appropriate rights for the requesting viewer may be individually rendered by the web application . The application server forwards the ML version of the published objects to the client for display by a web browser via the network . A viewer at the client may then view the accessible published objects of the workbook .

In other aspects a viewer at client may associate a link to the object such as a resource identifier in another client application that has a hosted web render. The client application may be an application apart from a web browser. The object renders in the client applicant and the viewer may interact with the object. Such interaction may include manipulating the object changing fields of the object and other types of interaction that is typically association with a spreadsheet application. When interacting the ML associated with the object is refreshed on the client application by a session identifier and communication between the hosted web render of the client application and application server . In this manner the viewer may interact with the object in a client application to provide live features through ML refresh on the client application.

Continuing with the above example an author administrator may grant no rights to the data of workbook and grant an access right to a pivot table object to a first viewer and grant no access rights to a chart object to the first viewer. When the first viewer sends a request for objects associated with workbook an identifier of the first viewer is compared to the objects. In the above example the first viewer has no access to the data of workbook the viewer has no access to the chart object and the viewer has access to the pivot table object. In this manner an author administrator may publish objects of workbook and tailor access rights to the objects according to the requesting viewer of the objects. The first viewer may associate the resource identifier of the pivot table object with a slide presentation application. The ML of the pivot table object is association with the slide presentation application. The viewer may for example pivot the pivot table object. The ML associated with the pivot table object is refreshed on the client application by a session identifier and communication between the hosted web render of the client application and application server . In one aspect the rendering of the pivot table is pulled down from the server and is interactive but the data associated with the pivot table e.g. any internal cashes the data in the spread sheet etc. remains on the server and is not sent between the client and the server. In this manner the viewer may interact with the pivot table object in the slide presentation object to provide live features through ML refresh on the client application.

The workbook includes multiple objects on different pages. The objects may be any item in the workbook that can be individually selected or manipulated. For example the objects may include a table a paragraph a single data cell a bar graph a pie chart a named range an image a pivot table a text box and a line graph . In one embodiment an object in the workbook may be defined to encompass multiple smaller objects. For example an object may correspond to multiple pages of the workbook . In another embodiment an object may include dynamic information such that the size of the object changes over time. For example the named range may correspond to a range of cells in the workbook . The range of cells may increase or decrease in size in response to spreadsheet processing.

An author user or administrative user may access the workbook from a server to generate a report . Alternatively the workbook may be accessed at a client. The user selects objects to publish in the report. For example the user may select the single data cell the named range the text box and the line graph to appear in the report . The user may open the workbook from a publisher interface. In one embodiment names associated with the objects are provided in the publisher interface. The user may select the objects to publish from the list. In one embodiment objects may be selected for publication from multiple workbooks.

Each object to be published is associated with a unique name. The user may select the objects for inclusion in the report by name such that each published object may be easily identified. In one embodiment the published object names may be automatically generated. For example the table may be automatically identified as table table1 or some other unique name. The user may rename the automatically generated name. In another embodiment the user defines a name for the published object. For example the single cell data may be defined as special number . Likewise the named range may be defined as my data .

The selected objects are published in the report . For example the single data cell special number the named range my data the text box and the line graph are published in the report . The unselected portions of the workbook are not published in the report .

A viewer at the client is presented with a named object view of the report . A report renderer converts the published objects into ML when the workbook is accessed from a server. The ML version of the published objects is forwarded to a client for display via a web browser. In one embodiment a published object is rendered on a user interface . For example the user interface may be a web part. A web part is a modular unit of information that has a single purpose. Web parts form the basic building blocks of many web pages. More than one web part may be simultaneously displayed on a dashboard at the client such that different published objects may be viewed side by side. For example the viewer may select the text box and the line graph for display on different web parts because the text box elaborates on data presented in the line graph .

A tool bar that includes the names of the published objects may also be rendered on the user interface . The tool bar may be used for accessing specific published objects. For example the tool bar is a drop down menu that includes a list of the names of the published objects. Specifically the drop down menu includes selectable entries for special number my data text box and line graph. The named object view of the report is rendered on the user interface with the first published object i.e. special number . The other published objects may be rendered at the user interface in response to user input. For example the viewer may select an entry from the drop down menu such that the user interface refreshes and the published object corresponding to the selected entry is rendered on the user interface . Thus each published object may be individually displayed to the viewer at the client. The named object view of the report focuses the viewer s attention on the published objects. The non published objects of the workbook are not displayed to the viewer.

The file is retrieved from the data store and opened at block . The file includes multiple objects. The objects may be any item in the file that can be individually selected or manipulated. The objects may be associated with static or dynamic information.

Moving to operation the objects in the file are named. In one embodiment an object is automatically assigned a name. For example two images may be assigned the names image and image respectively. In another embodiment the name of an object is user defined. For example a single cell or a named range in a spreadsheet file may be defined with a name that communicates meaning to the user. The name of any object may also be renamed by the user.

Transitioning to operation a selection of objects to publish in the report is received. In one embodiment the user selects the objects to publish from a list of the named objects. In another embodiment the user may navigate the file and select each object to be published directly from the file. In yet another embodiment the user may select the objects to publish from multiple files.

Proceeding to operation the named object view of the report is generated using the published objects. Any objects in the file that are not selected for publication are not included in the report.

Continuing to decision operation a determination is made whether the named object view of the report is to be displayed on a web page. The named object view of the report is displayed on a web page when the file is retrieved from the data store via a server in which case processing proceeds to operation . The named object view of the report is not displayed on a web page when the file is retrieved from the data store at the client in which case processing proceeds at operation .

Continuing to operation a report renderer converts the published objects to a format suitable for display on a web page. For example the report renderer may convert the published objects to ML. Advancing to operation the web formatted version of the published objects is rendered at the client for display by a web browser. A viewer at the client is presented with a named object view of the report. In one embodiment the first published object is rendered on a web part. The user may navigate to the other published objects such that one published object at a time is rendered in the web part.

Proceeding to operation the published objects are directly rendered at the client. A viewer at the client is presented with a named object view of the report. In one embodiment the first published object is rendered in a user interface at the client. The user may navigate to the other published objects such that one published object at a time is rendered in the user interface.

Moving to operation a tool bar is rendered at the client. The tool bar includes the names of the published objects such that the viewer may navigate to specific published objects. In one embodiment the tool bar is a drop down menu of a list of the names of the published objects. The drop down menu is rendered in the web part or the user interface.

Transitioning to operation a particular published object selection is received at the tool bar from the viewer. For example the viewer may select a published object from the drop down menu. Proceeding to operation the selected published object is rendered at the client. For example the web part or the user interface refreshes in response to the viewer input such that the selected published object is displayed on the web part or the user interface. Thus the viewer s attention is focused on the published objects in the report. The unpublished file data is not presented to the viewer and may be disregarded. Processing then terminates at end operation .

Workbook includes multiple objects on different pages. Workbook may also include rights associated with the objects as depicted in report . An author user or administrative user may access the workbook from a server to generate a report . Alternatively the workbook may be accessed at a client. The user selects objects to publish in the report. The user may also associate rights with the objects. For example as depicted in report special number object includes user rights my data object includes user rights text box object includes group rights and line graph object includes group rights . In this example the rights are exclusive however the rights may also be inclusive rights and or any other combination of rights to protect access to the objects.

The selected objects are published in the report according to their respective rights. A viewer at the client is presented with a named object view of the report . A report renderer converts the published objects into ML when the workbook is accessed from a server. The ML version of the published objects is forwarded to a client for display via a web browser according to the respective rights of the user. A tool bar that includes the names of the published objects may also be rendered on the user interfaces and according to the respective rights. The tool bar may be used for accessing specific published objects according to the rights. In the example associated with the rights are exclusive. Accordingly user interface does not have access to my data object because user rights exclude such access user two interface does not have access to special number object because user rights exclude such access group interface does not have access to line graph object because group rights excludes such access and group interface does not have access to text box object because group rights exclude such access. The rights may include any combination of exclusive and inclusive rights and are not limited by the example in .

If it is decided that rights are not to be associated with an object operational flow continues to operation . If it is decided that rights are to be assigned to an object operational flow continues to operation where rights are associated with the object. As indicated above the rights may be exclusive rights inclusive rights or any other type of rights for protecting access to an object. In one aspect the rights are indicated by an access level that is associated with a user identifier and or a group identifier.

Operational flow continues to operation where the objects are published according to their respective security rights. Operational flow ends at end operation .

Operational flow continues to decision operation where it is determined whether the requested published objects have associated security rights. If not operational flow continues to operation as discussed below. If requested published objects have associated security rights operational flow continues to decision operation .

At decision operation it is decided whether the requestor has rights to the objects. In one aspect a user or group identifier of the requesting viewer is compared to an identifier and permissions associated with the object. For example the object may include a user identifier and a right associated with the user identifier. When a user identifier is received with the request and matches the user identifier associated with the object the user is granted or denied access according to the right associated with the object. If the requester does not have permission to access the object operational flow continues from decision operation to operation as discussed below. If the requester has permission to access the object operational flow continues to operation where access is granted to the object.

Once access is either granted or denied operational flow continues to decision operation where it is determined if another request has been received. If so operational flow loops back to operation . If not operational flow continues to end operation .

Based on the foregoing it should be appreciated that the various embodiments include a method system apparatus and computer readable medium for generating a named object view of a report associated with electronic data. The above specification examples and data provide a complete description of the manufacture and use of the composition.

