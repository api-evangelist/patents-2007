---

title: System and method for automatically configuring remote computer
abstract: A system and method for automatically configuring a remote computer to establish a VPN connection with a network is disclosed. According to the system and method, a configuration generator determines information necessary for the remote computer to establish the VPN connection, and generate an executable file to be run the remote computer. When run on the remote computer, the executable file automatically updates the remote computer's configuration settings so as to enable it to establish the connection with the network. The information required by the configuration generator can either be extracted from a database automatically, or can be keyed in by a network administrator.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07844718&OS=07844718&RS=07844718
owner: 
number: 07844718
owner_city: 
owner_country: 
publication_date: 20070222
---
This application is a Continuation of prior application Ser. No. 10 321 722 filed Dec. 18 2002 now abandoned and claims Priority of Provisional Application Ser. No. 60 379 757 filed May 14 2002 and Provisional Application Ser. No. 60 426 341 filed Nov. 15 2002 is claimed under 35 U.S.C. 119 e the entire disclosure of which is incorporated herein by reference.

The present invention relates to remote computer configuration and more particularly to a system and method for automatically configuring a remote computer for establishing a virtual private network VPN .

A Virtual Private Network VPN is a secure communication channel established between computers over a shared public network. In most instances the VPN connects a remote user s computer sometimes referred to as the caller with a local host computer sometimes referred to as the callee over the Internet. Thus for example a user s home computer can be connected to a local area network LAN at the user s place of employment. Before such a connection can be established however the user s home computer and the LAN need to be properly configured for the remote connection.

Referring to a structure of a related art VPN is shown. Referring to a LAN includes at least one server having various local user computers N connected thereto. Additionally the server is coupled to a gateway router to access the Internet . The gateway router allows for two way communication between the server and the Internet . Additionally the gateway router can also be coupled to an Internet service provider ISP .

At least one remote computer is also coupled to the Internet . The remote user can connect to the Internet using its own ISP 150. When the remote user and the gateway router are properly configured the remote computer can establish a secure connection through the Internet to the gateway router . The VPN connection is thus established. Once the VPN connection is established the remote computer is seen by the server as another local user connected to the server . For example the remote computer would be present in the network neighborhood administered by the server . Any number of remote users could access the gateway router through the Internet depending on the configuration of the gateway router .

Before a VPN connection can be established between the remote computer and the server however the remote computer and the gateway router need to be properly configured. For example the remote computer needs to be given the proper network address to the gateway router and needs to know how to access the server . For example various client services must be installed and configured on the remote computer to access the server. The procedure for accessing the server could include for example knowing proper user names and passwords.

A network administrator operating the LAN is typically required to configure both the gateway router and the remote computer . Because the gateway router is typically co located with the LAN and is also remotely accessible by using prescribed TELNET commands the network administrator supporting the LAN can easily access the gateway router being an Internet device so as to properly configure it. However most remote computers are by definition not co located with the LAN . Therefore these computers are most often not remotely accessible to be remotely configured.

Accordingly a problem with a related art VPN is that a network administrator needs to individually configure each remote computer so that the user will be able to access the LAN. This may require that the network administrator physically visit the remote location where the remote computer is or alternatively may require that a remote user bring the remote computer to the network administrator. This can be very inconvenient and cause delay in configuring the remote computer. Additionally when establishing the connection between the remote computer and the server a remote user may be required to first access the remote user s Internet service provider next access the gateway router and then access the LAN. Accordingly there can be up to three levels of authentication that need to be traversed by the remote user to gain access to the LAN. This can be difficult for some users to properly navigate.

One solution to this problem is to provide an HTML wizard that can provide instructions for a user to follow to configure a computer for remote access. However because of the complexity of properly configuring a remote computer for access this method can prove ineffective. Additionally even with the instructions the process of configuring the remote computer can still be time consuming. Finally a user following the instructions of the wizard may still enter erroneous data thus requiring a network administrator to first undo the mistake and then reconfigure the computer for remote access.

The above references are incorporated by reference herein where appropriate for appropriate teachings of additional or alternative details features and or technical background.

An object of the invention is to solve at least the above problems and or disadvantages and to provide at least the advantages described hereinafter.

It is another object of the present invention to provide a system and method for configuring a remote computer for access to a VPN by generating an executable code to be run on the remote computer that configures the remote computer.

It is another object of the present invention to provide a system and method for automatically configuring a remote computer to access a VPN by e mailing an executable program to the remote user which when executed properly sets the required parameters to establish the VPN connection.

It is another object of the present invention to provide a system and method for automatically configuring a remote computer to access a VPN by generating an executable program that configures a computer to access an ISP access a gateway router and login to a LAN by selecting a single program icon.

It is another object of the present invention to provide a system and method for remotely configuring an operating system of a remote computer by generating an executable file that when executed manipulates registry entries of the remote computer according to requirements of the user of the remote computer.

According to the preferred embodiment a compiler module is provided to generate an executable program that can be run on a remote computer to configure the remote computer to establish a VPN connection to the host computer. The compiler module uses various information regarding the local host computer to generate the executable file that will configure the remote computer. For example the compiler module uses information on the WAN profile of the network LAN the primary and secondary DNS of the local computer and the primary and secondary WINS address of the local computer. Additionally the compiler module uses the type of network configuration client services such as Microsoft or Novell as well as the configuration of the server for example as domain controller or server . Next the gateway address of the local computer is also provided to the compiler module.

In the preferred embodiment no information regarding the remote computer is necessary to generate the executable file. Specifically the executable file will first determine the necessary information regarding the remote computer when it is executed on the remote computer and then will use that information to properly configure the remote computer. However it would also be possible to provide the configuration module with information regarding the operating system that the remote user has installed on the remote computer. By doing this it may be possible to streamline the executable file that will eventually be delivered to the remote computer. That is the executable file will already be tailored for the remote computer.

It is to be understood that any method can be used to provide the necessary information to the compiler module. In one embodiment a system information front end module is provided to prompt the network administrator to provide the necessary information. The system information module then saves this information in a prescribed format to be used by the compiler module. In another embodiment the necessary information is extracted from a database into which the information has previously been stored.

Using the information the compiler module generates an executable file including all of the parameters in a prescribed format. These parameters include client adapter protocol and service. When run on a remote computer the executable program configures the operating system with the settings necessary to establish a VPN connection to the local host network. Thus it loads the client adapter protocol and service. According to the preferred embodiment the protocol is TCP IP and the services file and printer sharing which is turned on. In the preferred embodiment the RAS phonebook of the Windows operating system is configured. Alternatively registry entries can be directly manipulated by this executable program. The executable file can either be e mailed to the remote user or can be downloaded from a Web site. It should be understood that any method of providing this information to the remote user could be used such as saving it to a disk that is sent to the remote user. To provide an additional layer of security the executable file could be password protected such that the executable program would not run on the remote computer unless a prescribed password is provided upon executing the program. By doing this if the executable program is intercepted by an unintended recipient the unintended recipient cannot gain access to the network because the executable program will not run without the password.

Additional information regarding the user can also be provided depending on the level of service that is intended to be provided to the user. For example an automatic dialing program can be implemented in the executable program using the user s login and password information. Moreover automatic login information for the network can also be provided. When this additional user information is provided after the executable configuration program is run on the remote computer the remote user is given a single program to run that is a single icon to click which will connect to and login to the host network. This single program is preferably a dialer program. Alternatively the compiler module could generate both a configuration program and a separate dialer program.

Additional advantages objects and features of the invention will be set forth in part in the description which follows and in part will become apparent to those having ordinary skill in the art upon examination of the following or may be learned from practice of the invention. The objects and advantages of the invention may be realized and attained as particularly pointed out in the appended claims.

The system and method of automatically configuring a remote computer to establish a VPN connection to a local computer preferably collects information about the remote computer collects information about the local area network LAN and its associated gateway router and collects information regarding login and authentication procedures for the LAN and or gateway router. Using this information at least one executable file is preferably generated for execution on the remote computer. The executable file is designed to configure the remote computer to establish a VPN connection to the LAN through the gateway router. In the preferred embodiment the executable file manipulates the remote computer s registry information such as the Remote Access Service RAS . Additionally and the preferred embodiment the VPN connection is a client to gateway connection. That is the remote computer is able to itself connect to the gateway of the local computer.

In order to collect the information needed to generate the executable file the preferred embodiment uses a configuration program generator which can be hardware firmware software or any combination thereof. Preferably the configuration program generator is made up of at least one or more software modules. Thus referring to the configuration program generator preferably includes at least two modules. A first module collects information regarding the local computer for example the LAN server the remote computer for example a PC and user information for the operator of the remote computer. This module is referred to as the information collection module .

A second module uses the information collected by the system information module to generate the executable file. This module is referred to as the compiler module . The executable file is then preferably deployed by any manner for example by e mail to the remote computer for execution.

As stated above the configuration program generator is preferably software that would be run on a computer operated by the network administrator. This computer may be the server or can be any other computer operated by the administrator. Additionally the configuration program generator software could have any type of graphic user interface or none at all. For example in operation the configuration program generator could be displayed as one or more dialog boxes. The dialog boxes could prompt the network administrator for information or can be pre populated with relevant information if the configuration program generator is associated with a database that has the necessary information for each potential remote user. Alternatively if the configuration program generator is associated with such a database it would be possible to implement the software with no graphical user interface.

Thus in one embodiment the network administrator could be provided with a great deal of control over the configuration program generator by having relevant information automatically retrieved from the database and information input fields in various dialog boxes automatically populated with the retrieved information. The retrieved information would be information necessary to generate the executable file for any given remote user. In this case one or more dialog boxes could be initially presented having blank empty text fields corresponding to the various information necessary to establish the VPN connection. Upon receiving an instruction from the network administrator the relevant information could be retrieved from the database and directly inserted into the corresponding text boxes. The network administrator would thus have the opportunity to review and or change the information in the text boxes prior to causing the configuration program generator to generate the executable file.

Alternatively if there is no associated database the configuration program generator could prompt an administrator to manually enter the required information into the corresponding text boxes. In this case similar dialog boxes would be presented having blank text boxes. The network administrator would then enter the necessary information manually. In this embodiment the configuration program generator could be further configured to provide the manually entered information to a database for later use in addition to generating the executable file.

In the preferred embodiment however the information collection module of the configuration program generator would transparently retrieve the necessary information directly from the database and pass it to the compiler module without first displaying the information. The compiler module would then uses information to generate the executable file. A network administrator may optionally be given the opportunity to confirm the information retrieved from the database prior to generating the executable file or to modify the information.

Regardless of how the information is provided there is certain network information that is necessary to establish the VPN connection. This network information includes for example a WAN number one or two DNS numbers one or two WINS numbers and the gateway IP address.

Using the network information either provided manually by the administrator or automatically extracted from the database the configuration program generator preferably generates an executable program that can be run on the remote computer. The executable program when run on the remote computer would configure the remote computer so that it can establish a VPN connection with the local computer network. It is preferable that the executable configuration program would update the registry settings of the remote computer or update the Windows settings. Depending on the operating system employed various aspects of the registry and or operating system data would be updated. Additionally in a preferred embodiment the executable file is encrypted prior to being deployed to the remote computer. In order to execute the executable file the user of the remote computer would need to know the key to unlock the program. This would prevent unauthorized users from executing the program and provides a layer of security.

Referring to a conceptual view of the system for generating the executable remote configuration file is shown. The system preferably includes a computer processor for executing commands to convert remote user information network information into the executable file. The computer processor preferably has loaded thereon the configuration program generator which is preferably a software module configured to receive the remote user information and or network information and generate the executable remote configuration file.

The software may be written in standard programming language compiled and linked into an executable program. For example the software could be written in JavaScript C PERL and CGI. In the preferred embodiment the software is one of an ActiveX or and OCX module which can be linked to an application program such as Microsoft Access.

Additionally it is possible to use scripting to cause the remote computer to execute certain procedures. If scripting is used the script first passes to an interpreter of the remote computer. The interpreter preferably Windows executes the software script into a readable medium. It should be understood that any other interpreter could be used including UNIX LINUX or HTML. Moreover it should be understood that it is possible to write code to emulate certain mouse clicks and keystrokes. For example to configure a remote computer having Windows 98 it may be beneficial to generate the executable file to emulate keystrokes and mouse clicks required to configure the system instead of directly writing to the registry.

Referring to additional detail of the configuration program generator is shown. The configuration program generator preferably includes an information collection module and a compiler module .

The information collection module can be any software used to collect information needed by the compiler module to generate the executable remote configuration file. For example in a very basic configuration the information collection module could be an ASCII text comma separated document. In that case the compiler module would preferably parse the information in the ASCII document to retrieve the necessary information for generating the executable remote configuration file.

Alternatively the information collection module could be a database with or without a filter. Preferably using the filter only relevant information for a prescribed user would be provided from the database to the compiler module . Alternatively information for several users could be provided to compiler module so as to allow the compiler module to generate a plurality of executable files for each of the respective users. In either case a network administrator could additionally review the information extracted from the database prior to transferring it to the compiler module . Moreover the network administrator could make changes to the data at that time. It should be understood that any method of compiling the database can be used.

Thus in a first embodiment of the information collection module the network administrator enters the necessary information manually. Using this embodiment no database is necessary. Rather for each remote user for which a VPN connection will be configured the relevant information is prided directly to the information collection module when the network administrator needs to generate the executable file. In a second embodiment on the other hand a database is required. The network administrator would preferably select an appropriate record from the database. The record would preferably includes all of the information necessary to generate the executable files. The network administrator would then simply run the compiler module directly from the database to generate the executable file based on the selected record. In this case the information collection module could optionally include a verification module displaying the information extracted from the database for the network administrator to verify prior to generating the executable file.

Regardless of the embodiment of the information collection module the compiler module uses the information collected to generate the executable program to be run on the remote computer. Additional details of the information collection module and the compiler module are provided hereinbelow.

Referring to additional detail of the information collection module according to the first embodiment is provided. As shown therein the information collection module is preferably comprised of two sub modules . The first sub module is a remote user information collection module . The second sub module is a network information collection module . A network administrator would preferably manually enter information into each of these modules according to one embodiment of the invention.

Each module of the information collection module is preferably displayed on a user interface screen for example a computer monitor as a dialog box having prompts for the required information. The network administrator would preferably enter the required information into the associated text box or select the appropriate radio buttons and then apply the settings. Upon applying the settings the information collection module would format the selected information so as to be usable by the compiler module . It should be understood that the dialog box could be formatted in any manner and could be partitioned into any number of sections and or sub screens. Each section would preferably be identified by an associated tab which could be selected by the network administrator to access that section of the dialog box.

The remote user information collection module preferably collects information about the remote user and the remote user s computer. Specifically it can preferably collect information concerning what operating system the remote user is running on the remote computer as well as password and logon information for the remote user. By way of example the password login information can be for either a dial up adapter the LAN to which the VPN will connect or both.

The network information collection module preferably collects information about the local area network LAN to which the VPN connection will be established. This information is necessary for the remote user to negotiate to the router that is coupled to the LAN as well as negotiate through the router and or gateway to access the LAN. Additionally further information regarding the names of the computers on the LAN should be provided as well as the location of the domain name service DNS .

In a second embodiment the information collection module would extract data directly from a database. Consequently a dialog box would not be necessary. However it would be possible to provide some user interface to direct the network administrator as to how to extract the relevant information. Moreover there could be informational screens allowing the network administrator to verify incorrect information prior to generating the executable file. Preferably information collection module would identify particular fields of the database that are needed by the compiler module and extract only that information. Additionally once the information is extracted the information collection module would preferably display the information for the network administrator to verify. Upon his verification the network administrator would preferably cause the information to be transferred to the compiler module .

According to the second embodiment of the information collection module any database design can be used. Preferably the database would include at least the same information described above with respect to the first embodiment. Specifically the database would include the information necessary for the remote user to negotiate to the router gateway and then onto the LAN. Additional detail concerning this information will be provided below.

In both the first and second embodiments of the information collection module information regarding the remote user s e mail address and security code can also be provided. In this way the compiler module upon generating the executable file could automatically transmit all generator programs including the configuration program and a dialog program to the remote user. Moreover the executable file could be encrypted using the security code as the decryption key. Alternatively if the program will be provided to the remote user by a method other than e mail a storage address could be provided to the information collection module identifying where the executable files should be stored. For example it could be stored in a directory on a computer or to a removable storage unit such as a floppy disk or a compact disc.

Referring again to the compiler module is preferably software configured to generate an executable program using the data collected from the information collection module . The executable program when run on the remote computer preferably configures the remote computer to be able to establish the VPN connection with the local network. In essence the executable file is configured to install the VPN configuration onto the remote user s computer. It should be understood that the executable file could be used to configure their remote computer in any fashion so as to customize it to a user s needs. For example an executable program could be generated to allow a remote user to configure a program on the remote computer such as Microsoft Outlook to be set up in a certain way. Thus if a user wanted both their work computer and their home computer to have identical settings for a particular program a network administrator could generate an executable file to configure the home computer to have the same settings as the were computer. The executable file would then be run on the home computer to change the configuration settings.

In the example of setting up the VPN connection the compiler module preferably uses the information collected through the information collection module to generate an executable file that can be used by the remote user to configure the remote computer for the VPN connection. In the preferred embodiment the executable file is configured to edit the Remote Access Service RAS files of the remote computer s operating system. Specifically the RAS phonebook is preferably manipulated. It should be understood that any method of modifying the registry entries of the remote computer s operating system could be used. This could include directly modifying .INI files and .INF files or any other configuration files for the remote computer.

In the preferred embodiment the data that is received from the information collection module is either embedded or attached to the executable file such that upon execution of the executable file on the remote computer the data is used to configure the remote computer. In the preferred embodiment the Microsoft installer program is used as the executable file. Microsoft installer is a binary resource out of the OCX program module. Thus the installer is the first program built. The binary resource includes the configuration data and because it is the first program to be built the configuration data is initially empty. That is the installer program is built with blank data.

When the information collection module generates the configuration data file the blank data on the installer is replaced with the configuration data file. The installer program is preferably configured to call the RAS API and use the data configuration file to modify the RAS entries. It should be understood that the executable file to use any method to modify particular registry entries. Accordingly the RAS entries for VPN that have been built are attached to the installer program and the executable file for configuring the remote computer is created.

Additionally the compiler module could be configured to automatically e mail the executable file to an intended recipient. Thus part of the information collected by the information collection module would include the e mail address of the intended user. Once the code is written by the compiler module it would automatically be inserted into an e mail addressed to the intended recipient. This e mail could either automatically be transmitted when the executable file is generated or could await a user command prior to sending the e mail. Thus for example the configuration program generator could be integrated with any type of e mail program such as Microsoft Outlook or Microsoft Outlook Express.

When integrated with an e mail program the executable file is preferably written to an e mail manager such as an outbox or a draft box of the e mail program. That is it is written to a path on the computer that corresponds to the outbox. Moreover an outlook plug in will interpret specific data within the database as an e mail address. Accordingly the e mail is automatically generated with the executable file or files as an attachment. Additionally the body of the e mail can be configured to include instructions for running the executable file. These instructions can be either tailored to a particular operating system of the user or all instructions can be included allowing the user to pick the appropriate set of instructions.

It should be understood that information collection module and the compiler module could be formatted as a single dialog box so that once the information is entered into the dialog box a single click to accept the data would generate the executable file. Additionally that single click could also be configured to automatically send the e mail to the intended user. Moreover it should be understood that the whole process could be transparent to the network administrator and thus selecting a remote user from the database would automatically generate the executable file and could also automatically e mail the executable file to the remote user. Alternatively the process could be partially transparent. That is the network administrator would have an opportunity to review dated extracted from the database prior to generating the executable file. Moreover the network administrator may be required to manually e mail the program to the recipient.

It should be understood that the information collection module could be a stand alone program or could be a module within another application program. For example information collection module could be an OCX module and part of a Microsoft Access database. Alternatively the program could be written and compiled in any programming language and configured to perform the same tasks. In the preferred embodiment the information collection module is an OCX module.

Referring to additional details of the first embodiment manual data entry of the information collection module of are provided. As shown in a dialog box of the configuration program generator according to a preferred embodiment is shown. The dialog box preferably includes a plurality of tabs to distinguish between information screens. In the preferred embodiment a WAN profile tab and a user configuration tab are provided. The WAN profile tab corresponds to the network information collection module of and the user configuration tab corresponds to the remote user information collection module of . shows details of the dialog box with the WAN profile tab selected. Details of the user configuration tab will be described blow with reference to .

The WAN profile tab provides a user interface for the system administrator to enter information relating to the network to which the remote user will connect. First a WAN text box is provided. It is preferably configured in a format to accept a WAN number. The WAN number describes the IP address for the router gateway. This information is used by the remote computer to identify the router gateway to which it will connect to establish the VPN connection. This number is preferably a static IP address that uniquely identifies the WAN to the outside world. Additionally a gateway text box is also provided. Within this text box the administrator preferably enters the private gateway information. This address also formatted as an IP address cannot be seen by the outside world when they look at the router gateway on the Internet. Again this text box is preferably formatted as a standard IP address. Thus the default dialog box is preset with all zeros such as 0.0.0.0 In the preferred embodiment when a prescribed number of digits is entered prior to any one of the dots the cursor automatically moves to the next digit in the address.

Next a text entry box is provided for the primary and secondary DNS addresses . The DNS domain name system is the way that Internet domain names are located and translated into IP addresses. Various lists of domain names and IP addresses are distributed throughout the Internet in an hierarchical structure rather than maintaining a central list of domain name to IP address translations.

Next a text entry box is provided for the primary and secondary WINS addresses . The WINS address points to location on the network where the Windows Internet Naming Service WINS resides. WINS is an operating system based service that manages the association of workstation names and locations with IP addresses. This is done without a user s or an administrator s input. WINS thus automatically creates a mapping entry in a table to map a computer name to an associated IP address. Each computer name is unique. If a computer is moved to another geographic location the subnet part of the IP address will most likely change. WINS ensures that the new subnet information will be updated automatically in the WINS table. WINS works in conjunction with the Dynamic Host Configuration Protocol DHCP which negotiates an IP address for any computer when it is first defined to the network.

On the router WAN side a text box is provided for each of login and password . These represent the login password combination necessary for the remote user to access the router. Additionally there is a duplicate login check box provided to indicate whether the login password combination for the router WAN is the same as the login password combination for the LAN. By checking this box the login password combination entered on the router WAN side is automatically entered on the LAN side .

As with the WAN profile configuration dialog box control buttons are provided for accepting or rejecting the information provided. These control buttons include an OK button a cancel button and an apply button .

According to the second embodiment where a database is used to directly provide the information to the compiler module the database would preferably have all the information described above with respect to . Specifically for each record of the database fields for WAN information WINS information and DNS information would preferably be provided. Additionally a user s login password information would also be provided.

Referring to a construction of the database that is preferably used with the second embodiment is shown. It should be understood however that any method of storing and collecting data can be used such as a spreadsheet a text table or comma separated values. Additionally any layout of the database could be used. Preferably the database will include modules for collecting and storing information needed to generate the executable program by the configuration program generator. For example there may be a users module WAN settings module ISP module and an operating system module . The users module may require for example user identification information user first name information user last name information user phone number information. Additionally it may require user IP address information user WAN login information user WAN password information user LAN login information and user LAN password information. Additional user information that is not relevant to generating the executable file may also be stored in the database.

The WAN setting module is preferably configured to store information such as WAN settings identification information company identification information ISP identification information hardware make information hardware model information hardware administrative password information workgroup or domain network type identification information server type identification information IP assignment type identification information Gateway IP information WAN IP information and primary DNS information secondary DNS information primary WINS information secondary WINS information and WAN setting notes. At a minimum however the WAN setting module should include the information required by the configuration program generator to generate the executable file.

Next the operating systems module is preferably configured to store information such as operating system identification information and operating system name. The ISP module is preferably configured to store information such as ISP identification information ISP name information ISP address information ISP phone information primary DNS IP information and secondary DNS IP information.

Other information that may also be provided based on the particular need of the user may include information such as contact information billing information employee information company information calls information user calls information ISP calls information contact types and any other pertinent information.

Additionally the database is preferably a Customer Management Program CMP . As such it preferably includes full support and fields for troubleshooting the database. Additionally the database could include personal information regarding each user to validate the users. Such information could be mother s maiden name place of birth Social Security number or any information that could authenticate a particular user.

Additionally the database could be configured so that information common to all users would not have to be entered into the database each time a new users added. For example if all users in the database will be establishing a VPN connection to the same network information such as the DNS numbers and the WAN Gateway address could automatically be inserted into the appropriate fields of the new record. Alternatively if the database is used to manage a plurality of networks having different configuration settings all users associated with any given network could be identified for example by using a company name as belonging to the same group. When that group identification is provided to the database for a new user the proper information for that user could automatically be populated into the fields of the database.

Moreover other information to be automatically inserted into other fields for each record. For example if it is determined that the client is Microsoft when the Microsoft client is selected for a new record in the database the database will automatically insert all associated Microsoft features.

It should be understood that any database configuration or structure can be used and the particular modules described above need not be present. Moreover the database can be any type the database such as SQL or Microsoft Access. Any method of storing some or all of the data necessary to generate the executable files by the configuration program generator of would be suitable. Moreover in the preferred embodiment the information from the database is provided directly to the configuration program generator to generate the executable file for any given remote user. This eliminates the need for the network administrator to manually enter the information.

Additionally when the database is used to generate the e mail string tables for the mailer modules are provided. This information is interpreted as an e mail address.

Next a description of how a network administrator would manually use the above described system according to the first embodiment is provided. It should be understood that this process could be circumvented by associating the database with the configuration program generator allowing the network administrator to simply select a user from the database and automatically generate the executable file according to the data in the database in accordance with the second embodiment.

Referring to using the manual procedure of the first embodiment a network administrator would first preferably open a dialog box of the configuration program generator as shown in step . This dialog box represents the information collection module. The dialog box preferably includes a plurality of tabs to distinguish between various information screens. The network administrator would then select one of the tabs to determine which information screen would be displayed. Thus the administrator could choose the WAN profile tab as shown in step or choose the user profile tab as shown in step .

Depending upon the selected tab the network administrator would then enter the appropriate information for the information screen that is displayed. Thus if the administrator had chosen the WAN profile tab in step the administrator would then proceed to enter WAN profile information as shown in step . Alternatively if the administrator had chosen the user profile tab in step then the administrator would proceed to enter user profile information as shown in step .

In the preferred embodiment both WAN profile information and user profile information need to be entered. Thus upon entering information corresponding to one of the information screens the administrator would next show the other information screen. When information for both information screens have been entered the administrator would apply the settings to generate the binary data file as shown in step . The binary data file is then used to generate the executable file to be deployed to the remote user.

Additional details for each of the selectable dialog box tabs will be provided next. illustrates the steps to be followed by the network administrator if the network administrator selects the WAN profile tab in step of and illustrates the steps to be followed by the network administrator if the network administrator selects the user profile tab in step of . It should be understood that the steps need not necessarily be performed in the sequence shown. For instance the network administrator can enter the information in any sequence so long as all necessary information is provided. However for sake of explanation a particular sequence is outlined below.

Referring to the network administrator selects the WAN profile tab in the information collection module dialog box. In the preferred embodiment the dialog box is displayed on a computer monitor and includes text boxes in which to input various information. The text boxes are labeled with a description of the information to be provided in the associated text box. Additionally for text boxes that require network addresses the text boxes are preformatted as blank IP addresses and with a field size limit for each number to be entered. Thus it would be impossible to enter and incorrect number format for any given network address.

Next as shown in step the network administrator first enters a WAN profile number corresponding to the LAN gateway router. The WAN number preferably describes the IP address for the router gateway. This information is used by the remote computer to identify the router gateway to which it will connect to establish the VPN connection. This number is preferably a static IP address that uniquely identifies the WAN to the outside world.

Next as shown in step the administrator would identify the type of network configuration of the LAN. For example the network type could be Novell NetWare or Microsoft. It should be understood that any kind of network environment could be used. For the purposes of example it will be assumed that Microsoft is selected. By selecting the type both the client and file printer sharing our determined.

Next the administrator would preferably enter the type of the LAN as shown in step . For example the LAN could be configured as a Server or as a Domain Controller. It should be understood that any LAN configuration can be implemented at this point. If the server type is selected as Server as shown in step then the administrator next identifies the workgroup as shown in step . The Workgroup information determines what group of users exchange access to resources on the network. The workgroup information is preferably maintained on the server. Alternatively if the administrator selects Domain Controller as a server type as shown in step and administrator would be prompted to fill in the domain information as shown in step . In this scenario the administrator would enter the Domain Controller group name needed to access the network. The domain information is used to uniquely identify a particular user.

The network administrator would next provide the gateway address information for the router gateway as shown in step . The gateway address is the IP address of the LAN. It may be public and on the outside world but may also be private and not known to the outside world. This IP address is for the network to see out from the LAN. Thus when a user logs on to the network using the VPN connection that user will access the Internet through the network as opposed to through his own Internet connection.

Next as shown in step the administrator would provide the primary and secondary DNS addresses. The DNS domain name system is the way that Internet domain names are located and translated into IP addresses. Various lists of domain names and IP addresses are distributed throughout the Internet in an hierarchical structure rather than maintaining a central list of domain name to IP address translations. In the preferred embodiment the administrator would determine the DNS number by querying the ISP. However an administrator may receive DNS information from any other source. The administrator would also preferably enter a second DNS number as received for the ISP. However only one DNS number is necessary for the operation.

Next as shown in step the administrator preferably enters at least one WINS number and optionally enters a second WINS number as well. The WINS address points to a network location where the Windows Internet Naming Service WINS resides. This is typically located on the server although it could be located on any machine on the network. Additionally the WINS information is preferably known by the administrator based on the network configuration although this information can be obtained by the administrator from any other source.

WINS is an operating system based service that manages the association of workstation names and locations with IP addresses. This is done without a user s or an administrator s input. WINS thus automatically creates a mapping entry in a table to map a computer name to an associated IP address. Each computer name on the network is unique. If a computer on the network is moved to another geographic location the subnet part of the IP address will most likely change. WINS ensures that the new subnet information will be updated automatically in the WINS table. WINS typically works in conjunction with the Dynamic Host Configuration Protocol DHCP which negotiates an IP address for any computer when it is first defined to the network.

The administrator next optionally selects an IP assignment from a plurality of IP assignments as shown in Step . The IP assignment to be one of public and private as shown in steps and . Moreover as shown in steps the administrator may select a router option a server option and a static IP option.

The IP addresses the remote computer s IP address on the network. The assignment of the IP address can be set by the DHCP router or the DHCP server or a static IP address can be given by the system administrator. If all zeros are initially used this typically signals that the DHCP should be prompted to assign an address.

It should be understood that the WAN profile dialog box could prompt the network administrator for additional information. However in the preferred embodiment the above information is sufficient. Thus if the user information has already been provided under the user tab of this configuration dialog box the network administrator would proceed to generate the user data binary file. However if the user data information has not yet been provided the network administrator would select the user information tab to display the user information portion of the information collection module dialog box.

In the absence of this information after the computer is configured for the VPN connection the user would be faced with several login password dialog boxes before gaining access to the LAN. For some users this becomes cumbersome. Consequently in the preferred embodiment the network administrator provides the login password information for the user to the configuration program generator prior to generating the executable file. This information could be provided manually or could be extracted from the database. By providing the login password information the configuration program generator is adapted to generate a Dialer program that could be deployed on the remote computer. When the remote user executes the Dialer program on the remote computer and if the remote computer has been properly configured for the VPN connection a VPN connection between the remote computer and the local network is automatically established.

It should be understood that the Dialer program could be generated and deployed to the remote computer separately from the network settings executable file. For example the dialer program could be sent to the remote computer by a separate e mail or any other file delivery method. Consequently should the login password combinations for the remote user change at any time the network administrator could provide a new dialer program having the revised login password information. Additional information regarding the Dialer is provided hereinbelow.

Referring again to the network administrator first enters the LAN IP address as shown in step . This information preferably corresponds to the LAN that the remote user will access. Next as shown in step the administrator enters the remote user s login name and password for the router WAN. Additionally the network administrator enters the remote user s login name and password for the LAN as shown in step . It should be understood that if this login password combination is identical to the router WAN login password the administrator can simply select a check box indicating duplicate login. By doing this the login password information for the LAN is automatically copied from the router WAN information.

Finally in step the administrator identifies the operating system that the remote computer is using. This is necessary for the executable configuration program to properly modify the operating system parameters to establish the VPN connection. In the preferred embodiment Windows XP Windows 2000 Windows ME or Windows 98 appear in a drop down menu box. However it should be understood that any operating system could be selected including UNIX or LINUX or any successor to the Windows family of operating systems. Moreover and the preferred embodiment a single executable files will work with all supported offering systems.

If the network information has already been provided under the WAN profile tab of this configuration dialog box the network administrator would proceed to generate the user data binary file. However if the network information has not yet been provided the network administrator would select the WAN profile tab to display the network information portion of the information collection module dialog box.

The user data binary file is then used when generating the executable file. This information is interpreted by the remote computer so as to configure the remote computer for establishing a secure Internet connection to the LAN. The secure Internet connection between the remote computer and the LAN is the Virtual Private Network VPN . In a preferred embodiment Point to Point Tunneling Protocol PPTP is used for establishing the VPN connection. PPTP is a Layer 2 tunneling protocol which allows the remote computer to use a public IP network to communicate securely with the local computer for example the LAN server . PPTP thus essentially tunnels the IP. A VPN tunnel between the LAN and the remote computer allows traffic to flow securely across the Internet. The PPTP tunnel is preferably established using the Dial Up Networking functions of the Windows operating system. Remote users are preferably authenticated using MS CHAP against a user password list maintained. Other authentication schemes however could be used. PPTP is described in RFC 2637 Point to Point Tunneling Protocol PPTP which is incorporated herein by reference. Consequently in the preferred embodiment the Dial Up Networking aspects of Windows are manipulated by the executable file. For example the RAS phonebook entries could be modified or registry entries pertaining to Dial Up Networking could be modified.

Alternatively IPSec could be used instead of PPTP. IPSec includes a series of protocols to handle data integrity and confidentiality when transmitting secure data across the Internet. A first protocol the Authentication Header AH protocol handles data integrity and a second protocol the Encapsulated Security Payload ESP protocol resolves both data integrity and confidentiality issues.

Each VPN tunnel created with IPSec is preferably assigned a specific Security Parameter Index SPI to differentiate it from other VPN tunnels configured on router gateway. An SPI is an arbitrary 32 bit number that tells the receiving device which group of security protocols such as algorithms keys and their longevity the remote user is using for communication.

IPSec is described in RFC 2401 Security Architecture for the Internet Protocol and RFC 2709 Security Model with Tunnel mode IPsec for NAT Domains which are incorporated herein by reference. The same general theory would apply to IPsec as applies to PPTP with respect to configuring the remote computer to establish the VPN connection.

Additionally it should be understood that the configuration method described herein can be applied to any communication protocol. For example in addition to PPTP and IPsec L2TP could also be used or any other protocol especially any other tunneling protocol.

The Dialer program is a application that functionally performs dialing functions using any operating system. According to the preferred embodiment its calls dialing functions contained with Microsoft Dial up Networking contained within Microsoft Windows versions 95 98 ME and Network and Dial up Connections within Microsoft Windows versions 2000 XP. The Dialer preferably assist in the operation of the connection method described herein by providing navigation for the user and it binds user announcements when activating a connection. For example it provides a user with the ability to activate a VPN connection using a single click of a mouse.

Additionally the dialer can assist in providing various be security parameters within a remote access solution. For example when making a connection active a user must provide information that validates that user for security features. This provides protection of both the Caller the remote user making a secure connection and the Callee the network topology with this remote access feature . Every secure VPN or network connection requires some form of verification. The Dialer provides a module for both user verification as well as connection activation.

The Dialer preferably makes user navigation easier. When the user initiates and starts a connection to get to a destination network at least one and typically several connections need to occur to access the network.

For example a user may first need to access the Internet. After the Internet connection is established the user or the VPN might possibly need to initiate a connection directly to the device that holds the parameters of how that user is going to talk i.e. communicate to the network topology. This includes encapsulation and authentication i.e. the WAN Profile of the Callee. The third connection is necessary to access the network structure for example to join the Network Neighborhood from the remote location. This is performed by the internal validation user accounts and privileges within the network topology and preferably occurs within a network server or appliance when a new connection is established or sensed by the network server or appliance.

Pending on the number of network servers or appliances and security parameters within a network topology each server can require a different validation of the same server. The Dialer eliminates the second of the stated connections because when the user has some or any connection to the Internet the Dialer brings the Caller through the Internet to the Callee using a single click. 

To perform these functions the Dialer preferably contains all the required announcements and authentications the user needs to both start and complete a secure connection to the network. Thus the dialer contains programming code configured to select and initiate a specific dialing function. For example the dialer can be configured to select and initiate a specific RAS phonebook entry that has been created using the above described configuration process.

Additionally the Dialer replaces the default announcement program that is bound to any connection profile built in the operating system s dialing functions. For example the dialer would replace the connection profile contained in the Dial up Networking contained within Microsoft Windows versions 95 98 ME and would replace the Network and Dial up Connections within Microsoft Windows versions 2000 XP.

By using the Dialer user does not need to know the user s particular login and password combination to access the WAN of the network. Additionally the Dialer will not work on any RAS phonebook entry that is not a match to the corresponding label. In doing this the dialer can direct both security and how the user connects because without the Dialer no connection can or would be made.

In the preferred embodiment the Dialer is built from the user settings index within the database. Additionally it is specific to the WAN Login and WAN password for a particular user. At both input fields the remote access engineer can configure and design a custom Dialer that is very complex containing a series of numbers letters and characters completely random and unknown to the user. However because this information is known to the dialer access will be granted to the network.

Thus when the remote computer executable configuration file is generated to establish the VPN connection the network administrator preferably deploys the executable file to the remote user. This can be done by any method of transferring data including attaching the program to an e mail or providing on a computer readable medium. Additionally if a Dialer executable program has been generated it can be deployed simultaneously with the configuration executable file. It should be understood however that each of these executable files can be deployed separate and apart from the other executable file. For example if a user is required to change a login password combination according to a prescribed time schedule the network administrator could deploy the dialer executable program to the remote user with the updated login password combination at the appropriate time. When the remote user executes this updated program the login password settings on the remote computer are updated. Additionally according to the preferred embodiment the executable configuration file is self deleting. That is upon execution on the remote computer after the remote computer is fully configured the executable file is automatically deleted from the remote computer. Alternatively the dialer program could be set up to search for the configuration program the first time the dialer program is executed. If the configuration program is found than the dialer program could be configured to automatically delete the configuration program.

Moreover and order to enhance security the configuration and dialer programs to be deployed to the user can stored within a removable USB key type memory device that is provided to the user. Referring to the USB key type memory device is a small portable single piece device that plugs into a USB port of a computer using the USB interface connector . The USB key type memory device preferably includes an electronically erasable read only memory EEPROM . The USB key also preferably includes a flash RAM . The EEPROM is preferably a locked EEPROM section which prevents users from accessing information stored therein. The flash RAM is a general storage area which emulates a disk hard drive. The EEPROM can be write protected all the flash RAM is for storing general data. The USB key type memory device further includes a USB controller to control the device.

Because the EEPROM is inaccessible to users the can be used to store verification and or encryption information. According to the preferred embodiment before the configuration program or the dialer program can be run whether from a hard drive a remote disk or the flash RAM the program would first query the EEPROM to authenticate the user. Thus if the USB key type memory device is not coupled to the USB port of the computer neither the configuration program or the dialer program will work.

Thus the dialer program and configuration program could initially be stored to the file structure section of the removable key. These programs could be run directly from the key or could be copied to a hard drive and run from there. However without the USB key being inserted into the USB drive the programs would not operate.

Specifically as part of the configuration program and the dialer program a special code could be incorporated that requires the program to access the EEPROM of the USB key . Within that EEPROM a password could be stored that would authenticate the dialer program and or the configuration program.

To generate the USB key the administrator would first access the EEPROM of the USB key to program a password that would be used by another program. Accordingly it would not be necessary for the remote user to even know the password rather the programs to be executed in automatically query for the password. The executable program in order to run would need to verify the existence and authenticity of the password on the EEPROM of the USB key .

The executable programs for example the dialer program or the configuration program can be stored in the flash RAM of the USB key . When the dialer program is run it would first query the EEPROM to determine if the password stored in the EEPROM is identical to that which is required by the dialer program. If the password matches than the program will run. Otherwise no connection can be made to the VPN. Even if the dialer program is copied to the hard drive a would still require the authentications through the USB key. Thus if the dialer program is copied to a hard drive other than the USB key it will not operate unless the USB key is installed on the system.

Moreover and order to protect the key for being stolen a further layer of security could be used that requires the user to enter a password to authenticate the user prior to authenticating the key. Moreover the dialer program could be encrypted when the decryption key being stored in the EEPROM of the USB key . Thus would be very difficult if not impossible for someone to modify the dialer program to run without use of the USB key . It should be understood that the configuration generator program can also be so encrypted. Additionally the information on the EEPROM could also be encrypted.

Additionally because the installer program is intended to be run once while the dialer program is intended to be run every time a VPN connection is desired each of the two programs could have a unique password stored on the EEPROM . When the installer program is run it would call for the associated password stored on the EEPROM . After installation it would preferably erase that password. Consequently any further attempt to run the installer program would fail for lack of authentication. Meanwhile the dialer program would have a different password associated with it on the EEPROM . Accordingly when the dialer program is run it would first query the associated password on the EEPROM to determine the authenticity of the key. If the password were found then the dialer program would proceed to establish a connection to the server.

The system and method for automatically configuring a remote computer according to the preferred embodiment has various advantages. For example it allows a network administrator to easily configure remote computers by generating a single executable file that can be provided to the remote user for execution. By doing this the network administrator can save much time and can more actively manage the network. Additionally any portion of a remote user s computer can be remotely configured by using an application program designed to manipulate the registry of the remote computer. Consequently anyone with the need to remotely modify the configuration settings of a computer can generate an executable file to be run on the remote computer to accomplish the configuration update. Additionally by having a conduit from a database to the program modules it becomes easy to generate a large number of such executable files in a short period of time. This allows for efficient management of remote users.

Moreover according to the preferred embodiment the remote user s computer is seen as a gateway in establishing the VPN connection to the host local computer. Accordingly because a VPN connection is typically established between gateways it is possible to automatically establishing VPN connection between the local computer s gateway and the remote computer directly. Thus the remote computer essentially becomes a router.

The foregoing embodiments and advantages are merely exemplary and are not to be construed as limiting the present invention. The present teaching can be readily applied to other types of apparatuses. The description of the present invention is intended to be illustrative and not to limit the scope of the claims. Many alternatives modifications and variations will be apparent to those skilled in the art. In the claims means plus function clauses are intended to cover the structures described herein as performing the recited function and not only structural equivalents but also equivalent structures.

