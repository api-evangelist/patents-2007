---

title: Systems and methods for at least partially releasing an appliance from a private branch exchange
abstract: Systems and methods for partially releasing an appliance from a private branch exchange are shown and described. The method can include issuing a path replacement command to the private branch exchange, receiving a facility message from the private branch exchange destined for one end-point of a communications session, and transmitting the received facility message to another end-point of the communications session.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09137377&OS=09137377&RS=09137377
owner: CITRIX SYSTEMS, INC.
number: 09137377
owner_city: Fort Lauderdale
owner_country: US
publication_date: 20070822
---
This application generally relates to communications sessions. In particular this application relates to systems and methods for establishing a communications session using a computing device.

Various efforts have been made to enable end users of computing device to establish communications sessions from their computing devices. A number of these efforts have focused on locating by a web server telephone numbers within web pages and linking a dialing application to the located telephone numbers. Typically these services e.g. a Vonage type service require a specific software application provided by the service to complete the call. It would be helpful to enable a communication session from any application.

In one aspect a method of releasing a communications appliance from a private branch exchange to establish a communication session between two end points of a network and through the private branch exchange are shown and described. In one embodiment the method can include issuing a path replacement command to the private branch exchange receiving a facility message from the private branch exchange destined for one end point of a communications session and transmitting the received facility message to another end point of the communications session.

In one another embodiment the method includes issuing by the private branch exchange a release command to each of the end points of the communication session. In a further embodiment issuing a release command can include issuing an ISDN release command.

In another embodiment the method includes issuing a path replacement command from the communications appliance. Also the method can include receiving a facility message by the communications appliance.

In another aspect a method of releasing a communications appliance from the media path portion of a communications session through a private branch exchange is shown and described. In one embodiment the method includes issuing a first invite command to a first end point of a first communication session the invite command comprising a port advertisement of a second communication session and issuing a second invite command to a second end point the second invite command comprising a port advertisement of the first communication session.

In one embodiment the method includes establishing a communications session between the first end point and the second end point through the private branch exchange the communication session comprising RTP media. In another embodiment the method includes issuing by the communications appliance a control command to the private branch exchange during the established communication session. In still another embodiment the method includes issuing a SIP invite command to the first end point.

In another aspect a system for releasing a communications appliance from a private branch exchange to establish a communication session between two end points of a network and through the private branch exchange is shown and described. The system includes means for issuing a path replacement command to the private branch exchange means for receiving a facility message from the private branch exchange destined for one end point of a communications session and means for transmitting the received facility message to another end point of the communications session.

In still another aspect a system for releasing a communications appliance from the media path portion of a communications session through a private branch exchange is shown and described. The system can include means for issuing a first invite command to a first end point of a first communication session the invite command comprising a port advertisement of a second communication session and means for issuing a second invite command to a second end point the second invite command comprising a port advertisement of the first communication session.

In yet another aspect computer readable medium having instructions thereon that when executed cause a processor to at least partial release a communications appliance from a private branch exchange to establish a communication session between two end points of a network and through the private branch exchange is shown and described. The computer readable medium includes in one embodiment instructions to issue a path replacement command to the private branch exchange instructions to receive a facility message from the private branch exchange destined for one end point of a communications session and instructions to transmit the received facility message to another end point of the communications session.

In still another aspect a computer readable medium having instructions thereon that when executed cause a processor to release a communications appliance from the media path portion of a communications session through a private branch exchange is shown and described. The computer readable medium includes in one embodiment instructions to issue a first invite command to a first end point of a first communication session the invite command comprising a port advertisement of a second communication session and instructions to issue a second invite command to a second end point the second invite command comprising a port advertisement of the first communication session.

With reference to one embodiment of an environment for providing voice communication e.g. a voice call is shown and described. The environment includes a plurality of end users A B C D generally referred to end user that communicate using to one or more of a mobile network a packet switched network and a circuit switched network . One of the end users is in communication with a communication gateway via a network . The communications gateway is also in communication with a private branch exchange PBX . The PBX is in communications with one or more of the mobile network the packet switched network and the circuit switched network . Also the communications gateway and the PBX communicate with each other via a second network . In one embodiment the first network and the second network are the same network. The second network can include one or more of each of a QSIG trunk an H.323 trunk and a SIP trunk. QSIG refers to the ISDN based signaling protocol for signaling between nodes of a Private Integrated Services Network PISN . The QSIG protocol carries user and feature information between private branch exchanges. H.323 refers to the ITU standard that defines a framework of protocols for inter working voice video and data across an IP network. SIP refers to the Session Initiation Protocol which is used for setting up communications sessions on the Internet such as telephony presence events notification and instant messaging. The SIP protocol initiates call setup routing authentication and other feature messages to endpoints within an IP domain.

Each end user can have a computing device executing software that provides at least some of the below described functionality. The end user interacts with the computing device to cause the computing device to for example issue commands to the communications gateway which in turn issues commands to the PBX to establish a voice communication session.

The first network and the second network can be a local area network LAN a metropolitan area network MAN or a wide area network WAN such as the Internet or the World Wide Web. The computing device connects to the network via communications link using any one of a variety of connections including but not limited to standard telephone lines LAN or WAN links e.g. T1 T3 56 kb X.25 broadband connections ISDN Frame Relay ATM and wireless connections. The connections can be established using a variety of communication protocols e.g. TCP IP IPX SPX NetBIOS and direct asynchronous connections .

In other embodiments the computing device of the end user connects to the communications gateway through an additional network not shown using another communication link that connects the network to the additional network. The protocols used to communicate through the communications link can include any variety of protocols used for long haul or short transmission. For example TCP IP IPX SPX NetBIOS NetBEUI SONET and SDH protocols or any type and form of transport control protocol may also be used such as a modified transport control protocol for example a Transaction TCP T TCP TCP with selection acknowledgements TCPSACK TCP with large windows TCP LW a congestion prediction protocol such as the TCP Vegas protocol and a TCP spoofing protocol. In other embodiments any type and form of user datagram protocol UDP such as UDP over IP may be used. The combination of the networks can be conceptually thought of as the Internet. As used herein Internet refers to the electronic communications network that connects computer networks and organizational computer facilities around the world.

The packet switched network communicates directly or indirectly with the PBX . As used herein a packet switched network refers to a data communications network where information e.g. voice and data is divided into packets and delivered to their destination separately and possibly via different paths. Some packet switched networks provide voice over IP VoIP functionality. The PBX can provide telephone services to end users having telephone devices terminated on the packet switched network . As used herein telephone devices refers telephones fax machines computers IP phones soft phones video phones mobile phones wlan phones or other devices capable of transmitting and receiving audible information.

The circuit switched network also communicates directly or indirectly with the PBX . As used herein circuit switched refers to routing traffic between an originator and a destination through switching centers from local users or from other switching centers whereby a continuous electrical circuit is established and maintained between the calling and called stations until it is released by one of those stations. For example the switched circuit network can be the public switched telephone network PSTN . The PBX can provide telephone services to end users having telephone devices terminated on the circuit switched network .

The mobile network communicates directly or indirectly with the PBX . As used herein mobile network refers to facilities operated by a telephony carrier for the purposes of providing public mobile telecommunications services. The PBX can provide telephone services to enterprise subscribers having telephone devices terminated on the mobile switched network .

As an operational summary the PBX interfaces to one or more of the mobile network the packet switched network and the circuit switched network and to the communications gateway . An end user initiates a request for a communications session with another end user . In response the computing device of the end user issues a signal e.g. a command to the communications gateway . In response the communications gateway establishes communications with the PBX and issues a signal e.g. a command to the PBX to establish a communications session between the end users . In such an embodiment the communications session is established and hosted by the PBX .

The computing devices communications gateway and PBX may be deployed as and or executed on any type and form of computing device such as a computer network device or appliance capable of communicating on any type and form of network and performing the operations described herein or known in the art. As shown in each computing device includes a central processing unit and a main memory unit . As shown in a computing device may include a visual display device a keyboard and or a pointing device which can control a cursor such as a mouse. Each computing device may also include additional optional elements such as one or more input output devices generally referred to using reference numeral and a cache memory in communication with the central processing unit .

The central processing unit is any logic circuitry that responds to and processes instructions fetched from the main memory unit . In many embodiments the central processing unit is provided by a microprocessor unit such as those manufactured by Intel Corporation of Mountain View Calif. those manufactured by Motorola Corporation of Schaumburg Ill. those manufactured by Transmeta Corporation of Santa Clara Calif. the RS 6000 processor those manufactured by International Business Machines of White Plains N.Y. or those manufactured by Advanced Micro Devices of Sunnyvale Calif. The computing device may be based on any of these processors or any other processor capable of operating as described herein.

Main memory unit may be one or more memory chips capable of storing data and allowing any storage location to be directly accessed by the microprocessor such as Static random access memory SRAM Burst SRAM or SynchBurst SRAM BSRAM Dynamic random access memory DRAM Fast Page Mode DRAM FPM DRAM Enhanced DRAM EDRAM Extended Data Output RAM EDO RAM Extended Data Output DRAM EDO DRAM Burst Extended Data Output DRAM BEDO DRAM Enhanced DRAM EDRAM synchronous DRAM SDRAM JEDEC SRAM PC100 SDRAM Double Data Rate SDRAM DDR SDRAM Enhanced SDRAM ESDRAM SyncLink DRAM SLDRAM Direct Rambus DRAM DRDRAM or Ferroelectric RAM FRAM . The main memory may be based on any of the above described memory chips or any other available memory chips capable of operating as described herein. In the embodiment shown in the processor communicates with main memory via a system bus described in more detail below . depicts an embodiment of a computing device in which the processor communicates directly with main memory via a memory port . For example in the main memory may be DRDRAM.

The computing device may support any suitable installation device such as a floppy disk drive for receiving floppy disks such as 3.5 inch 5.25 inch disks or ZIP disks a CD ROM drive a CD R RW drive a DVD ROM drive tape drives of various formats USB device hard drive or any other device suitable for installing software and programs such as any client software or portion thereof. The computing device may further comprise a storage device such as one or more hard disk drives or redundant arrays of independent disks for storing an operating system and other related software and for storing application software programs such as any program related to a client software package . Optionally any of the installation devices could also be used as the storage device . Additionally the operating system and the software can be run from a bootable medium for example a bootable CD such as KNOPPIX a bootable CD for GNU Linux that is available as a GNU Linux distribution from knoppix.net.

Furthermore the computing device may include a network interface to interface to a Local Area Network LAN Wide Area Network WAN or the Internet through a variety of connections including but not limited to standard telephone lines LAN or WAN links e.g. 802.11 T1 T3 56 kb X.25 broadband connections e.g. ISDN Frame Relay ATM wireless connections or some combination of any or all of the above. The network interface may comprise a built in network adapter network interface card PCMCIA network card card bus network adapter wireless network adapter USB network adapter modem or any other device suitable for interfacing the computing device to any type of network capable of communication and performing the operations described herein.

A wide variety of I O devices may be present in the computing device some of which may function as pointing devices. Input devices include keyboards mice trackpads trackballs microphones and drawing tablets. Output devices include video displays speakers inkjet printers laser printers and dye sublimation printers. The I O devices may be controlled by an I O controller as shown in . The I O controller may control one or more I O devices such as a keyboard and a pointing device e.g. a mouse or optical pen. Furthermore an I O device may also provide storage and or an installation medium for the computing device . In still other embodiments the computing device may provide USB connections to receive handheld USB storage devices such as the USB Flash Drive line of devices manufactured by Twintech Industry Inc. of Los Alamitos Calif.

In some embodiments the computing device may comprise or be connected to multiple display devices which each may be of the same or different type and or form. As such any of the I O devices and or the I O controller may comprise any type and or form of suitable hardware software or combination of hardware and software to support enable or provide for the connection and use of multiple display devices by the computing device . For example the computing device may include any type and or form of video adapter video card driver and or library to interface communicate connect or otherwise use the display devices . In one embodiment a video adapter may comprise multiple connectors to interface to multiple display devices . In other embodiments the computing device may include multiple video adapters with each video adapter connected to one or more of the display devices . In some embodiments any portion of the operating system of the computing device may be configured for using multiple displays . In other embodiments one or more of the display devices may be provided by one or more other computing devices such as computing devices and connected to the computing device for example via a network. These embodiments may include any type of software designed and constructed to use another computer s display device as a second display device for the computing device . One ordinarily skilled in the art will recognize and appreciate the various ways and embodiments that a computing device may be configured to have multiple display devices 

In further embodiments an I O device may be a bridge between the system bus and an external communication bus such as a USB bus an Apple Desktop Bus an RS 232 serial connection a SCSI bus a FireWire bus a FireWire 800 bus an Ethernet bus an AppleTalk bus a Gigabit Ethernet bus an Asynchronous Transfer Mode bus a HIPPI bus a Super HIPPI bus a SerialPlus bus a SCI LAMP bus a FibreChannel bus or a Serial Attached small computer system interface bus.

A computing device of the sort depicted in typically operate under the control of operating systems which control scheduling of tasks and access to system resources. The computing device can be running any operating system such as any of the versions of the Microsoft Windows operating systems the different releases of the Unix and Linux operating systems any version of the Mac OS for Macintosh computers any embedded operating system any real time operating system any open source operating system any proprietary operating system any operating systems for mobile computing devices or any other operating system capable of running on the computing device and performing the operations described herein. Typical operating systems include WINDOWS 3.x WINDOWS 95 WINDOWS 98 WINDOWS 2000 WINDOWS NT 3.51 WINDOWS NT 4.0 WINDOWS CE and WINDOWS XP all of which are manufactured by Microsoft Corporation of Redmond Wash. MacOS manufactured by Apple Computer of Cupertino Calif. OS 2 manufactured by International Business Machines of Armonk N.Y. and Linux a freely available operating system distributed by Caldera Corp. of Salt Lake City Utah or any type and or form of a Unix operating system among others.

In other embodiments the computing device may have different processors operating systems and input devices consistent with the device. For example in one embodiment the computer is a Treo 180 270 1060 600 650 680 and 700 smart phone manufactured by Palm Inc. In this embodiment the Treo smart phone is operated under the control of the Palm OS operating system and includes a stylus input device as well as a five way navigator device. Moreover the computing device can be any workstation desktop computer laptop or notebook computer server handheld computer mobile telephone any other computer or other form of computing or telecommunications device that is capable of communication and that has sufficient processor power and memory capacity to perform the operations described herein.

In some embodiments the client software provides functionality related to establishing a communication session such as a telephone call a chat session an e mail session or other communications session. Further the client software can provide the end user of the client with functionality that allows the end user to click a telephone number or other recognized pattern within output of a software application and call that telephone number. Upon selection of the telephone number the client computer signals the communications gateway to issue commands to the PBX which in turn establishes the communication session. In addition the end user can edit the telephone number prior to establishing the call and also designate a phone number that the end user wants to be called at if the end user is away from their telephone that is associated with the PBX . Also the client software can perform directory traversal to locate numbers that are not located in the application output but instead are stored in one or more heterogeneous or homogenous directory services e.g. outlook contacts and other directory sources . Additional details of the client software are described below.

Referring now to an embodiment of the client software is depicted. In brief overview the client software includes a cursor detection hooking mechanism a plurality of application specific process handlers referred to generally as processes handler a parser module a call process and one or more directory handlers. Each of these modules can communicate with each other directly or indirectly using known programming techniques.

In further detail of the cursor detection mechanism comprises any logic function and or operations to detect a status movement or activity of a cursor or pointing device on the screen of the client computing device . The cursor detection mechanism may comprise software hardware or any combination of software and hardware. In some embodiments the cursor detection mechanism comprises an application program library process service task or thread. In one embodiment the cursor detection mechanism may include an application programming interface API hook into the operating system to obtain or gain access to events and information related to a cursor and its movement on the screen. Using a API Hooking technique the client software and or cursor detection mechanism monitors and intercepts operating system API calls related to the cursor and or used by applications. In some embodiments the cursor detection mechanism API intercepts existing system or application s functions dynamically at runtime.

In another embodiment the cursor detection mechanism may include any type of hook filter or source code for receiving cursor events or run time information of the cursor s position on the screen or any events generated by button clicks or other functions of the cursor. In other embodiments the cursor detection mechanism may comprise any type and form of pointing device driver cursor driver filter or any other API or set of executable instructions capable of receiving intercepting or otherwise accessing events and information related to a cursor on the screen. In some embodiments the cursor detection mechanism detects the position of the cursor or pointing device on the screen such as the cursor s x coordinate and y coordinate on the screen. In one embodiment the cursor detection mechanism detects tracks or compares the movement of the cursor s X coordinate and y coordinate relative to a previous reported or received X and Y coordinate position.

In one embodiment the cursor detection mechanism comprises logic functionality and or operations to detect if the cursor or pointing device is idle or has been idle for a predetermined or predefined length of time. In some embodiments the cursor detection mechanism detects that the cursor has been idle for a predetermined length of time between 100 ms and 1 sec such as 100 ms 200 ms 300 ms 400 ms 500 ms 600 ms 700 ms 800 ms or 900 ms. In one embodiment the cursor detection mechanism detects that the cursor has been idle for a predetermined length of time of approximately 500 ms such as 490 ms 495 ms 500 ms 505 ms or 510 ms. In some embodiments the predetermined length of time to detect and consider the cursor is idle is set by the cursor detection mechanism . In other embodiments the predetermined length of time is configurable by a user or an application via an API graphical user interface or command line interface.

In some embodiments a sensitivity of the cursor detection mechanism may be set such that movements in either the X or Y coordinate position of the cursor may be received and the cursor still detected and or considered idle. In one embodiment the sensitivity may indicate the range of changes to either or both of the X and Y coordinates of the cursor which are allowed for the cursor to be considered idle by the cursor detection mechanism . For example if the cursor has been idle for 200 ms and the user moves the cursor a couple or a few pixels coordinates in the X and or Y direction and then the cursor is idle for another 300 ms the cursor detection mechanism may indicate the cursor has been idle for approximately 500 ms.

The application specific process handler analyzes the contents of the application output. In some embodiments the application output is displayed within an application window. In some embodiments each application specific handler interacts with a single type of application. For example Internet Explorer Microsoft Word Edit fields this includes notepad and Static text fields each can have a specific process handler . In other embodiments additional process handlers are included for other applications e.g. Adobe reader Microsoft PowerPoint Microsoft Excel and the like . Also a single application handler can interact with multiple applications that have similar characteristics. As such there may be fewer application specific handlers the number of applications. When the pointer is idle the client software initiates each of the application specific process handlers . In other embodiments only specific process handlers are initiated. The client software determines which window is active and thus which application is producing output in the active window. If there is an application specific process handler for the application that process handler determines whether a specific pattern of characters exists within a specific area determined relative to the location of the cursor which is described in more detail below with reference to .

For example if the active window is a static window an application specific handler retrieves text from within the application using a WM GETTEXT message. The returned contents are analyzed for patterns. If in one example a telephone number is found it is displayed to the end user. In another example if an edit window is the active window the application specific handler uses EM  messages that are a part of the operating system API. Text that is in the vicinity of the pointer location is returned using the WM GETTEXT and EM CHARFROMPOS messages.

In still another example if the active window is an Internet Explorer window the application specific process handler extracts the underlying HTMLDocument2 object from the window using the WM HTML GETOBJECT message. The handler than traverses the HTML to get the IHTMLBodyElement object from which an IHTMLTxtRange object can be extracted containing the text under the location of the pointer. If the active window is a Microsoft Word window the application specific process handler extracts the underlying IID Window object from the window using the AccessibleObjectFromWindow API method. From that object the RangeFromPoint method returns an IID Range object containing the text at the location of the pointer.

If none of application specific process handlers can resolve the application output of the active window a default process handler is called. In one embodiment the default process handler performs screen captures object character recognition and pattern matching similar to those described in U.S. patent application Ser. No. 11 539 515 filed on Oct. 6 2006. The entire contents of which are herein incorporated by reference.

The area of the application window investigated by the process handler can be a predetermined portion of the screen. In one embodiment a rectangular area calculated to be of a predetermined size or dimension based on the font used by the system. In one embodiment the client software screen captures a rectangular portion of the screen a scan area based on screen resolution screen font and the cursor s X and Y coordinates. Although the generally described capturing a rectangular shape any shape for the scanning area may be used in performing the techniques and operations of the client software described herein. For the example the scanning area may be any type and form of polygon or may be a circle or oval shape. Additionally the location of the scanning area may be any offset or have any distance relationship far or near to the position of the cursor . For example the scanning area or portion of the screen analyzed may be next to under or above or any combination thereof with respect to the position of the cursor .

The size of the scanning area may be set such that any text of the textual element is obtained by the screen image while not making the scanning area to large as to take an undesirable or unsuitable amount of processing time. The balance between the size of the scanning area and the desired time for the client software to perform the operations described herein depends on the computing resources power and capacity of the client computing device the size and font of the screen as well as the effects of resource consumption by the system and other applications.

As depicted in the client software includes or otherwise uses a parser . The parser includes software hardware or any combination thereof having logic functions or operations to perform matching of a pattern on any text. The client computing device via the operating system an application or any process program service task thread script or executable instructions may display on the screen or off the screen such as in the case of virtual or scrollable desktop screen any type and form of textual element . A textual element is any user interface element that may visually show text of one or more characters such as any combination of letters numbers or alpha numeric or any other combination of characters visible as text on the screen. In one embodiment the textual element may be displayed as part of a graphical user interface. In another embodiment the textual element may be displayed as part of a command line or text based interface. Although showing text the textual element may be implemented as an internal form format or representation that is device dependent or application dependent. For example an application may display text via an internal representation in the form of source code of a particular programming language such as a control or widget implemented as an ActiveX Control or Java Script that displays text as part of its implementation. In some embodiments although the pixels of the screen show textual data that is visually recognized by a human as text the underlying program generating the display may not have the text in an electronic form that can be provided to or obtained by the client software via an interface to the program.

The parser may compare and or match one or more records such as one or more strings from a list of strings with the recognized text of the active application window. In one embodiment the parser performs exact matching such as comparing a first string in a list of strings to the recognized text to determine if the strings are the same. In another embodiment the parser performs approximate or inexact matching of a first string to a second string such as the recognized text. In some embodiments approximate or inexact matching includes comparing a first string to a second string to determine if one or more differences between the first string and the second string are with a predetermined or desired threshold. If the determined differences are less than or equal to the predetermined threshold the strings may be considered to be approximately matched.

In one embodiment the parser uses one or more decision trees or graph node techniques for performing an approximate match. In another embodiment the parser may use any type and form of fuzzy logic. In yet another embodiment the parser may use any string comparison functions or custom logic to perform matching and comparison. In still other embodiments the parser performs a lookup or query in one or more databases to determine if the text can be recognized to be of a certain type or form. Any of the embodiments of the parser may also include implementation of boundaries and or conditions to improve the performance or efficiency of the matching algorithm or string comparison functions.

In some embodiments the parser performs a string or number comparison of the recognized text to determine if the text is in a form of a telephone facsimile or mobile phone number. For example the parser may determine if the recognized text in the form or has the format for a telephone number such as and the like where is a number or telephone number digit. As depicted the client computing device may display any type and form of contact information on the screen as a textual element . The contact information may include a person s name street address city town state country email address telecommunication numbers telephone fax mobile TTY Skype etc instant messaging contact info a username for a system a web page or uniform resource locator URL and company information. As such in other embodiments the parser performs a comparison to determine if the recognized text is in the form of contact information a combination of textual elements or a portion thereof. Also in some embodiments the parser excludes specific types of patterns. For example if the letters TTY precede a telephone number the parser can ignore such a pattern because using a click to call function for such a number may not make sense.

Although the parser may generally be described with regards to telephone numbers or contact information the parser may be configured designed or constructed to determine if text has any type and form of pattern that may be of interest such as a text matching e.g. a web page address any predefined or predetermined pattern. As such the client software can be used to isolate any patterns in the recognized text and use any of the techniques described herein based on these predetermined patterns.

The call process presents the recognized patterns to the end user and provides the user the chance to edit the number to be called look up additional numbers or contact information using the directory handlers and or select a new number to call. In addition the end user can change the number they are calling from to change the number the calling party they will be contacted at. The user can then click a call button to initiate the call.

In some embodiments the client software or any portions thereof may be obtained provided or downloaded automatically or otherwise from the communications gateway . In one embodiment the client software is automatically installed on the client computing device . For example the client software may be automatically installed when a user of the client computing device accesses the communications gateway such as via a web page for example a web page to login to a network . In some embodiments the client software is installed in silent mode transparently to a user or application of the client computing device . In another embodiment the client software is installed such that it does not require a reboot or restart of the client computing device .

As an operational overview the computing device displays application output comprising contact information on the screen which can be accessed via a pointing device e.g. a cursor . Via the cursor detection hooking mechanism the client software detects that the cursor has been idle for a predetermined length of time and in response to the detection the client software launches a plurality of the application specific process handlers .

In one embodiment a rectangular portion of the screen next to or near the cursor is captured The client software launches the application specific process handlers to recognize any text of the textual element that may be included in the application output . Using the parser the client software determines if the recognized text has any patterns of interest such as a telephone number or other contact information .

Upon this determination the client software can act upon the recognized text by providing a user interface element in the screen selectable by the user to take an action associated with the recognized text. For example in one embodiment the client software may recognize a telephone number in the screen captured text and provide a user interface element such as an icon on window of menu options for the user to select to initiate a telecommunication session. That is in one case in response to recognizing a telephone number in the captured screen image of the textual information the client software automatically provides an active user interface element comprising or linking to instructions that cause the initiation of a telecommunication session. In some cases this may be referred to as a providing a click 2 call user interface element to the user.

Referring now to an example embodiment of the client software for establishing a communication session is shown and described. In brief overview the screen of the client computing device depicts a textual element comprising contact information in the form of telephone numbers. The cursor is positioned or otherwise located near the top left corner of the textual element or the first telephone number in the list of telephone numbers. For example the cursor may be currently idle at this position on the screen. The client software detects the cursor may be idle for the predetermined length of time and starting one or more process handlers and scans a scan area based on the cursor s position. As depicted by way of example the scan area may be a rectangular shape. Also as depicted in the rectangular scan area may include a telephone number portion of the textual element as displayed on the screen. The calculation of the scan area is based on one or more of the following types of information 1 default font 2 screen resolution and cursor 3 position.

In further details of the embodiment depicted in the calculation of the scan area is based on one or more of the following variables 

In one embodiment the client software may set the values of any of the above via API calls to the operating system or an application. For example in the case of a Windows operating system the client software can make a call to GetSystemMetrics function to determine information on the screen resolution. In another example the client software can use an API call to read the registry to obtain information on the default system fonts. In a further example the client software makes a call to the function GetCursorPos to obtain the current cursor X and Y coordinates. In some embodiments any of the above variables may be configurable. A user may specify a variable value via a graphical user interface or command line interface of the client software .

In one embodiment the client software or any portion thereof such as the process handlers and the parser calculates a rectangle for the scanning area relative to the screen resolution width and height of Sw and Sh int max string width int max string height Fp RECT r .left MAX 0 max string width 2 1 .top MAX 0 max string height 2 1 .right MIN max string width 2 1 .bottom MIN max string height 2 1 

In other embodiments the client software or any portion thereof may use any offset of either or both of the X and Y coordinates of the cursor position variables Cx and Cy respectively in calculating the rectangle . For example an offset may be applied to the cursor position to place the scanning area to any position on the screen to the left right above and or below or any combination thereof relative to a position of the cursor . Also the client software may apply any factor or weight in determining the max string width and max string height variables in the above calculation. Although the corners of the scanning area are generally calculated to be symmetrical any of the left top right and bottom locations of the scanning area may each be calculated to be at different locations relative to the max string width and max string height variables. In one embodiment the client software may calculate the corners of the scanning area to be set to a predetermined or fixed size such as that it is not relative to the default font size.

Referring now to an embodiment of the client software providing a selectable user interface element associated with the recognized text of a textual element is depicted. In brief overview the client software displays a selectable user interface element such as a window an icon or hyperlink alone or in various combinations in a manner that is not intrusive to an application but overlays or superimposes a portion of the screen area of the application displaying the textual element having text recognized by the client software . As shown by way of example the client software recognizes as a telephone number a portion of the textual element near the position of the cursor . In response to determining the recognized text matches a pattern for a telephone number the client software displays a user interface element selectable by a user to take an action related to the recognized text or textual element.

In further detail the selectable user interface element may include any type and form of user interface element. In some embodiments the client software may display multiple types or forms of user interface elements for a recognized text of a textual element or for multiple instances of recognized text of textual elements. In one embodiment the selectable user interface element includes an icon having any type of graphical design or appearance. In some embodiments the icon has a graphical design related to the recognized text or such that a user recognizes the icon as related to the text or taking an associated action related to the text. For example and as shown in a graphical representation of a phone may be used to prompt the user to select the icon for initiating a telephone call. When selected the client software initiates a telecommunication session to the telephone number recognized in the text of the textual element e.g. 1 408 678 3300 .

In another embodiment the selectable user interface element includes a window providing a menu of one or more actions or options to take with regards to the recognized text. For example as shown in the client software may display a window allowing the user to select one of multiple menu items A N. By way of example a menu item A may allow the user to initiate a telecommunication session to the telephone number recognized in the text of the textual element e.g. 1 408 678 3300 . The menu time B may allow the user to lookup other information related to the recognized text such as contact information e.g. name address email etc. of a person or a company having the telephone number e.g. 1 408 678 3300 .

The window may be populated with a menu item N to take any desired suitable or predetermined action related to the recognized text of the textual element. For example instead of calling the telephone number the menu item N may allow the user to email the person associated with the telephone number. In another example the menu item N may allow the user to store the recognized text into another application such as creating a contact record in a contact management system such as Microsoft Outlook manufactured by the Microsoft Corporation or a customer relationship management system such salesforce.com provided by Salesforce.com Inc. of San Francisco Calif. In another example the menu item N may allow the user to verify the recognized text via a database. In a further example the menu item N may allow the user to give feedback or indication to the client agent if the recognized text is an invalid format incorrect or otherwise does not correspond to the associated text. The menu item N can also allow the end user to change their current contact number. That is the number that the PBX dials to reach the end user to establish one portion of the call.

For example the client software can traverse one or more heterogeneous directories of the client computing device . In some embodiments specific directory handlers are included with the client software . In one embodiment each directory specific handlers searches a specific directory located on the client. For example an Outlook directory handler traverses the Outlook contacts of the client while a Skype directory handler traverses the Skype directory of the client. Also and LDAP directory handler can search the LDAP directory resident on the communications gateway or a local version thereof stored at the client . In such embodiments there is not a need to consolidate the directories of the client . That is there is no need to import the information from the multiple directories into a signal directory. The results from the plurality of the directory specific handlers are consolidated and displayed to the end user of the client computing device .

With reference to a method of locating information stored within one or more directories of a computing device is shown and described. The method includes receiving step an instruction to locate a portion of contact information stored in the one or more directories. In response to receiving the command the client software initiates step a plurality of directory handler routines. The various directories sources may store contact information in different formats thus different handlers are associated with different types of directories. However if multiple directories stored contact information in a substantially similar manner than a single directory handler can operate on those directories. The directory handler routines traverse step the directories of the computing and locates step the requested contact information. If multiple directories have the requested contact information the client software aggregates step the located information. In some embodiments duplicate contact information is removed. Once aggregated the located information is displayed step to the end user of the computing device.

Referring back to in still another embodiment the user interface element may include a graphical element to simulate represent or appear as a hyperlink . For example as depicted in a graphical element may be in the form of a line appearing under the recognized text such as to make the recognized text appear as a hyperlink. The user element may include a hot spot or transparent selectable background superimposed or overlaying the recognized text e.g. telephone number 1 408 678 3300 as depicted by the dotted lines around the recognized text. In this manner a user may select either the underlined portion or the background portion of the hyperlink graphics to select the user interface element .

In one exemplary embodiment the user interface element is a telephone bar that provides the number to be called in editable fields so that the user can modify the numbers if needed. The user interface element can also include a button to initiate the call. Also the end use can access directory services a call log and other sources to retrieve additional telephone numbers. The call log in some embodiments can include a listing of the most recent numbers dialed and the time the call was placed and other information. Initially the phone bar has a very low initial alpha state meaning that it s mostly translucent. As the user moves the cursor the phone bar window s alpha state will rise and fall. The closer to the phone bar the cursor comes the more visible the window becomes. When the alpha start drops to zero the phone bar disappears until needed again. In one embodiment the rate of change of the alpha state has two modes when the phone bar first appears it fades in and out very quickly once the mouse have gone over the bar the rate becomes slower. This allows the user to easily ignore the bar if they re not interested in making a call but once the user puts the mouse over the phone bar prevents a stray twitch from making the bar go away.

Any of the types and forms of user interface element or may be active or selectable to take a desired or predetermined action associated therewith. In one embodiment the user interface element may comprise any type of logic function or operation to take an action. In some embodiments the user interface element includes a Uniform Resource Locator. In other embodiments the user interface element includes an URL address to a web page directory or file available on a network . In some embodiments the user interface element transmits a message command or instruction. For example the user interface element may transmit or cause the client software to transmit a message to the communications gateway . In another embodiment the user interface element includes script code or other executable instructions to make an API or function call execute a program script or application or otherwise cause the computing device an application or any other system or device to take a desired action.

For example in one embodiment the user interface element calls a Telephony Application Programming Interface TAPI function to communicate with another end user . In another embodiment a call handler or other computing service is used. The user interface element is configured designed or constructed to initiate or establish a telecommunication session via the communications gateway and the PBX to the telephone number identified in the recognized text of the textual element . In another embodiment the user interface element is configured designed or constructed to transmit a message to the communications gateway or have the client software transmit a message to the appliance to initiate or establish a telecommunication session to the telephone number identified in the recognized text of the textual element . In yet another embodiment in response to a message call or transaction of the user interface element the communications gateway and client software work in conjunction to initiate or establish a telecommunication session.

As discussed herein a telecommunication session includes any type and form of telecommunication using any type and form of protocol via any type and form of medium wire based wireless or otherwise. By way of example a telecommunication may session includes but is not limited to a telephone mobile VoIP soft phone email facsimile pager instant messaging messenger video chat short message service SMS web page or blog communication or any other form of electronic communication.

With reference to a method of recognizing a character pattern within output of an application is shown and described. The method includes in one embodiment determining step the status of the pointing device initiating step a plurality of application specific window handler routines and selecting step one of the plurality of routines to operate on the application output. The method further includes identifying step a pattern within the application output associating step a function with the identified pattern and executing step the function in response to a predetermined input received via an input device of the client computing device .

With reference to an embodiment of the communications gateway is shown and described. The gateway can include a telephony manager module a telephony server a server a local file system and an administration module . The telephony manager module communicates with the server the telephony server the file system the client and in some embodiments a licensing server . The telephony server communicates with the PBX via the one or more QSIG DMS 100 H.323 and SIP trunks that can be part of the second network and the local file system . The administration module communicates with the telephony manager module the local file system the server and a administrator computing device . In one embodiment the server communicates with a business continuity service via one or more of the networks .

In one embodiment the telephony manager module includes a license module a click to call module and an optional continuity module . Each of these modules can be a stand alone program executing on the communications gateway . Also the functionality of these modules can be provided in a single application. As an operational overview the telephony manager module serves as a middleware between the telephony server the client software and the optional business continuity services . The telephony manager module receives business continuity lookup requests from the telephony server click to call requests from the clients and proxies them to the business continuity service via a local service which is described in more detail below or click to call services which are also described in more detail below. The telephony manger also controls its behavior by placing outbound calls to the PBX via a telephony server API . The telephony manager is also responsible for starting stopping restarting the telephony server upon receipt of one or more commands from the administration module .

The license module communicates with the license server . The license module performs checks with the license server to control individual features of the communications gateway . In some embodiments the license module performs end user authentication based on supplied domain user credentials. In more detail the license module issues handles to the requests issued from authenticated end users .

Telephony server enables the communications gateway to integrate with various customer PBXs via one or more QSIG H.323 or SIP trunks. In one embodiment the telephony server is based on the ASTERISK PBX software distributed by Digium Inc. Asterisk is a complete IP PBX in software. It runs on a wide variety of operating systems including Linux Mac OS X OpenBSD FreeBSD and Sun Solaris and provides all of the features of a PBX including many advanced features that are often associated with high end and high cost proprietary PBXs. Asterisk supports Voice over IP in many protocols and can interoperate with almost all standards based telephony equipment using relatively inexpensive hardware. In operation the telephony manager module receives inbound call requests from the computing device of the end user and initiates the placement of one or more outbound calls by signaling the PBX .

In one embodiment the server includes an optional local business continuity service a local click to call service a directory import module and local database . In one embodiment the local business continuity service provides periodic synchronization of redirected telephone numbers and authentication of communication servers requesting redirected number lookups.

In one embodiment the local click to call service provides authentication of the click to call requests received by the communications gateway and lookups an end user s PBX extension or a current contact number of the end user using directory information. In one embodiment a token or login credential that is supplied with the click to call request is compared against a list of stored credentials to authenticate the end user . In one embodiment a license handle is supplied with the request and the license module performs the authentication.

In one embodiment the directory import module periodic acquires directory information from one or more lightweight directory access protocol LDAP sources into the local database . This acquired information is used by the local click to call service to resolve an end user s login identity to a telephone number or a PBX extension. Additionally the directory import module can synchronize its contents against the sources from which it imports the data initially. This synchronization can occur on periodic basis or an aperiodic basis.

In one embodiment the local database is an SQL database and communicates with the various modules of the server using SQL commands. Although described as a relational database other types of databases can be used. For example a flat file database can be implemented.

The file system organizes directories and files generally in terms of how it is implemented in the disk operating system. Examples of file system types include but are not limited to FAT16 FAT32 EAFS NTFS HPFS S51K Ext2 AFS. In some embodiments the file system stores configuration files logs profiles directories and databases. Also the file system can store additional data.

Administration module provides the functionality to provision certain aspects of the communications gateway . An administrator computing device communicates with the administration module and allows an end user of the administrator computing device to configure the communications gateway for service. For example the links between the PBX and the communications gateway can be provisioned using the administrator module . Also the administration module can configure features and aspects of the PBX interfaces and other services. Further the administration module can interact with the license server and configure user profiles and network settings. In one embodiment the interaction between the administrator computing device and the communications gateway is web based.

The license server controls individual features of the communications gateway and its maximum capacity. For example the number of concurrent end users and be increased and decreased as needed. In one embodiment the license server participates in the authentication of end users. In one embodiment the license server is external to the communication gateway . In another embodiment the license server is incorporated into the communications gateway .

The business continuity service can also communicate directly or indirectly with the communications gateway . The business continuity service provides functionality related to maintenance of computing and communications functionality in the event of a service disruption that results from a natural disaster or other event.

As an operation summary the communications gateway receives commands and signals from the clients and responds to those commands by issuing additional commands and signals to the PBX and in some instances the business continuity service . For example click to call request from the clients are received by telephony manager validated by the server and forwarded to the telephony server . In response the commands and signals to establishes a communication session are forwarded from the telephony server to the PBX via one or more of the various trunks.

With reference to a method of establishing a communications session is shown and described. The method includes receiving step by the communications gateway from one of the client computing devices forwarding step at least a portion of the received request to the PBX and establishing step the communications session.

In one embodiment the communications gateway receives step the request from one or more of the client computers across a network using any of the previously described protocols and their equivalents. In some embodiments the client computers are executing at least of portion of the client software . For example the client computer can execute a program that locates using the previously described systems and methods address information e.g. a telephone number or e mail address for use in establishing the communications session.

The communications gateway forwards step at least a portion of the received request to the PBX . The portion can include all or a part of the located address information. For example in the case of a telephone number the area code may or may not be forwarded to the PBX . In other embodiments other portions are forwarded to the PBX .

In response to receiving the address information the PBX establishes step a communications session between the end point requesting the session and the end point included in the address information. Said another way a communications session is established between the requesting end point and another end point. In one embodiment each leg of the communications session is established independently. For example the leg between the PBX and the requesting end point is established first and then the second leg is established. In another embodiment the second leg is established first. In other embodiments the legs of the communications session are established nearly simultaneously.

In further detail and with reference to in response to an end user selecting a telephone number on their client computing device a click to call C2C request is sent by the client software to the communications gateway . In one embodiment the request contains the end user s unique identity e.g. a login name a token or any other identifier and the destination phone number. In response the communication gateway converts the end user s identity to the user s PBX extension by performing lookup against a local LDAP directory. In another embodiment the end user specifies as part of the request or shortly thereafter a current location at which to the call the requesting end user . For example the end user can choose to have the call connected to their cellular phone home phone a softphone or any other telecommunications device.

After the destination telephone number and the end user s destination number are determined the communications gateway signals the PBX which in turn places an outbound call to the user s present destination e.g. a PBX extension . Upon the user answering the destination the PBX in some embodiments requires the end user to take an action to complete the call to the other destination number. For example the end user is prompted to depress the 1 on their keypad. Alternatively the end user may be required to speak the number one or some other phrase. Requiring the end user to make an affirmative action before completing the call to the other telephone number prevents two voicemail systems from connecting to each other. For example if the end user inputs an incorrect current location number the PBX when establishing the first call may connect to a voicemail system. If the other telephone number is not answered and goes to voicemail the two voicemail systems will both be waiting for input from each other thus tying up the PBX for some period of time.

Once the end user provides the affirmative indication the communication gateway signals the PBX which in turn places a call to the external i.e. second number and allows the user to hear call progress. If called party picks up the phone or the call is routed to the called party s voice mail click to call operation is considered successful. Once the call is established it is desirable in some embodiments for the communications gateway to remove itself from the call path.

With reference to a method of establishing an audio communications session between two end points each having a voicemail service associated therewith is shown and described. The method includes issuing step an invitation from a first one of the end points e.g. a client computing device . The method also includes receiving step an indication that the first end point is available for a communication session and that the invitation did not terminate with the voicemail service associated with the first end point. In response to receiving the indication the PBX issues step an invitation to join the audio communications session to a second end point.

In one embodiment the PBX issues a request for a communications using any of the above described methods and systems and their equivalent. The invitation can be a SIP invitation or some other know communications protocol e.g. H.323 .

In one embodiment receiving step an indication includes receiving a touch tone response from the end users end point device. For example the end user can depress the number one on the keypad of their phone to indicate that the end user has answered the invitation. Including such an affirmative action reduces the possibly of the voicemail systems of the end users becoming connected with one another. Also such an action aids in ensuring that the end user did not provide the PBX with an incorrect present location for the end user.

Once the end user provides the appropriate affirmative action the PBX issues step an invitation to a second end point to thereby establish the communications session between the end points. Again the invitation can be any issued using any of the before mentioned systems and methods and their equivalents.

After the PBX establishes the communications session in one embodiment the communications gateway releases itself from the media path by using either QSIG call path replacement or SIP re INVITEs to perform direct media bridging. At this point the communications gateway resources are released from the media path. In other embodiments other commands are used to release the communications gateway from the media path. As used herein a SIP re INVITE refers to an INVITE command issued after an initial INVITE command during a communications session.

With reference to a method of releasing a communications appliance e.g. the communications gateway from the PBX is shown and described. The method includes issuing step by the communications appliance a path replacement command to the PBX . In response the communications appliance receives step a facility message from the PBX that was destined one end point of the communications session. In response the communications appliance transmits the received facility message to another end point of the communications session.

In one embodiment if QSIG trunk is used the communication gateway issues a QSIG Path Replacement additional network feature. This causes PBX to send a FACILITY message on one of the call legs which communication gateway rebroadcasts to the other call leg. Finally the PBX sends an ISDN RELEASE to both call legs and bridges the talk path between caller and the PBX user locally. At this point communication gateway is out of the signaling path and can accept new calls on the released DS0 channels.

With reference to an embodiment of a method of releasing a communications appliance from the media path portion of a communications session through a private branch exchange is shown and described. The method can include issuing step by the communications appliance an invite command to a first end point of a first communications session. The first invite command includes a port advertisement of a second communications session support by alone in combination with the PBX and the communications gateway . The method also includes issuing step by the communications appliance a second invite command to a second end point of the communications session. The second invite command includes a port advertisement of the first communications session.

In another embodiment if SIP trunking is used between the communication gateway and the PBX the gateway issues a SIP INVITE to the outbound call leg advertising media port of the incoming call. After the outgoing PBX call leg answers the call with SIP OK response the communication gateway sends a SIP re INVITE to the incoming call leg advertising media port of the outbound call leg. This results in a connection where the communications gateway controls both signaling call legs for the duration of the call but the RTP media is sent directly between the two IP PBX ports at all times keeping the communication gateway out of the media path.

