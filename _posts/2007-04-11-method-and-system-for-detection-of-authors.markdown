---

title: Method and system for detection of authors
abstract: The group of documents by the same author can be used for user profiling, noise reduction, contribution sizing, detecting fraudulent contributions, obtaining other search results by the same author, or mating a document with undisclosed authorship to a document of known author.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07752208&OS=07752208&RS=07752208
owner: International Business Machines Corporation
number: 07752208
owner_city: Armonk
owner_country: US
publication_date: 20070411
---
This invention relates to the field of detection of authors. In particular the invention relates to detection of information across different types of information sources such as across the Web produced by the same author.

There are currently hundreds of millions of people contributing content to the Web. They do so by rating items sharing links photos music and video creating their own webpage or writing them for friends family or employer socializing in social networking sites and blogging their daily life and thoughts. Of those who author Web content there is a group of people who contribute to more than a single Web entity be it on a different host on a different application or under a different username. This group is referred to as Serial Sharers. For example good examples of people who produce several types of content are university professors and students who maintain their own personal Web page on a different host and also a page on their faculty site.

Some authors contribute more than others and their opinion is heard multiple times in multiple contexts. They not only contribute content to the Web but do so on several different hosts and in various different forms be it by tagging public material through their homepage by blogging by contributing portions to open content websites and the likes. These authors are not spammers in the trivial sense. Most have no intention of manipulating search results or influencing worldwide information. They simply enjoy utilizing everything the virtual world offers.

Knowing that the same person authored a collection of not trivially related pages may be used to enhance and create new applications where knowledge about users is essential. Analyzing and using information about a single author which is extracted from different sources may add new dimensions to user information such that is not easily available today.

The problems of Duplicate Page Detection and Mirror Site Detection use multi dimensional aspects of the page to describe duplication in features such as size structure content similar naming of the URL etc. Duplication and mirroring are artifacts of hosting similar information on different machines or hosts in order to facilitate access to those pages in a desired context e.g. hosting a mirror of a software library on a public university server .

Author Detection is somewhat similar in the sense that information written by the same author such as a user profile or a homepage is sometimes partially duplicated by mentioning similar topics expressing similar opinions repeating the same links or usernames etc. However sometimes each page written by the same author comprises exclusively unique segments and there are authors who make a clear distinction between pages about different aspects of their life for example their hobbies and their professional pages.

Studies have explored the field of author detection or author attribution in restricted domains. For instance machine learning and shallow parsing methods have been used to detect authors in various collections of newsgroups. Using similar methods short messages on online message boards have been clustered for detection of users who mask their identity.

These studies all look at very controlled and contained domains. However to solve the problem of author detection on the Web it is very costly to employ methods of shallow parsing and machine learning for several reasons. First feature extraction is a costly process which requires analyzing many aspects of the page and then producing large data structures for storing such information. Secondly feature extraction in such an uncontrolled environment cannot scale up.

Rao J. R. Rohatgi P. 2000 Can pseudonymity really guarantee privacy In Proceedings of the 9th USENIX Security Symposium pages 85 96 tries to align authors from both mailing lists and newsgroups. They report that the stylistic conventions practiced by users of the different media resulted in very poor detection rates with learning and shallow parsing methods.

US 2007 003 3168 discloses a method of receiving multiple content items from a corpus of content items and ranking the content items by using an agent rank. The method includes receiving digital signatures each made by one of multiple agents each digital signature associating one of the agents with one or more of the content items. A score is assigned to a first agent of the multiple agents wherein the score is based upon the content items associated with the first agent by the digital signatures. This disclosure provides a method of providing an author signature but this does not address the problem of Web content without such author signature.

An aim of the present invention is to perform author detection over several media types such as blogs user profiles personal tagging spaces professional and personal homepages and any other identifiable personal information that can be attributed to a single author.

According to a first aspect of the present invention there is provided a method for detection of authors across different types of information sources comprising providing a collection of documents from different types of information sources obtaining a compression signature for a document determining the similarity between compression signatures of two or more documents and determining that if the similarity is greater than a threshold measure the two or more documents are by the same author.

According to a second aspect of the present invention there is provided a computer program product stored on a computer readable storage medium for detection of document authors comprising computer readable program code means for performing the steps of providing a collection of documents from different types of information sources obtaining a compression signature for a document determining the similarity between compression signatures of two or more documents and determining that if the similarity is greater than a threshold measure the two or more documents are by the same author.

According to a third aspect of the present invention there is provided a system for detection of authors across different types of information sources comprising a collection of documents from different types of information sources means for obtaining a compression signature for a document means for determining the similarity between compression signatures of two or more documents and means for determining that if the similarity is greater than a threshold measure the two or more documents are by the same author.

It will be appreciated that for simplicity and clarity of illustration elements shown in the figures have not necessarily been drawn to scale. For example the dimensions of some of the elements may be exaggerated relative to other elements for clarity. Further where considered appropriate reference numbers may be repeated among the figures to indicate corresponding or analogous features.

In the following detailed description numerous specific details are set forth in order to provide a thorough understanding of the invention. However it will be understood by those skilled in the art that the present invention may be practiced without these specific details. In other instances well known methods procedures and components have not been described in detail so as not to obscure the present invention.

Referring to a schematic diagram illustrates a basic Web architecture . Multiple servers host documents which are accessible across the Web via network communication . The term document is used to include single pages or multiple pages of websites files images or other forms of documents. A client system may include a browser application of accessing the documents hosted by the servers . A search engine may be used by a client browser to find documents of interest to the client by use of keywords.

A search engine generally includes a crawler mechanism for gathering information from servers via the network an index mechanism for creating an index or catalogue of the gathered information in an index database and a search query mechanism for retrieving the documents in response to a user query.

The index database references URLs Uniform Resource Locator of documents in the servers with information extracted from the documents. The index database may store cached compressed version of the documents .

The search query mechanism receives a query request from a client via the network compares it to the entries in the index stored in the database and returns the results to the client. When the client selects a link to a document the client s browser is routed straight to the server which hosts the document .

The documents may include multiple documents which are generated by the same author. These documents may be on different host servers on different applications and may be under different usernames. For example the documents by the same author may be the author s own website a blog the author s employer s website a photo sharing website a website to which the author has contributed open content a website in which the author has added a rating for a product or service a forum website etc.

Referring to an exemplary system for implementing a server system a search system and a client system includes a data processing system suitable for storing and or executing program code including at least one processor coupled directly or indirectly to memory elements through a bus system . The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

The memory elements may include system memory in the form of read only memory ROM and random access memory RAM . A basic input output system BIOS may be stored in ROM . System software may be stored in RAM including operating system software . Software applications may also be stored in RAM .

The system may also include a primary storage means such as a magnetic hard disk drive and secondary storage means such as a magnetic disc drive and an optical disc drive. The drives and their associated computer readable media provide non volatile storage of computer executable instructions data structures program modules and other data for the system . Software applications may be stored on the primary and secondary storage means as well as the system memory .

The computing system may operate in a networked environment using logical connections to one or more remote computers via a network adapter .

Input output devices can be coupled to the system either directly or through intervening I O controllers. A user may enter commands and information into the system through input devices such as a keyboard pointing device or other input devices. Output devices may include speakers printers etc. A display device is also connected to system bus via an interface such as video adapter .

A method and system are described in which authorship is detected across Web documents by using compression of the documents. The described method applies a detection by compression algorithm to compute the compression distance for two or more documents in a collection of pages. It is possible to determine authorship wherein a document has a single author based on such a distance as it is assumed that the closest scoring documents have been written by the same author. The documents can then be chained or clustered into document groups by author.

A compression distance can be calculated for a document pair where in the documents are both of unknown author. If a document s author is known a document of unknown author can be assumed to be by the same author as the known document if the compression distance between the two documents is similar. Several documents by a known author could also be compared to a document which is suspected to be written by the same author. The compression distance may be calculated between the unknown document and an aggregation of the documents of known author.

Using compression instead of textual and structural feature extraction is advantageous as there are so many ways in which two pages written by the same author can be similar. They may share themes content terms relative URL path linking patterns page layout color scheme image filenames etc. Encoding such a feature set for a collection of pages is a very subjective task. If the feature set is large enough to describe all possible aspects its usage will not scale to large collections such as the Web.

Compression captures all of the features that repeat themselves in a single page and treats them as information redundancy. So it may capture HTML structure redundancies as well as stylistic redundancies. The final size of the compressed page is determined by the repeating patterns detected in the compression. By using compression for author detection it is hypothesized that every author has a unique compression signature that is similar across all the pages of the same author.

Search engines use compression in storing cached versions of documents. In order to calculate the compression distance for each pair of documents both files need to be compressed together. This may require candidate document pairing that will allow search engines to reduce the number of paired files to be compressed. Such solutions may take usernames found in the URL as a first comparison candidacy. Similarly solutions may be found in computing the probabilities of people co publishing in certain places for instance if a person publishes in a social tagging website they are likely to also have a page in a blog hosting website etc.

The Normalized Compressor Distance NCD has been used by Cilibrasi R. Vitanyi P. M. B. 2005 . Clustering by compression. IEEE Transactions on Information Theory 51 4 1523 1545. as a tool for detecting similarity between files or strings. Given a compressor C and two files x y define 

Where C x C y and C xy are the bit wise sizes of the result sequences when using C to compress x y and the concatenation of x and y respectively. NCD assesses the similarity between a pair of files by measuring the improvement achieved by compressing an information rich file using the information found in the other file.

An example embodiment of the described method uses a variation of NCD which is referred to as two sided NCD 2NCD with the following definition 

2NCD measures separately how much the compression of each of the documents is improved by using the information included in the other document. The compression distance assigned to the document pair is the product of these two measurements.

Clustering is the classification of objects into different groups so that the data in each group share some common trait in this case proximity according to the compression distance measure. Clustering may also be applied by certain features found in the documents for example by features extracted from their original URL after ranking them according to their paired distance. For example if there are three files that were calculated to be similar and their original URLs are 

Referring to a flow diagram is provided of the general method. The flow diagram starts with the provision of a collection of documents such as the Web . The candidate document pairs are defined .

The compression of each of the paired candidate documents are obtained and the paired candidate documents are compressed together . The two sided compression algorithm is applied to determine the compression distance for each pair.

It is then determined if the compression distance for a candidate pair is less than a predefined threshold distance. The threshold may be a dynamic threshold based on the average of all the distances. For example it may be known empirically that 20 of a collection are probably good matches and the rest are not. By ranking all the distances it can be determined dynamically where the 20 threshold falls in terms of a fixed value.

If the compression distance is greater than the threshold the pair of documents are considered to be by different authors and the document pair is discarded . If the compression distance is less than or equal to a threshold distance the pair is considered to be by the same author and retained .

The information about non matching pairs may be preserved for future comparisons or for use in the chaining step below. It may also be retained in order to maintain a ration of those documents that matched against those do not in a given collection.

The pairs of documents which are considered to be by the same author are chained or clustered into document groups considered to be by the same author.

The above method can be used to obtain a set of documents over different types of information sources such as over the Web authored by the same single author. Such a set of documents is very useful in a wide range of applications. For example the set of documents can be used in the following applications 

An exemplary embodiment of the described method and system is provided in the form of a search system in which the determination Web documents by the same author is applied to a search query in order to provide a user with an option to access documents by the same author as documents retrieved in a search.

Referring to an embodiment of the described system is provided in the form of a search system . The search system includes a search engine with a crawler mechanism an index mechanism and a query mechanism . The search engine includes an index database for storing indexed data relating to Web documents. The index database includes cached versions of documents. The cached versions of documents may be compressed documents.

The search engine of the described system includes an author detection means including a candidate pair provision mechanism a document compression mechanism a pair compression mechanism a compression distance calculation mechanism and an author grouping mechanism . The document compression mechanism may use the cached compressed versions of documents from the index database .

The query mechanism includes a selection means for viewing documents by a same author as a returned document.

Referring to a flow diagram is shown of the described method applied to a search engine. A query is input into a search engine and a set of results is returned . A result document is selected . The candidate pairs including the selected document are generated . The document compressions are obtained which may use the compressed cached version of documents in the search index and candidate pairs are compressed together . The compression distance algorithm is applied to obtain the compression distance for each candidate pair.

It is determined if the compression distance for a candidate pair is less than or equal to a predefined threshold. If the compression distance for a candidate pair is above the threshold the pair is discarded . If the compression distance for a candidate pair is below or equal to the threshold the pair is retained . The document paired to the original query result document is returned as a result of by the same author.

An experiment has been carried out to test whether authors can be detected using only their compression signature even across different types of writing styles and Web publication types. A collection of nearly 10 000 pages was used including blogs user profiles social book marking websites photo collections open content style pages personal homepages etc. written by 2201 different authors.

The collection stored only authors who had at least two pages authored by them hosted on two different hosts. Removed from the collection were those who had simply duplicated the content of one site and put it up as a mirror on another host assuming this will be revealed by simple duplicate or mirror site detection .

The files were left intact including all HTML and scripts. This was done in order to achieve realistic results that could potentially be applied to any collection of Web pages without any preprocessing. Also removing HTML markup may have affected the detection of structure and layout characteristics unique to individual authors.

Common links were used as a baseline comparison. It has been found that link co citation yields the best results for topic similarity between documents therefore the baseline comparison in the experiment was chosen as link co occurrence between each pair of documents. As a first step to test the existence of link co occurrence between sets of documents known to be produced by the same author the amount of shared links for each set was calculated. It turned out that about 60 had common links while 40 had no common links between the different pages they have written. The most prolific author had 1283 links appearing repeatedly in the set of the pages he authored.

Motivated by efficiency considerations the collection was sampled and two smaller sets extracted comprising 1043 documents for the first set and 1109 documents for the second set. The sampling was arbitrary and was designed to sample authors rather than pages. All the pages written by the same author were grouped together and the two samples did not include the same author twice. These samples have been worked with to compare each possible pair of documents using link co occurrence and compression distances. For each document its shared links were computed with every other document in the sample. For each such pair their compression distance was calculated by first compressing each document on its own and then compressing the pair together. For the compression task an open source free compressor was used with a relatively large buffer which is advantageous for Web pages.

The results of the compression distances computed for each document pair using 2NCD are shown in and . are histograms of the compression distances computed for each pair of documents against the number of paired files . shows the histogram for the results of the first sample consisting of 1043 documents. shows the histogram for the results of the second sample consisting of 1109 documents. The paler grey bars represent true document pairs that belong to the same author. The darker grey bars represent false document pairs that were written by different authors. For both samples it is clear that the paler grey bars accumulate on the left most side of the charts .

In order to visualize the results of the compression based similarity a graph known as the Receiver Operating Characteristic ROC curve was generated as shown in . This curve plots the sensitivity versus the specificity of a system. In this case each point on the curve plotted in an ROC is a threshold similarity. The horizontal axis of the ROC curve represents the probability that two pages that have a compression similarity index smaller than the threshold will not be from the same author. The vertical axis shows the probability that two pages which have a compression index smaller than the threshold will indeed be from the same author. The ideal curve would touch the upper left corner of the graph while a random decision will result in a curve from the bottom left corner to the upper right hand corner. An ROC is usually parameterized by the area under the curve where 0.5 represents random decision and 1.0 an ideal system.

All the scored pairs are then chained or clustered together to create a set of pages produced by the same author. In order to cluster the pairs of documents a na ve clustering algorithm was used as follows 

Given a distance function D and a threshold t let G V E be a graph whose vertices are all of the documents in a collection with an edge connecting every pair of documents x y such that D x y t. A cluster of single author documents is a connected component in G.

The results of applying this algorithm using 2NCD with different thresholds on the two sample sets are given in . The graph of presents the number of correctly clustered pairs along with by the error rates produced by using different thresholds . Results are shown for sample and sample with the non clustered correctly paired documents are labelled Original and the correctly clustered pairs after running the clustering script are labelled Clusters . The lines show the number of correctly clustered pairs while the bars show the error rate for each cluster. The total number of same author pairs is 2705 and 2745 in sample sets and respectively.

An important observation from this figure is that up to a threshold of 0.008 both error rate and the number of pairs added by the clustering algorithm are relatively small approximately 10 or lower . This means that given a set of very similar documents the compression distance identifies almost every pair in the set as related with relatively few errors. At threshold 0.008 the number of clustered pairs is approximately 37.5 from the total number of truly related pairs. Given B A B and it is speculated that there are two types of relations between documents written by the same author. The first type consists of the cases where a person writes several Web pages with similar motivation. Since the underlying purpose of these documents is the same and they reflect the same purpose the resulting documents are very similar and therefore the compression distance is very low. This may explain the green slopes on the left end of . The other type of relation consists of documents which were written by the same author but serve different purposes and as a result are deemed to be less similar. However since the author is the same there is some resemblance between these documents and they probably comprise the green hills which spread from compression distance 0.01 to 0.035 in . In the current method it is difficult to distinguish between document pairs of the second type and document pairs of different authors.

It is evident that the youth of today is much more likely to have authored multiple Web pages. When those young people become adults they will probably share much more content on the Web than today s adults. If this prediction is correct then the title serial sharer will apply to many more people around the world. Hundreds of millions of people will have their contributions stored all over the Web managing their personal archiving and memoirs online. Search engines need to prepare for that day with a mechanism for automatically detecting and labeling such individual productivity.

Knowing that the same person authored a collection of not trivially related pages may be used to enhance and create new applications where knowledge about users is essential. Analyzing and using information about a single author which is extracted from different sources may add new dimensions to user information such that is not easily available today.

Analyzing the identified set of pages written by the same author may help in tailoring user profiles for personalization or for expertise location. Such user profiles may be derived from information the author chose to include in some or all of the pages.

For personalization the profile may be modeled according to the choice of publication media and the information presented in each media by the shared structure of the documents by color choice by syntactic and lexical choice by layout decisions by the inclusion of images etc. Such information may be used to create user driven defaults of color and layout choices tailored for each individual user. It may also be used to display advertisements that match the profile of who the user s readership is across all sites which is the readership most likely to visit the documents in the set. Looking at profiling the audience of a whole site such collections of profiles spread over several media types may help to better understand use patterns such as what information people choose to share in blogs versus what information they choose to publish on their homepage. It may also help determine the influence of individuals on a collection to better track a community and who shapes its shared content.

For expertise location profiling the whole set may reveal and strengthen evidence for knowledge repeating itself in several documents. Also by using link analysis techniques it may be possible to better reflect the interest the author attracts by looking at all the incoming links to the whole set of documents rather than to a single document. Analyzing social networks based on the whole set of pages written by the same author reveal different patterns than those networks found in homogenous collections consisting only of blogs or of online forum messages. Such information may serve businesses like recruiting services online dating services people search indices and so on.

Serial sharers may also affect search engine ranking since a single author may produce the same idea in identical or similar forms on some or all of the published pages. This may introduce quite considerable noise to the index of a search engine that relies on any kind of host counting link counting term counting or even clickthrough counting. On narrow scale or esoteric topics the phenomenon may even influence content per subject.

The content contributed is not spam and should not be considered spam. Serial sharers do not produce spam they simply use the media in the way it was intended to be used. The Web will eventually be a collection of many voices associated with many echoes. The echoes introduce noise into search engine indices. The noise may skew results retrieved for certain topics like open source where few people write a lot of content distributed on different hosts. There are some solutions that come to mind for using author detection to reduce noise in search engine indices. The first is similar to the idea of site collapse where results coming from the same author may be displayed in a cluster or appear after a show more results by this author button is pressed. Another option is to reduce the set to a single summary file that will represent the whole set written by the same author as a single entity in the collection. Creating a single file or a connected set of files may also help aggregate clickthrough data received for a set of same author pages to better reflect the interest in the whole set rather than in portions of it.

A different usage for collecting the whole set of pages written by the same author is size estimation of user communities publishing on contribution based websites. This will allow for more realistic calculation of the number of unique users who contribute content to the site compared to a different site. Such a comparison may provide stronger evidence about the adoption of certain applications and the rejection of others. For example if many a smaller hosting site is able to prove that its audience consists solely of artists who usually do not publish in any other space this makes the site unique and marketable for advertisement to art supplies companies. On the other hand a site that has most of its authors publish similar content elsewhere has less value in terms of uniqueness and targeted marketing offerings. Owners of websites may be able to produce a seed of documents labeled with their respective authors taken from the collection and compare those samples with those of other sites. This will help create a benchmark against which user community sizing may be performed.

An author detection system alone or as part of a search system may be provided as a service to a customer over a network.

The invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In a preferred embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

The invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store communicate propagate or transport the program for use by or in connection with the instruction execution system apparatus or device.

The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include compact disk read only memory CD ROM compact disk read write CD R W and DVD.

Improvements and modifications can be made to the foregoing without departing from the scope of the present invention.

