---

title: REST application exploration
abstract: A REST application may be explored through discovery of resources and exercising of methods. A user interface displays a graphical representation of the REST application based on a model constructed in memory. User input selects a resource. Methods associated with the selected resource are displayed. A user may select a method and provide input. A request is automatically sent to the server based on the selected method. A representation of the response to the request is displayed on the user interface, allowing the user to further explore the application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08132113&OS=08132113&RS=08132113
owner: Oracle America, Inc.
number: 08132113
owner_city: Redwood City
owner_country: US
publication_date: 20070914
---
The present invention relates to exploring the configuration and functionality of application resources.

Various styles of software architecture may be used in distributed hypermedia systems such as for example the World Wide Web. One such architectural style is Representational State Transfer REST which focuses on how components are used including interaction constraints data element interpretation and the like. Typically applications conforming to REST or RESTful applications are implemented as resources. Resources may define other resources and may support one or more methods. Each resource has an address such as a uniform resource identifier URI . Clients and servers exchange representations of these resources using a standard interface such as for example HTTP.

A RESTful application may be described using the Web Application Description Language WADL . A WADL description may include one or more of a set of resources relationships between resources methods that can be applied to each resource resource representation formats and the like. The set of resources typically includes one or more top level resources. Each top level resource may also have one or more sub resources. Resource relationships may include both referential and causal links. Methods typically include expected inputs and outputs and their supported formats. Methods may include functionality such as post get put delete and the like. WADL may be described using the eXtended Markup Language XML .

REST applications typically reside on servers and may be accessed by one or more remote clients. A difficulty with using REST applications arises from a lack of knowledge concerning the resources and methods supported by the RESTful application. What is needed is support for exploring REST applications.

The present invention allows exploration of a REST application through discovery of resources and exercising of methods.

In one embodiment a client is provided for analyzing resources of a REST application residing on a server. The client may include a user interface that can display one or more of a representation of at least one resource and a list of methods associated with a resource. The resources may be displayed as one or more of a tree structure a table and the like. The user interface may also accept user input specifying one of the resource methods. A model of the application is held in memory. The model may be constructed as a document object model and may be constructed from a web application description language representation of the application. The client may automatically generate a request based on a specified method send a request to the server receive a response from the server and display data received in the server response. If the received data includes additional resources the user interface may display a representation of these additional resources.

In another embodiment a graphical representation of a REST application based on a model constructed in memory is displayed on a user interface. User input specifying a resource is accepted. At least one method associated with the specified resource is displayed on the user interface. User input specifying a displayed method is accepted. A request is automatically sent to the server based on the specified method. A representation of the response to the request is displayed on the user interface.

The above features and other features and advantages of the present invention are readily apparent from the following detailed descriptions thereof when taken in connection with the accompanying drawings.

Referring to a block diagram illustrating a system including a client implemented according to an embodiment of the present invention is shown. A distributed system shown generally by includes at least one client and at least one server . Server provides access to at least one REST application . Each application typically includes resources with at least one resource supporting at least one method . Resource includes any information associated with application that can be named or mapped such as a document file image service a collection of other resources a physical entity and the like. Method is an operation permitted by resource . One possible set of methods includes post get put and delete functionality. Typically methods are standardized and not all methods need be supported by all resources. For example some applications or resources within applications may not support post and delete functionality for security reasons.

Server includes an application representation for each application . Application representation may be implemented for example in a machine readable XML WADL format. An exemplary application representation follows. The characters have been replaced by and respectively to prevent imbedding hyperlinks.

The application tag represents a RESTful application. In this example resources in application are represented by resource tags. Each resource tag may contain param tags for common parameters and method tags for methods that can be operated upon associated resource . Typically method includes request tags specifying parameters specific to that method . A response tag may specify response characteristics such as for example any permitted representation media.

Client allows a user to explore RESTful services and or application functionality. Client may be implemented as an application. As such client may be thought of as including user interface model and controller components. Client may operate on a computer such as a personal computer embedded computer PDA workstation and the like. Portions of client may be implemented as computer instructions loaded from computer readable media as is commonly known in the art. For example some or all of the computer instruction may be implemented using HTML and JS ECMAScript . Client may also be implemented as a standalone Swing application.

Controller includes model builder state response unit and communication unit . Model builder constructs model in memory based on application representation . Model may be constructed in any of a variety of data structures such as for example a linked tree. Application representation is obtained from server using the URI for application to obtain for example the application.wadl file from server . In one embodiment a document object model is created by model builder by using a readWADL url method which issues a get operation using XmlHttpRequest. The URL may be obtained from the user through user interface . In one embodiment client bootstraps itself using model builder .

Communication unit sends requests to application in server . State response unit receives responses from application in server resulting from requests . State response unit may also maintain the state of client such as for example the state of any transaction between client and server .

User interface provides output to a user and accepts input from a user. In one embodiment user interface displays a graphical representation of some or all of resources in application . This representation may include one or more of a tree representation a tabular representation and the like. The user interface allows a user to specify a resource such as for example selecting a graphical representation of the resource or entering a reference for the resource. Once a resource is specified information about that resource may be presented to the user. This information may include sub resources available methods and the like. User interface may obtain information for presentation to the user from model for application by sending request to application and the like.

Referring now to a schematic diagram of a model created according to an embodiment of the present invention is shown. Model includes application entry which reference root resource created by the model builder. Root resource may reference one or more top level resource entries . Each top level resource entry may reference one or more sub resource entries . Sub resources may also reference further sub resources.

Each resource entry may include resource details . Resource details may include one or more method entries . Each method entry typically references request entry and response entry . Request entry may reference one or more parameter entries describing parameters included in a request and representation entry describing representation format such as for example the supported MIME types and data schema. Response representation may include representation entry describing the representation format expected in a response to the request.

Referring now to a schematic diagram illustrating a user interface screen according to an embodiment of the present invention is shown. Display window may be displayed on a screen. In one embodiment display window may be displayed within a web browser as is known in the art. Display window includes location bar into which a URL for an application.wadl file may be entered. Display window also includes a navigator tool shown generally by which displays resources in a tree representation. Resources may be selected by clicking on a resource representation in navigator tool . In one embodiment navigator tool displays sub resources for when a resource is selected.

Display window includes a canvas area shown generally by that may change based on actions selected by the user. In the window shown canvas area includes a currently selected resource display shown generally by providing a URI for the currently selected resource. The currently selected resource may be manually entered may be selected from navigator tool may be selected from the results of a previous exploration or the like. A trail display shown generally by indicates recently explored resources e.g. artists and artists 1 .

Canvas area includes a test input area shown generally by and a test output area shown generally by . Test input area includes method drop box for selecting a method. Mime drop box displays allowed mime types. In one embodiment drop boxes are populated based on the currently selected resource and the application model. When appropriate add parameter button allows input boxes shown generally by to be added for inputting parameter names and values. When activated by a user test button automatically configures and transmits a request based on selections and entries in test input area . Data returned in a response is provided in test output area . A status indicator shown generally by indicates the results of the test. A response box shown generally by provides information returned in the response. Response box can provide a variety of information in different formats. A tabular view lists information such as sub resources in a table from which the next resource may be selected by a user. A raw view presents the data in the format of the response such as for example plain text. A header view displays HTTP header information of an HTTP request. A monitor view displays traffic between the client and the server.

Referring now to a schematic diagram illustrating another user interface screen according to an embodiment of the present invention is shown. Test input area of display window includes resource input text box . In the example shown text box includes a text string for input to a put method. Once the text is entered and a user selects test button a put request with the specified text string will be automatically generated and sent to the server.

Referring now to a flow diagram illustrating RESTful application exploration according to an embodiment of the present invention is shown. As will be appreciated by one of ordinary skill in the art the operations illustrated are not necessarily sequential operations. The order of steps may be modified within the spirit and scope of the present invention and the order shown here is merely for logical presentation. Also the method illustrated may be implemented by any combination of hardware software firmware and the like at one location or distributed. The present invention transcends any particular implementation and the embodiment is shown in sequential flow chart form for ease of illustration.

A WADL file for an application of interest is retrieved from a server and used to construct a model in computer memory as in box . A representation of the application including the top level resources is built and displayed on a user interface as in box . A determination is made as to whether or not a new or first resource is selected by a user as in block . If so methods available for the selected resource are displayed as in block . A determination is made as to whether or not a user has selected to test the selected resource as in block . This test may include a selected method and input data associated with the selected method. If the selected resource is to be tested a test request is automatically generated and sent to the server as in block . A response to the request is received and test results displayed as in block .

While embodiments of the invention have been illustrated and described it is not intended that these embodiments illustrate and describe all possible forms of the invention. Rather the words used in the specification are words of description rather than limitation and it is understood that various changes may be made without departing from the spirit and scope of the invention.

