---

title: Mid-roll insertion of digital media
abstract: An example embodiment of the present invention provides a process for inserting a source media stream into a target media stream, which media streams might be in container file format. The process opens and reads into memory structural information from a target media stream and structural information from a source media stream. The process then finds the nearest prior key frame to an insertion time and splits a chunk of media samples if the key frame's sample is not at the beginning of a chunk. The process adjusts the structural information for both streams in order to effect the mid-roll insertion of the source media stream into the target media stream. The process then writes onto an output media stream the adjusted structural information for the source and target media streams and then pipes onto the output media stream the media data for the source and target media streams.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07962933&OS=07962933&RS=07962933
owner: Velti USA, Inc.
number: 07962933
owner_city: San Francisco
owner_country: US
publication_date: 20070330
---
This application is related to the following commonly owned U.S. provisional patent applications whose disclosures are incorporated herein by reference in their entirety for all purposes U.S. Provisional Application Ser. No. 60 789 680 entitled Ad Campaign Management System for Mobile Devices filed on Apr. 6 2006 and U.S. Provisional Application Ser. No. 60 789 709 entitled Dynamic Ad Insertion System filed on Apr. 6 2006.

This application is also related to the following commonly owned U.S. utility patent application previously filed on Feb. 13 2007 whose disclosure is incorporated herein by reference in its entirety for all purposes U.S. patent application Ser. No. 11 674 570 entitled Insertion of Digital Media .

The present disclosure relates to the insertion of one or more source media content into target media content where the insertion might not take place at the beginning or the end of the target media content i.e. the insertion is mid roll as defined below .

As described in detail in the related applications incorporated by reference above a scalable system has been developed that supports the dynamic insertion of advertisement media or other digital content into the content media communicated to mobile devices such as cellular telephones and media players. In some of the related literature advertisement media of this sort comprise broadband video commercials whose placement might be before the content media pre roll after the content media post roll or during the content media mid roll . See generally the Broadband Ad Creative Guidelines Final Version 1.0 announced by the Interactive Advertising Bureau IAB on Nov. 29 2005.

Inserting one piece of digital media into another is not simply a matter of splicing them together in a manner reminiscent of splicing film or analog audio tape. Many digital media file formats are specific to the encoding of their content. For example MPG and MP3 file formats are each tightly tied to the underlying encoding of the media. Therefore any software that processes files in these formats must have knowledge of the underlying encoding method or codec.

Furthermore if the media to be inserted does not use the same encoding as the target media the media to be inserted must be transcoded. Transcoding is the direct digital to digital conversion from one codec usually lossy to another. It involves decoding decompressing the original data to a raw intermediate format e.g. PCM for audio or YUV for video in a way that mimics standard playback of the lossy content and then re encoding this into the target format.

A container file format is a computer file format that can contain various types of data encoded by means of standardized codecs. Typically a container file format will include an additional layer of indirection in the form of data pointers which software can manipulate instead of the data itself. Consequently container file formats facilitate editing in place without copying of data in computing environments with relaxed constraints as to time and or storage space. Often mobile devices do not provide such environments.

MPEG 4 Part 14 is a standard for a container format for multimedia files. Since the official filename extension for MPEG 4 Part 14 files is .mp4 the container format is often referred to simply as MP4. The MP4 format is ordinarily used to store digital audio and digital video streams where the term stream here refers to a succession of data elements made available over time. MP4 is based on Apple s QuickTime container format. For the details of the latter container format see the QuickTime File Format Apple Mar. 1 2001 .

MP4 files have a logical structure a time structure and a physical structure and these structures are not required to be coupled. The logical structure of the file is of a movie that in turn contains a set of time parallel tracks of media streams. The time structure of the file is that the tracks contain sequences of samples in time and those sequences are mapped into the timeline of the overall movie by optional edit lists. The physical structure of the file separates the data needed for logical time and structural de composition from the media data samples themselves.

Also in terms of physical structure the MP4 file format is composed of object oriented structures called atoms or boxes . A unique tag and a length identify each atom. An atom can be a parent to other atoms or it can contain data but it cannot do both. Most atoms describe a hierarchy of metadata giving information such as index points durations and pointers to the media data. This collection of atoms is contained in an atom called the movie atom . The movie atom documents the logical and timing relationships of the samples and also contains pointers to where they are located. Those pointers may be into the same file or another one referenced by a URL. The media data itself is located elsewhere it can be in the MP4 file contained in one or more mdat or media data atoms or located outside the MP4 file and referenced via URL s.

Each media stream is contained in a track specialized for that media type audio video etc. and is further parameterized by a sample entry. The sample entry contains the name of the exact media type i.e. the type of the decoder needed to decode the stream and any parameterization of that decoder needed. The name takes the form of a four character code. There are defined sample entry formats not only for MP4 media but also for the media types used by other organizations using the MP4 file format family. They are registered at the MP4 registration authority. See the white paper on MPEG 4 File Formats by David Singer and Mohammed Zubair Visharam October 1995 Nice .

Like most other modern container formats the MP4 format supports streaming. Streaming media is media that is consumed e.g. heard or viewed while it is being delivered. Streaming is more a property of the system delivering the media than the media itself. The term streaming is usually applied to media that is distributed over computer networks such as the Internet. Most other delivery systems are either inherently streaming such as radio and television or inherently non streaming such as books video cassettes and audio CDs.

The MP4 file format is a streamable format as opposed to a streaming format. The file format is designed to be independent of any particular delivery protocol while enabling efficient support for delivery in general. Metadata in the file known as hint tracks provide instructions telling a server application how to deliver the media data over a particular delivery protocol. There can be multiple hint tracks for one presentation describing how to deliver over various delivery protocols. In this way the file format facilitates streaming without ever being streamed directly. See MPEG 4 Overview V.21 Jeju Version edited by Rob Koenen March 2002 .

In particular implementations the present invention provides methods apparatuses and systems directed to the mid roll insertion of source media content into target media content. In particular implementations the present invention can be configured to insert source media content into target media content wherein the inserting computing system and or the playing computing system operate under time constraints such as real time or near real time and or storage constraints relating to large scalability.

The following example embodiments are described and illustrated in conjunction with apparatuses methods and systems which are meant to be examples and illustrative not limiting in scope. For example the network environment set forth below is provided for didactic purposes to illustrate how one particular implementation of the invention may be deployed.

Ad management system facilitates the deployment of ad campaigns directed to mobile devices over one or more distribution channels. Ad management system in one embodiment comprises ad insertion server matching engine user interface server ad system database and ad data store . Ad insertion server is operative to insert ad content into target content such as multimedia files and the like. Matching engine is operative to identify one or more ads for insertion into target content. User interface server is operative to provide the communications and user interfaces to the ad management system . User interface server in one embodiment can include HTTP or other server functionality to deliver HTML or web pages in response to requests transmitted by remote hosts.

In other embodiments user interface server is operative to interact with special purpose client applications executed on remote hosts. In yet other embodiments client applications can be embodied in Java Applets and transmitted to remote hosts as part of HTML pages. In other embodiments the client application functionality can include JSP J2EE supported web pages as well as other protocols such as XML SOAP technologies. Ad data store stores ad creative content uploaded by remote users. Ad system database stores data relating to the operation of ad management system . For example ad system database may store one or any of the following user account data design model data profile data content data content meta data ad data ad meta data and campaign data. The databases described above can be implemented in any suitable manner. In one embodiments the data described above is stored in a relational database system e.g. a SQL database wherein the data described above is maintained in one or more tables in the relational database system. Of course the data described herein may also be stored in a flat file database a hierarchical database a network database an object oriented database or an object relational database.

Wireless network enables one or more wireless mobile stations to establish connections with remote devices such as other mobile stations POTS telephones and computing resources e.g. application or media server on packet data network for the transmission of voice video music files or other data. In one embodiment wireless network includes at least one base station or other radio transmit receive unit operably connected to a base station controller e.g. a Base Station Controller BSC a Radio Network Controller RNC etc. .

The present invention can be deployed in connection with one to a plurality of wireless network types. For example wireless network may be a cellular or Personal Communication System PCS network employing several possible technologies including Time Division Multiple Access TDMA Code Division Multiple Access CDMA and Frequency Division Multiple Access FDMA communication. Communication of data between mobile stations and gateway can occur over any suitable bearer service. In one embodiment mobile stations can establish circuit switched or dial up connections to a gateway an interface to external systems or networks such as a WAP or MMS gateway associated with the wireless carrier. For example in GSM networks Short Message Service SMS or Circuit Switched Data CSD bearer services may be used. In addition mobile stations or terminals may establish packet switched connections to gateway using General Packet Radio Services GPRS bearer services. Other bearer service types may include High Speed Circuit Switched Data HSCSD Enhanced Data GSM Environment EDGE . Wireless network can also be a Universal Mobile Telecommunications Service UMTS network enabling broadband packet based transmission of text digitized voice video and multimedia.

As illustrates the present invention can be deployed in an environment involving multiple wireless network types. For example core network may be operably connected to a GSM network including one or more base stations and base station controllers . Base station controller may be logically associated with a packet control unit to operate in connection with at least one Serving GPRS Support Node and at least one Gateway GPRS Support Node to provide packet switched network services. Core network may also support a packet switched UMTS network comprising one or more Node Bs and at least one radio network controller . Core network may also support circuit switched wireless networks such as traditional GSM PCS or cellular networks

Accordingly wireless network may comprise a variety of systems and subsystems. For example in a GSM network the wireless network may comprise one or more base transceiver stations operably connected to a base station controller . As illustrates the base station controller is connected to core network via a SGSN which handles access control and other tasks associated with GPRS services for mobile stations accessing the network. In GPRS networks the base station controller may include a packet control unit which operates in connection with at least one SGSN and a GGSN to provide the GPRS service to mobile stations . Core network may further include a mobile telephone switching office MTSO or mobile switching center MSC that connects the landline PSTN system to the wireless network system and is also responsible for handing off calls from one cell or base station to another. also illustrates UMTS network comprising one or more node Bs operably connected to a radio network controller . Core network may further include media gateway a switching device that terminates circuit switched channels from a wireless network and connections from packet switched core network that supports access to voice and data services for other wireless network types.

Core network includes functionality supporting operation of the wireless network as well as functionality integrating circuit and packet switched network traffic. In one embodiment core network comprises at least one routing device such as router to route data packets between nodes connected to the core network . As discussed above in one embodiment core network includes at least one Gateway GPRS Support Node GGSN and at least one Serving GPRS Support Node SGSN . The Gateway GPRS Support Node supports the edge routing function of the core network . To external packet data networks such as network the GGSN performs the task of an IP router. In one embodiment the GGSN also includes firewall and filtering functionality to protect the integrity of the core network . The SGSN in one embodiment connects a base station controller to core network . The SGSN in one embodiment keeps track of the location of an individual mobile station and performs security functions and access control. Of course one of ordinary skill in the art will recognize that the systems employed within and the functionality of core network depend on the wireless network type s that it supports.

In one embodiment a router interconnects cellular operator server farm to core network . Cellular operator server farm includes at least one server or other computing device implementing functionality associated with enabling and or facilitating operation of wireless network . For example cellular operator server farm in one embodiment comprises signaling gateway and Home Location Register HLR . Operator server farm may further include a Visitor Location Register VLR DNS servers WAP gateways email servers and the like.

As shows in one embodiment cellular operator server farm includes subscriber database and identity access management functionality such as Identity Based Directory Access Protocol ID DAP server and an identity provider . Identity provider is operative to authenticate and assert a user s identity.

Mobile stations in one embodiment include browser client functionality such as micro browsers operative to receive data and files directly from servers such as application or media server indirectly via a WAP gateway or other proxy. As discussed above a variety of circuit switched or packet switched bearer services can be employed to connect mobile stations to WAP gateway. For example mobile stations may be configured to establish a dial up connection. In one embodiment mobile station is a smart phone providing digital voice service as well as web access via a micro browser. Mobile station may also be a wireless personal digital assistant including a micro browser. The micro browser may comply with one to a combination of wireless access protocols such as WAP HDML i mode eHTML and variants of any of the foregoing. In one embodiment at least one mobile station may include functionality supporting SMS and or MMS messaging. In yet another embodiment the mobile station may include a special purpose client that is configured to interact directly with application server as opposed to a general purpose micro browser. In one embodiment the mobile station may include a media player a gaming application or other client side application.

Subscribing to podcasts allows a user to collect programs from a variety of sources for listening or viewing either online or off line through a portable device as desired. Using known software tools such as Apple iTunes software podcast enabled RSS readers web browsers etc. podcasts or other multimedia files downloaded to computer can then be synchronized to a portable multimedia device such as an MP3 player for off line listening. The publish subscribe model of podcasting is a version of push technology in that the information provider chooses which files to offer in a feed and the subscriber chooses among available feed channels.

Podcasting technologies can involve automatic mechanisms by which multimedia computer files are transferred from a server to a client which pulls down XML files containing the Internet addresses of the media files. In general these files contain audio or video but also could be images text PDF or any file type. The content provider posts the feed to a known location on a web server such as podcast system server . This location is known as the feed URI or perhaps more often feed URL . A user enters this feed URI into a software program called a podcatcher podcast reader or aggregator executed on computer . This program retrieves and processes data from the feed URI. A podcatcher can be an always on program which starts when the computer is started and runs in the background. It manages a set of feed URIs added by the user and downloads each at a specified interval such as every two hours. If the feed data has substantively changed from when it was previously checked or if the feed was just added to the podcatcher s list the program determines the location of the most recent item and automatically downloads it to the user s computer . Some podcatchers such as iTunes also automatically make the newly downloaded episodes available to a user s portable media player. The downloaded episodes can then be played replayed or archived as with any other computer file.

The elements of hardware system are described in greater detail below. In particular network interface provides communication between hardware system and any of a wide range of networks such as an Ethernet e.g. IEEE 802.3 network etc. Mass storage provides permanent storage for the data and programming instructions to perform the above described functions implemented in the RF coverage map generator whereas system memory e.g. DRAM provides temporary storage for the data and programming instructions when executed by processor . I O ports are one or more serial and or parallel communication ports that provide communication between additional peripheral devices which may be coupled to hardware system .

Hardware system may include a variety of system architectures and various components of hardware system may be rearranged. For example cache may be on chip with processor . Alternatively cache and processor may be packed together as a processor module with processor being referred to as the processor core. Furthermore certain embodiments of the present invention may not require nor include all of the above components. For example the peripheral devices shown coupled to standard I O bus may couple to high performance I O bus . In addition in some embodiments only a single bus may exist with the components of hardware system being coupled to the single bus. Furthermore hardware system may include additional components such as additional processors storage devices or memories.

In particular embodiments the processes described herein are implemented as a series of software routines run by hardware system . These software routines comprise a plurality or series of instructions to be executed by a processor in a hardware system such as processor . Initially the series of instructions are stored on a storage device such as mass storage . However the series of instructions can be stored on any suitable storage medium such as a diskette CD ROM ROM EEPROM etc. Furthermore the series of instructions need not be stored locally and could be received from a remote storage device such as a server on a network via network communication interface . The instructions are copied from the storage device such as mass storage into memory and then accessed and executed by processor .

An operating system manages and controls the operation of hardware system including the input and output of data to and from software applications not shown . The operating system provides an interface between the software applications being executed on the system and the hardware components of the system. According to one embodiment of the present invention the operating system is the LINUX operating system. However the present invention may be used with other suitable operating systems such as the Windows 95 98 NT XP operating system available from Microsoft Corporation of Redmond Wash. the Apple Macintosh Operating System available from Apple Computer Inc. of Cupertino Calif. UNIX operating systems and the like.

Particular implementations of the invention provides a scalable system that supports the dynamic insertion of advertisements into media communicated to remote hosts such as mobile devices and media players as well as other computing systems. In particular embodiments this system employs an insertion server as described above to perform this dynamic insertion. In turn such an insertion server might employ the processes described below. Some embodiments of this system use pre normalized media content to avoid transcoding and concurrent media streams to avoid the use of large amounts of temporary or intermediate storage.

With regard to pre normalized media particular embodiments require that ads be encoded in a format compatible with the targeted content. For instance if an ad is targeted for insertion into a video podcast then the system might required the ad to be encoded using the H.264 video codec the AAC audio codec and a frame rate of 15 fps. In other implementations the system itself may transcode the media after a user uploads it. Further when the target content comes in a variety of formats some embodiments might require that the ads be available in each of the target formats. Such availability can be achieved by pre transcoding the ad into each of the target formats using a high quality source file.

The use of a high quality source file lessens the degradation resulting from lossy codecs. Pre transcoding the ad allows the transcoding to take place long before any user requests are made for the content thereby avoiding any delays in the delivery of content with the inserted ad. Moreover ads are typically much shorter than the target content and therefore require many fewer resources to transcode in comparison with the resources which would be required to transcode both the ad and content together at insertion time.

In addition to pre normalizing with respect to compatibility particular embodiments of the system might require pre normalizing with respect to sequence. For example some container file formats do not require that their media samples to be in a linear sequence though such a sequence might be easier and faster to process. As part of the pre normalizing process an embodiment of the system might require the creation of a linear sequence of media samples. Since pre normalizing is non real time it does not detract from performance of the system. Other embodiments require pre normalizing with respect to compatibility but not with respect to sequence.

With regard to concurrent media streams it will be appreciated that a audio and video files tend to be large relative to text documents or images but b insertion of such files should not use large amounts of temporary storage space since the use of such storage scales poorly to handle a high volume of content requests. Therefore in some embodiments of the system the insertion server might manage input and output streams concurrently as shown in where at a general level the insertion process proceeds as follows i open Input Stream Content and read the header ii open Input Stream Ad and read the header iii write the merged header to the Output Stream iv pipe part of the media data from Input Stream to the Output Stream v pipe the media data from Input Stream to the Output Stream and vi pipe the remainder of the media data from Input Stream to the Output Stream. As used here and below the term pipe refers to local incremental processing of the input streams so that the output stream begins before the input streams are consumed.

In this generalized process the input and output data sources might not be files on a local system. They might be network connections reading from media servers and writing to a remote client. Since the input and output streams are being read written at the same time the process does not need to create a temporary output file or use other temporary output storage. Further the amount of memory required to complete this process is relative to the size of the headers which tend to be small relative to the media file size. Further the generalized process in could be easily changed to work with more than two input sources in order to insert multiple ads.

The above generalized process might be applied to various media file formats including a container file format such as MP4. shows a simplified view of a container file. In the file might contain one or more tracks such as an audio track and a video track where each track has a header which describes the track in greater detail e.g. its duration encoding playback rate etc.

Further each track includes a table of pointers into the data portion of the file. The data items to which the pointers point are called chunks. There is no required ordering for the chunks but it is often the case that audio and video information is interlaced from beginning to end to allow the media to be played while the file is being read sequentially.

All of the headers in the MP4 container format include encoded structural information within the header s scope. Thus the header for the movie contains structural information for the movie the header for each of the movie s tracks contains structural information for the track and the header for each track s media contains structural information for the media etc.

As noted earlier the structures in the MP4 container file format are identified by atom or box types registered with the MP4 Registration Authority. Here a type consists of a size and a four character code. So for example stbl is a registered atom type for a sample table . shows a table from ISO IEC 14496 12 2005 E Corrected Version Oct. 10 2005 the specification for the ISO base media file format which forms the basis for the MP4 container file format. The table provides descriptions inter alia of the atom or box types that are adjusted by the processes described below and shows the relationship between the types by way of an indentation hierarchy.

In step the process creates an iteration over both the video track and the audio track. In step the process determines whether the chunk is at the beginning of a multi chunk entry in the sample to chunk table e.g. stsc in for the track. If so the process goes to step where the process performs the adjustments to the target media stream s structural information to effectuate a mid roll insertion of the source media stream. Otherwise the process goes to step where the process splits a chunk by adjusting the sample to chunk table for the track and the chunk to offset table e.g. stco in for the track. At this point the iteration created in step ends and the process goes to step described above. The process concludes in step by inserting the media data e.g. mdat in for the source media stream into the media data e.g. mdat in for the target media stream while outputting the target media stream.

For didactic purposes show the insertion of one source media stream into a target media stream. However the process shown in are easily adapted to effect the insertion of multiple source media streams at the same or different insertion times as will be appreciated by one of ordinary skill in the art.

Then in step the process uses the video key frame the video time scale and the video time to sample table e.g. stts in to identify a revised insertion time that is the insertion time that corresponds to the key frame rather than the given insertion time. In step the process obtains a time scale for the audio media from the audio track s media header e.g. mdhd in . Then in step the process uses the revised insertion time the audio time scale and the audio time to sample table e.g. stts in to locate the audio sample number corresponding to the revised insertion time. In step the process uses that audio sample number and the audio sample to chunk table e.g. stsc in to locate the corresponding audio chunk. With respect to this process see generally pp. 79 80 and 243 of the Quick Time File Format Specification.

As noted in the process pipes onto an output stream the media data from the source and target media streams. Particular embodiments implement this piping step with file channels that operate on temporary copies of the source and target media streams stored on the insertion server. File channels are a part of the so called new I O APIs application programming interfaces provided by the Java programming language. In the new I O APIs a file channel can establish a buffer directly mapped to file contents using memory mapped I O. See generally the section on New I O in the Java Platform Standard Edition 5.0 Development Kit JDK 5.0 Documentation Sun Microsystems 2004 .

As described above particular embodiments of the insertion processes described above may be executed by an insertion server. Particular embodiments of the insertion process might be comprised of instructions that are stored on storage media. The instructions might be retrieved and executed by a processing system. The instructions are operational when executed by the processing system to direct the processing system to operate in accord with the present invention. Some examples of instructions are software program code firmware and microcode. Some examples of storage media are memory devices tape disks integrated circuits and servers. The term processing system refers to a single processing device or a group of inter operational processing devices. Some examples of processing devices are integrated circuits and logic circuitry. Those skilled in the art are familiar with instructions storage media and processing systems.

Those skilled in the art will appreciate variations of the above described embodiment that fall within the scope of the invention. In this regard it will be appreciated that there are many other possible orderings of the steps in the processes described above and many possible modularizations of those orderings. It will also be appreciated that the processes are equally applicable when there are multiple source media streams as opposed to just one source media stream as indicated earlier. And it will be appreciated that the processes are equally applicable when a media stream has tracks in addition to a video track and an audio track.

Further it will be appreciated that there are other file formats besides MP4 to which the described insertion process might be applied including other container file formats. Some examples of other container file formats are Quick time the standard Apple container on which MP4 is based IFF first platform independent container format AVI the standard Microsoft Windows container also based on RIFF MOV standard QuickTime container Ogg standard container for Xiph.org codecs ASF standard container for Microsoft WMA and WMV RealMedia standard container for RealVideo and RealAudio Matroska not standard for any codec or system but it is an open standard 3 gp used by many mobile phones and all file formats that use the ISO base media file format.

As a result the invention is not limited to the specific examples and illustrations discussed above but only by the following claims and their equivalents.

