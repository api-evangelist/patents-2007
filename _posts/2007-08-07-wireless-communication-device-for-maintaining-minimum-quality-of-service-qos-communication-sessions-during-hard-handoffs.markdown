---

title: Wireless communication device for maintaining minimum quality of service (QoS) communication sessions during hard handoffs
abstract: The disclosure relates to techniques for maintaining minimum quality of service (QoS) communication sessions with a wireless communication device (WCD) over a data-based communication network during a hard handoff between access networks for the WCD. More specifically, the techniques determine whether a closed connection between the WCD and a first access network during a minimum QoS communication session is due to a hard handoff between the first access network and a second access network. In the case of a hard handoff, the techniques maintain open QoS reservations associated with data flows included in the minimum QoS communication session for a predetermined period of time to enable a new connection to be established between the WCD and a second access network. The techniques described herein may especially useful when performing a voice over Internet Protocol (VoIP) call over an Evolution-Data Optimized (EVDO) communication network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08903393&OS=08903393&RS=08903393
owner: QUALCOMM Incorporated
number: 08903393
owner_city: San Diego
owner_country: US
publication_date: 20070807
---
The present Application for Patent claims priority to Provisional Application No. 60 946 955 entitled Maintaining Minimum Quality Of Service Qos Communication Sessions During Hard Handoffs filed Jun. 28 2007 and assigned to the assignee hereof and hereby expressly incorporated by reference herein.

Evolution Data Optimized EVDO is a wireless radio broadband data standard evolved directly from the cdma2000 single carrier Radio Transmission Technology 1xRTT or simply 1x standard that operates over the Code Division Multiple Access CDMA network infrastructure. EVDO comprises an Internet Protocol IP based network and Quality of Service QoS mechanisms to support applications that rely on quick set up and low latency transmissions over packet based networks. A recent revision of the EVDO standard EVDO Revision A offers higher data rates and higher system capacity and provides additional QoS support that significantly reduces latency and improves performance of delay sensitive applications. EVDO RevA may be particularly useful to support minimum QoS communication sessions such as voice over Internet Protocol VoIP calls and data uploads and downloads with QoS specifications.

A VoIP call over EVDO RevA requires certain minimum QoS guarantees at a traffic channel established between an access terminal i.e. a wireless communication device and an access network for the call to sound at least as good as a circuit switched voice call over the 1x standard. QoS guarantees may include limits on the amount of packet loss delay and jitter that each data flow within the VoIP call may experience. For example a VoIP call may include a signaling data flow and a media data flow associated with respective Radio Link Protocol RLP flows.

At a particular time or place if the access network does not have enough resources to guarantee the minimum QoS for a VoIP call with an access terminal a communication application on the access terminal may get a notification from the protocol stack software that QoS is suspended. The communication application may then drop the VoIP call and may instead try a circuit switched voice call over the 1x standard. In addition to resources on the access network the QoS for a VoIP call is also dependent on the state of the connection between the access terminal and the access network. If the connection at the radio layer is down the communication application gets the same notification that QoS is suspended and drops the VoIP call. The reasoning for this is that an access terminal that is not even connected at the radio layer should not unnecessarily take up radio resources of the access network.

A hard handoff of the access terminal between a first access network and a second access network during a VoIP call may cause the connection at the radio layer to go down momentarily while the communication session is being transferred from the first access network to the second access network. Therefore the communication application receives notification that QoS for the VoIP call is suspended and drops the VoIP call. However the connection at the radio layer is typically down only temporarily and if the hard handoff is successful the connection may be up again with the second access network in a short time.

In general the disclosure relates to techniques for maintaining minimum quality of service QoS communication sessions with a wireless communication device WCD over a data based communication network during a hard handoff between access networks for the WCD. More specifically the techniques may determine whether a closed connection that disrupts communication between the WCD and a first access network during a minimum QoS communication session is due to a hard handoff between the first access network and a second access network. In the case of a hard handoff the techniques may maintain open QoS reservations associated with data flows included in the minimum QoS communication session for a predetermined period of time. This may enable a new connection to be established between the WCD and a second access network.

The techniques may be able to differentiate between three different situations a closed connection in a successful hard handoff a closed connection in an unsuccessful hard handoff and a closed connection due to some other reason. Depending on which of these situations is occurring the techniques may be able to make an appropriate decision of maintaining or dropping a minimum QoS communication session. For example a hard handoff is successful if a new connection is established between the WCD and the second access network before the predetermined period of time expires. In this case the techniques may be able to maintain the minimum QoS communication session during the time after the original connection closes until the new connection is established and may thereby avoid unnecessary dropping of VoIP calls during hard handoffs. A few frames of the data flow may be lost but the minimum QoS communication session will remain up and the user will not experience a call drop. A hard handoff fails if the predetermined period of time expires before a new connection can be established between the WCD and the second access network. In that case the WCD may drop the minimum QoS communication session. In addition if the closed connection is not due to a hard handoff the WCD may drop the minimum QoS data communication session.

The techniques described herein may be especially useful when performing a voice over Internet Protocol VoIP call over an Evolution Data Optimized EVDO communication network and more preferably an EVDO RevA communication network. In that case the WCD comprises an access terminal in the EVDO communication network and the first and second access networks comprise EVDO access networks. The WCD may comprise any data enabled wireless device such as an EVDO phone an Internet Protocol IP phone a soft phone a laptop with a wireless connection and a soft phone a personal digital assistant PDA with a wireless connection and a soft phone or any other device incorporating wireless data communication capabilities.

In one aspect the disclosure is directed to a method comprising with a wireless communication device participating in a minimum QoS communication session over a data based communication network and receiving a connection close message in response to a closed connection between the wireless communication device and a first access network during the minimum QoS communication session. The method further comprises determining whether the closed connection is due to a hard handoff of the wireless communication device between the first access network and a second access network and upon determining that the closed connection is due to a hard handoff maintaining the minimum QoS communication session during the hard handoff.

In another aspect the disclosure is directed to a wireless communication device comprising a processor configured to execute a communication application that participates in a minimum QoS communication session over a data based communication network. The processor is further configured to execute a connection module that receives a connection close message in response to a closed connection between the wireless communication device and a first access network during the minimum QoS communication session and determines whether the closed connection is due to a hard handoff between the first access network and a second access network. The processor is further configured to execute a QoS engine that when the connection module determines that the closed connection is due to a hard handoff maintains the minimum QoS communication session during the hard handoff.

In another aspect the disclosure is directed to a computer program product comprising computer readable media containing instructions. The instructions cause a computer to with a wireless communication device participate in a minimum QoS communication session over a data based communication network and receive a connection close message in response to a closed connection between the wireless communication device and a first access network during the minimum QoS communication session. The instructions also cause the computer to determine whether the closed connection is due to a hard handoff of the wireless communication device between the first access network and a second access network and upon determining that the closed connection is due to a hard handoff maintain the minimum QoS communication session during the hard handoff.

In a further aspect the disclosure is directed to a wireless communication device comprising means for participating in a minimum QoS communication session over a data based communication network and means for receiving a connection close message in response to a closed connection between the wireless communication device and a first access network during the minimum QoS communication session. The wireless communication device also comprise means for determining whether the closed connection is due to a hard handoff of the wireless communication device between the first access network and a second access network and means for when the means for determining determines that the closed connection is due to a hard handoff maintaining the minimum QoS communication session during the hard handoff.

The techniques described in this disclosure may be implemented in hardware software firmware or any combination thereof. If implemented in software the software may be executed in a computer. The software may be initially stored as instructions program code or the like. Accordingly the disclosure also contemplates a computer program product comprising a computer readable medium wherein the computer readable medium comprises instructions for causing a computer to execute techniques and functions according to this disclosure. Alternatively if implemented in hardware such hardware implementations may be digital analog or both. Aspects of this disclosure may be embodied in the computer readable medium or a computer program product that comprises the computer readable medium. The computer program product may include packaging materials.

Additional details of various examples are set forth in the accompanying drawings and the description below. Other features objects advantages and examples will become apparent from the description and drawings and from the claims.

WCD may communicate with one or more of base stations A B included in respective access networks A B. As WCD moves through a region WCD may terminate communication with first base station A included in first access network A and initiate communication with second base station B included in second access network B. For example WCD may terminate communication with first base station A and initiate communication with second base station B based on signal strength or error rate associated with base stations A B using a series of soft and hard handoffs. A hard handoff of WCD between first access network A and second access network B during a minimum QoS communication session may cause traffic channel A to go down momentarily while the communication session is being transferred from first access network A to second access network B on newly established traffic channel B.

Wireless communication system may be designed to support one or more wireless radio access technologies such as code division multiple access CDMA CDMA 2000 Wideband CDMA W CDMA Evolution Data Optimized EVDO or the like. EVDO is a wireless radio broadband data standard evolved directly from the cdma2000 single carrier Radio Transmission Technology 1xRTT or simply 1x standard that operates over the CDMA network infrastructure. EVDO comprises an Internet Protocol IP based network and QoS mechanisms to support applications that rely on quick set up and low latency transmissions over packet based networks. A recent revision of the EVDO standard EVDO Revision A offers higher data rates and higher system capacity and provides additional QoS support that significantly reduces latency and improves performance of delay sensitive applications. EVDO RevA may be particularly useful to support data based minimum QoS communication sessions such as voice over Internet Protocol VoIP calls and data uploads and downloads with QoS specifications.

In some aspects wireless communication system supports a data based communication network such that WCD may perform data based minimum QoS communication sessions over the data based communication network. For example wireless communication system may support an EVDO communication network and more preferably an EVDO RevA communication network. In that case access networks A and B may comprise EVDO access networks and WCD may comprise an access terminal operating in the EVDO communication network. For example WCD may comprise any data enabled wireless device such as an EVDO phone an IP phone a soft phone a laptop with a wireless connection and a soft phone a personal digital assistant PDA with a wireless connection and a soft phone or any other device incorporating wireless data communication capabilities.

A minimum QoS communication session performed over a data based communication network requires certain minimum QoS guarantees at traffic channel A established between WCD and first access network A. QoS guarantees may include limits on the amount of packet loss delay and jitter that each data flow within the minimum QoS communication session may experience. For example a VoIP call may include a signaling data flow and a media data flow. As another example a video telephony session may include a signaling data flow a video data flow and an audio flow. At a particular time or place if first access network A does not have enough resources to guarantee the minimum QoS for each of the data flows within the minimum QoS communication session with WCD a communication application on WCD may receive a notification from WCD that QoS is suspended. The communication application on WCD may then drop the minimum QoS communication session.

In addition to being dependent upon resources on first access network A the QoS for a minimum QoS communication session may also be dependent upon the state of the connection i.e. traffic channel A between WCD and first access network A. When traffic channel A goes down WCD experiences a closed connection with first access network A such that WCD cannot participate in a communication session over first access network A. Traffic channel A may go down temporarily during a hard handoff of WCD between first access network A and second access network B or traffic channel A may go down for a longer period of time or permanently for some another reason.

In accordance with the techniques described herein if traffic channel A goes down WCD maintains the minimum QoS communication session when the closed connection of traffic channel A is due to a hard handoff between first access network A and second access network B. More specifically WCD determines whether the closed connection between WCD and first access network A during a minimum QoS communication session is due to a hard handoff between first access network A and second access network B. In the case of a hard handoff WCD maintains open QoS reservations associated with data flows included in the minimum QoS communication session for a predetermined period of time to enable a new connection i.e. traffic channel B to be established between WCD and second access network B. Open QoS reservations comprise those reservations currently in use for the minimum QoS communication session.

The techniques described herein allow WCD to differentiate between three different situations a closed connection in a successful hard handoff a closed connection in an unsuccessful hard handoff and a closed connection due to some other reason. Depending on which of these situations is occurring the techniques allow WCD to make the appropriate decision of maintaining or dropping a minimum QoS communication session. For example a hard handoff is successful if a new connection is established between WCD and second access network B before the predetermined period of time expires. In this case the techniques allow WCD to maintain the minimum QoS communication session during the time after the original connection closes until the new connection is established. A few frames of the data flow may be lost but the minimum QoS communication session will remain up and the user will not experience a call drop. A hard handoff fails if the predetermined period of time expires before a new connection can be established between WCD and second access network B. In that case WCD drops the minimum QoS communication session. In addition if the closed connection is not due to a hard handoff WCD drops the minimum QoS communication session.

The remainder of this disclosure will be described in relation to VoIP calls over an exemplary EVDO communication network. However this disclosure should not be limited in any way by this example. The techniques described herein may be similarly utilized in other data based communication networks capable of supporting minimum QoS communication sessions with wireless communication devices.

Data services protocol stack includes application programming interfaces APIs a data transport layer and an EVDO air interface layer . EVDO air interface layer includes Radio Link Protocol RLP a QoS engine and a connection module . EVDO air interface layer establishes a radio based communication link e.g. a traffic channel between access terminal and a base station included in an EVDO access network. EVDO air interface layer also governs data signals transmitted and received by access terminal . Data transport layer uses User Datagram Protocol UDP over IP to facilitate the transfer of a VoIP call from access terminal to another communication device via the access network. In other aspects data transport layer may alternatively use Transmission Control Protocol TCP over IP to facilitate the transfer of data signals from access terminal to another communication device. APIs within data services protocol stack are used to control the protocol stack software implemented by data transport layer and EVDO air interface layer . In this example voice services protocol stack includes a 1xRTT air interface layer that establishes a radio based communication link e.g. a traffic channel between access terminal and a base station included in an access network. 1xRTT air interface layer also governs voice signals transmitted and received by access terminal .

VoIP application the components included in data services protocol stack and the components included in voice services protocol stack may be implemented in hardware software firmware or any combination thereof. If implemented in software the components may be executed by a computer e.g. by one or more processors such as one or more digital signal processors DSPs general purpose microprocessors application specific integrated circuits ASICs field programmable logic arrays FPGAs or other equivalent integrated or discrete logic circuitry. The software may be initially stored as instructions program code or the like. Accordingly the disclosure also contemplates a computer program product comprising a computer readable medium wherein the computer readable medium comprises instructions for causing a computer to execute techniques and functions according to this disclosure.

More specifically access terminal may include one or more processors to execute VoIP application the components included in data services protocol stack and the components included in voice service protocol stack . In one aspect access terminal may include a single processor configured to execute VoIP application the components included in data services protocol stack and the components included in voice services protocol stack . In another aspect access terminal may include a first processor configured to execute VoIP application APIs and data transport layer and a second processor configured to execute EVDO air interface layer including QoS engine and connection module . Either the first processor the second processor or a third processor may be configured to execute voice services protocol stack included 1xRTT air interface layer . In a further aspect access terminal may includes a first processor configured to execute VoIP application a second processor configured to execute APIs and data transport layer and a third processor configured to execute EVDO air interface layer including QoS engine and connection module . Either the second processor the third processor or a fourth processor may be configured to execute voice services protocol stack included 1xRTT air interface layer .

A VoIP call over EVDO RevA established by data services protocol stack requires certain minimum QoS guarantees at a traffic channel between access terminal and a first access network. QoS guarantees may include limits on the amount of packet loss delay and jitter that each data flow within the VoIP call may experience. A VoIP call typically includes a signaling data flow and a media data flow associated with respective RLP flows received and transmitted by RLP . At a particular time or place if the first access network does not have enough resources to guarantee the minimum QoS for the VoIP call with access terminal QoS engine receives notice from the first access network that the first access network cannot support the requested QoS for the VoIP call. VoIP application then receives a notification from QoS engine via APIs that QoS is suspended. VoIP application may then attempt a circuit switched voice call over 1x established by voice services protocol stack instead of the VoIP call over EVDO RevA.

The QoS for a VoIP call is also dependent on the state of the connection e.g. traffic channel between access terminal and the first access network. During a VoIP call over EVDO RevA connection module receives a connection close message from the first access network in response to a closed connection between access terminal and the first access network. In some cases the closed connection may occur due to a hard handoff between the first access network and a second access network in which case a new connection is expected to be established shortly between access terminal and the second access network. In other cases the closed connection may be due to other reasons in which a new connection is not expected to be established. However when a hard handoff is in progress the connection close message from the first access network is bundled with a traffic channel assignment TCA message from the second access network. In other words the connection close message sent from the first access network is included in the same message as the TCA message sent from the second access network to set up a new traffic channel with access terminal . Therefore QoS engine may determine whether the closed connection is due to a hard handoff between the first access network and a second access network of access terminal based on whether the connection close message is bundled with a TCA message.

When QoS engine determines that the closed connection between access terminal and the first access network during a VoIP call is due to a hard handoff between the first access network and the second access network QoS engine maintains open QoS reservations associated with the data flows included in the VoIP call in accordance with attributes received from RLP . Open QoS reservations comprise those reservations currently in use for the VoIP call. Any closed QoS reservations for the VoIP call will remain closed.

The EVDO RevA standard includes a RLP attribute called ReservationKKIdle for each data flow within a VoIP call that determines whether the QoS state is tied to the connection state. For data flows on which signaling data is transported the values of ReservationKKIdle will be set to zero such that a QoS reservation associated with the signaling data flow will remain open regardless of the state of the connection between access terminal and the first access network. However for data flows on which media data is transported the values of ReservationKKIdle will be set to non zero such that in a conventional access terminal a QoS reservation associated with the media data flow will be closed automatically when the connection between access terminal and the first access network goes down.

In accordance with this disclosure instead of automatically closing the QoS reservation when the ReservationKKIdle attribute for a given data flow included in the VoIP call has a nonzero value in the case of a hard handoff QoS engine maintains the open QoS reservation for the media data flow having a nonzero ReservationKKIdle attribute for a predetermined period of time to enable the new connection to be established. The operation of maintaining the open QoS reservations for the VoIP call is described in greater detail in below. QoS engine continues to analyze QoS reservations until the QoS reservations for all of the media data flows included in the VoIP flow are maintained. In this way QoS engine keeps the QoS reservations open during the hard handoff and does not send any notification to VoIP application regarding the closed connection between access terminal and the first access network. Therefore VoIP application will not drop the VoIP call during the hard handoff and need not instead try a circuit switched voice call over the 1x standard.

When the closed connection is not due to a hard handoff QoS engine closes open QoS reservations associated with the media data flows i.e. ReservationKKIdle attributes with nonzero values included in the VoIP call. QoS engine then notifies VoIP application that the QoS for each of the media data flows is suspended. QoS engine continues to analyze QoS reservations until QoS for all of the media data flows included in the VoIP flow are suspended. VoIP application may then drop the VoIP call. As described above a VoIP call typically only has one media data flow such that VoIP application may drop the VoIP call immediately in response to the notification from QoS engine .

As an alternative example a video telephony session typically has two media flows a video data flow and an audio flow. In one case such that a communication application may not drop the video telephony session until after receiving notification that QoS for both the video data flow and the audio flow is suspended. In another case a communication application may drop the video telephony session after receiving notification that QoS for either the video data flow or the audio flow is suspended. Whether the video telephony session is dropped after the loss of one or both of the media flows may depend on a user setting. Some users may want the video telephony session to stop if either the video or audio is lost other users may want the video telephony session to continue as only an audio call or only video even if the other media flow is lost.

Once QoS engine determines that the closed connection for the VoIP call is due to a hard handoff as described in reference to QoS reservation controller starts handoff connection timer . Handoff connection timer may be set to run for a predetermined period of time such as a typical amount of time necessary to perform a hard handoff between a first access network and a second access network in an EVDO RevA communication network.

After starting handoff connection timer QoS reservation controller retrieves a QoS reservation associated with a data flow included in the VoIP call from reservation list . Reservation list may be maintained by QoS engine to store a list of QoS reservations associated with the data flows included in a VoIP call with access terminal . Upon retrieving QoS reservation for the given data flow QoS reservation controller determines whether the QoS reservation is open and if open whether the ReservationKKIdle attribute associated with the data flow has a nonzero value i.e. the data flow comprises a media data flow . QoS reservation controller then maintains the open QoS reservation within reservation list for the media data flow included in the VoIP call. QoS reservation controller also adds the QoS reservation for that media data flow to handoff reservation list . Handoff reservation list may also be maintained by QoS engine to temporarily store a list of open QoS reservations associated with media data flows included in a VoIP call during a hard handoff. QoS reservation controller then returns to reservation list and continues to retrieve and analyze the remaining QoS reservations within reservation list .

QoS reservation controller simultaneously monitors the establishment of the new connection between access terminal and the second access network in relation to handoff connection timer . When the new connection is established while handoff connection timer is still running QoS reservation controller stops handoff connection timer . QoS reservation controller then removes all the QoS reservations from handoff reservation list because these QoS reservations are no longer waiting for the connection to be established between access terminal and the second access network. In this way QoS engine keeps the QoS reservations within reservation list open during the hard handoff and does not send any notification to VoIP application regarding the closed connection between access terminal and the first access network. Therefore VoIP application will not drop the VoIP call during the hard handoff.

When handoff connection timer expires before the new connection can be established QoS reservation controller retrieves a QoS reservation associated with a given media data flow included in the VoIP call from handoff reservation list . QoS reservation controller closes the open QoS reservation within reservation list for the media data flow removes the open QoS reservation from handoff reservation list and notifies VoIP application that the QoS for that media data flow is suspended. QoS reservation controller then returns to handoff reservation list and continues to retrieve the remaining QoS reservations from handoff reservation list close the QoS reservations within reservation list and remove the QoS reservation from handoff reservation list until handoff reservation list is empty. VoIP application may then drop the VoIP call.

Furthermore when Qos engine determines that the closed connection is not due to a hard handoff as described above QoS reservation controller does not start handoff connection timer and does not maintain open QoS reservations for media data flows. Instead QoS reservation controller retrieves a QoS reservation associated with a data flow included in the VoIP call from reservation list . QoS reservation controller then determines whether the QoS reservation is open and if open whether the ReservationKKIdle attribute associated with the data flow has a nonzero value i.e. the data flow comprises a media data flow . QoS reservation controller closes the open QoS reservation for the media data flow included in the VoIP call and notifies VoIP application that the QoS for that media data flow is suspended. QoS reservation controller then returns to reservation list and continues to retrieve and close the remaining QoS reservations within reservation list . VoIP application may then drop the VoIP call.

As illustrated in connection module implemented in EVDO air interface layer within access terminal receives a connection close message in response to a closed connection between access terminal and a first access network during a VoIP call with access terminal over an EVDO communication network . QoS engine implemented in EVDO air interface layer then determines whether the closed connection is due to a hard handoff between the first access network and a second access network of access terminal . For example QoS engine may determine that the closed connection is due to a hard handoff when the connection close message is bundled or included with a TCA message.

If QoS engine determines that the closed connection is due to a hard handoff YES branch of then QoS reservation controller starts handoff connection timer . Once handoff connection timer is running access terminal may operate in accordance with described in more detail below. After starting handoff connection timer or if QoS engine determines that the closed connection is not due to a hard handoff NO branch of QoS reservation controller retrieves a QoS reservation associated with a data flow included in the VoIP call from reservation list .

QoS reservation controller then determines whether the QoS reservation associated with the data flow is open . If the QoS reservation is closed NO branch of and reservation list includes a next QoS reservation NO branch of QoS reservation controller retrieves the next QoS reservation associated with another data flow included in the VoIP call from reservation list . If the QoS reservation is closed NO branch of and reservation list does not include a next QoS reservation YES branch of QoS reservation controller stops analyzing the QoS reservations. As described above a VoIP call includes a signaling data flow and a media data flow associated with respective RLP flows. Therefore in some cases reservation list may only include two QoS reservations one for each data flow for any given VoIP call.

If the QoS reservation is open YES branch of QoS reservation controller determines whether the ReservationKKIdle attribute associated with the data flow included in the VoIP call has a nonzero value . ReservationKKIdle may be set to a zero value for a data flow that includes signaling traffic and set to a nonzero value for a data flow that includes media traffic. If the ReservationKKIdle attribute has a zero value YES branch of QoS reservation controller maintains the open QoS reservation within reservation list for the signaling data flow included in the VoIP call regardless of the state of the connection between access terminal and the first access network . QoS reservation controller then returns to reservation list . If reservation list includes a next QoS reservation NO branch of QoS reservation controller retrieves the next QoS reservation associated with another data flow included in the VoIP call from reservation list . If reservation list does not include a next QoS reservation YES branch of QoS reservation controller stops analyzing the QoS reservations.

If the ReservationKKIdle attribute has a nonzero value NO branch of and the closed connection was due to a hard handoff YES branch of QoS reservation controller maintains the open QoS reservation within reservation list for the media data flow . QoS reservation controller then adds the QoS reservation for that media data flow to handoff reservation list . In this way QoS reservation controller keeps the QoS reservation within reservation list open during the hard handoff and does not send any notification to VoIP application regarding the closed connection between access terminal and the first access network. Since VoIP application is unaware of the closed connection VoIP application will not drop the VoIP call during the hard handoff. QoS reservation controller then returns to reservation list . If reservation list includes a next QoS reservation NO branch of QoS reservation controller retrieves the next QoS reservation associated with another data flow included in the VoIP call from reservation list . If reservation list does not include a next QoS reservation YES branch of QoS reservation controller stops analyzing the QoS reservations.

If the ReservationKKIdle attribute has a nonzero value NO branch of but the closed connection was not due to a hard handoff NO branch of QoS reservation controller closes the open QoS reservation within reservation list for the data flow . QoS reservation controller then notifies VoIP application that the QoS for that data flow is suspended . QoS reservation controller then returns to reservation list . If reservation list includes a next QoS reservation NO branch of QoS reservation controller retrieves the next QoS reservation associated with another data flow included in the VoIP call from reservation list . If reservation list does not include a next QoS reservation YES branch of QoS reservation controller stops analyzing the QoS reservations. When QoS for all the media data flows included in the VoIP call are suspended the VoIP application drops the VoIP call. As described above a VoIP call typically only has one media data flow such that VoIP application drops the VoIP call immediately in response to the notification from QoS reservation controller that QoS for the single media data flow is suspended.

As illustrated in once QoS engine determines that the closed connection is due to a hard handoff and QoS reservation controller starts handoff connection timer QoS reservation controller maintains the open QoS reservations within reservation list for the data flows included in the VoIP call with ReservationKKIdle attributes equal to nonzero values. As illustrated in QoS reservation controller simultaneously monitors the establishment of a new connection between access terminal and the second access network in relation to handoff connection timer . QoS reservation controller determines whether the new connection e.g. traffic channel is open between access terminal and the second access network . If the new connection has been established YES branch of QoS reservation controller stops handoff connection timer . QoS reservation controller then removes all the QoS reservations from handoff reservation list because these QoS reservations are no longer waiting for the connection to be established between access terminal and the second access network.

If the new connection has not yet been established and so is not yet open NO branch of QoS reservation controller next determines whether handoff connection timer has expired . Handoff connection timer may be set to run for a predetermined period of time such as a typical amount of time necessary to perform a hard handoff between a first access network and a second access network in an EVDO communication network. If handoff connection timer has not expired NO branch of QoS reservation controller continues to monitor the status of the new connection and handoff connection timer .

If handoff connection timer has expired before the new connection could be established YES branch of QoS reservation controller retrieves a QoS reservation associated with a media data flow included in the VoIP call from handoff reservation list . QoS reservation controller closes the open QoS reservation within reservation list for the media data flow and removes the open QoS reservation from handoff reservation list . QoS reservation controller then notifies VoIP application that the QoS for that media data flow is suspended . QoS reservation controller then returns to handoff reservation list . If handoff reservation list is not empty NO branch of QoS reservation controller retrieves the next QoS reservation associated with another media data flow included in the VoIP call from handoff reservation list . If handoff reservation list is empty YES branch of QoS reservation controller has closed all of the QoS reservations within reservation list and has removed all of the QoS reservation from handoff reservation list . When QoS for all the media data flows included in the VoIP call are suspended the VoIP application drops the VoIP call. As described above a VoIP call typically only has one media data flow such that VoIP application drops the VoIP call immediately in response to the notification from QoS reservation controller that QoS for the single media data flow is suspended.

However if a closed connection does occur between access terminal and the first access network CC 1 and the connection close message is not bundled with a TCA message TCA 0 the open QoS reservations will leave the open QoS reservation state and enter the close QoS reservation state . Upon entering the close QoS reservation state the open QoS reservations are closed and VoIP application included in access terminal drops the VoIP call. If a closed connection does occur between access terminal and the first access network CC 1 and the connection close message is bundled with a TCA message TCA 1 the open QoS reservations will leave the open QoS reservation state and enter the maintain QoS reservation state .

The open QoS reservations will stay in the maintain QoS reservation state as long as handoff connection timer has not expired TE 0 and a new connection has not opened between access terminal and a second access network CO 0 . If handoff connection time expires TE 1 before the new connection can be established CO 0 the open QoS reservations will leave the maintain open QoS reservation state and enter the close QoS reservation state . Upon entering the close QoS reservation state the open QoS reservations are closed and VoIP application included in access terminal drops the VoIP call. If the new connection is established between access terminal and the second access network CO 1 either before handoff connection timer expires TE 0 or when handoff connection timer expires TE 1 the open QoS reservations will leave the maintain open QoS reservation state and reenter the open QoS reservation state . In this way the maintain open QoS reservation state keeps the QoS reservation open during the hard handoff and does not send any notification to VoIP application included in access terminal regarding the closed connection between access terminal and the first access network. Therefore VoIP application will not drop the VoIP call during the hard handoff.

The techniques of this disclosure are directed to maintaining minimum QoS communication sessions with a WCD over a data based communication network during a hard handoff between access networks for the WCD. More specifically the techniques determine whether a closed connection between the WCD and a first access network during a minimum QoS communication session is due to a hard handoff between the first access network and a second access network. In the case of a hard handoff the techniques maintain open QoS reservations associated with data flows included in the minimum QoS communication session for a predetermined period of time to enable a new connection to be established between the WCD and a second access network.

The techniques are able to differentiate between three different situations a closed connection in a successful hard handoff a closed connection in an unsuccessful hard handoff and a closed connection due to some other reason. Depending on which of these situations is occurring the techniques are able to make the appropriate decision of maintaining or dropping a minimum QoS communication session. For example a hard handoff is successful if a new connection is established between the WCD and the second access network before the predetermined period of time expires. In this case the techniques are able to maintain the minimum QoS communication session during the time after the original closed connections until the new connection is established. A few frames of the data flow may be lost but the minimum QoS communication session will remain up and the user will not experience a call drop. A hard handoff fails if the predetermined period of time expires before a new connection can be established between the WCD and the second access network. In that case the WCD drops the minimum QoS communication session. In addition if the closed connection is not due to a hard handoff the WCD drops the minimum QoS data communication session.

The techniques described herein may be especially useful when performing a VoIP call over an EVDO communication network and more preferably an EVDO RevA communication network. In that case the WCD comprises an access terminal in the EVDO communication network and the first and second access networks comprise EVDO access networks. The WCD may comprise any data enabled wireless device such as an EVDO phone an IP phone a soft phone a laptop with a wireless connection and a soft phone a PDA with a wireless connection and a soft phone or any other device incorporating wireless data communication capabilities.

The techniques described herein may be implemented in hardware software firmware or any combination thereof. If implemented in software the techniques may be realized at least in part by one or more stored or transmitted instructions or code on a computer readable medium of a computer program product. Computer readable media may include computer storage media communication media or both and may include any medium that facilitates transfer of a computer program from one place to another. A storage media may be any available media that can be accessed by a computer. A computer program product may include packaging materials.

By way of example and not limitation such computer readable media can comprise RAM such as synchronous dynamic random access memory SDRAM read only memory ROM non volatile random access memory NVRAM ROM electrically erasable programmable read only memory EEPROM EEPROM FLASH memory CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium that can be used to carry or store desired program code in the form of instructions or data structures and that can be accessed by a computer.

Also any connection is properly termed a computer readable medium. For example if the software is transmitted from a website server or other remote source using a coaxial cable fiber optic cable twisted pair digital subscriber line DSL or wireless technologies such as infrared radio and microwave then the coaxial cable fiber optic cable twisted pair DSL or wireless technologies such as infrared radio and microwave are included in the definition of medium. Disk and disc as used herein includes compact disc CD laser disc optical disc digital versatile disc DVD floppy disk and blu ray disc where disks usually reproduce data magnetically while discs reproduce data optically e.g. with lasers. Combinations of the above should also be included within the scope of computer readable media.

The code associated with a computer readable medium of a computer program product may be executed by a computer e.g. by one or more processors such as one or more digital signal processors DSPs general purpose microprocessors application specific integrated circuits ASICs field programmable logic arrays FPGAs or other equivalent integrated or discrete logic circuitry. In some aspects the functionality described herein may be provided within dedicated software modules or hardware modules configured for encoding and decoding or incorporated in a combined video encoder decoder CODEC .

Nevertheless various modifications may be made to the techniques described without departing from the scope of the following claims.

