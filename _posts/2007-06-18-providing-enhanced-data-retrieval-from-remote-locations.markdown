---

title: Providing enhanced data retrieval from remote locations
abstract: Techniques are described for providing client computing nodes with enhanced access to data from remote locations, such as by providing and using local capabilities specific to the remote locations. In at least some situations, the access of a client computing node to data from a remote location may be enhanced by automatically performing activities local to the client computing node that improve the efficiency of communications sent between the client computing node and the remote location. As one example, access to data from a remote service may be enhanced by locally performing activities specific to the remote service, such as by using information about the remote service's internal mechanisms to cause the desired data to be provided from internal storage devices of the remote service without passing through front-end or other intermediate devices of the remote service while traveling to the client computing node.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08903938&OS=08903938&RS=08903938
owner: Amazon Technologies, Inc.
number: 08903938
owner_city: Reno
owner_country: US
publication_date: 20070618
---
The following disclosure relates generally to providing client computing nodes with enhanced access to remote data.

As the use of the Internet and the World Wide Web Web has become widespread it is increasingly common for software applications to access and use services provided by remote computing systems such as via defined APIs application program interfaces . Such remote services may provide a variety of types of functionality and in some situations may be provided by third parties such as for a fee. One example of such remote services are Web services which allow heterogeneous applications and computers to interact and which may be defined and implemented using a variety of underlying protocols and techniques. For example some Web service implementations return data in XML extensible Markup Language format using HTTP HyperText Transport Protocol in response to a Web service invocation request specified as a URI Uniform Resource Identifier such as a URL Uniform Resource Locator that includes a specified operation and one or more query parameters. Such URI based invocation requests may for example be based on the use of XML over HTTP e.g. as part of the REpresentational State Transfer or REST distributed interaction model that focuses on resources . In other implementations additional underlying protocols are used for various purposes such as SOAP Simple Object Access Protocol for standard message exchange WSDL Web Services Description Language for description of service invocations and UDDI Universal Description Discovery and Integration service for discovery of available services.

In addition software applications may be executed and interact with remote services in various ways. For example data centers housing significant numbers of interconnected computing systems have become commonplace such as private data centers that are operated by and on behalf of a single organization as well as public data centers that are operated by entities as businesses. Some public data center operators provide network access power and secure installation facilities for hardware owned by various customers while other public data center operators provide full service facilities that also include hardware resources made available for use by their customers. However as the scale and scope of typical data centers has increased the task of provisioning administering and managing the physical computing resources has become increasingly complicated.

The advent of virtualization technologies for commodity hardware has provided a partial solution to the problem of managing large scale computing resources for many customers with diverse needs allowing various computing resources to be efficiently and securely shared between multiple customers. For example virtualization technologies such as those provided by VMWare XEN or User Mode Linux may allow a single physical computing machine to be shared among multiple users by providing each user with one or more virtual machines hosted by the single physical computing machine with each such virtual machine being a software simulation acting as a distinct logical computing system that provides users with the illusion that they are the sole operators and administrators of a given hardware computing resource while also providing application isolation and security among the various virtual machines. When a software application executing on a virtual machine hosted by a computing system in a data center sends a communication to a remote service external to the data center the communication typically passes through management software on the computing system and then multiple other devices before leaving the data center and traveling to the computing system providing the remote service.

Although Web services and other remote services allow various applications and computers to interact the current implementations and uses of Web services have various problems. For example due to the insecure nature communications over the Web if such a remote service provides confidential or otherwise restricted data and other functionality the remote service will typically use multiple front end computing devices to handle communications from remote clients in order to shield various back end devices that store the restricted data or otherwise provide the restricted functionality. Thus a request sent from a client to a remote service to for example obtain stored data will typically pass through multiple other devices of the remote service before reaching a storage device that holds the data and then the data sent in response will typically take the same or a similar path in traveling through multiple devices of the remote service before between sent back to the client over one or more networks. Unfortunately such request handling by the remote service consumes significant resources e.g. may necessitate expensive hardware setups to accommodate the communications such as by having one or more hardware load balancers that receive communications and then direct each communication to an appropriate one of multiple Web server devices to handle authentication and other pre processing activities for the communication and may significantly delay the receipt of requested data or other functionality by the client. Such problems with delay and use of resources may further be exacerbated if the client is a computing system within a data center as previously described in which communications to and from the computing system typically pass through multiple other devices of the data center before reaching an external network.

Techniques are described for providing client computing nodes with enhanced access to data from remote locations such as by providing and using local capabilities specific to the remote locations. In at least some embodiments the data is provided by remote network accessible services such as Web services or other services provided by third parties e.g. for a fee . The client computing nodes may in at least some embodiments be physical computing systems and or virtual machines that are each hosted on one or more physical computing systems. In at least some embodiments the access to remote data by a client computing node may be enhanced by automatically performing activities local to the client computing node that improve the efficiency of communications sent between the client computing node and the remote location. As one example a node manager system that manages a local client computing node may enhance access to data provided by a remote service by performing activities specific to the remote service that improve data access such as by using information about the remote service s internal mechanisms e.g. confidential or otherwise restricted information that is accessible only to authorized requesters to cause the desired data to be provided from internal storage devices of the remote service without passing through front end or other intermediate devices of the remote service while traveling to the client computing node. In this manner the remote service may use fewer resources in providing a given level of capabilities and the data may be obtained from the remote service more efficiently. In at least some embodiments the described techniques are automatically performed by an embodiment of a Node Manager system as described in greater detail below.

After the communication passes through the network it is forwarded to the remote network accessible service . In this example the service includes a hardware load balancer which receives incoming communications and directs them to an appropriate one of multiple Web server devices with communication being forwarded to Web server in this example. In this example the remote service is a Web service and the initiated communication may be an HTTP based SOAP or REST communication that invokes an API provided by the remote service. In other embodiments other types of remote services and or communications may be used. Furthermore in embodiments with types of remote services other than Web services types of servers other than Web servers may be used to process communications and or hardware load balancers may not be used.

As illustrated in detail for Web server each of the Web servers in this example may perform various activities as part of service s response to the communication and provision of corresponding data as appropriate. In this example Web server includes a component to perform authentication of the incoming communication such as to protect access to restricted data and may have one or more other components to provide other capabilities specific to the service . The authentication of the incoming communication may have various forms such as to verify that the communication is from a particular client e.g. based on use of a predefined client identifier and or of secret information specific to that client such as from a prior registration by the client or other prior interactions with the client to verify that the communication contents have not been changed after it is created e.g. based on an included message digest using a cryptographic hash or other form of digital signature or based on use of a checksum etc. The other service specific capabilities from components may also have various forms. In this example the service provides clients with access to various types of stored data e.g. data previously stored by the clients . Accordingly if the communication is a request for a particular group of stored data the service specific capabilities may include interacting with a data storage manager to determine on which of multiple data storage servers that the requested data is stored and then interacting with a particular data storage server in this example server to retrieve the requested data.

The Web server that is handling the received communication then responds to the communication as appropriate which in this example includes sending the requested stored data to the client . In particular the Web server sends one or more response communications to the client that travel the same or a similar path in reverse as did communication when traveling to the remote service from the client. In this example a response communication is sent to the hardware load balancer which forwards the communication to the network . The communication is then forwarded to the optional devices if present which forward the communication to the client . In this manner the client may obtain requested data from a remote service. It will be appreciated that the example in is greatly simplified for the sake of understanding and that large numbers of clients may be simultaneously accessing large numbers of remote services via numerous network devices and other intermediate devices.

In this example a software program not shown executing on client node initiates a communication to request desired data from a remote network accessible service . Remote service is a service from which data may be obtained in a manner similar to or identical to that of service of and the communication is to obtain the data from the remote service in a manner similar to that of communication of . The client node is unaware of the presence of node manager in this example and thus communication may be identical or near identical to that of communication of e.g. if sent by the same client to the same remote service to obtain the same requested data . However in this example the communication is received by the node manager before leaving the computing system . Moreover unlike the example in the node manager in this example provides additional capabilities rather than merely forwarding on the communication . In particular the node manager includes a software component that is specific to remote service so that the component may be used by the node manager to enhance access to the data from the remote service e.g. by accessing restricted information from service or otherwise using such restricted information such as information related to internal operations of service by performing some activities that would otherwise be performed by the remote service etc. . In this example the software component includes one or more sub components to provide capabilities specific to the remote service e.g. to access restricted information and or restricted internal devices of the remote service and optionally includes a sub component to provide authentication related capabilities for the remote service.

The sub component s in this example embodiment provide some or all of the capabilities of component s of including capabilities to interact with the internal data storage manager of service to determine which of the internal data storage servers of service store desired data and or to interact with those one or more data storage servers to obtain that stored desired data. Thus the node manager system uses the sub component to interact with internal systems of the remote service to obtain requested data in an enhanced manner for the client computing node. In particular after communication is authenticated if sub component is present and used one of the other sub components initiates a new communication to obtain requested data from the remote service . In particular rather than using the default interface of remote service in which new incoming communications are directed to a hardware load balancer for forwarding to one of the Web servers the communication from the node manager is directed to an internal data storage manager system of the remote service e.g. using a separate interface that is not publicly exposed and or that is available only to authorized requesters or by otherwise using restricted information regarding the location of and or mechanism for accessing that system . In a manner similar to the communication optionally passes through one or more devices and if so is forwarded by them to a network . However the communication is forwarded by the network directly to the data storage manager system resulting in interactions to obtain information on which of multiple data storage servers that the requested data is stored. The information about the data storage server that stores the requested data in this example data storage server is then forwarded back to the node manager optionally passing through the device s and if so is forwarded by them to the node manager. In this manner one or more internal devices of the service are bypassed for these communications such as the Web servers and hardware load balancer that would otherwise be intermediate devices along a longer transmission path for the communications if the default interface for interacting with the service was used.

It will be appreciated that new communication generated by node manager in this example may be based on received communication in various ways such as to create communication by altering communication or to otherwise include information from communication in communication e.g. information specific to client node such as a client identifier corresponding to a user or other client on whose behalf the executing software initiates the communication information specific to the request such as an identifier corresponding to the desired information etc. . In addition new communication may include additional information that is not included in received communication such as information specific to node manager so that the new communication will be treated by the remote service as coming from an authorized requester.

After the node manager receives the information from the remote service indicating that data storage server stores the desired data the node manager initiates an additional communication that is directed to the particular data storage server that stores the desired data. The communication optionally passes through the device s and if so is forwarded to the network . The communication is then forwarded to data storage server resulting in interactions to obtain the stored requested data. The obtained data is then forwarded back to the node manager optionally passing through the device s and if so is forwarded by them to the node manager. After receiving the requested stored data the node manager sends communication to client node to provide the data to the client node. In at least some embodiments communication will be sent to client node by node manager as if the communication arrived from the remote service in response to the initial communication without any indication of node manager being involved. Thus as previously noted client node may be unaware of some or all of the activities of the node manager including that the node manager alters communication and or replaces communication with one or more communications from the node manager . Furthermore one or more internal devices of the service are again bypassed for these communications such as the Web servers and hardware load balancer devices.

While not illustrated here in some embodiments the access of client node to data from remote services or other remote locations may be further enhanced in additional ways. For example node manager may track or have access to information about each of the virtual machine nodes and and about communications between the virtual machine nodes and remote services and may use that information in various ways. As one example in some embodiments the node manager system may maintain a local cache of data from at least some services or may otherwise use such a cache maintained by someone else to provide various functionality. In the example embodiment of the computing system optionally includes various locally cached data on storage under the control of the node manager although in other embodiments some or all of such locally cached data may instead be stored on one or more other devices proximate to computing system . When such cached data is available the node manager may use the cached data to enhance access of the client nodes and in various ways. For example if one of the client nodes requests data from service or other remote service not shown after the node manager intercepts the outgoing communication to request the data the node manager may in at least some situations first check if the requested data is available in a local cache. If so the node manager system may in at least some embodiments retrieve a copy of the requested data from the local cache e.g. if the cached data is sufficiently recent or satisfies one or more other specified criteria and provide the retrieved data to the client node such as in response to the intercepted communication. The node manager may optionally use such cached data without forwarding the intercepted communication to the remote service e.g. in a manner transparent to the client node or in other embodiments may allow the communication to the remote service to proceed e.g. to verify that the data later received from the remote service is the same as the cached data and if not to send an additional communication to the client node with the updated data received from the remote service . In addition the information that is cached may be selected and maintained in various ways in various embodiments. For example the node manager may cache at least some types of data provided by at least some remote services to one of the client nodes and so that the cached data is available if later requested by that same client node again or by another client node. Furthermore in embodiments in which a remote service stores data that is provided to it by client nodes the node manager system may cache data that is being sent by a client node to the remote service for storage to allow more rapid retrieval and less load on the remote service if that cached copy of data is still available e.g. has not been replaced by other data using standard cache replacement techniques when the client node later requests the stored data from the remote service.

Furthermore in some embodiments the access of client node to data from remote services or other remote locations may be further enhanced by the node manager taking action to pre fetch some information from a remote service so that later access to desired data from the remote service may be performed more efficiently and or rapidly using the pre fetched information. As one example when retrieving a particular group of data stored at a remote location in some embodiments a data locator reference for that group of data may be retrieved which may provide a handle or pointer or other reference indicating where that group of data is stored or that may otherwise include information usable to directly access that group of data. When pre fetching such information the node manager may interact with remote service in a manner similar to that of other default client requests e.g. by sending requests that are handled by the hardware load balancer and a Web server or may instead use a specialized interface or other specialized access mechanism such as a restricted access mechanism available only to authorized requesters. In addition information from a remote service may be pre fetched at various times and for various reasons. In some embodiments the pre fetching of information from a remote service for data by the node manager system may be performed periodically for some or all client nodes and some or all data that may be requested by those client nodes. In other embodiments the pre fetching of information from a remote service for a particular group of data may be performed by the node manager system when there is a sufficiently likelihood that one or more client nodes may request that particular group of data such as after a client node has requested a related group of data e.g. after a client node has requested a first Web page to pre fetch one or more other Web pages to which the first Web page includes links or after a client node has requested a first block of data previously stored by the client node to pre fetch one or more successive blocks of data that were previously stored by the client node together with the first block . Furthermore in some embodiments information may be pre fetched from a remote service for a particular group of data when the node manager intercepts a communication from a client node to the remote service for that group of data or when the node manager otherwise receives an indication that the client node will request that group of data in the near future.

In addition communications from client node to a remote service may be further enhanced in additional ways. For example various types of information about virtual machine node may be used by the node manager for various purposes such as when authenticating a communication or when performing data retrieval. Such client specific information may include for example information about one or more software programs that issued the communication an identify of a user or other client associated with the virtual machine node information about previous data storage activities or other activities by the client etc. Moreover in at least some embodiments the node manager system may enhance access to data from remote services for only certain communications from virtual machine nodes. For example the node manager may further have a second service component not shown that is specific to a second remote service but may not have a service specific component for a third remote service not shown . If so the node manager may use that second service component to enhance access to data from that second remote service for at least some communications from virtual machine nodes but may merely forward communications between virtual machine nodes and that third remote service without providing any enhanced access to data from that third remote service. In addition only certain types of communications to remote services may be enhanced such as to enhance communications for specific types of functionality e.g. requests to store data and or to retrieve stored data for remote service but not for other types of functionality e.g. to access account information or other administrative information for a client .

Thus in the example of due to the service specific capabilities the node manager is able to obtain the data from remote service that is requested by client node but in an enhanced manner that does not involve any interactions with the hardware load balancer or the multiple Web servers of the remote service. Accordingly in this example the return path for the data being returned is shorter than would otherwise be the case such as to allow the data to be received more rapidly by the client node . Furthermore those parts of the remote service may have additional capacity to handle other requests via the standard default interface e.g. communication s from other computing systems that are forwarded to the hardware load balancer via the network or in some situations may be reduced or eliminated e.g. to reduce the number of Web server devices . While the return data path in this example was enhanced so as to be shorter the return data path may be enhanced in other manners in other embodiments. For example in some embodiments a node manager system may enhance at least some interactions with remote services so that data or another response being returned is cheaper faster or otherwise improved over the return data path that would otherwise be used e.g. based on the use of hardware with different costs or capabilities based on the use of communication links with different costs or capabilities etc. regardless of whether the return data path is shorter or longer in terms of the number of hops or other distance measure.

In the example of the enhanced access to the data of the remote service involved additional communications by the node manager relative to the communications from computing system in since the node manager first retrieved information about which data storage server held the desired data and then interacted with that data storage server to obtain the desired data. Such additional communications may be warranted in certain situations such as if the monetary or other costs e.g. time costs of such additional communications are outweighed by the benefits from the enhanced access. In other embodiments such additional communications by the node manager may not be used such as if desired data from a particular remote service may be obtained with a single communication to the remote service e.g. via a standard interface for the remote service or via a single communication to one or more internal parts of the remote service . For example with respect to example remote service the node manager system could send a single message to one of the Web servers whether via the hardware load balancer or instead directly such as if the service specific capabilities include software based load balancing capabilities to obtain and provide the desired data. Alternatively if the data storage manager was instead able to retrieve and provide desired data rather than providing information about where that data is located a single communication from the node manager could instead be sent to the data storage manager whether via the hardware load balancer and or a Web server or instead directly to obtain and provide the desired data. In some embodiments other communications than those illustrated may occur such as to perform pre fetching activities as previously noted or if the performance of authentication activities by node manager using authentication sub component involves one or more communications to the remote service such as to coordinate the authentication activities with one of the Web servers or for other purposes.

It will be appreciated that the example of is simplified for the sake of explanation and that the described techniques may be used in a variety of other situations. For example while the node manager provides the data access enhancement capabilities in in other embodiments other systems or devices may provide similar functionality. For example one or more of the devices in may provide similar functionality for client computing system regardless of whether any virtual machine nodes are present on the computing system . Furthermore in other embodiments the node manager system and or client computing node may have other forms. For example the node manager system may provide an environment in which other software programs may execute e.g. an emulation environment an interpreter environment such as a Java Virtual Machine environment etc. and the client computing node may be a software program executing within the node manager system environment.

In addition various additional types of functionality may be provided as part of enhancing access to data from remote services in at least some embodiments. For example as previously noted in at least some embodiments and situations a node manager system may be able to perform all activities needed to respond to a request from a managed computing node for data from a remote service without interacting with the remote service and if so may directly generate and provide a response to the managed computing node. As one example in some embodiments one or more node manager systems may maintain a local cache or other store of information received from one or more remote services and may respond to requests for particular groups of stored data from a remote service with locally stored copies of the data e.g. if the locally stored data is sufficiently recent and or satisfies other criteria .

A node manager system may intercept or otherwise receive copies of communications sent from managed computing nodes in various ways in various embodiments. As previously noted in some embodiments a physical architecture of interconnections will cause such communications to be directed through the node manager system such as if the node manager system is part of a hypervisor for a client virtual machine node or if the node manager system is part of a proxy system managing communications from a client computing system. In addition the node manager system may perform activities such as causing a domain name specified by a client node to be resolved to a network address e.g. an IP address in a specialized manner such as to select a network address corresponding to the node manager system and thus cause the client node to communicate with the node manager system while the client node believes that the node manager system is actually an intended remote service. Furthermore when generating one or more communications to a remote service on behalf of a managed computing node the node manager system may further in some embodiments consider various options about how the remote service may provide requested data and attempt to select an optimal or otherwise preferred option as one example if the remote service has multiple alternative computing systems that may provide a particular type of requested functionality the node manager system may attempt to select the remote service computing system that is most proximate e.g. in a geographical sense and or logical network sense and or that currently has the most capacity e.g. by performing software based load balancing .

As previously noted in at least some embodiments the node manager system may perform its activities to enhance access for a managed computing node to data from a remote service without awareness and or acquiescence of the managed computing node while in other embodiments such awareness and or acquiescence of the managed computing node may be present. Similarly while in at least some embodiments the node manager system may interact with a remote service on behalf of a managed computing node in such a manner that the remote service is aware of and or acquiesces to the activities of the node manager system e.g. with the node manager system acting as an authorized requester that has increased privileges relative to others such as the managed computing node in other embodiments the remote service may not be aware of and or acquiesce to the node manager system interactions being performed by other than the managed computing node. Regardless of the awareness or acquiescence of the managed computing node and or remote service the node manager system may in at least some embodiments further perform its activities and interactions with the managed computing node and or remote service in such a manner as to satisfy any established parameters for interactions between the managed computing node and remote service e.g. to satisfy any communication volume constraints communication timing constraints communication quality constraints etc. .

Furthermore in some embodiments the node manager system may enhance access only to data from certain remote services such as remote services provided by the same entity as the entity who operates the node manager system remote services that have a predefined affiliation with the node manager system remote services that provide service specific components and or interfaces to enable the node manager to provide the enhanced access to the data of the remote service etc.

Thus the described techniques for a node manager system to enhance access by a managed computing node to data from a remote service may provide a variety of benefits including benefits to the managed computing nodes to the remote service and or to the node manager system. For example by enabling a node manager system to perform at least some activities specific to a remote service the remote service may in some embodiments and situations obtain benefits equivalent to having a distributed or decentralized service but without having to provide and maintain the computing systems and related software on which the node manager systems operate. In addition with respect to managed computing nodes and node manager systems the operation of the node manager systems may in some embodiments and situations enable faster communications and or less communications. For example if a node manager system maintains a local data cache and uses copies of data from the cache to respond to requests for data from client nodes the amount of network traffic to a remote service and the load on the hardware resources of the remote service may be significantly diminished and the speed of response to the client node may be significantly enhanced. Pre fetching at least some information from a remote service may similarly diminish the load on the hardware resources of the remote service as well as enhance the speed of response to the client node when the data is requested.

In addition while not illustrated in in at least some embodiments computing systems and or may be part of a group of related physical computing systems such as multiple computing systems that are part of a program execution service for executing multiple programs on behalf of multiple users of the service. Such a program execution service may use multiple computing systems on multiple physical networks e.g. multiple physical computing systems and networks within a data center in order to execute third party customers programs including multiple virtual machine nodes on at least some of the computing systems that are each able to execute one or more programs for a customer. In such embodiments customers may provide programs to be executed to the execution service and may reserve execution time and other resources on physical or virtual hardware facilities provided by the execution service. In addition customers may define virtual networks that will be used by the program execution service so as to transparently provide computing nodes of the virtual network with the appearance of operating on a dedicated physical network. Additional details related to the operation of example embodiments of a program execution service with which the described techniques may be used are available in U.S. application Ser. No. 11 394 595 filed Mar. 31 2006 and entitled Managing Communications Between Computing Nodes in U.S. application Ser. No. 11 395 463 filed Mar. 31 2006 and entitled Managing Execution of Programs by Multiple Computing Systems and in U.S. application Ser. No. 11 692 038 filed Mar. 27 2007 and entitled Configuring Intercommunications Between Computing Nodes each of which is incorporated herein by reference in its entirety.

The computing systems and are connected to one another via an internal network which in this example embodiment includes various internal networking devices e.g. routers . In addition various networking devices and optionally may be used to connect the computing systems to the internal network. For example networking devices and may each be a router or a bridge and optional networking device may be a switch or a hub. In the illustrated example the networking device provides a gateway between the network and host computing systems and and the optional networking device may operate to join host computing systems and onto a single physical network. A variety of other networking devices may similarly be present but are not shown for the sake of simplicity. Thus the network may be an interconnection network that joins multiple disparate physical networks within the data center and provides access in this example to external computing systems via an external network . In a typical arrangement data center may include hundreds or thousands of host computing systems such as those illustrated here organized into a large number of distinct physical networks. The external computing systems may also provide various functionality including providing various remote services not shown that are available to the computing systems of the data center.

Host computing system is shown in additional detail relative to the other computing systems for the purpose of illustration and includes a CPU various I O components storage and memory . Particular I O components are not shown but may include for example a display network connection computer readable media drive and other I O devices e.g. a mouse keyboard etc. . The host computing system functions to host one or more virtual machines in memory such as to execute programs on behalf of various customers. A Node Manager system is also executing in the memory to manage operations of the virtual machines . In addition in the illustrated embodiment the Node Manager system operates to provide the virtual machines with enhanced access to data from remote network accessible services in a manner similar to that discussed in greater detail elsewhere. In this example the Node Manager system includes various service specific components for use in interacting with remote services A N not shown such as remote services provided by the other computing systems .

As previously discussed in at least some embodiments the Node Manager systems may enhance access to data from remote services by directly interacting with internal devices of the remote services in at least some situations and thus bypassing other internal devices of the remote services that would otherwise by default be involved in those interactions. Furthermore in at least some embodiments the Node Manager systems may enhance access to data from remote services by causing outgoing communications from the data center and or incoming communications to the data center to bypass at least some devices internal to the data center. For example a typical communication between host computing system and one of the other computing systems may follow path through the internal network passing through or otherwise involving several internal networking devices . The multiple networking devices may be used for various purposes such as load balancing to provide resolution of an internally used network address for host computing system to a different network address that is externally exposed for the host computing system etc. In some embodiments the Node Manager systems may further have access to information specific to the data center or other group of related computing systems that the Node Manager systems may use to enhance at least some communications between internal managed computing nodes and external remote services. In particular in this example Node Manager system may cause one or more communications between host computing system and one of the other computing systems to follow an alternative shorter path through the internal network such as to pass through or otherwise involve only a single internal networking device . The shorter path may be enabled in various ways such as by the Node Manager system providing the remote service with a network address for the Node Manager system or managed host computing node that will cause an incoming communication to bypass one or more of the intermediate internal devices of the data center.

The other host computing systems may each be similar to that of host computing system such as by each including one or more virtual machines not shown and a Data Manager system not shown to manage operations of those virtual machines. In addition this example embodiment includes multiple computing systems that do not host virtual machines and a separate computing device that acts as Node Manager system to similarly provide those computing systems with enhanced access to remote network accessible services.

It will be appreciated that computing systems and and networking devices and are merely illustrative and are not intended to limit the scope of embodiments of the present disclosure. For example computing system may be connected to other devices that are not illustrated including through one or more other networks external to the data center such as the Internet or via the Web. More generally a computing node or other computing system may comprise any combination of hardware or software that can interact and perform the described types of functionality including without limitation desktop or other computers database servers network storage devices and other network devices PDAs cellphones wireless phones pagers electronic organizers Internet appliances television based systems e.g. using set top boxes and or personal digital video recorders and various other consumer products that include appropriate intercommunication capabilities. In addition the functionality provided by the illustrated components and systems may in some embodiments be combined in fewer components or distributed in additional components. Similarly in some embodiments the functionality of some of the illustrated components may not be provided and or other additional functionality may be available.

It will also be appreciated that while various items are illustrated as being stored in memory or on storage while being used these items or portions of them can be transferred between memory and other storage devices for purposes of memory management and data integrity. Alternatively in other embodiments some or all of the software components and or systems may execute in memory on another device and communicate with the illustrated computing system via inter computer communication. Some or all of the components systems and data structures may also be stored e.g. as software instructions or structured data on a computer readable medium such as a hard disk a memory a network or a portable media article to be read by an appropriate drive or via an appropriate connection. The systems components and data structures may also be transmitted as generated data signals e.g. as part of a carrier wave or other analog or digital propagated signal on a variety of computer readable transmission mediums including wireless based and wired cable based mediums and can take a variety of forms e.g. as part of a single or multiplexed analog signal or as multiple discrete digital packets or frames . Such computer program products may also take other forms in other embodiments. Accordingly embodiments of the present disclosure may be practiced with other computer system configurations.

The illustrated embodiment of the routine begins at block where it receives an outgoing communication an incoming communication or configuration information. In this embodiment an outgoing communication is a communication sent by a computing node managed by the routine such as a virtual machine executing on a managed host computing system. An incoming communication is a communication sent by an external computing system to a managed computing node or the node manager system. Configuration information includes information that may be used by the routine to provide managed local client nodes with enhanced access to data from remote services such as information for a remote service to use in providing enhanced access for that remote service e.g. a software component that when executed provides at least some capabilities specific to the remote service or configuration information regarding what types of communications to which remote services from which managed nodes are to be handled by the routine. The communications and or configuration information may be received in various ways such as if the node manager routine is part of a component through which communications to and or from the managed computing nodes pass or if the node manager routine may otherwise receive and optionally modify or otherwise manipulate such communications.

In block the routine determines the type of communication or information received and continues to block if configuration information is received. In block the routine stores the received configuration information for later use.

If it is instead determined in block that an incoming message or other communication has been received either for the Node Manager or for one or more managed computing nodes the routine continues to block to determine if the communication is for the Node Manager routine. Such incoming communications for managed computing nodes or the Node Manager routine may include a variety of types of communications including communications that are unrelated to accessing data from remote services. If it is determined in block that the communication is for the Node Manager routine the routine continues to block to process the received communication e.g. to store the communication for later use by an operator user who maintains the Node Manager and if not the routine continues to block to determine the one or more destination managed computing nodes for the communication e.g. based on addressing information for the communication such as in a packet header that includes a source and destination address . As described in greater detail with respect to block communications that are received by the routine as part of interacting with remote services when providing enhanced access to data from those remote services are handled elsewhere such as with respect to blocks and . In addition while the illustrated embodiment of the routine does not show activities involved in pre fetching information from remote services in some embodiments those activities may be performed and the resulting information may be received in block and stored for later use. After block the routine continues to block to forward the received communication to the determined managed computing node s . Forwarding the communication may include sending or otherwise transmitting it onto a physical network e.g. by providing the communication to a network driver or interface to be transmitted via a network interface device if a destination managed computing node is part of a computing system distinct from the computing system executing the routine or may include storing the communication in an appropriate location in memory if a destination managed computing node is a virtual machine node on the same computing system as the computing system executing the routine.

If it is instead determined in block that an outgoing communication has been received from a managed computing node the routine continues to block to determine whether the outgoing communication is to a target remote service for which the routine may provide enhanced data access and whether the outgoing communication is of a type for which the routine may provide enhanced data access such as to request one or more specified types of data from the remote service. If not the routine continues to block to forward the received communication to the indicated destination s . Otherwise the routine continues to block to determine whether and how to enhance access of the managed computing node to the data of the remote service for the outgoing communication such as based on previously received configuration information specific to the remote service and or to the managed computing node. In block the routine then determines whether enhanced data access is to be provided and if not continues to block .

Otherwise if enhanced data access is to be provided for a communication that requests particular data the routine continues to provide that enhanced data access with respect to blocks . In particular in block the routine determines whether the requested data is locally cached and if so continues to block to retrieve that locally cached data copy and to prepare a response to the managed computing node that includes the retrieved data. In other embodiments data may not be locally cached and or there may be alternative remote locations from which the routine may elect to retrieve a copy of the requested data rather than from the remote service. If it is instead determined in block that locally cached data is not available the routine continues to block to determine whether one or more data locator references for the requested data have been pre fetched and if so continues to block to use the pre fetched data locator s to directly retrieve the requested data from one or more internal storage devices of the remote service. In other embodiments such pre fetching may not be performed or may be performed in ways other than to use data locator references. Furthermore while the illustrated example of the routine does not show the performance of the pre fetching activities such activities may be done at various times as previously described including in some embodiments after a corresponding outgoing communication is received in block .

In the illustrated embodiment if a corresponding data locator reference was not pre fetched the routine continues instead to block to determine whether to directly access internal storage or other devices of the remote service to obtain the requested data in such a manner as to bypass one or more other devices of the remote service that would otherwise be involved in such data retrieval. Such direct access may be performed in various ways such as based on restricted information about internal mechanisms of the remote service and or on use of a restricted interface to the remote service that is not publicly available and in some embodiments such direct access may not be used. If so the routine continues to block to identify one or more internal storage devices of the remote service that have the requested data and in block sends one or more communications directly to the identified internal storage device s for them to respond with the requested data. In some embodiments information may further be provided in the sent communications to enable the internal storage device s to respond in a manner that causes one or more response communications to bypass one or more other internal devices of the remote service and or one or more computing devices that are part of a group associated with the computing system executing the routine e.g. one or more computing devices internal to a data center in which the computing system executing the routine is located . Otherwise if it is determined in block that direct access is not to be performed the routine continues to block to send a communication to an interface of the remote service to respond with the requested data with the communication sent in such a manner as to cause the remote service to bypass one or more other internal devices of the remote service and or one or more computing devices associated with the computing system executing the routine when providing one or more response communications e.g. by sending the communication to a default interface of the remote service and providing information specific to how the response communications are to be performed by sending the communication to a restricted private interface of the remote service and or by invoking restricted functionality etc. .

After blocks or the routine continues to block to receive one or more response communications from the remote service that include the requested data. After receiving the requested data in block or directly retrieving the requested data in block the routine continues to block to prepare a response message for the managed computing node to the received outgoing communication such as to forward one or more of the responses received in block .

After blocks or the routine continues to block to send the prepared response to the managed computing node. After blocks or the routine continues to block to optionally perform one or more additional operations such as to initiate pre fetching of data locator references for one or more groups of data from one or more remote services or to reflect housekeeping activities or other activities that are not related to providing enhanced access to remote services. The routine then continues to block to determine whether to continue processing received communications and configuration information. If so the routine returns to block and if not continues to block and ends.

Those skilled in the art will also appreciate that in some embodiments the functionality provided by the routines discussed above may be provided in alternative ways such as being split among more routines or consolidated into fewer routines. Similarly in some embodiments illustrated routines may provide more or less functionality than is described such as when other illustrated routines instead lack or include such functionality respectively or when the amount of functionality that is provided is altered. In addition while various operations may be illustrated as being performed in a particular manner e.g. in serial or in parallel and or in a particular order those skilled in the art will appreciate that in other embodiments the operations may be performed in other orders and in other manners. Those skilled in the art will also appreciate that the data structures discussed above may be structured in different manners such as by having a single data structure split into multiple data structures or by having multiple data structures consolidated into a single data structure. Similarly in some embodiments illustrated data structures may store more or less information than is described such as when other illustrated data structures instead lack or include such information respectively or when the amount or types of information that is stored is altered.

From the foregoing it will be appreciated that although specific embodiments have been described herein for purposes of illustration various modifications may be made without deviating from the spirit and scope of the invention. Accordingly the invention is not limited except as by the appended claims and the elements recited therein. In addition while certain aspects of the invention are presented below in certain claim forms the inventors contemplate the various aspects of the invention in any available claim form. For example while only some aspects of the invention may currently be recited as being embodied in a computer readable medium other aspects may likewise be so embodied.

