---

title: Visualization of reputation ratings
abstract: In one embodiment, a system and method is illustrated including receiving a feedback request identifying a particular user, retrieving a feedback entry in response to the feedback request, the feedback entry containing a first term, building a scoring model based, in part, upon a term frequency count denoting a frequency with which the first term appears in a searchable data structure, mapping the first term to a graphical illustration based upon a second term associated with the graphical illustration such that the graphical illustration may be used to represent the second term, and generating a feedback page containing the first term and the graphical illustration. The method may include assigning a value to the first term so as to identify the first term, assigning the first term to the searchable data structure, and extracting the first term from the searchable data structure based, in part, upon an extraction rule.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08977631&OS=08977631&RS=08977631
owner: eBay Inc.
number: 08977631
owner_city: San Jose
owner_country: US
publication_date: 20070807
---
This is a non provisional patent application claiming priority under 35 USC 119 e to U.S. Provisional Patent Application No. 60 912 077 entitled PUBLICATION AND INFORMATION SYSTEM that was filed on Apr. 16 2007 and U.S. Provisional Patent Application No. 60 912 389 filed on Apr. 17 2007 entitled VISUALIZATION OF REPUTATION RATINGS both of which are incorporated by reference in their entirety.

The present application relates generally to the technical field of search algorithms and in one specific example to the use of a search algorithm to generate feedback.

Customer feedback for online transactions allows potential purchasers of goods or services to evaluate a seller of a good or service prior to engaging in a transaction with the seller. In some cases this feedback takes the form of statements regarding a particular seller a good or service or a category of good or service being sold. These statements may range form being very general to being very specific in terms of the information that they convey.

Systems and methods for the visualization of reputation ratings are provided. In some embodiments a method comprises receiving a feedback request identifying a particular user. A feedback entry may be retrieved in response to the feedback request. The feedback entry may contain a first term. A scoring model may be built based in part upon a term frequency count denoting a frequency with which the first term appears in a searchable data structure. The first term may be mapped to a graphical illustration based upon a second term associated with the graphical illustration such that the graphical illustration may be used to represent the second term. A feedback page may be generated containing the first term and the graphical illustration.

Example methods and systems to facilitate feedback ratings are described. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of example embodiments. It will be evident however to one skilled in the art that the present invention may be practiced without these specific details.

In some embodiments a system and method for providing feedback to a potential purchaser of a good or service is illustrated. This system and method may provide specific and unique feedback e.g. feedback ratings which in some cases is devoid of redundant cumulative or other types of information that do not contribute to educating a potential purchaser of a good or service about either the good or service or about the party selling the good or service. Further this system and method may provide a potential purchaser with one or more visual clues as to the quality of the purchasing experience that actual purchasers have had with the particular party selling the good or service and or the good or service actually sold. In one embodiment these visual clues may take the form of a graphical illustration e.g. an emoticon and or various textual highlights displayed on a feedback page in the form of for example a Hyper Text Markup Language HTML based webpage.

Providing generalized feedback ratings for marketplace participants often lacks the specificity to be informative for a user. Example marketplace feedback scores may give a quantitative measure of user trustworthiness but they may at the same time lack the requisite detail to be informative. This may be true even where the feedback may be categorized to include a plurality of positive negative and neutral comments. More to the point pure feedback scores even if categorized by positives negatives and neutrals may not differentiate between users.

While feedback may give a sense of how good or bad users are e.g. in terms of the quality of service or goods they provide it does not describe why the users may be good or bad. In some cases it may be difficult to tell what qualities differentiate one buyer from another and one seller from another. For example it may be important to know whether a particular market participant is good for example at communication packaging pricing or service. Further in some cases users e.g. those who have actually purchased a good or service from a seller may leave neutral or positive feedback to avoid confrontation or may put in information that relates to the quality of their business conduct. In some cases without a proper tool to differentiate the feedback potential customers may have to go through pages of text trying to glean particulars.

Some example embodiments may include providing potential purchasers with an ability to automatically extract representative textual phrases or tags from a marketplace feedback text. Once the feedback tags are extracted graphical representations in the form of for example emoticons may be attached to the feedback tags. Multiple feedback tags may have the same emoticons attached to them revealing the sentiments of users who have actually purchased a good or service from the seller.

In some embodiments technology may be implemented that includes the visualization of reputation ratings by parsing the feedback and analyzing its text for specific pattern frequencies. Text size may be used for example to show popularity of feedback by displaying more frequently used phrases in a bigger font. In other example embodiments other visual differentiation techniques may be used to highlight or distinguish more frequently used or otherwise identified phrases included in the feedback data. Uniqueness of the particular feedback is also considered. An emoticon icon e.g. emoticon may be generated based on the feedback and may be displayed.

Further in some embodiments a tool may provide users with a legend of emoticons used to visualize the feedback. The emoticons may be representative of emoticons specific to the feedback provided by a particular community and may be displayed automatically. Moreover users may be given an option of using cached information and may select whether the feedback information should come from the item category or from user feedback. Additionally in some embodiments users may be provided with hints to further explain the meaning of the icons and terms.

In some embodiments the example technology may include allowing searching by a user e.g. a seller of goods or services an identifier e.g. a screen name handle or numeric identifier or allowing a user to pick a user name from cached user names. The potential purchaser may select and search for visualized feedback that may for example be presented in positive negative or neutral categories. Additionally the potential purchaser may use emoticon legends e.g. emoticon legends that correspond to the feedback terms. Further the more frequently occurring feedback terms may be displayed in correspondingly larger font. Example embodiments may include using displayed terms or phrases which are clickable to expose further details about the feedback associated with these terms or phrases. Moreover the technology may include demonstrating the frequency of use of the term or phrases by displaying the percentage of occurrence in the feedback.

Some example embodiments may include extracting representative textual phrases from a user s feedback text as tags . These tags may be extracted to differentiate feedback for one user from that of another. For example if all users have the text AAAAA in their feedback this information does not serve to distinguish one user from another. In some embodiments the example technology may extract other distinguishing phrases that summarize a user s e.g. a seller s feedback text. This information may be extracted at a global level a category level a domain level e.g. static or dynamic or at any other suitable level. Also this information may be extracted for all the transactions that have occurred for all users in a given category to describe the most representative tags for that category feedback. For example very cute may be a typical phrase in a positive feedback text in a bag category does not fit may be a common phrase in an apparel category and wrong size may be a common phrase in a jewelry ring category.

Once the text is extracted the information may be presented at a user level across all categories at a category level domain level or at some other suitable level. Example representations of the feedback may be shown with the text differentiated by its size e.g. highlighted with larger text for more frequent phrases and smaller text for less frequent ones .

Further in some embodiments an example technology may represent text emoticons or sentiments that may have emoticons attached to them. This may be done by keeping a dictionary of phrases and mapping the phrases to a static set of emoticons. For example speedy shipping and fast delivery may be associated with a common emoticon. Linguistic analysis and natural language processing may help to identify such similar phrases and map them to the same emoticon. Techniques of sentiment mining from small text may be used to attach sentiments to the tag phrases.

In some embodiments a feedback page is displayed to a potential purchaser. Feedback page may contain feedback regarding a particular seller of a good or service or regarding a particular category of goods or services for sale. In one embodiment when a potential purchaser clicks on a tag underlying the text displayed on the feedback page an asynchronous request is sent to the server to obtain details for that tag. This asynchronous request may be generated using technology including for example AJAX or DHTML. Once the asynchronous request is received then feedback information related to that tag is extracted from a pool of feedback for that user. Next in some cases a percentage is computed to determine how many comments out of the total pool of comments e.g. for that particular seller actually relate to that specific tag. Then in some embodiments a feedback servlet again constructs the HTML to be displayed to the client e.g. displayed as part of the feedback page . In some example embodiments synchronous transmissions of web page queries are utilized in lieu of or in combination with the asynchronous queries. Further technologies such as ASP may be utilized in lieu of servlets.

In some cases a potential purchaser may generate a feedback request relating to comments regarding a seller comments regarding another potential purchaser a feedback score a category of items for sale a particular item or some other type of suitable information pertinent to the sale of a good or service. This information may be supplied by purchasers or by others having access to this type of information.

With regard to the first stream an operation may be executed that generates feedback in the form of feedback data that is then transmitted to or otherwise received through the execution of an operation . Once operation is executed an operation may be executed that parses and stores feedback data into feedback data store . This process of generating feedback data and subsequently parsing and storing it into a data store may serve to for example seed or otherwise populate a data store with user feedback. In some cases this user feedback may be subsequently utilized for the generation of a feedback page its associated graphical illustrations e.g. emoticons and phrases describing a particular user in terms of feedback regarding that user. Once feedback data store is populated a reviewer such as reviewer may execute an operation to generate a feedback request such as feedback request . This feedback may be generated with respect to a particular user category of good services at a static or dynamic domain context or even for all transactions e.g. globally . Further these types of feedback may be combined. Next through the execution of an operation feedback request may be received and processed. Once feedback request has been received an operation may be executed that may retrieve feedback entries from for example the feedback data store . This operation may use various Application Programming Interface API calls or even calls generated using a Structured Query Language SQL to retrieve feedback entries. Then an operation may be executed that generates a list of positive neutral or negative feedback entries. Put another way in some embodiments a list containing only positive feedback may be generated a list containing only neutral feedback may be generated and a list containing only negative feedback may be generated. In lieu of a list some other suitable data structure e.g. a Binary Search Tree BST a stack a queue a double linked list may be utilized.

Once these lists are generated an operation is executed that filters certain noise words wherein these noise words may be contained in some type of predefined dictionary e.g. a stop word dictionary . This dictionary may be based upon certain words that may be deemed to be uninformative or otherwise unhelpful in terms of facilitating a reviewer s such as reviewer s understanding of feedback regarding a particular user. The execution of operation may be optional in some embodiments. Once operation is executed or if operation is optionally not executed the method continues to an operation that assigns any remaining words to an array or some other suitable data structure wherein a unique integer value is associated with each one of the words. Then an operation may be executed that assigns each one of these words to some type of searchable data structure such as for example a trie a BST a heap or a list. In some embodiments a data structure may be generated for each feedback type e.g. positive neutral and or negative feedback resulting in a plurality of data structures. An operation may then be executed that extracts certain phrases from the searchable data structure or plurality of searchable data structures and passes these phrases through a frequency engine. In some embodiments the frequency engine counts the number of times these phrases appear in all of the searchable data structures or in some cases only one or more of the searchable data structures.

An operation is then executed that builds a scoring model using the frequency count. In some cases this scoring model may for example be a hash table that contains a phrase and its frequency count based upon the aggregation of the frequency values for the words associated with the phrase. In some cases this hash table may be implemented using bucket hashing or cluster hashing as may be suitable. In other cases some other suitable data structure may be used such as for example a BST heap linked list or doubly linked list. Next an operation is executed that maps or compares the frequency count for each of the phrases to certain graphic standards relating to particular graphical illustrations e.g. emoticons . In effect this comparison takes the phrase contained in a hash table entry and compares it to phrases associated with a particular emoticon. In some cases a dictionary of sentiments or emoticon mining system collectively referenced herein as an emotion database is implemented such that the phrases are compared to possible synonyms and where a match is found the corresponding emoticon is used. If for example the phrase Best Purchase Ever is considered to be synonymous with the phrase Exactly Described then the emoticon denoting that one is pleased with a transaction might be appropriate. Once the phrases are mapped to an emoticon an operation is executed that generates a feedback page such as feedback page . The generation of feedback page may be more fully illustrated below but includes for example the generation of an HTML based page that contains for example the phrases and their respective emoticons. In some embodiments the phrases themselves may be highlighted in some manner e.g. font size bolded font italicized font underlined font color font or some other suitable method of highlighting where a particular phrase may need to stand out relative to other phrases contained in a particular field e.g. a positive feedback field negative feedback field neutral feedback field . Some embodiments may include using a method of gradation based upon import to highlight certain phrases such that the more unique the phrase is relative to some universe of phrases the great degree of highlighting it may receive. The method of gradation based upon import may be more fully discussed below is the section relating to the generation of the Inverse Document Frequency e.g. referenced as idf value.

Feedback page may then be received through the execution of an operation that may receive feedback page and display it. In some embodiments the execution of operation may be carried out through some type of application capable of interpreting an HTML based page such as for example a web browser or other suitable application that may interpret for example HTML or XML. Further through the execution of operation details relating to a particular piece of feedback may be displayed see e.g. phrase selected with mouse pointer so as to display the specifics of the selected phrase in screen object or widget .

The second sub trie provides an illustration of a suffix ordering relating to neutral feedback in the form of the phrase Service Was About Average . Shown is a root node . Connected to root node are a number of child nodes including for example nodes and . Some of these child nodes themselves have children such that for example node has a child node node has a child node and node has a child node . Again some of these child nodes also have children such that for example node has a child node and node has a child node . Also illustrated is a leaf node that is a child of node . Again traversing from the root node to the leaf nodes there are a number of phrases that may be generated such that for example traversing from the root node to the leaf node the phrase Services Was About Average may be generated. Likewise traversing from the root node to the node the phrase was about average may generated. Similarly traversing the path from root node to the node the phrase About Average may be generated and traversing from the root node to the node the phrase or in this case word Average may be generated.

Further illustrated is a third sub trie that relates to negative feedback that a particular user has received for example in the form of the phrase Not A Good Experience . Shown as a part of trie is a root node having a number of child nodes and . These child nodes themselves may have one or more children. For example node is a child of the node node is a child of the node and node is a child of the node . Other children illustrated herein include for example node as a child of node and node as a child of node . Additionally a leaf node is illustrated as a child of the node . Trie may be traversed via following any one of a number of paths from the root node to various child or leaf nodes. The phrase Not A Good Experience may be generated through traversing the path from the root node to the child node . Another path may be traversed from the root node to the child or leaf node wherein the phrase A Good Experience may be generated. Another phrase Good Experience may be generated by traversing the path from the root node to the leaf node and yet another phrase or in this case word Experience may be generated by traversing the path between the node and the leaf node . As illustrated elsewhere some other suitable type of data structure may be used in lieu of tries to organize and traverse strings and substrings associated with positive neutral or negative feedback.

In some embodiments another scoring model e.g. a combined scoring model value may be utilized in lieu of or in conjunction with the frequency count. This combined scoring model value may be generated based upon for example the product of a term s frequency e.g. its term frequency tf or frequency count and the number of documents that contain that term for a particular user e.g. a buyer or seller as compared to a given universe of documents e.g. the universe of all user feedback e.g. idf value . In one embodiment once the hash table is built for all phrases extracted the combined scoring model value is then computed for each phrase using a tf value for global data and an idf value for global data. In one embodiment this tf idf score may be stated as Combined scoring model value 

In some embodiments the idf value may be more significant where the phrases used to describe a buyer or seller more closely approximates for example the universe of all words or phrases to describe sellers in general. If Happy Shopper is described as An unparalleled Seller three times in feedback related to them and the phrase An unparalleled Seller is only used three times in the universe of all seller feedback then the idf value will taken on greater significance. In some cases the use of an idf value may ensure the uniqueness of a phrase relative to the universe of phrases within which the phrase may be found. This idf value may also be used to determine the gradation based upon import of a phrase such that the phrase may be highlighted to a greater or lesser degree. For example if the idf value is close to 1 then the phrase may appear bigger e.g. larger font be represented in a unique color or have some other way of representing it as distinct from other phrases that may appear on a feedback page such as feedback page .

In some embodiments the modification of the font size or other types of highlighting relating to a particular phrase may occur where the combined scoring model results in some the generation of some value e.g. the combined scoring model value . In cases where this value falls within one particular area of the gradation based upon import to highlight then the font size color or some other way of distinguishing the phrase form other phrases contained in the feedback will be applied. In some cases the larger the combined scoring model value the more uniquely highlighted the phrase will be. For example under the threshold instructions phrases with a combined scoring model value of 100 are entitled to receive 16 point font while those 200 may be entitled to being highlighted in the color red but those with a value of 

Some embodiments may include the various databases e.g. 132 1104 or 1503 being relational databases or in some cases On Line Analytical Processing OLAP based databases. In the case of relational databases various tables of data are created and data is inserted into and or selected from these tables using SQL or some other database query language known in the art. In the case of OLAP databases one or more multi dimensional cubes or hypercubes containing multidimensional data which data is selected from or inserted into using MDX may be implemented. In the case of a database using tables and SQL a database application such as for example MYSQL SQLSERVER Oracle 8I 10G or some other suitable database application may be used to manage the data. In the case of a database using cubes and MDX a database using Multidimensional On Line Analytic Processing MOLAP Relational On Line Analytic Processing ROLAP Hybrid Online Analytic Processing HOLAP or some other suitable database application may be used to manage the data. These tables or cubes made up of tables in the case of for example ROLAP are organized into a RDS or Object Relational Data Schema ORDS as is known in the art. These schemas may be normalized using certain normalization algorithms so as to avoid abnormalities such as non additive joins and other problems. Additionally these normalization algorithms may include Boyce Codd Normal Form or some other normalization or optimization algorithm known in the art.

Also shown is an extraction rules for phrases table containing various extraction rules for certain phrases. In some embodiments while the tables through may reside on for example the feedback data store the extraction rules for phrases table may reside as a part of for example the phrase extraction rules database . Extraction rules may include rules regarding the number of words that may make up a phrase that may be able to be extracted the frequency with which these words may appear across a plurality of phrases such that these words may be used in a phrase that is extracted or some other suitable set of rules. Also shown is a synonyms table that may reside as a part of the emotions database . These rules may be in the form of strings or character data types wherein for example if a negative phrase is determined to by synonymous with a string in the emotions database then that phrase may be associated with an emoticon. Also shown is an illustrations table that may reside on for example the emoticon database . Illustrations table may contain graphic illustrations in the form of for example emoticons. The illustrations table may contain for example a Binary Large Object BLOB that contains a binary representation of the actual graphic illustration e.g. the emoticon .

Further a stop word table is shown that may reside as a part of for example the noise word database . Stop word table may be optional but when used or otherwise implemented it may contain a plurality of stop words such that if one of these stop words is encountered in a phrase that word is then removed from the phrase or more generally from a particular piece of feedback data e.g. and or . These stop words may be generated by for example a system administrator and may be in the form of for example a string data type. Further illustrated is a unique key table that provides a unique key value for one or more of the tables illustrated herein e.g. . These unique key values may be in the form of for example an integer or some other uniquely identifying numeric value or plurality of unique identifying numeric values.

In some embodiments a method is described as implemented in a distributed or non distributed software application designed under a three tier architecture paradigm whereby the various components of computer code that implement this method may be categorized as belonging to one or more of these three tiers. Some embodiments may include a first tier as an interface e.g. an interface tier that is relatively free of application processing. Further a second tier may be a logic tier that performs application processing in the form of logical mathematical manipulations of data inputted through the interface level and communicates the results of these logical mathematical manipulations to the interface tier and or to a backend or storage tier. These logical mathematical manipulations may relate to certain business rules or processes that govern the software application as a whole. A third storage tier may be a persistent or non persistent storage medium. In some cases one or more of these tiers may be collapsed into another resulting in a two tier or even a one tier architecture. For example the interface and logic tiers may be consolidated or the logic and storage tiers may be consolidated as in the case of a software application with an embedded database. This three tier architecture may be implemented using one technology or as will be discussed below a variety of technologies. This three tier architecture and the technologies through which it is implemented may be executed on two or more computer systems organized in a server client peer to peer or some other suitable configuration. Further these three tiers may be distributed between more than one computer system as various software components.

Some example embodiments may include the above described tiers and processes or operations that make them up as being written as one or more software components. Common to many of these components is the ability to generate use and manipulate data. These components and the functionality associated with each may be used by client server or peer computer systems. These various components may be implemented by a computer system on an as needed basis. These components may be written in an object oriented computer language such that a component oriented or object oriented programming technique can be implemented using a Visual Component Library VCL Component Library for Cross Platform CLX Java Beans JB Enterprise Java Beans EJB Component Object Model COM Distributed Component Object Model DCOM or other suitable technique. These components may be linked to other components via various Application Programming interfaces APIs and then compiled into one complete server client and or peer software application. Further these APIs may be able to communicate through various distributed programming protocols as distributed computing components.

Some example embodiments may include remote procedure calls being used to implement one or more of the above described components across a distributed programming environment as distributed computing components. For example an interface component e.g. an interface tier may reside on a first computer system that is located remotely from a second computer system containing a logic component e.g. a logic tier . These first and second computer systems may be configured in a server client peer to peer or some other suitable configuration. These various components may be written using the above described object oriented programming techniques and can be written in the same programming language or in different programming languages. Various protocols may be implemented to enable these various components to communicate regardless of the programming language s used to write them. For example a component written in C may be able to communicate with another component written in the Java programming language through use of a distributed computing protocol such as a Common Object Request Broker Architecture CORBA a Simple Object Access Protocol SOAP or some other suitable protocol. Some embodiments may include the use of one or more of these protocols with the various protocols outlined in the Open Systems Interconnection OSI model or the Transmission Control Protocol Internet Protocol TCP IP protocol stack model for defining the protocols used by a network to transmit data.

Some embodiments may utilize the Open Systems Interconnection OSI basic reference model or Transmission Control Protocol Internet Protocol TCP IP protocol stack model for defining the protocols used by a network to transmit data. In applying these models a system of data transmission between a server and client or between peer computer systems is described as a series of roughly five layers comprising an application layer a transport layer a network layer a data link layer and a physical layer. In the case of software having a three tier architecture the various tiers e.g. the interface logic and storage tiers reside on the application layer of the TCP IP protocol stack. In an example implementation using the TCP IP protocol stack model data from an application residing at the application layer is loaded into the data load field of a TCP segment residing at the transport layer. The TCP segment also contains port information for a recipient software application residing remotely. The TCP segment is loaded into the data load field of an IP datagram residing at the network layer. Next the IP datagram is loaded into a frame residing at the data link layer. This frame is then encoded at the physical layer and the data is transmitted over a network such as an internet Local Area Network LAN Wide Area Network WAN or some other suitable network. In some cases the word internet refers to a network of networks. These networks may use a variety of protocols for the exchange of data including the aforementioned TCP IP as well as ATM SNA SDI or some other suitable protocol. These networks may be organized within a variety of topologies e.g. a star topology or structures.

The example computer system includes a processor e.g. a Central Processing Unit CPU a Graphics Processing Unit GPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a Liquid Crystal Display LCD or a Cathode Ray Tube CRT . The computer system also includes an alphanumeric input device e.g. a keyboard a User Interface UI cursor controller e.g. a mouse a disk drive unit a signal generation device e.g. a speaker and a network interface device e.g. a transmitter .

The disk drive unit includes a machine readable medium on which is stored one or more sets of instructions and data structures e.g. software embodying or utilized by any one or more of the methodologies or functions described herein. The software may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system the main memory and the processor also constituting machine readable media.

The instructions may further be transmitted or received over a network via the network interface device utilizing any one of a number of well known transfer protocols e.g. HTTP SIP .

In some embodiments a removable physical storage medium is shown to be a single medium and the term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any of the one or more of the methodologies described herein. The term machine readable medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media and carrier wave signals.

In some embodiments a system and method is illustrated that facilitates the generation of feedback that is useful and non cumulative by removing redundant information or only providing useful feedback information. Feedback regarding a particular seller of a good or service may only be useful insofar as it instructs a potential purchaser regarding specific information about a seller and or the good or services that are being sold. In cases where this feedback is merely cumulative the feedback is not informative. Feedback that is informative will attract more potential purchasers since these purchasers may be more able to research the sellers and the goods or services being sold on for example a website.

The Abstract of the Disclosure is provided to comply with 37 C.F.R. 1.72 b requiring an abstract that will allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description it can be seen that various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separate embodiment.

