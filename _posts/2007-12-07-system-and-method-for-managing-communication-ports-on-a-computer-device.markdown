---

title: System and method for managing communication ports on a computer device
abstract: There is provided a system and method for managing communication ports on a computer device. The method comprises the steps of scanning the system file structure, determining port assignments for active devices from a known location in the system file structure, scanning additional locations in the system file structure, determining port assignments for dynamic devices from the additional locations in the system file structure, and displaying the active devices, dynamic devices and the corresponding determined port assignments. The system comprises a memory for storing instructions, and a processor for executing the instructions stored in the memory. The executed instructions generate a system file structure scanner component for scanning the system file structure and generating device data based on the scanned system file structure, a device data structure for storing the device data received from the computer system file structure scanner component, and a port assigner component for assigning communication ports based on the device data structure.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08145810&OS=08145810&RS=08145810
owner: Psion Teklogix Inc.
number: 08145810
owner_city: Mississauga
owner_country: CA
publication_date: 20071207
---
The present invention generally relates to computing devices and more particularly to computing devices having one or more attached peripheral devices.

Computer devices commonly connect to peripheral devices. Although referred to as a peripheral device the device may form part of the physical computing device for example a computing device may include an image capture device or other hardware within the case of the computing device. These peripheral devices communicate with applications through a port having a specific interface a port interface using a driver.

The driver establishes a communication port COM port that applications may connect to and exchange data through. Drivers may specify a particular COM port to communicate through or may specify a range of COM ports it can communicate through.

A specific piece of hardware connected to the peripheral interface will typically have an application associated with it. This application may provide user functionality such as collecting information using a barcode scanner or it may provide an application programming interface API to other applications. The device API provides various functions for communicating with the device. Regardless of the type of application it will typically communicate with the interface device driver through a COM port.

The application and the driver must be able to function with the same COM port. For example if the driver is assigned COM port 3 then any application that communicates with the device connected to this interface must be designed to be able to communicate with a device using COM port 3.

Computing devices may have multiple interfaces as well as multiple applications that communicate with different devices connected to the various interfaces. Due to the requirements of COM port communication it is often difficult to properly assign COM ports to interfaces such that all applications will function properly.

Various applications have attempted to alleviate some of the problems associated with COM ports. These include for example applications that allow for COM ports associated with an interface driver to be associated with virtual COM ports that an application can communicate through. Further applications have provided the ability to remap COM ports for example mapping COM port 1 to COM port 6. Still further applications may allow for viewing and modifying the properties associated with a particular interface such as the COM port assigned to the interface.

These applications do not provide a simple means of assigning all COM ports to interfaces and devices for a computer device. A need therefore exists to provide a simpler means of assigning COM ports to interfaces and devices for a computing device.

In accordance with one aspect of the present invention there is provided a method for managing communication ports on a computer device having a system file structure. The method comprises the steps of scanning the system file structure determining port assignments for active devices from a known location in the system file structure scanning additional locations in the system file structure determining port assignments for dynamic devices from the additional locations in the system file structure and displaying the active devices dynamic devices and the corresponding determined port assignments.

It is within the scope of the COM port manager to have only a single active device and or a single dynamic device. It should be understood that the terms active devices and dynamic devices also encompass a single active device and a single dynamic device.

In accordance with one aspect of the present invention there is further provided a system for managing communication ports on a computer device having a system file structure. The system comprises a memory for storing instructions and a processor for executing the instructions stored in the memory. The executed instructions generate a system file structure scanner component for scanning the system file structure and generating device data based on the scanned system file structure a device data structure for storing the device data received from the computer system file structure scanner component and a port assigner component for assigning communication ports based on the device data structure.

In accordance with one aspect of the present invention there is further provided a computer readable medium storing instructions or statements for use in the execution in a computer of a method for managing communication ports on a computer device having a system file structure. The method comprises the steps of scanning the system file structure determining port assignments for active devices from a known location in the system file structure scanning additional locations in the system file structure determining port assignments for dynamic devices from the additional locations in the system file structure and displaying the active devices dynamic devices and the corresponding determined port assignments.

In accordance with one aspect of the present invention there is further provided a propagated signal carrier carrying signals containing computer executable instructions that can be read and executed by a computer the computer executable instructions being used to execute a method for managing communication ports on a computer device having a system file structure. The method comprises the steps of scanning the system file structure determining port assignments for active devices from a known location in the system file structure scanning additional locations in the system file structure determining port assignments for dynamic devices from the additional locations in the system file structure and displaying the active devices dynamic devices and the corresponding determined port assignments.

With the flexibility of computing devices for adding multiple hardware modules that use and or expose COM ports the handling and management of the COM port assignments can become overwhelming. Without the use of a COM port manager as described herein it is difficult to determine what COM ports are available when particular peripheral devices are added or connected to the computing device. With the use of a COM port manager as described herein it is possible to know what COM ports are free and control the assignment of the ports as appropriate.

The handheld computer comprises an input device for inputting information into the handheld computer . The input device may be a QWERTY type keyboard however one skilled in the art will appreciate that the input device does not need to be a QWERTY keyboard. For example the input device may comprise a handwriting recognition device a limited keyboard keys a mouse a trackball a voice recognition device a touch sensitive screen etc.

The handheld computer further comprises an output device for presenting information to a device user. The output device is described herein as a display screen however one skilled in the art will appreciate that the output device may be any suitable device for allowing output of information. For example the output device may comprise a speaker a Braille device light emitting diodes LEDs lights etc.

The handled computer further comprises various port interfaces . The handheld computer may have only a single port interface or it may have more than one port interface. The handheld computer of is shown as having 3 port interfaces and . The port interfaces are described herein as being different port interfaces however one skilled in the art will appreciate that the individual port interfaces do not need to be different and may be the same.

The system further comprises peripheral devices . The peripheral devices connect to the handheld computer via the port interfaces . As outlined above although shown as being connected to an external port interface the devices may be internal to the device. The physical connector for an internal peripheral device may not provide easy connection and disconnection of the internal peripheral device due to size requirements however from the point of software or other hardware running on the handheld computer the internal peripheral device functions the same as an external peripheral device.

The peripheral devices may comprise various hardware components or modules. For example peripheral device may be a printer. Peripheral device connects to the port interface using an appropriate physical connector . Peripheral device is shown as an expansion module for providing additional port interfaces for connecting further devices. Peripheral device connects to the port interface using an appropriate physical connector . Peripheral device is shown as a Bluetooth radio for connecting to Bluetooth devices. The Bluetooth radio connects to port interface using an appropriate connector

The port interfaces may be classified as a fixed device port interface or a dynamic device port interface. The COM port manager may optionally detect and display devices connected to fixed device port interfaces. If no devices are connected to a fixed device port interface then the COM port manager optionally does not display the COM port assignments for the fixed device port interface. The COM port manager may always show the COM port assignments for dynamic device port interfaces regardless of if a peripheral device is actually connected to the dynamic port interface. A fixed device port interface may also be further classified as an unchangeable device. An unchangeable device has a detected COM port assignment that cannot be changed.

COM port manager can be used with various port interfaces devices and applications. Specific illustrative port interfaces that may be found on a handheld computer are set forth below. One skilled in the art will appreciate that the system and methods of a COM port manager are not limited to use with only these port interfaces. The port interfaces and devices of the handheld computer that may require a COM port be assigned may include for example 

Table 1 below provides an illustrative default COM port assignment matrix for the various COM ports and port interfaces. Table 1 also indicates the classification as fixed F dynamic D and unchangeable U .

With respect to Table 1 it is to be understood that the table may not represent peripheral devices that are connected to a handheld computer simultaneously. For example a handheld computer would typically not have BR and BR connected at the same time since BR provides the functionality of BR i.e. an IR interface . Furthermore BT BR and PREP are shown as having multiple COM port assignments. For BT COM port assignment COM1 may be assigned to the Bluetooth device port interface i.e. the Bluetooth radio while the additional COM port assignments COM7 COM8 COM9 may be assigned to various external connections to Bluetooth devices for example a Bluetooth headset a Bluetooth printer and a Bluetooth smart phone . For BR the 3 COM port assignments are necessary since BR provides 3 port interfaces IR RS232 TTL and each one requires a COM port assignment. Similarly PREP provides a port replicator which provides for multiple ports each of which requires a COM port assignment. The information regarding the required port assignments for the various peripheral devices may be retrieved by the COM port manager from a system registry. Alternatively or additionally the COM port manager may be provided with this information through hard coding it into the COM port manager logic or by accessing files that store the information with the location of the files being hard coded into the COM port manager or set as an option.

Table 1 indicates that if all of the COM port assignments were used simultaneously by the handheld computer various conflicts would arise for example XMOD BR and or BR would conflict COM1 .

The various COM port assignments are typically stored in an operating system file structure. For example if the operating system is a Microsoft Windows operating system for example Windows CE then the data structure may be the system registry. The system registry stores information pertaining to the COM port assignments of active peripheral devices i.e. peripheral devices that are connected to a port interface and enabled . The registry entries associated with active peripheral devices may also indicate the appropriate drivers for the peripheral device. The system registry may also store information about peripheral devices that are not currently connected. For example driver information can be stored in the system registry so that when an associated peripheral device is connected to the handheld computer the appropriate driver is able to be loaded.

The system of depicts an illustrative embodiment of various peripheral devices connected to the handheld computer . The peripheral devices comprise a custom fingerprint reader hardware module connected to the handheld computer using a hardware expansion port interface . The peripheral devices further comprise a CompactFlash global positioning system GPS radio module connected to the handheld computer using a CF slot port interface . The peripheral devices further comprise a Bluetooth headset connected to the handheld computer using a Bluetooth radio port interface .

The port interfaces have an associated interface driver . The interface driver may include a device driver. For example the Bluetooth interface driver may comprise the logic necessary for communicating using the Bluetooth radio port interface as well as device logic for communicating with the particular Bluetooth headset using the Bluetooth radio port interface. Likewise the interface driver for the CF GPS radio may comprise both logic for communicating over the CF port interface and logic for communicating with the GPS device.

The hardware expansion port interface driver may only comprise logic for communicating with the device using the hardware expansion port interface. It may not provide an API for communicating with the fingerprint reader. The application that communicates with the fingerprint reader may provide an API or device driver to other applications.

Application 2 may utilize the CF GPS receiver to provide a map indicating the position of the handheld computer. Application 3 may also use the CF GPS receiver but it may use the CF GPS receiver to provide the amount of distance the handheld computer has traveled in a day.

Each of the applications communicate with the peripheral devices through a COM port. The applications may be designed to use different COM ports and the COM ports must not have conflicts. Table 2 below indicates possible COM ports that the applications may be designed to work with.

Application 4 utilizes the Bluetooth radio which may require COM2. The application also requires an additional COM port for establishing an external with the device over the Bluetooth radio. This may be any one of COM7 COM8 or COM9. Application 1 may communicate with the fingerprint reader using either COM1 or COM4. Application 2 and application 3 both utilize the CF GPS receiver which will have an associated COM port. As a result in order for both applications to work with the CF GPS receiver without requiring COM ports to be reassigned when using the different applications the COM port should be assigned a COM port that both applications can communicate with.

The above application COM port restrictions may be used to determine a possible COM port assignment as set forth below 

The COM port manager provides a method that can allow for the COM port assignments to be determined such that applications will function properly and there won t be COM port conflicts. This can be used advantageously to provide COM port assignments for handheld computers that have peripheral devices that may be connected and disconnected. The COM port manager provides a method for ensuring that an efficient COM port assignment is used.

As an example if the handheld computer has two peripheral devices that can be connected and disconnected periodically and the first peripheral device may communicate using any available COM port while the second peripheral device may only communicate using COM1 if the first peripheral device is connected before the second peripheral device it may utilize the first available COM port COM1 . This would result in the second peripheral device being unusable since the only COM port it can use is already in use. The COM port manager can be used to specify that first peripheral device should use the first available COM port after COM1. This results in COM1 being free for use by the second peripheral device regardless of if the first peripheral device was connected prior to the second peripheral device.

The screens of also comprise an add Bluetooth button which can be used to add a COM port assignment for a Bluetooth external connection for a peripheral device that is not shown. The screen also has a cancel button . The cancel button will exit the COM port manager without saving any of the COM port assignments made. An OK button can be used to save the COM port assignments and exit.

The COM port manager may have a selectable option that requires the COM port assignment to be conflict free. This is the preferable but not essential situation since all peripheral devices may be connected to the handheld computer without requiring re assignment of COM ports. However this may not be possible to achieve for example if two devices that communicate over a different port interface are designed to only communicate over the same COM port. One skilled in the art will understand that with multiple peripheral devices that can each communicate over a particular range or group of COM ports unresolvable conflicts may be created.

Static devices are always present in the handheld computer and can have peripheral devices attached detached without requiring the handheld computer to be turned off or restarted. Static devices may include for example the CF slot port interface the Bluetooth port interface the port replicator USB serial dongle and the port assigned for ActiveSync via USBT .

Dynamic devices are displayed by the COM port manager only when a connected peripheral device was detected when the COM port manager was started. Dynamic devices may include for example an expansion port interface for example connecting to global system for mobile communications GSM radio connecting to BlackRoc devices connecting to PCMCIA devices a hardware expansion port interface for example connecting to a custom hardware device a Virtual Port and an IRCOMM device.

As described above the COM port manager can be used to list peripheral devices as they are added or removed list the COM ports used by peripheral devices as they are added or removed list devices that do no allow the COM port assignment to be changed change the COM port assignment to a specific port number or to a defined range for peripheral devices recalculate COM port assignments to automatically resolve port conflicts and save the new COM port assignments. The stored COM port assignments may take effect once the handheld computer is restarted.

If the COM port manager ensures that no conflicts exist in the COM port assignment it may be necessary to disable or not assign COM ports to certain devices. This can be achieved by setting the COM port assignment to or another value indicative that the device should not be assigned a COM port. When a device is not assigned a port number the COM port manager may set a flag indicating that the corresponding driver to prevent the driver from loading. For example the COM port manager may set a DEVFLAGS NOLOAD bit in a driver flag to indicate that the driver should not be loaded.

In order for all devices to function properly with the COM port manager and to achieve maximum flexibility when assigning COM ports some peripheral devices and associated drivers may be required to be modified to store the COM port assignments in the device registry. For example most Bluetooth devices currently have the COM ports they can communicate using hard coded. The drivers and the devices should be modified to store and access this information from the system registry. For example when a Bluetooth device connects to the Bluetooth port interface the Bluetooth driver is hard coded to for example get the first free COM port in the range of 7 9. The driver could be modified to get the first free COM port specified in a Port list. The port list may be stored in the registry as a registry sub key of the Bluetooth driver. For example the driver could be modified to retrieve the port list from a registry sub key such as 

The Bluetooth driver would then assign the first free port from the port list i.e. COM5 9 . The COM port manager may then read and modify the PortList subkey value as appropriate.

For a handheld computer having a CF card slot the system registry typically does not have a pre defined COM port assignment associated with the CF card slot but instead looks for the first free COM port when a CF device is connected to the CF port interface. This may cause problems if the CF device requires a COM port that is not the first free COM port. The CF card slot driver may be modified to get the COM port assignment from a device registry key when a CF device is connected. A CF slot will typically only allow a single device to be connected at a time and so the registry key may use an Index value instead of a PortList as done for the Bluetooth devices which may have multiple devices connected.

The COM port manager may then retrieve and modify this COM port assignment information from the registry for example from the entry 

If the handheld computer comprises an expansion port interface the COM port manager should determine the dynamic peripheral device that is connected to the port interface. This may be done by looking in the registry to 

for entries with Drivers ExampleHandHeldDevice Expansion Slot content for example. If the entry is present then a reference key to the appropriate device driver is obtained and the COM port assignment is determined from the driver s registry entry. The COM port manager may similarly modify the COM port assignment for devices connected to the expansion slot.

For Example BlackRoc devices may be connected to an expansion slot port interface. When it is the HKLM Drivers Active will comprise content pointing to a BlackRoc Driver registry key. The BlackRoc registry key stores the COM port assignments that can be retrieved and modified by the COM port manager. BlackRoc devices may for example store driver information in the following registry keys 

If the handheld computer comprises a GSM radio or GPRS radio the COM port assignment may be retrieved and stored in the registry key 

If the handheld computer comprises a hardware expansion slot the COM port assignment may be retrieved and stored in the registry key 

The registry keys described above are for an illustrative handheld computer and are intended as examples for describing the functioning of the COM port manager. The COM port manager is designed to function with a specific handheld computer so that it is possible to know the port interfaces available for connecting devices to as well as the location that COM port assignments are stored in the system registry for the various peripheral devices. One skilled in the art will appreciate that the COM port manager described above can be modified to be used with various computing devices other than a handheld computer. Furthermore the system file structure need not be a system registry provided the COM port manager knows the location of necessary information.

The COM port manager can be designed to retrieve information relating to the port interfaces of the device as well as the location of the stored system file structure from a file. For example the COM port manager may be designed to access an extensible markup language XML file that comprises a specification of the available port interfaces as well as an indication of the location of the information pertaining to COM port assignments. The COM port manager may then use this information to display and modify COM port assignments of peripheral devices that may be connected to the computer device.

The systems and methods according to the present invention may be implemented by any hardware software or a combination of hardware and software having the above described functions. The software code either in its entirety or a part thereof may be stored in a computer readable memory. Further a computer data signal representing the software code which may be embedded in a carrier wave may be transmitted via a communication network. Such a computer readable memory and a computer data signal are also within the scope of the present patent disclosure as well as the hardware software and the combination thereof.

While particular embodiments of the present invention have been shown and described changes and modifications may be made to such embodiments without departing from the true scope of the invention.

