---

title: User-created metadata for managing interface resources on a user interface
abstract: A computer-implementable method enables a user to customize navigation of User Interface (UI) resources that are displayed on a computer User Interface (UI). A computer receives, from a user, an input of user-created metadata. This user-created metadata is associated with one or more UI resources that are depicted on a UI. In response to a user inputting specific metadata, the computer retrieves one or more UI resources that are associated with the specific metadata that has been input by the user. These retrieved one or more UI resources are displayed on the UI.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08316309&OS=08316309&RS=08316309
owner: International Business Machines Corporation
number: 08316309
owner_city: Armonk
owner_country: US
publication_date: 20070531
---
The present disclosure relates in general to the field of computers and other data processing systems including hardware software and processes. More particularly the present disclosure pertains to tailoring the way interface resources are managed on a User Interface UI .

A computer implementable method enables a user to customize the management and navigation of interface resources that are displayed on a computer User Interface UI . A computer receives from a user an input of user created metadata. This user created metadata is associated with one or more User Interface UI resources that are depicted on a UI. In response to a user subsequently inputting specific metadata the computer retrieves one or more UI resources that are associated with the specific metadata that has been input by the user. These retrieved one or more UI resources are then displayed on the UI. These user created metadata provide for user specified selection criteria which may be persisted for particular UI resources that are needed by the user.

The above as well as additional purposes features and advantages of the present invention will become apparent in the following detailed written description.

Many User Interfaces UIs such as Web based administration consoles contain a variety of user interface resources. A User Interface UI resource is defined as a resource that is available to a user through a UI and includes but is not limited to user fillable forms and other types of data input widgets wizards for guiding a user through a process such as software maintenance hardware maintenance etc. property notebooks e.g. tabbed widgets portlets e.g. a UI component that provides access to a portlet application such as a type of website e mail etc. and can be used across multiple different websites portal pages i.e. webpages that have been specially designed to provide access to a pre defined set of webpages and Web pages. Generally the user interfaces include some form of navigation mechanism such as a navigation tree so that the user can find the UI resources needed to achieve certain goals.

As the quantity of UI resources locating a UI resource becomes increasingly difficult thus making it increasingly difficult for a user to perform specific tasks or to achieve specific goals. This is particularly difficult with regards to UI resources that a user utilizes infrequently. The problem becomes exacerbated if search tools names of files resources tasks and search metadata are not intuitive to a user. For example a navigation tree may display files that are named and assigned metadata according to criteria established by the programmer that may not be sensible or memorable to a user.

Thus presently presented are a method system and computer readable medium that are used to allow a user to define user created metadata to be associated with particular UI resources or alternatively to particular UI based tasks such that these UI resources and or tasks are easily managed in a customized manner.

With reference now to the figures and in particular to a User Interface UI for a metadata customization program is depicted. UI includes a navigation tree pane which shows in expandable and collapsible form various User Interface UI resources that are available for a server Server .

UI also includes a pane which displays a metadata input widget . As suggested by the instructions depicted in pane a user can enter user created metadata e.g. Stop server wizard Start server wizard Weekly maintenance wizard Web page for upgrades to be associated with the UI resource Manage server for Server . These entered user created metadata describe in a manner that is logical and memorable to the user who created the user created metadata different UI resources that are part of the main UI resource Manage server. That is the user created metadata describe some or all of the UI resources that are available to an end user if an end user were to click the field Manage server in navigation tree pane . As will be described later clicking such a field from a navigation tree pane in a customized view display UI e.g. UI shown below in pulls up some or all UI resources that make up the main UI resource that has been retrieved and clicked.

Note that field was auto populated with the term Manage Server when a user clicked Manage server in the navigation tree pane thus providing the user with an addition indicator for which UI resource is being customized with new user created metadata.

As depicted and described in the user has now input her unique metadata for a particular UI resource. Since this user created metadata makes logical sense to that user the task of future retrieval management and execution of certain types of UI resources and or tasks to complete a project will be easy.

As illustrated in the user can similarly input user created UI resource metadata for System Maintenance of Server . In the example shown the user has created the UI resource metadata Backup server configuration form Replicate to secondary database wizard and Weekly maintenance wizard and has input these user created metadata into metadata input widget . Note also that active field was auto populated with the term System Maintenance when the user clicked System Maintenance in navigation tree pane .

Similarly as illustrated in the user can input user created metadata for the UI resource Disk and CPU management for Server . In the example shown the user has created and input the user created metadata Capacity management portlet and Weekly maintenance wizard into metadata input widget . As in the examples shown above in this user created metadata describes two UI resources that can be found in the UI resource Disk and CPU management. Note also that active field was auto populated with the term Disk and CPU management when the user clicked Disk and CPU management in navigation tree pane .

Referring now to a logical relationship among different metadata and UI resources is shown. The user created metadata such as the metadata that was input into input widgets in is associated with e.g. mapped to aligned with logically related to included in a header of the UI resource etc. one or more specific UI resources in UI resources . In a similar manner predefined metadata is also associated with one or more of the UI resources depicted by UI resources . These predefined metadata may or may not be sensible or memorable for a specific user who is thus able to create her user created metadata as described above. Note that while the UI resources are UI resources as defined above in an alternate embodiment each UI resource may be for a particular task such as Turn on computer Boot program Sweep memory for viruses etc.

Note that UI resources or alternatively tasks may be consolidated into groups. If so then such groups may also be assigned user created group metadata which is associated with specific UI resources found in UI resources . Alternatively such user created group metadata may be associated with user defined metadata and or predefined metadata such that the association between the user created group metadata and UI resources in UI resources is indirect.

As shown in the user defined metadata can be displayed in a personal preference pane as shown in UI . That is some or all user defined metadata can be displayed in a manner that allows a user to quickly locate and access UI resources associated with the user defined metadata . Alternatively these user defined metadata can be shared with other users. That is the user who created the user defined metadata can export the user defined metadata to another user e.g. a member of the user s team such that the other user can also access the UI resources using the newly created user created metadata .

With reference now to a UI for a UI resource selection program is shown. At this point it is understood that a user may have defined her unique user created metadata. Pane includes instructions for entering user created metadata into input widget . In the example shown the user has entered Weekly maintenance. In the example shown in this metadata tag was associated with three developer named UI resources Manage server System Maintenance and Disk and CPU management. As shown in entering Weekly maintenance wizard in input widget has resulted in the display of a UI for a customized view display. This customized view shows only the UI resources Manage server System Maintenance and Disk and CPU management in the navigation tree pane such that all other UI resources e.g. for Server that are not associated with the user created metadata Weekly maintenance wizard have been filtered out of the display. Initially pane is empty. However as shown in clicking a particular task i.e. Manage server results in pane displaying in field all resources and tasks associated with the task Manage server. Note the following about the display shown in field .

First UI resources which make up the main UI resource that is presented may have been renamed to comport with the user created metadata. That is the task Stop Server wizard may have been originally named Deactivate computer wizard. However this task has been renamed to be more sensible to the user. Second more UI resources than those described by the user Upgrade webpage may be shown in field . The user can still click these UI resources if she so desires. Third each UI resource may be linked to a specific file webpage or other resource. In the example shown the UI resource Weekly maintenance wizard has been associated with a URL http maintenance webpage.net which is shown in pop up window . Pop up window appears when a user hovers a cursor over the active area in field for Weekly maintenance. By clicking this hyperlink the user is taken directly to a webpage that supports the process of weekly maintenance of Server . Alternatively a link to an executable file may be popped up by hovering a cursor over the subtask name Weekly maintenance. For example assume that such a link file is named weekly maint wizard.exe . By clicking this link the file weekly maint wizard.exe is auto run to perform a series of maintenance routines on Server . This UI resource as well as other UI resources including text instructions links portlets etc. which are logically depicted in can pop up in pane another window in UI or another UI e.g. a displayed webpage when the UI resource Weekly maintenance wizard is clicked.

With reference now to a high level flow chart of exemplary steps taken to allow a user to create user created metadata is presented. After initiator block a computer receives a user input selecting one or more UI resources from a user interface. The computer then receives the user created metadata for the selected one or more UI resources block and associates this user created task metadata with the selected UI resources block thus ending this iteration of the process terminator block .

The user can subsequently use her user created metadata to manage particular UI resources. Thus as shown in after initiator block the computer receives one or more user created metadata block . Using this user created metadata the UI resources are retrieved block . Preferably only the retrieved UI resources are displayed block on a UI either as originally named or newly named to be in conformance with the user created metadata. The process ends in this iteration at terminator block .

As described above UI resources are defined above as resources that are available to a user through a UI such as user fillable forms and other types of data input widgets wizards property notebooks portlets etc. However the above described method for incorporating user defined metadata to a UI resource can also be implemented to associate user defined task metadata to particular tasks that are associated with UI resources. Furthermore such UI resources and or tasks can be consolidated into groups such that each group is assigned its own user created group metadata. Thus with reference now to groups of tasks can be managed through the use of consolidation input using previously created user created metadata i.e. user created task metadata and or predefined task metadata. As shown in UI for a metadata customization program various tasks Manage server System Maintenance Disk and CPU management that can be performed on Server are shown in navigation tree pane . Various features resources that enable the accomplishment of some or all of each task are also shown. As shown in pane a user can also select groups of tasks for consolidation into a task group. For example the user can consolidate the various resource features now named to reflect the user created task metadata Start server from Manage server task Backup server configuration from the System Maintenance task and Capacity management from the Disk and CPU management task by inputting these resources into data input widget . This causes these resources to be consolidated into a single task group named Catharine s Monday Job which has been input into data input widget . As shown in data input widget this task group has been given multiple user created group metadata by the user. These user created group metadata include Monday Catharine and Server. Returning to note that the user created group metadata may be associated with e.g. mapped to either user created task metadata in user created metadata and the predefined metadata or group metadata can be directly associated with UI resources e.g. tasks .

As shown in these new group metadata can be used to pull up a task group. As shown in UI for a task group selection program a pane includes an input widget for one or more of the group metadata e.g. Catharine associated with a task group and input widget can receive the user created task name itself i.e. Catharine s Monday Job . By entering any of the user created group metadata or the name of the task group itself the task group and its associated task resources will be pulled up as shown in .

Referring now to UI shows the result of entering either Catharine or Catharine s Monday Job user created group metadata as depicted in . Entering such user created group metadata results in the tasks Manage server System Maintenance and Disk and CPU management being displayed in navigation page . In the example shown the task Manage server has been clicked resulting in the display of window in pane . Note that window must display all resources that are needed to perform the task Manage server. However in accordance with the entries into data input widget shown in the resource Start server is highlighted thus giving the user a visual cue regarding which resource from the task Manage server actually needs to be utilized. Alternatively the custom name for the selected group of tasks entered into data input widget shown in may be named Catharine s Monday Job includes the resources Start server Backup server configuration and Capacity management. . This lengthy name provides the user with information needed to select the appropriate resources used to perform a particular task that is displayed.

The process described for managing task groups is depicted in the high level flow charts shown in . After initiator block a computer receives a user input selecting one or more tasks preferably from a navigation tree pane that are to be consolidated into a task group block . As described above in a preferred embodiment these tasks are selected from names of tasks that correlate with e.g. are identical to user created task metadata. The selected tasks are consolidated into a task group block . The metadata for tasks in the newly formed task group is then associated with a user created task group metadata predefined metadata and related task resources block such that the task group can be identified and retrieved using the user created task group metadata. The process ends in this iteration at terminator block .

The task group can now be filtered retrieved and otherwise managed using the user created task group metadata. As shown in after initiator block a computer receives a user input of one or more user created task group metadata block . Each inputted user created task group metadata describes one or more task groups. Alternatively the computer can receive a user created name for a particular single task group. In either case the computer then retrieves relevant task groups block while filtering out any task groups that do not have the requisite user created task group metadata or user created task group name and presents the relevant task group as well as associated task resources or at least links such resources to the user block . The process ends the iteration at terminator block .

Note that in one embodiment in which UI resources are directly associated with specific tasks UI resources that are associated with the specific tasks are automatically displayed on a UI whenever the user that created the user created metadata logs onto her computer.

With reference now to there is depicted a block diagram of an exemplary client computer in which the present invention may be utilized. Client computer includes a processor unit that is coupled to a system bus . A video adapter which drives supports a display on which UI s described herein are displayed is also coupled to system bus . System bus is coupled via a bus bridge to an Input Output I O bus . An I O interface is coupled to I O bus . I O interface affords communication with various I O devices including a keyboard a mouse a Compact Disk Read Only Memory CD ROM drive a floppy disk drive and a flash drive memory . The format of the ports connected to I O interface may be any known to those skilled in the art of computer architecture including but not limited to Universal Serial Bus USB ports.

Client computer is able to communicate with a service provider server via a network using a network interface which is coupled to system bus . Network may be an external network such as the Internet or an internal network such as an Ethernet or a Virtual Private Network VPN .

A hard drive interface is also coupled to system bus . Hard drive interface interfaces with a hard drive . In a preferred embodiment hard drive populates a system memory which is also coupled to system bus . System memory is defined as a lowest level of volatile memory in client computer . This volatile memory may include additional higher levels of volatile memory not shown including but not limited to cache memory registers and buffers. Data that populates system memory includes client computer s operating system OS and application programs .

OS includes a shell for providing transparent user access to resources such as application programs . Generally shell is a program that provides an interpreter and an interface between the user and the operating system. More specifically shell executes commands that are entered into a command line user interface or from a file. Thus shell as it is called in UNIX also called a command processor in Windows is generally the highest level of the operating system software hierarchy and serves as a command interpreter. The shell provides a system prompt interprets commands entered by keyboard mouse or other user input media and sends the interpreted command s to the appropriate lower levels of the operating system e.g. a kernel for processing. Note that while shell is a text based line oriented user interface the present invention will equally well support other user interface modes such as graphical voice gestural etc.

As depicted OS also includes kernel which includes lower levels of functionality for OS including providing essential services required by other parts of OS and application programs including memory management process and task management disk management and mouse and keyboard management.

Application programs include a browser . Browser includes program modules and instructions enabling a World Wide Web WWW client i.e. client computer to send and receive network messages to the Internet using HyperText Transfer Protocol HTTP messaging thus enabling communication with service provider server .

Application programs in client computer s system memory also include a User Interface Resource Management Program UIRMP which includes code for implementing the processes and User Interfaces UIs described in . Such processes include but are not limited to maintaining the data and resources relationships described in detail in .

In one embodiment client computer is able to download UIRMP from service provider server preferably in an on demand basis.

Note that the hardware architecture for service provider server may be substantially similar to that shown for client computer . Similarly servers found in server farm may utilize a substantially similar architecture to that found in client computer .

Server farm includes servers that may provide resources such as the UI resources described above. Alternatively such UI resources and or task descriptors may be maintained within disk drive and or system memory of client computer or service provider server .

The hardware elements depicted in client computer are not intended to be exhaustive but rather are representative to highlight essential components required by the present invention. For instance client computer may include alternate memory storage devices such as magnetic cassettes Digital Versatile Disks DVDs Bernoulli cartridges and the like. These and other variations are intended to be within the spirit and scope of the present invention.

Note further that in a preferred embodiment of the present invention service provider server performs all of the functions associated with the present invention including execution of UIRMP thus freeing client computer from using its own resources.

It should be understood that at least some aspects of the present invention may alternatively be implemented in a computer useable medium that contains a program product. Programs defining functions of the present invention can be delivered to a data storage system or a computer system via a variety of signal bearing media which include without limitation non writable storage media e.g. CD ROM writable storage media e.g. hard disk drive read write CD ROM optical media and communication media such as computer and telephone networks including Ethernet the Internet wireless networks and like network systems. It should be understood therefore that such signal bearing media when carrying or encoding computer readable instructions that direct method functions in the present invention represent alternative embodiments of the present invention. Further it is understood that the present invention may be implemented by a system having means in the form of hardware software or a combination of software and hardware as described herein or their equivalent.

As described above in one embodiment the processes described by the present invention including the functions of UIRMP are performed by service provider server . Alternatively UIRMP can be deployed as software from service provider server to client computer . This deployment may be performed in an on demand basis manner in which UIRMP is only deployed when needed by client computer . In another embodiment process software for the method so described may be deployed to service provider server by another service provider server not shown .

As described above in an exemplary embodiment presently presented are a method and system that provides a user with the ability to organize User Interface UI elements in a manner that eases finding specific UI resources and or tasks. This is achieved by providing User Interface UI capabilities to annotate UI elements with specific metadata that makes sense to the particular user. The metadata could be used either to make searches possible using terminology that is natural to the user or to enable multiple ways of filtering navigation content e.g. to show a user only the specific set of control elements he finds relevant for the his task at hand or other control elements such as a portlet a Web page or a form . Since the metadata is expressed in terms provided by a particular user that user is freed from having to remember vendor specific terms for performing searches. The herein described method and system also allows the user to group together sets of control elements that he uses together to perform a personal task or that he uses on different days of the week or whatever organization approach is most natural to him. Thus the user can shape the navigation of a large scale user interface to match his personal vocabulary and work style without creating yet another object such as a bookmark file that has to be maintained. The presently disclosed method and system also allows the user to have multiple organizational levels such that tasks that are not appropriate for a particular time of day or type of task may be filtered out during a search of tasks or resources .

In one embodiment a user defines or assigns metadata or keywords to pages navigation elements for example nodes and leaves in a navigation tree and other interface control elements while using an application or viewing information for example a Web page . Since created by the user the user can later locate a UI resource using his own terminology rather than having to learn the application vendor s or content provider s vocabulary.

One embodiment of the present invention also includes a mechanism for the user to make personal notations add view modify delete notations individually and collectively and a mechanism to filter sort or search on vendor supplied user supplied or both types of keywords. These user specified annotations or metadata may be included in any search sort or filter action to locate matches.

As a further convenience a mechanism to categorize the individual or group node and leaves annotated navigational entries pages panels and content into user created categories can be provided. It is further noted that the user created task metadata and or user created group metadata is comprised of anything that the user finds helpful to locate a user interface resource including but not limited to timeframe references system data user data activity related data or any other data that has particular meaning to the user.

Note that the method steps described herein may be implemented in a computer system and may further be executed by instructions that are stored in a computer readable medium.

In another embodiment in which the methods described herein are performed by software that is stored on a computer readable medium the computer readable medium is a component of a remote server and the computer executable instructions are deployable to a client computer and or a supervisory computer from the remote server. This deployment may be provided by a service provider to a customer computer e.g. the client computer and or the supervisory computer on an on demand basis.

Note that while the creation and use of user created metadata is described for exemplary purposes as being used by the user who created the user created metadata such user created metadata can be shared with other users for their use.

While the present invention has been particularly shown and described with reference to a preferred embodiment it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention. Furthermore as used in the specification and the appended claims the term computer or system or computer system or computing device includes any data processing system including but not limited to personal computers servers workstations network computers main frame computers routers switches Personal Digital Assistants PDA s telephones and any other system capable of processing transmitting receiving capturing and or storing data.

