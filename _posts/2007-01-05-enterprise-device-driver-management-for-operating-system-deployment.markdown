---

title: Enterprise device driver management for operating system deployment
abstract: Enterprise driver management and image installation are described. In an implementation, a computer-implemented method is performed in which a determination is made as to whether drivers for a plurality of clients are available from an operating system to be installed on the plurality of clients. A report is then generated describing the availability of the drivers.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08117612&OS=08117612&RS=08117612
owner: Microsoft Corporation
number: 08117612
owner_city: Redmond
owner_country: US
publication_date: 20070105
---
As computers continue to proliferate ever larger collections of the computers may be configured to provide functionality in a variety of ways. One such configuration is commonly referred to as an enterprise system which may include tens of thousands and even hundreds of thousands of computers. The enterprise system for instance may be used by corporations to provide computer functionality to its employees such as through local execution of software and or remote execution of software through servers. The enterprise system is typically managed by one or more administrators that are tasked with keeping each of the computers functioning as desired.

The enterprise system however may include a variety of types of different computers such as servers desktop personal computers laptops personal digital assistants smart phones and so on. Further even the configurations of the computers in these various types may differ as the computers may be made by different manufacturers such as by including different hardware components e.g. display devices processors memory printers network access cards and other devices and software components such as applications and other code that is executed by the computers. Because of this diversity the maintenance of the computers may be difficult such as to manage drivers installed on each of the computers and to install disk images also referred to hereafter as images because of the diversity of drivers.

Operating system deployment is described. In an implementation a computer implemented method is performed in which a determination is made as to whether drivers for a plurality of clients are available in an operating system image to be installed on the plurality of clients. A report is then generated describing the availability of the drivers.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Enterprise systems may include a vast multitude of computers even numbering in the hundreds of thousands. Management of these computers by an administrator however may be difficult due to this vast number as well as the diverse configurations of computers that may be employed within the enterprise system.

Deployment of an operating system either from a disk image know as an image based install or original sources media in the enterprise system for example may be difficult because the system may include a variety of different computer models. Additionally these different computer models may originate from different manufactures that may each use different sets of drivers to talk to devices included with the computers. Previously the administrator was forced to manually interact with these different devices to determine and supply the different device drivers used to support the image which was resource intensive and therefore expensive.

Techniques are described in which driver compatibility reports may be automatically generated in an enterprise environment. This report may be generated in a variety of ways such as through the capture of plug and play information from devices included with a client such as monitors removable media devices input devices e.g. keyboards mice printers and so on. The report may then be used by the administrator to pre plan for a deployment of an image such as an operating system image to be installed on computers of the enterprise system. The report may be configured in a variety of ways such as to list missing or out of date drivers and may also list where the drivers may be found such as in the image to be deployed in a driver repository located within the enterprise system in a driver update service that is accessible in the cloud i.e. the Internet and so on. Further discussion of these techniques may be found in relation to the following figures.

In the following discussion an exemplary environment is first described that is operable to perform techniques to manage drivers and or install images in an enterprise system as well as other systems. Exemplary procedures are then described that may be employed in the exemplary environment as well as in other environments.

The client and the server are each illustrated as having respective processors and memory . Processors are not limited by the materials from which they are formed or the processing mechanisms employed therein. For example processors may be comprised of semiconductor s and or transistors e.g. electronic integrated circuits ICs . In such a context processor executable instructions may be electronically executable instructions. Alternatively the mechanisms of or for processors and thus of or for a computing device may include but are not limited to quantum computing optical computing mechanical computing e.g. using nanotechnology and so forth. Additionally although a single memory is shown respectively for the client and the server a wide variety of types and combinations of memory may be employed such as random access memory RAM hard disk memory removable medium memory and other types of computer readable media.

The clients may be configured in a variety of ways to be incorporated within the enterprise system as well as other systems. For example one or more of the clients may be configured as a computing device such as a desktop computer a mobile station an entertainment appliance a set top box communicatively coupled to a display device a wireless phone a game console and so forth. Thus the clients may range from full resource devices with substantial memory and processor resources e.g. personal computers game consoles to low resource devices with limited memory and or processing resources e.g. traditional set top boxes hand held game consoles . Thus each of the client devices may incorporate a variety of devices where d can be any integer from one to D to provide functionality to the client such as output devices e.g. monitors printers input devices e.g. keyboards mice pointers storage devices e.g. removable media devices disk drives peripherals and so on.

The client for instance may include an operating system which is illustrated as being stored in memory and is executable on the processor . The operating system may act as a layer to abstract the underlying functionality of the client to applications that are executed on the processor . For example the operating system may employ drivers where v can be any integer from one to V to enable these devices to interact with the client such as applications executed on the processor of the client through interaction with the operating system . However as previously described the client may include a wide variety of devices and be configured in a variety of ways and therefore each of the clients may include different drivers . The use of different drivers by different clients however may complicate management of the clients in an enterprise system especially with increasing numbers of clients .

An administrator for instance may interact with a system management module that is executed on a processor of the server and is storable in memory to manage the clients in the enterprise system . The system management module may be executed to provide a variety of functionality. For example the administrator may wish to install a disk image on one or more of the clients in the enterprise system such as an operating system image having a plurality of drivers where x can be any integer from two to X . Before deployment of the operating system image however the administrator may wish to pre plan the installation to minimize downtime of the clients and corresponding interruptions to users of the clients .

In an implementation the system management module is executed to generate reports indicating which devices are employed by the clients and what drivers correspond to those devices such that the operating system image may be successfully deployed. The system management module for instance may provide a monitoring module that is executed locally on each of the clients . The monitoring module may provide information regarding the devices and or software included on the client to the server . This information may be collected in a variety of ways further discussion of which may be found in relation to .

The system management module may then use this information to generate a report detailing the devices included in the clients and drivers used to support these devices when the operating system image is deployed to the client that correspond to those devices . After this determination the system management module may then ascertain as to whether those drivers are included in the drivers within the operating system image to be installed. In an implementation the system management module may also locate drivers that are not included in the operating system image such as from a driver repository within the enterprise system that includes a plurality of drivers where y can be any integer from two to Y or over the Internet in a driver update service that also contains a plurality of drivers where z can be any integer from two to Z . Thus the Administrator may be informed as to which drivers are to be used by the clients but also where those drivers may be found. Further discussion of report generation may be found in relation to .

The system management module may also be used to manage the drivers of the clients in the enterprise system in a variety of other instances. For instance the system management module may generate the report to determine whether updates to the drivers are warranted and if so automatically obtain the drivers without user intervention such as from the driver repository and or from the driver update service over the internet . Further discussion of driver updates may be found in relation to .

Generally any of the functions described herein can be implemented using software firmware hardware e.g. fixed logic circuitry manual processing or a combination of these implementations. The terms module functionality and logic as used herein generally represent software firmware hardware or a combination thereof. In the case of a software implementation for instance the module functionality or logic represents program code that performs specified tasks when executed on a processor e.g. CPU or CPUs . The program code can be stored in one or more computer readable memory devices e.g. memory . The features of the techniques to manage driver and install images described below are platform independent meaning that the techniques may be implemented on a variety of commercial computing platforms having a variety of processors.

The following discussion describes management and installation techniques that may be implemented utilizing the previously described systems and devices. Aspects of each of the procedures may be implemented in hardware firmware or software or a combination thereof. The procedures are shown as a set of blocks that specify operations performed by one or more devices and are not necessarily limited to the orders shown for performing the operations by the respective blocks. In portions of the following discussion reference will be made to the environment of .

Information is collected from the clients regarding devices of the respective clients block . For example the monitoring module may query plug and play devices of the client block . Plug and play devices are typically configured to talk to the client and more particularly an operating system and Basic Input Output System BIOS of the client to arrive an a configuration that enables the device and the client to work together such as through use of a device driver. A device driver is software that abstracts the functionality of a physical or virtual device. A device driver manages the operation of these devices and makes them available to the operating system and programs. Examples of physical devices are network adapters timers and universal asynchronous receiver transmitters UARTs . A variety of information may be collected such as a client GUID which is a unique identifier for a particular client assigned at the time the monitoring module was installed a device ID which is a unique id of a device instance on a given client a device name device description device hardware ids and compatibles ids taken from plug and play information and so on. Thus the information may be collected from the devices themselves which may be used to determine a configuration that enables operation with the client . This query may be performed in real time at preconfigured intervals and so on. A variety of other examples are also contemplated such as through remote monitoring through execution of the system management module .

The collected information is then provided to the system management module block . Continuing with the previous examples the monitoring module may store the information locally on the client and provide this information at predetermined intervals may provide the information when a change is detected and so on. In another one of the previous examples the system management module may scan the client at predetermined intervals in real time and so on. A variety of other examples are also contemplated. This information may then be used to generate a report further discussion of which may be found in relation to the following figure.

Device information is obtained that was collected from one of a plurality of clients block in the enterprise system . The information for instance may be provided according to the procedure of .

A determination is made as to whether a driver for device of the selected client is available in the image block . This determination may be made in a variety of ways. For example the operating system image to be installed may include a built in driver store that provides an application programming interface to list each of the drivers in the image. In another example a list may be formed through a search of drivers that are included in the image. This list may be generated in a variety of ways. For instance a search may be performed by the system management module through to image to determine which drivers are included in the image . In another instance the list may be generated on demand to ensure that the information is up to date. In yet another instance the list of drivers contained within the image may be generated when the image is imported or is updated. This list may then be stored in a database and queried when the report is viewed. In a further instance a static list of drivers may be maintained within the operating system image and included when it is shipped. A variety of other instances are also contemplated.

When the driver is available from the image yes from decision block data describing the availability is saved block such as to indicate which driver and where it is located i.e. the image. In an implementation a driver version and publication date may also be read even if the driver is included in the image such that a more recent driver may be located such as through the driver update service or driver repository.

A determination is then made as to whether another device is available in the client decision block . If so yes from decision block the procedure returns to determine whether a driver for the device of the selected client is available in the image decision block . If another device is not available no from decision block then a determination is made as to whether another client is available decision block . If so yes from decision block device information is obtained form information collected from one of the plurality of clients block i.e. another client is selected and the devices information for the selected client is obtained. When another client is not available no from decision block a report is generated from the saved data block further discussion of which may be found in relation to .

When the driver is not available from the image no from decision block a determination is made as to whether a driver for the device is available from a driver repository in the enterprise system decision block . The driver repository for instance may be used by the administrator to maintain drivers within the enterprise system that have been identified as corresponding to devices used by clients within the enterprise system . As previously described this determination may be performed regardless of whether the driver is located in the image such as to locate an updated driver.

When the driver is available from the driver repository yes from decision block data describing the availability is saved block and determinations are made as to whether additional devices and or drivers are available as previously described blocks .

When the driver is not available from the driver repository no from decision block an attempt is made to locate the device driver in a driver update service that is accessible via the Internet block to the enterprise system . The system management module for instance may query the driver update service which may contain a global list of drivers that may be queried and downloaded. For example once a driver is located the driver may be copied to the driver repository in the enterprise system block such that it is available during deployment of the operating system image . The driver update service for instance may be included as part of an update service that maintains a list of certified devices driver such as for patching purposes.

The driver update service for instance may be used for devices that do not have a local match within the enterprise system such as within the operating system image or the driver repository . A request to the driver update service may include hardware compatible IDs of the plug and play devices to be matched version architecture of the operating system image and so on. The update service may then search for matching drivers and return the location of compatible drivers. The compatible drivers may then be downloaded and automatically imported for use during deployment of the operating system. This mechanism may also be used to locate and provide updated drivers for the enterprise system further discussion of which may be found in relation to .

Thus to generate a report the administrator may select a collection of clients and select an image to be deployed to those clients. The system management module may then query device inventory information for the selected clients and generate a list of unique devices. This list along with the target image version e.g. operating system version and architecture may be used in a driver matching procedure which determines if there are compatible drivers for each device which may then be output as a report.

The report may be rendered in hypertext markup language HTML and may provide an option for the administrator to drill down to obtain more information. For example the administrator may select e.g. click an entry in the instances column to cause a list of devices to be output that have the corresponding device. The administrator may also select an entry in the driver update service column to be taken to a report that lists compatible drivers for the given device. A variety of other examples are also contemplated.

Although the report of is illustrated as indicating whether the driver is available from the image the repository or the update service a variety of configurations are contemplated. For example the report may indicate whether the driver is available within the enterprise system via the image or the repository and provide the option to the administrator to determine whether the driver is available from the service . As before a variety of other examples are also contemplated.

An aggregation of the collected information is formed block . For example a single listing may be formed for each combination of device and current driver being used for the device. The aggregation of the collected information may then be submitted to a service over an internet to determine whether updated drivers are available for the respective devices of the plurality of clients block . In this way a single request may be provided for the clients in the enterprise system without having to submit separate request by each of the clients thus conserving resources of the enterprise system . A response to the request may then be received which indicates locations of updated drivers which may then be installed. In an implementation the response may include the updated drivers.

The determination of whether a driver is compatible with a given device may be performed in a variety of ways. Each device for instance may have an ordered set of a vendor defined identification strings called hardware IDs and compatible IDs that indicate the set of interfaces that it supports. Each device driver may also have a similar set of identification strings also called hardware IDs and compatible IDs contained in an INF file for each operating system version and architecture that it supports. On a given operating system a device driver is considered compatible with a device if they have one of these identification strings in common.

There are a number of other things that can determine if a driver will actually be used for a specific device. For example a driver may also have some machine code that is executed at install time that performs custom checks to determine if it is compatible. Also an operating system may employ driver signing that can allow an enterprise administrator to only allow drivers that have been verified by a creator of the operating system to be installed on a machine.

Driver categories may also be employed which are administrator defined groups of drivers that can be used to control the drive matching process. For example the administrator may decide to classify some drivers as beta drivers and not allow them to be considered when performing driver matches because they have not yet passed all internal tests. A variety of other examples are also contemplated.

Although the invention has been described in language specific to structural features and or methodological acts it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or acts described. Rather the specific features and acts are disclosed as exemplary forms of implementing the claimed invention.

