---

title: Automation of bare metal recoveries
abstract: Completely recovering data stored on a hard disk or other computer-readable media of a computing system from scratch in an automated manner. Recovery information and post-restore customization data are stored on the backup medium that stores the backup of the computer-readable media of the computing system (e.g., operating system, application programs, user data, application data, etc.). The computing system is rebooted into a recovery environment where a recovery script automates the recovery of the backup. The recovery information and post-restore customization data are applied to the offline, recovered backup to ensure continuity. The computing system is rebooted into the recovered backup.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07694165&OS=07694165&RS=07694165
owner: Microsoft Corporation
number: 07694165
owner_city: Redmond
owner_country: US
publication_date: 20070503
---
Users regularly take backups of a computer using a backup application. The backups are stored on a backup storage medium. When the computer malfunctions e.g. due to operating system errors the user may need to perform a Bare metal recovery. Bare metal recovery is a term of art that generally refers to the process of recovering the contents of a hard disk from scratch e.g. the bare metal . To perform this type of recovery the computing device is booted into a recovery environment via a recovery boot medium. The recovery boot medium may be a compact disc digital versatile disc floppy disk partition on a hard disk or other medium from which the computing device can boot. During a bare metal recovery all data in the computer is recovered from a previous backup including the operating system application programs user state and other data. For example the recovery may involve repartitioning the disks restoring data setting the boot configuration injecting hardware drivers and finally booting into the restored operating system.

In existing bare metal recovery methods the user becomes an important element in ensuring that a recovery completes successfully. For example the user may manually change the boot device order to boot the computer into the recovery environment or boot into the restored operating system after recovery. Further on computers with a master boot record MBR there is not a standard way to access and change the boot order of devices such as through an application programming interface or user interface. The user has to go through the basic input output system BIOS to make changes to the boot order. Due to this need for user involvement existing systems do not allow automated and efficient development and testing of backup applications storage media and technologies that provide bare metal recovery solutions. Existing system also prevent administrators from restoring physically remote machines e.g. present in a different datacenter of the company .

Moreover during the bare metal recovery it is difficult to persist recovery information the automation process state and other information from the original operating system to the recovery environment in an automated manner. Maintaining recovery information post restore customization data and other state information on existing disks in the computer is not reliable because those disks may be erased and repartitioned during bare metal recovery. Further if such state information is stored on a network share and the network becomes inaccessible during the recovery e.g. enabling the network may compromise the recovery environment the recovery will fail.

Automated execution of recovery in the recovery environment also poses challenges. For example some existing methods rely on a recovery executing or triggered by a remote computer. If the network is not available this scheme does not work. Moreover enabling network access in a minimal recovery environment might expose the environment to malicious attacks e.g. a virus .

Embodiments of the invention include automate a bare metal recovery of a computing system. In an embodiment the invention receives a request for recovery of an operating system version on a target computing device. Responsive to the request the target computing device stores recovery information and post restore customization data on a backup computer storage medium. The target computing device is booted into a recovery environment and a recovery script triggers recovery of the requested operating system version using the recovery information. Any post recovery customization is applied to the recovered operating system version to for example clear out any transient information. The target computing device is rebooted into the recovered operating system.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

In an embodiment the invention completely recovers a computing device such as a target computing device in in a self automated fashion. In embodiments of the invention the recovery is automated locally to the computing device without user intervention or aid. There is no need for a remote computer to control the recovery as in existing systems. Aspects of the invention implement a bare metal recovery to restore all data associated with the target computing device including but not limited to an operating system application programs and other data such as application or user data. The recovery information post restore customization data and other information is maintained in a backup storage medium that contains the backup. In an embodiment the backup storage medium is always accessible during the recovery and is never erased. Hence this information is safe and always available. Further a recovery script is triggered through a boot script of the recovery environment thus avoiding any external connectivity.

A user takes a backup of the target computing device using a backup application. The backup is stored on a backup computer storage medium such as an external or internal disk or other medium. In the exemplary operating environment of the user interfaces with the target computing device to request recovery of a target computer readable medium . The target computing device includes or has access to at least one target computer readable medium . The target computer readable medium comprises any storage available to the target computing device . For example the target computer readable medium includes a hard disk partitions on a hard disk random access memory RAM in firmware or a flash drive. The target computer readable medium in the example of has a master boot record MBR and a partition table . The MBR is known in the art. The MBR has been described for example as the first sector of the first computer readable medium of the target computing device . This memory area is read upon startup of the target computing device . The MBR includes instructions that locate the system e.g. startup partition of the hard disk and then read and execute the instructions located in the first sector of the system partition. The system partition is also known in the art.

While embodiments of the invention are described with reference to MBR systems embodiments of the invention are operable with other platforms and means of interfacing an operating system with computing hardware. For example embodiments of the invention are operable with computing systems using the extensible firmware interface EFI .

The target computing device further includes or has access to the backup computer storage medium . The backup computer storage medium stores for example an operating system version recovery information and at least one recovery script . In another embodiment not shown the recovery script is stored on a medium other than the backup computer storage medium e.g. on a flash drive or a network share . The operating system version corresponds to a full backup of the contents of the target computer readable medium at a particular time including the operating system application programs user data application data etc. The target computing device also has access to a boot device e.g. external such as a compact disc drive a digital versatile disc drive a flash drive a network server and the like. The boot device enables the target computing device to boot into a recovery environment since the target computer readable medium will be erased during recovery. The boot into the recovery environment occurs for example via a recovery boot medium storing a bootable operating system e.g. a reduced or minimal operating system .

Referring next to an exemplary block diagram illustrates the interaction between the elements of the exemplary operating environment of . At a target computing device receives a request for a bare metal recovery of a backup of an operating system stored on a backup computer storage medium . The request may come from a user or be triggered automatically by an event. At some time before receiving the request one or more full backups of a target computer readable medium were performed and stored on the backup computer storage medium . The backups include associated application programs user data application data configuration settings etc. The backup computer storage medium stores the plurality of backups with each corresponding to a different state of the target computing device or to a different time. At the target computing device stores responsive to the received request recovery information associated with the received request on the backup computer storage medium . The recovery information includes for example identification of the requested backup e.g. an identifier corresponding to the requested backup and any other options for the restore operation e.g. whether disks should be partitioned or not . The target computing device may also store post restore customization data automation state information or the like on the backup computer storage medium as this medium is the only medium that will not be modified during the bare metal recovery. Any other medium will be erased reformatted repartitioned or otherwise overwritten with data. Persisting the automation process state on the backup computer storage medium ensures the safety and availability of the state information during the recovery. Embodiments of the invention also configure the recovery environment to execute a recovery script automatically upon boot. For example a boot script stored on the recovery boot medium is modified to trigger execution of the recovery script upon reboot.

At the target computing device accesses a partition table in an MBR associated with the target computer readable medium . The partition table describes a plurality of partitions including a system partition associated with the target computer readable medium . The partition table has a boot flag associated with each of the plurality of partitions. Each boot flag has a value indicating whether the associated partition is active or inactive. Boot code in the basic input output system BIOS of MBR based computing devices boots into a partition that is marked active in the partition table in the MBR of the target computer readable medium . If no partition is marked active then the boot code proceeds to the next available boot device . Thus by marking a partition active or inactive the boot order may be switched between the target computer readable medium and the device next to it in the boot sequence. Alternatively if the backup computer storage medium is actually another partition on the target computer readable medium this partition may be marked active so that the boot code boots the target computing device into this partition for the recovery.

At the target computing device sets the value of the boot flag of the system partition to indicate that the system partition is inactive. The procedure for setting the value of the boot flags in the partition table is known in the art. With the boot flag of the system partition set to inactive the target computing device looks to the next device in the device boot order upon the next reboot. In an example the next device is a compact disc drive or other device capable of booting the target computing device into the recovery environment.

The recovery environment includes for example another operating system such as a reduced operating system or a special purpose operating system. In such an operating system only the basic functions of the target computing device are supported e.g. no extra hardware drivers no network connectivity etc. .

Upon rebooting into the recovery environment at a recovery script or other software for automating the recovery automatically executes. For example boot up or boot time scripts associated with the target computing device e.g. stored on the backup computer storage medium may be edited or otherwise modified to identify and execute the recovery script or invoke automation binaries to trigger the recovery. Accessing the recovery script from within the boot up scripts ensures that the recovery will occur. If the recovery script was stored on a system that became unavailable during the recovery the recovery would fail.

During execution of the recovery script the target computer readable medium is prepared to receive the requested backup of the operating system version. For example the target computer readable medium is completely erased reformatted repartitioned or the like. The requested backup of the operating system is restored recovered or otherwise retrieved from the backup computer storage medium at . The requested backup of the operating system including application programs and other software is then applied to the target computer readable medium .

Before and or during the recovery the recovery information stored on the backup computer storage medium is accessed. For example the recovery information may include data describing the requested backup of the operating system. In this manner the recovery script is able to identify and restore the requested backup. In addition other data from the accessed recovery information may be obtained and applied to the restored backup of the operating system at . For example user settings e.g. in a registry preferences profiles and the like are applied to the restored backup of the operating system. Additionally continuity data may be stored on the recovered backup of the operating system. For example a log file or other repository of post restore customization data on the target computer readable medium may be updated to reflect a date and time of the operating system recovery and to identify the particular operating system recovered. Additional settings may be configured e.g. in a registry patches may be applied or other post recovery clean up may occur. For example applying the post restore customization data may clear out any transient information from the restored operating system to ensure continuity of automation. This offline modification of the restored operating system ensures automation continuity. Without such modification after restoration the state of the automation process reverts to the time of the backup of the operating system version.

When recovery is complete the recovery script operates to reset the value of the boot flag of the system partition to indicate that the system partition is active at . The target computing device is then rebooted into the recovered operating system at . Since the target computer readable medium precedes the boot device in the device boot order the target computing device boots from the target computer readable medium storing the newly recovered operating system and application programs user data etc. .

The operations illustrated in with the exception of the user sending the recovery request to the target computing device in an embodiment may execute or be performed without user intervention. As such the recovery solution illustrated in is completely automated.

Referring next to a block diagram illustrates an exemplary computer readable medium on which aspects of the invention may be stored. In an embodiment one or more computer readable media such as computer readable medium have computer executable components for implementing aspects of the invention. The components include an interface component a state component a boot component a restoration component and a post restore component . The interface component receives a request for recovery of a backup of software installed on a target computing device. The backup of the installed software is stored on a backup computer storage medium. The state component responsive to the request received by the interface component stores recovery information on the backup computer storage medium. The recovery information is associated with the request and with post restore customization data for the target computing device. The boot component reboots the target computing device from a boot device. Alternatively or in addition the boot component configures the target computing device to boot from the boot device.

The restoration component interfaces with a backup application to restore the backup of the installed software from the backup computer storage medium to the target computer readable medium. The restoration component e.g. via the backup application in an embodiment accesses the recovery information stored by the state component on the backup computer storage medium. The post restore component applies the recovery information accessed by the restoration component to the restored software on the target computer readable medium.

The operation of the embodiments in and may be implemented by computer executable instructions organized into the computer executable components stored on the computer readable medium . Embodiments of the invention include a processor e.g. such as included in target computing device in configured to execute the computer executable instructions. Upon execution the computer executable instructions implement aspects of the invention. Aspects of the invention may be implemented with any number and organization of such components or modules. For example aspects of the invention are not limited to the specific computer executable instructions or the specific components or modules illustrated in the figures and described herein. Other embodiments of the invention may include different computer executable instructions or components having more or less functionality than illustrated and described herein.

Computer readable media such as computer readable medium which include both volatile and nonvolatile media removable and non removable media may be any available medium that may be accessed by the service. By way of example and not limitation computer readable media comprise computer storage media and communication media. Computer storage media include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. For example computer storage media include RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium that may be used to store the desired information and that may be accessed by the computing device. Communication media typically embody computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and include any information delivery media. Those skilled in the art are familiar with the modulated data signal which has one or more of its characteristics set or changed in such a manner as to encode information in the signal. Wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media are examples of communication media. Combinations of any of the above are also included within the scope of computer readable media.

Referring next to an exemplary flow chart illustrates restoration of an operating system version including application programs and the like from a backup medium. The method illustrated in waits for receipt of a recovery request at . Upon receipt of the recovery request recovery information associated with the received request and post restore customization data or other state data are stored on the backup computer storage medium at . Some of the recovery information or the post restore customization data may be generated if not readily available. The target computing device is rebooted into a recovery environment at . A recovery script is executed to restore the requested operating system version from the backup computer storage medium to the target computer readable medium at . The recovery script accesses the recovery information before and or during the recovery. After completion of the recovery at additional data from the recovery information and the post restore customization data are applied to the recovered operating system version at . The target computing device is rebooted into the recovered operating system at .

Although described in connection with an exemplary computing system environment embodiments of the invention are operational with numerous other general purpose or special purpose computing system environments or configurations. The computing system environment is not intended to suggest any limitation as to the scope of use or functionality of any aspect of the invention. Moreover the computing system environment should not be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the exemplary operating environment. Examples of well known computing systems environments and or configurations that may be suitable for use with aspects of the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics mobile telephones network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

In operation a computer or other general purpose computing device executes computer executable instructions such as those illustrated in the figures and described herein to implement aspects of the invention.

The order of execution or performance of the operations in embodiments of the invention illustrated and described herein is not essential unless otherwise specified. That is the operations may be performed in any order unless otherwise specified and embodiments of the invention may include additional or fewer operations than those disclosed herein. For example it is contemplated that executing or performing a particular operation before contemporaneously with or after another operation is within the scope of aspects of the invention.

When introducing elements of aspects of the invention or the embodiments thereof the articles a an the and said are intended to mean that there are one or more of the elements. The terms comprising including and having are intended to be inclusive and mean that there may be additional elements other than the listed elements.

Having described aspects of the invention in detail it will be apparent that modifications and variations are possible without departing from the scope of aspects of the invention as defined in the appended claims. As various changes could be made in the above constructions products and methods without departing from the scope of aspects of the invention it is intended that all matter contained in the above description and shown in the accompanying drawings shall be interpreted as illustrative and not in a limiting sense.

