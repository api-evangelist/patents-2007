---

title: Virtualization method and apparatus for integrating enterprise applications
abstract: A method and apparatus is provided for integrating an application into a network of computing resources. Applications using this integration have a virtualized access to one or more computing resources associated with the network. Virtualization is generally assured through at least one network connection between the virtual layer and the native network. Together, the virtual access is used to generate a virtual application network capable of providing the application access to the network of computing resources. The application is created into an orchestration of operations to manipulate the one or more computing resources according to a business process. As needed, the application and orchestration can be further partitioning into components to be distributed and executed over the virtual application network using the virtualized access.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08296433&OS=08296433&RS=08296433
owner: International Business Machines Corporation
number: 08296433
owner_city: Armonk
owner_country: US
publication_date: 20070515
---
This application relates to and claims priority in part to U.S. application Ser. No. 10 444 635 filed May 22 2003 and titled Application Network Communication Method and Apparatus which is incorporated herein by reference. This application also relates to the subject matter disclosed in provisional U.S. application Ser. No. 60 383 174 filed May 22 2002 herewith titled Application Network Communication Method and Apparatus which is hereby incorporated by reference in its entirety.

Many companies leverage computer systems and software applications to improve their efficiency and organization in business. Often these systems are integrated together allowing information from one software application or system to be used or analyzed by another software application or system. Benefits associated with integrating and using these computer systems and software in business are numerous and include tighter control over inventory improved financial forecasting streamlined information flow internally and externally and sales force automation.

The various benefits of leveraging computer technology generally justifies the hiring of large information technology IT staff to keep these computer systems operational and communicating with each other. Often these IT departments are saddled with the task of integrating many disparate computer systems and software applications in attempt to make corporate information flow more freely and securely.

Unfortunately the increasing complexity of integrating these large computer systems and software applications in a company has made systems integration a daunting and expensive task. Systems integration projects have become complicated requiring specialized knowledge of applications protocols communications hardware and other areas that the IT staff at a given company may not possess. Even with the proper knowledge and training most IT departments are too small to complete large scale systems integration projects in a reasonable time frame.

Consequently a large number of system integration projects require customized development completed using consultants or outsourced to system integrators that specialize in integrating these large scale systems. The solutions involve integrating the data and business logic between several existing applications and frequently involve complex solutions. Because the work is outsourced and or complex these customized solutions can also be very expensive. Maintaining software as the companies grow and their needs change may also cost a great deal of money as the same consultants may be needed after the initial systems integration effort is put in place.

In attempt to reduce costs and expedite the integration many companies are exploring system integration tools methodologies as an alternative to customized software development. These solutions include enterprise application integration EAI solutions and application server technologies The EAI solution provides a solution to some of the system integration problems but requires a company to commit to a proprietary platform. Application server solutions are also useful but also involve proprietary protocols. Scalability is also a problem with these methodologies as companies grow and demand more processing power and throughput from their systems. Integrating applications across enterprises presents additional problems dealing with firewalls security access control and other systems.

One aspect of the present invention includes a method apparatus and computer program product to integrate an application into a network of computing resources. Applications using this integration have a virtualized access to one or more computing resources associated with the network. Visualization is generally assured through at least one network connection between the virtual layer and the native network. Together the virtual access is used to generate a virtual application network capable of providing the application access to the network of computing resources. The application is created into an orchestration of operations to manipulate the one or more computing resources according to a business process. As needed the application and orchestration can be further partitioning into components or suborchestrations to be distributed and executed over the virtual application network using the virtualized access.

The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other Features and advantages of the invention will become apparent from the description the drawings and the claims.

Aspects of the present invention provide one or more of the following advantages. Large and small scale applications can be deployed to take advantage of various computing resources available locally or across an enterprise. To simplify access and integration a virtual application network VAN layer is overlaid across an enterprise network potentially having firewalls access control and other security mechanisms. The VAN layer provides a conduit for the applications to access the computing resources across the enterprise network without reconfiguring the network and access permissions.

Rapid deployment of enterprise applications is possible even when the computing resources are disbursed over wide geographic areas. The VAN layer obviates the need for each application to gain permissions and authorization to access each computing resources at each geographic or logical division of the network. Once the VAN layer is established the VAN moderates access and security to the computing resources. Applications can be installed locally and remotely more reliably without extensive concern over firewalls and other security mechanisms creating an impasse scenario.

The visualization layer provided by the VAN layer also allows complex distribution and use of computing resources. The virtual access to computing resources provided through the VAN allows the application deployment to be configured and reconfigured quickly. Concern over configuring access for each application to each computing resources is reduced from the point of view of the application the computing resources are accessed in a uniform manner even though some of the computing resources may be accessed locally and others accessed across great distances spanning multiple network protocols and security methods. Changing the enterprise applications to incorporate new business processes also does not require reconfiguring the entire application and network access methods.

Specifically application set includes applications app through app application set includes applications appthrough app and application set includes applications app through app. For example application set may include all the enterprise applications used for a manufacturing division of a company while application set includes enterprise applications used in the sales and marketing division of a company. For the same company application set may further include corporate enterprise applications concerning financial management human resources corporate lax and accounting research and other corporate wide functions. These application sets and can be physically located in a single geographic location or distributed internationally. Alternatively each application set and may correspond to all the enterprise applications within different subdivisions. In this case each application set and may include enterprise applications for manufacturing sales marketing and corporate operations previously described and performed at different corresponding divisions in a company.

In either implementation above or in other configurations it is often necessary for applications in one or more application sets to communicate across application network in accordance with implementations of the present invention to other applications in other application sets. Typically enterprise applications need to share critical information about a company or business as well as integrate different workflow requirements for example a manufacturing or shipping application providing just in time services may need to receive information gathered from purchase orders in a sales force automation application. Workflow in the manufacturing application may require payment to be made in advance before starting manufacturing and also may need to coordinate the manufacturing with another materials procurement or inventory management application located elsewhere in an enterprise. At each junction applications need to accurately and efficiently share information and ensure certain steps are performed according to specific workflow requirements needed in each area.

Application network can also provides secure communications capabilities between the applications in application sets and and users operating these various applications. In this example implementation application network includes application router application router application router application router and application router configured to transmit application data to each other over conventional network using secure methods involving encryption authentication and authorization of users and applications. Application level security features implemented within application routers allows access or denies access based on detailed transactional and or application information in addition to storage partitions file distinctions or other logical storage boundaries that may exist.

As described in detail later herein the VAN layer designed in accordance with aspects of the present invention maintains these and other security features across application network . The VAN layer is a part of application network that not only virtualizes the network access but makes the computer resources available to the applications through a specialized interface or API application programming interface . Through visualization the VAN layer provides a uniform interface to the applications and the appropriate protocol necessary to implement the various workflow and business processes. Moreover the VAN layer makes geographic distances security and other enterprise network considerations transparent to the one or more different applications operating within application network .

Specific operational details associated with a business process and the corresponding applications determine the logical flow of data for example a first application may be granted access to data from a second application if the data associated with the second application was previously or originally created by the first application. Of course the first application can be granted various levels or read and or write permissions by the second application explicitly after data in an application has been created. Application level security granularity allows application data to be securely administered based on transactions or records even if the data is under the same enterprise applications. Alternatively if lower security is required then application routers can be configured to share all data between different applications associated with one or more application routers.

Once security is determined and processed application data travels over conventional network carried by TCP IP SNA. Novell Netware or any oilier similar network protocol capable of providing access to a layered network communication model or any other equivalent general purpose networking protocol. In practice conventional network also includes conventional routers switches repeaters and other networking devices familiar to those skilled in the art and used for general purpose broadband or local area networking. A VAN layer implemented in accordance with aspects of the present invention is carried over TCIP IP or other native networking protocol providing a virtualized layer to interface between the applications and the underlying conventional network .

Application routers and include conventional routing technology along with application routing functionality and visualization in accordance with implementations of the present invention. Application routing operations receive application data convert the application data into a neutral format and then route the data to the appropriate application through one or more application routers in application network . For example the neutral format can be implemented using an XMI compatible language and protocol. Further application routers convert the neutral format data back into a proprietary application protocol when communicating data back to an application.

Published information facilitates associating one application in the application network with one or more other applications on the application network . Application routers exchange metadata and other information about different applications and then associates the different applications together. This association process maps data fields from the data structures used in a first application the source application with corresponding data fields from the data structures of a second application the target application.

Field type and other type processing performed in accordance with the implementations of the present invention ensure these field mappings are going to be compatible during run time. Many of the type compatibility issues deal with data formats and cardinality issues associated with groups of data. In some cases lower level compatibility may require swapping byte order or filing data with default values to accommodate low level formatting differences that may exist between data in the various data structures. Once the mapping has been assured application routing commences between the source and target applications as they are processing application data .

Implementations of the present invention automatically or manually perform association between app and app based upon the metadata thereby connecting application data with application data according to their respective logic and logic . Mapped fields between app and app are further analyzed to determine compatibility during runtime. Field type incompatibilities may be modified in response to this analysis to ensure subsequent compatibility during runtime. Consequently once these steps are complete routing performs application routing is capable of facilitating applications exchange their respective pools of information.

As previously described integrating applications into enterprise networks is further complicated due to inconsistent protocols or versions firewalls security policies and other considerations peculiar to each combination of nodes on the network. Enterprise networks generally implement slightly different hardware and software solutions as different locations within an enterprise grow and or are acquired. Accordingly the application network illustrated in is deployed over a virtual application network VAN layer in accordance with implementations of the present invention to reduce complications due to these and other differences and simplify application layer communications.

In this example a business has deployed a web application made available over Internet and an enterprise application within the confines of corporate intranet . Generally these and other enterprise types of applications require stateful operation and have complex interdependencies with specific timing and data processing requirements. For example web application could be a banking application that queries bank account information or a point of purchase interface for ordering manufactured products. In both cases the web requests may depend on accessing several different computing resources with a complex set of interdependencies. These dependencies may include first accessing a banking database with bank account information to verify funds before a manufacturer will accept an order and manufacture certain materials or products. It may also include verifying from a raw materials database the availability and deliverability of certain raw materials involved in fulfilling the manufacturing order request.

Applications and other stateful processes use implementations of the present invention to distribute processing over application network . For example a web request from web application initially passes over Internet and becomes demultiplexed through a load balancer to one of web server web server or web server . These web servers and send requests through a application network manager ANM identified in as ANM which in turn identifies an appropriate application router and computing resource to fulfill the request. While many combinations are possible one arrangement assigns each ANM management of a single group having one or more sectors of application routers. In the example illustrated in . ANM manages a group identified as group having a single sector identified as sector and containing application routers identified in this case as AR AR and AR along corresponding computing resources used for storage referred to as database DB database DB and database DB respectively.

During configuration an orchestration is created that represents an application and the distribution of processes associated with the application across application network . Different portions of the orchestration are downloaded to each ANM and AR in application network depending on the particular configuration design. For example the portion of the orchestration processed by AR AR AR and corresponding databases DB DB and DB are managed by ANM . Because ANM monitors these computing resources it may only be necessary to include certain stubs or identifiers from the orchestration into ANM to achieve the necessary monitoring activities.

For example the orchestration may specify that certain database requests are sent to certain application routers and contingent or dependant on results from other databases and application routers. One request from web application may first require database information from DB and then DB before the request can be fulfilled. It is also possible thai the request from web application is further processed by enterprise application before it can be completed. This would further require the orchestration for the application to involve ANM and computing resources and application routers from the two sectors depicted pictorially in group .

As described in further detail later herein a VAN designed in accordance with implementations of the present invention makes communication across various nodes in application network possible in a manner transparent to the application or applications of the orchestration. The VAN provides an additional layer of communication that bridges various geographies security mechanisms and other differences in corporate intranet or other enterprise networks and allows applications to communicate more directly. Applications can be more readily installed across an enterprise once the VAN has been configured to provide the necessary networking services. More importantly the orchestration associated with an application can be redistributed within an enterprise without extensive work reconfiguring security firewalls protocols and other networking details.

VAN stack establishes at least one connection to the application network through conventional network stack and facilitates subsequent communication between an orchestrated application and the underlying conventional network. The example VAN stack virtualizes access to conventional network stack through a sysnet layer . Sysnet layer provides a data to the underlying conventional network in a manner acceptable to the firewall security and other mechanisms if any of conventional network . Instead of requiring multiple connections for each application sysnet layer combines packets from multiple applications and passes them through at least one network connection to the underlying conventional network stack .

Separately managed security layer provides a variety of security mechanism for data passing through VAN stack . These security mechanisms including but are not limited to SSL IPSec PPOE Firewalls and other approaches. Virtual Ethernet layer VETH layer simulates the physical Ethernet layer to process the packets of data received at the upper layers of VAN stack .

VIP6 layer virtual internet protocol version 6 simulates all aspects of a IP6 packet protocol including multicast secure multicast and other more complicated protocols useful to an application. For example VIP6 layer makes multicasting protocol available to an application riding VAN stack even though one or more nodes tin the underlying enterprise network may not readily accept such data streams. To maintain compatibility an orchestrated application can communicate multicast with all nodes in the enterprise network allowing VAN stack to convert those communications to a unicast communication when needed or leave the communication in multicast if possible. This greatly simplifies the integration of large scale distributed applications deployed across heterogeneous networks. It is also worth noting that many other protocol enhancements or variants of IP can also be deployed through VIP6 layer as the VAN stack ensures there is at least one connection available through various nodes in the underlying conventional network.

VTCP6 layer virtual transport communication protocol version 6 allows connection oriented communication with guaranteed delivery of packets in order of transmission and operates much like TCP layer of conventional network stack . In this case VTCP6 layer may also carry orchestration information between various application network managers ANM and application routers AR to facilitate deployment of distributed and orchestrated applications. This orchestration information between the ANMs and ARs of the application network makes sophisticated distributed processing of applications possible. It also makes it possible to re engineer and re distribute such applications across modified topologies or different nodes in the application network without significant reconfiguration or re engineering of the underlying conventional network.

While it is not apparent from the illustration first suborchestration may be located on a single computer or a small cluster of computers in one geographic area or in a logical portion of the network. Second suborchestration has an FTP based computer resource a connector and a transform operation . This second suborchestration may be separately created based on the availability of FTP based computer resource and the geographic distance from first suborchestration . However it should be noted that both portions of the application in first suborchestration and second suborchestration do not need special network configuration or security exceptions to operate as they rely on services provided by the VAN layer as previously described. For example first suborchestration and second suborchestration may each exist behind at least 2 different firewalls yet the VAN layer allows them to directly communicate without specially configuring the firewalls or other network devices at either end of the network.

Further third suborchestration is capable of receiving data from both first suborchestration and second suborchestration through connections provided by the VAN layer VAN stack in provides a virtual connection as well as providing timing features to coordinate interdependencies of data arriving from the various suborchestrations of the application. In this example third suborchestration receives data into application logic while also exchanging data with both a transform and a transform . Additional application logic and may be necessary to operate on the data as required by the particular application and business requirements needed in the enterprise.

The VAN layer ensures one or more suborchestrations are able to communicate over the underlying conventional network without individually configuring each underlying node or nodes to accept the protocols required by the suborchestrations. The suborchestrations rely on the virtual communication paths setup and made available through services of VAN stack . Further changes to the suborchestrations and use of computer resources does not require reconfiguration of the conventional network stack as it is also taken care of by the VAN layer.

Next a VAN network is created by providing the application access to the network of computing resources through the virtualized access . Each of the connections between the application and the computing resources is opened and made ready for communication. For example a single unicast connection to a conventional network can be used to simulate a multicast connection between one suborchestration of an application and another application or suborchestration.

With the connections made available an orchestration of operations is created to manipulate the one or more computing resources according to a business process . The overall orchestration is a set of operations that reflects both the business process requirements and certain application requirements needed to address these business process requirements. In many cases the orchestration may be initially designed as a monolithic solution and later divided according to the underlying enterprise network and infrastructure available.

Next operations in the orchestration are partitioned into components to be distributed and executed over the virtual application network using the virtualized access . These components can be referred to as suborchestrations as they are contained within the original orchestration and coordinate many different computing resources they can also be referred to simply as components. Division of the application into these suborchestrations or components is made in consideration of the underlying infrastructure and availability of computing resources.

Once the distribution of operations is complete the application is executed as an orchestration of operations distributed across the virtual application network . Security firewall and other issues associated with accessing underlying computer resources are taken care of through the VAN stack and network. The orchestrated application does not need to be specially configured to perform multicast or pass through a firewalled portion of an enterprise network. These particulars arc ensured before the application is configured and executed by way of the VAN layer.

A determination is made after execution to see if the operations being executed meet a set of business process requirements . These business process requirements can be performance oriented requirements based on certain dependencies and datasets being available and ready at the proper times or any other evaluation criteria for any of these or other reasons the partitioning of the application can be adjusted in real time to better fit the business processing requirements and a new orchestration of the application made . Major changes to the enterprise network are not required as the VAN layer handles necessary security firewall or other networking issues. Alternatively if the orchestration is appropriate then the orchestration of the operations for the application continues execution over the application network without modification .

Assuming there is not at least one communication path capable of providing communication between the application and the computing resources of the network it may be necessary to open a new network communication path to the computing resource in the application network . Of course if it is not possible to establish at least one network connection to the computing resources then it may not be possible to virtualize the access.

Provided there is at least one communication path a determination is made if the application has the required protocols . If the protocols needed are not available aspects of the present invention simulate the one or more protocols necessary for the application using the communication path and an associated native protocol already available over the communication path . For example implementations of the present invention may use one or more unicast connections to simulate a multicast connection across a firewall or otherwise secure point in an enterprise network that does not provide or allow multicast communications. To avoid unwanted network traffic across the VAN layer aspects of the present invention may limit access to the computing resources and communication paths to orchestrated applications .

One implementation of the present invention determines areas that computing resources are available within the VAN . If computing resources fall into natural geographic areas or other areas that can be delineated then the divisions of the business process are made into one or more suborchestrations. These divisions generally correspond to the different geographic or other areas of the VAN having the requested computing resources . These divisions then lead to associating the one or more suborchestrations to the areas of the VAN having the identified computing resources . Alternatively it is also possible that the computing resources are in one area rather than multiple areas and thus the complete orchestration is associated with an area of the VAN and suborchestrations or additional components are not required . It should be understood that geographic area or any other area criteria represents only one possible solution for dividing an application into suborchestrations or components. Many other criteria mentioned previously directly indirectly or alluded to in the previous description arc also contemplated for distribution of an application across an enterprise.

In one implementation memory includes an orchestrated application to be distributed for execution across an application network visualization access component a protocol communication simulation component an application orchestration division component and a run lime module that manages system resources used when processing one or more of the above components on system .

While examples and implementations have been described they should not serve to limit any aspect of the present invention. Accordingly implementations of the invention can be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of them. Apparatus of the invention can be implemented in a computer program product tangibly embodied in a machine readable storage device for execution by a programmable processor and method steps of the invention can be performed by a programmable processor executing a program of instructions to perform functions of the invention by operating on input data and generating output. The invention can be implemented advantageously in one or more computer programs that are executable on a programmable system including at least one programmable processor coupled to receive data and instructions from and to transmit data and instructions to a data storage system at least one input device and at least one output device. Each computer program can be implemented in a high level procedural or object oriented programming language or in assembly or machine language if desired and in any case the language can be a compiled or interpreted language. Suitable processors include by way of example both general and special purpose microprocessors. Generally a processor will receive instructions and data from a read only memory and or a random access memory. Generally a computer will include one or more mass storage devices for storing data files such devices include magnetic disks such as internal hard disks and removable disks magneto optical disks and optical disks. Storage devices suitable for tangibly embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices such as EPROM EEPROM and flash memory devices magnetic disks such as internal hard disks and removable disks magneto optical disks and CD ROM disks. Any of the foregoing can be supplemented by or incorporated in ASICs.

While specific embodiments have been described herein for purposes of illustration various modifications may be made without departing from the spirit and scope of the invention. Accordingly the invention is not limited to the above described implementations but instead is defined by the appended claims in light of their full scope of equivalents.

