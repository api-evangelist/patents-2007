---

title: Method and system for providing a graphical workflow monitor
abstract: A browser based workflow monitor uses a graphical user interface (GUI) to display workflow status information and to create log information. The monitor presents the log information to a user in a format that is easily understood. Workflow information is accessed from a user workstation via a data network and displayed within a browser application.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08204851&OS=08204851&RS=08204851
owner: Verizon Patent and Licensing Inc.
number: 08204851
owner_city: Basking Ridge
owner_country: US
publication_date: 20070402
---
Automation of organizational activities poses a tremendous challenge in that routine tasks associated with a particular service or product involve complex interactions between technology resources and human resources. Although communications technologies have assisted with increasing productivity such technologies traditionally have been deployed in an ad hoc manner resulting in inefficiencies with respect to resource utilization. Therefore workflow management systems have been deployed however these systems constitute a significant investment above other infrastructure costs.

There is presently no simple cost effective way for a user to determine the precise point in a multi step workflow process. Traditionally workflow management tools require users to parse through workflow status logs in order to determine the process history and the current status of the workflow. To address this users can install client software on their desktops unfortunately these software packages are vendor specific and implementation dependent. Furthermore different workflow management products require installation of different software packages to view a particular workflow process.

Based on the foregoing there is a clear need for approaches that enable a user to quickly and efficiently access information about a workflow process avoiding manually intensive tasks and reliance on vendor specific implementation dependent software packages.

An apparatus method and software for providing workflow monitoring are described. In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the various exemplary embodiments. It is apparent however to one skilled in the art that the various exemplary embodiments may be practiced without these specific details or with an equivalent arrangement. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the exemplary embodiments.

Although the various exemplary embodiments are described with respect to browser application it is contemplated that these embodiments have applicability to any graphical user interface GUI .

The workflow engine in one embodiment manages and executes modeled business processes. In addition the workflow engine may interpret the process definitions and interact with workflow participants. In this example workflows and associated activities are related to the service provider . A workflow relates to executing one task following another in accordance with specific business rules and conditions. Such workflow activities are processed by the workflow management system . The workflow engine logs for example status information associated with the workflows this process is more fully explained below. The resultant information from the analysis accessible by a browser application e.g. Microsoft Internet Explorer or Netscape etc. which is resident on a computing device . In this instance the computing device is a desktop personal computer however it is contemplated that the device can include any device capable of supporting a browser application e.g. Personal Digital Assistant PDA web appliance cellular phone laptop etc. The device communicates with the workflow management system via a data network this network can include a public data network such as the global Internet as well as a private intranet. For example a flow diagram indicative of workflow history and or current status of the workflow associated with the activities of the service provider can be displayed by the browser .

As seen the workflow engine provides workflow status information to the workflow monitor . An analysis module receives such status information and creates a workflow log. The created workflow log is stored in a workflow log database within the workflow monitor . Alternatively the workflow log database can be external to the workflow monitor . A workflow log interface permits access to the workflow log database . The workflow log interface also enables communication among the workflow engine and the workflow instance database via the workflow engine interface .

The workflow log database passes the retrieved data indicative of workflow status along to a workflow monitor graphic engine . The workflow monitor graphic engine receives in addition to the workflow status from the workflow log interface a workflow template from the workflow engine interface . The workflow status provides data indicative of the status of the workflow while the workflow template provides formatting information i.e. in the form of tables and or diagrams to be used in displaying the workflow information. For example the template can organize a detailed workflow process history by way of a tree table hierarchy data structure and graphic presentation. In addition the template can specify displaying the current running status of all tasks within a workflow via tables and diagrams.

A presentation interface outputs the workflow information to the browser . In this manner the flow diagrams and or tables may be displayed to the user without requiring installation of any graphic display software packages at the user s computing device.

Additionally if the workflow pauses for whatever reason as for example manual work is needed or an error condition has occurred or the system is waiting for an external system to respond before proceeding etc. the workflow monitor allows the user to view the current status and to manually intervene and perform tasks from the workflow monitor without the need to go through a conventional workflow task assignment user interface or to wait for a backend system to return in order to resume workflow based on the specific business requirement. This capability provides a substantial improvement over conventional systems when dealing with flow recovery in a production environment.

In step workflow status information is generated from the data corresponding to the pertinent workflow within the workflow log database . Additionally a template e.g. graph table diagram etc. is generated or selected from a library of templates as in step the particular template can depend on the type of workflow and corresponding activities. In step presentation data is created by combining the template and the workflow status data. The presentation data which may include for example historical data presented in a hierarchical data structure or current status of the workflow process presented in a diagram is then made available to the user for display using a graphical user interface GUI per step .

The display of the presentation data within a browser eliminates the need for users to install special software on their computing devices. Traditionally a client machine required specific software installed thereon such software package is vendor specific and implementation dependent. In other words a vendor would be provided with certain specifications regarding the user s system and the specific job the user wishes to be performed and the vendor would design particular software specific to that system and to those needs. Furthermore traditional workflow management systems provide no generic monitor that would enable a user to determine the process history and or current status of the workflow of a system without depending on a workflow management product from a particular vendor.

By contrast with the workflow management system of a user may view operations regarding a particular workflow process by accessing the information through a ubiquitous browser type application thereby eliminating the need for any special vendor specific and implementation dependent software packages.

Exemplary GUI screens are next described with respect to . For the purposes of explanation these screens which can be displayed by the browser pertain to a service provisioning workflow for the service provider .

As can be appreciated these flow diagrams for display to the user can become rather large and complicated. Therefore in order to better view certain portions of the process diagrams Zoom in and Zoom out buttons and respectively are provided.

While the billing inquiry diagram example of is relatively simple certain processes may become very complicated and the need for the zoom in and zoom out feature becomes readily apparent. It should be understood that the zoom feature is applicable to both diagram displays of the current status of the workflow process and historical graphical presentations e.g. tree tables of the workflow process and or combinations of such diagrams and graphical presentations.

In the example shown in a user right clicks on an instance and a pop up menu is displayed. From this pop up menu a user may select at Instance Status or Instance History. Assuming Instance Status is selected a Workflow Instance Status diagram as in is displayed.

Should a user click on the View Edit Application and Flow State link shown in the user is brought to a screen depicted in .

The processes described herein for providing workflow monitoring may be implemented via software hardware e.g. general processor Digital Signal Processing DSP chip an Application Specific Integrated Circuit ASIC Field Programmable Gate Arrays FPGAs etc. firmware or a combination thereof. Such exemplary hardware for performing the described functions is detailed below.

The computer system may be coupled via the bus to a display such as a cathode ray tube CRT liquid crystal display active matrix display or plasma display for displaying information to a computer user. An input device such as a keyboard including alphanumeric and other keys is coupled to the bus for communicating information and command selections to the processor . Another type of user input device is a cursor control such as a mouse a trackball or cursor direction keys for communicating direction information and command selections to the processor and for controlling cursor movement on the display .

According to one embodiment contemplated herein the processes described are performed by the computer system in response to the processor executing an arrangement of instructions contained in main memory . Such instructions can be read into main memory from another computer readable medium such as the storage device . Execution of the arrangement of instructions contained in main memory causes the processor to perform the process steps described herein. One or more processors in a multi processing arrangement may also be employed to execute the instructions contained in main memory . In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement certain embodiments. Thus the exemplary embodiments are not limited to any specific combination of hardware circuitry and software.

The computer system also includes a communication interface coupled to bus . The communication interface provides a two way data communication coupling to a network link connected to a local network . For example the communication interface may be a digital subscriber line DSL card or modem an integrated services digital network ISDN card a cable modem a telephone modem or any other communication interface to provide a data communication connection to a corresponding type of communication line. As another example communication interface may be a local area network LAN card e.g. for Ethernet or an Asynchronous Transfer Model ATM network to provide a data communication connection to a compatible LAN. Wireless links can also be implemented. In any such implementation communication interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information. Further the communication interface can include peripheral interface devices such as a Universal Serial Bus USB interface a PCMCIA Personal Computer Memory Card International Association interface etc. Although a single communication interface is depicted in multiple communication interfaces can also be employed.

The network link typically provides data communication through one or more networks to other data devices. For example the network link may provide a connection through local network to a host computer which has connectivity to a network e.g. a wide area network WAN or the global packet data communication network now commonly referred to as the Internet or to data equipment operated by a service provider. The local network and the network both use electrical electromagnetic or optical signals to convey information and instructions. The signals through the various networks and the signals on the network link and through the communication interface which communicate digital data with the computer system are exemplary forms of carrier waves bearing the information and instructions.

The computer system can send messages and receive data including program code through the network s the network link and the communication interface . In the Internet example a server not shown might transmit requested code belonging to an application program for implementing an exemplary embodiment through the network the local network and the communication interface . The processor may execute the transmitted code while being received and or store the code in the storage device or other non volatile storage for later execution. In this manner the computer system may obtain application code in the form of a carrier wave.

The term computer readable medium as used herein refers to any medium that participates in providing instructions to the processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media include for example optical or magnetic disks such as the storage device . Volatile media include dynamic memory such as main memory . Transmission media include coaxial cables copper wire and fiber optics including the wires that comprise the bus . Transmission media can also take the form of acoustic optical or electromagnetic waves such as those generated during radio frequency RF and infrared IR data communications. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM CDRW DVD any other optical medium punch cards paper tape optical mark sheets any other physical medium with patterns of holes or other optically recognizable indicia a RAM a PROM and EPROM a FLASH EPROM any other memory chip or cartridge a carrier wave or any other medium from which a computer can read.

Various forms of computer readable media may be involved in providing instructions to a processor for execution. For example the instructions for carrying out various embodiments may initially be borne on a magnetic disk of a remote computer. In such a scenario the remote computer loads the instructions into main memory and sends the instructions over a telephone line using a modem. A modem of a local computer system receives the data on the telephone line and uses an infrared transmitter to convert the data to an infrared signal and transmit the infrared signal to a portable computing device such as a personal digital assistant PDA or a laptop. An infrared detector on the portable computing device receives the information and instructions borne by the infrared signal and places the data on a bus. The bus conveys the data to main memory from which a processor retrieves and executes the instructions. The instructions received by main memory can optionally be stored on storage device either before or after execution by processor.

In the preceding specification various preferred embodiments have been described with reference to the accompanying drawings. It will however be evident that various modifications and changes may be made thereto and additional embodiments may be implemented without departing from the broader scope of the invention as set forth in the claims that flow. The specification and the drawings are accordingly to be regarded in an illustrative rather than restrictive sense.

