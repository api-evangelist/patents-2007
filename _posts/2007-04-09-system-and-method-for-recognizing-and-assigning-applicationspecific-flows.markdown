---

title: System and method for recognizing and assigning application-specific flows
abstract: In one embodiment, an intermediate network device includes a communication facility configured to receive a reservation request message that includes a flow spec object. The flow spec object specifies one or more flow parameters that describe a given traffic flow that desires to pass through the intermediate network device. A flow is configured to compare the one or more flow parameters specified in the flow spec object to one or more constants stored in a memory, to determine a type of traffic of the given traffic flow. The flow analyzer determines the type of traffic independent of any differentiated services codepoint (DSCP) values in packets of the given traffic flow. A traffic scheduler is configured to assign the given traffic flow to a particular per hop behavior (PHB) based on the determined type of traffic for the given traffic flow.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07934016&OS=07934016&RS=07934016
owner: Cisco Technology, Inc.
number: 07934016
owner_city: San Jose
owner_country: US
publication_date: 20070409
---
This application is a continuation of U.S. patent application Ser. No. 09 896 276 now issued as U.S. Pat. No 7 225 271 which was filed on Jun. 29 2001 by Michael V. Dibiasio Bruce S. Davie and David R. Oran for a SYSTEM AND METHOD FOR RECOGNIZING APPLICATION SPECIFIC FLOWS AND ASSIGNING THEM TO QUEUES.

The present invention relates to computer networks and more specifically to the application of Quality of Service QoS treatments to network traffic flows.

Computer networks typically comprise a plurality of interconnected entities. An entity may consist of any device such as a computer or end station that sources i.e. transmits or sinks i.e. receives datagrams e.g. packets and or frames . A common type of computer network is a local area network LAN which typically refers to a privately owned network within a single building or campus. LANs typically employ a data communication protocol LAN standard such as Ethernet FDDI or token ring that defines the functions performed by the data link and physical layers of a communications architecture i.e. a protocol stack . In many instances several LANs may be interconnected by point to point links microwave transceivers satellite hook ups etc. to form a wide area network WAN or intranet that may span an entire country or continent.

One or more intermediate network devices are often used to couple LANs together and allow the corresponding entities to exchange information. For example a bridge may be used to provide a bridging function between two or more LANs. Alternatively a switch may be utilized to provide a switching or interconnection function for transferring information between a plurality of LANs or end stations. Bridges and switches may operate at various levels of the communication protocol stack. For example a switch may operate at layer 2 which in the Open Systems Interconnection OSI Reference Model is called the data link layer and includes the Logical Link Control LLC and Media Access Control MAC sub layers. Data frames at the data link layer typically include a header containing the MAC address of the entity sourcing the message referred to as the source address and the MAC address of the entity to whom the message is being sent referred to as the destination address. To perform the switching function layer 2 switches examine the MAC destination address of each data frame received on a source port. The frame is then switched onto the destination port s associated with that MAC destination address.

Other network devices commonly referred to as routers may operate at higher communication layers such as layers 3 4 or even higher. Layers 3 and 4 of Transmission Control Protocol Internet Protocol TCP IP networks correspond to the IP and TCP User Datagram Protocol UDP layers respectively. Data frames at the IP layer also include a header that contains an IP source address and an IP destination address. Routers or layer 3 switches may re assemble or convert received data frames from one LAN standard e.g. Ethernet to another e.g. token ring . Thus layer 3.devices are often used to interconnect dissimilar subnetworks. Many equipment manufacturers include both layer 2 switching and layer 3 routing functions in a single device.

Traditionally computer networks were used to exchange static files or data such as text and spreadsheet files while the Public Switched Telephone Network PSTN was used to exchange voice information. Computer networks however are increasingly being used to transport voice information. Voice over IP VoIP typically refers to a group of technologies used to transmit voice information over computer networks. Such networks include a plurality of voice agents that convert voice information from its traditional telephony form to a form suitable for packet transmission. In other words the voice agent encodes compresses and encapsulates the voice information into a plurality of data packets. Examples of voice agents include end stations running voice applications IP telephones VoIP gateways certain private branch exchanges PBXs etc. A calling party uses a voice agent to initiate a VoIP call. Once the voice information has been converted into packet format it is carried by the computer network to a second voice agent configured to serve the called party. Voice traffic unlike static data files or records is highly sensitive to delay and to lost packets. That is delays in receiving data packets carrying voice information at the called party s voice agent or the loss of such data packets can seriously degrade the quality of the call. Accordingly packets carrying voice information must be delivered to the called party with a high probability and in a timely manner.

Computer networks include numerous services and resources for use in forwarding network traffic. For example different network links such as Fast Ethernet Asynchronous Transfer Mode ATM channels SONET links satellite links etc. offer different speed and bandwidth capabilities. Particular intermediate devices also include specific resources or services such as priority queues filter settings traffic shapers queue selection strategies congestion control algorithms etc. that affect the rate at which traffic moves through the device and thus across the network. Depending on the selection or allocation of such resources or services network traffic for different sources and sinks can be forwarded at different speeds or rates thereby controlling the loss and or delay experienced by the traffic. To take advantage of these services and resources individual frames or packets can be marked so that intermediate devices will treat them in a predetermined manner.

More specifically the Institute of Electrical and Electronics Engineers IEEE in an appendix 802.1p to the 802.1D bridge specification standard describes additional information that can be loaded into the MAC header of Data Link Layer frames. is a partial block diagram of a Data Link frame which includes a MAC destination address DA field a MAC source address SA field and a data field . In accordance with the 802.1p standard a user priority field among others is inserted after the MAC SA field . The user priority field may be loaded with a predetermined value e.g. 0 7 that is associated with a particular treatment. Possible treatments include background best effort excellent effort etc. Network devices examine the user priority field of received frames and apply the corresponding treatment to the frames. For example an intermediate device may have a plurality of transmission queues per port each queue having a different priority and may assign frames to different queues of a destination port on the basis of the frame s user priority value.

Recently a working group of the Internet Engineering Task Force IETF developed a specification standard for replacing the ToS field of Network Layer packets with a one octet differentiated services DS field that can be loaded with a differentiated services codepoint DSCP value. Layer 3 devices that are DS compliant apply a particular per hop behavior PHB to packets based on the value contained in their DS fields . Examples of PHBs defined by the IETF include expedited forwarding EF and assured forwarding AF .

As set forth above to support VoIP packets carrying voice information must typically be delivered within narrow time constraints and with high probability. Although many computer networks have the resources and services to meet the delivery requirements of VoIP these resources and services must be allocated preferably in advance to the correct network traffic. The Resource reSerVation Protocol RSVP which is set forth at Request for Comments RFC 2205 is a signaling protocol that was developed so that entities typically referred to as receivers could reserve bandwidth within their computer networks to receive a desired traffic flow such as voice information or a multimedia stream from one or more sourcing entities.

Pursuant to RSVP sources send RSVP Path messages identifying themselves and indicating the bandwidth needed to receive their programming or content. These messages proceed hop by hop through the intermediate network devices of the computer network making those devices aware of the possibility that a reservation of resources may be required. If a receiver is interested in the programming or content offered by a particular source it responds with a RSVP Reservation Resv message which travels hop by hop back to the source. At each hop the corresponding intermediate device establishes a session for the receiver and sets aside sufficient resources to provide the requested bandwidth for the desired. traffic flow. If the resources are not available the reservation is explicitly refused so that the receiver knows it cannot depend on resources being devoted to its traffic. By using RSVP packets carrying voice information can be accorded the resources and services they need to ensure timely delivery.

In some RSVP implementations each traffic flow such as a streaming multimedia flow a real time voice flow a video conference flow etc. is assigned its own reserved queue for transmission purposes. Each reserved queue moreover is given a weight and a selection strategy such as Weighted Fair Queuing WFQ is used to select packets from among the various queues for transmission. Many practical implementations of flow based queuing however do. not always result in real time voice flows being forwarded at sufficient speeds to avoid a degradation in call quality.

Furthermore with RSVP path and reservation state is maintained for each flow. This presents scalability problems as the number of flows increases. Indeed certain devices such as core routers may have to maintain thousands or tens of thousands of RSVP flows. This can severely tax the router s processor and memory resources. The path and reservation states moreover must also be periodically refreshed thereby increasing the number of overhead messages that are forwarded through the network.

One solution to the real time traffic forwarding and scalability problems is to have RSVP interoperate with the PHBs of the Differentiated Services DiffServ Model. With this solution per flow state is offloaded to the edges of one or more DiffServ networks and packets corresponding to the flow are marked before entering the DiffServ networks with appropriate DSCP. Within the DiffServ networks the RSVP messages are ignored and RSVP states are not maintained. Instead packets are provided with the PHB associated with the DSCP value with which they have been marked.

There are nonetheless several drawbacks with this approach. For example the source entity or the edge device must be configured to mark the packets of the traffic flow with the correct DSCP. Each device within the DiffServ networks moreover must be configured to recognized the marked traffic and apply the corresponding PHB. Precautions must be taken to ensure that only approved or trusted entities or devices mark traffic with DSCP values. Otherwise the network could suffer theft of service attacks. Furthermore packets traversing multiple DiffServ networks that belong to different administrative domains may need to be re marked unless the domains can agree upon common marking values.

Briefly the invention relates to a system for assigning network traffic flows to appropriate queues and or queue servicing algorithms based upon one or more flow parameters contained in reservation requests associated with the traffic flows. In the illustrative embodiment an intermediate network device disposed within a computer network includes a reservation engine a packet classification engine an admission control entity a traffic scheduler and a flow analyzer. The flow analyzer includes or has access to a memory that is preprogrammed with heuristics for use in evaluating the flow parameters of reservation requests. A network entity that wishes to receive certain information such as real time voice information issues a reservation request to the computer network. The network entity loads the reservation request with one or more flow parameters that characterize the bandwidth and or forwarding requirements of the anticipated traffic flow.

When the reservation request is received at the intermediate network device it is passed to the flow analyzer. The flow analyzer applies the predefined heuristics from the memory to identify and select the queue and or the queue servicing algorithm that best meets the requirements of the traffic flow. The traffic flow is then assigned to the selected queue. In particular the packet frame classification engine is instructed to identify packets corresponding to the traffic flow and the traffic scheduler is directed to apply the reserved resources i.e. the selected queue to packets matching the identified flow.

In the illustrative embodiment voice agents are intermediate network devices that have been configured to provide VoIP gateway support to other devices or entities such as conventional analog telephone sets coupled thereto. Suitable VoIP gateway devices include the 3600 series of routers from Cisco Systems Inc. of San Jose Calif.

It should be understood that the network configuration of is for illustrative purposes only and that the present invention will operate with other possibly far more complex network topologies.

The communication facility preferably includes one or more software libraries for implementing a communication protocol stack allowing voice agent to exchange messages with other entities of network such as voice agents and or . The communication facility may for example include software layers corresponding to the Transmission Control Protocol Internet Protocol TCP IP communication stack although other communication protocols such as Asynchronous Transfer Mode ATM cells the Internet Packet Exchange IPX protocol the AppleTalk protocol the DECNet protocol and or NetBIOS Extended User Interface NetBEUI among others could be utilized. Communication facility further includes transmitting and receiving circuitry and components including one or more network interface cards NICs that establish one or more physical ports for exchanging data packets and frames with router to which it is connected.

The packet frame receiver transmitter object the traffic scheduler and forwarding engine are all in communicating relationship with each other via one or more communication paths or bus structures such as system bus so that network messages as well as commands may be exchanged between them.

Router may also include one or more resource allocation and reservation components. In the preferred embodiment router includes a RSVP entity or engine . The RSVP engine includes a RSVP message generator a RSVP state machine engine a session table and an admission control entity . In accordance with the present invention the RSVP engine is further configured to include a flow analyzer . Disposed at or otherwise accessible by the flow analyzer are one or more memory devices such as heuristic store which has been preprogrammed with one or more sets of heuristics for use in evaluating flow parameters associated with traffic flows. As described herein the flow analyzer processes reservation requests and assigns suitable PHBs to the traffic flows associated with those requests.

Router and more specifically flow analyzer comprises programmable processing elements not shown which may contain software program instructions pertaining to the methods of the present invention. Other computer readable media may also be used to store the program instructions of the present invention.

Queue selector scheduler is preferably a multi e.g. two level hierarchical scheduler. The top level in the hierarchy preferably uses a priority queueing algorithm with the PQ being served at the highest priority while the reserved queues and the default queue are served at the bottom or lowest priority. Furthermore the reserved queues and the default queue are preferably drained by the second level scheduler in accordance with a queue servicing algorithm such as Weighted Fair Queuing WFQ Class Based Weighted Fair Queuing CBWFQ or Weighted Round Robin WRR among others. In particular each reserved queue and the default queue is assigned its own weight and packets are drained from the reserved and default queues based on the assigned weights. The default queue may be assigned a weight that gives it the lowest priority among all of the reserved queues .

It should be understood that the queues and the queue selector scheduler may be considered to be another resource of the traffic scheduler .

A suitable platform for router is the or series of routers from Cisco Systems Inc. Nonetheless those skilled in the art will recognize that the present invention or parts thereof may be implemented in other network devices and or entities such as switches router switches bridges repeaters servers etc.

As provided in the RSVP specification standard each RSVP Path message includes a header a sender template object a sender Tspec object and a session object each of which comprises a plurality of fields. The sender template object specifies the Internet Protocol IP address and Transmission Control Protocol User Datagram Protocol TCP UDP source port of the sending entity i.e. voice agent . The sender Tspec object describes characteristics of the traffic flow to be generated by the sending entity including the bandwidth required to support its delivery. The session object identifies the IP address and TCP UDP port of the receiving entity i.e. voice agent .

The RSVP entity passes the Path message to the voice agent s communication facility for transmission toward voice agent via network as indicated at block . The Path message is first received at router . The packet frame receiver transmitter object of router recognizes the received message as an RSVP Path message and accordingly passes it to the RSVP engine for processing as indicated at block . The RSVP engine stores the contents of the Path message in its session table as indicated at block .

It should be understood that the RSVP session table may include additional information such as path and or reservation state information etc.

RSVP engine first establishes a new row or entry e.g. row for the traffic flow or session with voice agent . The RSVP engine then populates the cells or records of this entry with the contents of the received Path message. For example RSVP engine loads the source address and source port from the sender template object into the cells of table entry that correspond to columns . It loads the destination address destination port and protocol from the session object into the cells that correspond to columns . It loads the address of the previous hop node if any into the cell corresponding to column . Because no reservation has yet been requested or made the cells of row corresponding to columns and remains blank or null.

Router then loads its IP address into a previous hop object that it adds to the Path message and forwards the message toward voice agent as indicated at block . Router may consult a routing table not shown to determine the interface from which the Path message is to be forwarded. At each hop along the route to voice agent the respective intermediate network device processes the Path message in the same manner as described above. In particular each device stores the information contained in the Path message in its RSVP session table . Each intermediate device also loads its IP address into the previous hop object before forwarding the Path message to the next intermediate network device along the route. Thus when the Path message reaches its destination e.g. voice agent each intermediate network device along the route from the sourcing entity will have stored the address of the previous hop along that route so that it will be able to forward messages back to the sourcing entity along the inverse of the route used by the Path message.

Voice agent preferably responds to the Path message by generating one or more RSVP Reservation Resv messages as indicated at block .

The format of the flow spec object is defined by RFCs and which are both hereby incorporated by reference in their entirety. It includes length field and class number and class type fields . It further includes a token bucket rate r field a token bucket size b field a peak data rate p field a minimum policed unit m field and a maximum packet size M field among others. If voice agent is requesting guaranteed service flow spec object may include additional fields such as a receiver rate R and a receiver slack term S . The session object includes length class number and class type fields . It further includes IP destination address DA protocol identifier ID and destination port fields .

The RSVP message generator at voice agent loads header filter spec object flow spec object and session object in a conventional manner. In particular it loads the IP SA and source port fields with the IP address and TCP UDP port being utilized by voice agent . It similarly loads its IP address and TCP UDP port into fields . Message generator loads the flow spec object with values corresponding to the network resources e.g. the bandwidth that voice agent believes will be required to support the anticipated traffic flow from voice agent . Typically these values will be the same as those contained in the sender Tspec object of the Path message that was received by voice agent .

The Resv message travels hop by hop back to voice agent following the inverse of the route used by the Path message. At each hop the Resv message from voice agent is processed by the respective intermediate network device. More specifically the Resv message is initially received at router . The packet frame receiver transmitter object of router recognizes the received message as a RSVP Resv message and accordingly passes it to the RSVP engine as indicated at block .

First the RSVP. engine searches its RSVP session table to identify the matching entry e.g. entry for this Resv message as indicated at block . The RSVP engine identifies the matching entry by looking for an entry of table whose source address source port destination address destination port and protocol match those contained in the received Resv message. As described above a separate entry of table is established for each session. Next the RSVP engine provides the flow parameters contained in the flow spec object to the flow analyzer for evaluation based on one or more sets of predefined heuristics from the heuristics store as indicated by block . In the illustrative embodiment the heuristics store is preprogrammed with a single set of heuristics used to determine whether or not the respective traffic flow is a real time voice flow. This set of heuristics preferably takes the form of the following equation 

r is a programmable token bucket rate constant preferably having a default value of 12288 bytes second b is a programmable token bucket size constant preferably having a default value of 592 bytes second and p to r is the ratio of peak data rate to token bucket rate constant preferably having a default value of 110 i.e. 1.10.

The flow analyzer determines whether the respective values from the flow spec object satisfy the above set of heuristics as indicated at decision block . If they do the flow analyzer concludes that the corresponding traffic flow will be carrying real time voice traffic as indicated by block . The flow analyzer then selects and assigns an appropriate queue and or queue servicing algorithm or selection strategy to the real time voice traffic flow as indicated at block . For example as real time voice traffic must be delivered with minimal delay and minimal packet loss the flow analyzer preferably selects the PQ for association with the traffic flow from voice agent to voice agent .

The RSVP engine then performs admission control on the reservation request as indicated by block which moves processing to decision block . More specifically the RSVP engine first queries the admission control entity to see whether the respective interface e.g. output interface which leads to voice agent has the selected resources i.e. a PQ. In this case output interface has a PQ and thus the admission control entity concludes that the selected resources exist.

The admission control entity using the contents of the flowspec spec object of the Resv message then determines whether sufficient available bandwidth also exists at the interface. Suppose for example that output interface is coupled to a link configured to provide a transmission speed of 256 Kilobits second Kb s and that the admission control entity is configured so as to use only up to 75 of any given interface s capacity thereby making 192 Kb s of bandwidth available for use. Suppose further that the token bucket data rate r from field of the flow spec object indicates that the anticipated voice traffic traveling to voice agent will have an average data rate of 50 Kb s. As a result the admission control entity concludes that sufficient bandwidth exists for the reservation. As the necessary resources and the required bandwidth exist the reservation request passes admission control.

It should be understood that in addition to performing admission control the RSVP engine may also determine whether or not the party making the reservation e.g. voice agent has administrative permission to make the reservation specified in the RSVP Resv message.

Next the RSVP engine assigns and reserves the selected resources which were deemed necessary to meet the requirements of the reservation request as indicted at block . In particular the RSVP engine updates the cell of its session table for the respective entry i.e. row corresponding to column to reflect that this reservation request has passed admission control and that the flow has been assigned to the interface s PQ. In addition the admission control entity also deducts the reserved bandwidth from the available bandwidth at the interface thereby leaving 142 Kb s of bandwidth available for subsequent reservations.

The flow analyzer may also select an appropriate PHB for association with the traffic flow. That is the flow analyzer may select an appropriate PHB depending on whether or not the flow parameters of the reservation request satisfy the applied heuristics. The selection of a PHB can then but need not be used in selected the appropriate queue and or queue servicing algorithm. A possible PBB for association with traffic flows carrying real time voice information is the Expedited Forwarding EF PHB as defined by the IETF. If a PHB such as EF was selected by the flow analyzer the RSVP engine may update the cell of row that corresponds to column with the identity of the selected PHB.

Using the stored previous hop address from the matching entry of its RSVP session table intermediate device then forwards the Resv message to the next hop toward the sourcing entity i.e. toward voice agent as indicated by block .

If in response to decision block the reservation fails admission control i.e. the interface does not have a PQ and or there is insufficient available bandwidth the RSVP engine directs its message generator to formulate a reservation error ResvErr message which is then sent back toward the destination receiving entity i.e. voice agent as indicated at block . Voice agent is thereby notified that its reservation request has failed and that sufficient resources will not be reserved for the traffic flow from voice agent . The call may or may not proceed.

The above described processing of the Resv message is preferably repeated at each intermediate device along the route from voice agent to voice agent .

Assuming the reservation passes admission control at each intermediate device voice agent can begin sending messages e.g. packets containing real time voice traffic to voice agent . When such packets are received at the packet frame receiver transmitter object of a given intermediate network device e.g. router the forwarding engine switches them to the appropriate outbound interface e.g. interface for reaching voice agent . The packets are received by the classification engine via arrow . The classification engine preferably queries the RSVP engine to identify the appropriate queue for use in buffering the packets for transmission. The classification engine may provide the RSVP engine with the IP SA source port IP DA destination port and protocol values from the header of the packets. The RSVP engine uses this information to see whether it has a matching entry in its session table . Here the information matches row and based on the information stored at the cell corresponding to column the RSVP engine determines that this flow is to use the PQ. Accordingly the RSVP engine directs the classification engine to place these packets in the PQ .

As the queue selector scheduler is configured to drain packets from the PQ before retrieving packets from any other queues which are at a lower level than the PQ the packets carrying the real time voice traffic are immediately transmitted by output circuitry . The packets are thus forwarded through network with minimal delay thereby satisfying the requirements for real time voice flows. In addition as the intermediate device limits the flows that can be assigned to the PQ as described herein the likelihood of the PQ becoming full and packets being dropped is significantly reduced.

When the call is completed the RSVP entity at voice agent issues one or more Path Teardown PathTear messages and the RSVP entity at voice agent issues one. or more Reservation Teardown ResvTear messages thereby releasing the resources that had been reserved to support the real time voice traffic from the user at voice agent .

Suppose that the user at voice agent generates a traffic flow to the user at voice agent that carries something other than real time voice information. Suppose further that the voice agents and nonetheless wish to have network resources reserved to support this flow. Voice agents and may use RSVP to make the reservation. That is the call signaling entity at voice agent directs the RSVP entity to generate a Path message and to load that message with parameters which by definition indicate that the flow carries something other than real time voice information. In other words the token bucket rate r token bucket size b and or peak data rate p values differ from those used for real time voice. As indicated above these new parameters will be copied into a flowspec object of a Resv message from voice agent .

When this Resv message reaches an intermediate network device such as router it will be passed to the device s RSVP engine for processing as indicated at block . Engine performs a look up on its session table to identify the matching entry e.g. row as indicated at block and the flow analyzer applies one or more sets of predefined heuristics to the flow s parameters as indicated at block . In this case however the parameters will not satisfy the heuristics for identifying real time voice flows. As a result the flow analyzer concludes that this anticipated flow will not be carrying real time voice traffic as indicated by No arrow leading from decision block to block . Preferably the flow analyzer selects a queue and or a queue servicing algorithm that is appropriate for this traffic flow as indicated at block . In the illustrative embodiment traffic flows for which a reservation is requested but which are determined to be carrying something other than real time voice information are assigned their own reserved queues . The weight assigned to such a reserved queue depends on the parameters contained in the flow spec object . In addition to selecting a queue and or a queue servicing algorithm the flow analyzer may also select an appropriate PHB for the flow such as the Assured Forwarding AF PHB as opposed to the EF PHB.

Next the RSVP engine performs admission control on the reservation as indicated by block which moves processing to decision block . Preferably the admission control entity first determines whether there is a reserved queue at the respective interface e.g. output interface that is available for assignment to the traffic flow of the reservation. Suppose that reserved queue or Q is available for assignment to this flow. The admission control entity then determines whether the output interface has sufficient available bandwidth to support the reservation in the same manner as described above. Assuming there is sufficient available bandwidth as well the RSVP engine then assigns and reserves the resources i.e. reserved queue and the desired bandwidth to this traffic flow as indicated at block .

The RSVP engine then updates the entry e.g. row of its session table for this flow to reflect that the reservation request has passed admission control and that the flow has been assigned to reserve queue . If a PHB has also been selected its identity may also be entered into row . The RSVP engine then forwards the Resv message to the next hop toward the sourcing entity i.e. voice agent as indicated by block .

Thus traffic flows which are determined to be carrying real time voice information as a result of the applied heuristics are placed in the PQ while all other flows for which reservations are requested are placed in reserved queues established for those flows. Traffic flows for which no reservation has been made may be placed in the default queue.

It should be understood that the programmable constants used in the set of heuristics that identify traffic flows carrying real time voice information may be adjusted or tuned by a network administrator or operator.

It should be further understood that other sets of heuristics may be defined for identifying other types of traffic flows besides traffic flows carrying real time voice information. Each such set of heuristics may be associated with a different queue and or queue servicing algorithm.

The foregoing description has been directed to specific embodiments of this invention. It will be apparent however that other variations and modifications may be made to the described embodiments with the attainment of some or all of their advantages. Therefore it is an object of the appended claims to cover all such variations and modifications as come within the true spirit and scope of the invention.

