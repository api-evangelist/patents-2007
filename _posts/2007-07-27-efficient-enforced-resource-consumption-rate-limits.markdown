---

title: Efficient enforced resource consumption rate limits
abstract: A method for enforcing a consumption rate limit for a resource in a data processing system includes receiving a first request for consumption of the resource; calculating an accumulated resource availability using the consumption rate limit; in response to a determination that the accumulated resource availability is sufficient to satisfy the first request, satisfying the first request; calculating a residual resource availability; receiving a second request for consumption of the resource; calculating an additional accumulated resource availability using the consumption rate limit unless the residual resource availability is sufficient to satisfy the second request.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08225321&OS=08225321&RS=08225321
owner: International Business Machines Corporation
number: 08225321
owner_city: Armonk
owner_country: US
publication_date: 20070727
---
The present invention relates to providing efficient enforced resource consumption rate limits. In particular it relates to determining when to recalculate resource availability.

Rates of resource consumption in data processing systems can vary considerably under different circumstances and it can be necessary to ensure stable and effective operation by imposing a limit on a rate of consumption of a particular resource. For example heap memory used for the allocation of data by software applications can be consumed at varying rates. Excessively high rates of memory allocation can result in memory shortage and other consequences in a garbage collected memory system for example excessively high rates of memory allocation can result in an overloaded garbage collector which can affect the performance of the entire data processing system as the garbage collector may dominate processing. Other examples can include limits to the rate of transfer of data over a communications medium such as a data bus communications link or network.

Typically a resource consumer in operation in a data processing system will make requests for varying quantities of resource at various different times. The data processing system must determine whether such requests would cause a predetermined consumption rate limit to be exceeded. Such a determination is used to permit or deny such resource consumption requests.

One technique for undertaking this determination is to calculate a moving average of the consumption rate. If the time and quantity of each resource consumption is recorded then the total allocations over a predetermined period of time can be calculated and an average consumption rate determined. This approach has the disadvantage that such calculations can be resource expensive e.g. in terms of processing resource since calculations are required periodically such as at each request for resource consumption to determine the average consumption rate.

It would therefore be advantageous to provide for the enforcement of resource consumption rate limits which provide a more efficient determination of whether to permit or deny a request for resource consumption in view of the required resource consumption rate limit.

The present invention accordingly provides in a first aspect a method for enforcing a consumption rate limit for a resource in a data processing system the method comprising the steps of receiving a first request for consumption of the resource calculating an accumulated resource availability using the consumption rate limit in response to a determination that the accumulated resource availability is sufficient to satisfy the first request satisfying the first request calculating a residual resource availability receiving a second request for consumption of the resource calculating an additional accumulated resource availability using the consumption rate limit unless the residual resource availability is sufficient to satisfy the second request.

Thus a calculation of additional accumulated resource availability for the second request is made only when the residual resource availability is insufficient to satisfy the second request. In this way the relatively expensive operation of calculating additional accumulated resource availability is deferred to be undertaken only when absolutely necessary and not routinely. Consequently enforcing the consumption rate limit for resource consumption requests from the resource consumer is less resource intensive less expensive and more efficient.

The step if calculating an additional accumulated resource availability further comprises the step of in response to a determination that a combination of the residual resource availability and the additional accumulated resource availability is sufficient to satisfy the second request satisfying the second request.

The step of satisfying the second request comprises updating the residual resource availability to include the additional accumulated resource availability and in response to a determination that the updated residual resource availability is sufficient to satisfy the second request satisfying the second request and recalculating the residual resource availability.

The accumulated resource availability is calculated as a product of a first elapsed time and the consumption rate limit and the additional accumulated resource availability is calculated as a product of a second elapsed time and the consumption rate limit.

The second elapsed time is an elapsed time between the receipt of the first request and the receipt of the second request.

The additional accumulated resource availability is constrained to a maximum additional accumulated resource availability.

The additional accumulated resource availability is constrained to a maximum additional accumulated resource availability by constraining the second elapsed time to a maximum second elapsed time.

The combination of the residual resource availability and the additional accumulated resource availability is constrained to a maximum resource availability.

The resource is a memory in the data processing system. Preferably the first and second requests for consumption of the resource are requests for allocation of memory.

The present invention accordingly provides in a second aspect an apparatus for enforcing a consumption rate limit for a resource in a data processing system the apparatus comprising means for receiving a first request for consumption of the resource means for calculating an accumulated resource availability using the consumption rate limit means for in response to a determination that the accumulated resource availability is sufficient to satisfy the first request satisfying the first request means for calculating a residual resource availability means for receiving a second request for consumption of the resource means for calculating an additional accumulated resource availability using the consumption rate limit unless the residual resource availability is sufficient to satisfy the second request.

The means for calculating an additional accumulated resource availability further comprises means for in response to a determination that a combination of the residual resource availability and the additional accumulated resource availability is sufficient to satisfy the second request satisfying the second request.

The means for satisfying the second request comprises means for updating the residual resource availability to include the additional accumulated resource availability and means for in response to a determination that the updated residual resource availability is sufficient to satisfy the second request satisfying the second request and recalculating the residual resource availability.

The present invention accordingly provides in a third aspect an apparatus comprising a central processing unit a memory subsystem an input output subsystem and a bus subsystem interconnecting the central processing unit the memory subsystem the input output subsystem and the apparatus as described above.

The present invention accordingly provides in a fourth aspect a computer program element comprising computer program code to when loaded into a computer system and executed thereon cause the computer to perform the steps of a method as described above.

Consumption of the resource by a resource consumer is undertaken via a resource consumption rate limiter . The rate limiter is a software or hardware entity operable to enforce resource consumption rate limits in accordance with a consumption rate limit described below. In use a resource consumer makes a request to the rate limiter to consume a particular quantity of resource and the rate limiter determines whether to permit or deny the request. The consumption rate limit is a predetermined limit of the rate of consumption of the resource . For example if the resource is a memory resource the consumption rate limit can be expressed as a quantity of memory in a unit of time. Alternatively if the resource is a data communications resource such as a network resource the consumption rate limit can be expressed as a quantity of data in a unit of time such as a data communications rate . The rate limiter further includes a resource availability calculator for calculating the availability of resource for a particular consumer .

Resource availability calculator preferably calculates an accumulated resource availability for a first request to consume a quantity of the resource . The accumulated resource availability can be calculated as a product of the consumption rate limit and an elapsed time. The elapsed time can be a time elapsed up to the receipt by the rate limiter of the first request to consume the resource . Thus the accumulated resource availability is a maximum quantity of the resource which could be consumed by the resource consumer over that elapsed time period without exceeding the consumption rate limit . If the quantity of the resource requested for consumption in the first request from the consumer can be satisfied by the accumulated resource availability then rate limiter permits the satisfaction of the first resource consumption request. Alternatively if the quantity of the resource requested for consumption in the first request from the consumer cannot be satisfied by the accumulated resource availability then rate limiter denies the first resource consumption request since it would result in the consumer exceeding the consumption rate limit . Permitted resource consumption requests are satisfied by a resource request satisfier which is operable to provide the requested quantity of the resource .

The resource availability calculator further preferably calculates a residual resource availability following satisfaction of a request to consume a quantity of resource . For example if the rate limiter determines that the first request to consume a quantity of the resource is permitted the resource availability calculator subsequently calculates a residual resource availability as a quantity of resource available from the accumulated resource availability following satisfaction of the first request. i.e. if a first request from the consumer to consume a quantity of the resource is permitted by the rate limiter and satisfied by the satisfier with reference to an accumulated resource availability of x then the residual resource availability is calculated to be the accumulated resource available following satisfaction of this first request x y . The residual resource availability is calculated for subsequent requests from consumer to consume a quantity of resource. On receipt of such a subsequent request by the rate limiter a quantity of resource requested can be compared with the residual resource availability to determine if there is sufficient residual resource available to satisfy the subsequent request. Only if there is not sufficient residual resource available should a further relatively expensive calculation of additional accumulated resource be required as described below.

An additional accumulated resource availability is calculated when the resource availability calculator receives a subsequent request for the consumption of a quantity of resource from consumer which cannot be satisfied by the known residual resource availability alone. For example if a subsequent request is received from consumer for consumption of a quantity of resource which is greater than the known residual resource availability the resource availability calculator must calculate additional accumulated resource availability . The additional accumulated resource availability can be calculated as a product of the consumption rate limit and an elapsed time. The elapsed time for the calculation of the additional accumulated resource availability can be a time elapsed between the receipt of the first request for consumption of resource and the receipt of the subsequent request. Thus the additional accumulated resource availability is a maximum quantity of the resource which could be consumed by the resource consumer over that elapsed time period without exceeding the consumption rate limit . On calculation of the additional accumulated resource availability the rate limiter can determine if such a subsequent request for consumption of a quantity of the resource from consumer can be satisfied by a combination of the residual resource availability and the additional accumulated resource availability . Such a combination will normally be a mere summation of the residual resource availability and the additional accumulated resource availability . Preferably the residual resource availability is updated to include the calculated additional accumulated resource availability such that the rate limiter can determine whether a subsequent request from the consumer can be satisfied with reference only to the updated residual resource availability . For example the residual resource availability is updated by adding the value of the additional accumulated resource availability .

Thus it can be seen that the rate limiter is required to calculate the additional accumulated resource availability for a subsequent request to consume resource only when a value of the residual resource availability is insufficient to satisfy such a subsequent request. In this way the relatively expensive operation of calculating additional accumulated resource availability is deferred to be undertaken only when absolutely necessary. Consequently the present approach to enforcing the consumption rate limit for resource consumption requests from the resource consumer is less resource intensive less expensive and more efficient.

Whilst the various elements of have been described in accordance with their particular arrangement as illustrated it will be apparent to those skilled in the art that this is not the only arrangement of such elements and the elements can be organized in different arrangements while still affording the advantages described above. In particular either or both of the resource consumers and the rate limiter can form part of the system . Otherwise the elements of are communicatively connected in order that the functions and features of the preferred embodiment of the present invention can be realized. In particular the resource consumers are communicatively connected to the rate limiter such as via an application programming interface a communications interface a network a common bus or other such effective communications mechanism. Similarly the resource request satisfier component of the rate limiter is communicatively connected to the resource .

At some point subsequently the method receives a second request for the consumption of a quantity of the resource at step . The method then determines if the residual resource availability is sufficient to satisfy the second request. If the residual resource availability is sufficient the method satisfies the second request at step and recalculates the residual resource availability . The residual resource availability is recalculated to determine the residual resource available after satisfaction of the second request. Alternatively if the residual resource availability is determined to be insufficient at step the method proceeds to calculate an additional accumulated resource availability using the consumption rate limit . The calculation of the additional accumulated resource availability needs to be made in terms of an elapsed time period. The elapsed time period will be the time since the calculation of the residual resource availability normally the elapsed time since satisfaction of the first resource request was determined . Subsequently at step the method determines if a combination of the residual resource availability and the additional accumulated resource availability is sufficient to satisfy the second request. The combination can be a summation of the residual resource availability and the additional accumulated resource availability. Preferably the residual resource availability is updated by addition of the accumulated resource availability . If the second request can be satisfied the method proceeds to satisfy the second request and update the residual resource availability at step . Alternatively if the second request cannot be satisfied the method denies the second request at step since it exceeds the consumption rate limit .

Preferably the calculation of the additional accumulated resource availability at step is undertaken such that the additional accumulated resource availability is constrained to a maximum accumulated resource availability. One way to constrain the additional accumulated resource availability to a maximum value is to constrain the elapsed time used in the calculation of the additional accumulated resource availability to a maximum elapsed time. For example the elapsed time period will be the time since the calculation of the residual resource availability normally the elapsed time since satisfaction of the first resource request was determined and this can be constrained to a predetermined maximum elapsed time. Alternatively the additional accumulated resource availability can be constrained to a discrete predetermined maximum value. In this way a consumer cannot accrue an excessively large residual resource availability by delaying requests for resource consumption for lengthy periods. This would have the undesirable affect that a request for resource consumption may satisfy the long term consumption rate limit by virtue of the long period of elapsed time whilst nonetheless having a significant and undesirable impact on the operation of the system by virtue of the quantity of resource requested. Thus such a constraint on the accumulated resource availability addresses the problem of such excessive resource consumption requests. Furthermore a corresponding constraint can be preferably applied to the accumulated resource availability used for determining whether to satisfy a first resource consumption request.

In use the software routine is functional to request an allocation of memory from the memory heap via the memory allocator . The memory allocator determines via the memory consumption rate limiter whether to permit or deny the request for the allocation of memory. The memory consumption rate limiter operates generally in accordance with the method of and

At time which is three units of time elapsed from the start of execution of the software routine the software routine makes a first request to the memory allocator for an allocation of 2 blocks of memory. In accordance with the method of and the operation of the memory allocator and the memory consumption rate limiter is as follows. Initially at step the first request for the allocation of 2 blocks of memory is received after three units of time have elapsed. At step the memory availability calculator calculates the accumulated memory availability at time as a product of the consumption rate limit which is one block per unit time and the elapsed time three units . The accumulated memory availability is therefore three blocks of memory as illustrated at . Subsequently at step the method determines that the accumulated memory availability is sufficient to satisfy the first request for two blocks of memory and the memory allocation request is satisfied at step . A residual memory availability is also calculated at step as being the accumulated memory availability of three blocks minus the allocated memory of two blocks. Thus the residual memory availability is calculated at step to be one block of memory.

Subsequently at step a second request for the allocation of one block of memory is received at four time units from the calculation of the residual memory availability . At step the method determines that the residual memory availability of one block of memory is sufficient to satisfy the second request for one block of memory. Thus the method satisfies the second request at step and recalculates the residual memory availability by subtracting the memory block allocated in response to the second request. Thus the residual memory availability is calculated at step to be zero blocks of memory.

Thus in this way it is not necessary for the memory allocator to calculate the additional accumulated memory availability in response to the second request because the memory allocator is able to determine that the residual memory availability following the satisfaction of the first request was sufficient to satisfy the second request. Thus preferred embodiments of the present invention provide clear advantages over the prior art which will be required to undertake such relatively expensive calculations for each request.

Insofar as embodiments of the invention described are implementable at least in part using a software controlled programmable processing device such as a microprocessor digital signal processor or other processing device data processing apparatus or system it will be appreciated that a computer program for configuring a programmable device apparatus or system to implement the foregoing described methods is envisaged as an aspect of the present invention. The computer program may be embodied as source code or undergo compilation for implementation on a processing device apparatus or system or may be embodied as object code for example.

Suitably the computer program is stored on a carrier medium in machine or device readable form for example in solid state memory magnetic memory such as disk or tape optically or magneto optically readable memory such as compact disk or digital versatile disk etc. and the processing device utilizes the program or a part thereof to configure it for operation. The computer program may be supplied from a remote source embodied in a communications medium such as an electronic signal radio frequency carrier wave or optical carrier wave. Such carrier media are also envisaged as aspects of the present invention.

It will be understood by those skilled in the art that although the present invention has been described in relation to the above described example embodiments the invention is not limited thereto and that there are many possible variations and modifications which fall within the scope of the invention.

The scope of the present invention includes any novel features or combination of features disclosed herein. The applicant hereby gives notice that new claims may be formulated to such features or combination of features during prosecution of this application or of any such further applications derived therefrom. In particular with reference to the appended claims features from dependent claims may be combined with those of the independent claims and features from respective independent claims may be combined in any appropriate manner and not merely in the specific combinations enumerated in the claims.

