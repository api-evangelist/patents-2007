---

title: Software supportability certification
abstract: A method for certifying a software product for supportability is disclosed in which the software product is identified, wherein the software product is configured to receive and process one or more user interactions. One or more anticipated log messages corresponding to each of a plurality of predetermined user errors which the software product is anticipated to generate on a logging framework associated with supporting the software product are identified. It is required that the software product perform each of the plurality of predetermined user errors responsive to the one or more user interactions. It is determined that the software product generates, for each of the plurality of predetermined user errors, one or more log messages on the logging framework, and the software product is certified for supportability based on a comparison of the anticipated log messages with the generated log messages.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08196102&OS=08196102&RS=08196102
owner: SAP AG
number: 08196102
owner_city: Walldorf
owner_country: DE
publication_date: 20071011
---
In the field of computer applications and technology there are many software developers developing many different software products. It may occasionally be the case that a first software developer may have developed or may be developing a first software product that the developer configures to interact with a second software product developed by a second developer . However the second software product may be part of a larger software system wherein the first software product must properly interface with one or more components of the software system to be supported by the first software product.

In such situations it may be beneficial to be able to test and certify a new software product before integrating it into an existing software product or system. For example if it was known how the new software product was configured to react and or interact with the existing system it may be beneficial to determine whether or not the new software product actually does react and or interact with the existing system as intended before allowing or certifying the new product for use with the existing system.

According to an example embodiment a method for certifying a software product for supportability is disclosed in which the software product is identified wherein the software product is configured to receive and process user interactions. One or more anticipated log messages corresponding to each of a plurality of predetermined user errors are identified where the software product is anticipated to generate the anticipated log messages on a logging framework associated with supporting the software product. It is required that the software product perform each of the plurality of predetermined user errors responsive to the one or more user interactions. It is determined that the software product generates for each of the plurality of predetermined user errors one or more log messages on the logging framework and the software product is certified for supportability based on a comparison of the anticipated log messages with the generated log messages.

According to another example embodiment a method for certifying a software product for product support includes determining that the software product is configured to generate log messages on a logging framework associated with providing the product support for the software product where the log messages are based on one or more predetermined user errors and determining a correspondence level between the log messages generated during a use of the software product and the predetermined user errors generated during the use. A determination is made that the correspondence level is greater than or equal to a threshold correspondence level associated with the product support and the software product is certified for the product support based on the determination that the correspondence level is greater than or equal to the threshold correspondence level.

According to another example embodiment a system for determining a supportability of a software product in conjunction with a host product is disclosed. The system includes a log engine configured to retrieve log messages generated by the software product on a logging framework associated with the host product where the log messages are anticipated to correspond to one or more predetermined user errors determined by the software product. The system further includes an interface engine configured to determine the predetermined user errors associated with the software product an evaluator configured to determine a correspondence level associated with the software product based on a level of correspondence between the predetermined user errors and the log messages and a certification engine configured to determine the supportability of the software product based on a comparison of the correspondence level with a threshold correspondence level.

The details of one or more implementations are set forth in the accompanying drawings and the description below. Other features will be apparent from the description and drawings and from the claims.

According to an example embodiment a third party may develop the software product and configure it to work with the host system. However prior to allowing or otherwise certifying the third party software product for operation on or with the host system the certification system may first certify the software product . For example as referenced above the certification may include a verification that the software product interacts with the host system in conformance with the predetermined performance metrics.

One important performance metric for determining whether a third party software product should be certified may be whether or not the software product generates an acceptable error log on an error logging component of the host system in order to pass certification. For example the host system may include a logging framework for logging or otherwise storing one or more log messages e.g. log messages associated with a performance or operation of the host system. Then for example the certification system may certify the software product for operation with the host system based on a capacity of the software product to generate acceptable log messages e.g. on the logging framework .

The software product may include any software application program product code or other module or system configured to perform in an anticipated way or otherwise operate according to one or more standards. For example the software product can be a Java program within the Java Enterprise Edition e.g. J2EE operating environment. Then for example the host system may include an application server e.g. a J2EE application server configured to provide the software product to client computers or other devices. In other example embodiments the software product may be associated with other programming standards such as J2EE Enterprise Java Beans EJBs web archives WARs servlets server pages filters Javascript and or SAP Netweaver.

The log messages may include one or more messages notes signals records or other communications indicating a system event occurred. The log messages may be informative records produced or generated during run time for analysis and or troubleshooting of one or more system events. For example when a user logs into the software product the software product may be configured to generate one or more informative log messages recording information pertaining to the login such as the name of the user the time date of login and the location. In some implementations there may be different types of log message including for example informative warning error and or fatal log messages wherein the type of log message generated by the software product may correspond to the severity and or importance of the system event which occurred.

As referenced above the log messages may be generated on or otherwise provided to the logging framework . The logging framework may include an application product program or other system for recording and or tracking errors or other events generated during one or more uses of the an application or product. For example the logging framework may be configured to receive error or other usage records e.g. log messages from the host system including for example a host product . Then for example for the software product to be certified for operation with the host system the certification system may test the software product performance with regard to the proper generation of log messages on the logging framework .

The host product may include any application system code or other product configured to generate one or more log messages on the logging framework . For example the host product and logging framework may be part of the host system as referred to above wherein the host product generates log messages e.g. log messages in a log format on the logging framework responsive to one or more system events or errors.

As referenced above in some implementations the host product may include or otherwise be associated with an application server such as a J2EE application sever an SAP NetWeaver application server or another type of application server. According to an example embodiment the host product may include a customer relationship management CRM system wherein the CRM system may log messages on the logging framework corresponding to one or more messages provided to users of the CRM system. Then for example the product support may support the users of the CRM system e.g. host product who encounter the one or more messages by referencing the logging framework .

The product support may include a system program or support team or mechanism for supporting the host product including customer inquiries associated therewith. For example a user or customer using the host product may encounter one or more errors when using the host product . Then for example the user may contact the product support for help resolving the one or more errors. In response the product support may reference the logging framework to determine whether any log messages were created or generated by the host product corresponding to the one or more errors. Then based on the corresponding log messages the product support may help troubleshoot or otherwise determine the cause of the error s experienced by the user.

Thus as referenced above for the certification system to certify the software product for operation with the host product it may determine that the software product properly generates the log messages on the logging framework which are necessary for providing support services that are consistent with or required by support services available for the host product . For example the certification system may certify whether the log messages actually generated by the software product are in accordance with a log format associated with the logging framework . This certification may better ensure that the product support will be able to respond to any errors encountered by a user during the operation of the software product as part of the host system e.g. in association with the host product . For example similar to how the product support may reference the log messages on the logging framework to respond to errors associated with the host product the product support may be able to respond to errors associated with the software product by referencing the generated log messages on the logging framework .

The log format may include a format or style for the log messages . The log format may include which fields and or information should be included in one or more of the log messages . For example the log format may include a severity field a date field a time field a user field a message field a category field a location field an application field and or one or more additional or different fields. Then for example the log messages can include information corresponding to one or more of the fields of the log format .

According to an example embodiment the log messages may record or otherwise provide information associated with the occurrence of errors or other program faults during one or more operations of the software product . For example the log messages may record when a user fails to log in due to an invalid user name and or password. Or for example the log messages may record one or more determined user interaction s including the responses thereto by the software product by a user.

The user interaction s may include any interaction or combination of interactions with the software product . The user interaction s may for example generate or otherwise cause a system event within the software product such as a user error . The user interaction s may include any interaction such as a keyboard press mouse click stylus or joystick movement or any other interaction or combination of interaction s thereof.

The user error may include one or more indications that a system event has occurred within the software product . For example the user error may include one or more messages notes signals audio or other communication provided by the software product responsive to one or more of the user interaction s . According to an example embodiment the user error may include a pop up box displayed on an interface associated with the software product or for example the user error may include a sound or other audio or tone played upon an occurrence and or processing of the user interaction .

According to an example embodiment the user error may include a predetermined and or intentionally generated user error and performing e.g. generating the predetermined user error may be part of the certification process of the software product . For example one or more of the user interactions may be required to be performed to intentionally generate the user error . Then for example the software product may be anticipated to generate the log messages on the logging framework responsive to the intentionally generated user error s . The certification system may then for example certify the software product based on a determination as to whether or not the software product generated the log messages corresponding to the predetermined user error s as was anticipated.

The interface may include an interface with the software product configured to receive the user interaction s and or provide the user error . For example the interface may include a graphical user interface associated with the software product whereby a user may interact with the software product via the interface using a user input device .

The user input device may include any device configured to interact with the software product and or the interface . The user input device may include for example a mouse keyboard joystick microphone remote control or other input device. According to another example embodiment the user input device may include a device configured to interact with the software product wirelessly or through one or more networks such as a mobile phone or a computer on a network system.

According to an example embodiment the software product may receive the user interaction s from the user input device and provide the user error on the interface responsive to the user interaction s . For example a user trying to log into the software product may provide an invalid user name and or password. Then for example the software product may provide a message e.g. user error on the interface informing the user of the invalid user name and or password. The software product may also be configured to generate one or more log messages on a logging framework where the log messages report certain information about the user error .

To write the log messages to the logging framework the software product may be configured with a host interface A or associated with a code bridge B. According to an example embodiment the software product may be developed specifically for operation with the host system and the host product . In such embodiments the software product may be configured with the host interface A to write the log messages to the logging framework . The host interface A may include an application programming interface API operating system or library to support requests to and or from the logging framework . For example the software product may be developed in a version of Java corresponding to the version of Java utilized by the host product . Then for example the host interface A may include a logging statement to be inserted into the code of the software product that configures the software product to write the log messages to the logging framework .

In other example embodiments the software product may have been developed as a standalone application and or for a different system other than the host system. For example the software product may be previously configured to log messages to another logging framework e.g. log4j or Common Logging other than the logging framework e.g. Java . Then for example the software product may be configured e.g. by a software solution provider to operate with the host system using the code bridge B. The code bridge B may for example allow the software product to write the log messages to the logging framework without changing or otherwise modifying the code of the software program . For example the code bridge B may route messages generated by the software program to the logging framework . In an example embodiment the code bridge B may also format the routed messages into the log format .

As referenced above the software product may be developed by distributed by promoted by or otherwise provided by a software solution provider . The software solution provider may include a company organization individual system or other provider of the software product . For example the software solution provider may be a software developer that has developed the software product to operate in association with the host product .

The host system may for example record log messages e.g. on the logging framework based on events generated by or otherwise associated with the host system. For example the log messages may be used to determine whether or not the host system is operating properly and or how to resolve issues that may have arisen. Then for example the software product may be expected to generate an anticipated error log on the logging component. Then for example the certification system may compare the anticipated error log to the generated error log and may certify or otherwise deny certification to the software product for interaction with the error logging system and or one or more other components associated with the error logging system.

The host product may have an established base of customers for example using a CRM system wherein the software solution provider may develop the software product to work in association with the host product wherein the host product may offer an operating platform with which the customers are already familiar. However as a prerequisite to allowing the software product to operate in association with the host product the software solution may have to be certified by the certification system as referenced above such that it has been ensured that the product support may support the software product using the logging framework e.g. similar to how the product support supports the host product .

As part of the certification process the software solution provider may submit or otherwise provide a product profile associated with the software product . The product profile may include an outline summary abstract or other description of the software product . The product profile may include for example a field of operation and anticipated log messages associated with the software product . In other example embodiments the product profile may include additional and or different information as well.

The field of operation may include a technical or other field associated with the software product . The field of operation may include an area or subject matter associated with the product. For example the field of operation may include finance if the software product is a financial application or security if the software product was associated with providing security. According to another example embodiment the field of operation may be associated with one or more aspects of the software product including a particular usage thereof. For example the software product may be a human resources application wherein the field of operation may be associated with the security aspect and or login authentication.

The field of operation may be used to generate or otherwise determine the anticipated log messages . The anticipated log messages may include one or more log messages anticipated to be generated by the software product responsive to one or more user interactions . For example a user that clicks on a control e.g. user interaction of the software product on the interface may receive an invalid authority user error . Then for example responsive to the user interaction the software product may be anticipated to generate a log message e.g. anticipated log message reading User does not have proper permissions to perform desired function on the logging framework . According to an example embodiment the anticipated log messages may be used by the certification system to certify that the software product does operate as intended e.g. by comparing the anticipated log messages to the log messages actually generated by the software product as will be discussed in greater detail below .

A log engine may determine what log messages e.g. if any are generated by the software product . For example the log engine may retrieve the log messages from the logging framework wherein the software product may write the log messages on the logging framework . Or for example the log engine may receive the log messages directly from the software product prior to or otherwise corresponding with the generation of the log messages on the logging framework .

An interface engine may be configured to determine the user errors generated by the software product . For example the interface engine may log or otherwise determine the user errors from the interface . Or for example the interface engine may receive or determine the user errors directly from the software product independent of the interface .

An evaluator may be configured to determine a correspondence level between the log messages and the anticipated log messages . As referenced above the evaluator may compare for example the log messages generated by the software product on the logging framework to the log format and or the anticipated log messages to determine the correspondence level . According to another example embodiment the evaluator in determining the correspondence level may compare the generated log messages to the user error s .

The correspondence level as just referenced may indicate a level of correspondence between an operation of the software product to an anticipated or expected operation of the software product . For example the correspondence level may indicate a level of correspondence between the user interaction s the user error provided in response to the user interaction s the log messages actually generated by the software product corresponding to the user error and the anticipated log messages anticipated to be generated by the software product responsive to the user interaction s and or user error .

A certification engine may determine whether or not to certify the software product . For example the certification engine may compare the correspondence level to a threshold correspondence level . The threshold correspondence level may be a minimum level of correspondence that the software product is to satisfy to be certified to operate in association with the host product and or the logging framework . Then for example if the certification engine determines that the correspondence level is greater than or equal to the threshold correspondence level the certification engine may certify the software product for operation with the logging framework and or host product as discussed above.

The certification system of may be used to evaluate situations where the compatibility of two or more products or systems are in question. For example a first product e.g. host product may operate using a particular system or mechanism e.g. logging framework and a second product e.g. software product may be configured to operate consistently with the system or mechanism used by the first product. Then based on an anticipated performance and actual performance of the second product the certification system may certify or otherwise deny certification to the second product for operation with the first product and or system or mechanism.

After a start operation the software product may be determined wherein the software product is configured to receive and process user interactions . For example the software product may be identified wherein the software product is configured to receive and process the user interactions .

One or more anticipated log messages corresponding to each of the predetermined user errors which the software product is anticipated to generate on a logging framework associated with supporting the software product may be identified . For example the anticipated log messages may be identified wherein the software product is anticipated to generate the anticipated log message on the logging framework .

The software product may be required to perform each of the plurality of predetermined user errors responsive to the one or more user interactions . For example the software product may be required to perform each of the user error s responsive to the one or more user interaction s . Then for example the certification system may enforce the requirement.

It may be determined that the software product generates for each of the plurality of predetermined user errors one or more log messages on the logging framework . For example the log engine may determine that or whether the software product generates the log messages on the logging framework . Then for example the evaluator may determine whether the log messages were generated for each of the plurality of user errors wherein the interface engine may determine the user errors .

The software product may be certified for supportability based on a comparison of the anticipated log messages with the generated log messages . For example the certification engine may certify the software product for supportability based on a comparison of the anticipated log messages to the generated log messages .

After a start operation it may be determined that a software product is configured to generate log messages on a logging framework associated with providing the product support for the software product the log messages being based on one or more predetermined user errors . For example the log engine may determine that the software product is configured to generate the log messages on the logging framework associated with the product support wherein the log messages may be based on the user errors .

A correspondence level may be determined between the log messages generated during a use of the software product and the predetermined user errors generated during the use . For example the evaluator may determine the correspondence level between the log messages generated during a use of the software product and the user errors generated during the use.

A determination may be made that the correspondence level is greater than or equal to a threshold correspondence level associated with the product support . For example the certification engine may determine that the correspondence level is greater than or equal to the threshold correspondence level associated with the product support .

The software product may be certified for the product support based on the determination . For example the certification engine may certify the software product for the product support based on the determination.

A severity field may indicate a severity of the log message and or system event associated with the log message. For example in the example of each of the log messages may be informational log messages except log message A. Log message A may be generated as a result of an error occurring with a system or product. The log message may also include one or more visual and or audio indicators indicating the severity of the error. For example yellow may indicate medium severity and red may indicate a higher severity. In other example embodiments additional and or different severity assessments may be used.

The date field and time field may indicate the date and time of the user interaction causing the log message the system event generated as a result of the user interaction and or the generation of the log message on the logging framework . For example the first log message may have been logged by the logging framework on Nov. 7 2006 at 5 10 pm and 54 seconds and 796 hundredths of a second.

The message field may indicate the content of the message generated indicating the user interaction and or system response or event occurring in response to or otherwise associated with the user interaction. For example in the sixth log message the system may LOOKUP JMX which may correspond for example to a user search for JMX and or a system response to some other use interaction.

The category field may indicate a category associated with each log message . The category for example may correspond to a folder and or subdirectory accessed by the program generating the log message. Or for example in other example embodiments the category may correspond to a broader field such as log in finance or assignments. 

The location field and the application field may indicate the location of the machine on which the log message was generated and the application on the machine causing the log message respectively. For example the location may correspond to an internet protocol IP media access control MAC or other network address of the machine where a user interaction was received. Then for example the application field may indicate which application on the identified machine was being used that generated the log message .

According to an example embodiment the logging framework may include one or more other tools for organizing and or sorting through the log messages such as filters . The filters may for example search through the log messages for any log messages matching a set of fields as specified by a user or product support .

Although the above description is provided in terms of specific examples it will be appreciated that many other examples and settings are contemplated. For example the term business document should be interpreted broadly as including any document that is used in profit generation of some sort although the business document also may refer to documents for non profit endeavors as well including for example schools churches charities hospitals or virtually any other organization. Further the business document is merely an example and other applications such as applications for personal use also may be used.

Implementations of the various techniques described herein may be implemented in digital electronic circuitry or in computer hardware firmware software or in combinations of them. Implementations may be implemented as a computer program product i.e. a computer program tangibly embodied in an information carrier e.g. in a machine readable storage device or in a propagated signal for execution by or to control the operation of data processing apparatus e.g. a programmable processor a computer or multiple computers. A computer program such as the computer program s described above can be written in any form of programming language including compiled or interpreted languages and can be deployed in any form including as a stand alone program or as a module component subroutine or other unit suitable for use in a computing environment. A computer program can be deployed to be executed on one computer or on multiple computers at one site or distributed across multiple sites and interconnected by a communication network.

Method steps may be performed by one or more programmable processors executing a computer program to perform functions by operating on data and generating output. Method steps also may be performed by and an apparatus may be implemented as special purpose logic circuitry e.g. an FPGA field programmable gate array or an ASIC application specific integrated circuit .

Processors suitable for the execution of a computer program include by way of example both general and special purpose microprocessors and any one or more processors of any kind of digital computer. Generally a processor will receive instructions and data from a read only memory or a random access memory or both. Elements of a computer may include at least one processor for executing instructions and one or more memory devices for storing instructions and data. Generally a computer also may include or be operatively coupled to receive data from or transfer data to or both one or more mass storage devices for storing data e.g. magnetic magneto optical disks or optical disks. Information carriers suitable for embodying computer program instructions and data include all forms of non volatile memory including by way of example semiconductor memory devices e.g. EPROM EEPROM and flash memory devices magnetic disks e.g. internal hard disks or removable disks magneto optical disks and CD ROM and DVD ROM disks. The processor and the memory may be supplemented by or incorporated in special purpose logic circuitry.

To provide for interaction with a user implementations may be implemented on a computer having a display device e.g. a cathode ray tube CRT or liquid crystal display LCD monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

Implementations may be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation or any combination of such back end middleware or front end components. Components may be interconnected by any form or medium of digital data communication e.g. a communication network. Examples of communication networks include a local area network LAN and a wide area network WAN e.g. the Internet.

While certain features of the described implementations have been illustrated as described herein many modifications substitutions changes and equivalents will now occur to those skilled in the art. It is therefore to be understood that the appended claims are intended to cover all such modifications and changes as fall within the embodiments.

