---

title: Methods and apparatus to manage conference call activity with internet protocol (IP) networks
abstract: Methods and apparatus to monitor conference call activity with Internet protocol (IP) networks are disclosed. An example method comprises monitoring a network for a first conference call participant connection request, prompting the first conference call participant for authentication credentials, and when the first conference call participant is authorized based on the credentials, associating an Internet protocol (IP) address with the first conference call participant for use in place of the authentication credentials.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09325749&OS=09325749&RS=09325749
owner: AT&T Intellectual Property I, LP
number: 09325749
owner_city: Atlanta
owner_country: US
publication_date: 20070131
---
This disclosure relates generally to telecommunications and more particularly to methods and apparatus to manage conference call activity with Internet protocol IP networks.

Meeting organizers project leaders and or business managers hereafter meeting facilitators frequently need to communicate with employees consultants and or vendors involved in various projects. Projects and or sub tasks associated with projects may include the efforts and or cooperation of employees consultants and or vendors located within geographically separated parts of one or more organizations e.g. company business not for profit organization etc. . As a result conference calls are a particularly useful management tool for meeting facilitators.

At the beginning of a conference call participants typically call a telephone number and verbally introduce themselves to the other participants already engaged in the conference call. As the number of participants increases the existing participants must strive to remember a large number of voices and their associated names. Additionally those participants that call in to the conference late e.g. after initial introductions have been completed may not have the opportunity to hear participant introductions. Thus they may not recognize who is speaking during subsequent times of the conference call. As a result it may be necessary to interrupt the conference call meeting and interject various questions about who was just speaking.

The conference call allows the meeting facilitator and other project members to discuss project plans project issues and or assign additional project tasks designed to accomplish various project objectives. Particular participants that are assigned action items e.g. project tasks and or sub tasks may verbally acknowledge acceptance of the task s communicate task objectives and deliverables and or communicate task start and or end dates for which the task should be completed. In such circumstances the meeting facilitator or another participant maintains the burden of taking meeting notes and documenting which conference call participants are responsible for the various assigned tasks. This burden is particularly difficult when the number of participants is high. Such administrative tasks may distract the meeting facilitator and or other note taking participants from applying his or her talents to project problem solving and or other expertise. Such tasks may also consume meeting time.

Methods and apparatus to monitor conference call activity with Internet protocol IP networks are disclosed. An example method comprises monitoring a network for a first conference call participant connection request prompting the first conference call participant for authentication credentials and when the first conference call participant is authorized based on the credentials associating an Internet protocol IP address with the first conference call participant for use in place of the authentication credentials.

As discussed in further detail below the example conference call manager authenticates one or more conference call participants and allows them to issue voice commands. The voice commands aid conference call efficiency by automating certain tasks such as for example assigning one or more participants as owners of a meeting task scheduling status delivery dates and or scheduling future meetings. A meeting facilitator may view a complete list of voice commands via a graphical user interface GUI e.g. a web based GUI and or edit delete and or otherwise modify the functionality of the example voice commands via the GUI.

Further while disclosed examples discussed herein utilize session initiation protocol SIP exchanges messages and or techniques to initiate establish and or modify VoIP communication sessions and or data transfer sessions any number and or type s of communication protocol s message s exchange s and or technique s for initiating establishing and or modifying communication sessions and or data transfer sessions may be utilized. For example any past current and or future media gateway control protocol MGCP standard and or specification such as the International Telecommunication Union ITU H.24S standard may be employed.

To allow users to for example place and or receive a VoIP based communication e.g. a telephone service Internet service data service messaging service instant messaging service electronic mail e mail service chat service video service audio service gaming service etc. the example communication system of includes one or more VoIP enabled devices four of which are illustrated in with reference numerals and . The example VoIP devices and of maybe any type s of VoIP enabled devices including for example a corded and or cordless VoIP phone a VoIP residential gateway a VoIP enabled personal computer a VoIP endpoint a wireless VoIP device e.g. a wireless fidelity WiFi Internet protocol IP phone and or a VoIP adapter e.g. an analog telephone adapter ATA . An example manner of implementing any or all of the example VoIP devices and of is described below in connection with .

As illustrated in each of the example VoIP enabled devices and includes a conference call client . The example VoIP enabled devices and are configured to establish one or more communication sessions using for example Internet protocol IP based communication universal datagram protocol UDP based communication transmission control protocol TCP based communication TCP IP based communication file transfer protocol FTP communication and or hyper text markup language HTML based communication. Example data that may be exchanged and or transmitted via a data transfer session includes but is not limited to digital pictures audio video data files advertisements coupons website information etc. Data transfer sessions may also be used to send and or exchange any number and or type s of account information and or user validation information e.g. a password a personal identification number PIN an account number a user name an account name a government identification number a social security number a credit card number an address an authorization code a conference call participant identification number and or a phone number . In some examples data transfer sessions and or data transmitted via a data transfer session may be encrypted for security. The example data of may be stored in VoIP enabled devices using any number and or type s of data structures such as for example a so called Internet cookie. Although the various instances of data in are labeled with the same reference numeral those data instances are typically not the same but are instead specific to the VoIP devices in which they reside.

The example conference call client of the VoIP enabled devices establishes participation in conference call activity conducted by the conference call manager of . Conference call communication session s maybe initiated and or established during and or after the establishment of a VoIP communication session and as directed and or initiated by a user of a VoIP enabled device . For example a user may join a conference call from the VoIP enabled device by pressing one or more general purpose and or dedicated keys and or buttons of an input interface such as a keyboard keypad and or touch screen of the device s . For instance an input interface may include a dedicated button to initiate a connection with the conference call manager or the user may dial the general call in telephone number to participate in the conference call. The conference call client may respond to the input by establishing a connection to the conference call based on for example the call in telephone number stored in a memory of the VoIP enabled device and or an IP address of the example conference call manager stored in the memory of the VoIP enabled device . As discussed in further detail below the conference call client may facilitate conference call connectivity for the user user authentication with the conference call manager and or upload various authentication credentials from the VoIP enabled device to the conference call manager . Authentication credentials may include but are not limited to PINs passwords authorization codes user names and or stored user voice samples for voice print authentication at the conference call manager discussed in further detail below.

To provide VoIP communication services the example system of includes any number and or type s of VoIP communication networks one of which is illustrated in with reference numeral . To initiate receive establish complete and or route any type s of VoIP communication sessions and or VoIP telephone calls with to and or between the example VoIP devices the example VoIP communication network of may communicate with and or contain any portion of any number and or type s of call processing system s . The call processing system s and or VoIP networks may be operated by one or more service providers.

In the example communication system illustrated in the call processing system s are implemented using an architecture commonly referred to in the industry as a soft switch architecture in that a first server e.g. a media gateway implements the actual transmitting receiving and or transcoding of communication session data while a second server e.g. a media gateway controller implements the signaling control logic and or protocol s to initiate route and or establish VoIP communication sessions. However any type s of call processing system architecture s may be implemented. For example the call processing system s maybe implemented in accordance with a past current and or future 3rd Generation Partnership Program 3GPP Internet Multimedia Subsystem IMS standard and or specification and or maybe implemented using for example session border controllers call processors call serving controllers etc.

The example call processing system s of can include one or more optional SIP Proxies to assist with the processing and or routing of SIP messages and or SIP exchanges that are used by VoIP devices to initiate and or establish VoIP communication sessions.

As illustrated in the example VoIP communication network may include an interface to and or contain any portion of a public land mobile network PLMN i.e. a cellular communication network an interface to and or contain any portion of a PSTN and or an interface to and or contain a portion of any number and or type s of additional communication networks such as the IP network e.g. the Internet . For example using any number and or type s of technique s method s protocol s and or technology ies the call processing system s and the PSTN can facilitate telephone calls between a PSTN based phone not shown and any of the example VoIP enabled devices .

The example PLMN and or the example PSTN of may be implemented by any number and or type s of communication device s switch es protocol s system s and or technology ies . For instance the example PLMN may include any number of cellular base stations that can transmit cellular signals to and or receive cellular signals from a cellular communication device not shown using any type s of protocols e.g. time division multiple access TDMA code division multiple access CDMA orthogonal frequency division multiple access OFDM etc. .

In the illustrated example of the example VoIP devices are communicatively coupled to the example VoIP communication network via any number and or type s of public and or private IP networks such as the Internet. However any number and or type s of past current and or future communication network s communication system s communication device s transmission medium s protocol s technique s specification s and or standard s could be used to couple the VoIP devices to the VoIP communication network . Interfaces between the VoIP devices and the IP network and or the VoIP communication network and the IP network may be implemented using any number and or type s of past current and or future device s technology ies and or method s . For instance the example VoIP devices may be coupled to the IP network via any type s of voice band modem s digital subscriber line DSL modem s cable modem s Ethernet transceiver s optical transceiver s IP virtual private network VPN connection s Institute of Electrical and Electronics Engineers IEEE 802.11x a.k.a. WiFi transceiver s IEEE 802.16 a.k.a. WiMax access point s etc. Moreover the example TP network of may extend geographically to include a location near to and or encompassing a VoIP device . For example the LP network may include a wireless access point not shown by which for example the example WiFi IP phone connects to the IP network .

While an example VoIP communication network has been illustrated in the devices networks systems and or processors illustrated in may be combined divided re arranged eliminated and or implemented in any other manner. For example the example call processing system s illustrated in may be a logical entity of the example VoIP communication network and thus need not be implemented separately. Further any or all of the example VoIP devices the example conference call client the example call processing system s and or more generally the example VoIP communication network of may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Moreover the example VoIP communication network may include additional servers systems networks gateways portals and or processors than those illustrated in and or may include more than one of any or all of the illustrated devices servers networks systems gateways portals and or processors.

While the example VoIP enabled devices of include conference call clients that implement substantially similar functionality a particular conference call client implemented by any of the VoIP enabled devices may differ in any way s from a conference call client implemented by any other VoIP enabled device . For example a first example conference call client e.g. implemented by the example PC may be implemented as machine accessible instructions executed by a processor while a second example conference call client e.g. implemented by the example VoIP phone is implemented as any combination of firmware hardware and or logic. Further the example conference call client may differ in the number and or type s of features they implement and or perform.

In addition to any number and or type s of specialized hardware firmware and or logic to perform VoIP processing functions the example VoIP processor of may include any number and or type s of specialized and or general purpose controller s and or processing unit s capable of executing coded instructions. For example the controller and or processing unit may perform any number and or type s of VoIP processing functions by carrying out and or executing coded instructions and or present in a main memory of the VoIP processor e.g. within a random access memory RAM a read only memory ROM and or on board memory of the VoIP processor . For example all or some of the coded instructions and or may be executed to implement the example conference call client of and or the example machine accessible instructions discussed below in connection with . Additionally or alternatively any or all of the example conference call client of and or the example machine accessible instructions of may be implemented as hardware software firmware and or logic and or any combination s of hardware software firmware and or logic within the example VoIP enabled device of .

The example VoIP processor is in communication with the main memory including a read only memory ROM and or the RAM and other devices and or modules of the example VoIP enabled device of via any type s and or number of buses . The example RAM may be implemented by for example dynamic random access memory DRAM synchronous dynamic random access memory SDRAM and or any other type of RAM device s . The example ROM may be implemented by for example Hash memory ies and or any other desired type of memory device s . Access to the example memory and is typically controlled by a memory controller not shown . Additionally or alternatively the example RAM and or example ROM of may be used to store data received by and or transmitted by the example VoIP enabled device of via a data communication session.

To electrically couple signals e.g. speech signals between a handset and the example VoIP processor the example VoIP enabled device of includes any number and or type s of analog circuits . An example analog circuit includes any number and or type s of filter s analog to digital converter s and or digital to analog converter s to convert between analog signals sent to and or received from an example handset and digital signals sent to and or received from the example VoIP processor . The handset can be corded or cordless.

If a cordless handset is to be employed the example analog circuit of is implemented with any number and or type s of wireless communication technologies to communicatively couple the example VoIP processor with any type of cordless handset . Moreover the example analog circuit of may additionally or alternatively implement any number and or type s of subscriber line interface circuits SLICs that allow any number and or type s of corded and or cordless PSTN based telephones to be electrically coupled to the example VoIP processor of . The latter example could be used for instance in implementations where the example VoIP enabled device is located in and or implements a VoIP analog telephone adapter ATA and or residential gateway RG .

To facilitate user inputs via any type of input device e.g. a keypad a keyboard and or a touch screen the example VoIP enabled device of includes any type of input interface . The example input interface of electrically couples and or translates electrical signals conveying key and or button press information from the example input device to the example VoIP processor . The example input interface and or the example input device may be used by a user to initiate and or establish a parallel and or secondary data communication session that may be used by for example the VoIP processor and or any application implemented by and or within the example VoIP enabled device to send for instance the example user identification ID device ID and or voice print information to the conference call manager of .

To provide output information to a user via any number and or type s of displays the example VoIP enabled device of includes any number and or type s of display interfaces . An example display interface receives information e.g. alphanumeric characters to be displayed from the example VoIP processor and creates electrical signals suitable for displaying the information on the example display . The display of the illustrated example is a liquid crystal display LCD screen. The example display interface and or the example display may also be used to for example display pictures text e.g. alphanumeric characters and or video received by the example VoIP enabled device via a parallel and or secondary data communication session.

To communicatively couple the example VoIP enabled device to the example IP network of a local area network LAN a modem a router a bridge and or a gateway the example VoIP enabled device includes any number and or type s of network interfaces . The example network interface s of implement any number and or type of communication and or data interface s in accordance with any past current and or future standards such as Ethernet DSL WiMax WiFi cable modems etc.

While an example VoIP enabled device is illustrated in the VoIP enabled device may be implemented using any number and or type s of other and or additional processors devices components circuits modules interfaces etc. Further the processors devices components circuits modules elements interfaces etc. illustrated in may be combined divided re arranged eliminated and or implemented in any of a number of ways. Additionally any or all of the example VoIP enabled devices may be implemented as any combination of firmware software logic and or hardware. Moreover the example VoIP enabled device may include additional processors devices components circuits interfaces and or modules in addition to those illustrated in and or may include more than one of any or all of the illustrated processors devices components circuits interfaces and or modules.

The example system of also includes a voiceprint server to identify callers by their voices. For example when a caller dials in to the call receiver via the VoIP processor and speaks their name and or a password the voiceprint server converts the vocal information into an electronic proxy or signature e.g. an analog signal such as a waveform having an amplitude and time axis a digital signal such as a fast Fourier transform value of the received signal a digital value etc. that is unique to at least one aspect of the caller s voice hereinafter voiceprint . Alternatively the caller may have a representative voice sample stored on their VoIP enabled device e.g. a voice sample stored in the RAM as data that is uploaded to the call receiver via the IP network and the VoIP processor . The voiceprint server of the illustrated example accesses a voiceprint database to perform a search for an equivalent voiceprint i.e. an electronic proxy substantially the same as the electronic proxy for the caller s voice signal . If such an equivalent voiceprint is found in the voiceprint database then an identifier associated with the voiceprint is retrieved from the voiceprint database . The identifier may be for example the caller s name the caller s phone number a pseudonym for the caller etc. As discussed in further detail below the voiceprint server monitors the conference call for voiceprints to identify call participants to associate conference call activities with identified callers and or to respond to voice commands. Additionally or alternatively the call receiver may monitor all incoming data from the callers and identify conference call participation authority via an associated IP address as discussed in further detail below.

If the voiceprint server searches the voiceprint database and fails to find a match the voiceprint server of the illustrated example permits the caller to associate their voice with their identity i.e. to establish a voiceprint . For example the voiceprint server may upon failing to find a voiceprint match play a recording of instructions for the caller to follow. Additionally or alternatively the voiceprint server may provide instructions to the call receiver . to display instructions on the display of the caller s VoIP enabled device . The recording and or display instructions may request that the caller recite one or more words designed to generate a unique voiceprint indicative of that caller. Alternately such caller identification may be performed or even be required to be performed apart from a conference call e.g. in a separate call to set up the service prior to the call. 

The example system of also includes a voice command server to monitor the conference call for voice commands. The voice command server which in the illustrated example is operatively connected to the call receiver receives the same audio signals as the conference participants and or the voice print server and compares received words and phrases extracted from those audio signals to specific commands previously stored in a voice command database . The voice command database may contain one or more tables of commands such as the example command table shown in . The command table of the illustrated example includes a command column and an instruction column . The command column includes entries identifying various verbal commands to which the voice command server will respond. As shown in the example command column includes the example commands of action item status delivery and schedule meeting . Each example command corresponds to a list of one or more instructions to be executed in response to a participant s recitation of the corresponding command. The instructions are stored in the instruction column adjacent to the corresponding commands. As discussed in further detail below the meeting facilitator may view the complete list of voice commands via a graphical user interface GUI e.g. a web based GUI . As discussed in further detail below the meeting facilitator may edit delete and or otherwise modify the functionality of the voice commands via the GUI.

The voice command server of the illustrated example also includes a memory e.g. a Hash memory containing a list of some or all of the commands capable of being executed by the server . However unlike the example voice command database which contains all the commands and all corresponding instructions the example memory only includes the instructions for the most frequently used commands. In other words the memory does not include the instructions for less commonly used commands. This reduced instruction set may reduce response time after a command is spoken by a participant by eliminating a fetch e.g. a database query to the voice command database .

In the illustrated example the memory includes an example local memory table such as the table shown in . The example local memory table includes a command column and an instruction column much like the command table of . However unlike the local memory table of only includes instructions for the most frequently used commands. Such reduced command list minimizes memory size requirements of the e.g. flash memory while still reducing command execution time. In particular because many commands can be handled simply by accessing the local memory table the frequency at which the voice command server queries the voice command database is reduced. If a participant speaks a command that does not have a corresponding instruction in the instruction column of the local memory table a refer lo database instruction causes the voice command server to query the voice command database for the corresponding instructions.

The local memory table may be dynamic in that the set of commands with corresponding instructions can change based on usage patterns or change based on modification by the meeting facilitator. In such an approach a threshold metric may determine the instructions stored in the local memory table . Such threshold metrics may include but are not limited to a threshold number of recited commands per unit of time e.g. a command recited by a participant more than two limes within a 10 minute period and a frequency weight of commands recited e.g. the top 5 historically most frequently recited commands . Alternatively the local memory table may be static e.g. pre set based on typical usage pattern estimated usage patterns arbitrary usage patterns meeting facilitator preferences etc. .

The example conference call manager of may accept voice commands from any and or all of the call participants. However because the example conference call manager is able to identify callers based on voiceprints it is also able to enforce an authorization policy wherein some speakers are permitted to issue certain commands and or some speakers are not permitted to issue certain commands. To this end the conference call manager may be programmed to place participants in authorization categories or levels. For example a meeting facilitator or one or more other persons of high importance may have a maximum permitted level of authorization to issue voice commands. Thus for example the meeting facilitator may be permitted to issue commands that dictate when the conference call is over e.g. a voice command End Meeting commands to go off record and or other commands . Other conference call participants of lesser authority such as mid level managers for example may have a second lower level of authorization that permits usage of a lesser number of commands during the conference call than the first authorized level. For example mid level managers may be permitted to issue voice commands such as Action Item in which project tasks are assigned to various project members but if they issue higher level commands e.g. an End Meeting command the conference call manager will not respond. Additionally or alternatively if a meeting participant has a lower authorization level no authorization then such participants may merely listen to the other conference call participants or contribute to meeting discussion but any commands they issue will be disregarded by the conference call manager . Furthermore if the meeting facilitator chooses to add and or delete authorization levels during the meeting the meeting facilitator may make such modifications in real time via for example a web based GUI. The meeting facilitator may also choose to publish a live list of meeting attendees for the other participants to view or hide such participant list information as desired.

Controlling the authorization of various conference call participants may also be accomplished by tracking the caller s IP address. For example a first caller may dial in to the call receiver from the VoIP enabled device and authenticate with the voice print server by speaking a representative assortment of words and or by the conference call client sending a previously stored representative voice recording e.g. stored as data in the RAM to the voice print server via the VoIP processor . The example conference call client may also send the IP address of the VoIP enabled device of the first caller . The call receiver receives the IP address of the first caller and associates it with the caller s authorization status. Turning briefly to an example IP based authorization table is shown. The IP based authorization table of the illustrated example includes an IP address column and an authorization column . The IP address column includes entries identifying various IP addresses from callers that have established a connection to the example conference call manager to participate in a conference call. The authorization column includes IP addresses that define the level of conference call authorization for each corresponding IP address. For example a first row of the example authorization table illustrates that the IP address 192.168.254.32 is associated with an authorization of Listen which only allows the caller to hear conference call participants but does not permit vocal participation. On the other hand a second row of the example authorization table illustrates that the IP address 192.168.254.17 is associated with an authorization of Full which allows the caller to exercise any and all voice commands within the voice command database . In the illustrated example a manager and or system administrator of the example conference call manager creates various subgroups of voice commands each having a particular authorization category. Thus in the example of rows and of the example authorization table illustrate the sub categories of authorization associated with certain IP addresses.

Although the above example discusses four levels of authorization persons of ordinary skill in the art will appreciate that other numbers of levels are likewise appropriate. Further persons of ordinary skill in the art will appreciate that the example conference call manager enforces the authorization policy by simply ignoring unauthorized commands from speakers and or by issuing a sound or other signal light indicating the requested action is blocked by the authorization mechanism to ensure that participants are aware their requested action was refused. For example attempts by unauthorized callers to invoke various voice commands may prompt the call receiver to transmit a command denied message to one or more of the callers VoIP enabled device s such as on the display s .

Voice commands recognized by the voice command server and confirmed by the voice print server as belonging to an authorized conference call participant may be confirmed via a confirmation message presented on the display of one or more of the example VoIP enabled device s . In the illustrated example conference call manager of the voice command issued by the authorized participant e.g. the meeting facilitator is presented on the VoIP enabled device of the authorized participant with a request to confirm execution of the voice command. For example the confirmation message may recite Are you sure you wish to end the meeting The example display may also include two soft keys one of which is associated with a Yes answer and the other associated with a No answer. As such if the authorized participant happens to recite one or more of the action item commands e.g. end meeting in normal conversation rather than as an intention voice command then the conference call manager will not erroneously execute an unintended command. Persons having ordinary skill in the art will appreciate that soft keys may represent user selectable buttons that allow the user to trigger one or more events and or select one or more features. As discussed in further detail below soft keys presented on the example display may allow the user to select an action item rather than or in addition to reciting the desired action item by voice. The soft keys may be arranged on the example display in any orientation with respect to the proximity of adjacent soft keys present on the display .

Returning to the example conference call manager also includes a conference log server to receive and record a chronological log of events and conversations that occur during the conference call. The example conference log server of includes a voice to text engine and saves converted text log data to a conference log database . The conference log server is communicatively connected to the call receiver and may before converting voice to text initiate a request to the voiceprint server to determine if the voice belongs to an authorized participant. Alternatively if a complete log is desired the log server may log all detected conversations during the call. As discussed in further detail below if non authorized voices are received by the call receiver they may be ignored while still allowing such participants to listen.

Upon completion of the conference call the call receiver of the illustrated example instructs a communication server to publish the conference log to for example one or more web pages accessible via the Internet and or intranet and or to publish the log by forwarding the same to one or more e mail addresses. For example the communication server may include a web and or e mail server which additionally or alternatively e mails the conference log to the conference participants to a selected subset thereof and or to a third party i.e. another call participant . In the illustrated example the communication server transmits a termination message to one or more of the callers which is displayed on the display of the VoIP enabled device . Additionally or alternatively the communication server may transmit a message to include web address information from which the callers may later retrieve a log of the completed conference call. Rather than immediately publishing the conference log to the Internet intranet and or e mailing the log to the participants a subset of the participants and or a non participant the example conference call manager may allow the meeting facilitator to review edit and or redact the conference log prior to publication. Log output formats may include but are not limited to Microsoft Word ASCII text and or Adobe PDF.

Flowcharts representative of example machine readable instructions for implementing the example system to manage conference call activity with VoIP networks of are shown in . In these examples the machine readable instructions comprise a program for execution by a a processor such as the processor shown in the example computer discussed below in connection with b a controller and or c any other suitable processing device. The program may be embodied in software stored on a tangible medium such as for example a flash memory a CD ROM a floppy disk a hard drive a digital versatile disk DVD or a memory associated with the processor but persons of ordinary skill in the art will readily appreciate that the entire program and or parts thereof could alternatively be executed by a device other than the processor and or embodied in firmware or dedicated hardware in a well known manner e.g. it may be implemented by an application specific integrated circuit ASIC a programmable logic device PLD a field programmable logic device FPLD discrete logic etc. . For example any or all of the system to manage conference call activity with VoIP networks the conference call manager the VoIP processor the VoIP devices the call processing system s the conference call client the call receiver the voiceprint server the voiceprint database the voice command server the voice command database the conference log server the conference log database and the web communication server could be implemented by software hardware and or firmware. Also some or all of the machine readable instructions represented by the flowcharts of maybe implemented manually. Further although the example program is described with reference to the flowcharts illustrated in persons of ordinary skill in the art will readily appreciate that many other methods of implementing the example machine readable instructions may alternatively be used. For example the order of execution of the blocks may be changed and or some of the blocks described may be changed substituted eliminated or combined.

The program of begins at block where the example system monitors one or more communication lines e.g. telephone lines VoIP networks etc. for incoming calls. In particular the call receiver is assigned a telephone number and or an TP address on a network that when accessed causes the network to communicatively connect the calling conference call participant s to the system . Alternatively rather than providing each caller with the telephone number assigned to the call receiver the callers may be provided with an IP address a web address one or more telephone numbers that are within their local calling area and or one or more toll free numbers e.g. 800 numbers . Persons of ordinary skill in the art will appreciate that alternate telephone numbers web addresses and or IP addresses may via a service signal control point SCP DNS server and or similar device route the calls to the call receiver to communicatively connect callers to the system and to one another.

If no calls are received at block then the program loops at predetermined intervals until a call is received. When a call is received block the call receiver returns a confirmation message to the calling VoIP enabled device . In the illustrated example the call receiver instructs the conference call client of the VoIP enabled device to provide authorization credentials if any block . As described above the conference call client may have a representative voiceprint sample saved in a memory of the VoIP enabled device . Additionally or alternatively the voiceprint server may prompt the caller to authenticate their voice and or otherwise identify themselves block . For example the system may at block play a recorded message and or present instructions on the display that request the caller to speak their name and or enter a passcode. The meeting facilitator may set up the conference call such that all callers must speak their names for authentication block before proceeding to and or participating in the conference call. For example after the caller speaks their name the voiceprint server queries the voiceprint database for a corresponding voiceprint match. Such a voice sample may include the caller reciting the alphabet counting to ten and or reciting his or her name aloud. The representative vocal sample is saved in the voiceprint database and used for later authentication purposes as needed. If callers voices match a voiceprint in the voiceprint database the call receiver instructs the conference call client associated with the caller to transmit the caller s IP address block which is saved to an authorization table such as the authorization table discussed in view of .

In the event that the conference call client does not return a voiceprint as the authentication information the call receiver determines whether the source IP address is authenticated block . For example if the caller s IP address matches one in the example authorization table then in the illustrated example the caller is deemed authorized to participate in the conference call in which that caller has a predetermined authority level e.g. listen only full privileges voice command subgroup A voice command subgroup B etc. . However if the caller s IP address does not match one of the entries in the example authorization table then the example call receiver requests that the caller enter an authorization code at their corresponding VoIP enabled device block . For example the meeting facilitator may allow callers to participate in the conference call despite those callers not having a corresponding voiceprint in the voiceprint database by providing them with a passcode. If the caller enters the correct passcode e.g. a 4 digit number previously sent to the prospective caller via e mail at block then that caller may have their voice authenticated by the system at block or may simply be allowed to participate in the call as a zero authorization participant i.e. disallowing that caller from commanding the system by voice . If the user authenticates their voice the process may thereafter advance back to block to test the new voiceprint. As discussed above voiceprint authentication for a new caller begins with the voiceprint server requesting that the caller provide a representative sample of their voice block .

Returning to block if the caller fails to enter the correct passcode and or does not know the passcode the call receiver determines whether the caller may participate in the conference call at block . The meeting facilitator may allow callers without a passcode to have limited or no access to the conference call. If the meeting facilitator configures the system to allow only callers that have either an authenticated voiceprint and or a valid passcode then the system blocks the caller s access e.g. by disconnecting the unauthorized caller block and resumes waiting for prospective participants block . Alternatively if the facilitator configures the system to allow access for the caller without a valid passcode then the caller is permitted to listen to the conference call block . The caller may be permitted to listen to the call but audio signals e.g. voice from the caller may be blocked. Additionally or alternatively the example call receiver may instruct the conference call client to disable the microphone of the VoIP enabled device so that interruptions from the non privileged caller do not occur. However in situations where the call receiver does not have access to the conference call client and or the non privileged caller does not have the conference call client operating on the VoIP enabled device e.g. operating as an application programming interface API then the call receiver may block all incoming transmissions from the IP address associated with the non privileged caller. Such a configuration in which callers may not speak is particularly useful to facilitate corporate announcements to employees e.g. corporate reorganization announcements quarterly finance announcements etc. .

Returning to block after the call receiver receives a corresponding IP address of the conference call participant e.g. one or more callers then the call receiver sends a confirmation message to the conference call client of the VoIP enabled device to inform the caller that they are an attendee of the conference call block . Persons of ordinary skill in the art will appreciate that the VoIP enabled device may convey message data to the caller s via a visual display such as the example display described in view of and or via another mechanism such as an audible signal.

The conference call client configures one or more user input devices of the VoIP enabled phone such as softkeys and or dedicated buttons block . Such input devices may facilitate additional communication between the conference call participant and the conference call manager . For example a softkey may be configured to operate as an enter key thereby allowing the participant to type in numeric and or alphanumeric data using for example a phone keypad and then depressing the enter key when finished. In another example a softkey may be configured to invoke a date entry service of the example conference call manager . For example the participant may issue a voice command schedule meeting which requires entry of a meeting date and or time. As such the participant has the option to speak the corresponding meeting date so that the voice command server can convert the spoken date and or time to text and set the meeting time. Alternatively the participant may depress the enter date soft key on the VoIP enabled device and then type in the date and or time. As a result the participant may interact with the services of the example conference call manager while minimizing the verbal interruptions of the conference call meeting.

Upon completion of the soft key configuration the caller participates in the conference call session block . An example manner of processing commands during a conference call session block is shown in further detail in . The program of begins at block where the example system to manage conference call activity with VoIP networks monitors the voice signals associated with the conference call for action item commands. In particular the voice command server of the illustrated example receives audio signals corresponding to the participants discussion and determines whether a command has been issued by comparing the signals with entries in the voice command database or the local memory . As discussed above in view of the voice command database contains various commands in a command column and associated command instructions in an instruction column . The call receiver receives the IP address of die participant issuing a voice command block and compares the received IP address with the authorization table block . If the received IP address matches an entry of the authorization table block then the participant is allowed to invoke one or more commands determined by virtue of his her authorization status such as the status shown in column of . Alternatively the authorized IP address may only have sufficient privileges to listen to the conference call activity rather than issue one or more voice commands. Control proceeds to block for such participants having varying degrees of authorization as discussed in further detail below.

For participants that do not have an IP address matching that found in the authorization table block the call receiver invokes the services of the voice print server block . If the voiceprint server determines after a query to the voiceprint database that the speaker is not authorized to make the detected command block then program control returns to block where the server and or the call receiver continues monitoring for action item commands. If on the other hand the voiceprint server determines after a query to the voiceprint database that the speaker of the detected command is authorized to make the detected command block then program control advances to block . The voice print server instructs the call receiver to invoke the display of each VoIP enabled device so that the conference call participants know who is currently speaking block and the action item is processed block for the authorized participant.

If the meeting has not ended program control is directed from block to block where the system continues to monitor for action item commands as described above. The conference call meeting may end via an action item command being recited by a suitably authorized participant and or the meeting may end as a result of disconnection of all VoIP enabled devices e.g. all participants hang up their phones . If such a command to end the meeting is issued or if all of the conference call connections terminate block the call receiver sends a conference call termination message to the conference call clients of the VoIP enabled devices . As a result the conference call clients invoke the display interface s to display a message on the display such as for example The conference call has ended. You may hang up your telephone block . Program control then advances to block in which minutes from the conference call are published to some or all of the meeting participants and or to one or more designated third parties.

Additional details of the example program of block are shown in . The example program begins at block where the example system retrieves instructions associated with the command recited by the speaker. In particular the voice command server branches program control to one of the recited commands including but not limited to action item status delivery or schedule meeting . Commands in addition to or instead of those illustrated in block may be programmed into the voice command server as needed. Such commands may for example permit automatic entry of the task to be entered into an on line calendar. If the calendar is networked among other members of the project team via Microsoft Outlook for example then the command may also enter start dates end dates and or task objectives in the calendar for every team member.

Returning to the example of if for example the speaker recited action item during the conference call and the speaker was determined to be authorized to invoke this command then program control advances from block to block . As discussed above the user may additionally or alternatively invoke the action item command by pressing a button or a soft key of the example VoIP phone . Without limitation the example input device of the VoIP phone may allow the user to enter text and or numerical information via for example a keyboard attached to or integrated with the example VoIP phone . The example instructions for the action item command generally include assigning an individual with a particular task and or responsibility for which the responsible party is expected to attempt to accomplish the task objectives by a particular due date. Accordingly the voice command server prompts the conference call participants for the name of the action item owner e.g. the person held responsible block . For example the voice command server of the illustrated example plays a recorded message to the conference call participants that recites the phrase Please speak the name of the action item owner. Similarly the voice command server may also play a message requesting that the name s of any co owners of the action item be recited block . Additionally or alternatively the voice command server may prompt the conference call participants for the name of the action item owner by displaying a text request on the display of the example VoIP phone . For example the display may present the sentence Please type the name of the action item owner block . Responses received by the voice command server made by the speaker are converted to text by a speech to text engine included in or operatively connected to the voice command server . On the other hand responses received by the voice command server may be input by the user via the input device of the example VoIP phone . As discussed in further detail below the text generated by the speech to text converter is representative of what conference call participants say and or type and is saved to a conference log database via the conference log server . As such the names of action item owners and or co owners are saved to the conference log database for further review by for example the meeting facilitator when the conference call ends.

The voice command server of the illustrated example also plays a message to the conference call participants requesting start and completion dates block . For example the voice command server may play a message that recites Please speak the month day and year for which this action item is to begin. Similarly the voice command server may play a message that recites Please speak the month day and year for which this action item is due. The recited information may identify data or may be left as to be determined. Additionally the voice command server of the illustrated example may also prompt the conference call participants to enter start and completion dates block by displaying text instructions on the display of the example VoIP phone . In response to such instructions the user may either type the response via the input device e.g. a keyboard or recite such instructions by voice.

Information regarding the responsibilities and or task objectives narrative of the action item are then requested by the example system of block . In particular the voice command server of the illustrated example plays a message to the conference participants that recites for example Please describe task objectives and or responsibilities after the tone. Press the pound key when you are finished. Additionally or alternatively such instructions may be presented to the conference call participants via the display . The words spoken by the conference participants are then converted from speech to text and saved to the conference log database and or received via the input device and saved to the conference log database .

Upon completion of the narrative at block the example program of advances to block in which a flag is set to notify conference call participants of the new action item. For example upon completion of the conference call the meeting facilitator may review the conference log which includes all commands that were invoked during the conference either by voice or input textually via the input device . The meeting facilitator may either approve in full approve in part or deny the flag that notifies the conference call participants of the action item. If the meeting facilitator approves then some or all of the conference call participants and or one or more designated persons that did not participate in the call will receive notification of the action item. Notification may include sending an e mail message and or adding the action item to the electronic calendars of the conference call participants block . The individuals that receive the notifications may be selected for example by the meeting facilitator may be identified to the system with spoken commands during the call or may default to the owner and or co owner identified at block .

As discussed above the voice command server of the illustrated example may execute additional and or alternative commands such as a status delivery command a schedule meeting command and or any other desired commands block . An example status delivery command is shown in . The example status delivery command allows an authorized conference call participant to schedule and communicate an obligation to provide a project status update or similar information at some future date. If the speaker recited status delivery during the conference call and the speaker was determined to be authorized to invoke this command or if the participant typed in the command status delivery via the input device then program control advances from block to block . Without limitation the participant may select a button or soft key associated with the command status delivery thereby allowing the participant to invoke the command in at least four ways. That is the participant may speak the command type the command press a button associated with the command or select a soft key associated with the command. The voice command server prompts the conference call participants for the name of the status delivery owner e.g. the person held responsible for delivering the status update block . For example the voice command server of the illustrated example plays a recorded message to the conference call participants that recites the phrase Please speak the name of the status delivery owner. As discussed above such instructions may additionally or alternatively be presented to the participant on the display . Responses received by the voice command server made by the speaker are converted to text by a speech to text engine included in or operatively connected to the voice command server . The text generated by the speech to text converter is representative of what conference call participants say and is saved to the conference log database via the conference log server . Accordingly the name of the status delivery owner is saved to the conference log database for further review by for example the meeting facilitator when the conference call ends.

The voice command server of the illustrated example also plays and or displays a message to the conference call participants requesting a due date for the status update block . For example the voice command server may play or display a message that recites Please speak the month day and year for which this status update will be provided. The response s are recorded.

Information regarding the information that will be disclosed narrative during the status update is then requested by the example system of block . In particular the voice command server of the illustrated example plays a message and or causes a text message to be displayed to the conference participants that recites reads for example Please describe the agenda and or topics for which the status update is desired. Press the pound key when you are finished. The words spoken and or typed by the conference participants are then converted from speech to text if spoken and saved to the conference log database .

Upon completion of the narrative at block the example program of advances to block in which a flag is set to notify conference call participants of the new status update date. For example upon completion of the conference call the meeting facilitator may review the conference log which includes all commands that were invoiced during the conference. The meeting facilitator may either approve in full approve in part or deny the flag that notifies the conference call participants of the status update. If the meeting facilitator approves then some or all of the conference call participants and or one or more designated persons that did not participate in the call will receive notification of the status update. As discussed above notification may include e mail and or adding the status update to the electronic calendars of the conference call participants.

An example schedule meeting command is shown in . The example schedule meeting command allows an authorized conference call participant to schedule a meeting for a future date. If the speaker recited or typed schedule meeting during the conference call and the participant was determined to be authorized to invoke this command then program control advances from block to block . The voice command server prompts the conference call participants for the name of the party responsible for the meeting e.g. the person to serve as meeting facilitator block . For example the voice command server of the illustrated example plays a recorded message to the conference call participants that recites the phrase Please speak the name of the meeting owner. Similarly such messages may be textually displayed to the participant via the display of the example VoIP phone . Responses received by the voice command server made by the speaker typer are converted to text if spoken by a speech to text engine included in or operatively connected to the voice command server . The text generated by the speech lo text converter is representative of what conference call participants say and is saved to the conference log database via the conference log server . Accordingly the name of the scheduled meeting owner is saved to the conference log database for further review by for example the meeting facilitator when the conference call ends.

The voice command server of the illustrated example also plays and or displays a message to the conference call participants requesting a meeting date for the scheduled meeting block . For example the voice command server may present a message that recites Please speak or type the month day and year for which this meeting will be held. The response s are recorded.

A prompt for required and or desired meeting participants is issued by the voice command server of the illustrated example block . For example the voice command server of the illustrated example presents a message to the conference call participants that recites Please speak or type the names of required or desired attendees for this meeting. The names recited are converted from speech to text if spoken and saved to the conference log database.

Information regarding the information that will be discussed and or the meeting objectives narrative during the scheduled meeting are then requested by the example system of block . In particular the voice command server of the illustrated example presents a message to the conference participants that recites for example Please describe the agenda and or topics the meeting will address. Press the pound key when you are finished. The words spoken or typed by the conference participants are then converted from speech to text if spoken and saved to the conference log database .

Upon completion of the narrative at block S the example program of advances to block in which a flag is set to notify conference call participants of the new meeting date. For example upon completion of the conference call the meeting facilitator may review the conference log which includes all commands that were invoked either by speech or input via the example VoIP phone during the conference. The meeting facilitator may either approve in full approve in part or deny the flag that notifies the conference call participants of the meeting. If the meeting facilitator approves then some or all of the conference call participants and or one or more designated persons that did not participate in the call will receive notification of the meeting. As discussed above notification may include e mail and or adding the meeting to the electronic calendars of the conference call participants.

An authorized participant may also invoke a record meeting command block to record the dialog spoken by various meeting participants during the conference call. For example upon the authorized participant invoking the record meeting command the voice command server prompts the conference call participants e.g. via a text message presented on the display for the person that is to receive the recorded minutes. Alternatively the voice command server may automatically determine the speaker s identity by sending the spoken command to the voiceprint server block . As such the voiceprint server may append the name of each speaker to the transcript next to the speaker s text. Without limitation the speaker s identity may be determined by way of identifying the participant s IP address. The voice command server records words spoken by the various speakers and converts the voice information to text prior to storing the text data in the voice command database . Alternatively or additionally the voice data may be stored in an audio format that includes but is not limited to audio video interleave AVI WAVE WAV format by Microsoft audio interchange file format AIFF Windows media audio WMA and or MPEG audio layer 3 MP3 format. Storing the meeting minutes to the database in an audio format rather than immediately converting voice to text allows the system to conserve computer processing resources for off peak times. Alternatively or additionally the meeting facilitator may choose to receive both a transcript e.g. log of the meeting in text as well as the audio for subsequent review. Such transcript log s and or audio files e.g. MP3 files may be e mailed to the meeting facilitator after the conference ends block . Of course one or more fees may be charged for any of the services of the conference call manager including fees for creating logs for storing logs for emailing or otherwise communicating logs etc.

The example GUI of includes a command name drop down menu to provide the user with a list of commands to which the system may respond. If the user selects a command within the drop down menu then the corresponding instructions are populated in the various fields of the GUI as discussed below. Depending on the number of interactive system prompts required by the selected command the GUI displays a corresponding prompt row . Each prompt row includes a prompt field and an action field . The prompt fields display language that the system will recite to the conference call participants after the command is invoked. For example the first prompt for the action item command as discussed above in view of causes the system to play the phrase Please speak the name of the action item owner shown in a field for prompt . As shown in the example GUI of because the action item command is selected in the command name drop down menu all of the prompts and corresponding actions instructions appear below and relate to the action item command. The corresponding action instructs the system to save the name recited by a conference call participant to the log.

If the user chooses to edit the displayed command e.g. the action item command then the user may select any field and type in or select changes. For example the user may select an add prompt row button to add more instructions to the command and or delete the contents of existing prompt row information to remove command instructions. Upon completion of any changes the user may select a save changes button . Additionally if the user has entered a new command name in the command name drop down menu and entered corresponding prompts and actions then the user may select an Add Command New button to add the command to the list of commands to which the system will respond. Still further the user may delete any selected command by selecting a Delete Command button . If the user selects an Exit button then the example GUI exits without making any changes to the selected command.

The processor platform of the example of includes at least one general purpose programmable processor . The processor executes coded instructions and or present in main memory of the processor e.g. within a RAM. and or a ROM . The processor maybe any type of processing unit such as a processor core a processor and or a microcontroller. The processor may execute among other things the example machine accessible instructions of to provide conference call service in a VoIP communication network. The processor is in communication with the main memory including a ROM and or the RAM via a bus . The RAM may be implemented by DRAM SDRAM and or any other type of RAM device and ROM may be implemented by flash memory and or any other desired type of memory device. Access to the memory and maybe controlled by a memory controller not shown . The processor platform also includes an interface circuit . The interface circuit may be implemented by any type of interface standard such as an external memory interface serial port general purpose input output etc. One or more input devices and one or more output devices are connected to the interface circuit .

Of course persons of ordinary skill in the art will recognize that the order size and proportions of the memory illustrated in the example systems may vary. Additionally although this patent discloses example systems including among other components software or firmware executed on hardware it will be noted that such systems are merely illustrative and should not be considered as limiting. For example it is contemplated that any or all of these hardware and software components could be embodied exclusively in hardware exclusively in software exclusively in firmware or in some combination of hardware firmware and or software. Accordingly persons of ordinary skill in the art will readily appreciate that the above described examples are not the only way to implement such systems.

At least some of the above described example methods and or apparatus are implemented by one or more software and or firmware programs running on a computer processor. However dedicated hardware implementations including but not limited to an ASIC programmable logic arrays and other hardware devices can likewise be constructed to implement some or all of the example methods and or apparatus described herein either in whole or in part. Furthermore alternative software implementations including but not limited to distributed processing or component object distributed processing parallel processing or virtual machine processing can also be constructed to implement the example methods and or apparatus described herein.

It should also be noted that the example software and or firmware implementations described herein are optionally stored on a tangible storage medium such as a magnetic medium e.g. a disk or tape a magneto optical or optical medium such as a disk or a solid state medium such as a memory card or other package that houses one or more read only non volatile memories random access memories or other re writable volatile memories or a signal containing computer instructions. A digital file attachment to e mail or other self contained information archive or set of archives is considered a distribution medium equivalent to a tangible storage medium. Accordingly the example software and or firmware described herein can be stored on a tangible storage medium or distribution medium such as those described above or equivalents and successor media.

To the extent the above specification describes example components and functions with reference to particular devices standards and or protocols it is understood that the teachings of the invention are not limited to such devices standards and or protocols. Such systems are periodically superseded by faster or more efficient systems having the same general purpose. Accordingly replacement devices standards and or protocols having the same general functions are equivalents which are intended to be included within the scope of the accompanying claims.

Although certain example methods apparatus and articles of manufacture have been described herein the scope of coverage of this patent is not limited thereto. On the contrary this patent covers all methods apparatus and articles of manufacture fairly falling within the scope of the appended claims either literally or under the doctrine of equivalents.

