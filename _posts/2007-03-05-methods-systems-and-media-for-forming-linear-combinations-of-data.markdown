---

title: Methods, systems, and media for forming linear combinations of data
abstract: Methods, systems, and media for forming linear combinations of data are provided. In some embodiments, methods for forming a linear combination of data include: receiving at a device a first codeword, wherein the first codeword comprises a linear combination of at least a first data unit including data, and a second data unit including data; encoding at the device the first codeword and a third data unit including data to form a second codeword, wherein the second codeword includes a linear combination of at least the first data unit, the second data unit, and the third data unit; and transmitting from the device the second codeword.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08655839&OS=08655839&RS=08655839
owner: The Trustees of Columbia University in the City of New York
number: 08655839
owner_city: New York
owner_country: US
publication_date: 20070305
---
This application is a U.S. National Phase Application under 35 U.S.C. 3.71 of International Patent Application No. PCT US2007 005655 filed Mar. 5 2007 which claims priority from U.S. Provisional Patent Application No. 60 778 801 filed on Mar. 3 2006 each of which is hereby incorporated by reference herein in its entirety.

The government may have certain rights in the present invention pursuant to grants by the National Science Foundation CNS 0435168 EEC 0433633 CNS 0442387 CNS 0411047 and CNS 0238299 .

Sensor networks have been widely used to monitor physical or environmental conditions across a geographical area. Typically sensors or sensor nodes in a sensor network collect and store data so the data can subsequently be accessed. In this way the sensor network can be viewed as a distributed database. An important requirement of a sensor network is that data collected by sensors in the network can be disseminated to end users.

One approach for retrieving data in a sensor network is for a user to query an individual sensor or a group of sensors for data collected by the sensor s . The desired data can then be routed across the network from the sensor s to the user. However sensors in a sensor network typically have very limited storage bandwidth and or computational power and are often prone to failure especially in situations where a sensor network is used to monitor emergency or disaster scenarios such as floods fires earthquakes and or landslides. Due to these limitations the foregoing approach may be infeasible or may incur unacceptable delay for certain applications.

Another approach is to use local data storage units or data sinks to collect data. A data storage unit can typically store a relatively large quantity of data collected by nearby sensors and may respond directly to a querying node. A local data storage unit can be used to collect sensor data more effectively. However in failure prone sensor networks valuable data that is collected by the sensors may still be lost before reaching a data storage unit. Therefore it is desirable to efficiently collect and recover data in a failure prone sensor network.

Embodiments of the disclosed subject matter provide methods systems and media for forming linear combinations of data. Methods for forming a linear combination of data include receiving at a device a first codeword wherein the first codeword includes a linear combination of at least a first data unit including data and a second data unit including data encoding at the device the first codeword and a third data unit including data to form a second codeword wherein the second codeword includes a linear combination of at least the first data unit the second data unit and the third data unit and transmitting from the device the second codeword.

In some embodiments systems for forming a linear combination of data include a device that receives a first codeword wherein the first codeword includes a linear combination of at least a first data unit including data and a second data unit including data encodes the first codeword and a third data unit including data to form a second codeword wherein the second codeword includes a linear combination of at least the first data unit the second data unit and the third data unit and transmits the second codeword.

In some embodiments computer readable media are provided containing computer executable instructions that when executed by a processor cause the processor to perform a method for forming a linear combination of data the method includes receiving at a device a first codeword wherein the first codeword includes a linear combination of at least a first data unit including data and a second data unit including data encoding at the device the first codeword and a third data unit including data to form a second codeword wherein the second codeword includes a linear combination of at least the first data unit the second data unit and the third data unit and transmitting from the device the second codeword.

Methods systems and media for forming linear combinations of data are provided. Using various embodiments data collected by sensors in a sensor network can reach one or more data storage units in the sensor network and be recovered in an efficient manner even when sensors in the network fail. In some embodiments computing devices in a peer to peer P2P network can encode and transmit blocks of a file so that a file can be distributed within the P2P network effectively.

In some embodiments a sensor network can include sensors that take measurements of the surrounding environment and record the measurements as data units. The sensors can also encode one or more data units into one or more codewords and exchange the data units and or codewords with other sensors in the sensor network. Upon receiving a codeword from another sensor a sensor in the sensor network can further encode the received codeword with another data unit or codeword that is stored at the sensor to form a new codeword. The number of data units that is encoded in the new codeword can therefore be greater than the number of data units that is encoded in the received codeword. The sensor network can also include one or more data storage units. A data storage unit can receive data units and or codewords from one or more sensors in the sensor network and may decode the received codewords to recover data units that have been encoded.

Sensor network can also include one or more data storage units e.g. data storage unit . A data storage unit e.g. data storage unit can have a larger storage capacity than a sensor in the sensor network e.g. sensor . A data storage unit e.g. data storage unit can be configured to communicate with one or more sensors e.g. sensors . For example a sensor e.g. sensor that is in communication with a data storage unit e.g. data storage unit can be configured to automatically send all obtained data to the data storage unit. A data storage unit e.g. data storage unit can also query the sensors e.g. sensor to retrieve data from the sensors. Because sensors e.g. sensors that are in communication with a data storage unit e.g. data storage unit can also communicate with other sensors e.g. sensor a data storage unit e.g. data storage unit can indirectly receive data from sensors e.g. sensor that do not have a direct communication link with the data storage unit.

In some embodiments sensors e.g. sensor can have computational power to manipulate data in transit e.g. data from sensor to data storage unit . For example a sensor can compress or recode data to increase delivery efficiency. In some embodiments sensors in a network may have no information on the location of the data storage units and or the topology of the network in which case a sensor can randomly choose one or more neighboring sensors for sending or receiving data in an attempt to deliver data to a data storage unit in the network.

Sensors in network can encode one or more data units into codewords using erasure codes including optimal erasure codes such as Reed Solomon codes or erasure codes based on sparse bipartite graphs such as Tornado or Luby Transform LT codes. In some embodiments a codeword is formed as a linear combination of data units and or other codewords. In some embodiments exclusive or XOR based codes can be used to form a linear combination of data units and or codewords. For example bitwise XOR operations can be performed on data units to form a portion of a codeword another portion can be a coefficient used for identifying the data units as described below . In these embodiments the portion of the codeword formed can have substantially the same size as the data units encoded. In this document the number of data units used to form a codeword is referred to as the degree of the codeword.

Sensors in network can exchange data units and or codewords with neighboring sensors. This can be done at for example predetermined time intervals. As a result although a sensor e.g. sensor may initially only have data units generated by itself the sensor can obtain data units and or codewords generated by other sensors e.g. sensors over time. Therefore data recorded by a sensor e.g. sensor in network can be duplicated at other sensors e.g. sensor and recovered even if the sensor e.g. sensor fails. In addition sensors in network may utilize source coding techniques to reduce the amount of data to be delivered by compressing the data in space and or time.

A codeword can include a coefficient that describes and identifies the data unit s from which the codeword is formed. For example each sensor in network can have a unique identifier ID and can attach this ID to a data unit generated by the sensor. A codeword that is formed from i data units can include i of these IDs to identify each of the i data units. In some embodiments sensor network encodes a single data unit to form a codeword and a single ID can be included in the coefficient to identify the data unit. In this case as shown in the coefficient can include a first bit 1 at reference numeral indicating that the codeword includes only one data unit and log N bits specifying which data unit makes up the codeword where N is the total number of data units.

In some embodiments sensor network can encode one or more data units to form a codeword. In these embodiments coefficient in a codeword may be constructed using two different formats as illustrated respectively by . When the number of data units forming the codeword is low in particular less than N log N less space is consumed by listing the IDs of the data units. In this case the coefficient can be constructed in the format as shown in where the first bit can indicate the particular format. The first bit can be followed by a number of bits e.g. 7 bits indicating the number of data units encoded in the codeword. The remaining bits can store the IDs of the data units.

When the number of data units forming the codeword is greater than N log N less space is consumed by reserving a bit for each of the N possible data units. In this case as shown in the coefficient can include a first bit indicating the particular format being used followed by a number of bits e.g. 7 bits indicating the number of data units encoded in the codeword. Bits can be followed by N bits where a 1 bit signifies the presence of a particular data unit and a 0 bit specifies the absence of a particular data unit. When the number of data units forming the codeword is equal to N log N either format shown in or can be used. The ways of constructing a coefficient illustrated in B and C are only presented as examples and various other suitable approaches can be used.

Referring back to sensors in network can take measurements and generate new data units in successive time periods. In this case the size of the coefficients can become significant for codewords encoded from a relatively large number of data units. To reduce coefficient overhead across successive time periods clustering may be used. A cluster can be a set of codewords across several time periods. Codewords can all refer to a single coefficient in the cluster thereby eliminating redundant coefficients.

Upon receiving codewords from sensors e.g. sensors data storage units e.g. data storage unit can decode the received codewords and recover the original data units that form the codewords. In some embodiments a data storage unit e.g. data storage unit can first recover data units from codewords that are formed from only one data unit. Then if it is found that a codeword is formed from recovered data units and only one other data unit that has not been recovered that data unit can be recovered. For example if the codeword is encoded by performing XOR on data units the data unit can be recovered by also performing XOR on the codeword and the recovered data units.

Sensors in network can be configured so that codewords generated by the sensors start with degree 1 but gradually increase in terms of their degree over time. The result is that data storage unit s e.g. data storage unit of network receive codewords of increasing degree over time as is illustrated by . is a diagram illustrating the first codewords received by data storage unit . These codewords sent respectively from sensors and are each formed from a single data unit e.g. X or X as shown. At a later time shown in codewords received by data storage unit are each formed from two data units e.g. X and X or X and X .

In sensor network generating codewords with gradually increasing number of data units encoded can improve the recovery of data units. It can be proved that to recover r data units such that r

Hence if most of the network sensors fail and only a small amount of data survives then not using any coding is the best way to recover a maximum number of data units. To recover r data units such that r

Therefore it is efficient to use only degree one codewords to recover the first Rdata units only degree 2 symbols to recover the next R Rdata units and so on. Furthermore an expected number of Kcodewords are required to recover Rdata units an expected maximum Kcodewords are required to recover Rsymbols and so on. Hence for a total of k encoded symbols Kdegree 1 codewords can be used so that an expected Rdata units can be recovered K Kdegree 2 symbols can be used so that an expected R Rcodewords can be recovered and so on as long as the k symbols are not yet received. As a result a near optimal degree distribution can be defined as 

To generate codewords with increasing degree a sequence of increasing values from Tto Tcan be hard coded into each of one or more sensors in network prior to their deployment. Each value of Tindicates a period of time from some initial point in time after which codewords of degree i can be generated. For example in some embodiments before the end of a period T a sensor will only generate codewords with a degree of 1. After the end of period Tand before the end of period T however the sensor will generate codewords with a degree of 2.

When a codeword of a degree i is received by a sensor before the end of a period T the codeword will be passed on to a neighboring sensor without modification. When a codeword of a degree i is received by a sensor after the end of a period T the sensor can perform an XOR operation on the codeword with its own data unit prior to passing the degree increased codeword on to a neighboring sensor. In the event that the codeword already contains the data unit of the sending sensor the codeword can be passed on without modification. Such a codeword may then be passed on from sensor to sensor without modification until a sensor whose data unit is not encoded into the codeword is encountered.

In this manner codewords generated by the sensors grow in terms of their degree as they travel en route to a data storage unit. Values Tto Tcan be chosen so that codewords that arrive at a data storage unit e.g. data storage unit in network follows a desired degree distribution. For example if the degree distribution of equation 3 is desired values Tto Tcan be chosen as Kto Kaccording to equations 1 and 2 . In this case if a data storage unit receives one codeword per time unit it can receive degree 1 codewords for the first Ktime units followed by degree 2 codewords until time K and so on. If there are multiple sink nodes or that a sink node receives codewords from multiple sensors such that multiple codewords are received per time unit then the values of Kmay be scaled to achieve the desired effect.

In a sensor network that generates codewords of increasing degree sensors can also take measurements and generate new data units in successive time periods. As discussed above clustering of codewords can be used to allow more data to be saved in each sensor. In this case because codewords of all time periods in a cluster can share the same coefficient they can be grown to a higher degree i.e. encoded with an addition data unit together for example when a codeword of the most recent time period in the cluster is grown. Because a larger cluster size can reduce the time over which a codeword can grow an appropriate cluster size can be selected to maximize this time. In some embodiments the number of codewords per cluster can be selected as 

In some embodiments computing devices or peers in a P2P network can encode and transmit blocks of a file so that the file can be effectively distributed across the P2P network. Initially one or more seeding devices in the network possess the file. To distribute the file to a larger group of computing devices in the network a seeding device can partition the file into multiple blocks or data units and randomly distribute the data units to a number of other devices which can then encode received data units into codewords and exchange codewords with one another. Upon receiving one or more codewords a computing device that desires the file can also decode the codewords using data units and or codewords that have already been received and or decoded. For example upon receiving a codeword encoded from data units X X and X a computing device that has previously received a codeword encoded from X and X can use the two received codewords to recover data unit X. Using data unit X a later received codeword encoded from X and X can then be decoded to recover data unit X. As another example if a computing device has already received and or decoded all the data units that make up a file except X it may request any codeword that is encoded from X from other peers in the network and decode the codeword to obtain X. At this point the file can be reconstructed from the data units.

Although the invention has been described and illustrated in the foregoing illustrative embodiments it is understood that the present disclosure has been made only by way of example and that numerous changes in the details of implementation of the invention can be made without departing from the spirit and scope of the invention which is limited only by the claims that follow. Features of the disclosed embodiments can be combined and rearranged in various ways within the scope and spirit of the invention.

