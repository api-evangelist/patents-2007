---

title: Sharing editable ink annotated images with annotation-unaware applications
abstract: Data associated with pixels obscured by annotations in an annotated image is stored using an annotation mask enabling annotation-aware applications to reconstruct the original image, while annotation-unaware applications can display the annotated image with optimized increase in extra data to be stored. The annotation mask, same size as the image, is initialized to a monochrome default and the color depth information for obscured pixels saved within the annotation mask. Because a majority area of the annotation mask is monochrome, it compresses well and the obscured image content can be saved in a side channel, metadata header, or a separate file. During reconstruction, changes to annotated image such as rotation, size change, and the like, may be detected and accounted for when obscured image content is carried over to the annotated image for reconstruction.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07975215&OS=07975215&RS=07975215
owner: Microsoft Corporation
number: 07975215
owner_city: Redmond
owner_country: US
publication_date: 20070514
---
Images are created edited viewed and used in other ways by countless number of devices and applications. Increasingly annotating images through ink applications i.e. taking notes editing modifying existing text on images and so on and devices such as tablet PCs handheld computers and so on is becoming popular and common. However there are still a very large number of applications in use that are annotation unaware i.e. they cannot decode annotation information on an annotated image .

To store annotations in an image file two methods are commonly used. The first is to flatten the annotations directly onto the image. Flattening is a term used for integrating annotations or other types of additional information such as additional layers of image into a single layer where all additional information becomes an integral of the original image possibly obscuring portions of it. The second is to embed the ink data in a secondary location within the image file such as the metadata headers a side channel etc. and have only specific annotation aware applications be able to display the annotations.

There are significant drawbacks to both approaches. Flattened images can be shared very easily the annotations will always be displayed along with the picture since they are part of the picture. However the information for the obscured portion of the image may be forever lost and cannot be easily or not at all reconstructed. On the other hand embedded ink allows preservation of the original image data in that it is non destructive to the image content and can easily be edited removed at a later date. However since embedded ink is not part of the image content it can only be displayed by a limited set of annotation aware applications.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended as an aid in determining the scope of the claimed subject matter.

Embodiments are directed to preserving image information for portions of an image obscured by editable ink annotations such that the original image can be reconstructed by an editable annotation aware application while the annotated image can be processed by both annotation aware and annotation unaware applications. Based on the preserved information changes to the image may also be detected and users warned.

These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory only and are not restrictive of aspects as claimed.

As briefly described above data for portions of an image obscured by editable ink annotations on the image is preserved in an optimized manner such that the original image can be constructed while the annotated image can be processed by annotation unaware applications. In the following detailed description references are made to the accompanying drawings that form a part hereof and in which are shown by way of illustrations specific embodiments or examples. These aspects may be combined other aspects may be utilized and structural changes may be made without departing from the spirit or scope of the present disclosure. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined by the appended claims and their equivalents.

While the embodiments will be described in the general context of program modules that execute in conjunction with an application program that runs on an operating system on a personal computer those skilled in the art will recognize that aspects may also be implemented in combination with other program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that embodiments may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. Embodiments may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Embodiments may be implemented as a computer process method a computing system or as an article of manufacture such as a computer program product or computer readable media. The computer program product may be a computer storage media readable by a computer system and encoding a computer program of instructions for executing a computer process. The computer program product may also be a propagated signal on a carrier readable by a computing system and encoding a computer program of instructions for executing a computer process.

User B then sends the image along to user C who has annotation aware application . User C can see the annotations in annotated image file which may contain something that user A would want only user B to see and not user C .

Referring to an example annotation sharing system with annotation aware and annotation unaware applications is illustrated. As discussed previously flattened images with annotation cannot be easily reconstructed to their original form and embedded editable ink annotations may only be processed by annotation aware applications.

Embodiments provide approaches for storing annotations on a single layer digital image i.e. an image file that comprises two dimensional information for the image only and not multiple layers such as different attributes for the image such that it is visible on all image viewer applications yet the annotations remain editable and or removable at a later date. According to one embodiment the ink is flattened onto the image yet also storing supplemental information necessary to reconstruct the photo such as information for the portions of the image that are obscured by the ink annotation strokes. This supplemental data may be stored in an optimized way reducing resource consumption. To reconstruct the image the supplemental data is simply rendered on top of the annotated image bits.

While the term image is used in conjunction with annotations throughout this document embodiments may be implemented to integrate annotations onto and reconstruct other types of documents too. For example text documents spreadsheets and other types of documents may be annotated and the annotation information saved as described below using the same principles.

Annotation integration engine may be a separate module or an integral part of an annotation aware image processing application. The annotation s may be received as editable ink from an ink processing module and integrated with the non annotated image by creating a monochrome annotation mask rendering the annotations on the mask creating an off screen Obscured Image Content OIC bitmap and persisting the annotations on the image file itself such that the image is a single layer flat image. The OIC may be saved in a side channel in the metadata header or in an associated separate file or database.

Color digital images are made of pixels and pixels are made of combinations of primary colors. A channel in this context is the grayscale image of the same size as a color image made of one of these primary colors. For example an image from a digital camera may have a red green and blue channel. A grayscale image has just one channel. In the digital realm there can be any number of conventional primary colors making up an image a channel in this case is extended to be the grayscale image based on any such conventional primary color. By extension a channel is any grayscale image the same size with the proper image and associated with it. The annotated image with the OIC information is then made available to other applications.

According to some embodiments the annotated image with the OIC information may be provided to an annotation aware application which may present process the annotated image as is or reconstruct the original image by reading the OIC information and carrying it over to the annotated image such that obscured portions of the original image are filled in with the original image data.

The annotated image with the OIC information may also be provided to an annotation unaware application which may display or process the annotated flat image with its annotations.

A minimal amount of information necessary to reconstruct the image is stored according to embodiments. Large sections of solid black or another single color in the annotation mask and OIC data can be compressed to a very small size. The portions of the images that do contain information may grow in size proportionally as more annotations are added. In a worst case scenario every pixel is covered by annotations the image may slightly more than double in size.

When implemented as an Application Programming Interface API the annotations may be rendered onto the image either by the processing application or by the API code. If rendered by the application which may allow for more advanced rendering techniques then the API may simply require enough information to produce the annotation mask. In the case of effects like a drop shadow on ink all that is needed may be an integer with how much the mask ink needs to be expanded to cover the rendered ink.

While storing in the common graphic file formats such as JPG has many obvious examples for interoperability there is also a drawback. Many applications exist that can view these images and many also allow for the images to be edited. If the image is edited in an application that is not aware of the extra information needed to restore the non annotated image then the original image may be unrecoverable. This is because some file formats are not designed to store extra information e.g. bmp files .

According to some embodiments the risk of losing original image information due to changes by an annotation unaware application may be mitigated by storing a Cyclic Redundancy Check CRC which uniquely identifies the exact binary data in the image file with the restore data or by storing other properties of the photo with the restore data such as width and height. Alternatively a CRC of just the obscured content may be stored within the restore data.

According to other embodiments whether the image has been changed may be detected through the CRC and other properties and the user warned. If the nature of the change to the image can be determined the original image may still be reconstructed. For example a rotation at defined amounts a horizontal or vertical flip or a resize where the aspect ratio is preserved may be recovered since the OIC can be subjected to the same operation before being looped over to the annotated image.

For other edits cropping free rotation etc which may not be as easy to automatically recover an image analysis may be performed to find the annotations such as the ink strokes and then the restore data stretched so that it matches over the newly positioned ink. If image analysis fails to find where the annotations are with high confidence a User Interface UI may be provided that allows the user to drag around the annotations so they match up correctly.

If the user edits the pixels of the image in an area that is not affected by annotations the CRC of just the obscured content may be used to still allow the restoration data to apply. Some edits color palette edits drawing on the photo etc may not be recoverable at all. In that case an error message may be displayed to the user.

A system according to embodiments is not limited to the example system and its components described above. Flattening ink annotations onto an image such that the image can be reconstructed later with minimal supplemental information may be implemented with fewer or additional components performing additional or fewer tasks using the principles described herein. For example the annotation integration process may be performed by a separate module by an API or by an annotation aware application itself. Similarly the reconstruction of the original image may be performed by a reconstruction module or the annotation aware application.

Image in includes editable ink annotations . According to one embodiment a monochrome bitmap with the same size as the image is generates as annotation mask initializing all pixels to a default color. Because single color can be compressed to a very small amount of data in most color formats the majority area of the annotation mask without the OIC information can be saved with minimal information.

Following rendering of the annotations on the annotation mask OIC information is carried over from the original image to the annotation mask with its color depth. The OIC data is saved in the same format the as the original image and can be persisted in the image metadata headers a side channel and so on.

The annotation mask for image is also initialized with a default color. The annotations e.g. are however rendered on annotation mask in larger granularity compared to the annotation mask of . Depending on an image file format a desired quality of image a desired file size and the like the granularity may be predefined or selected by the user.

For example the JPEG file format uses a compression scheme which first divides the image into 8 8 pixel blocks. Each block is completely independent of other blocks. So the annotation mask may be expanded out to 8 8 blocks if any pixel in a block is hit every pixel in that block is marked . This ensures that the original image is accurately reproduced with no compression artifacts or bleeding. This approach provides for the OIC data for an image with a fairly large portion annotated e.g. annotation mask to be still relatively small.

For other image file formats how the compression mechanism is influenced by the annotations and OIC may be carefully considered. For example using a GIF format the OIC may be generated such that color quantization is not affected or the fidelity of the original image may be reduced.

While specific file formats and annotation saving techniques are used and described a system according to embodiments is not limited to the definitions and examples described above. Annotation information storage through annotation mask may be provided using other file formats and techniques. Furthermore the principles described herein are not limited to editable ink but may also be applied to any type of annotation or overlay displayed over an image.

Such a system may comprise any topology of servers clients Internet service providers and communication media. Also the system may have a static or dynamic topology where the roles of servers and clients within the system s hierarchy and their interrelations may be defined statically by an administrator or dynamically based on availability of devices load balancing and the like. The term client may refer to a client application or a client device. While a networked system implementing editable annotated image sharing may involve many more components relevant ones are discussed in conjunction with this figure.

An annotation integration engine according to embodiments may be implemented as part of an annotation aware image processing application in individual client devices or executed in server and accessed from anyone of the client devices or applications . Data stores associated with providing annotation saving such as a store for saving OIC associated with annotated images may be embodied in a single data store such as data store or distributed over a number of data stores associated with individual client devices servers and the like. Dedicated database servers e.g. database server may be used to coordinate data retrieval and storage in one or more of such data stores.

As described previously a more common approach may be saving the OIC as part of the image file. When the image file with the OIC information is distributed to other applications an annotation aware application on any one of the clients or the servers may reconstruct the original image as discussed above.

Network s may include a secure network such as an enterprise network an unsecure network such as a wireless open network or the Internet. Network s provide communication between the nodes described herein. By way of example and not limitation nctwork s may include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

Many other configurations of computing devices applications data sources data distribution systems may be employed to implement providing flattening annotations on images while saving OIC information. Furthermore the networked environments discussed in are for illustration purposes only. Embodiments are not limited to the example applications modules or processes.

Annotation application may be a separate application or an integral module of a desktop service that provides other services to applications associated with computing device . Annotation integration engine and reconstruction engine may provide services associated with generating storing OIC information and reconstructing the original image respectively. This basic configuration is illustrated in by those components within dashed line .

The computing device may have additional features or functionality. For example the computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well known in the art and need not be discussed at length here.

The computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a wireless network in a distributed computing environment for example an intranet or the Internet. Other computing devices may include server s that provide updates associated with the anti spyware service. Communication connection is one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.

The claimed subject matter also includes methods of operation. These methods can be implemented in any number of ways including the structures described in this document. One such way is by machine operations of devices of the type described in this document.

Another optional way is for one or more of the individual operations of the methods to be performed in conjunction with one or more human operators performing some. These human operators need not be collocated with each other but each can be only with a machine that performs a portion of the program.

Process begins with operation where an image and annotation to be integrated into the image are received. The annotation may be generated through an ink processing system that receives user ink input performs recognition e.g. handwriting recognition shape recognition etc. and other processes and provides the ink annotation to the annotation integration engine. Processing advances from operation to operation .

At operation a monochrome off screen bitmap at the same size as the image is generated as the annotation mask. All pixels of the annotation mask are initialized to a default color e.g. black . Processing continues to operation from operation .

At operation annotations are rendered onto the annotation mask. Processing continues to optional operation from operation .

At optional operation the annotation mask is adjusted to account for rendering effects such as anti aliasing by increasing a size of the annotations. Processing continues to optional operation from optional operation .

At optional operation the mask is expanded as needed to reduce compression artifacts. Processing continues to operation from operation .

At operation an off screen bitmap the same size and color depth as the annotated image is created again initializing all pixels to the default color. This bitmap is referred to as the Obscured Image Content OIC . Processing continues to operation from operation .

At operation each obscured pixel the original image is carried over loop over copying them from the annotated image to the OIC bitmap if a pixel corresponds to an annotation pixel on the annotation mask bitmap. Processing continues to operation from operation .

At operation the annotation data ink serialized format etc and the annotation mask are persisted. The annotation mask can be persisted as an image file that compresses well with minimal colors such as a GIF and the OIC data in the same format the original image. Processing continues to optional operation from operation .

At optional operation size change information is saved. If the annotations cause the image to change in size such as an ink stroke outside the bounds of the original image a rectangle indicating the bounds of the original image may be stored within the new annotated image. Processing advances from optional operation to operation .

At operation the annotation mask containing the OIC information is saved in the image metadata header in a side channel a separate file and the like. After operation processing moves to a calling process for further actions.

Process begins with operation where the annotated flattened image is received by the reconstructions engine. The annotated image as described above includes OIC information in a side channel a metadata header or a separate file. Processing advances from operation to operation .

At operation the flattened image is read into a bitmap which becomes at the end of the process the reconstructed image. Processing continues to operation from operation .

At operation the OIC information and the annotation mask are read to determine location of obscured pixels and image data contained in those obscured pixels. Processing continues to operation from operation .

At operation each pixel in the image is looped over copying obscured pixel data from the OIC to the annotated image if the pixel is indicated as an obscured one in the annotation mask. This overwrites annotated pixels with the original pixels thus reconstructing the original image. Processing continues to optional operation from operation .

At optional operation the annotated image is scaled down to the original size if necessary. While not shown in the flowchart other change related processes may also be performed. If the annotated image was subjected to a change such as rotation size change and the like by an annotation unaware application those changes may be detected and reconstruction process adjusted to account for the changes as described previously in conjunction with . Processing continues to operation from optional operation .

At operation the original reconstructed image is displayed to the user and can be further processed. Processing advances from operation to optional operation .

At optional operation the annotations are presented to the user along with the reconstructed image such that the user can further edit the image and or the annotations. After optional operation processing moves to calling process for further actions.

The operations included in processes and are for illustration purposes. Providing flattening of annotations onto images white saving OIC information may be implemented by similar processes with fewer or additional steps as well as in different order of operations using the principles described herein.

The above specification examples and data provide a complete description of the manufacture and use of the composition of the embodiments. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims and embodiments.

