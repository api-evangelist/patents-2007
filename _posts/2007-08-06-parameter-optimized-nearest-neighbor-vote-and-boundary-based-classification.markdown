---

title: Parameter optimized nearest neighbor vote and boundary based classification
abstract: Systems and methods of classifying a subject data item based on a training set of pre-classified data items. A piecewise-linear approximation of a local boundary between different classes of data items is automatically computed. The local boundary is approximated by a neighborhood set of data items selected from the training set that have been pre-classified into different classes and have points similar to a point of the subject data item. A class is automatically assigned to the subject data item in accordance with a side of the local boundary on which the subject data item resides.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07640219&OS=07640219&RS=07640219
owner: NDSU - Research Foundation
number: 07640219
owner_city: Fargo
owner_country: US
publication_date: 20070806
---
This Application claims the benefit of U.S. Provisional Application No. 60 835 553 filed Aug. 4 2006 and entitled PARAMETER OPTIMIZED NEAREST NEIGHBOR VOTE AND BOUNDARY BASED CLASSIFICATION which is incorporated by reference herein in its entirety.

The present invention relates generally to computer assisted data analysis and more particularly to data mining classification.

Data mining is the use of automated data analysis techniques to uncover previously undetected or non preselected relationships among data items. Examples of data mining applications can be found in diverse areas such as database marketing financial investment image analysis medical diagnosis production manufacturing forensics security defense and various fields of research.

Computer Aided Detection CAD applications are very interesting data mining problems in medical applications. The ultimate goal in a CAD system is to be able to identify the sick patients by analyzing a measurement data set and using the available descriptive features. CAD application present a number of challenges. For instance typical CAD training data sets are large and extremely unbalanced between positive and negative classes of data items positive classes of data items being associated with disease states for example . When searching for descriptive features that can characterize the medical conditions of interest system developers often deploy a large feature set which may introduce irrelevant and redundant features. Labeling is often noisy as labels may be created without corresponding biopsies or other independent confirmations. In the absence of CAD decision support labeling made by humans typically relies on a relatively small number of features naturally due to limitations in the number of independent features that can be reasonably integrated by human decision makers. In order to achieve clinical acceptance CAD systems have to meet extremely high performance thresholds to provide value to physicians in their day to day practice.

Nearest Neighbor Vote classification and Full Decision Boundary Based e.g. Support Vector Machine classification are popular approaches to real life data classification applications. In Nearest Neighbor Vote classification the neighbors i.e. the data items in the training set that are sufficiently similar or close to the data item to be classified are found by scanning the entire data set. The predominant class in that neighbor set is assigned to the subject. U.S. Pat. No. 6 941 303 to Perrizo incorporated herein by reference in its entirety describes a Nearest Neighbor Vote classification technique that is a variant of the well known K Nearest Neighbor KNN classification approach. KNN methods are desirable methods since no residual model classifier needs to be built ahead of time e.g. during a training phase . Models involve approximations and summarizations and therefore are prone to being less accurate.

However Nearest Neighbor Vote methods have limitations also in being able to properly classify data items in data sets where there is a great disparity in the sizes of the different classes and where there is a very large training data set. When the class sizes are vastly different the voting can be weighted by class size but still the subset of nearest neighbors can for instance have no data items the small classes and therefore give the wrong result. The result of neighbor voting in this instance would produce an inaccurate classification. When the training set is very large the process of isolating the nearest neighbor set can be prohibitively slow.

Support Vector Machine SVM classification is generally regarded as a technique that produces high accuracy classification. In classification a data item to be classified may be represented by a number of features. If for example the data item to be classified is represented by two features it may be represented by a point in 2 dimensional space. Similarly if the data item to be classified is represented by n features also referred to as the feature vector it may be represented by a point in n dimensional space. The training set points to be used to classify that data item are points in n 1 dimensional space the n feature space dimensions plus the one additional class label dimension . SVM uses a kernel to translate that n 1 dimensional space to another space usually much higher dimensional in which the entire global boundary or the global boundary once a few error training points are removed . This linear boundary also referred to as a hyperplane which separates feature vector points associated with data items in a class and feature vector points associated with data items not in the class. The underlying premise behind SVM is that for any feature vector space a higher dimensional hyperplane exists that defines this boundary. A number of classes can be defined by defining a number of hyperplanes. The hyperplane defined by a trained SVM maximizes a distance also referred to as an Euclidean distance from it to the closest points also referred to as support vectors in the class and not in the class so that the SVM defined by the hyperplane is robust to input noise. U.S. Pat. No. 6 327 581 to Platt incorporated by reference herein in its entirety describes conventional SVM techniques in greater detail. While SVM provides superior accuracy it tends to be computationally expensive making the method unsuitable for very large training data sets or data sets having data items with a large number of different attributes.

Conventional data mining techniques have been applied in only certain areas in which the datasets are of a small enough size or small enough dimensionality that analysis can be performed reasonably quickly and cost efficiently using available computing technology. In other areas however such as bioinformatics where analysis of microarray expression data for DNA is required as nanotechnology where data fusion must be performed as VLSI design where circuits containing millions of transistors must be tested for accuracy as spatial data where data representative of detailed images can comprise billions of bits as Computer Aided Detection from radiological images where the number of features and the number of training points can both be so large that mining implicit relationships among the data can be prohibitively time consuming even utilizing the fastest supercomputers. A need therefore exists for improved data mining techniques that provide both high performance in terms of achieving accurate results and computational efficiency for enabling data mining in large or high dimensional data sets.

One aspect of the invention is directed to classifying a subject data item based on a training set of pre classified data items. Any smooth boundary can be piecewise linearly approximated. Therefore if the set of near neighbors chosen is small enough the boundary hereafter called the local boundary between different classes will be linear. This local boundary is automatically computed. The local boundary is approximated by a neighborhood set of data items selected from the training set that have been pre classified into different classes and have feature points similar to the points of the subject data item. A class is automatically assigned to the subject data item in accordance with a side of the local boundary on which the subject data item resides.

Embodiments of the invention include automatically processing the training set to select a neighborhood subset of data items similar to the subject data item with the neighborhood subset including data items pre classified into different classes. A set of multidimensional class representative points are automatically determined that each represents a corresponding class in the neighborhood subset of training points. A set of at least one multidimensional middle point representing at least one middle between at least two of the class representative points is automatically determined. For each of the at least one multidimensional middle points a subject vector that originates at that middle point and terminates at a multidimensional point corresponding to the subject data item and a set of representative vectors with each representative vector originating at that middle point and terminating at a corresponding class representative point are defined.

At least one scalar operation is automatically computed between the subject vector point and at least one representative vector point of the set of representative vectors. The at least one scalar operation takes into account an angle formed by the subject vector and the at least one representative vector. For instance the at least one operation can be an inner product. A classification of the subject data item is automatically determined based on a result of the at least one scalar operation.

Systems and methods of the invention were utilized to submit the winning entry in the KDDCup06 task 3 data mining contest in which the technique was used to distinguish pulmonary embolisms from other radiological spots showing up on a CT scan as a set of annotated CT data with each data item having well over 100 different attributes or features. The invention provides a variety of advantages which will become apparent from the following disclosure.

While the invention is amenable to various modifications and alternative forms specifics thereof have been shown by way of example in the drawings and will be described in detail. It should be understood however that the intention is not to limit the invention to the particular embodiments described. On the contrary the intention is to cover all modifications equivalents and alternatives falling within the spirit and scope of the invention as defined by the appended claims and their equivalents.

According to one aspect of the invention two variant forms of the above approaches are combined and optimized using an evolutionary algorithm to achieve great classification accuracy. An efficient vertical data structure Predicate Tree or P tree and a novel nearest neighbor identification approach are used in conjunction with an evolutionary algorithm to arrive at the optimized parameters efficiently.

The approach according to one embodiment involves dealing with multiple unknown parameters such as classification algorithm parameters as well as attribute relevance parameters. Because of the inability to conduct exhaustive search to find the best possible combination a Genetic Algorithm GA heuristic search is employed. Each iteration of the genetic algorithm requires the evaluation of the proposed classification algorithm with a suggested set of adaptive parameters. Even for small data sets this results in a large number of training database scans to arrive at an acceptable solution. The use of a vertical data structure P trees and an efficient technique Total Variation to identify potential close neighbors can reduce the overall total computational cost for the GA which would otherwise be computationally prohibitive. In the following description each component of the proposed solution and the adaptive parameters optimized by the GA are discussed.

In the case where the data mining training data set has a large number of attributes conducting trials using all attributes may not be possible due to a lack of GA convergence. However the inventor has recognized that in certain applications such as analysis of radiology image data current detections are done by humans. Thus in these applications it is likely that only a few of the many attributes are actually used. This is due to the known fact that the human mind has very limited capacity for managing multiple simultaneous contexts. In an effort to reduce the number of attributes information gain was employed with respect to class and also several vertical greedy evaluation attribute relevance and selection techniques.

The input data was converted to vertical P trees. P trees are a lossless compressed and data mining ready vertical data structures. These data structures has been successfully applied in data mining applications ranging from Classification and Clustering with K Nearest Neighbor to Classification with Decision Tree Induction to Association Rule Mining. U.S. Pat. No. 6 941 303 incorporated herein by reference provides a detailed description of P trees as vertical compressed data structures facilitating computationally efficient data mining. In general a P tree is a data structure that compresses vertical data in a lossless format. Vertical data is data that is arranged in bit position groups each bit position group corresponding to a different one of the of bit positions and includes bits of the data items having that bit position. The P tree compresses the data of each bit position group such that each bit position group is represented by a compressed data structure. Ultimately the entire data set are represented by a plurality of compressed data structures.

A basic P tree represents one bit position of one attribute reorganized into a compressed tree structure by recursive sub division while recording the predicate truth value regarding purity for each division. Each level of the tree contains truth bits that represent pure sub trees and can then be used for fast computation of counts. This construction is continued recursively down each tree path until a pure sub division is reached which may or may not be at the leaf level . These basic P trees and their complements are easily i.e. computationally efficiently combined using Boolean algebra operations to produce P trees for points entire tuples point intervals or any other attribute pattern or predicate. The root count of any pattern tree will indicate the occurrence count of that pattern. The P tree data structure provides a particularly useful structure for counting patterns in an efficient manner.

The total variation of a training data set about a given data point can be used as an index to arrive at a good set of potential neighbors. These reduced sets of candidate neighbors can be considered as functional contours where functional means total variation about the point . Total variation is just one of many potentially useful functionals for fast pruning of non neighbors. The total variation for each data point in a data set can be computed rapidly using vertical P trees. For each given new subject the total variation is calculated and the data points within a total variation a certain distance epsilon is identified as potential nearest neighbors. Subsequently the actual Euclidian distance for each subject point is calculated to find the true neighbors. This approach avoids the requirement of computing all Euclidian distances between the subject and the points in the training data in arriving at the Nearest Neighbors.

Traditionally k nearest neighbor sets are selected and a plurality vote or weighted vote is used to arrive at the classification of a given subject data item. In conventional K nearest neighbor classification a specific number K of data items that are most similar to the reference data item are identified in the data set. This method of classification hard limits the amount of nearest neighbors to exactly K. This means that other data items of the data set that are just as similar to the reference data item as the least similar data items of the K nearest neighbor set would be excluded from the data set since including them would cause the nearest neighbor set to exceed K items.

Another known method of nearest neighbor classification is the so called epsilon nearest neighbor classification. Unlike K nearest neighbor classification epsilon nearest neighbor classification uses the degree of similarity as the criterion which defines the nearest neighbor set. In this method all data items of a specific degree of similarity to the reference data item are included in the nearest neighbor set. Because the degree of similarity is the key criterion here it must be specified in advance of running the classification routine. This approach can also lead to wrong classifications if the data items just beyond the nearest neighbor set are also very close to the most distant neighbor of the neighborhood set. In the traditional approaches these k s nearest neighbors would be excluded from the neighborhood.

In one embodiment closed K nearest neighbor classification is utilized in which the number and the similarity does not need to be known a priori. Instead this method of classification defines the nearest neighbor set as all data items having a degree of similarity to the referenced data item as any Kmost similar data item that would be produced by the conventional K nearest neighbor algorithm.

Conventionally one can first run a traditional K nearest neighbor algorithm determine the degree of similarity of a Kmost similar data item and then run an epsilon nearest neighbor algorithm using that degree of similarity found by running the K nearest neighbor algorithm as the degree of similarity input. This of course requires running two rather than one classification algorithm. In contrast this embodiment achieves the closed nearest neighbor set with a single pass through the classification algorithm. Moreover using the vertical data arrangement methods including compressed vertical data structures e.g. P trees the classification can be preformed with simple logical operations directly on compressed data structures. This provides a scalable solution in which the computer processing time is not significantly longer for larger data sets.

In one embodiment all neighbors within a certain given Euclidian distance the closed k or epsilon nearest neighbor set are used. Attribute weighted Euclidian distances are used. Additionally a Gaussian weighting of the vote is applied based on distance to the subject. The contribution to each class vote from X epsilon neighbor in class c for subject s is calculated as follows.

In equation 1 above d x s indicates the weighted Euclidian distance from subject s to neighbor x. The parameters VoteFact sigma and the epsilon can be optimized by evolutionary algorithms.

In contrast to the traditional approach e.g. Support Vector Machines of finding a hyper plane that separates the two classes for the entire data set albeit likely in a much higher dimension translate one aspect of the invention is directed to finding the direction of the subject with respect to a local boundary segment between the two classes for a given subject s nearest neighborhoods only. is a diagram illustrating a portion of a data set having data items in two classes class and class O. For example data item is in the class whereas data item is in the O class. The feature space in this example has three dimensions x y and z as illustrated. In practice a feature space can have many more dimensions however for the sake of simplicity only three dimensions are illustrated in this example. Subject S which is a data item to be classified is indicated at . In one example the data set represents annotated CT scan data in which different features of a CT image are identified and characterized by a number of attributes such as position size intensity shape parameters halo geometry parameters and the like. In the KDDCup06 task 3 data set there were around 116 total attributes for each data item representing an annotated feature of the CT image.

In one embodiment the same epsilon nearest neighbors identified in the Nearest Neighbor voting step are used to compute the local boundary between the classes. illustrates the nearest neighbors of the portion of the data set of . The nearest neighbors in this example include data points classified in class indicated at and data points classified in class O indicated at . The rationale behind the use of nearest neighbors of the subject point to be classified to determine the boundary between the classes is the underlying premise that all smooth boundaries can be approximated to any level of accuracy by a piecewise linear boundary.

The classes are each reduced to a representative point in the feature space as illustrated in . Data items of class are represented by representative point and data items of class O are represented by representative point . In one embodiment representative points or are each based on a statistical combination of the points of data items and respectively. For instance the statistical combination can be an average point a vector median point or a most frequently occurring point. A point that is either present or not present among each of the data items may be used. Any suitable technique of selecting a representative point may be employed within the spirit and scope of this aspect of the invention.

A middle point M is selected between each of the class representatives and as illustrated in . Middle point M can be a spatial midpoint or any centroid mean point vector of medians or any suitable choice not necessarily a training point itself . Middle point M is used as an origin for constructing vectors to each representative point and to the subject data item. Thus subject vector Voriginating at middle point M and terminating at subject data item is defined. Likewise representative vectors V and Vare defined respectively for representative points and .

A scalar operation is then computed between subject vector Vand each of the representative vectors V and Vthat takes into account the angle formed therebetween. For instance in a first scalar operation is performed between subject vector Vand representative vector Vthat takes into account angle and a second scalar operation is performed between subject vector Vand representative vector V that takes into account the angle . An example of such a scalar operation is an inner product or vector dot product. The result of taking the inner product is a point that is either positive negative or zero. A positive result indicates that the angle is acute implying that the subject point is on the corresponding side of the piecewise linear approximated boundary between the two classes.

The basic intuition for the above classification decision is if the class is positive the inner product will be positive. Rather than using 0 as the ultimate decision threshold this approach enables increasing the confidence of the positive or negative prediction by using a nonzero threshold. This is useful in a situation where a certain type of class identification is valued more than the other class and when there may be a high level of noise. The final classification threshold value is also a parameter that can be optimized by the GA in one embodiment. In a related embodiment the identification of the local median for a given class can be readily identified using the vertical data structure P tree.

The process is repeated for each of the midpoint points. For instance for midpoint point M representative vectors Vand V and subject vector Vare defined. The inner products are computed based on angles and . Likewise for midpoint point M representative vectors Vand V and subject vector Vare defined. The inner products are computed based on angles and . In one embodiment only those inner products for the vectors originating at midpoint points that are based on a preferred classification are computed. Thus in the present example beginning with midpoint point M a preference for class X is determined. Thus only midpoint points M and M need to be examined at the next recursion since these are the midpoint points that are based on a preferred classification. Computing the inner products associated with midpoint point M reveals a continuing preference for class X. Continuing the process the inner products associated with midpoint M however reveals a preference for classification to class . This would require computing the inner products associated with the vectors originating from midpoints M and M. Eventually this process reveals a most preferred classification.

In another embodiment as a variant of the process described above with respect to a single common center point based on all representative points is selected and middle points are defined in turn between the common center point and each representative point. For each of these middle points the representative vectors subject vector are defined and the inner products are computed. The largest inner product or the most acute angle determines the proper classification. Persons of ordinary skill in the art will appreciate that other computationally efficient techniques for determining a classification among more than two different classes may be used within the spirit and scope of the invention.

The final classification rule is based on the combined classification of the Nearest Neighbor approach and the boundary based approach based on the specific task. For example in one embodiment the following rule was used to produce a winning data mining contest entry in the KDDCup06 task 3 to analyze radiological data to detect a pulmonary embolism.

As described above the approach has multiple parameters that may be optimized to arrive at the best possible classification. An important aspect of any evolutionary algorithm is the evaluation function. The evaluation function should guide the GA towards a near optimal solution. Evaluation functions were based on the specific task criterion. For example in one embodiment the following simple evaluation function was used.

Negative prediction value NPV and total negative TN were calculated based on the task specification for KDDCup06. The above fitness function encourages solutions with high valued TN provided that NPV is within the threshold value. Although the task specified threshold was 1.0 with a very low number of negative cases it was too much to expect multiple solutions that meet the actual NPV threshold and also maintain a high TN level. In a GA collection of quality solutions in each generation potentially influences the set of solutions in the next generation.

In cases where the training data set was small patient level bootstrapping can be used to validate the solutions to identify the optimum values for the respective parameters. The final optimized classifier is used to classify unknown subjects. is a functional flow diagram summarizing an example of a system and the interoperability of its components. Training data such as the 116 attribute training set provided in the KDDCup06 task 3. The attributes are pruned for relevance at producing a training data set having the top M attributes determined to be the most relevant. This operation can be performed automatically using known heuristic methods in one embodiment or manually using a multiple iterative process.

At and a classification algorithm is developed based on training data . The development of the classification algorithm includes parameter optimization using a genetic algorithm. At the optimized classification algorithm is applied to the test data to be classified to produce classified results at .

Disk s are interfaced with processor and store the training data set the data to be classified and instructions that cause system to implement embodiments of the present invention. Input output I O module is interfaced with processor and network such as the Internet or a local network. I O module can also interface with human interface peripherals such as a keyboard mouse monitor printer scanner and the like.

Computer system can be provided with instructions for carrying out the various methods of the invention the training data set needed to classify an unclassified data item and the unclassified data item to be classified and can output the classification for the data item to be classified.

In computer system A provides the instructions and training data set to computer system B. The item to be classified is provided by computer system C. Computer system B performs the classification and outputs a complete training set that includes the now classified data item to remote computer system D. Persons of ordinary skill in the relevant arts will understand that any variety of configurations of different computer systems can be utilized to accomplish the classification within the spirit and scope of the present invention.

While the system and methods in the examples described herein have been geared for solving a classification problem in the medical imaging field it should be understood that these approaches are readily adaptable to other classification problems whether or not the training features are numeric in nature. More generally the present invention may be embodied in other specific forms without departing from the spirit of the essential attributes thereof therefore the illustrated embodiments should be considered in all respects as illustrative and not restrictive reference being made to the appended claims rather than to the foregoing description to indicate the scope of the invention.

For purposes of interpreting the claims for the present invention it is expressly intended that the provisions of Section 112 sixth paragraph of 35 U.S.C. are not to be invoked unless the specific terms means for or step for are recited in a claim.

