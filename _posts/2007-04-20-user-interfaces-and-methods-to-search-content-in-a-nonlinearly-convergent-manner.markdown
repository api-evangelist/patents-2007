---

title: User interfaces and methods to search content in a nonlinearly convergent manner
abstract: Embodiments of the invention relate generally to computing devices and systems, software, computer programs, applications, and user interfaces, and more particularly, to nonlinearly searching content in a manner that, for example, converges on a target unit of content.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08018432&OS=08018432&RS=08018432
owner: Adobe Systems Incorporated
number: 08018432
owner_city: San Jose
owner_country: US
publication_date: 20070420
---
Embodiments of the invention relate generally to computing devices and systems software computer programs applications and user interfaces and more particularly to nonlinearly searching content in a manner that for example converges on a target unit of content.

Traditional user interfaces typically provide users with search tools to navigate through content examples of which include scroll bars and sliders. Word processing applications usually provide scroll bars to control the viewing of a document by causing displayed text or graphics to move up down or across the display. Media players commonly provide a slider to enable a user to access different playback portions of a multimedia file. Generally these search tools enable a user to traverse through content at a rate that is relatively proportional to the physical actions of the user. While functional there are certain drawbacks to current techniques for navigating through content.

It would be desirable to provide improved techniques systems and devices that minimize one or more of the drawbacks associated with conventional techniques for searching content.

Like reference numerals refer to corresponding parts throughout the several views of the drawings. Note that most of the reference numerals include one or two left most digits that generally identify the figure that first introduces that reference number.

In view of the foregoing nonlinearly convergent indicator can exponentially reduce the number of inputs and which in turn enables a user to determine a target unit of content in less time than for example the implementation of a constant incremental amount for each displacement. In one embodiment nonlinearly convergent indicator can be configured to traverse portions of content by a logarithmic amount. Further nonlinearly convergent indicator facilitates determining a target unit of content for a quantity of accepted inputs. As such any target unit of content can be sufficiently determined within a specific number of key strokes associated with inputs and . In one embodiment the specific number of accepted inputs e.g. key strokes can be programmable to modify the rate at which a target unit of content can be found. In a specific embodiment the rate at which a target unit of content is determined can be a function of the specific number of accepted inputs to reach target e.g. a number of key strokes and a number of partitions not shown for content . In addition nonlinearly convergent indicator can be configured to obviate the need to use a pointing device to search content .

Content search panel can include a scale having a beginning and an end that respectively correspond to the beginning and the end of content . Content for example can be a collection of images of alphabetic characters that constitute a video whereby each character is shown for a finite amount of time. In one embodiment nonlinearly convergent indicator is configured to successively reduce the magnitude of the displacement amounts in accordance with a logarithmic function for each accepted input for input interface . Note that in this example input can be configured to move nonlinearly convergent indicator toward beginning whereas input can be configured to move the nonlinearly convergent indicator toward end

To illustrate a nonlinear search mode consider that the nonlinearly convergent indicator initializes as nonlinearly convergent indicator . At this position nonlinearly convergent indicator is configured to present character M which is the 13of 26 characters as portion of content . Next the user selects input to move nonlinearly convergent indicator by displacement d to a position for nonlinearly convergent indicator . Responsive to the user again selecting input nonlinearly convergent indicator moves by displacement d to a position for nonlinearly convergent indicator . Note that successively accepted inputs reduce the magnitudes of displacement such as from displacement to displacement . The magnitude reduction can be in accordance with a logarithmic function. Lastly shown is the movement of nonlinearly convergent indicator to a position for nonlinearly convergent indicator in response to for example activation of input . Subsequent accepted inputs which are not depicted facilitate the convergence of nonlinearly convergent indicator to target . Note that nonlinearly convergent indicators to can represent the same indicator but at different positions along scale .

As used herein the term nonlinearly convergent indicator refers generally at least in one embodiment to an interface component that represents the position of a portion of content relative to positions for other portions of the content such as between a beginning and an end of the content. In one embodiment a nonlinearly convergent indicator can represent a length a distance a number of content units and the like. A nonlinearly convergent indicator can be implemented as a slider that moves relative to a scale according to one embodiment. In another embodiment a nonlinearly convergent indicator can be implemented as a number representing for example a point in time e.g. a timer a percentage a number of content units e.g. a number of minutes and or seconds a number of pages or the like. In various embodiments a nonlinearly convergent indicator can be implemented as any representation that indicates a portion in content that can be displaced to another portion in accordance to for example a nonlinear function that converges to or on a limiting value. As used herein the term content at least in one embodiment refers to information and or material e.g. multi media information presented within an interface in relation to for example a web site a data entry application such as a software product a media player and the like. Content can also include the audio and or visual presentation of text such as an electronic document e.g. a document in Portable Document Format PDF as well as audio images audio video media such as Flash presentations text and the like. As used herein the term logarithmic refers generally at least in one embodiment to a characteristic that is determined in accordance with or as a result of an exponential related function such as an inverse exponential function i.e. a logarithm function or a decreasing exponential function as well as any other nonlinearly convergent function that converges near or to a value that can represent one or more target units of content. For example a logarithmic amount can be a quantity determined in accordance with an exponential related function or as a result of such a function.

As used herein the term input refers generally at least in one embodiment to a mechanism for accepting or receiving data or a datum such as a two state input that has one state that represents an un activated state e.g. a normally un activated state and another state that represents an activated state. An example of a two state input is a momentary push button switch. Another example of a two state input is a voice activated command that inputs data or a datum in response to a specific sound or word s e.g. seek left . As used herein the term accepted input refers generally at least in one embodiment to the data or datum generated by an activated input. As such multiple accepted inputs e.g. key strokes can be entered with respect to the same input e.g. button . As used herein the term target refers generally at least in one embodiment to either an object of a nonlinear search or a selected interface component for search for the object. For example a target content unit and a target portion of content can be objects to which a nonlinear search converges. As another example a target partition and a target range can be described as selected interface components that are used to determine the object of the search. As used herein the term partition refers generally at least in one embodiment to a subset of content units that each can have the same quantity of content units or in some cases different quantities .

Partition manager is configured to partition content into a number of partitions each of which can be associated with an input such as any of inputs to . Further partition manager can be configured to size partitions to in a manner that decreases the amount of content units for successively accepted inputs. Further partition manager is configured to generate k number of partitions which in this example include four partitions to . In one embodiment a number for k is selected so that nonlinear search controller can determine one or more target content units for a quantity of accepted inputs. In some instances a user or another entity can provide number k to partition manager to generate the appropriate number of partitions . Further partition manager can form associations between inputs in input interface with partitions . For example input input input and input can be configured to select partition partition partition and partition respectively.

Logarithmic seek controller is configured to among other things to reduce the first quantity of content units for partitions to the second quantity of content units in accordance with or as a result of operation of an exponential function including the inverse of the exponential function i.e. a logarithmic function . In at least one embodiment logarithmic seek controller can operate to determine a specific number of partition selections e.g. a number of key strokes to sufficiently find one or more target content units in content . In a specific embodiment logarithmic seek controller can be configured to displace a nonlinearly convergent indicator not shown by amounts that nonlinearly approach a target portion of content in an approximate number of accepted inputs for inputs to the approximate number of accepted inputs being determined by the following expression NI O log n Equation 1 where NI represents the quantity of the accepted inputs such as the number of key strokes to determine the target O indicates order to successive selections of partitions k represents a number of partitions associated with the quantity of inputs to and n represents an aggregate number of units or portions of content . Further Equation 1 can be modified to calculate values of k and n.

Sub unit controller is configured to modify nonlinearly convergent search parameters for nonlinear search controller when searching for target sub units of content within a determined target content unit. For example consider that if each character of content represents a unit of content then there are 26 units of content i.e. n is equivalent to 26 . Further consider that each unit of content is composed of sub units of content that each corresponds to one second of playback for example. If there are 60 seconds for each unit of content then sub unit controller is configured to modify nonlinearly convergent search parameters for Equation 1. Namely sub unit controller can change n from 26 to 60 and k from 4 to any number including 4 to determine a number of key strokes to search for a second i.e. 1 60of a minute of content within unit . Sub unit controller can continue to determine other sub units of content such as a video frame within sub unit .

Undo partition unit is configured to undo either the sizing of partitions or the displacement of the nonlinearly convergent indicator not shown . For example consider that a user selects input which in turn selects partition . In response additional partitions are generated for that partition . But if the user wishes to refine the search to the partition prior to the last accepted input then the user enters an undo input. The undo input can be one of inputs to or any other input not shown. Thereafter the user can select input to continue searching in partition

To illustrate consider that nonlinear search mode initializes by generating a first set of partitions Activation of input as the first key stroke KS 1 selects partition . A second set of partitions are formed. Next consider that the third partition is selected with the second key stroke KS 2. This forms a third set of partitions . A first partition is next selected with the third key stroke KS 3 which in turn generates a fourth set of partitions . Responsive to a fourth key stroke i.e. KS 4 to select a fourth partition a fifth set of partitions are created. Since it takes approximately 5.3 key strokes to reach a target content unit a sixth key stroke i.e. KS 6 can select the target content unit . Note that an undo partition unit can be configured to reverse the activation of a key stroke to regenerate for example the fourth set of partitions subsequent to generating the fifth set of partitions thereby going from the 5key stroke back to the 4key stoke.

In some examples logic module can be configured to control panel generator to form content search panels that include a nonlinearly convergent indicator. Rendering engine can be configured to operate as a layout engine for web pages for example to manipulate both content e.g. as expressed in or including HTML XML image files etc. and formatting information e.g. as expressed in or including CSS XSL etc. for rendering the data or information as one or more panels on interface . Interface module can exchange panel presentation data including content data image data audio data as well as other data between application and another application e.g. a host client web services based distributed i.e. enterprise application programming interface API operating system program procedure or others that can use data and information generated from panel generator to render presented panels on a display screen. In other examples the above described techniques and elements can be varied in design implementation and function and are not limited to the descriptions provided. In one embodiment logic module can include a nonlinear search controller that is configured to include structure and or functionality similar to previously described nonlinear search controllers.

In some examples logic module and panel generator can be implemented as part of application which can be implemented separately from other functional components or modules such as interface module display module rendering module and repository . Data bus can be implemented to communicate data over a given port between application and interface module display module rendering module and repository . In other words application can be implemented as a standalone application or as a component i.e. module of another application. Data or information e.g. nonlinearly convergent search parameters displacement amounts logarithmic amounts accepted inputs partitions sizes and the like associated with a panel can be stored in repository which can be implemented using a database data store data warehouse or any other type of data repository or structure. In other examples more fewer or different modules can be used to implement the described techniques for panel presentation and are not limited to those provided.

According to some examples computer system performs specific operations in which processor executes one or more sequences of one or more instructions stored in system memory . Such instructions can be read into system memory from another computer readable medium such as static storage device or disk drive . In some examples hard wired circuitry can be used in place of or in combination with software instructions for implementation. In the example shown system memory includes modules of executable instructions for implementing an operation system O S a content presentation utility module an application and a nonlinearly convergent content search control module . Content presentation utility module includes instructions for providing content presentation functionality such as a media player a word processing application a photo album etc. Application includes additional instructions to integrate nonlinearly converging content searches with content presentation utility module . Further application can implement instructions to perform searching using a nonlinearly convergent search control module .

The term computer readable medium refers at least in one embodiment to any medium that participates in providing instructions to processor for execution. Such a medium can take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media includes for example optical or magnetic disks such as disk drive . Volatile media includes dynamic memory such as system memory . Transmission media includes coaxial cables copper wire and fiber optics including wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio wave and infrared data communications.

Common forms of computer readable media includes for example floppy disk flexible disk hard disk magnetic tape any other magnetic medium CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM any other memory chip or cartridge carrier wave or any other medium from which a computer can read.

In some examples execution of the sequences of instructions can be performed by a single computer system . According to some examples two or more computer systems coupled by communication link e.g. LAN PSTN or wireless network can perform the sequence of instructions in coordination with one another. Computer system can transmit and receive messages data and instructions including program i.e. application code through communication link and communication interface . Received program code can be executed by processor as it is received and or stored in disk drive or other non volatile storage for later execution. In one embodiment system is implemented as a hand held device such as a mobile phone . But in other embodiments system can be implemented as a personal computer i.e. a desk top computer or any other computing device.

In some examples one or more panels for creating electronic documents can be presented on interface which can be an interface for an application such as a web browsing program Internet content portal client or desktop application for any purpose. Interface in some embodiments can include UIs for stand alone video players including a DVD player UI. Panels can be used to provide additional or supplemental information that can be contextually relevant to another panel presented in interface . Computer notebook computer notebook or laptop smart phone personal digital assistant PDA server and administrator computer can provide content data for rendering content as well as other data which can be implemented to generate for example an electronic form and content input field in interface . In some cases an operating system installed on computer can communicate i.e. via an application programming interface API content data and or other related data to another application installed on computer to render i.e. interpreting data and information to draw or display the content in an interface one or more panels presented in interface . In some examples different types of panels can be rendered in interface . In one embodiment interface can include any number and or any type of display environments such as CRT and LCD displays. Note that the above described system and elements can be varied and are not limited to the descriptions or examples provided.

In at least some of the embodiments of the invention the structures and or functions of any of the above described interfaces and panels can be implemented in software hardware firmware circuitry or a combination thereof. Note that the structures and constituent elements shown in as well as their functionality can be aggregated with one or more other structures or elements. Alternatively the elements and their functionality can be subdivided into constituent sub elements if any. As software the above described described techniques can be implemented using various types of programming or formatting languages frameworks syntax applications protocols objects or techniques including C Objective C C C Flex Fireworks Java Javascript AJAX COBOL Fortran ADA XML HTML DHTML XHTML HTTP XMPP and others. These can be varied and are not limited to the examples or descriptions provided.

The foregoing description for purposes of explanation used specific nomenclature to provide a thorough understanding of the invention. However it will be apparent to one skilled in the art that specific details are not required in order to practice the invention. In fact this description should not be read to limit any feature or aspect of the present invention to any embodiment rather features and aspects of one embodiment can readily be interchanged with other embodiments.

Thus the foregoing descriptions of specific embodiments of the invention are presented for purposes of illustration and description. They are not intended to be exhaustive or to limit the invention to the precise forms disclosed many alternatives modifications equivalents and variations are possible in view of the above teachings. For the purpose of clarity technical material that is known in the technical fields related to the embodiments has not been described in detail to avoid unnecessarily obscuring the description. Thus the various embodiments can be modified within the scope and equivalents of the appended claims. Further the embodiments were chosen and described in order to best explain the principles of the invention and its practical applications they thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated. Notably not every benefit described herein need be realized by each embodiment of the present invention rather any specific embodiment can provide one or more of the advantages discussed above. In the claims elements and or operations do not imply any particular order of operation unless explicitly stated in the claims. It is intended that the following claims and their equivalents define the scope of the invention.

