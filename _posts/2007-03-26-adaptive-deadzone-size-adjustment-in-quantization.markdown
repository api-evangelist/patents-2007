---

title: Adaptive deadzone size adjustment in quantization
abstract: Techniques and tools are described for adaptive deadzone (“DZ”) resizing during quantization. For example, in some embodiments, for quantization of an AC frequency coefficient of a block, a video encoder adjusts DZ size of a selected quantizer depending on the texture of the block. In other embodiments, a video encoder adjusts DZ size depending on the frequency of a coefficient being quantized. In still other embodiments, for quantization of an AC frequency coefficient of a block, a video encoder adjusts DZ size depending on the texture of the block and the frequency of the coefficient being quantized.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08498335&OS=08498335&RS=08498335
owner: Microsoft Corporation
number: 08498335
owner_city: Redmond
owner_country: US
publication_date: 20070326
---
Digital video consumes large amounts of storage and transmission capacity. Many computers and computer networks lack the resources to process raw digital video. For this reason engineers use compression also called coding or encoding to reduce the bit rate of digital video. Compression decreases the cost of storing and transmitting video by converting the video into a lower bit rate form. Decompression also called decoding reconstructs a version of the original video from the compressed form. A codec is an encoder decoder system.

In general video compression techniques include intra picture compression and inter picture compression. Intra picture compression techniques compress an individual picture and inter picture compression techniques compress a picture with reference to a preceding and or following picture often called a reference or anchor picture or pictures.

The encoder quantizes the transform coefficients resulting in an 8 8 block of quantized transform coefficients . With quantization the encoder essentially trades off quality and bit rate. More specifically quantization can affect the fidelity with which the transform coefficients are encoded which in turn can affect bit rate. Coarser quantization tends to decrease fidelity to the original transform coefficients as the coefficients are more coarsely approximated. Bit rate also decreases however when decreased complexity can be exploited with lossless compression. Conversely finer quantization tends to preserve fidelity and quality but result in higher bit rates. Different encoders use different parameters for quantization. In most encoders a step size of quantization is set for a block picture or other unit of video. Some encoders quantize coefficients differently within a given block so as to apply relatively coarser quantization to perceptually less important coefficients and a quantization matrix can be used to indicate the relative quantization weights. Or apart from the rules used to reconstruct quantized values some encoders define the thresholds according to which values are quantized so as to quantize values more aggressively.

Returning to further encoding varies depending on whether a coefficient is a DC coefficient the lowest frequency coefficient shown as the top left coefficient in the block an AC coefficient in the top row or left column in the block or another AC coefficient. The encoder typically encodes the DC coefficient as a differential from the reconstructed DC coefficient of a neighboring 8 8 block. The encoder entropy encodes the differential. The entropy encoder can encode the left column or top row of AC coefficients as differentials from AC coefficients a corresponding left column or top row of a neighboring 8 8 block. The encoder scans the 8 8 block of predicted quantized AC coefficients into a one dimensional array . The encoder then entropy encodes the scanned coefficients using a variation of run level coding .

In corresponding decoding a decoder produces a reconstructed version of the original 8 8 block. The decoder entropy decodes the quantized transform coefficients scanning the quantized coefficients into a two dimensional block and performing AC prediction and or DC prediction as needed. The decoder inverse quantizes the quantized transform coefficients of the block and applies an inverse frequency transform such as an inverse DCT IDCT to the de quantized transform coefficients producing the reconstructed version of the original 8 8 block. If the encoder subtracted 128 from the 8 bit sample values before the frequency transform 128 is now added back to the sample values. When a picture is used as a reference picture in subsequent motion compensation see below an encoder also reconstructs the picture.

Inter picture compression techniques often use motion estimation and motion compensation to reduce bit rate by exploiting temporal redundancy in a video sequence. Motion estimation is a process for estimating motion between pictures. In general motion compensation is a process of reconstructing pictures from reference picture s using motion data producing motion compensated predictions.

Whereas the example encoder divides an intra coded picture into non overlapping 8 8 blocks the encoder more generally divides an inter coded picture into rectangular non overlapping blocks of N M samples where N and M can be 4 or 8 so block size is 4 4 4 8 8 4 or 8 8. For a current unit e.g. 8 8 block being encoded the encoder computes the sample by sample difference between the current unit and its motion compensated prediction to determine a residual also called error signal . The residual is frequency transformed quantized and entropy encoded.

If a predicted picture is used as a reference picture for subsequent motion compensation the encoder reconstructs the predicted picture. When reconstructing residuals the encoder reconstructs transform coefficients that were quantized and performs an inverse frequency transform. The encoder performs motion compensation to compute the motion compensated predictors and combines the predictors with the residuals. During decoding a decoder typically entropy decodes information and performs analogous operations to reconstruct residuals perform motion compensation and combine the predictors with the reconstructed residuals.

Lossless compression reduces the bit rate of information by removing redundancy from the information without any reduction in fidelity. Lossless compression techniques reduce bit rate at no cost to quality but can only reduce bit rate up to a certain point. Decreases in bit rate are limited by the inherent amount of variability in the statistical characterization of the input data which is referred to as the source entropy.

In contrast with lossy compression quality suffers somewhat but the achievable decrease in bit rate is more dramatic. Lossy compression techniques can be used to reduce bit rate more than lossless compression techniques but some of the reduction in bit rate is achieved by reducing quality and the lost quality cannot be completely recovered. Lossy compression is often used in conjunction with lossless compression in a system design in which the lossy compression establishes an approximation of the information and lossless compression techniques are applied to represent the approximation.

In general an encoder varies quantization to trade off quality and bit rate. A basic goal of lossy compression is to provide good rate distortion performance. So for a particular bit rate an encoder attempts to provide the highest quality of video. Or for a particular level of quality fidelity to the original video an encoder attempts to provide the lowest bit rate encoded video. In practice considerations such as encoding time encoding complexity encoding resources decoding time decoding complexity decoding resources overall delay and or smoothness in quality bit rate changes also affect decisions made in codec design as well as decisions made during actual encoding.

According to one possible definition quantization is a term used for an approximating non reversible mapping function commonly used for lossy compression in which there is a specified set of possible output values and each member of the set of possible output values has an associated set of input values that result in the selection of that particular output value. A variety of quantization techniques have been developed including scalar or vector uniform or non uniform and adaptive or non adaptive quantization.

According to one possible definition a scalar quantizer is an approximating functional mapping x Q x of an input value x to a quantized value Q x sometimes called a reconstructed value. shows a staircase I O function for a scalar quantizer. The horizontal axis is a number line for an input variable x and the vertical axis indicates the corresponding quantized values Q x . The number line is partitioned by thresholds such as the threshold . Each value of x within a given range between a pair of adjacent thresholds is assigned the same quantized value Q x . For example each value of x within the range is assigned the same quantized value . At a threshold one of the two possible quantized values is assigned to an input x depending on the system. Overall the quantized values Q x exhibit a discontinuous staircase pattern. The distance the mapping continues along the number line depends on the system typically ending after a finite number of thresholds. The placement of the thresholds on the number line may be uniformly spaced as shown in or non uniformly spaced.

A scalar quantizer can be decomposed into two distinct stages. The first stage is the classifier stage in which a classifier function mapping x A x maps an input x to a quantization index A x which is often integer valued. In essence the classifier segments an input number line or data set. shows a generalized classifier and thresholds for a scalar quantizer. As in a number line for a variable x is segmented by thresholds such as the threshold . Each value of x within a given range such as the range is assigned the same quantization index.

In the second stage a reconstructor functional mapping k k maps each quantization index k to a reconstruction value k . In essence the reconstructor selects a value for reconstruction of each region determined by the classifier. The reconstructor functional mapping may be implemented for example using a lookup table. shows example classifier thresholds for a scalar quantizer and also shows as open circles example reconstruction points according to a midpoint reconstruction rule. Overall the classifier relates to the reconstructor as follows 1 .

In common usage the term quantization is often used to describe the classifier stage which is performed during encoding. The term inverse quantization is similarly used to describe the reconstructor stage whether performed during encoding or decoding.

A non uniform quantizer has threshold values that are not uniformly spaced for all classifier regions. According to one possible definition a dead zone plus uniform threshold quantizer DZ UTQ is a quantizer with uniformly spaced threshold values for all classifier regions except the one containing the zero input value which is called the dead zone DZ . In a general sense a DZ UTQ is a non uniform quantizer since the DZ size is different than the other classifier regions.

In many systems the extent of quantization is parameterized in terms of quantization step size which is adapted to regulate quality and or bit rate. Coarser quantization uses larger quantization step sizes. Finer quantization uses smaller quantization step sizes. Often for purposes of signaling and reconstruction quantization step sizes are parameterized as multiples of a smallest quantization step size.

Some standards and products also allow specification of a quantization matrix or scaling matrix that indicates different weights for different frequency coefficients in quantization. Frequency coefficients are then quantized and inverse quantized using weighted quantization step sizes. For example a scaling matrix for an intra coded block uses higher weights for high frequency coefficients and lower weights for low frequency coefficients which tends to shift distortion that is introduced to high frequency coefficients where it is less apt to cause perceptible quantization artifacts.

Some standards and products support selection between different reconstruction rules. For example in some systems a decoder can switch between a uniform quantizer reconstruction rule and a non uniform quantizer reconstruction rule. Typically for a given reconstruction rule standards and products specify reconstruction values that correspond to midpoint reconstruction for the sake of simplicity. In and example reconstruction points according to midpoint reconstruction rules are superimposed as circles at the midpoints of the ranges that define quantization bins.

Standards and product specifications that focus only on achieving interoperability will often specify reconstruction values without specifying a classification rule. In other words some specifications may define the functional mapping k k without defining the functional mapping x A x . This allows a decoder built to comply with the standard product to reconstruct information correctly. In contrast encoders are often given the freedom to change the classifier. For classification the thresholds can be defined so that certain input values will be mapped to more common and hence lower bit rate indices which makes the reconstruction values closer to optimal for some content. When an encoder defines quantization bin boundaries in a static way this allows the encoder to adjust in a predetermined way to expected distributions in values. For example an encoder may define the DZ threshold to be 1.2 QP for a quantizer rather than 1 QP as might be expected given midpoint reconstruction . While changing how quantization thresholds are defined can improve performance it does not support content adaptive behavior during quantization.

The preceding adaptive quantization mechanisms help improve performance in many scenarios. In some configurations however they fail to provide fine grained control over quantization that is sufficiently adaptive.

In summary the detailed description presents techniques and tools for improving quantization by adapting deadzone DZ size. For example a video encoder adjusts DZ size for blocks of frequency coefficients being encoded which gives the encoder finer grained control over how distortion is introduced during quantization. By adjusting DZ size depending on the texture of a block the encoder is able to introduce more distortion where it is less perceptible such as in highly textured areas and introduce less distortion in other areas such as smooth areas .

In some embodiments a tool such as a video encoder gets a texture measurement for image or video information. When multiple quantizers are available the tool selects one of the quantizers to use in quantization. The tool adjusts DZ size of the quantizer based at least in part on the texture measurement and the tool quantizes the information e.g. frequency coefficients for a block of such information using the quantizer with the adjusted DZ size. For example the tool computes an adjustment factor using the texture measurement and adjusts an initial DZ size for the quantizer with the adjustment factor. The way the tool adjusts DZ size can depend on the quantizer used as well as whether the content is intra coded or inter coded.

In other embodiments a tool such as a video encoder performs a frequency transform on values for image or video information producing frequency coefficients. For at least one of the frequency coefficients e.g. an AC coefficient the tool adjusts DZ size of a quantizer based at least in part on frequency of the coefficient and quantizes the coefficient using the quantizer with the adjusted DZ size. For example the tool adds a weighted DZ size offset to an initial DZ size for the quantizer. The frequency dependent DZ resizing can be used in combination with texture dependent DZ resizing.

The foregoing and other objects features and advantages will become more apparent from the following detailed description which proceeds with reference to the accompanying figures. This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the detailed description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

The present application relates to techniques and tools for improving quantization by adapting deadzone DZ size depending on texture level and or frequency.

Quantization can produce visible artifacts that tend to be more artificial looking and visually distracting than simple loss of fine detail. For example smooth untextured content is susceptible to contouring artifacts artifacts that appear between regions of two different quantization output values because the human visual system is sensitive to subtle variations particularly luma differences in smooth content. While the same amount of distortion may not create noticeable artifacts in textured areas due to masking effects of surrounding detail in smooth regions it can create a visible line or step in the reconstructed image.

In some embodiments when a video encoder quantizes the AC coefficients of a block the video encoder adapts the DZ size of the quantizer depending on the texture level of the block and the frequency of the AC coefficient being quantized. When the block has little or no texture the encoder decreases the DZ size. As the texture of the block becomes more dominant the encoder increases the DZ size. The encoder also increases DZ size for higher frequency AC coefficients in the block compared to lower frequency AC coefficients in the block. In this way when the encoder introduces distortion to regulate bit rate it tends to introduce more distortion where it is expected to be less perceptible e.g. textured areas and introduce less distortion where it would likely be more perceptible e.g. smooth areas .

Various alternatives to the implementations described herein are possible. Certain techniques described with reference to flowchart diagrams can be altered by changing the ordering of stages shown in the flowcharts by repeating or omitting certain stages etc. For example initial stages of texture analysis e.g. obtaining texture information for a picture macroblock s or block s can be completed before later stages begin or operations for the different stages can be interleaved on a block by block macroblock by macroblock or other region by region basis.

The various techniques and tools described herein can be used in combination or independently. Different embodiments implement one or more of the described techniques and tools. Aside from uses in video compression the adaptive quantization techniques and tools can be used in image compression other compression or other areas. For example while many examples described herein involve quantization of AC coefficients for blocks by a video encoder alternatively the techniques and tools described herein are applied to quantization of AC coefficients for blocks in an image encoder.

Some of the techniques and tools described herein address one or more of the problems noted in the background. Typically a given technique tool does not solve all such problems. Rather in view of constraints and tradeoffs in encoding time resources and or quality the given technique tool improves encoding performance for a particular implementation or scenario.

With reference to the computing environment includes at least one processing unit and memory . In this most basic configuration is included within a dashed line. The processing unit executes computer executable instructions and may be a real or a virtual processor. In a multi processing system multiple processing units execute computer executable instructions to increase processing power. The memory may be volatile memory e.g. registers cache RAM non volatile memory e.g. ROM EEPROM flash memory etc. or some combination of the two. The memory stores software implementing an encoder with one or more of the described techniques and tools for texture adaptive and or frequency adaptive adjustment of DZ size during quantization.

A computing environment may have additional features. For example the computing environment includes storage one or more input devices one or more output devices and one or more communication connections . An interconnection mechanism not shown such as a bus controller or network interconnects the components of the computing environment . Typically operating system software not shown provides an operating environment for other software executing in the computing environment and coordinates activities of the components of the computing environment .

The storage may be removable or non removable and includes magnetic disks magnetic tapes or cassettes CD ROMs DVDs or any other medium which can be used to store information and which can be accessed within the computing environment . The storage stores instructions for the software implementing the video encoder.

The input device s may be a touch input device such as a keyboard mouse pen or trackball a voice input device a scanning device or another device that provides input to the computing environment . For audio or video encoding the input device s may be a sound card video card TV tuner card or similar device that accepts audio or video input in analog or digital form or a CD ROM or CD RW that reads audio or video samples into the computing environment . The output device s may be a display printer speaker CD writer or another device that provides output from the computing environment .

The communication connection s enable communication over a communication medium to another computing entity. The communication medium conveys information such as computer executable instructions audio or video input or output or other data in a modulated data signal. A modulated data signal is a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media include wired or wireless techniques implemented with an electrical optical RF infrared acoustic or other carrier.

The techniques and tools can be described in the general context of computer readable media. Computer readable media are any available media that can be accessed within a computing environment. By way of example and not limitation with the computing environment computer readable media include memory storage communication media and combinations of any of the above.

The techniques and tools can be described in the general context of computer executable instructions such as those included in program modules being executed in a computing environment on a target real or virtual processor. Generally program modules include routines programs libraries objects classes components data structures etc. that perform particular tasks or implement particular abstract data types. The functionality of the program modules may be combined or split between program modules as desired in various embodiments. Computer executable instructions for program modules may be executed within a local or distributed computing environment.

For the sake of presentation the detailed description uses terms like measure and adjust to describe computer operations in a computing environment. These terms are high level abstractions for operations performed by a computer and should not be confused with acts performed by a human being. The actual computer operations corresponding to these terms vary depending on implementation.

The encoder processes video pictures. The term picture generally refers to source coded or reconstructed image data. For progressive video a picture is a progressive video frame. For interlaced video a picture may refer to an interlaced video frame the top field of the frame or the bottom field of the frame depending on the context. The encoder is block based and uses a 4 2 0 macroblock format for frames with each macroblock including four 8 8 luminance blocks at times treated as one 16 16 macroblock and two 8 8 chrominance blocks. For fields the same or a different macroblock organization and format may be used. The 8 8 blocks may be further sub divided at different stages e.g. at the frequency transform and entropy encoding stages. The encoder can perform operations on sets of samples of different size or configuration than 8 8 blocks and 16 16 macroblocks. Alternatively the encoder is object based or uses a different macroblock or block format.

Returning to the encoder system compresses predicted pictures and intra coded key pictures. For the sake of presentation shows a path for key pictures through the encoder system and a path for predicted pictures. Many of the components of the encoder system are used for compressing both key pictures and predicted pictures. The exact operations performed by those components can vary depending on the type of information being compressed.

A predicted picture e.g. progressive P frame or B frame interlaced P field or B field or interlaced P frame or B frame is represented in terms of prediction from one or more other pictures which are typically referred to as reference pictures or anchors . A prediction residual is the difference between predicted information and corresponding original information. In contrast a key picture e.g. progressive I frame interlaced I field or interlaced I frame is compressed without reference to other pictures.

If the current picture is a predicted picture a motion estimator estimates motion of macroblocks or other sets of samples of the current picture with respect to one or more reference pictures. The picture store buffers a reconstructed previous picture for use as a reference picture. When multiple reference pictures are used the multiple reference pictures can be from different temporal directions or the same temporal direction. The motion estimator outputs as side information motion information such as differential motion vector information.

The motion compensator applies reconstructed motion vectors to the reconstructed reference picture s when forming a motion compensated current picture . The difference if any between a block of the motion compensated current picture and corresponding block of the original current picture is the prediction residual for the block. During later reconstruction of the current picture reconstructed prediction residuals are added to the motion compensated current picture to obtain a reconstructed picture that is closer to the original current picture . In lossy compression however some information is still lost from the original current picture . Alternatively a motion estimator and motion compensator apply another type of motion estimation compensation.

A frequency transformer converts spatial domain video information into frequency domain i.e. spectral transform data. For block based video pictures the frequency transformer applies a DCT variant of DCT or other forward block transform to blocks of the samples or prediction residual data producing blocks of frequency transform coefficients. Alternatively the frequency transformer applies another conventional frequency transform such as a Fourier transform or uses wavelet or sub band analysis. The frequency transformer may apply an 8 8 8 4 4 8 4 4 or other size frequency transform.

A quantizer then quantizes the blocks of transform coefficients. The quantizer applies non uniform scalar quantization to the spectral data with a step size that varies on a picture by picture basis or other basis. The quantizer can also apply another type of quantization to the spectral data coefficients for example a uniform or adaptive quantization for at least some of the coefficients or directly quantizes spatial domain data in an encoder system that does not use frequency transformations. In described embodiments the quantizer adapts quantization of AC coefficients by changing DZ size depending on texture and or frequency.

When a reconstructed current picture is needed for subsequent motion estimation compensation an inverse quantizer performs inverse quantization on the quantized spectral data coefficients. An inverse frequency transformer performs an inverse frequency transform producing blocks of reconstructed prediction residuals for a predicted picture or samples for a key picture . If the current picture was a key picture the reconstructed key picture is taken as the reconstructed current picture not shown . If the current picture was a predicted picture the reconstructed prediction residuals are added to the motion compensated predictors to form the reconstructed current picture. One or both of the picture stores buffers the reconstructed current picture for use in subsequent motion compensated prediction.

The entropy coder compresses the output of the quantizer as well as certain side information e.g. motion information quantization step size . Typical entropy coding techniques include arithmetic coding differential coding Huffman coding run length coding LZ coding dictionary coding and combinations of the above. The entropy coder typically uses different coding techniques for different kinds of information and can choose from among multiple code tables within a particular coding technique.

The entropy coder provides compressed video information to the multiplexer MUX . The MUX may include a buffer and a buffer level indicator may be fed back to a controller. Before or after the MUX the compressed video information can be channel coded for transmission over the network.

A controller not shown receives inputs from various modules such as the motion estimator frequency transformer quantizer inverse quantizer entropy coder and buffer . The controller evaluates intermediate results during encoding for example setting quantization step sizes and performing rate distortion analysis. The controller works with modules such as the motion estimator frequency transformer quantizer and entropy coder to set and change coding parameters during encoding. When an encoder evaluates different coding parameter choices during encoding the encoder may iteratively perform certain stages e.g. quantization and inverse quantization to evaluate different parameter settings. The encoder may set parameters at one stage before proceeding to the next stage. Or the encoder may jointly evaluate different coding parameters. The tree of coding parameter decisions to be evaluated and the timing of corresponding encoding depends on implementation.

The relationships shown between modules within the encoder indicate general flows of information in the encoder other relationships are not shown for the sake of simplicity. In particular usually does not show side information indicating the encoder settings modes tables etc. used for a video sequence picture macroblock block etc. Such side information once finalized is sent in the output bitstream typically after entropy encoding of the side information.

Particular embodiments of video encoders typically use a variation or supplemented version of the generalized encoder . Depending on implementation and the type of compression desired modules of the encoder can be added omitted split into multiple modules combined with other modules and or replaced with like modules. For example the controller can be split into multiple controller modules associated with different modules of the encoder. In alternative embodiments encoders with different modules and or other configurations of modules perform one or more of the described techniques.

This section describes techniques and tools for adaptively adjusting the DZ size of a quantizer depending on texture and or frequency. For example a video encoder measures texture for a block of samples or residual values then adjusts the size of the DZ the center quantization bin where values are quantized to a level of zero using the measured texture. The encoder can further adjust DZ size to account for differences in perceptual importance of different frequencies of coefficients. This helps the video encoder improve the perceptual quality of the encoded video.

Perceptual sensitivity to quantization artifacts is related to texture level in both the spatial and temporal domain. High texture levels often result in masking effects that can hide quality degradation and quantization artifacts. On the other hand in regions with lower texture levels e.g. smooth regions degradation and quantization artifacts are more visible. Previous encoders have made quantization adjustments for some parts of video pictures e.g. picture edges . Another approach adjusts quantization step size e.g. QP in reaction to changes in texture. Adapting DZ size by itself or in combination with other adaptive quantization techniques provides another mechanism to regulate rate distortion performance.

Quantization typically reduces the number of bits required to code information such as transform coefficients but also introduces distortion. In general the human visual system is sensitive to distortion in low detail regions of an image compared to regions with more texture. A goal of the adaptive DZ resizing techniques and tools described herein is to introduce distortion where it is less perceptible when distortion is introduced during encoding.

In some embodiments the decoder or encoder during encoder side reconstruction uses either of two different quantizer rules when reconstructing AC coefficients for an N M block. The reconstruction rules are also called inverse quantization modes. The decoder or encoder uses a uniform quantizer reconstruction rule or a non uniform quantizer reconstruction rule.

In some implementations the inverse quantization mode is specified for a picture. All blocks in the picture use the same inverse quantization mode. The value of the parameter QP controls the amount of quantization that is applied to the coefficients and QP can vary within a picture for some encoding settings. The value of QP can take any integer value between 1 and 31 inclusive. The value is multiplied by a factor of 2 before being used in inverse quantization. The quantization factor can also be modified by a halfQP step but for the sake of simplicity this halfQP step quantization is not addressed in the following discussion. 

According to the uniform quantizer reconstruction rule the decoder or encoder reconstructs AC coefficients as follows 2 2 where C is the reconstructed inverse quantized AC coefficient and L is the quantized level for the coefficient. Reconstruction points appear as circles at the locations shown in . Notional quantization bin boundaries appear as dashed lines in but in practice the quantization bin boundaries used during quantization need not have been at the positions shown in and need not have been uniform at all.

According to the non uniform quantizer reconstruction rule the decoder or encoder reconstructs non zero AC coefficients as follows 2 1 3 . Zero value levels are reconstructed as zero value AC coefficients. The quantization bin that includes the zero value reconstruction point the DZ is wider than the others. Reconstruction points and notional quantization bin boundaries appear at the locations shown in . In practice the quantization bin boundaries used during quantization need not have been at the positions shown in .

Alternatively the decoder encoder uses more or fewer rules and or different rules during reconstruction. Moreover the parameterization and signaling used for quantization parameters can vary from implementation to implementation.

The quantization rules used to convert the AC coefficients to quantized levels L are not specified or implied by the reconstruction rules 2 and 3 . Rather quantization rules including placement of the quantization bin boundaries are defined by the encoder.

Suppose the distribution of AC coefficient values was uniform. For the uniform quantizer reconstruction rule the corresponding quantization rule that would produce minimum distortion would be sign abs 2 4 where sign C 1 for C 0. The operation indicates integer division with rounding towards zero and abs C indicates the absolute value of C. For this quantization rule the notional quantization bin boundaries shown in are the actual quantization bin boundaries for decisions during quantization.

For the non uniform quantizer reconstruction rule the corresponding quantization rule that would produce minimum distortion would be sign abs 2 5 . For this quantization rule the notional quantization bin boundaries shown in are the actual quantization bin boundaries for decisions during quantization.

For many typical encoding scenarios however the quantization rules shown in 4 and 5 do not provide optimal rate distortion performance. The distribution of values within quantization bins is typically not normal. Moreover the quantization rules do not account for differences in the perceptibility of distortion in different situations.

Quantization of AC coefficients introduces distortion which can be measured in objective terms as the difference between original sample values and reconstructed sample values. Such measures do not account for human perception however. One aspect of the human visual system is that the same amount of distortion may be perceived differently depending on factors such as visual texture. For example if distortion in a smooth region introduces relatively perceptible artifacts that same amount of may be is much less noticeable in a highly textured region. For this reason encoders may adaptively quantize a picture based on the local texture so that relatively fewer bits are expended and hence more distortion is introduced in high texture regions and relatively more bits are expended hence less distortion is introduced in low texture regions.

In some codec systems the encoder varies a quantization step size parameter such as QP depending on texture. This allows the encoder to increase QP when doing so will not dramatically increase perceptibility of the distortion and decrease QP in other situations. While this improves rate distortion performance in many circumstances finer grained control over quantization performance is desired.

In some embodiments an encoder uses texture adaptive adjustment of DZ size. The texture adaptive adjustment can be used with frequency adaptive adjustment of DZ size see section C or by itself.

With reference to the encoder gets a texture measurement. For example the encoder computes a texture measurement for a sub block block macroblock slice or other unit of sample or residual values. The texture measurement is a sum of differences between values of the unit and their average value. Alternatively the texture measurement uses another texture metric. The encoder can compute the texture measurement in line with the DZ size adaptation process or it can compute the texture measurement beforehand and get the measurement from storage or memory.

The encoder sets a DZ size adjustment factor depending on the texture and adjusts the DZ size using the texture dependent adjustment factor. For example the encoder uses a texture measurement to determine a DZ size offset using an approach explained in the next section then adds the offset to an initial DZ size. The initial DZ size can be a pre defined size proportion implemented as part of a given quantization rule. Alternatively the encoder sets the DZ size adjustment factor in some other way and or uses a DZ scale factor rather than an offset.

The encoder performs quantization using the quantizer with the adjusted DZ size and checks whether to continue with the next unit of content. If so the encoder continues by getting a texture measurement for the next unit to be quantized.

In some implementations an encoder performs texture adaptive adjustment of DZ size as follows. The encoder computes a DZ size offset d for a block that depends on a texture measurement for the block. The encoder then adjusts DZ size and performs quantization of the AC coefficients for the block. The exact quantization rules depend on the type of content intra or inter as well as the quantizer reconstruction rule that the decoder will use uniform or non uniform .

For an inter coded block e.g. for a prediction residual and uniform quantizer reconstruction rule the encoder applies the following quantization rule sign abs 2 4 6 .

For an inter coded block and non uniform quantizer reconstruction rule the encoder applies the following quantization rule sign abs 2 4 7 .

The initial or default DZ size is built into the quantization rules 6 and 7 . For example for rule 6 the QP 4 QP term reflects the initial DZ size. For rule 7 the QP 4 QP term reflects the initial DZ size.

In general increasing DZ size makes more input values get quantized to the zero level. Another effect is that more input values are quantized towards a lower reconstruction point as opposed to being quantized towards the closest reconstruction point . While distortion increases as these effects increase the distortion is expected to be masked in the increased texture detail.

So for an inter coded block d is zero until t exceeds 1024. At that point d increases approaching 2QP as t increases. charts d as a function of t according to equation 8 for some values of t. In this implementation t is a texture measure computed as the sum of absolute differences between values in an 8 8 block and the average of values in the 8 8 block see equation 13 below .

For an intra coded block and uniform quantizer reconstruction rule the encoder applies the following quantization rule and function mapping t to d sign abs 2 9 where 

For an intra coded block and non uniform quantizer reconstruction rule the encoder applies the following quantization rule and function mapping t to d sign abs 2 11 where 

The quantization rules for intra coded content provide less aggressive expansion of DZ size compared to the rules for inter coded content. In many encoding scenarios allocating relatively more bits to intra coded pictures can also improve the quality of inter coded content that uses motion compensated prediction from the intra coded pictures. Another reason to more aggressively quantize inter coded content is that distortion introduced in inter coded content is less apt to be perpetuated to other content.

Alternatively an encoder uses other and or additional quantization rules. For example the encoder uses a quantization rule that more aggressively increases DZ size as texture increases. Or the encoder uses a quantization rule that less aggressively increases DZ size as texture increases. Moreover although the encoder can use different rules for inter coded content and intra coded content alternatively the encoder uses the same rule s for inter coded content and intra coded content.

The preceding functions mapping t to d are configured for an 8 8 block. For a different size block the thresholds between different formulas for determining d vary accordingly. Alternatively an encoder uses different functions or an entirely different texture metric.

The texture of a block or other unit of image or video information generally corresponds to amount of detail in the block unit. It can also relate to the amount of energy in different frequency coefficients for the block unit. A relatively smooth block has little or no texture and most of the energy for the block is in the lower frequency coefficients. A block with complex intricate detail has high texture and the higher frequency AC coefficients may represent much of the energy for the block.

For texture adaptive adjustment of DZ size an encoder measures texture for a block or other unit of image or video information according to a perceptual model. The encoder can compute the measure by processing each of the values for the block or other unit or the encoder can sub sample the available values to compute the measure or the encoder can estimate the texture measure even more heuristically. The encoder can generate a texture map for a current picture indicating the texture levels of the different parts of the picture. For example the texture map can be used to store texture measurements or to otherwise identify smooth regions and textured regions in the picture. Alternatively an encoder uses texture information without first creating a texture map.

In some implementations the texture measure for an N M block of samples or residual values is computed as follows 

In other implementations texture is measured using an intensity variance metric. For example the encoder computes intensity variance within a block of samples as the sum of differences between a sample and its adjacent samples e.g. above left right below or diagonal for each of some or all of the samples in the block. The intensity value of a given sample in the block is compared to the samples for four locations near it and the encoder computes an average sum of the difference between the given sample and the samples for its surrounding locations. As an indicator of intensity variance these intensity difference measures can be used directly as a texture metric in DZ resizing or the encoder can compute the average intensity difference for use as a texture metric in DZ resizing. Alternatively the encoder evaluates a histogram of the intensity difference measures and identifies the prevalent texture for the block or computes the mean intensity difference or median intensity difference as indicative of the texture level for the block.

The texture measurement t for a block can be computed using all of the sample values in the block or a sub sampling of the values in the block. In other implementations texture is measured using other texture metrics and or for different units of information. In general the texture metric addresses texture a within a unit such as a block b in other areas of a picture or part of a picture to exploit spatial masking effects and or c from picture to picture to exploit temporal masking effects.

Instead of using the same DZ size for all AC coefficients of a block or other unit of content an encoder can change DZ size depending on frequency. For example the encoder uses a wider DZ for higher frequency coefficients since those higher frequency coefficients usually represent activity in the sample domain in which encoding artifacts are less noticeable. This observation is especially valid for intra coded content.

Therefore in some embodiments an encoder uses frequency adaptive adjustment of DZ size. The frequency adaptive adjustment can be used with texture adaptive adjustment of DZ size see section B or by itself.

With reference to the encoder sets a DZ size adjustment factor depending on frequency and adjusts DZ size using the frequency dependent adjustment factor. For example the encoder determines a scaling factor or weight associated with the frequency of a particular coefficient being quantized then applies it to adjust an initial DZ size. show example weights for different sizes of transform blocks in some implementations. The initial DZ size can be built into a quantization rule as a pre defined proportion. Alternatively the encoder uses another approach to parameterize the frequency dependent adjustment factor and adjust the DZ size.

The encoder performs quantization for one or more coefficients using the quantizer with the adjusted DZ size and checks whether to continue with the next coefficient s having a different frequency dependent adjustment factor. If so the encoder continues by setting the frequency dependent adjustment factor for the next coefficient s .

In some implementations an encoder performs frequency adaptive adjustment of DZ size as follows. The encoder looks up a frequency dependent weight for a coefficient in an array of weights Asuch as shown in . The encoder scales a DZ size offset factor by the frequency dependent weight and adjusts an initial DZ size which may be implemented as part of a quantization rule. The encoder then quantizes one or more AC coefficients using the adjusted quantization rule. The exact quantization rules depend on the type of content intra or inter as well as the quantizer reconstruction rule that the decoder will use uniform or non uniform .

For example the encoder adjusts DZ size for the coefficient at position m n as follows 15 where DZindicates the default DZ size and DZ indicates a delta DZ size offset. If the frequency dependent adaptation of DZ size is used together with texture dependent adaptation of DZ size DZ reflects a texture dependent offset. In practice the DZ size adjustment can be implemented as part of the quantization rule itself as in the previous section. Alternatively the encoder implements frequency adaptive adjustment of DZ size using a different rule for computing the adjustment and or performing quantization.

The numbers sizes and weights of scaling matrices depend on implementation. shows an example array Afor an 8 8 transform block. The weight for coefficient depends on the horizontal frequency n and vertical frequency m of the coefficient in question. show arrays for different sizes of transform blocks 4 4 4 8 and 8 4 respectively.

Different scaling matrices can also be used to apply different strengths of frequency dependent DZ resizing. shows a second array for an 8 8 transform block. Compared to the array of the array of scales DZ size in a less aggressive manner leading to smaller DZs for high frequency coefficients. The encoder can switch between scaling matrices of an appropriate size depending on texture bit rate and or other criteria.

Having described and illustrated the principles of our invention with reference to various embodiments it will be recognized that the various embodiments can be modified in arrangement and detail without departing from such principles. It should be understood that the programs processes or methods described herein are not related or limited to any particular type of computing environment unless indicated otherwise. Various types of general purpose or specialized computing environments may be used with or perform operations in accordance with the teachings described herein. Elements of embodiments shown in software may be implemented in hardware and vice versa.

In view of the many possible embodiments to which the principles of our invention may be applied we claim as our invention all such embodiments as may come within the scope and spirit of the following claims and equivalents thereto.

