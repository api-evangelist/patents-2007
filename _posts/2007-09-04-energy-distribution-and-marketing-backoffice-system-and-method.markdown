---

title: Energy distribution and marketing backoffice system and method
abstract: A retail energy provider system comprising a market transaction manager, business rules and requirements processor, usage rater, customer analysis and quality control auditor, customer billing processor and collection manager, customer payment processor, third party sales and marketing application programming interface, customer acquisition and residual income interface, having a wholesale forecaster, interactive voice response system, intranet web services, internet web services and network based external customer service and executive management systems and financial services functions, all said functions and systems interacting with a robust SQL database engine for which the novel database schema is taught herein.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08442917&OS=08442917&RS=08442917
owner: Ambit Holdings, L.L.C.
number: 08442917
owner_city: Dallas
owner_country: US
publication_date: 20070904
---
The present invention relates to the field of back office information technology systems for a retail electricity provider and is a computer system for automatically performing market transactions customer billing and customer service functions.

In the 1990s groups of utilities along with their federal and state regulators began forming independent system operators ISOs or regional transmission organizations RTOs as states and regions in the United States established wholesale competition for electricity. ISOs and RTOs hereafter ISOs coordinate generation and transmission of electric power across wide geographic regions matching generation to load instantaneously to keep supply and demand for electricity in balance. These organizations forecast load and schedule generation to assure sufficient capacity and back up power in case demand rises a power plant goes offline or a power line is lost. The primary role of the ISO is to ensure equal access to the power grid for non utility firms enhance the reliability of the transmission system and operate wholesale electricity markets which includes the flow of money between wholesale producers marketers transmission and distribution service providers TDSP owners buyers including other ISOs.

TDSP entities are responsible for the transmission and distribution of energy through power lines that they are responsible to maintain and typically own. As service providers they typically own the metering devices attached to residential and commercial customers servicing the meters and reading them periodically.

A Public Utilities Commission PUC regulates the delivery of electricity including reliability and safety rates and terms setting the operating standards for the TDSPs. The PUC typically oversees the regional ISO market for example by reviewing proposals for new transmission facilities or generators. The PUC enforces rules and regulations for retail competition including customer protections price to beat rules and the implementation of renewable energy goals. The PUC also handles the licensing and rules enforcement to REPs.

An example of an ISO is the Energy Reliability Council of Texas ERCOT which manages the Texas power grid an example of a TDSP is TXU Energy Delivery an example of a PUC is the Texas Public Utilities Commission.

The operation of a wholesale electricity market by the ISO enables local retail electricity providers REPs to buy and sell electricity on a real time spot market basis supplying REPs with a means for meeting consumer needs for power at the lowest possible costs. An example of a REP is Ambit Energy Inc. of Dallas Tex. REPs have need for an accurate and continuous information exchange with ISOs including data such as market transactions and information related thereto historical or current load information and customer specific transactions e.g. connect or disconnect meter readings etc. . The state of the art in the energy industry to exchange information with ISOs is to utilize the electronic data interchange EDI standard.

REPs have certain requirements typically set by the relevant state public utilities commission to have adequate technical resources to provide continuous and reliable electric service to customers in its service area and for the technical and managerial ability to supply electric services at retail in accordance with its customer contracts. Such resources include a fundamental capability to comply with all scheduling operating planning reliability customer registration policies settlement policies and other rules and procedures as established by the ISO. The REP must have the ability to meet ISO requirements for 24 hour coordination with control centers for scheduling changes reserve implementation curtailment orders interruption plan implementation and escalation procedures. The REP must meet certain financial standards relating to the protection of its customers and sufficient for accurate billing and collection from its customers.

An example of a set of requirements for REPs is the Texas state PUC document P.U.C. SUBST. R.25 Substantive Rules Applicable to Electric Service Providers Chapter 25.

In general there is a significant amount of information that must be managed and serviced on a real time basis often minute to minute by a REP to meet the requirements and to operate its systems effectively. For example the costs of energy are generally fluctuating according to market prices and thereby rated in time intervals of 15 minutes and sold in blocks of time. The REP continuously purchases blocks of energy on the market to meet its demands sometimes only 15 minutes in advance but normally several days in advance or according to a forecasted buy order. To determine the costs of energy usage for its customer base a REP must be able to accurately correlate customer usage information with the rated cost of the energy as it was purchased in a given block for a given geographical area.

A need exists in the retail electric provider business community for a comprehensive automated system to manage market transactions with the ISO apply business rules and requirements apply ratings to usage perform customer analysis and quality control audits perform customer billing including customer protective measures in collection process customer payments manage 3party sales and marketing subsystems manage customer acquisition and residual income systems and manage customer service systems including call centers and back office support for financial and corporate executives.

The system of the present invention was designed to address the following issues competitive REPs face and others 

The primary issue that residential energy utilities face with their back office systems is the large amount of market data exceptions that typically occur between the REP and the TDSP. Market exceptions include data integrity issues to operating issues that result in complex customer situations such as errors in meter reads and service change requests. Together with a large customer base these exceptions create a ripple effect across the back office that typically results in errors with 

The present invention addresses the pervasive problems created by market exceptions though a novel system design that segments system responsibility promotes system learning without introducing complexity and supports large customer data sets. For example system exceptions are categorized and managed through an exception flow. End users use interface heuristics to further define and resolve all exceptions including through the addition of new system rules.

A further novel aspect of the present invention addresses the overall cost of doing business of a REP. The energy industry is a commodity driven market. Competitive advantages rely on service quality and accuracy in billing. The present invention creates a competitive position for the reseller by fundamentally reducing the cost to operate. This is achieved by 

A further novel aspect of the present invention addresses a common issue faced by a REP namely cash capital requirements to support billing in arrears. Meter reads are performed by the TDSP and the read sent to the REP to bill in arrears. This results in the reseller having to front its customer s energy base as it attempts to collect from customers after purchasing the energy. The present invention addresses this though automated real time flow through of meter read transactions that result in near same day billing. This optimizes the cash collection process in order to reduce cash exposure.

A further novel aspect of the present invention addresses resistance in back office IT systems of the REP that prevent companies from implementing changes and improvements in system functions to meet customer market demands. The modular design and solid relational data architecture prescribed in the preferred embodiment of the present invention coupled with defined development standards provide the REP with the ability to quickly and cost effectively introduce system changes.

Yet another novel aspect of the present invention is the combination of features meant to automatically ensure the integrity of energy business data to meet PUC requirements said combination comprising a market transaction manager business rules and requirements processor usage rater customer analysis and quality control auditor customer billing processor and collection manager customer payment processor third party sales and marketing subsystems API customer acquisition and residual income web interface and customer service and executive backoffice systems all said subsystems interacting with an intelligent SQL database subsystem. In a preferred embodiment of the present invention said features are implemented as a coordinated set of software programs running under the framework of a Microsoft Windows Services platform utilizing Microsoft C .net as the programming environment.

The present invention teaches an apparatus and method for a retail energy provider REP system that functions to automatically service market transactions and to control internal processes such as usage rating and account aging in such a way as to reduce human workload requirements over requirements typically found in the prior art. A novel set of transaction rules usage rating rules and pre bill quality control rules operate on market transactions to detect system exceptions by automatically performing quality control processes on internal and external data flow within and external to the REP system.

REP system comprises a set of internal entities which service a set of external entities in a real time event driven process. REP System interacts with external energy ISO partners to perform inbound and outbound energy market transactions. REP system interacts with external sales organizations via an application programming interface to perform sales functions such as order placement and residual income calculations.

REP System comprises a set of automated processes the set of automated processes interacting with and exchanging data with a core SQL database engine which is a container for holding and organizing a set of customer data records and a set of persistent transaction records. The set of automated processes defined herein including a sales application programming interface connecting to an Internet web service an interactive voice and response system an intranet web service a payment processor a business process function and a wholesale forecaster with a corresponding data warehouse. In the preferred embodiment of the present invention the connections between the set of automated processes and the SQL database engine are made by a corporate intranet consisting of internet protocol IP services over an Ethernet physical infrastructure which may include local area networks LANs and wide area networks WANs of suitable computers.

To service external entities the present invention includes an internet web service which accepts customer input such as residential data or requests for information and sends it to an application programming interface API for processing the API being defined in an API specification to allow a variety of external entities to simultaneously connect to and utilize REP system in a standardized way.

The business process function is a set of inter related processes that perform continuous and real time operations on the database and is comprised of a market transaction importer for automatically accepting market transactions in the form of EDI transactions and grouping them according to function an inbound transaction processor ITP for applying a set of transaction business rules to the EDI transactions obtained by the market transaction importer a usage rating processor for applying a set of rates to a set of usages and for completing a scaling process useful for wholesale forecasting a pre bill quality control QC processor for checking all billable usages for exceptions a billing processor for computing creating and automatically sending bills an account aging processor for applying a set of aging rules to bin unpaid bills into past due time frames a bill treatment processor for automatically controlling a treatment process incorporating PUC requirements and a novel customer residual income processor for computing and controlling a sales agent residual income system.

In the preferred embodiment of the present invention the REP system is implemented on a network of servers operating a Microsoft .NET services network by Microsoft Corporation. The business process functions are run continuously as event driven processes which are controlled and generated by a Microsoft .NET services application server.

The present invention requires a robust and novel relational database infrastructure to operate efficiently and with a high degree of data integrity which allows for rapid and large overall system scaling with numbers of customers. The preferred embodiment of the present invention herein teaches a novel relational database schema for a highly normalized relational database structure to support the REP system functions.

In particular the database schema includes a set of entities wherein the entities are comprised of sets of data tables. The entities have relationships between them as shown the relationships allowing for relational sharing of data between tables within one entity and the tables within another entity. The entities in REP database schema are ESI ID warehouse entity for holding data relating to specific ESI IDs Wholesale entity for compiling data relating to forecast models and ESI ID usage profiles Market Transactions entity for storing transactions sent received to from the ISO or TDSP Orders entity for containing sales order information Sales Consultants entity for containing records relating to the sales process Customer entity for accumulating detailed customer information Rating entity for compiling usage rating data Products and Rates entity for holding the various products and rates for the ESI IDs Discounts entity for describing customer discounts Payments entity for keeping records related to customer payments Bills entity for accumulating billing information for customers and commissions entity for containing sales commission information relating to customer residual income.

Data table relationships are defined within the REP database schema Customer entity shares relational data with Rating entity Wholesale entity Orders entity Sales consultants entity and Bills entity. Market transactions entity shares relational data with Orders entity ESI ID Warehouse Wholesale entity and Rating entity. Orders entity shares relational data with Sales consultants in addition to those relationships already described. Bills entity shares relational data with Rating entity Payments entity Commissions entity and Customer entity. Rating entity shares relational data with Products and Rates entity Discounts entity and Bills entity.

REP Database schema includes queuing and logging entities for managing the operational aspects of the REP system the queuing entities typically being accessed by the company operations staff customer service staff or IT operations staff within the REP. The queuing entities within data model being Exceptions entity for logging transaction exceptions and other system exceptions System Queues entity comprised of queuing tables relating to worklists and business operational functions such as a queue for printing bills Security entity for holding system user data such as authorization data System logs entity for containing tables of various system software logs and Alerts entity for logging data records relating to critical system alerts.

Detailed discussions and instruction of the REP system function and the REP system database schema are explained according to the preferred embodiments described herein.

The numerous innovative teachings of the present application will be described with particular reference to the presently preferred embodiments by way of example and not of limitation .

The present invention teaches the construction and method of operation of an efficiently tuned back office system for a retail energy provider REP the primary objective of said system being the automatic execution of business rules and market transaction rules to enable energy services to retail customers and to coordinate critical activity between the REP and one or more regional ISOs responsible for energy production and delivery examples of said activity being the purchase of energy from the ISO and the acceptance of and action upon customer connects or disconnects from the REP.

A functional diagram of the system is shown in . System comprises a series of modules and system components that are designed to handle unique processing tasks. Each task is object oriented in that the task is self contained and not dependent on other tasks. This gives the system modularity which reduces overall system complexity and allows for rapid deployment and updates to system components without increasing the risk of system errors. Although system modules are independent within the system framework they are interdependent in the system flow. The primary flow of system is indicated in beginning with receipt of market transactions in market importer and ending with customer residual income processor CRI .

The system comprises a number of internal entities and a number of external entities both of which are serviced by the system in a real time event driven process. System interacts with external energy ISO partners to perform inbound and outbound energy market transactions. System interacts with external customers who are connected to system via the internet. System also interacts with an external internet based sales management system the sales management system in turn connected over the internet to sales agents in an external sales and marketing organization. Sales agents are typically customers of energy services from REP who obtain residual income from REP for their sales efforts however the preferred embodiment of the present invention can support other types of sales organizations. System also interacts with external financial services to aid in the collection of payment for services.

REP must interact with system to perform customer service operations by its customer service call center to allow for interaction with back office transaction management personnel within REP so that transaction exceptions may be serviced according to the performance required by REP and its ISO partners to create executive reports to perform wholesale forecasting for purchase decisions and to generally support the performance of corporate accounting and financial functions of REP .

System comprises a set of automated processes to service stimuli that are generated to and from REP sales management system financial services and ISO partners . The set of automated processes which are shown as blocks inside system in interact with a core SQL database engine which is a container for holding and organizing a set of customer data records CDR and a set of persistent transaction records in transaction table . The set of automated processes are shown in connected by solid lines to SQL database engine a given solid line indicating that the associated process to which it is connected exchanges data with the SQL database engine the associated process generally operating upon said data and selectively reading and writing new data to the SQL database engine . The set of automated processes connected to the SQL database engine are sales application programming interface API which integrally connects internet web service interactive voice and response system IVR to the SQL database engine intranet web service payment processor business process function and wholesale forecaster which utilizes a data warehouse . REP and data warehouse are connected to SQL database engine via the intranet web service . In the preferred embodiment of the present invention the connections between the set of automated processes and the SQL database engine are made by a corporate intranet not shown consisting of at least internet protocol IP services over an Ethernet physical infrastructure which may include local area networks LANs and wide area networks WANs of suitable computers. Such networks are known in the art and will not be further described.

To service external customers internet web service accepts customer input such as residential data or requests for information e.g. monthly electricity usage chart and sends it to API for processing.

API interfaces to internet web service IVR and sales management system . API operates as a communications interface between third party software systems of the sales management system and SQL database engine to implement CDR . For example API accepts requests from sales management system and converts them into queries appropriate for the SQL database engine and then returns information in the form requested. In the preferred embodiment of the present invention SOAP protocol over XML is utilized between API and sales management system and IVR .

Interactive voice response system IVR is a system for receiving and servicing telephone calls from external customers and sales agents . IVR allows customers to access information in customer data records CDR via API by telephonic means.

Payment processor provides an interface for system to financial services necessary to accept cash payment for services rendered to the customer. For example payment processor upon valid notice of payment from financial services updates customer data records CDR in the SQL database engine . In the preferred embodiment of the present invention financial services includes the automated clearing house ACH network at least one U.S. Bank for personal check clearing and automated bill payment the VISA and MasterCard authorization network at least one major U.S. check cashing firm and at least one electronic web based cash transfer firm. Payment processor is connected to API to service payments over the internet from external customers via IVR or internet web service . The description of the preferred embodiment of the present invention is not intended to limit the invention to the financial system interfaces so described. Other financial service interfaces in payment processor may be extended for automatic payment processing. Examples of financial services firms are Ace Cash Express Chase Bank lockbox Authorize.Net PaymentTech and Moneygram.

System operates an intranet web service over REP corporate intranet. Intranet web service services requests for information to and from SQL database engine including executive reports requests for wholesale forecaster and access to data warehouse data exchange with back office transaction management and queries from customer service call center . In another embodiment of the present invention customer service call center also utilizes intranet web service for voice communications using voice over IP.

The business process function is a set of processes that perform continuous and real time operations on the data contained in SQL database engine and is comprised of market importer inbound transaction processor ITP usage rating process pre bill quality control QC process billing process account aging process bill treatment and collections process and CRI .

In the preferred embodiment of the present invention the system is implemented on a network of servers operating a Microsoft .NET services network by Microsoft Corporation. The automated processes of business process function are run continuously as event driven processes which are controlled and generated by a Microsoft .NET services application server.

Market importer continuously monitors the ISO for available transaction data via electronic data interchange EDI with ISO partner and if an EDI transaction exists downloads it into the SQL database for further processing. More specifically a transaction event handler not shown flags the system that a transaction has arrived and creates a record of the arrived transaction in transaction table . A transaction in the context of the present invention is a customer related event such as a meter reading connect declaration or disconnect declaration. In the preferred embodiment of the present invention described herein system is described in terms of specific interaction with ERCOT the Electric Reliability Council of Texas via electronic data interchange EDI transactions according to the ANSI ASC X12 Ver Rel 004010 Transaction Set and the ERCOT transaction set known as the Texas Standard Electronic Transmission or Texas SET . Table 2 shows a list of transaction types and names in the Texas SET which pertain to the present invention. Alternate embodiments are conceived and implemented in the more general case of EDI transaction not confined to the Texas SET definitions the discussion of the preferred embodiment not intended to limit the processing functions and data structures described herein. For example the system has also been applied to actively interoperate with a New York ISO and to natural gas services.

Once a transaction arrival is flagged ITP is started and operates on the data associated with the set of arrived transaction records in transaction table by applying a given set of business rules to the transaction record to determine further steps to be taken. The details of the given set of business rules and the operation of ITP will be discussed further in relation to . Application of business rules to a set of transaction records normally results in updating a set of customer data records in CDR associated to the transaction records. Other processes in business process function are activated according to the schedule and execute further billing oriented processes to operate on the set of associated customer records in CDR . The most common transaction for REP is a meter reading which will indicate the read date and the usage.

Usage rating process is activated according to the schedule in Table 1 and operates on the set of customer records functioning to assign the correct usage billing rate to the current usage for each customer record.

Pre bill QC process is activated according to the schedule in Table 1 and operates on the set of customer records. Pre bill QC process functions to automatically identify and repair potential errors in customer bills that are about to be generated. For example a customer may be inappropriately billed because of a change in product code. Pre bill QC process cross checks valid product codes with product codes that appear in the transaction record. As another example a billing error in an amount that is more than five standard deviations above the historical average usage for that customer is flagged as an exception to prevent billing of excessive amounts or to confirm correctness. Once pre bill QC process is completed it marks the customer records in the set of customer records as qualified customer records.

Billing process is activated according to the schedule in Table 1 and generates customer bills applying taxes and fixed charges as required by REP . Furthermore customer data records in CDR for which bills are generated are marked as billed and placed in accounts receivable status.

Account aging process is activated according to the schedule in Table 1 and retrieves the customers past due balance based on the payment history contained in CDR for that customer. Adjustments and payments are recorded according to the age of the invoice. A queue is established and populated to manage the past due invoices. If a customer account has reached a past due status requiring further treatment then the qualified customer data record is further processed in bill treatment and collections process .

Bill treatment and collections process then is activated according to the schedule in Table 1 and operates on qualified customer data records requiring treatment applying a set of treatment rules. Treatment rules may be governed by the regional PUC wherein certain customers accounts may be protected. The customer s Dunning score is calculated and used to assign a grace period for bill payment and a minimum payment amount or payment they hold . A set of automated actions are taken by bill treatment and collections process such as past due letter generation the accrual of charges or fees sending of a disconnect notice sending of a disconnect order sending of a move out order and sending of an accrued bill to outside collection agency. The bill treatment and collections processor automatically checks customer data records in CDR for payments received or for account protection.

Write off process is executed by system when a customer data record indicates that that a customer is in collection. If outside collections have failed after a predetermined time period the account is automatically closed and the accumulated customer bill is flagged as uncollectible. The system automatically determines that an account is Written Off 10 days after a market move out order is sent and accepted by the market. A move out order formally releases an REP as the representative of a customer for the given retail energy segment.

Updated customer data records in CDR for which bills have been paid are associated with sales agents and further processed by CRI . In the preferred embodiment of the present invention customer data records in CDR have a sales agent field which is checked by CRI . CRI checks the customer data records in CDR bills paid and then provides an accounting to the associated sales agents . Each customer bill is analyzed against payments received and bills are determined to be paid in full or still under collection . If a bill is paid in full and a valid sales agent exists for the customer CRI schedules automatic payment of referral and or residual fees due to the proper sales agent.

The ESI ID is an electric service identifier assigned to each meter in the ISO region. The ISO typically compiles usage profiles of smaller areas within the region such as zip code areas. REP may look up a usage profile for an area based on the ESI ID.

Data warehouse is a repository of data related to the wholesale energy market barriers for decision including a repository of ESI ID information ESI ID usage profiles a repository for weather data a repository for backcast profile load data from ISO partners a repository for forecast profile load data and a repository for purchasing strategies and information related thereto.

System is implemented on networked computer servers as a set of software programs executing on the networked servers. As shown in the hardware model in the preferred embodiment comprises internet web server intranet web server redundant database servers DB server and DB server and redundant application servers APP server and APP server . All of said servers are connected together by a corporate intranet REP intranet which forms the basis for network communications. In the preferred embodiment of the present invention the web servers are connected to the public internet via Ethernet and an appropriate internet services provider and the servers are Application Servers Dell PowerEdge Servers 2 GHZ Dual Core Processors 4 GB RAM web servers and Dell PowerEdge 2950 Servers 2 GHZ Dual Core Processors 8 GB RAM SQL Database Servers DB Server and DB Server Dell PowerEdge 6950 Servers 4 2 GHZ Dual Core Processors 32 GB RAM. Servers in the context of the present invention may imply a cluster of servers for example a cluster of three internet web servers. The current hardware implementation is limited only by cost and availability. Other embodiments may utilize other server and network models.

Referring to the system is implemented across the network of servers as a systems application. The software code for business process function payment processor and API as well as Microsoft services scheduler programs are operated on the application servers APP server and APP server which continuously and redundantly accept market transactions and organize batch loads of processing events through business process function . The software code for end user internet web service and API are operated on internet web server while the software code for internal intranet web service are operated on intranet web server . The SQL database engine is implemented redundantly on database servers DB server and DB server . The construction of the physical network is done in a standard consistent with the current art of computer networking so that the servicing of the system programs can be done easily and at reasonable cost by those who are skilled in the art of modern information technology.

Beginning with and in reference to a business rule process for an inbound Enrollment Rejection 81402 transaction is shown. The enrollment step is executed by REP wherein an 81401 transaction is sent to ERCOT the 81401 transaction being sent to begin the customer enrollment process for a customer in CDR with a customer record corresponding to the ESI ID contained in the 81402 transaction record. In receive step an 81402 transaction appears as a transaction record in transaction table having been received by market importer . ITP then marks the ESI ID status in customer record in the 81402 transaction record as R for reject in marking step and in step adds a copy of the marked 81402 transaction record to the Rejected worklist . At a later time the Rejected worklist is opened for viewing and the reason code and reasons description contained in the 81402 transaction record is displayed in step . The enrollment rejection process ends in step .

The ESI ID in 81405 transaction record is checked to match existing REP customer ESI IDs in CDR in step . If there is no match to any customer ESI ID the associated 81405 transaction record is marked in mark step with R for rejection and the marked transaction is added in step to a Fast track issue resolution worklist . In step the business rule process ends.

In step if a customer record is matched to the ESI ID then a response qualifier in the 81405 transaction record is checked in RQ step for an accept response or a reject response. In the case of a reject response the ESI ID status in customer record is marked in step with R. and then in step the matched 81405 transaction record is placed in Rejected worklist .

In the case of an accept response in RQ step the ESI ID status in customer record is marked in step with PE for pending and relevant premise data meter data and service start date from the matched 81405 transaction record is stored in step in the matching customer record in CDR . The system is then flagged for a pending meter read in flag step . Both the accept and reject processes as well as the business rule process end in end step . At a later time the Rejected worklist or the Fast track issue resolution worklist is opened for viewing and the reason code and reasons description contained in the 81405 transaction record is displayed in step or step respectively.

ITP business rules include process for the reception of a Drop due to switch 81406 transaction shown in . In receive step a 81406 Drop due to switch transaction appears as a transaction record in transaction table having been received by market importer . The ESI ID in the 81406 transaction record is checked for a match to REP customer ESI IDs in CDR in step . If there is no match with any customer ESI ID an 81407 Drop due to switch response transaction is sent including a reject code from the REP to the ISO partners . In step if a customer record matches the ESI ID then the ESI ID in customer record status is marked in step with PM pending move out or drop and then in step the associated transaction record is placed in Dropped worklist . Service end date from the associated 81406 transaction record is stored in step in customer record . Following step an 81407 Drop due to switch response transaction is sent including an accept code from the REP to the ISO partners . After either the accept or reject responses are sent to ISO partners steps or respectively the business rule process ends in end step . At a later time the Dropped worklist is opened for viewing and the reason code and reasons description contained in the 81406 transaction record is displayed in step .

ITP business rules include process for the reception of a Cancel switch or move in request type 81408 transaction shown in . In receive step an 81408 Cancel switch or move in request transaction appears as a transaction record in transaction table having been received by market importer . The ESI ID in the 81408 transaction record is checked for a match to REP customer ESI IDs in CDR in step . If there is no match with a customer ESI ID an 81409 Cancel switch response transaction is sent from the REP to the ISO partners including a reject code in step . In step if a customer record is matched to the ESI ID then the associated ESI ID status in customer record is marked in step with C canceled and then in step the associated 81408 transaction record is placed in Cancel Request worklist . Following step an 81409 Cancel switch response transaction is sent from REP to ISO partners including an accept code in step . After either the accept or reject responses are sent to ISO partners steps or respectively the business rule process ends in end step . At a later time Cancel Request worklist is opened for viewing and the reason code and reasons description contained in the 81408 transaction record displayed in step .

ITP business rules include process for the reception of a Cancel switch response type 81409 transaction shown in . In receive step an 81409 Cancel switch response transaction appears as a transaction record in transaction table having been received by market importer . The ESI ID in the 81409 transaction record is checked for a match to REP customer ESI IDs in CDR in step . In step if any customer record is matched to the ESI ID then a response qualifier in the 81409 transaction record is checked in RQ step for either an accept response or a reject response. If a reject response in RQ step then the associated ESI ID status in customer record is marked in step with C canceled and then in step the associated 81409 transaction record is placed in Rejected worklist . If the ESI ID does not match a customer ESI ID in step then the business rule process ends. Also if the response qualifier is an accept in RQ step then the business rule process ends at end step . At a later time the rejected worklist is opened for viewing and the reason code and reason description contained in the 81409 transaction record is displayed in step .

In step if customer record in CDR matches the ESI ID then a response qualifier in the 81411 transaction record is checked in RQ step for an accept response or a reject response. In the case of a reject response the associated 81411 transaction record is placed in Rejected worklist in step . In the case of an accept response the ESI ID status in customer record is marked in step with PM for pending and the associated 81411 transaction record is placed in Rejected worklist in step . Both the accept and reject processes as well as the business rule process end in end step . At a later time the Rejected worklist is opened for viewing and the reason code and reasons description contained in the 81411 transaction record is displayed in step .

ITP business rules include process for the reception of a Date change request type 81412 transaction shown in . In receive step an 81412 Date change request transaction appears as a transaction record in transaction table having been received by market importer . The ESI ID in the 81412 transaction record is checked for a match to REP customer ESI IDs in step . If there is no match with any customer ESI ID an 81413 Date change response transaction is sent from the REP to the ISO partners including a reject code in step . In step if customer record in CDR matches the ESI ID then the ESI ID status in customer record is marked in step with PE pending and then in step the customer record is updated to reflect the valid move in date and move out date. Following step an 81413 Date change response transaction is sent from REP to ISO partners including an accept code in step . After either the accept or reject responses are sent to ISO partners steps or respectively the business rule process ends in end step .

ITP business rules include process for the reception of a Move in reject response type 81417 transaction shown in . Move In request step is executed by REP wherein a 81416 transaction is sent to ISO partners the 81416 transaction being used to establish a move in date for a customer. In receive step an 81417 Move in response transaction appears as a transaction record in transaction table having been received by market importer . The ESI ID in the 81417 transaction record is checked for a match to REP customers ESI IDs in CDR in step . If there is no match with a customer ESI ID the business rule process is ended in end step .

In step if a customer record matches the ESI ID then the ESI ID status in customer record is marked in step with R rejected and the associated 81417 transaction record is placed in Rejected worklist in step in which the reason code and reason description is displayed in step at a later time after opening and reviewing the Rejected worklist . The business rule process ends with end step .

ITP business rules include process for the reception of a Completed unexecutable permit required 81428 transaction shown in . In receive step a 81428 Completed unexecutable permit required transaction appears as a transaction record in transaction table having been received by market importer . The ESI ID in the 81428 transaction record is checked for a match to REP customer ESI IDs in CDR in step . If there is no match with a customer ESI ID an 81429 Response to completed unexecutable permit required transaction is sent in step including a reject code from the REP to the ISO partners .

In step if customer record in CDR matches the ESI ID then in step the associated transaction record is placed in displayed worklist . Following step an 81429 Response to completed unexecutable permit required transaction is sent in step including an accept code from the REP to the ISO partners . After either the accept or reject responses are sent to ISO partners steps or respectively the business rule process ends in end step . At a later time the Displayed worklist is opened for viewing and the reason code and reasons description contained in the 81428 transaction record is displayed in step .

If the 65002 purpose code is reject or unexecutable then the ESI ID status in the customer record corresponding to ESI ID is marked in step with R rejected and in step the 65002 transaction record is placed in DNP RNP transaction rejected worklist . The reason code and reason description is displayed in step at a later time after opening and reviewing the DNP RNP transaction rejected worklist . The business rule process then ends with end step .

If the 65002 purpose code is accept or complete in step and reference ID is found to match originating ID in customer record in step and ESI ID matches the ESI ID in customer record then the transaction type is checked in step for DNP disconnect for non pay or RNP reconnect for non pay . If the transaction type is DNP disconnect for non pay then the ESI ID status in customer record is marked in step as D DNP . If the transaction type is RNP reconnect for non pay then the ESI ID status in customer record is marked in step as E RNP .

If the 65002 purpose code is accept or complete in step and reference ID does not match any originating ID in customer records of CDR in step then the transaction type is checked in step for DNP disconnect for non pay or RNP reconnect for non pay . If the transaction type is DNP disconnect for non pay then the ESI ID status in the customer record having ESI ID is marked in step as PD pending DNP . If the transaction type is RNP pending RNP then the ESI ID status in the customer record having ESI ID is marked in step as E RNP . After either step or step the transaction record is added in step to the invalid original transaction number worklist . The business rules process ends in any of the above cases after step step step or step with end step . At a later time the invalid original transaction number worklist is opened for viewing and the reason code and reason description is displayed in step .

ITP business rules include process for the reception of a Suspension of delivery notification or cancellation type 65004 transaction shown in . In receive step a 65004 Suspension of delivery notification or cancellation transaction appears as a transaction record in transaction table having been received by market importer . The ESI ID in the 65004 transaction record is checked for a match to REP customer ESI IDs in CDR in step . If there is no match with any customer ESI ID the business rule process is ended in end step . In step if a customer record matches the ESI ID then the associated 65004 transaction record is placed in Suspension of service notification worklist by step . The purpose code and reason description may be displayed in step at a later time after opening and reviewing the Suspension and service notification worklist . The business rule process ends with end step .

Usage rating process continues with the step of validating the meter read date in the 86703 transaction. If the meter read start date is less than the meter read end date then the meter read date is valid and the following step is performed. If the meter read date is not valid then a notice is logged to exception in step where the transaction record is placed in the protection exceptions worklist .

Step validates the quantity of the meter reading in the 86703 transaction wherein if the meter quantity value is found to be greater than zero then the meter quantity is considered to be valid and the following step is performed. If the meter quantity is not valid then a notice is logged to exception in step where the transaction record is placed in the billing exceptions worklist .

Step validates the meter read value in the 86703 transaction wherein if the meter read start value is found to be greater than meter read end value as long as product transfer type code is not BD demand type then the meter read value is considered to be valid and the following step is performed. If the meter read value is not valid then a notice is logged to exception in step where the transaction record is placed in the protection exceptions worklist .

Step validates the product assignment in the 86703 transaction wherein if the customer record with ESI ID contained in the 86703 transaction has a valid rate product assigned to it then the product assignment is considered to be valid and the following step is performed. If the customer is not assigned a proper rate product then a notice is logged to exception in step where the transaction record is placed in the protection exceptions worklist .

First rating step rates the current usage by applying a first provider s rate structure to the usage to calculate a first usage cost to the customer. In the preferred embodiment a rate in cost per unit usage is multiplied by the meter read value although more complicated rate structures are conceived based upon the given rate structure for a given provider.

Second rating step rates the current usage by applying a second provider s rate structure to the usage to calculate a second rated usage cost to the customer. The second provider in the preferred embodiment is REP and the rate structure is based on the customer s assigned product rate structure as checked in step . The second rating step creates a rated record in which the customer ID usage and second rated usage cost is stored along with an initial rating process code having value equal to 0 zero . Step calculates the difference between the first rated usage and the second rated usage and stores that value in the rated record .

Scaling factors are generated in scaling process a scale factor describing a multiplier between an average backcasted usage from ISO partners and the marking interval usage derived for vector read values for the customer. Backcasting is a process wherein the ISO averages the usage of ESI IDs in similar weather zones to create an average usage profile for that weather zone. Scaling process will be described further in relation to .

Scale factors generated in scaling process are stored in data warehouse for further use by wholesale forecasters. Wholesale forecaster will be described further in relation to .

The final step in usage rating process is the step of setting a system flag to indicate that a rated record is available for further processing. The rating process ends in end step . At a time after usage rating process completes the billing exceptions worklist is opened for viewing being displayed in step . Similarly the protection exceptions worklist is opened at a later time for viewing being displayed in step .

Pre bill QC process is described in flowchart form in . Pre bill QC process runs approximately once per day. Pre bill QC starts by checking for 86703 monthly usage transactions in transaction table . Pre bill QC process in step checks if a 86703 monthly usage transaction is available and if available then a record of the 86703 transaction is placed in a pre bill queue in step . The process is repeated at step until no more 86703 transactions are available in transaction table . Then pre bill QC process checks the transaction table for newly downloaded TDSP invoice 81002 type transactions in step . If an 81002 transaction is available then a record of the 81002 transaction is placed in a pre bill queue in step . The process is repeated at step until no more 86703 transactions or 81002 transactions are available in transaction table .

At step the pre bill queue is checked for transaction records that have been queued for more than 5 five days. If a transaction record is more than five days old then a log to exception is created in step and a record is created in Billing exceptions worklist which may be viewed by system operators at a later time in step . Pre bill QC process then continues to step of querying pre bill queue for matching 81002 and 86703 transactions records a match occurring whenever the 81002 and 86703 refer to the same ESI ID. If a match is not found in the pre bill queue then pre bill QC process ends at step .

If a match is found in step then pre bill QC process continues to operate on the matched 86703 transaction and 81002 transaction pair so as to complete the quality check process for a bill that is to be created in billing process .

Pre bill QC process continues by validating usage data from the 86703 transaction in validate usage data process . If the usage data is found to contain errors or does not match the usage assumed in the TDSP Invoice then the usage data is not valid and an exception is logged in step . The exception is logged by posting a transaction record to the Billing exceptions worklist. If the usage data is determined to be valid in validate usage data process then the 81002 TDSP invoice is checked for validity in process . If the invoice is not valid then an exception is logged in step wherein a transaction record is posted to the Billing exceptions worklist. After any of the exception steps and pre bill QC process repeats at step to find another matching 81002 and 86703 invoice.

If the TDSP invoice is validated then the customer record in CDR associated with ESI ID in the 86703 usage transaction is checked for customer protected status. If the customer is protected then pre bill QC process repeats at step to find another matching 81002 and 86703 invoice. Protected status occurs in situations where collections efforts are to be delayed such as a customer in bankruptcy.

A rated record associated with the matched 86703 transaction was previously created by a run of the usage rating process . In the case that the customer is not protected at step and can be billed for usage then the associated rated record status is changed to Ready to Bill in step by setting process code equal to unity 1 . After the rated record is made Ready to Bill then in step the matched 81002 and 86703 transaction records are deleted from pre bill queue and pre bill QC process repeats at step to find another matching 81002 and 86703 invoice.

 Validate TDSP invoice process continues by getting the invoice type in step from the transaction typecode . The invoice type is stored in the rated record associated to the 86703 transaction A. Valid invoice types are inclusive of those contained in the Texas Set which are PR product monthly usage FB final bill BD balance due and 26 miscellaneous . After the invoice type is stored the step is performed wherein transaction amount is stored in rated record . The start date is then compared to the end date in step if start date is greater than or equal to the end date then an exception is logged step to the Billing exceptions worklist if start date is less than or equal to end date then the process continues with step .

 Validate TDSP invoice process continues by checking in step that the start date matches the start date if the two dates do not match then an exception is logged step to the Billing exceptions worklist if the start dates do match then the process continues.

 Validate TDSP invoice process continues by checking in step that the end date matches the end date if the two dates do not match then an exception is logged in step to the Billing exceptions worklist if the end dates do match then Validate TDSP invoice process ends at step .

After the exception is logged in step then TDSP invoice A is checked for any unknown TDSP charges. If there are no unknown TDSP charges in step then Validate TDSP invoice process ends at step . If there are unknown TDSP charges in step then the unknown charge code is added in step to a table of TDSP charges contained in SQL database engine and an exception is logged to the Billing exceptions list to the effect that there was an unknown TDSP charge involved in the TDSP Invoice transaction A. Furthermore after step the associated customer ESI ID is set to Protected in step an exception is logged to Protected exceptions worklist in log exception step and the Validate TDSP invoice process ends at step .

After each exception is logged to Billing exceptions worklist in steps and Validate TDSP invoice process ends.

In step of validate usage data process ESI ID is checked against REP customer ESI ID numbers in CDR . If no matching ESI ID is found then validate user data ends at step otherwise in step a customer record in CDR is found to match the ESI ID and the process continues with step in which purpose code is checked for cancelled status. If purpose code is cancelled then the customer record is marked C in step and the process continues with step . If purpose code is not cancelled in step the validate usage data process continues with step .

In step of validate usage data process the action code is checked for final bill status If the action code is final bill then the ESI ID in customer record in step is marked C and a FINAL BILL flag is set in rated record after which the process continues with step . If the action code is other than final bill then the validate usage data process continues with step .

In step of validate usage data process the start date is compared to the end date if start date is less than the end date then an exception is logged step to the Billing exceptions worklist if start date is greater than or equal to end date then the validate usage data process continues.

 Validate usage data process continues by checking in step that the start date matches the start date if the two dates do not match then an exception is logged step to the Billing exceptions worklist if the start dates do match then the validate usage data process continues.

 Validate usage data process continues by checking in step that the end date matches the end date if the two dates do not match then an exception is logged step to the Billing exceptions worklist if the end dates do match then the validate usage data process continues.

In step meter start value is compared to meter end value if meter start value is greater than meter end value then an exception is logged step to the Billing exceptions worklist if the meter start value is less than or equal to the meter end value then the validate usage data process continues.

In step net interval usage which is typically the monthly usage amount is checked to be equal to the meter read quantity if meter read quantity and net interval usage are not equal then an exception is logged step to the Billing exceptions worklist if the meter read quantity is equal to the net interval usage the validate usage data process ends at step . After any of log exception steps and are executed the validate usage data process ends.

In step of billing process a customer bill is calculated by adding the current balance and the total charges from the rated usage in rated record A then an associated bill record including at least the summed balance and total charges and a due date is added to customer record . A customer bill is automatically generated in step in which an electronic copy of the bill is stored in customer record . The following step then updates the rated record A to rated record B by setting the process code equal to two 2 signaling to system that customer bill is Ready to send . In step customer bill is sent to the customer. In the preferred embodiment customer bill may be printed and sent by regular paper mail to the customer s service address or customer bill may be emailed to the customer s email address as determined by the customer.

Once customer bill has been sent in step the bill status field in the customer record is set to A in step signaling system that customer record has a bill in accounts receivable. Then a new AgingQueue record in AgingQueue is created in step the new AgingQueue record being associated to the customer record by a customer ID number. After the AgingQueue record has been created the billing process is repeated by continuing step and following subsequent steps in order until all the current rated records with process code 1 have been billed.

The AgingQueue is used extensively in the Aging process shown in the flowchart of . Aging process operates on the records contained in AgingQueue preparing each customer record associated with each AgingQueue record for possible treatment in the case that customer payments have not been received in a timely manner. Aging process begins with the step of retrieving a customer record associated to an AgingQueue record. In step the oldest active invoice in customer record is sorted into charges that are current post current between 17 days and 30 days in the preferred embodiment 31 60 days past due 61 90 days past due 91 120 days past due and 120 days or more past due. The sorted amounts are stored in accumulator bins labeled BalCur PostBalCur Bal30 Bal60 Bal90 and Bal120 respectively in aging array . The process is repeated in step for all active invoices in the customer record with the sorted charges from each subsequent invoice being summed into the stored amounts in the appropriate accumulator bins of aging array . An active invoice in the preferred embodiment is a customer bill contained in the customer record with the bill status field marked A . In step the total current balance is computed as the sum of all accumulator bins after payments and adjustments.

Once all of the invoices for customer record have been sorted and summed the aging process continues with the step of applying adjustments wherein the adjustments are applied to the oldest balance bin in the aging array forward until each balance is zero. An example of an adjustment is an adjustment from an estimated meter read to an actual meter read from a final bill. After adjustments are applied the step of applying all received payments is performed wherein payments received by the customer associated to customer record are applied beginning with the oldest balance bin forward in the aging array until each balance is zero.

In step the total current balance pending is calculated the total current balance pending being the difference of total current balance and any payments pending that are in process. Excess payment or adjustments may cause the total current balance or total current balance pending to be a credit. Upon calculating the balances in the aging array and the total current balance pending the step is performed in which customer record fields associated to Bal Cur Post BalCur Bal30 Bal60 Bal90 and Bal120 are updated with the aging array data the total current balance and the calculated total current balance pending. In step the aging process repeats beginning with step for all customer records in the AgingQueue .

Treatment process is now described with the help of and . Treatment process runs as a Windows Service written in C .Net and in the preferred embodiment runs nightly at 12 30 am. The treatment process begins examining bills during a post bill period of time which is measured from the time the bill status is marked A for a billed customer with a customer record in CDR . Subsequently the bill goes through aging process and the various balances are updated and posted in the customer record as described for aging process . The due date stored in the customer record is set to a given number of days the given number of days defining the post bill period. A grace period extending the time of the post bill period until an unpaid bill is considered in treatment is predetermined by the associated customer s Dunning number. A post bill period of 16 days is used in the preferred embodiment. Grace periods are in the range of zero to nine days in the preferred embodiment.

Dunning numbers are used in the treatment process the Dunning number being a credit scoring mechanism known in the art for rating the customer with an integer Dunning number of 1 to 4 with 1 being the lowest credit score 3 being the highest credit score.

Dunning check step checks for each customer record in treatment data for necessary changes to each customer s Dunning number. If in the current billing period a customer has had a recent move in has had a disconnect for non payment has had a disconnect notice sent during the billing period or has had three or more non stub bills paid on time then the customer s Dunning number will be changed beginning with upgrade step . Otherwise the customer s Dunning number remains the same and the process continues with step after all other customer records in treatment data have been checked in step . Upgrade step increases a customer s Dunning number if they recently moved in and have Dunning numbers of 2 or 3 and if the customer has paid their first three bills on time. Downgrade step decreases a customer s Dunning number to 1 if currently Dunning numbers 2 or 3 and if the customer was disconnected for non pay DNP and was reconnected. Downgrade step decreases a customer s Dunning number by 1 if currently Dunning numbers 2 or 3 and if customer has two or more disconnect notices with no DNP. Upgrade step increases a customer s Dunning number from 2 to 3 when a customer pays the previous three bills on time. At step a grace period in days is set according to a table for each Dunning number and a minimum payment threshold is established for each customer record. The module then moves to step .

Queue reminder calls step queues payment and agreement reminder calls for customers on a deferred payment plan who have not returned a signed contract agreement. In the preferred embodiment step looks for such customers five 5 days prior to the end of the post bill period.

Treatment process continues with reminder letter step wherein payment reminder letters are sent to customers whose invoice is past due during the grace period skipping customers who have not ever been in treatment steps or beyond and who have three recent bills paid up.

In disconnect letter step customer disconnect letters are sent and outbound calls are made to those customers whose bill is past due beyond the grace period if the customer is not already in treatment . Customers who receive a disconnect letter or outbound call in step have a customer status field marked as being in treatment . In the preferred embodiment disconnect letters may be in the form of an email if the customer s email address is present in the customer record. A disconnect date is established in disconnect letter step .

First end treatment step cancels pending disconnect and move out orders if present and removes the customer from being in treatment for all customers who have been placed in the status of in protection by another system process.

Second end treatment step cancels pending disconnect and move out orders if present and removes the customer from being in treatment for all customers whose accounts have been cancelled.

Postpone treatment step postpones the disconnect date for customers who are already disconnected and are not in energized status where energized means that electricity is turned on to the meter associated to the customer.

Disconnect treatment step queues disconnect orders for all customers in treatment wherein a disconnect date has been established in step and wherein the disconnect date is due and wherein the customer status is currently energized or connected.

The disconnect order in the preferred embodiment is an ERCOT EDI transaction type 65001 and is queued along with other transactions to be sent in a given business day by the transaction exporter of . The disconnect order is confirmed by REP after the disconnect pending time wherein the customer s service has been turned off by the TDSP and an ERCOT EDI transaction type 65002 is sent to REP with a disconnected for non payment DNP transaction Accept response as described in the transaction business rules process .

After the disconnect order has been confirmed the treatment process continues with move out step wherein move out orders are queued for all active customers in treatment . In move out step customers which have disconnect orders confirmed more than five days prior to the current date will be queued to receive a move out order. The result of queuing a move out order for a customer is that the customer is removed as REP customer of record with the ISO partners . Treatment process ends at end step .

In the case that the paying customer has been taken out of treatment in step then several other steps are taken to insure that any other treatment processes underway will be cancelled. In step a check for any outbound calls to paying customer is made and if there is an outbound call queued then the outbound call is cancelled at step . If there is no outbound call queued then check step is made for a disconnect notice that may have been sent to paying customer . If a disconnect notice was not mailed then a disconnect notice in queue is canceled so that the notice is not sent. If the disconnect notice was indeed mailed in check step then second check step is made to ascertain if the disconnect order is queued. If the disconnect order has not been queued then payment processor ends at step .

Once a disconnect order has been queued for paying customer and check verifies that this is the case a third check step is made to ascertain if the disconnect order has been sent to the associated TDSP in an EDI transaction. If the disconnect order has been sent then a reconnect order is sent to the TDSP directly without queuing and the paying customer will regain service. If the disconnect order has not been sent then the queued disconnect order is canceled in step . Payment processor ends at step after either step or step .

CRI release process repeats at step on the 25th 1st 5th and 10th days of each month in the preferred embodiment and operates to populate CRI table CRIDetail table and CRI Info table . CRI table and CRIDetail table are treated as atomic in the sense that all data for the current billing month is reconstructed every time that CRI release process runs. CRI Info table is a summary data table with summary data from CRI table accessible by sales management . Current billing month data is repopulated in CRI Info table each time CRI release process runs. Previous billing month data is left unaltered and is persistently stored in CRI Info table in the preferred embodiment of the present invention.

A flowchart of the CRI daily calculation process is drawn in . The CRI daily calculation process begins at start event which activates process at a predetermined times. The predetermined times are 3 00 am each day in the preferred embodiment. After activation the process continues with step wherein BillPay table and BillPayDetail table are cleared of all data for the current billing month. Once cleared the BillPay table is populated in step with the set of bills which are marked A for accounts receivable in CDR . The set of bills are incorporated as a set of bill records contained in BillPay table having at least the field s bill number customer number total current balance and payment applied . A bill record represents a unique customer bill.

Process continues by applying adjustments and payments on the bill records . BillPayDetail table comprises a set of payment adjustment records with at least one payment adjustment record per bill record in BillPay table . There is a one to many relation between a bill record in BillPay table and the set of payment adjustment records in BillPayDetail table . In step all unbilled adjustments are obtained from CDR for the customer record associated to a first bill record in the set of bill records and then the adjustments are applied to the first bill record in step to create at least one payment adjustment record in the set of payment adjustment records . In step all active payments credited to the customer associated to the given bill record are obtained from payment processor in and then in step the payments are applied to the given bill record to create at least one record in the set of payment adjustment records .

Each payment adjustment record contains at least the fields bill number customer number transaction number payment and payment applied . Payment amount is collected in payment transaction with transaction number a credit equal to or less than payment amount is applied to the customer bill with bill number as payment applied . Payment amount may be generated by a customer payment from step or by a system adjustment from step . An excess payment or adjustment which is the difference payment amount payment applied is applied to another bill for the same customer number with the next largest bill number associated with customer number . In step payment applied is updated with payment applied by adding the payment applied to the pre existing payment applied . Then the payment adjustment process is repeated in step for all of the set of bill records in BillPay table . When all bill records have processed as described in the combination of steps and CRI daily calculation process ends at step .

Extract step extracts from the set of bill records in BillPay table those bill records for which payment applied is greater than or equal to 99 of total current charges . The extracted bill records from extract step are stored to a set of paid bills . From the set of paid bills a set of commissionable bills is created in the step wherein only bill records in set of paid bills for the current billing period are included. The set of commissionable bills is then available to populate customer records in CRI table . A CRT record in CRI table contains at least a customer number sales agent ID billing period month release date total billing period usage and band number

Step queries CDR for data for each customer number in each bill record in set of commissionable bills according to repeat step . For all customer numbers with only one billing record in set of commissionable bills step takes a single bill from set of commissionable bills and populates CRI record in CRI table . For customers with at least two billing records in the set of commissionable bills the rated kwh usage associated to each bill is added to billed usage of CRI Detail table in step and then in step the rated usage summed for each billing record associated to customer number the sum being accumulated and stored in usage in CRI table . CRI Detail table has a set of records with at least the fields of bill number customer number and billed usage . The steps and are repeated for all customers with at least two records in BillPay.

CRI release process completes by updating CRI Info table in step wherein records in CRI Info table are updated to include records in CRI table . CRI info table persistently stores records from each execution of release process . CRI release process then ends at step .

Application programming interface API of is further described in reference to . API is a secure gateway into the functionality provided by system . API is a means to accelerate integration of systems owned and operated by third party integration partners without sacrificing business rules and controls necessary to the integrity of system . Third party integration partners are provided a security protocol and functional specification that are used to integrate with system .

In addition to functional specification API comprises security protocol service location lookup service customer order processing service payment processing service rate quote generation service customer billing information service and customer order status service . All six API services and are accessed from third party integration partners via security protocol . All six API services access SQL database engine via database servers and shown in .

API functions to receive system requests from third party integration partners process requests according to the type of request utilizing one of the six API services transforming the requests into SQL database queries which are sent to SQL database engine receiving query results from SQL database transforming query results into a standard form specified by functional interface specification and replying to third party integration partners with system results

All system requests transit security protocol . The security protocol includes authorization as a valid user of API and assignment of security rights privileges to the available set of function calls in API . Once a system request clears security protocol pre approved third party third party integration partners have access to the six primary functional API services 

Scaling process is shown in the block diagram wherein the monthly interval usage and scale factor is calculated and stored for a given 86703 transaction associated to a customer ESI ID. In step monthly interval usage from the 86703 transaction is stored in datawarehouse as usage . The weather zone is then looked up for the ESI ID in step followed by a lookup of a set of backcast profiles from one of ISO partners associated to the weather zone in step . A backcast profile in the set of backcast profiles is a profile of usage for a given day in kW wherein the usage is averaged for a group of ESI IDs in the weather zone and reported in 15 second time intervals. The backcast profile may be looked up for an entire monthly interval.

In step a scale factor for the ESI ID for a given monthly interval is computed and stored in datawarehouse as scale factor according to 

In step the forecast profiles are grouped by regions in which energy will be purchased and then in step the usage days d are summed for all ESI IDs in the set of scaled forecast profiles according to

Depositary requirements decisions which are decisions based on data and scoring wherein system business rules are applied that determine whether the System data model is a highly relational set of SQL table structures designed to support self enforcing rules data integrity system queues and last point exception buckets. The overall design is centered on the customer data entity and provides relationships to all energy system business entities and processes.

A block diagram of system data model is provided in . Data model comprises a set of entities wherein the entities are comprised of sets of data tables. The entities have relationships between them as shown by the solid lines in the relationships enforcing relational sharing of data between tables within one entity and with tables within another entity.

The entities in data model are ESI ID warehouse entity for holding data relating to specific ESI IDs Wholesale entity for compiling data relating to forecast models and ESI ID usage profiles Market Transactions entity for storing transactions sent received to from the ISO or TDSP Orders entity for containing sales order information Sales Consultants entity for containing records relating to the sales process Customer entity for accumulating detailed customer information Rating entity for compiling usage rating data Products and Rates entity for holding the various products and rates for the ESI IDs Discounts entity for describing customer discounts Payments entity for keeping records related to customer payments Bills entity for accumulating billing information for customers and commissions entity for containing sales commission information relating to customer residual income.

The entities in data model sharing relational data are as follows Customer entity shares relational data with Rating entity Wholesale entity Orders entity Sales consultants entity and Bills entity . Market transactions entity shares relational data with Orders entity ESI ID Warehouse Wholesale entity and Rating entity . Orders entity shares relational data with Sales consultants in addition to those relationships already described. Bills entity shares relational data with Rating entity Payments entity Commissions entity and Customer entity . Rating entity shares relational data with Products and Rates entity Discounts entity and Bills entity .

Data model includes queuing and logging entities for managing the operational aspects of REP the queuing entities typically being accessed by the company operations staff customer service staff or IT operations staff within REP . The queuing entities within data model are Exceptions entity for logging transaction exceptions and other system exceptions System Queues entity comprised of queuing tables relating to worklists and business operational functions such as a queue for printing bills Security entity for holding system user data such as authorization data System logs entity for containing tables of various system software logs and Alerts entity for logging data records relating to critical system alerts.

Most data tables have a key assigned to one field indicated by a key graphic in the given figure. Where the key is assigned to one field the field is called the primary key and serves as a unique identifier to each record in the data table. In some cases there may be multiple primary keys wherein a combination of the multiple primary keys is required to uniquely specify each record in the data table. The solid line relationships have either a key or an infinity symbol graphic on the ends. A single key on one end and a single key on the other end of a solid line connection indicates a one to one relationship between the connected data tables. A single key on one end and an infinity symbol on the other end of a solid line connection indicates a one to many relationship between the a first data table and a second data table implying that for each instance of the first data table there may be many instances of the second data table. Relationships between tables require a foreign key a foreign key being a predefined field within a data table that contains data matching the primary key in another data table.

LookServiceProvider table has a one to many relationship with ESIIDAreaOfUse table wherein ESIIDAreaOfUse table contains foreign key ProviderID corresponding to lookServiceProvider table primary key .

LookESIIDTDSPStatus table has a one to many relationship with ESIIDAreaOfUse table wherein ESIIDAreaOfUse table contains foreign key ESIIDTDSPStatusCd corresponding to LookESIIDTDSPStatus table primary key .

LookESIIDPremiseType table has a one to many relationship with ESIIDAreaOfUse table wherein ESIIDAreaOfUse table contains foreign key PremiseTypeId corresponding to LookESIIDPremiseType table primary key .

LookWeatherZone table has a one to many relationship with LookLoadProfile table wherein LookLoadProfile table contains foreign key WeatherZone corresponding to LookWeatherZone table primary key . LookWeatherZone table has a one to many relationship with LookWeatherStations table wherein LookWeatherStations table contains foreign key WeatherZone corresponding to LookWeatherZone table primary key . LookWeatherStations table has a one to many relationship with WeatherData table wherein WeatherData table contains foreign key StationCd corresponding to LookWeatherStations table primary key .

LookInterval table has a one to many relationship with MCP table wherein MCP table contains foreign key IntervalId corresponding to LookInterval table primary key . LookInterval table has a one to many relationship with AncilaryCharges table wherein AncilaryCharges table contains foreign key IntervalId corresponding to LookInterval table primary key . LookInterval table has a one to many relationship with AdjustedUsage table wherein AdjustedUsage table contains foreign key IntervalId corresponding to LookInterval table primary key .

LookLoadProfile table has a one to many relationship with ESIIDProfile table wherein ESIIDProfile table contains foreign key LoadProfileld corresponding to LookLoadProfile table primary key . LookLoadProfile table has a one to many relationship with ESIIDScale table wherein ESIIDScale table contains foreign key LoadProfileId corresponding to LookLoadProfile table primary key . LookStations table has a one to many relationship with ESIIDProfile table wherein ESIIDProfile table contains foreign key StationID corresponding to LookStations table primary key . ESIIDProfile table has a one to many relationship with ESIIDScale table wherein ESIIDScale table contains foreign key BlueESIID corresponding to ESIIDProfile table primary key .

ERCOTForecast table has a one to many relationship with ERCOTForecastInterval table wherein ERCOTForeeastInterval table contains foreign key ERCOTForecastId corresponding to ERCOTForecast table primary key . LookInterval table has a one to many relationship with ERCOTForecastInterval table wherein ERCOTForecastInterval table contains foreign key IntervalId corresponding to lookInterval table primary key . LookInterval table has a one to many relationship with ERCOTBackcastInterval table wherein ERCOTBackcastInterval table contains foreign key IntervalId corresponding to LookInterval table primary key . LookInterval table has a one to many relationship with LoadBackcastInterval table wherein LoadBackcastInterval table contains foreign key IntervalId corresponding to LookInterval table primary key . LookInterval table has a one to many relationship with LoadForecastInterval table wherein LoadForecastInterval table contains foreign key IntervalId corresponding to LookInterval table primary key . LoadForecast table has a one to many relationship with LoadForecastInterval table wherein LoadForecastInterval table contains foreign key LoadForeeastId corresponding to LoadForecast table primary key . LoadBackcast table has a one to many relationship with LoadBackcastInterval table wherein LoadBackcastInterval table contains foreign key LoadBackcastId corresponding to LoadBackcast table primary key . ERCOTBackcast table has a one to many relationship with ERCOTBackcastInterval table wherein ERCOTBackcastInterval table contains foreign key ERCOTBackcastId corresponding to ERCOTBackcast table primary key .

WholesaleProduct table has a one to many relationship with WholesaleProductPurchase table wherein WholesaleProductPurchase table contains foreign key WholesaleProductId corresponding to WholesaleProduct table primary key . WholesaleProduct table has a one to many relationship with PurchaseStrategy table wherein PurchaseStrategy table contains foreign key WholesaleProductId corresponding to WholesaleProduct table primary key . LookWholesaleProduct table has a one to many relationship with WholesaleProduct table wherein WholesaleProduct table contains foreign key StatusCd corresponding to LookWholesaleProduct table primary key . WholesalePurchase table has a one to many relationship with WholesaleProductPurchase table wherein WholesaleProductPurchase table contains foreign key WholesalePurchaseId corresponding to WholesalePurchase table primary key . LookWholesalePurchase table has a one to many relationship with WholesalePurchase table wherein WholesalePurchase table contains foreign key StatusCd corresponding to LookWholesalePurchase table primary key .

Customer table has a one to many relationship with Orders table wherein Orders table contains foreign key CustomerNbr corresponding to Customer table primary key . Customer table has a one to many relationship with ESCustTransactionMstr table wherein ESCustTransactionsMstr table contains foreign key CustomerNbr corresponding to Customer table primary key .

Customerinfo table has a one to many relationship with CRIInfo table wherein CRIInfo table contains foreign key DPICustNbr corresponding to CustomerInfo table primary key .

Customer table has a one to many relationship with CustomerProtection table wherein CustomerProtection table contains foreign key CustomerNbr corresponding to Customer table primary key . Customer table has a one to many relationship with CustomerMail table wherein CustomerMail table contains foreign key CustomerNbr corresponding to Customer table primary key . Customer table has a one to one relationship with CustomerCredit table wherein CustomerCredit table contains foreign key CustomerNbr corresponding to Customer table primary key . Customer table has a one to many relationship with Notes table wherein Notes table contains foreign key CustomerNbr corresponding to Customer table primary key . Customer table has a one to many relationship with CustornerCreditHistory table wherein CustomerCreditHistory table contains foreign key CustomerNbr corresponding to Customer table primary key . Customer table has a one to many relationship with CustomerTaxQueue table wherein CustomerTaxQueue table contains foreign key CustomerNbr corresponding to Customer table primary key . Customer table has a one to many relationship with CustomerPaymentMethod table wherein CustomerPaymentMethod table contains foreign key CustomerNbr corresponding to Customer table primary key . Customer table has a one to many relationship with CustomerLetterQueue table wherein CustomerLetterQueue table contains foreign key CustomerNbr corresponding to Customer table primary key . Customer table has a one to many relationship with CustomerRewards table wherein CustomerRewards table contains foreign key CustomerNbr corresponding to Customer table primary key . Customer table has a one to many relationship with CustomerSavings table wherein CustomerSavings table contains foreign key CustomerNbr corresponding to Customer table primary key . Customer table has a one to many relationship with ServiceLocation table wherein Service Location table contains foreign key CustomerNbr corresponding to Customer table primary key .

ServiceLocation table has a one to many relationship with CustomerDiscounts table wherein CustomerDiscounts table contains foreign key ServiceLocationID corresponding to ServiceLocation table primary key . ServiceLocation table has a one to many relationship with CustomerRate table wherein CustomerRate table contains foreign key ServiceLocationID corresponding to ServiceLocation table primary key . ServiceLocation table has a one to many relationship with CustomerTax table wherein CustomerTax table contains foreign key ServiceLocationID corresponding to ServiceLocation table primary key . ServiceLocation table has a one to many relationship with CustomerProducts table wherein CustomerProducts table contains foreign key ServiceLocationID corresponding to ServiceLocation table primary key .

Products table has a one to many relationship with CustomerRate table wherein CustomerRate table contains foreign keys ProductNbr and ProductSt corresponding to Products table primary keys and respectively. Products table has a one to many relationship with CustomerProducts table wherein CustomerProducts table contains foreign keys ProductNbr and ProductSt corresponding to Products table primary keys and respectively.

CustomerDiscounts table has a one to many relationship with CustomerRate table wherein CustomerRate table contains foreign key CustDiscountNbr corresponding to CustomerDiscounts table primary key .

ESIID table has a one to many relationship with ServiceLocation table wherein ServiceLocation table contains foreign key OldBlueESIID corresponding to ESIID table primary key .

CustomerTax table has a one to many relationship with CustomerTaxDetail table wherein CustomerTaxDetail table contains foreign key CustomerTaxID corresponding to CustomerTax table primary key .

RatingLog has a one to many relationship with RatingLogDetail wherein RatingLogDetail contains foreign key RatingLogId corresponding to RatingLog table primary key .

ProductComponent table has a one to many relationship with ProductToComponents table wherein ProductToComponents table contains foreign key ComponentNbr corresponding to ProductComponent table primary key ComponentNbr .

ProductComponent table has a one to many relationship with ComponentRate table wherein ComponentRate table contains foreign key ComponentNbr corresponding to ProductComponent table primary key ComponentNbr .

ProductComponent table has a one to many relationship with ComponentRateOverride table wherein ComponentRateOverride table contains foreign key ComponentNbr corresponding to ProductComponent table primary key ComponentNbr .

Products table has a one to many relationship with ProductToComponents table wherein ProductToComponents table has combination foreign keys ProductNbr and ProductSt corresponding to Products table combination primary keys ProductNbr and ProductSt .

Products table has a one to many relationship with CustomerProducts table wherein CustomerProducts table contains combination foreign keys ProductNbr and ProductSt corresponding to Products table combination primary keys ProductNbr and ProductSt .

Discounts table has a one to many relationship with DiscountRate table wherein DiscountRate table contains foreign key DiscountNbr corresponding to Discounts table primary key DiscountNbr .

Discounts table has a one to many relationship with CustomerDiscounts table wherein CustomerDiscounts table contains foreign key DiscountNbr corresponding to Discounts table primary key DiscountNbr .

LookPaymentSource table has a one to many relationship with Deposits table wherein Deposits table contains foreign key PaymentSourceId corresponding to LookPaymentSource table primary key . LookPaymentSource table has a one to many relationship with PaymentException table wherein PaymentException table contains foreign key PaymentSourceId corresponding to LookPaymentSource table primary key . LookPaymentSource table has a one to many relationship with Transactions table wherein Transactions table contains foreign key PaymentSourceId corresponding to LookPaymentSource table primary key . Transactions table has a one to many relationship with Deposits table wherein Deposits table contains foreign key TransactionNbr corresponding to Transactions table primary key . Transactions table has a one to many relationship with PaymentException table wherein PaymentException table contains foreign key TransactionNbr corresponding to Transactions table primary key . Transactions table has a one to many relationship with Payments table wherein Payments table contains foreign key TransactionNbr corresponding to Transactions table primary key .

LookPaymentStatus table has a one to many relationship with Payments table wherein Payments table contains foreign key StatusCd corresponding to LookPaymentsStatus table primary key .

LookPaymentType table has a one to many relationship with Deposits table wherein Deposits table contains foreign key PaymentTypeCd corresponding to LookPaymentType table primary key . LookPaymentType table has a one to many relationship with PaymentException table wherein PaymentException table contains foreign key PaymentTypeCd corresponding to LookPaymentType table primary key .

LookPaymentException table has a one to many relationship with PaymentException table wherein PaymentException table contains foreign key PaymentExceptionType shown as PaymentExceptionT . . . in corresponding to LookPaymentException table primary key . LookPaymentMethod table has a one to many relationship with CustomerPaymentMethod table wherein CustomerPaymentMethod table contains foreign key PaymentMethodId corresponding to LookPaymentMethod table primary key .

Bill table has a one to many relationship with Payments table wherein Payments table contains foreign key ApplyToBillNbr corresponding to Bill table primary key . Bill table has a one to many relationship with BillDetail table wherein BillDetail table contains foreign key BillNbr corresponding to Bill table primary key . Documents table has a one to one relationship with Bill table wherein Bill table contains foreign key DocumentNbr corresponding to Documents table primary key .

LookBillMethodType has a one to many relationship with Bill table wherein Bill table contains foreign key BillMethodTypeCd not shown corresponding to lookBillMethodType table primary key . LookBillType has a one to many relationship with Bill table wherein Bill table contains foreign key BillTypeCd corresponding to lookBillType table primary key . LookBillDetailType has a one to many relationship with BillDetail table wherein BillDetail table contains foreign key BillDetailTypeCd corresponding to lookBillDetailType table primary key . LookDocumentType has a one to many relationship with Documents table wherein Documents table contains foreign key DocumentTypeCd corresponding to lookDocumentType table primary key .

Bill table has a one to many relationship with BillDetail table wherein BillDetail table contains foreign key BillNbr corresponding to Bill table primary key . Bill table has a one to many relationship with BillPay table wherein BillPay table contains foreign key BillNbr corresponding to Bill table primary key . Bill table has a one to many relationship with BillPayDetail table wherein BillPayDetail table contains foreign key BillNbr corresponding to Bill table primary key . Bill table has a one to many relationship with CRIDetail table wherein CRIDetail table contains foreign key BillNbr corresponding to Bill table primary key . Bill table has a many to many relationship with Payments table wherein Payments table contains foreign key BillNbr not shown responding to Bill table primary key .

LookBillPayDetail table has a one to one relationship with BillPayDetail table wherein BillPayDetail table contains foreign key BillPayDetailTypeID corresponding to LookBillPayDetailType table primary key .

CRI table has a one to one relationship with CRIDetail table wherein CRIDetail table contains foreign key CRINbr not shown corresponding to CRI table primary key .

LookUsageBands table has a one to many relationship with CRI table wherein CRI table contains foreign key BandNbr corresponding to LookUsageBands table primary key .

LookExceptionType table has a one to many relationship with Exceptions table wherein Exceptions table contains foreign key ExceptionTypeCd corresponding to LookExceptionType table primary key . LookExceptionStatus table has a one to many relationship with Exceptions table wherein Exceptions table contains foreign key StatusCd corresponding to LookExceptionStatus table primary key .

SystemGroup table has a one to many relationship with SystemPermissions table wherein SystemPermissions table contains foreign key GroupNbr corresponding to SystemGroup table primary key . SystemGroup table has a one to many relationship with SystemUserGroup table wherein SystemUserGroup table contains foreign key GroupNbr corresponding to SystemGroup table primary key .

SystemUser table has a one to one relationship with SecurityAdjustments table wherein SequrityAdjustments table contains foreign key UserID corresponding to SystemUser table primary key . SystemUser table has a one to many relationship with SystemUserGroup table wherein SystemUserGroup table contains foreign key UserID corresponding to SystemUser table primary key . LookUserType table has a one to many relationship with SystemUser table wherein SystemUser table contains foreign key UserTypeCd corresponding to lookUserType table primary key . SystemObjects table has a one to many relationship with SystemPermissions table wherein SystemPermissions table contains foreign key ObjectNbr corresponding to SystemObjects table primary key .

The second group of tables and are primarily utilized in the preferred embodiment of the present invention to collect inbound transactions and organize them for retrieval. The table ESINTransactionMstr is the fundamental table around which inbound transactions are organized.

The Market Transaction tables shown in comprise ES81416Mstr table for holding outbound 81416 EDI transactions ES81416Mstr table having a primary key TransactionID ES81401Mstr table for holding outbound 81401 EDI transactions ES81401Mstr table having a primary key TransactionID ESOUTFileLog table for logging records of outbound transactions ESOUFIleLog table having a primary key ESOutboundFileLogID ESInFrrorLog table for containing records of errored inbound transactions ESInErrorLog table having a primary key ESInErrorLogID ESGFormatConfig table for containing ISO format information of inbound and outbound transactions ESGFormatConfig table having a primary key ESFormatConfigID .

The Market Transactions shown in comprise ES81408Mstr table for holding outbound 81408 EDI transactions ES81408Mstr table having a primary key TransactionID ES81429Mstr table for holding outbound 81429 EDI transactions ES81429Mstr table having a primary key transactionID ES824Mstr table for holding outbound 824 type EDI transactions ES824Mstr table having a primary key transactionID ES814 AE REQ table for containing account enrollment information ES814 AE REQ table having a primary key transactionID .

The Market Transaction tables shown in comprise ES81002ChargeDetail table for holding detailed invoice records from 81002 transactions having a primary key ES81002ChargeDetailId ES81002Mstr table for recording inbound 81002 transactions having a primary key ES81002MstrlId ES820 Detail table for holding detailed account information from 820 transactions having a primary key ES820 DetailId ES81002TaxDetail table for containing tax related data from 81002 transactions having a primary key ES81002TaxDetailId and ES820 table for recording inbound 820 transactions having a primary key ES820 Id .

ES81002Mstr table has a one to many relationship with ES81002ChargeDetail table wherein ES81002ChargeDetail table contains foreign key ES81002MstrId corresponding to ES81002Mstr table primary key .

ES81002Mstr table has a one to many relationship with ES81002TaxDetail table wherein ES81002TaxDetail table contains foreign key ES81002MstrId corresponding to ES81002Mstr table primary key .

ES820 table has a one to many relationship with ES820 Detail table wherein ES820 Detail table contains foreign key ES820 Id corresponding to ES820 table primary key .

ESINTransactionMstr table in has a one to many relationship with ES81002Mstr table in wherein ES81002Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table in has a one to many relationship with ES820 table in wherein ES820 table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

The Market Transaction tables shown in comprise ES81405Mstr table for recording inbound 81405 transactions having a primary key ES81405MstrId and ES81420Mstr table for recording inbound 81420 transactions having a primary key ES81420MstrId .

ESINTransactionMstr table in has a one to many relationship with ES81405Mstr table in wherein ES81405Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table in has a one to many relationship with ES81420Mstr table in wherein ES81420Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

The Market Transaction tables shown in comprise ES814 AC REQ IN table for recording inbound account change requests having a primary key ES814 AC REQ INId and ES814 AE RESP table for recording inbound account enrollment responses having a primary key ES814 AE RespId .

ESINTransactionMstr table in has a one to many relationship with ES814 AC REQ IN table in wherein ES814 AC REQ IN table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table in has a one to many relationship with ES814 AE RESP table in wherein ES814 AE RESP table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

The Market Transaction tables shown in comprise ES86704Mstr table for recording inbound 86704 transactions having a primary key ES86704MstrId and ESINTransactionException table for logging inbound transaction exceptions having a primary key ESINTransactionExeptionId .

ESINTransactionMstr table in has a one to many relationship with ES86704Mstr table in wherein ES86704Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table in has a one to many relationship with ESINTransactionException table in wherein ESINTransactionException table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

The Market Transactions shown in comprise ESGStructLayout for containing layout information having a primary key ESGSTructLayoutID ESGXrefERCOT for cross referencing transaction codes from ERCOT having a primary key ESGXrefERCOTId ES65001Detail for holding detailed 65001transaction data and ES65001Mstr for recording inbound 65001transactions having a primary key ES65001MstrId .

ESGStructLayout has a one to many relationship with ESGXrefERCOT wherein ESGXrefERCOT contains foreign key ESGStructLayoutId corresponding to ESGStructLayout primary key .

ES65001Mstr has a one to many relationship with ES65001Detail wherein ES65001Detail contains foreign key ES65001MstrId corresponding to ES65001Mstr primary key .

The Market Transactions shown in comprise ESServiceProviders table for containing service provider data ESServiceProviders table having a primary key ServiceProviderID ESSeed table for generating seed numbers ESSeed table having a primary key ESDescription ESOutErrorLog table for holding error information on outbound EDI transactions ES814 AD RESP OUT table for holding address information for 814 EDI transactions ES814 AD RESP OUT table having a primary key TransactionID ES824 OUT table for holding account number information for outbound 824 EDI transactions ES824 OUT table having a primary key TransactionID .

The Market Transactions shown in comprise ES82002Mstr table for holding inbound 82002 EDI transactions ES82002Mstr table having a primary key ES82002MstrId ES82002Detail table for holding inbound 82002 EDI transaction detailed data ESOUTTransactionMstr table for staging outbound EDI transactions ESOUTTransactionMstr table having a primary key transactionID ES81426Mstr table for holding inbound 81426 EDI transactions ES81426Mstr table having a primary key transactionID ES81421Mstr table for holding inbound 81421 EDI transactions ES81421Mstr table having a primary key transactionID ES814 AC RESP OUT table for holding account change information for 814 EDI transactions ES814 AC RESP OUT table having a primary key TransactionID ES814 AH REQ table for containing account history information ES814 AH REQ table having a primary key transactionID .

The Market Transaction tables shown in comprise ES867 MU IN Detail table for holding details of 867 MU type transactions having a primary key ES867 MU IN DTLId .

The Market Transaction tables shown in comprise ES867 MU IN table for recording inbound 867 MU transactions having a primary key ES867 MU INId ES81402Mstr table for recording inbound 81402 transactions having a primary key ES81402MstrId ES81417Mstr table for recording inbound 81417 transactions having a primary key ES81417MstrId .

ES867 MU IN table has a one to many relationship with ES867 MU IN Detail table in wherein ES867 MU IN Detail table contains foreign key ES867 MU INId corresponding to ES867 MU IN table primary key .

ESINTransactionMstr table in has a one to many relationship with ES867 MU IN table in wherein ES867 MU IN table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table in has a one to many relationship with ES81417Mstr table in wherein ES81417Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table in has a one to many relationship with ES81402Mstr table in wherein ES81402Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

The Market Transaction table shown in comprises ESINTransactionMstr table for organizing and containing master records of all inbound EDI transactions having a primary key ESINTransactionMstrId . ESINTransactionMstr table has several one to many relationships which are described herein.

The Market Transaction tables shown in comprise ES81406Mstr table for recording inbound 81406 transactions having a primary key ES81406MstrId ES814 AC RESP IN table for holding inbound account change response transactions having a primary key ES814 AC RESP INId ES81425Mstr table for recording inbound 81425 transactions having a primary key ES81425MstrId ES814 AH RESP table for containing inbound account history response data having a primary key ES814 AH RespId and ESIN81413Mstr table for recording inbound 81413 transactions having a primary key ESIN81413MstrId .

ESINTransactionMstr table in has a one to many relationship with ES81406Mstr table in wherein ES81406Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table in has a one to many relationship with ES814 AC RESP IN table in wherein ES814 AC RESP IN table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table in has a one to many relationship with ES81425Mstr table in wherein ES81425Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr in has a one to many relationship with ES814 AH RESP table in wherein ES814 AH RESP table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr primary key .

ESINTransactionMstr in has a one to many relationship with ESIN81413Mstr table in wherein ESIN81413Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr primary key .

The Market Transaction tables shown in comprise ES810 INVL table for holding invoice records having a primary key ES810 INVLId ES810 INVL ChargeDetail table for holding invoice change details having a primary key ES810 INVL DTL ChargeId ES86703Mstr table for recording inbound 86703 transactions having a primary key ES86703MstrId and ES810 INVL TaxDetail table for holding the tax detail related to invoice records having a primary key ES810 INVL DTL TaxId .

ES810 INVL table has a one to many relationship with ES810 INVL ChargeDetail table wherein ES810 INVL ChargeDetail table contains foreign key ES810 INVLId corresponding to ES810 INVL table primary key .

ES810 INVL table has a one to many relationship with ES810 INVL TaxDetail table wherein ES810INVL TaxDetail table contains foreign key ES810 INVLId corresponding to ES810 INVL table primary key .

ES86703Mstr table has a one to many relationship with ES86703 Detail table in wherein ES86703 Detail table contains foreign key ES86703MstrId corresponding to ES86703Mstr table primary key .

ESINTransactionMstr table in has a one to many relationship with ES810 INVL table in wherein ES810 INVL table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table in has a one to many relationship with ES86703Mstr table in wherein ES86703Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

The Market Transactions tables shown in comprise ES814 AC REQ OUTMeterDetail table for holding information for outbound 814 EDI meter requests ES814 AC REQ OUTMeterDetail table having a primary key ES814 AC REQ OUTMeterDetailID ES814 AC REQ OUTMtrExpDetail table for holding information for outbound 814 EDI meter request exceptions ES814 AC REQ OUTMtrExpDetail table having a primary key ES814 AC REQ OUTMtrExpDetail ES814 AC REQ table for containing outbound account change information ES814 AC REQ table having a primary key transactionID .

The Market Transactions shown in comprise ES81424Mstr table for holding inbound 81424 EDI transactions ES81424Mstr table having a primary key transactionID ES814 PCMstr table for holding inbound 814 PC EDI transactions ES814 PCMstr table having a primary key transactionID ESOUT81412Mstr table for holding outbound 81412 EDI transactions ESOUT81412Mstr table having a primary key transactionID ESOUT TransactionException table for holding outbound EDI transaction exceptions ES814 AD REQ OUT table for containing outbound account address information ES814 AD REQ OUT table having a primary key transactionID .

ES81408Mstr table in has a one to one relationship with ESOUTTransactionMstr table in wherein ES81408Mstr table contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key . ES81429Mstr table in has a one to one relationship with ESOUTTransactionMstr table wherein ES81429Mstr table contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key . ES814 AE REQ table has a one to one relationship with ESOUTTransactionMstr table in wherein ES814 AE REQ table contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key . ES824Mstr table in has a one to one relationship with ESOUTTransactionMstr table in wherein ES824Mstr table contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ES814 AD RESP OUT table in has a one to one relationship with ESOUTTransactionMstr table wherein ES814 AD RESP OUT table contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ES824 OUT table has a one to one relationship with ES824 OUT table wherein ESOUTTransactionsMstr table contains foreign key TransactionID corresponding to ESOUTTransactionMstr table primary key ESOUTTransactionMstr table in has a one to many relationship with ES82002Mstr table in wherein ES82002Mstr table contains foreign key TransactionID corresponding to ESOUTTransactionMstr table primary key ES81426Mstr table in has a one to one relationship with ESOUTTransactionMstr table in wherein ES81426Mstr table contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ES81421Mstr table in has a one to one relationship with ESOUTTransactionMstr table wherein ES81421Mstr table contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ES814 AC RESP OUT table in has a one to one relationship with ESOUTTransactionMstr table wherein ES814 AC RESP OUT table contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ES814 AH REQ table in has a one to one relationship with ESOUTTransactionMstr table wherein ES814 AH REQ table contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ES81424Mstr table in has a one to one relationship with ESOUTTransactionMstr table in wherein ES81424Mstr table contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ES814 PCMstr table in has a one to one relationship with ESOUTTransactionMstr table wherein ES814 PCMstr table contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ESOUT81412Mstr table in has a one to one relationship with ESOUTTransactionMstr table wherein ESOUT81412Mstr table contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ES814 AD REQOUT table in has a one to one relationship with ESOUTTransactionMstr table wherein ES814 AD REQ OUT table contains foreign key TransactionID corresponding to table primary key ES814 AC REQ OUT table in has a one to one relationship with ESOUTTransactionMstr table wherein ES814 AC REQ OUT table contains foreign key TransactionID corresponding to ESOUTTransactionsMstr table primary key ESOUTTransactionMstr table has a one to many relationship with ESOUTTransactionException table in wherein ESOUTTransactionException table contains foreign key TransactionID corresponding to ESOUTTransactionMstr table primary key ES82002 table in has a one to many relationship with ES82002Detail table in wherein ES82002Detail table contains foreign key ES82002MstrID corresponding to ES82002Mstr table primary key ES814 AC REQ OUT table in has a one to many relationship with ES814 AC REQ OUTMeterDetail table in wherein ES81 AC REQ OUTMeterDetail table contains foreign key ES814 AC REQ OUTId corresponding to ES814 AC REQ OUT table primary key ES814 AC REQ OUT table in has a one to many relationship with ES814 AC REQ OUTMtrExpDetail table wherein ES81 AC REQ OUTMtrExpDetail table contains foreign key ES814 AC REQ OUTId corresponding to ES814 AC REQ OUT table primary key .

The Market Transaction tables shown in comprise ES81428Mstr table for recording inbound 81428 transactions having a primary key ES81428MstrId ES814 AD RESP IN table for holding account drop response data having a primary key ES814 AD RESP INId and ES86702Mtr table for recording inbound 86702 transactions having a primary key ES86702MstrId .

ESINTransactionMstr table in has a one to many relationship with ES81428Mstr table in wherein ES81428Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table in has a one to many relationship with ES86702Mtr table in wherein ES86702Mtr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table in has a one to many relationship with ES814 AD RESP IN table in wherein ES814 AD RESP IN table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

The Market Transaction tables shown in comprise ES867 HU IN table for holding inbound 867 HU transactions having a primary key ES867 HU INId ES65004Mstr table for recording inbound 65004 transactions having a primary key ES65004MstrId ES65002Mstr table for recording inbound transactions having a primary key ES65002MstrId ES867 HU IN Detail table for holding detailed information relating to 867 HU transactions having a primary key ES867 HU IN DTLId ES65004Detail table for holding detailed data relating to 65004 transactions having a primary key ES65004DetailId and ES65002Detail table for holding detailed data relating to 65002 transactions having a primary key ES65002DetailId .

ES867 HU IN table has a one to many relationship with ES867 HU IN Detail table wherein ES867 HU IN Detail table contains foreign key ES867 HU INId corresponding to ES867 HU IN table primary key .

ES65004Mstr table has a one to many relationship with ES65004Detail table wherein ES65004Detail table contains foreign key ES65004MstrId corresponding to ES65004Mstr table primary key .

ES65002Mstr table has a one to many relationship with ES65002Detail table wherein ES65002Detail table contains foreign key ES65002MstrId corresponding to ES65002Mstr table primary key .

ESINTransactionMstr table in have a one to many relationship with ES867 HU IN table in wherein ES867 HU IN table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table in have a one to many relationship with ES65004Mstr table in wherein ES65004Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table in have a one to many relationship with ES65002Mstr table in wherein ES65002Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

The Market Transaction tables shown in comprise ESINFileLog table for containing inbound transaction file logs having a primary key ESINFileLogId ES81411Mstr table for recording inbound 81411 transactions having a primary key ES81411MstrId ES81427Mstr table for recording inbound 81427 transactions having a primary key ES81427MstrId .

ESINFileLog table has a one to many relationship with ESINTransactionMstr table wherein ESINTransactionMstr table contains foreign key ESINFileLogId corresponding to ESINFileLog table primary key .

ESINTransactionMstr table has a one to many relationship with ES81411Mstr table wherein ES81411Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table has a one to many relationship with ES81427Mstr table wherein ES81427Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

The Market Transaction tables shown in comprise ESIN81412Mstr table for recording inbound 81412 transactions having a primary key ESIN81412MstrId ESINTransactionMeter table for holding detailed meter data resulting from ISO transactions having a primary key ESMeterDetailId ES814 AR REQ table for holding inbound account reconnect records having a primary key ES814 AR ReqId and ES814 AD REQ IN table for holding inbound account drop requests having a primary key ES814 AD REQ INId .

ESINTransactionMstr table in has a one to many relationship with ESIN81412Mstr table in wherein ESIN81412Mstr table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table in has a one to many relationship with ESINTransactionMeter table in wherein ESINTransactionMeter table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr table in have a one to many relationship with ES814 AR REQ table in wherein ES814 AR REQ table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

ESINTransactionMstr in have a one to many relationship with ES814 AD REQ IN table in wherein ES814 AD REQ IN table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr primary key .

The Market Transaction tables shown in comprise ESINTransactionOrgs table for maintaining a list of organizations that generate inbound transactions having a primary key ESINTransactionOrgId and ES86703 Detail table for holding detailed 86703 transaction data having a primary key ES86703 DetailId .

ESINTransactionMstr table in have a one to many relationship with ESINTransactionOrgs table in wherein ESINTransactionOrgs table contains foreign key ESINTransactionMstrId corresponding to ESINTransactionMstr table primary key .

Alert table has a one to many relationship with AlertLog table wherein AlertLog table contains foreign key AlertID corresponding to Alert table primary key . Alert table has a one to many relationship with AlertNotification table wherein AlertNotification table contains foreign key AlertID corresponding to Alert table primary key . AlertLog may contain a hierarchy of records having parent child one to many relationships between records wherein the foreign key ParentAlertLogID of a particular record may refer to the primary key AlertLogID to identify a parent record.

While the present invention has been described in reference to a preferred embodiment this description is not intended to be construed in a limiting sense. Various modifications and combinations of the illustrative embodiments as well as other embodiments of the preferred embodiment will be apparent to persons skilled in the art upon reference to the description. It is therefore intended that the appended claims encompass any such modifications or embodiments.

