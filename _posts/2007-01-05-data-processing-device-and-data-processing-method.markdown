---

title: Data processing device and data processing method
abstract: A data processing device includes a memory, a processing unit, a logic element, a first database and a management unit. The memory stores a plurality of software modules which processes input data. The processing unit enables to execute the plurality of software module. The logic element enables to configure a plurality of hardware modules, which can perform processings equivalent to those performed by the plurality of software module, using a dynamic reconfiguration. The first database stores configuration information indicating a configuration of the plurality of hardware modules when the plurality of hardware modules is set to the logic element. The management unit determines a first software module to be set to the logic element as a hardware module in the plurality of software modules on the basis of a predetermined condition with respect to a processing of the input data, and sets a first hardware module corresponding to the first software module to the logic element with reference to the first database.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07774591&OS=07774591&RS=07774591
owner: Nec Corporation
number: 07774591
owner_city: Tokyo
owner_country: JP
publication_date: 20070105
---
The present invention relates to a data processing device and a data processing method in particular a data processing device and a data processing method in which a logic circuit is dynamically reconfigurable.

In recent years regarding a circuit for performing various data processings a dynamic reconfigurable logic device dynamic reconfigurable hardware capable of dynamically changing a configuration of the circuit and dynamically changing a connection to a computing unit has been realized. Examples of the reconfigurable logic device include FPGA Field Programmable Gate Array CPLD Complex Programmable Logic Device PCA Plastic Cell Architecture and Reconfigurable Processor RP . Such a reconfigurable logic device is regarded as a promising device capable of introducing flexibility of software into hardware having a characteristic of high speed processing. Thus apparatuses using this device have been proposed.

Japanese Laid Open Patent Application JP P2004 343559A discloses an example of a data processing device having a conventional reconfigurable integrated circuit unit. The data processing device has an integrated circuit unit capable of executing a plurality of data processings by changing at least a part of the circuit configuration. The data processing device further has a database which stores a plurality of configuration data available in the integrated circuit unit and a control unit which can select processing to be executed in the data processing device. The control unit has a reconfiguration function and a trial function. On the basis of the configuration data of the database the reconfiguration function configures the integrated circuit unit so as to correspond to processing active in the data processing device. The trial function temporarily changes at least a part of the configuration of the integrated circuit unit on the basis of the configuration data of the database so that evaluation may be made when another processing which can be replaced with the active processing is performed in the data processing device performs at least a part of the another processing on a trial basis and makes the highly evaluated another processing the active processing in the data processing device. In this conventional example a software wireless terminal using a reconfigurable processor RP is used. This example discloses a method of changing circuit configuration according to change in environment communication quality in this example by using a reconfigurable processor.

Japanese Laid Open Patent Application JP P2002 530780A WO00 31652 discloses an example of a conventional reconfigurable programmable logic device computer system. The reconfigurable computer system has a central processing unit and a programmable logic. The central processing unit is run on at least one programmable logic device. The programmable logic is combined with the central processing unit and can be reconfigured so that performances of the computer system may be optimized to process a given application. This conventional example is an example of a reconfigurable computer using a programmable logic device PLD . In this example functions of an application run in the computer are allocated to a hardware processing part and a software processing part under constraint of hardware resource at the time of system design and hardware resource allocation and software processing allocation are respectively performed at activation of the system.

International Publication WO01 090887 discloses a program processing method of performing a high speed processing by using a conventional dynamic reconfigurable hardware and a program of executing the processing method. This program processing method is a processing method of a source program run on a computer. The program processing method has an evaluating step of analyzing a source program to obtain a use cost value of the computer resources in the unit of predetermined program modules forming the source program and selecting a program module with a high use cost value an editing step of generating a hardware module object which constructs configuration of a dynamic reconfigurable hardware so as to perform processing of the selected program module and adding a pseudo function of calling the selected program module to change the source program an executing step of executing the changed source program by the hardware constructed according to the hardware module object and the computer. In this conventional example the hardware module object using hardware which can dynamically reconfigure the program module with a high use cost value of computer resources is called at the time of edition of the software run on a CPU Central Processing Unit .

In recent years in the data processing devices with an increase in an input output line speed an input output traffic volume of the devices has increased. For this reason to improve data processing performance the number of parts where input output data is processed by using hardware has increased. On the other hand devices such as firewalls intrusion detection prevention devices computer virus detectors and application layer relay devices which deal with a higher order network layer in terms of contents of data processing are now in increasing demand. In such data processing devices flexibility is required to address various protocols and applications. Thus such tasks are mainly processed by software. However a processing performance of software greatly depends on processing performance of a processor. Thus to greatly improve a processing performance it is necessary to execute hardware offload by separating off the processing to be hardware while sacrificing flexibility of the software.

In terms of offload there are a software module which performs processing on the CPU and a hardware module which performs processing in a hardware circuit in a processing block in the device. Generally different processings are allocated to the software module and the hardware module respectively. On the other hand the same processing may be allocated to the software module and the hardware module. In this case an application programming interface API of the software module and the hardware module can be defined so that the same result may be output when the same input data and parameter are given.

Since the hardware module is composed of a fixed hardware circuit the hardware module has no flexibility in arrangement such as whether to dispose the function on the device or in change of function. However when a reconfigurable logic device is used in the device it is possible to introduce the flexibility of software in addition to a high speed processing into the hardware module. Unless specifically defined hereinafter the hardware module will be regarded as the hardware module expanded on the reconfigurable logic device.

In terms of the processing performance such as data processing volume per unit time and time necessary for data processing the hardware module is more advantageous than the software module. On the other hand resources necessary for a software processing are the CPU and a processing memory and a resource necessary for the hardware processing is a logic element reconfigurable or fixed . Consequently in terms of resource costs the hardware module is more expensive than the software module. The hardware module using a reconfigurable logic element is more expensive than the hardware module using a fixed logic element as a whole. Therefore by setting the module with high frequency of use or the module with extremely excellent processing performance as the hardware module and the module with low frequency of use or the module having less difference in performance between the hardware and the software as the software module cost performance of the whole device can be improved.

However selection of the hardware module or the software module may vary depending on time zone location of the device and so on. Variation due to time zone means the case where tendency of the data types varies with time. In this case an environmental adaptation system using dynamic reconfiguration is especially effective in exhibiting performances. Conventionally to address change in time and difference of location of the device the function module has no option but to be the software module. However by using the reconfigurable logic device it becomes possible to address change in time and difference of location of the device also in the hardware module. Since the function can be changed in the same hardware at this time the change of function can be achieved in the state where the processing performance is kept high.

When the reconfigurable logic device is used in the data processing device in this manner the processing performance can be improved and the problem of flexibility of processing can be solved. However in the data processing device using the existent reconfigurable logic device there is no method of achieving various processings in the software module and the hardware module simultaneously and switching processing between the software module and the hardware module.

For example in the conventional technique disclosed in Japanese Laid Open Patent Application JP P2004 343559A it is presumed that processing circuit is used in which the processing scale is as small as that can be treated by the reconfigurable processor. That is it is not assumed that processing is performed by software and the technique of dynamically switching between the software module and the hardware module is not disclosed. In the conventional technique disclosed in Japan Laid Open patent Application JP P2002 530780A WO00 31652 reconfiguration is carried out only at activation of the system and the technique of changing processing allocation between the hardware and the software during operation of the system is not disclosed. In the conventional technique disclosed in International Publication WO01 090887 the module processed by hardware is fixed at edition of the software and the technique of changing processing allocation between the hardware and the software during operation of the system is not disclosed.

As a related technique Japanese Laid Open Patent Application JP P2004 5110A discloses information equipment and a launcher program. The information equipment has a launcher function and includes an application activation judging means a registered application search means and an application registering means. The application activation judging means judges that an application is activated from a function other than the launcher function. The registered application search means determines whether or not the application judged as being activated by the application activation judging means is registered in the launcher function. When determination is made that the application is not registered in the launcher function by the registered application search means the application registering means registers the application in the launcher function.

Japanese Laid Open Patent Application JP P2004 362446A discloses a calculator and a calculating method. The calculator has a hardware module a storage unit and an execution unit. The hardware module performs a predetermined processing. The storage unit stores a software module which performs the same processing as the predetermined processing performed by the hardware module therein. The execution unit selects execution by the hardware module or execution by the software module stored in the storage unit. The hardware module is made to perform the processing when the execution by the hardware module is selected and the software module is made to perform the processing when the execution by the software module is selected.

Therefore an object of the present invention is to provide a data processing device and a data processing method which can dynamically reconfigure a logic circuit on the basis of processing details and throughput of data to be input.

Another object of the present invention is to provide a data processing device and a data processing method which can dynamically switch between the software processing and the hardware processing by using a function of setting canceling the hardware processing to a dynamic reconfigurable logic element.

This and other objects features and advantages of the present invention will be readily ascertained by referring to the following description and drawings.

In order to achieve an aspect of the present invention the present invention provides a data processing device including a memory which stores a plurality of software modules which processes input data a processing unit which executes the plurality of software module a logic element configured to implement a plurality of hardware modules which can perform processings equivalent to processing performed by the plurality of software modules using a dynamic reconfiguration a first database which stores configuration information indicating a configuration of the plurality of hardware modules when the plurality of hardware modules is set to the logic element and a management unit which determines a first software module to be set to the logic element as a hardware module in the plurality of software modules on the basis of a predetermined condition with respect to a processing of the input data and sets a first hardware module corresponding to the first software module to the logic element with reference to the first database.

In the data processing device the management unit may determine the first software module on the basis of a first frequency of use of each of the plurality of software modules determine a second hardware module to be released from the logic element in the plurality of hardware modules on the basis of a second frequency of use of each of the plurality of hardware modules which is set to the logic element release the second hardware module from the logic element and set the first hardware module to the logic element.

In the data processing device the management unit may determine the first software module of which the first frequency of use is relatively high in the plurality of software modules and determine the second hardware module of which the second frequency of use is relatively low in the plurality of hardware modules.

In the data processing device the second frequency of use may be determined on the basis of the number of use and operating time of each of the plurality of hardware modules.

In the data processing device the second frequency of use may be determined on the basis of LRU Least Recently Used time as the time which has elapsed since last data processing.

The data processing device may further include a second database which associates a data type with one of a software module and a hardware module set to the logic element and a data input unit which receives the input unit. On the basis of a data type of the input data with reference to the second database when the data type of the input data corresponds to one of the plurality of hardware module set to the logic element the data input unit may transfer the input data to the corresponding one hardware module. When the data type of the input data does not correspond to any of the plurality of hardware module set to the logic element the data input unit may transfer the input data to the processing unit.

In order to achieve another aspect of the present invention the present invention provides a data processing device including a management unit which determines a setting state of a hardware module when the hardware module is set to or released from a dynamically reconfigurable logic element a database which associates a data type with one of a software module and a hardware module set to the logic element and is updated on the basis of the setting state and a data input unit which receives input data. On the basis of a data type of the input data with reference to the database when the data type of the input data corresponds to the hardware module set to the logic element the data input unit may transfer the input data to the corresponding hardware module.

In the data processing device on the basis of the data type of the input data with reference to the database when the data type of the input data does not correspond to the hardware module set to the logic element the data input unit may transfer the input data to a processing unit.

In the data processing device the management unit may determine the releasing of the hardware module set to the logic element on the basis of a frequency of use of the hardware module and set a hardware module corresponding to the software module to the logic element on the basis of a frequency of use of the software module.

In order to achieve another aspect of the present invention the present invention provides a data processing method including a determining a first software module to be set to a dynamically reconfigurable logic element as a hardware module in a plurality of software modules stored in a memory on the basis of a predetermined condition with respect to a processing of input data and b setting a first hardware module corresponding to the first software module to the logic element with reference to a first database which stores configuration information indicating a configuration of a hardware module when the hardware modules is set to the logic element.

In the data processing method the step a may include a1 determining the first software module on the basis of a first frequency of use of each of the plurality of software modules and a2 determining a second hardware module to be released from the logic element in an existing plurality of hardware modules which is set to the logic element on the basis of a second frequency of use of each of the existing plurality of hardware modules. The step b may include b1 releasing the second hardware module from the logic element and b2 setting the first hardware module to the logic element.

In the data processing method the step a1 may include a11 determining the first software module of which the first frequency of use is relatively high in the plurality of software modules. The step a2 may include a21 determining the second hardware module of which the second frequency of use is relatively low in the existing plurality of hardware modules.

In the data processing method the second frequency of use may be determined on the basis of the number of use and operating time of each of the existing plurality of hardware modules.

In the data processing the second frequency of use may be determined on the basis of LRU Least Recently Used time as the time which has elapsed since last data processing.

The data processing method may further include c with reference to a second database which associates a data type with one of a software module and a hardware module set to the logic element on the basis of a data type of the input data transferring the input data to the hardware module when the data type of the input data corresponds to the hardware module set to the logic element.

In order to achieve another aspect of the present invention the present invention provides a data processing method including a determining a setting state of a hardware module when the hardware module is set to or released from a dynamically reconfigurable logic element and b with reference to a database which associates a data type with one of a software module and a hardware module set to the logic element and is updated on the basis of the setting state on the basis of a data type of input data transferring the input data to the hardware module when the data type of the input data corresponds to the hardware module set to the logic element.

The data processing method the step b may include b1 on the basis of the data type of the input data with reference to the database transferring the input data to a processing unit when the data type of the input data does not correspond to the hardware module set to the logic element.

In the data processing method the step a may include a1 determining the releasing of the hardware module set to the logic element on the basis of a frequency of use of the hardware module and a2 setting a hardware module corresponding to the software module to the logic element on the basis of a frequency of use of the software module.

The invention will be now described herein with reference to illustrative embodiments. Those skilled in the art will recognize that many alternative embodiments can be accomplished using the teachings of the present invention and that the invention is not limited to the embodiments illustrated for explanatory purposed.

Embodiments of a data processing device and a data processing method according to the present invention will be described below with reference to the attached drawings. is a block diagram showing an embodiment of a data processing device of the present invention. The data processing device has an interface IF unit an input data processing determination database a data transfer network a central processing unit CPU a memory a reconfigurable logic element a reconfigurable logic element management unit a hardware module configuration information database and a management line bus .

The IF unit exchanges data between an external device of the data processing device and the data processing device . The IF unit has an input IF unit and an output IF unit . For temporary storage of input data and output data the IF unit may have a buffer not shown therein.

The input IF unit receives the input data from the outside of the data processing device through an input port . The input IF unit transmits data to the data transfer network . The input IF unit is connected to the input data processing determination database and communicates with each other by a database access signal . The input IF unit is connected to the reconfigurable logic element management unit and receives a reconfigurable logic element update notification signal from the reconfigurable logic element management unit . The output IF unit receives data from the data transfer network . The output IF unit transmits the output data to the outside of the data processing device through an output port .

The input data processing determination database acquires all or part of the input data from the input IF unit . The all or part of the input data is contained in the database access signal sent from the input IF unit . To determine processing of the input data in the data processing device the type of the data is determined to decide processing details and a processing block. Data for determination is stored in the input data processing determination database .

In the data types are classified into a Type to a Type a Type Output and others. Processings A to D Processing Output output processing and processing Z correspond to the data types respectively as data processings to be performed to the data with the data types. A hardware module to a hardware module a software module the IF unit and a software module Z correspond to the data processings respectively as the data processing modules which perform the data processings. These hardware modules denote hardware modules realized on the below mentioned reconfigurable logic element . These software modules denote software modules stored in the below mentioned memory

In in comparison with the data processing module for the processing D is changed from the software module to the hardware module and the data processing module for the processing B is changed from the hardware module to the software module . The hardware module is the hardware module newly realized on the reconfigurable logic element . The software module is the software module stored in the memory

Referring to for example when the data type of the input data is the Type the processing A is selected as a data processing method. In the processing A at this time the hardware module is selected as the data processing module. Accordingly the input data processing determination database instructs the input IF unit to transfer the input data to the hardware module such that the hardware module of the reconfigurable logic element performs the processing A. When the data type of the input data is the Type the processing D is selected as the data processing method and the software module of the software module is selected as the data processing module. In this case the input data processing determination database instructs the input IF unit to transfer the data to the CPU such that the CPU performs the software module to execute the processing D.

On the basis of search result sent from the input data processing determination database the input IF unit transfers the input data to the processing block where the data is processed. The processing block is one of the CPU the reconfigurable logic element and the output IF unit .

When the configuration of the hardware module in the reconfigurable logic element is changed the reconfigurable logic element management unit transmits the reconfigurable logic element update notification signal containing the changes to the input IF unit . The input IF unit transmits the changes to the input data processing determination database . On the basis of the changes the input data processing determination database updates contents of the database.

The input IF unit the output IF unit the CPU the below mentioned hardware module   to hardware module N  N in the reconfigurable logic element are communicatably connected to one another via the data transfer network . Any connection mode such as bus ring star and mesh can be adopted as long as communication among the components can be achieved.

The CPU reads a software in the memory as a processing program and manages whole of the data processing device via the management line bus while performing the data processing supplied from the data transfer network . Here the CPU may be formed of two or more CPUs in terms of throughput and function allocation. For example functions may be allocated to the CPU which performs mainly processing of the input data sent from the data transfer network and the CPU which manages whole of the data processing device via the management line bus .

In the software processing details for all types of the input data are defined. The CPU can address the processing details. In this specification a processing block for each type of the input data is referred to as a module. That is software module   to software module Z  Z for all types of the input data are stored in the software .

The software has a function of managing information on the types of the hardware modules available in the data processing device . That is the below mentioned types of the hardware modules are equal to types of the software modules or become a subset of processings which can be executed in the software modules . The software manages correspondence between the processing details for the types of the input data and processing modules software modules hardware modules .

The reconfigurable logic element is composed of dynamic reconfigurable logic devices hardware . The reconfigurable logic devices include FPGA Field Programmable Gate Array CPLD Complex Programmable Logic Device PCA Plastic Cell and RP Reconfigurable Processor .

The hardware module   to the hardware module N  N are provided in the reconfigurable logic element . The hardware module   to the hardware module N  N are connected to the data transfer network enabling data communication with the input IF unit the CPU and the output IF unit .

Each of the hardware modules   to the hardware module N  N notifies circuit use notification information to the reconfigurable logic element management unit . The circuit use notification information is information on frequency of data processing in unit of input data by the hardware module   to the hardware module N  N. Specific examples of the information on frequency include the number of activation and an operation duration time of each of the hardware module   to the hardware module N  N.

The reconfigurable logic element management unit has a statistical processing section and a resource management section . The statistical processing section totals the circuit use notification information notified from the hardware module   to the hardware module N N respectively and manages statistical information on usage frequency of the hardware module   to the hardware module N  N the number of uses and operating time of each hardware module . A processing item performed by software is notified from the CPU via the management line bus . On the basis of the notified processing item the hardware module newly disposed in the reconfigurable logic element is selected.

The LRU time field represents that frequency of use is higher as the LRU time as the time which has elapsed since last data processing is shorter. In other words according to a LRU rule the hardware module with long LRU time is preferentially released. However the LRU time field is merely an example. Information other than the LRU rule as long as it represents the use state of the hardware modules may be placed. Alternatively on the basis of order information according to a FIFO First In First Out rule as another example the hardware module may be released.

A hardware start threshold value is used to make the hardware request from the statistical processing section effective when the number of hardware requests of the unallocated data processing module exceeds the threshold value. Provision of the threshold value can cull one time hardware request and prevent frequent allocation and release processing. When the hardware start threshold value is set as 1 one hardware request results in switch to hardware.

The resource management section manages the hardware module currently allocated to the reconfigurable logic element . Generally circuit scale used by the hardware module varies depending on the type of the hardware module . Thus when dynamic reconfiguration is performed in the reconfigurable logic element release of the old hardware module from the reconfigurable logic element allocation of the logic element to the new hardware module and management of the unused logic element are carried out. is a table showing an example of the management information table in the resource management section . The data processing modules are associated with circuit arrangement regions. The data processing modules corresponding to the hardware module   to the hardware module N  N and the circuit arrangement region and unused regions in the reconfigurable logic element are managed.

When dynamic reconfiguration is performed in the reconfigurable logic element the reconfigurable logic element management unit determines a newly configured hardware module and a circuit released from the reconfigurable logic element as the above mentioned details for example on the basis of data in the statistical processing section . The reconfigurable logic element management unit is connected to the reconfigurable logic element and communicates with the reconfigurable logic element via a circuit setting signal configuration signal . The reconfigurable logic element management unit is connected to the hardware module configuration information database and communicates with the hardware module configuration information database via a circuit configuration information setting signal configuration signal .

The hardware module configuration information database stores configuration information of the hardware modules which can be configured in the reconfigurable logic element therein. That is the hardware modules types are associated with the configuration information of the hardware modules . The configuration information of the hardware modules is exemplified information on a logic configuration of logic cells and logic blocks forming the hardware modules and information on connection relationship among the logic cells logic blocks and memory modules. The stored configuration information of the hardware modules is associated with the software modules in the software as the hardware module. For example in the software modules are associated with the hardware modules in the data processing modules. That is the hardware module is defined as the hardware module for executing processing of the input data of a certain type.

When dynamic reconfiguration is performed in the reconfigurable logic element referring to the hardware module configuration information database the reconfigurable logic element management unit acquires hardware module configuration information not shown of the hardware module to be reconfigured and notifies the hardware module configuration information to the reconfigurable logic element .

The IF unit the input data processing determination database the CPU the reconfigurable logic element the reconfigurable logic element management unit and the hardware module configuration information database can communicate with one another via the management line bus . The management line bus is a bus for setting data and confirming the state.

An operation of the embodiment of the data processing device according to the present invention will be explained. is a flowchart showing the operation of the embodiment of the data processing device the embodiment of the data processing method according to the present invention.

First the input data arrives from the input port to the input IF unit Step S . The input IF unit determines the type and processing of the input data Step S . Specifically first the input IF unit extracts data for data type determination from the input data Step S . The data for data type determination is whole or part of the input data . Next the input IF unit outputs the database access signal containing the data for data type determination to the input data processing determination database . On the basis of the data for data type determination the input data processing determination database performs search Step S . The input data processing determination database replies the processing details for example the data processing in and the data processing block for example the data processing module in as search results to the input IF unit Step S .

The data IF unit determines a destination of the input data on the basis of the search results of the input data processing determination database Step S . When the data processing block for example the data processing module in is hardware Step S hardware the input IF unit transfers the input data to the corresponding hardware module Step S . The corresponding hardware module performs data processing of the input data Step S . The hardware module notifies the statistical processing section that the hardware module is used after start of data processing by using the circuit use notification information Step S . On completion of data processing the hardware module generates data for next data processing on the basis of the data processing result Step S . Referring to information on the next data processing module previously set in the hardware module the hardware module determines a next processing block Step S . In this case the hardware module bypasses Step S and transfers generated data to the corresponding data processing block. When the data processing block is the hardware module the procedure proceeds to Step S when the data processing block is the software module the procedure proceeds to Step S and when the data processing block is the output IF unit the procedure proceeds to Step S.

When the data processing block for example the data processing module in is software Step S software the input IF unit transfers the input data to the CPU to perform the data processing in the software module . The CPU performs data processing using the corresponding software module Step S . Responding to the fact that the software module is used referring to the correspondence table of the software to the data type and the data processing module the CPU determines whether or not the hardware module configuration information for the processing performed by the software module exists in the hardware module configuration information database Step S . Specifically in it is determined whether or not the hardware module corresponding to the software module of the data processing module exists. When the hardware module exists the corresponding hardware module configuration information exists in the hardware module configuration information database .

When the corresponding hardware module configuration information exists Step S Yes the CPU notifies the reconfigurable logic element management unit of a hardware generation request of the hardware module via the management line bus Step S . At this step a switching request from the software module to the hardware module in the corresponding data processing module by the dynamic reconfiguration is notified.

When the corresponding hardware module configuration information does not exist Step S No in the CPU counts the number of processings of the software module and stores the number of processings in the memory Step S . Thus although switching by the dynamic reconfiguration cannot be requested since the hardware module configuration information does not exist in the current configuration by recording the number of processings of each software module frequently called processing can be grasped. As a result by newly adding hardware module configuration information corresponding to the software module performing the frequently called processing to the hardware module configuration information database processing switching by dynamic reconfiguration can be achieved.

After it is determined whether or not the hardware module configuration information of the hardware module exists Step S on completion of the data processing the software module generate data for next data processing on the basis of the data processing result Step S . Referring to information on the next data processing module previously set in the software module the software module determines the next data processing block Step S . In this case the software module bypasses Step S and transfers generated data to the corresponding data processing block. When the data processing block is the hardware module the procedure proceeds to Step S when the data processing block is the software module the procedure proceeds to Step S and when the data processing block is the output IF unit the procedure proceeds to Step S.

When the data processing block for example the data processing module in is the output IF unit Step S output IF unit the input IF unit transfers the input data to the output IF unit Step S . The output IF unit generates the output data from the input data Step S . Finally the output IF unit outputs the output data to the output port Step S and the data processing is finished Step S .

First the reconfigurable logic element management unit receives the hardware generation request of the hardware module m 1 m N from the CPU at Step S Step S . The resource management section of the reconfigurable logic element management unit determines whether the number of hardware generation requests is equal to or more than a hardware start threshold value and a requested hardware module m can be disposed in the reconfigurable logic element Step S . Determination is made referring to the management information table of the resource management section in and the hardware module configuration information database . Specifically on the basis of the hardware module configuration information the hardware module configuration information database of the hardware module m the resource management section determines whether or not the hardware module m can be configured in the unused region of the circuit arrangement regions.

When the hardware module m cannot be disposed because of the lack of the unused logic elements of the reconfigurable logic element the unused region of the circuit arrangement region from the currently set hardware modules the resource management section selects the hardware module to be released from the reconfigurable logic element by switching the hardware processing to the software processing Step S . In the example shown in there are hardware generation requests to the unallocated hardware module . Among the allocated hardware modules the hardware module has the longest LRU and keeps the unused state longest. This means that the hardware module is a candidate to be released. Furthermore the hardware module of the small number of usage or short usage time may be selected as the candidate to be released. The statistical processing section grasps these data. The resource management section determines the hardware module to be released and then releases the selected hardware module from the reconfigurable logic element Step S . In the example shown in the hardware module is released. Next the resource management section allocates the hardware module m to the reconfigurable logic element Step S . In the example shown in the hardware module is allocated.

After completion of allocation the reconfigurable logic element management unit updates management information Step S . Specifically the management information includes the management information table managed by the statistical processing section and the management information table managed by the resource management section . After update of the management information the reconfigurable logic element management unit updates the input data processing determination database by the reconfigurable logic element update notification signal Step S and processing is finished Step S . In the example shown in as a result of update is updated to . That is in the hardware module is selected as the data processing module for the data type of Type and the software module of the software module is selected as the data processing module for the data type of Type . However as a result of dynamic reconfiguration the data processing module for the data type of Type is updated to the software module and the data processing module for the data type of Type is updated to the hardware module .

In the present embodiment the number of usage or usage time of the hardware modules in the reconfigurable logic element is measured. The number of usage or usage time of each hardware module is notified as the circuit use notification information to the reconfigurable logic element management unit . Since the newly disposed hardware module and the released hardware module are dynamically determined in the statistical processing section and the resource management section in the reconfigurable logic element management unit at all times the efficiency of the reconfigurable logic element can be optimized.

The present invention can be applied to a network device of changing processing details according to traffic state.

According to the present invention it is possible to dynamically reconfigure a logic circuit according to processing details and throughput of data to be input. Furthermore it is possible to dynamically switch between the software processing and the hardware processing by using the function of setting canceling the hardware processing to a dynamic reconfigurable logic element.

According to the present invention it is possible to dynamically reconfigure a logic circuit according to processing details and throughput of data to be input. The reason is that a means configured to detect processing details and throughput of the input data a means configured to determine a logic circuit to be changed on the basis of the detection result and a means configured to dynamically reconfigure the logic circuit are provided.

According to the present invention it is possible to dynamically switch between the software processing and the hardware processing by using the function of setting canceling the hardware processing to a dynamic reconfigurable logic element. The reason is that a means configured to reflect the information that hardware processing is set cancelled to the dynamic reconfigurable logic element on a transfer information of the input data to a processing module and transfer the input data to the processing module when the hardware processing exists is provided.

Furthermore according to the present invention taking arrival of data as a moment configuration of the reconfigurable logic element can be changed. The reason is that an operating state of the processing module software hardware is updated taking arrival of data as a moment and as a result the hardware module can be newly set to the reconfigurable logic element.

It is apparent that the present invention is not limited to the above embodiment that may be modified and changed without departing from the scope and spirit of the invention.

