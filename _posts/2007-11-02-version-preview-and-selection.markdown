---

title: Version preview and selection
abstract: Techniques for version preview and selection are described, including detecting a plurality of versions of an asset in a compound document, receiving an input indicating selection of a version, wherein the version is one of the plurality of versions, and updating the compound document with the version.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08145600&OS=08145600&RS=08145600
owner: Adobe Systems Incorporated
number: 08145600
owner_city: San Jose
owner_country: US
publication_date: 20071102
---
The present invention relates generally to software and compound documents. More specifically techniques for version preview and selection are described.

A compound document is a document that includes assets such as images spreadsheets digital videos digital audio and other multimedia features. Using conventional techniques a compound document is typically produced using word processing software or page layout software intermingling regular text with assets e.g. images spreadsheets digital videos digital audio and other multimedia features . Assets in compound documents typically have different versions. Conventionally different versions of an asset in a compound document are managed by deleting and replacing undesirable versions with desired versions. Conventional techniques such as a version control system are used to track multiple revisions of an asset. Changes to the asset are identified by incrementing an associated number or letter code. For example the initial version of an asset is assigned version number 1 and when the first change is made to the asset the version number is incremented to 2 and so on. With some conventional techniques a user can choose to update a given asset to the latest version of the asset. For example if a compound document has version 2 of an asset and the latest version of the asset is version 5 some conventional software allows the user to update the asset to version 5 but the user can not preview or choose version 1 version 3 or version 4 using conventional techniques. Users are unable to navigate between versions of an asset without incurring manually intensive efforts to add delete and replace assets e.g. images photos spreadsheets or the like . For example if a user wants to view different versions of an asset within the document the user must manually add one version view the version within the document delete the version and continue the process for each version the user wishes to view. This is both time consuming and labor intensive. Further conventional software does not allow users to freeze a compound document in time setting the current versions of the assets for the compound document and preventing unwanted updates to the compound document.

Thus a solution for previewing and selecting versions of an asset in a compound document without the limitations of conventional techniques is needed.

Various embodiments or examples may be implemented in numerous ways including as a system a process an apparatus or a series of program instructions on a computer readable medium such as a computer readable storage medium or a computer network where the program instructions are sent over optical electronic or wireless communication links. In general operations of disclosed processes may be performed in an arbitrary order unless otherwise provided in the claims.

A detailed description of one or more examples is provided below along with accompanying figures. The detailed description is provided in connection with such examples but is not limited to any particular example. The scope is limited only by the claims and numerous alternatives modifications and equivalents are encompassed. Numerous specific details are set forth in the following description in order to provide a thorough understanding. These details are provided as examples and the described techniques may be practiced according to the claims without some or all of the accompanying details. For clarity technical material that is known in the technical fields related to the examples has not been described in detail to avoid unnecessarily obscuring the description.

In some examples the described techniques may be implemented as an application or as a module or sub component of another application. The described techniques may be implemented as software hardware firmware circuitry or a combination thereof. If implemented as software the described techniques may be implemented using various types of programming development scripting or formatting languages frameworks syntax applications protocols objects or techniques including C Objective C C C AIR Flex Java Javascript Ajax COBOL Fortran ADA XML HTML DHTML XHTML HTTP XMPP and others. Design publishing and other types of applications such as Dreamweaver Shockwave Fireworks and InDesign may also be used to implement the described techniques. The described techniques may be varied and are not limited to the examples or descriptions provided.

Techniques for previewing and selecting versions of an asset in a compound document are described. Computer programs software or applications applications used to create or modify text visual graphic audio video or other types of content presentations and graphical user interfaces GUIs may be used to provide a displayed environment where users may preview and select versions of an asset in a compound document. As used herein the term compound document refers at least in one example to a document that includes assets such as images spreadsheets digital videos digital audio and other multimedia features. In some examples an asset in a compound document may have multiple versions. When multiple versions of an asset are available for association with a compound document a graphical user interface may be configured display options for previewing or selecting a version associated with the compound document. A user may select any version from multiple versions of an asset that are available regardless of the current version selected. For example if five versions of an asset are available and the current version selected is version 3 the user may change the selected version to version 1 version 2 version 4 or version 5. Further the selection of a version occurs in the displayed environment of the compound document the user may preview and select any version without exiting the environment of the compound document. In some examples users may select a version by browsing through each of the versions available using a graphical user interface associated with the compound document. In other examples users may select a version by entering the version number in a field association with a graphical user interface associated with the compound document. As used herein version number refers in at least one example to an associated number or letter code that is incremented to identify changes to an asset. In still other examples users may select a version by selecting the version from a menu presented in a graphical user interface. Once a version is selected the compound document is updated with the version. Thus the selected version becomes the version of the asset associated with the compound document. Further users may freeze the selected version of an asset by pinning the version to the compound document. As used herein pinning refers at least in one example to associating the selected version of an asset to the compound document permanently until it is un pinned. Pinning an asset to a compound document allows users to freeze a selected version of the asset in time setting the current version of the asset for the compound document and preventing unwanted updates to the compound document. As used herein un pinning refers at least in one example to disassociating the selected version of an asset from the compound document allowing users to freely select or preview other versions of the asset.

In other examples server may be implemented and used to deliver i.e. serve content information or data requested by one or more of clients . For example content requested by client may be performed using a web browsing application not shown installed on client . Content may include text documents files images photos applications or any type of information or data. When requested from server content may be delivered to the requesting client i.e. clients . In other examples server may be a server configured for a given purpose e.g. ad server web server content server application server web services gateway and others . In yet other examples server may be a server network configured for a given purpose e.g. ad server web server content server application server web services gateway and others . Techniques for previewing and selecting versions of an asset in a compound document such as those described herein may be implemented using the above described system and topology. In some examples previewing and selecting versions of an asset in a compound document may be performed locally on one or more of clients . In other examples previewing and selecting versions of an asset in a compound document may be performed remotely or in a distributed manner using server and one or more of clients . Further other system configurations topologies clients end devices and intermediate devices and implementation techniques may be used and are not limited to those described above.

Detection module may be configured to detect multiple versions of an asset in a compound document. In some examples detection module may detect one version of an asset in a compound document. In other examples detection module may detect more than one version of an asset in a compound document. When more than one version of an asset in a compound document is detected selection module may be configured to indicate selection of a version where the version may be selected from any version of the asset. Display module may be configured to provide a graphical user interface for selection of a version. In some examples a graphical user interface may have scroll arrows i.e. icons that provide directional suggestions for navigating between versions and a user may preview and select previous and later versions of an asset by pressing the left scroll arrow or the right scroll arrow respectively. In other examples a graphical user interface may have a field for entering a version number. In still other examples a graphical user interface may include a menu that presents the versions for selection. A transaction flow initiated by an interaction to select a version may be communicated using API from another application or operating system OS . Logic module may be implemented to provide logic control coordination command signaling and other functions and features for application . For example logic module may be configured to show each selected version of an asset in the compound document while a user browses through each of the versions. In other examples preview module may be configured to preview each selected version of an asset in the compound document.

In some examples a transaction flow initiated by an interaction to pin a version of an asset may be communicated using API from another application or OS. Logic module may be configured to pin an asset to a compound document and logic module may be configured to un pin an asset from a compound document. In other examples system and the described elements may be varied in implementation function or structure and are not limited to the examples provided.

Further users may freeze the selected version of an asset by pinning the version to document . Pin may be used to pin a selected version to document . For example here version 3 of asset has been selected. A user may press pin to associate version 3 of asset to document permanently until it is un pinned from document . Pinning version 3 of asset to document allows a user to set asset to be version 3 regardless of any updates or newer versions of asset . Using pin to set a selected version prevents unwanted updates to document . In some examples there may be a graphical representation that a version has been pinned to document not shown . Once a version of asset has been pinned to document scroll buttons and field may not change the version of asset . After a version has been pinned to document it may be un pinned by pressing pin again. In this example pin is a toggle switch used to pin or un pin versions of asset accordingly. In other examples pin may be implemented as two separate buttons for pinning or un pinning. In still other examples the pin may be implemented designed and function differently. In yet other examples system and the above described elements may be varied and are not limited to the functions structures configurations or implementations provided.

GUI scroll buttons field and pin may be implemented as described above in conjunction with GUI scroll buttons field and pin of . Menu illustrates an alternative graphical user interface for selection of a version. Although slight variations of asset are shown in in other examples versions of asset may have more variation. In some examples menu may be displayed after right clicking on asset . In other examples menu may be displayed after selecting a toolbar option in the application. After menu is displayed selection box may be used to select a version. Once a version is selected the compound document may be updated with the version and the selected version becomes the version of the asset associated with the compound document. Thus when the compound document is later opened or accessed the version selected is the version of the asset displayed and associated with the compound document. Further the selection of a version occurs in the displayed environment of the compound document the user may preview and select any version of the asset without exiting the environment of the compound document. In other examples system and the above described elements may be varied and are not limited to the functions structures configurations or implementations provided.

According to some examples computer system performs specific operations by processor executing one or more sequences of one or more instructions stored in system memory . Such instructions may be read into system memory from another computer readable medium such as static storage device or disk drive . In some examples hard wired circuitry may be used in place of or in combination with software instructions for implementation.

The term computer readable medium refers to any medium that participates in providing instructions to processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media includes for example optical or magnetic disks such as disk drive . Volatile media includes dynamic memory such as system memory . Transmission media includes coaxial cables copper wire and fiber optics including wires that comprise bus . Transmission media can also take the form of acoustic or light waves such as those generated during radio wave and infrared data communications.

Common forms of computer readable media includes for example floppy disk flexible disk hard disk magnetic tape any other magnetic medium CD ROM any other optical medium punch cards paper tape any other physical medium with patterns of holes RAM PROM EPROM FLASH EPROM any other memory chip or cartridge carrier wave or any other medium from which a computer can read.

In some examples execution of the sequences of instructions may be performed by a single computer system . According to some examples two or more computer systems coupled by communication link e.g. LAN PSTN or wireless network may perform the sequence of instructions in coordination with one another. Computer system may transmit and receive messages data and instructions including program i.e. application code through communication link and communication interface . Received program code may be executed by processor as it is received and or stored in disk drive or other non volatile storage for later execution.

The foregoing examples have been described in some detail for purposes of clarity of understanding but are not limited to the details provided. There are many alternative ways and techniques for implementation. The disclosed examples are illustrative and not restrictive.

