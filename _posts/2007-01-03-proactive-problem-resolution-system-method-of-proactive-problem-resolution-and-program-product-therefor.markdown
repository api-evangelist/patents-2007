---

title: Proactive problem resolution system, method of proactive problem resolution and program product therefor
abstract: A proactive problem resolution system, method of proactive problem resolution and program product therefor. User sensors extract data from user interaction with a computer terminal and pass extracted data to a sniffer agent. The sniffer agent checks for an indication of a user problem by comparing user behavior data against behavior data from previously encountered problems. When the sniffer finds a match, the computer terminal user may be asked if assistance is needed or the user may be automatically referred to the help desk. If a solution already exists for a problem that corresponds to the user behavior, that solution(s) is(are) presented at the computer terminal. Computer terminal users automatically receive problem support, even before it would otherwise be requested.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07984007&OS=07984007&RS=07984007
owner: International Business Machines Corporation
number: 07984007
owner_city: Armonk
owner_country: US
publication_date: 20070103
---
The present invention is related to Knowledge Management and more particularly to identifying tracking and resolving problems reportable to a customer service organization such as a Help Desk.

Corporations maintain customer service organizations to address customer problems with products to insure customer product satisfaction. Typically customers are given a number to call or an e mail address to contact should they have questions or encounter problems with products. The customers contact is generally known as the Help Desk. A typical Help Desk may receive thousands of product queries daily often reporting product problems.

However a customer must contact the help desk before a problem may be reported and one or more Customer Service Representative s CSRs is are assigned the responsibility of finding a solution to the particular problem. Frequently several different customers encounter identical problems. Normally problem history and corresponding solutions are made available to CSRs while customers remain unaware of whether a problem is a commonplace. So customer users can waste precious time and resources trying to resolve problems even problems with which the CSRs are well acquainted and may even have solutions readily available. Consequently system productivity is reduced by users searching for solutions to such well known system problems.

Moreover once a customer user does decide to seek help from the help desk the help desk generates what is known as a trouble ticket for the problem. In generating a trouble ticket the user may provide a vague problem description that makes it difficult to extract problem details and to decide which problems are more easily solved by a domain expert. Consequently manually creating trouble tickets may be a frustrating experience where help desk personnel collect spotty information and under pressure to reduce length of each help desk call. Unfortunately this frequently prolongs help desk turn around time by requiring multiple exchanges between customers users and support staff to fully exchange problem data to flesh out the problem and eventually to generate a trouble ticket. Further for newer less encountered problems unless every CSR is aware of prior solutions the customer user is likely to encounter a CSR that has to learn or rediscover the same previously used solution. While help desk software simplifies handling trouble tickets it does little to facilitate the generating new trouble tickets and resolving the related problems.

Thus there is a need for reducing time spent solving known system and application problems and thereby increasing user productivity by reducing the time to problem diagnosis.

It is yet another purpose of the invention to detect when customers users are wasting time solving problems for which there is a known fix 

It is yet another purpose of the invention to proactively assemble collateral information needed by a support analyst for diagnostic purposes in solving product problems 

It is yet another purpose of the invention to proactively initiate contact with support staff selecting the best medium for a given problem customer user and in consideration of any known fixes 

It is yet another purpose of the invention to share proactively collected problem data with help desk personnel to speed up problem determination and resolution.

The present invention is related to a proactive problem resolution system method of proactive problem resolution and program product therefor. User sensors extract data from user interaction with a computer terminal and pass extracted data to a sniffer agent. The sniffer agent checks for an indication of a user problem by comparing user behavior data against behavior data from previously encountered problems. When the sniffer finds a match the computer terminal user may be asked if assistance is needed or the user may be automatically referred to the help desk. If a solution already exists for a problem that corresponds to the user behavior that solution s is are presented at the computer terminal. Computer terminal users automatically receive problem support even before it would otherwise be requested.

Turning now to the drawings and more particularly shows an example of a proactive help desk for pro active problem resolution according a preferred embodiment of the present invention. The proactive help desk monitors system user activity e.g. at terminal for indications of user problems i.e. characterized by atypical user activity and automatically offers help without waiting for users to request help. Thus a preferred embodiment proactive help desk includes user behavior sensors to monitor terminal for user atypical activity or behavior that is indicative that the user needs help. Suitable user behavior sensors may include for example a keystroke logger a help function interceptor an Internet search interceptor and a program exit code interceptor . Data collected by the user behavior sensors are passed to a sniffer agent . Preferably the sniffer agent maintains a solution database a proactive log and a behavior database . It should be noted that user and customer or client are used interchangeably herein to indicate a product customer user unless indicated otherwise.

The solution database contains a collection of previously encountered help desk software problems and corresponding solutions. The sniffer agent uses information temporarily stored in the proactive log to monitor active query progress and user behavior in general. The behavior database contains previously identified atypical user behavior patterns that were indicative of a user problem. The sniffer agent matches ongoing user behavior from user behavior sensors with similar behavior for a particular problem in the behavior database and any corresponding solution in the solution database and proactively presents the user with an opportunity to request help e.g. in a user help window e.g. in a web browser window to the user at terminal . The sniffer agent also generates trouble tickets from the proactive log for each problem whether resolved or unresolved. The trouble tickets are forwarded to help desk software e.g. for consideration by a Customer Service Representative CSR .

So according to a preferred embodiment of the present invention the sniffer agent uses sensor information from the user behavior sensors to monitor activity at terminals . The sniffer agent determines when a particular user has encountered a problem and has begun problem determination that may be characterized by atypical behavior or unknown problems e.g. by a user searching for help. The terminal may be any suitable network interface providing access to system users that may encounter problems and require support such as for example a workstation a personal computer PC running a graphical user interface GUI a wireless unit with Internet access e.g. wi fi or a cell phone web browser or any other suitable appliance. Normally the user behavior sensors and a sniffer agent are located locally to the user e.g. at terminal .

Atypical user behavior may be identified from user interaction for example by keyword searches in a typical web search engine by using a diagnostic application or by other web usage. Typical web search engines include for example Google or Yahoo . Microsoft Windows Help from Microsoft Corporation is an example of a typical diagnostic application. The sniffer agent sniffs this interaction and parsed into terms that are compared against keywords for previously identified problems. The sniffer agent proactively collects user behavior data from the user sensor agents such as troubleshooting information. The sniffer agent compiles and stores the collected information in a trouble ticket and analyzes the user behavior information to initiate and facilitate help desk support. Also the sniffer agent uses the behavior analysis to determine whether any previously resolved problem matches the current user problem and whether a solution was found for that prior problem to facilitate initiating proper help desk support requests. Support requests are routed appropriate to Information Technology IT support staff based on problem signature support request. Previous problem fixes are compiled and stored in the solution database for sharing with the user community based on the number of matching actions.

The sampling results are temporarily stored in the proactive log in . In step the sniffer agent performs interaction classification to identify indications of user problems such as encountering program error codes and using search terms that are classified as indicating the user has encountered errors. Then in step a determination is made whether the interaction classification results indicate that problem determination assistance is necessary e.g. an error was encountered. If not then returning to step the next incoming sample is placed in the proactive log. Otherwise if in step it is determined that user assistance may be necessary then in step a determination is made of whether user feedback may be necessary or desired. If so in step the user is prompted as to whether the user is encountering a problem and so a problem determination session should be recorded. If the user responds by indicating that a problem has not been encountered then returning to step the next incoming sample is placed in the proactive log. Otherwise if the user indicates that a problem has been encountered in step or if it is determined in step that user feedback is unnecessary then the help desk enters problem determination PD mode in step and begins interaction recording.

In interaction recording step session activity is recorded collecting for example search queries help interactions configuration file modifications and registry modifications. Next in step the recorded interaction information is classified as to whether it is troubleshooting i.e. indicates the user is experiencing a problem. In step a determination is made whether the help desk is still in problem determination mode for the current matter e.g. a timeout has occurred for the current problem. If problem determination mode does not apply then in step the result is checked to determine whether the problem was successfully resolved and if so the recorded data is shared. If the problem was resolved in step then in step the problem and result are reviewed and in step the solution database is updated. After updating the solution database or if in step the problem was not successfully resolved then retuning to step more user input data is collected.

If in step however problem determination mode still applies then in step problem data is searched for similar problems. For example the Internet may be searched for similar problems or a system data search may be used. In step a determination is made of whether the search should be presented to the user and if so in step the search results are displayed and the results are added to the solution database . The results may be displayed for example by providing the problem side by side with the solution e.g. in browser at the terminal of . Also at the same time the user may be offered additional help e.g. including a help button icon with the results. In step if it is determined not to show advice or subsequent to displaying the results to the user in step a determination is made of whether to create a virtual trouble ticket in step or if a virtual trouble ticket is premature. If a virtual trouble ticket is not created then retuning to step more user input data is collected. Otherwise in step the problem data is reviewed and in step forwarded the help desk.

The search terms in the first relation are intercepted by interposing on systems calls help software input dialogs direct entry into universal help providers and terms extracted from web search queries. The first relation includes keywords sorted in some stable order e.g. lexigraphically. The second relation represents a program exit code interception with related data from system logs and system call interception. So the second relation includes the name of an application and related exit data for that application . The third relation includes program launch data for other programs running at the time of the problem. The program launch data may include for example the system log results from a contemporaneous scan of the running applications and system call information from the programs running at the time of the problem. The fourth relation lists the URIs that were visited during the troubleshooting timeframe.

Browsing behavior may be scored and a bit vector of keyword hits may be created. Observed system failures may be scored including for example abnormal application exits an Internet Control Message Protocol ICMP connection refusals to host a selected site and results in keyword matches. Both logged user activities and observed system failures are matched against signatures of known problems. So for example problems that match both browsing behavior and observed system failures that are likely to be root causes may be assigned a score of 2 and problems that only match one dimension are signed may be assigned a score of 1. A severity score may be assigned that accounts for the time that a user has spent so far in problem determination mode any application or system affected by problem and the user identity. These problems are sorted within the same score by occurrence frequency as determined by counting closed trouble tickets. Once sorted generated trouble tickets are routed to analysts who solved most problems with similar suspected root cause.

Upon closing a trouble ticket the analyst is prompted to classify the problem that was just solved. Signatures may be presented in hierarchical view. The trouble ticket is interposed on existing trouble ticket solutions e.g. sniffing window events to activate classification when analyst indicates the problem is solved. Preferably this is presented to help desk solution partners through an integrated application programming interface API .

Advantageously the present invention provides a specialized client side agent for proactive support notification with signature based two dimensional scoring and based on time thresholds for user behavior in order to determine problem severity. User problems are automatically detected and problem determination may be automatically entered using user behavior analysis in order to initiate a help desk support request. Automatic problem detection may be from user behavior based on keywords application and web usage in order to proactively collect troubleshooting information. Search terms may be automatically matched as entered into a Web search engine e.g. Google or computer system help function e.g. Windows help to a support desk database regarding known infrastructure problems. Customer trouble tickets are automatically routed with a support request to an IT support staff based on the signature of support requests entered into Web search engines or help functions of the operating system. Results from previously solved problems are shared within the user community.

While the invention has been described in terms of preferred embodiments those skilled in the art will recognize that the invention can be practiced with modification within the spirit and scope of the appended claims. It is intended that all such variations and modifications fall within the scope of the appended claims. Examples and drawings are accordingly to be regarded as illustrative rather than restrictive.

