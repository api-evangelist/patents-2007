---

title: Efficient certified email protocol
abstract: An exemplary optimistic protocol for a two-party transaction includes a setup sub-protocol that includes an authorized Diffie-Hellman key agreement, an exchange sub-protocol that includes sending a certificate from a sending party to a receiving party and sending a receipt from the receiving party to the sending party and a dispute sub-protocol that includes a dispute resolution mechanism for resolving disputes between the sending party and the receiving party due to sending of an invalid certificate, due to sending an invalid receipt, or due to abortion of the exchange sub-protocol. Other exemplary methods, systems, etc., are also disclosed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08341410&OS=08341410&RS=08341410
owner: Microsoft Corporation
number: 08341410
owner_city: Redmond
owner_country: US
publication_date: 20071008
---
In the world of postal delivery when a registered letter arrives a person officially receives the letter if and only if that person signs an acknowledgement that attests to receipt of the letter. In this example two actions i.e. signing an acknowledgement and receiving the letter occur simultaneously. In an electronically connected world electronic mail i.e. emails are used widely. Most people prefer email to snail mail when communicating with others due to convenience and fast delivery as well as documentation e.g. a sent items box . To place email on par with conventional postal delivery an email system should include some type of function that provides the same assurance as a registered letter. In particular such a function should require a receiver of an email to sign an acknowledgement of reception before the registered email can be read.

In contrast to the world of postal delivery for registered letters for an email system the two actions i.e. signing and receiving cannot occur simultaneously due to the email system s distributed nature protocols used in an email system are asynchronous by nature.

Some services exist that can provide a registered letter in a distributed environment. For example a so called certified email protocol also known as the non repudiation protocol can provide for a fair exchange of a message and an undeniable receipt between two untrusted parties over a network such as the Internet.

In addition to certified emails a certified email protocol can also be used in many other applications. One application is to secure an itinerary of a mobile agent where a certified email protocol is applied between two adjacent hosts when a mobile agent passes from one host to the other. In this context the non deniable message and receipt offered by a certified email protocol can be used to identify the origin of an attack if the itinerary of the mobile agent is altered. Other applications that can benefit from a certified transaction protocol include applications that encourage people to share or propagate contents such as self created movies or advertisements where a certified email protocol can help assure that users who share content get awards by redeeming the receipts from those that receive the content.

Certified email protocols have been studied widely by the cryptography research community. Certified email protocols address a problem that is essentially a subset of a problem addressed by the so called fair exchange protocol where exchanged items are not necessarily restricted to messages and receipts as in certified email protocols i.e. digital items other than emails can be exchanged using the fair exchange protocol . For example both parties can exchange signatures signed by each individual party in a fair exchange protocol.

Depending on the availability and setting of a Trusted Third Party TTP fair exchanges can be classified into the following four types 1 without a TTP 2 with an inline TTP 3 with an online TTP and 4 with an off line TTP. For the first type of fair exchanges as early as in 1980 studies showed that it is impossible to realize fairness in a deterministic two party fair exchange protocol. Existing protocols can provide only partial fairness computational fairness or probabilistic fairness. Such protocols however tend to be too complex and inefficient to be applied in practical applications e.g. distributed Web based applications . For the second type of fair exchanges the TTP acts as an intermediary between the sender and the receiver and the entire message is sent through the TTP. An inline TTP can provide full fairness since all exchanged messages are fully controlled by the TTP. The TTP however may become a performance bottleneck especially when many large messages have to be forwarded at the same time. For the third type an online TTP which is similar to an inline TTP must be available for the entire lifetime of the exchange. In such a setting the TTP does not need to forward the entire message. Only the signaling information such as the cryptographic key is processed and forwarded by the TTP. For the last type of fair exchanges also known as the optimistic protocol the TTP is involved only if one of the parties behaves maliciously or the communication channel is interrupted during execution of the exchange protocol. This property is practical in many applications including the distributed environment mentioned above e.g. distributed Web based environment .

Aside from specific certified email protocols various generic certified email protocols exist where generic encryption and signature primitives are used. Such generic certified email protocols usually utilize the following approach i encrypting a message by a symmetric encryption scheme ii encrypting the key used in the symmetric encryption by a public key encryption scheme with the TTP s public key and iii signing the resulting cipher text by a signature scheme with the sender s private key. In such a scheme when the receiver receives the signature the receiver first checks validity of the received signature. If it is valid the receiver sends a receipt to the sender to indicate that the receiver has received the message. The receiver s interest is protected since if the sender refuses to reveal the exchanged message the TTP can reveal the message for the receiver.

Overall the off line TTP approach has advantages yet to date off line TTP certified email protocols lack efficiency. As described herein various exemplary techniques can improve efficiency of off line TTP certification protocols. Such techniques may be implemented in the context of email and or other transactions that occur in a distributed environment.

An exemplary optimistic protocol for a two party transaction includes a setup sub protocol that includes an authorized Diffie Hellman key agreement an exchange sub protocol that includes sending a certificate from a sending party to a receiving party and sending a receipt from the receiving party to the sending party and a dispute sub protocol that includes a dispute resolution mechanism for resolving disputes between the sending party and the receiving party due to sending of an invalid certificate due to sending an invalid receipt or due to abortion of the exchange sub protocol. Other exemplary methods systems etc. are also disclosed.

Various exemplary techniques implement an authorized key agreement in a fair exchange protocol. A certified email protocol also known as a non repudiation protocol allows a message to be exchanged for an acknowledgement of reception in a fair manner a sender Alice sends a message to a receiver Bob if and only if Alice receives a receipt from Bob. As described in more detail below an exemplary approach applies the authorized Diffie Hellman key agreement protocol to construct certified email protocols. Such an exemplary approach results in an optimistic certified email protocol with an off line trusted third party being involved only when a party cheats or for example a communication channel is interrupted during an exchange.

Information from comparative trials with other optimistic certified email protocols indicate that an exemplary certified email protocol with an authorized key agreement is the most efficient optimistic certified email protocol.

An exemplary protocol described herein is a certified email protocol with an off line TTP. Such an exemplary protocol can allow for encryption of a message in the context of a certified email protocol. In contrast to other certified email protocols with an off line TTP which use an off line TTP s public key to encrypt a randomly selected message encryption key so that the TTP can extract the message encryption key to reveal the message in the execution of the dispute protocol an exemplary protocol encrypts a message with a key shared between the sender and the TTP yet without involving the TTP during the exchange. In such an exemplary approach the conventional step to apply a public key encryption scheme to encrypt the message encryption key is not required which results in a more efficient protocol.

The exemplary timeline shows a series of events which may be categorized as corresponding to portions of a protocol e.g. sub protocol and phases involved in a transaction. For example during an initializing phase that involves key generation the TTP selects a private key Private T and computes a public key Public T and User A selects a private key Private A and computes a public key Public A and registers key with CA to get a certificate that binds User A with the User A s public key Public A .

In a message preparing and sending phase User A encrypts a message and sends an encrypted message and information including a message description and the certificate to User B .

In a receiving phase User B checks the certificate of User A and performs another check of the information received. If both checks are OK then User B sends a signature to User A .

In a validating phase User A receives the signature from User B and checks the signature to see whether it is valid. If the signature is valid then User A sends information to User B to decrypt encrypted message .

In a decrypting phase User B receives the information from User A and decrypts the encrypted message . However if User B i does not receive the information or ii the decrypted message does not match the previously received message description then User B can invoke a dispute protocol e.g. a dispute resolving phase .

An exemplary protocol operates in conjunction with the authorized Diffie Hellman key agreement to share a message encryption key between a sender and a TTP. Such an exemplary protocol is fair and optimistic and exhibits the following properties 

Fairness Like other certified email protocols the exemplary protocol guarantees fairness i.e. a malicious party cannot gain any advantage over the other party in exchange of a message and a receipt 

Optimism The TTP is involved only when one party conducts malicious behavior or the communication channel is interrupted during exchange which makes the protocol optimistic 

TTP s Statelessness The TTP does not need to store any state information during execution of the protocol for example no state information is required to deal with disputes between two parties and

High Performance The exemplary protocol exhibits in performance tests the smallest computational and communicational cost compared to other tested certified email protocols.

An exemplary protocol may further include features to deal with subtle issues of timely termination. In various examples confidentiality of a message is addressed where to gain fairness a message m is encrypted. In an exemplary exchange a transaction involves exchanged message m and the signature of message m .

The setup algorithm takes as input a security parameter and outputs a public key G q g H y and a secret key x where q is a large prime G is a finite cyclic group with the generator g of order q H is a cryptographic hash function 0 1 Z and y g G. M is the domain of messages.

The sign algorithm signs a message m M by applying the following operations 1 choose a random r Z 2 compute R g G and 3 set the signature to be R s where s r xH m R y mod q.

The verify algorithm verifies a signature. For example to verify a signature for message m the verifier checks gRy G. If the equation holds the signature is valid and output b 1 otherwise the signature is invalid and the algorithm outputs b 0.

In response to receipt of a signature at a step User A sends information to User B to decrypt the message. A decision block decides if User B received the information to decrypt the message. If the decision block decides that User B did not receive the information then the method reports to the off line TTP per step otherwise the method continues at another decision block that decides whether the received information matches or corresponds to the previously received encrypted message see step . If the information does not match or correspond then the method reports to the TTP at step otherwise the method proceeds to a step where the transmission from User A to User B is acknowledged as successful e.g. OK .

According to the method the transmission of a message e.g. an encrypted message from the sending party User A to the receiving party User B occurs as a two party transaction and only if an issue arises does a third party TTP become involved. Hence the method provides for efficient transmission with assurances of third party oversight and dispute resolution.

As already mentioned with respect to an exemplary certified email protocol includes three sub protocols the setup sub protocol the exchange sub protocol and the dispute sub protocol . For example in assume that User A is Alice a sender sending party User B is Bob a receiver receiving party and the TTP is Charlie. Also assume that the public key Public CA of the Certification Authority CA and the three parties are known to everyone. Let m denote the sent message or as encrypted the encrypted message and let denote the receipt i.e. the signature from User B Bob .

Given the aforementioned conditions the sub protocol can choose system parameters q G g where q is a large prime and G is a gap Diffie Hellman GDH group with the generator g whose order is q. Then Charlie selects his random private key Private T x Z and computes and publishes the corresponding public key Public T y g G.

Alice also selects her random private key Private A x Z and computes the corresponding public key Public A y g G. But she registers her public key Public A and her system parameter with a CA to get her certificate Cwhich binds her identity IDwith the corresponding public key Public CA q G g y .

According to this example a finite cyclic group G with the generator g whose order is prime q is a gap Diffie Hellman GDH group if the following first problem can be solved in polynomial time but no p.p.t. algorithm can solve the following second problem with non negligible advantage over a random guess within polynomial time. Also a decisional Diffie Hellman problem can be characterized as given g g g g G G G G decide whether c ab Z where a b c are three random numbers in Z . In this problem if c ab Z then g g g g is a Decisional Diffie Hellman DDH tuple. A computational Diffie Hellman problem is characterized given g g g G G G to compute g G where a b are two random numbers in Z .

For the exchange sub protocol Alice sends to Bob a message or as encrypted an encrypted message C with message information referred to in this example as a message description Dsc and Alice receives a receipt e.g. signature from Bob . The message description Dsccan be configured to enable a user to verify a message. For example a simple description is the hash value of the message. The actual description can depend on the application that uses the protocol. When used in an application to encourage sharing multimedia Dscmay be a description of the multimedia content such as its title creator etc. Noting that in general knowledge of the description Dscdoes not disclose its message m.

In the sub protocol the message description Dscis used to check if a decrypted message matches its description. In the following description E D is a pair of symmetric encryption and decryption operations with the encryption key k. H H and H are cryptographic hash functions. The sub protocol can proceed according to the following example 

The parameter Rcan be used as a part of the key material in the Diffie Hellman key agreement in the dispute sub protocol the parameter Ris the resulting key of the Diffie Hellman key agreement. The set R s is a signature on C R Dsc ID ID ID corresponding to the public key yobtained by using the modified Schnorr signature scheme. Noting that in item II above Bob s signature can be any suitable type of signature.

Alice can use the signature she receives from Bob as a receipt to prove to another person e.g. John that Bob has received the message from her according to the following procedure 

In various examples an exemplary protocol uses a gap Diffie Hellman group. In such examples Alice can determine whether g R y R is a DDH tuple or not by using some special algorithms such as pairing. In some applications Alice may need to prove only to the TTP that Bob has received message e.g. where John is the TTP . In this case the protocol is the same as described above except that the gap Diffie Hellman group can be replaced with a finite cyclic group whose CDH problem is computationally hard noting that a gap Diffie Hellman group is always a CDH hard group but not vice versa and it is not necessary to use a gap Diffie Hellman group s algorithms such as pairing to solve the DDH problem. Since the TTP already knows its own secret key Private T x the TTP can determine whether g R y R is a DDH tuple by checking whether R Rholds.

With respect to the dispute sub protocol if Bob has sent his signature to Alice but has not received the parameter R or the received parameter Rfrom Alice is invalid Bob can invoke the dispute sub protocol and send to the TTP Charlie the information C R R C Dsc ID ID ID s e.g. sometimes referred to as an information vector . With respect to a received parameter Rbeing considered invalid if the decrypted message does not match its description Dsc or R H R then the parameter Rcan be considered invalid. Upon receiving the data e.g. the vector from Bob The TTP Charlie can perform the following operations 

1. Charlie first validates the received data. This step can be the same as the data validation steps in the exchange sub protocol . Charlie aborts if the validation fails. Otherwise Charlie continues.

2. Charlie computes the parameter R R G and applies the decryption operation to obtain the message D C . If the message does match its description Dsc and R H R Charlie sends the parameter Rto Bob and the signature to Alice .

If the message does match its description Dsc or R H R Alice cannot use Bob s signature as a receipt to prove to others that Bob has received the message from her since the data validation described would fail see e.g. aforementioned validation test .

As described herein an exemplary optimistic protocol for a two party transaction includes a setup sub protocol that includes an authorized Diffie Hellman key agreement an exchange sub protocol that includes sending a certificate from a sending party to a receiving party and sending a receipt from the receiving party to the sending party and a dispute sub protocol that includes a dispute resolution mechanism for resolving disputes between the sending party and the receiving party due to sending of an invalid certificate due to sending an invalid receipt or due to abortion of the exchange sub protocol. With respect to the latter the exchange sub protocol may be aborted for any of a variety of reasons including action by a party hardware failure software failure transmission failure etc. In such a protocol the transaction may be an email transaction. In such a protocol the exchange sub protocol can include sending an encrypted message with the certificate.

An exemplary exchange sub protocol can include sending decryption information from a sending party to a receiving party to decrypt information sent previously from the sending party to the receiving party. An exemplary exchange sub protocol can include sending information from a sending party to a receiving party and comparing the information against information sent previously from the sending party to the receiving party. In such a sub protocol an unfavorable comparison can invoke a dispute sub protocol for example a dispute sub protocol that involves a trusted third party e.g. normally an off line party to a two party transaction .

An exemplary protocol includes an authorized Diffie Hellman key agreement that includes sharing an encryption key between a sending party and a trusted third party e.g. normally an off line party to a two party transaction . In various exemplary optimistic protocols a sending party and a receiving party transact via a distributed application operating in a distributed computing environment e.g. a Web base application .

An exemplary setup sub protocol includes binding a public key of the sending party to a certificate for the sending party. Such a sub protocol can include a modified Schnorr signature scheme for generating a signature for a receiving party which can then be sent to another party.

In the example of an encrypted message a description of the message and a certificate are sent to a receiver. However as an alternative a description of the message and the certificate may be sent without the message. For example where the message is not encrypted but where a trusted party dispute mechanism is desired the message may be sent at a later time after the sender receives a receipt or signature from the receiver.

In general a sender will send an encrypted message and some information related to a message along with a certificate a receiver will send a receipt and if the receipt is valid then the sender will send information to decrypt the encrypted message where the receiver can check the decrypted message against the previously received information.

An exemplary method includes providing a public key to a certification authority receiving a certificate from the certification authority that binds the public key sending an encrypted message and the certificate to a receiving party receiving a signature from the receiving party and in response to the receiving sending information to the receiving party to decrypt the message. Such a method can include sending a description of the message with the encrypted message.

An exemplary method includes generating a signature receiving an encrypted message and a certificate from a sending party sending the signature to the sending party receiving information from the sending party to decrypt the message and decrypting the message. Such a method can include generating the signature using a modified Schnorr signature scheme. In such an exemplary method a receiving party can receive a description of the message from the sending party prior to the decrypting and then compare a decrypted message against the description of the message. For example the description can include information that can be compared against information in the decrypted message. If the comparison is favorable then no further action need be taken. However if the comparison is not favorable then the receiving party can act to resolve the dispute with a trusted third party.

As already explained with respect to disputes may arise at various points as actions are taken or omitted by a sender and or a receiver. In addition faulty information can give rise to a dispute. Further equipment and or software failure can give rise to a dispute. In general abortion of an exchange protocol for any of a variety of reasons can give rise to a dispute. For example during a transmission failure a sending party or a receiving party may invoke a dispute mechanism e.g. to ensure a proper transaction to notify that a problem occurred with a transaction to provide diagnostic information etc. .

In the method per an invocation block a receiver invokes a dispute sub protocol noting that any party to a transaction may invoke the dispute sub protocol. In various examples a transaction involves sending a message from a first party e.g. a sending party to a second party e.g. a receiving party . As described herein other types of transactions are possible and various parties to such transactions may invoke such a dispute sub protocol assuming some basic requirements are met as discussed above e.g. i iv .

In a validation block a third party validates data e.g. information received by the receiver e.g. certificate description of a message receipt etc. . Next in a computation and decryption block the third party computes a parameter e.g. the parameter R and then performs a decryption operation to decrypt the encrypted message that a sender has sent to the receiver. With the message decrypted the third party decides per a decision block if the decrypted message matches the description provided by the receiver e.g. as received from a sender . If the decision block decides that the message does not match the description then per a conclusion block the method concludes that the sender cannot prove that the receiver received the message. However if the decision block decides that the message matches the description then per a send block the third party sends the parameter e.g. the parameter R to the receiver and sends the receiver s signature or receipt to the sender.

Security of an exemplary certified transaction protocol e.g. the protocol of can be analyzed as follows. The modified Schnorr signature scheme is secure against the adaptively chosen message attack with the discrete logarithm DL assumption in random oracle model and public key substitute attack. Consider a proof compared with the original Schnorr signature scheme the only difference in the modified Schnorr signature scheme is H m R y instead of H m R . In a random oracle model however both hash oracles can choose to respond with the same output to the query to H m R y on input m R y and the query to H m R on input m R . Since the Schnorr signature scheme is proved to be secure against the adaptively chosen message attack with the DL assumption in the random oracle model one can conclude that the modified Schnorr signature scheme is also secure against the adaptively chosen message attack in random oracle model. According to the security analysis on the other hand the modified Schnorr signature scheme can resist the public key substitute attack i.e. there exists only a negligible possibility that a different public key can be found to satisfy the signature corresponding to a specified public key. As a result we conclude that the lemma holds.

Consider an assumption that the Computational Diffie Hellman CDH assumption holds and the hash function H is a secure one way hash function then only Alice sender and Charlie TTP can deduce the message encryption key k which is used to encrypt the message m in an exemplary certified transaction protocol. Consider a proof only Alice sender can produce a valid signature R . In other words the parameter Ris guaranteed to be generated by Alice i.e. no one can impersonate Alice to send a valid parameter R. Since the hash function H is a secure one way hash function the only way to deduce the message encryption key k is to deduce the value of the parameter R. The CDH assumption implies that it is impossible to deduce a value for the parameter Rfrom Rand y. Therefore no one except the person who knows r or xcan deduce the value of k. This means that only Alice sender and Charlie TTP can deduce the message encryption key k.

An exemplary certified transaction protocol can provide fairness. Consider a proof based on the description presented in the above when an exchange sub protocol is executed normally i.e. when Alice sender and Bob receiver are honest and the communication channel works Bob receives the message sent by Alice Alice receives a receipt from Bob and Charlie TTP is not involved.

Also if Alice and Bob are both honest but the communication channel does not work during the execution of an exchange sub protocol Alice can invoke the dispute protocol to ask for assistance from Charlie TTP to complete the exchange. Therefore fairness holds in these two cases. In other cases an exemplary protocol can also provide fairness i.e. Alice sender and Bob receiver cannot take advantage of each other in the process of execution of the protocol even if he or she behaves maliciously. Such cases can be classified as follows 1 Alice is honest but Bob is malicious 2 Bob is honest but Alice is malicious and 3 Alice and Bob are both malicious.

In the examples Alice aims to obtain Bob s receipt without sending the message m to Bob or to make Charlie abort in dispute sub protocol . In the protocol Alice may cheat in either of two steps of the exchange sub protocol .

In the example per block if Alice does not send the authorized data e.g. C R R Dsc s or other information that allows others to ensure that Alice is the sender to Bob per block Bob will not send his valid receipt to Alice.

In the example if Alice does not send the right R R to Bob Bob would send the valid receipt to Alice per block . In this context right means that Charlie and Alice would result in the same symmetric encryption key k and R H R However per block Alice cannot use the received receipt from Bob to prove to others that Bob has received the right message m from her which means the receipt Alice received is useless. Therefore Alice has to send the authorized and correct information e.g. C R R Dsc s to Bob in this step. In the latter one if Alice sends invalid Rto Bob or does not sends Rto Bob Bob can invoke the dispute sub protocol to get m. If the received message m does not match its description the receipt Alice obtains from Bob is useless since she cannot prove to others that Bob has received the right message m from her. In conclusion our protocol can provide fairness in this case too.

An exemplary certified transaction protocol was compared with others to assess performance. In the context of optimistic certified email protocols the others were based on public key cryptography technologies. Public key cryptography takes much longer time than symmetric key cryptography or secure hash functions. In public key cryptography the most time consuming operation is the modular exponentiation calculation. The ratio of the time taken for a modular exponentiation operation to the time taken for a single modular multiplication is linearly proportional to the exponent s bit length. As a result a comparison can ignore single modular multiplications and other non public key cryptography algorithms such as symmetric encryption symmetric decryption and hash function in a theoretical analysis of protocol efficiency for purposes of comparing an exemplary certified email protocol with other certified email protocols.

One comparison protocol is based on the ElGamal scheme and the Schnorr scheme denoted as Wan05a . Another is based on RSA denoted as Wan05b . An exemplary certified email protocol is compared with these two protocols in an efficiency comparison. In this comparison EXP is used to denote the time taken by one modular exponentiation operation that ElGamal encryption scheme or the Schnorr scheme need. The term EXPdenotes the time taken by one modular exponentiation operation that RSA signature or RSA decryption needs and EVdenotes the time taken by one modular exponentiation operation that RSA verification or RSA encryption needs. It is assumed that the tested exemplary protocol uses the same group G as the group in Wan05a even though it is a multiplication group of a finite field or a finite rational point group over an elliptic curve.

Table 1 shows the time cost of an exemplary protocol Ex. P. as well as the Wan05a and Wan05b protocols. For purposes of this comparison the time costs in the setup phase and the certificate verification process are ignored. From the information in Table 1 the exemplary protocol saves one modular exponentiation operation in the exchange sub protocol as compared with Wan05a. For example if Alice sender needs to prove to only the TTP that she has sent the message m to Bob receiver one protocol saves one modular exponentiation operation in the proving process. If Alice needs to prove to others then the exemplary protocol needs one pairing operation which is typically slower than the two modular exponentiation operations needed in the Wan05a protocol. A comparison of the exemplary protocol with Wan05b is more complex due to different public key cryptography systems used in the two protocols. The Wan05b protocol uses RSA while the ElGamal encryption scheme and the Schnorr signature scheme are used in the Wan05a protocol and the exemplary protocol is based on a discrete logarithm problem and as a result can take the advantage of Elliptic Curve Cryptography ECC which uses much shorter keys than and is therefore much faster than RSA for the same security level. For example RSA with 2048 bits of key length has the same security level as ECC with 224 bits of key length and ECC 224 is 7.8 times faster than RSA 2048 in full length modular exponentiation. Therefore the exemplary protocol is also much more efficient than the Wan05b protocol. In conclusion the exemplary protocol is more efficient than both the Wan05a and Wan05b protocols which were considered two of the most efficient certified email protocols with an off line TTP.

As described herein various exemplary techniques allow for construction of an exemplary certified transaction protocol. While various examples pertain to email other such exemplary techniques may be applied to other types of transactions. An exemplary protocol is based on the authorized Diffie Hellman key agreement. A comparison shows that for email transactions an exemplary protocol is more efficient than conventional certified email protocols in terms of the number of exponentiations and communication data. Due to its efficiency an exemplary certified email protocol is suitable for use in applications that execute in a distributed environment e.g. distributed applications Web 2.0 applications etc. .

As already explained a protocol over a network is asynchronous by nature. Cheating can easily occur in some steps of a sequential procedure if there is no trusted party present. As described herein an exemplary certified transaction protocol enables a fair exchange of information e.g. a message and an undeniable receipt between two untrusted parties over a network such as the Internet without a Trusted Third Party TTP . In such an exemplary scheme neither of the two parties involved in an exchange can cheat to gain favor. Such a fair exchange protocol has many potential applications such as a mobile agent passes from one host to another a system to encourage users to share or distribute contents such as Ads with or to others by giving the contributors receipts which can be later converted into awards.

An exemplary protocol for transactions empowers users to share information. For example such a protocol can be implemented in a distributed environment and provide security measures that encourage users in a distributed environment e.g. Web users to share media such as photos movies songs etc. Such a protocol can be used within a research environment a legal environment a reward environment etc. For example where research results are important to regulatory review the regulatory agency may require that transactions occur using an exemplary protocol with an off line TTP. In legal matters court filings and or filings between parties in a legal matter may occur using an off line TTP. In some instances the court e.g. the clerk of the court may act as a TTP to ensure that parties to a litigation exchange emails court filings evidence etc.

In Web advertising hits payments or rewards may be checked where necessary using an exemplary protocol with a TTP. For example an advertising scheme may encourage people to share content and ads with others. In the Alice sender and Bob receiver context when Alice sends content with an ad to Bob then according to the scheme Bob receives the content views the ad and sends a receipt e.g. signature to Alice. Once Alice has the receipt she can present the receipt to claim a reward for spreading the ad.

An exemplary protocol may be used with content such as a YouTube video e.g. a video distribution site on the Internet where a certified email directs people to the content along with advertising. For example Alice has content from YouTube and desires to send it to Bob. So in an exemplary certified scheme Alice sends the content to Bob and Bob sends a receipt to Alice. Alice then sends the receipt to YouTube or an associated party e.g. an advertiser and collects a reward. In turn Bob may send the content to another party e.g. Mark via a certified email and receive a receipt in return. If a dispute arises according to an exemplary protocol a TTP can determine who is cheating.

In various aforementioned examples efficiency can help in speeding distribution of content which can help content reach as many people as possible in the shortest amount of time.

An exemplary protocol dictates a sequential exchange between two parties in a manner that guarantees a mechanism to resolve disputes. In such an example the parties may be two servers that periodically make exchanges. For example Server A can send information to an agent of Server B and when Server B receives the information it can send a receipt to Server A. Disputes between the servers can be resolved using a TTP.

While various examples refer to parties to a transaction as untrusted an exemplary protocol may be used for trusted parties where communication falters or where other issues arise that are amenable to resolution by a TTP.

In a very basic configuration computing device typically includes at least one processing unit and system memory . Depending on the exact configuration and type of computing device system memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. System memory typically includes an operating system one or more program modules and may include program data . The operating system include a component based framework that supports components including properties and events objects inheritance polymorphism reflection and provides an object oriented component based application programming interface API such as that of the .NET Framework manufactured by Microsoft Corporation Redmond Wash. The device is of a very basic configuration demarcated by a dashed line . Again a terminal may have fewer components but will interact with a computing device that may have such a basic configuration.

Computing device may have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well know in the art and need not be discussed at length here.

Computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a network e.g. consider the aforementioned network of . Communication connections are one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules etc.

Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

