---

title: Remote automated volume mounting
abstract: A method and apparatus for remotely and automatically mounting volumes over a network. The invention uses an interface, such as a web browser, to authenticate a client on a server. The server supplies volume mounting parameters specific to the authenticated client via a plug-in installed on the client. The plug-in then interacts, in one embodiment of the invention, with file system software on the client and automatically mounts the volume(s) in accordance with the supplied parameters.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08572215&OS=08572215&RS=08572215
owner: Apple Inc.
number: 08572215
owner_city: Cupertino
owner_country: US
publication_date: 20070618
---
This application is a continuation application of U.S. Patent Application 09 751 903 filed 12 28 2000 now U.S. Pat. No. 7 249 168 entitled Method and Apparatus for Automated Remote Volume Mounting Using a Plug In Installed on a Client which is incorporated herein by reference.

The present invention relates to software for computer systems and networking. More specifically the present invention relates to the accessibility of remote storage devices.

Disk drives logical or physical partitions of disk drives and even file servers are all often referred to loosely as volumes . Computer operating systems typically have commands and procedures for mounting disk drives such as floppy drives hard drives and CD Compact Disc drives to make them available to the user. On a local machine such mounting can be done once during the installation of the drive and thereafter will be accessible upon any system startup instance. Drives may also be hot swapped so that they are recognized by the operating system and made available to the user instantly upon interfacing with the computer s hardware.

Over a local area network LAN client machines can connect to volumes hosted by servers over the LAN depending on their authentication and permissions. To connect or mount such networked volumes one common requirement is that the client be authenticated by the server. Once so authenticated the user must search or browse for hosted volumes and then connect to the desired volumes often using yet another authentication procedure. For instance on Appleshare a product of Apple Computers Inc. the client user browses the network and finds first the desired server. Then the user clicks on the server icon and is usually required where guest access is not enabled on the server to again enter a username and password. Once authenticated the user must browse and select from available volume s . Thereafter the selected volume s is are available on the operating system desktop of the client machine appearing as any local drive would.

One issue with typical volume mounting is the time expended. Another is that of repeating the same process the next time the same volume needs to be mounted. Any of the parameters such as a network location name or alias that uniquely identify a given volume may have changed or may not be remembered by the user and must be found again. Also there are often additional steps needed for clients that remotely dial in to a given network and then attempt to locate network resources.

The invention is a method and apparatus for remotely and automatically mounting volumes over a network. The invention makes use of an interface such as a web browser to connect a client to a server. Volume mounting parameters are retrieved from generic or specific profiles that are accessed in accordance with a request from the client to the server. The server supplies volume mounting parameters specific to the client via a plug in installed on the client. The plug in then interacts in one or more embodiments of the invention with an application programming interface and or system software on the client which automatically mounts the volume s in accordance with the supplied parameters.

In at least one embodiment of the invention the server assembles a mounting command block consisting of retrieved volume mounting parameters and a mount command. Additionally in some embodiments the plug in must first verify as approved the server returning the mounting command block in order for volume mounting to proceed.

A user of client who wants to have volumes mounted from a remote location may send authentication information to web server . Alternatively some process or event occurring on client may require request to have one or more remote volumes mounted as part of its operation. Web server maintains or has access to a profile of client regarding what file volumes should be automatically mounted which volumes if any should be selectively mounted and the client s authentication information. If there is authentication information from the client web server compares the authentication information provided by client with the profile maintained for the client . If the authentication is approved web server sends the plug in of client mounting command parameters such as which volumes to mount to and username and password information specific to those volumes. For instance in the case of client web server would send information in order to mount a volume such as the file server alias volume name s location designation and access codes such as logins and passwords if any that would be required.

Plug in performs a number of functions prior to the automatic mount specified in the mounting command parameters. The plug in obtains the address such as IP Internet Protocol address of the web server . Then the plug in checks to see if the address of web server is included in a list of approved servers. The list of approved servers is embedded in the plug in or encrypted scrambled such that only plug in may access. If the web server s address is not valid i.e. does not appear in the list of approved servers the plug in terminates its operation and no mounting occurs. This serves as an additional level of security in addition to the optional user authentication. With the approved server address mechanism the plug in can be better assured that the potential volume mount is authorized with or without user authentication.

If the web server s address is valid then file system software built on the operating system of client receives the mounting command parameters and automatically mounts the specified volume volume without the need for user intervention. After volume is mounted successfully it will thereafter behave as if it were a native file volume e.g. hard disk connected directly to client bus of client . For instance the icon pertaining to volume may be displayed of the desktop or other location where the list of all other disks and volumes of client are displayed.

Like client client is also equipped with an appropriate plug in module . When client accesses the website of server then server may accept optional user authentication information from client . If the profile corresponding to the login ID supplied by client indicates a need to connect automatically with volumes and the mount command parameters for both of these volumes is sent in turn to the operating system of client via plug in . The client then proceeds to mount both volumes and without any further intervention by users of client . Plug in also checks to see if the web server is on its list of approved servers prior to accepting the mount command parameters from web server . The list of approved servers in each of the plug ins and may be different but are shown in to both include at least the address of web server .

As demonstrated in the invention provides for a single easily accessible point of entry e.g. web server to mount volumes that are to be shared among clients. Volumes and appear to client as would native volumes of client .

Though not specifically depicted in it can be assumed that web server client client volume and volume could be connected together through some global network such as the Internet WAN wide area network or LAN local area network . In accordance with the invention the network configuration is not a consideration in mounting of the file volume. However if an IP Internet Protocol address is required to connect to a given volume then that address can be obtained by resolving a supplied server alias to an IP address. IP address host name and other designation of network location such as local area network routing path may transmitted along with volume mounting parameters or may be resolved by translating aliases in a table. A successful mounting of the volume s implies that the client is enabled with the appropriate transport network mechanisms necessary for direct transfer of data with those volumes.

Further while not illustrated in the web server may be connected to a number of other servers or have processes applications running upon it that perform functions such as database management.

If the cookie does not exist then the session is terminated block in order to preserve security. If the cookie exists i.e. the plug in is installed in the client then the login process is commenced. The server website then requests a login ID and password or similar authentication from the client block . In response to the client sending the server authentication information the server checks if the authentication is valid block . If the authentication is not valid then the session is terminated block . If the authentication is valid then a profile associated with the authenticated login ID is retrieved block . The profile indicates what volume s are to be mounted what usernames and passwords if any are to be supplied for those volumes and the network location or designation of the volumes such as server alias host name IP address routing path etc. . Additionally the profile may indicate folders within volumes where access is restricted or which folders are public private. The retrieved profile may then be parsed and its information supplied to the plug in of the client as part of the volume mounting command block for example .

The authentication information see and associated description above which may be sent to the server by the client is compared against the authentication strings in the profile datastore . The authentication strings include login ID and a password field . Where user authentication is transmitted to gain access to the website server and volume mounting parameters both the login ID and password must match the corresponding authentication strings. For example the password yyyyyy must be transmitted along with the login ID john if login ID john is to be authenticated.

Assuming the server authenticates login ID john then volume mounting parameters contained the record indexed by login ID john is retrieved. The volume mounting parameters includes a number of fields including volume name server alias username and password . The volume name field is a designator used to easily identify the volume and may be descriptive in nature. Client operating environments may use the value of the volume name field as the name of the volume once mounted. The value of the volume name field can be used by the client in constructing a desktop icon for the mounted volume. The value of the server alias is a string which may be descriptive in nature designating the server where the volume name specified in the corresponding volume name field is physically a part of. A table can be provided which resolves server alias to an actual Internet Protocol IP address where the server is located. For instance the server alias doghouse may be resolved by a look up table to the physical IP address 128.127.1.1 . Alternatively depending on the network configuration through which volume mounting is being performed the value of the server alias field may be resolved translated to a local area network designation or network routing path. For instance where only intranet based clients are permitted to mount volumes then IP addresses may not be needed or may not even be used.

The values of the volume name and server alias fields are passed to a client via the client s plug in. The plug in also receives values for a username and password associated with a particular volume. In the record indexed by login ID john that particular ID john has a username of jgray and a password of xxxxxx . The plug in takes the username jgray and associated password xxxxxx and automatically uses these as arguments when the command is issued to mount volume A. This eliminates the need for the user to manually enter remember jgray and xxxxxx or the need to manually clear by clicking hitting a key a dialog box that may store the correct username and password jgray and xxxxxx respectively for volume A. The volume mounting parameters for each volume includes a username field and password field separate from that of the login ID and password since these may differ. Similarly volume name server alias username and password are all transmitted to the client plug in after being retrieved from profile datastore . The volume mounting parameters for volume C may be transmitted following the mounting attempted mounting of volume A or may be transferred to the client and queued thereon. Depending upon the client s operating environment it may be possible to mount both of the volumes A and C in a concurrent fashion.

With the use of profile datastore the volume mounting preferences information pertaining to multiple users may all be centralized in one location. For instance a second user having a website login ID of jack can also mount volume A automatically upon entering in the proper password 111111 associated therewith. In this example the username and password jack and 111111 respectively are the same as the website login ID and password again jack and 111111 respectively. In other embodiments a given login ID may also be able to manually select a list of volumes that can be mounted.

Such a profile datastore may also store in addition to specific user profiles one or more generic profiles that correspond to certain client processes or events that require a mounting of volumes. Such generic profiles may be retrieved from datastore without a validated user authentication. Generic profiles may be useful where public or global access to certain volumes needs to be granted.

The mounting command block includes volume mounting parameters parsed from the preferences and a mounting command set. A mounting command block may be assembled as part of an XML Extensible Markup Language or similar document and may be represented in the form of tags. The mounting command block either separately or as part of an XML document is then sent to the client block . The client receives the command block via the plug in that was previously installed or embedded thereon.

If the server that issued the mounting command is on the built in approved server list then the mounting process can continue. The plug in next parses the mounting profile of the mounting command block for the volume mounting parameters including the server alias of where the volume resides the volume name and any associated username and password block . The plug in then utilizes a mapping table block that translates resolves server aliases into real physical addresses such as IP addresses. Using this mapping table the plug in translates the parsed server alias to the physical server address block . Through available APIs Application Programming Interfaces the plug in then initiates the mount of the volume specified in the mounting command block that has been parsed block . Examples of such APIs include AFP Apple Filing Protocol which works over IP and CIFS SMB Common Internet File System System Messaging Block which is found in Microsoft Windows based machines.

Client system also has a bridge which couples to an I O Input Output bus . I O bus connects to system various peripheral and I O devices such as a network interface card NIC a disk and a CD ROM Compact Disc Read Only Memory . I O bus also couples to the system a display device such as a monitor or LCD Liquid Crystal Display . The NIC enables the client to connect to one or more networks such as the Internet or a LAN Local Area Network and facilitates the exchange of information between client and other devices systems on that network . Disk is a hard disk drive floppy disk drive or tape drive or other form form of non volatile storage and is used to store data application files and other more permanent information.

Client has an operating system software not depicted that handles the interaction between its components and other applications. The mounting of disks and the initialization of devices are typical responsibilities of operating system software. Operating system software also governs the manner mechanism of input output for users of client . Applications such as a web browser or web interface are usually built on top of and work in conjunction with the operating system software. Due to its criticality operating system software is most often permanently stored on disk firmware or other semi permanent storage. Operating system software may also include extensions available in APIs that perform specified tasks such as mounting of a volume over IP such as Apple Filing Protocol . File system software such as Apple Computer s Appleshare is typically considered a part of the operating system but may also be a separate component software built on top of the operating system software. Such file system software may also be accessed in addition to or instead of APIs as part of the automated mounting process.

In accordance with one embodiment of the invention client commences remote automated volume mounting by opening a web browser or web interface to the server website which is accessible over network . A connection to the server website is made by establishing an HTTP Hypertext Transport Protocol session with the website through the NIC . Once established the website checks for the existence of a cookie on the client indicating that the appropriate plug in has been installed. Client contains one such cookie stored on disk whose existence signals that the plug in module has been installed. The plug in module is dedicated piece of software that can be loaded into memory and passes information to an API file system software to mount volumes. Once the cookie has been detected by the server the server requests via HTTP secure HTTP or similar mechanism the client for a login ID and password. In response a user of client may enter a login ID and password through some input device such as a keyboard not depicted or by simply indicating acceptance of a login ID and password stored on client . If the login ID and password is authenticated by the server the client receives therefrom volume mounting command block including volume mounting parameters.

In other embodiments the server website may be accessed by the operation of some event or situation instead of strictly as a function of a manual HTTP session. In such embodiments such user authentication may be completely bypassed. For instance where a public file volume is to be downloaded from it may necessary to mount that volume without any user authentication. In this case generic mounting parameters could be returned to the client .

A plug in may be loaded into memory as a part of the operation of web browser software as the result of the event situation requiring a volume mount. The plug in consists of one or more portions of computer program code that load into memory through an application such as a web browser or as the result of some system event. Whether the mounting request is initiated by user authentication or some event or situation a plug in first checks to see if the mounting command block was issued by a server that is on the plug in s built in list of approved servers. If so the plug in parses the volume mounting parameters see resolving server aliases if appropriate and then passes it to an API or file system software which is either a part of or built on top of the operating system software. In the example of a successful authentication or some other event by the server will cause the plug in of client to receive mounting parameters regarding networked volume . Networked volume is a file system disk or portion thereof that has been connected to network . One parameter pertaining to networked volume is a designation of its volume name as volume B . The volume name parameter along with a username and password for the volume corresponding to the authenticated login ID is passed to the API file system software through the plug in . For the API file system software of client to mount networked volume the physical location of the server must be made known. The plug in in one embodiment will resolve a server alias supplied as part of the volume mounting parameters to a physical location such as IP address or network location. In this instance the server alias will be resolved to the IP address network path of networked volume .

The file system software connects to networked volume using the resolved location designation of the server housing the volume to be mounted and then automatically supplies the username and password through the file system software. The networked volume uses the supplied username and password to log client in. Once logged the operating system software is signaled and uses the volume name volume B and places an icon for volume B onto the list of available devices . The icon and name for networked volume appear on display as part of the device list . Device list enumerates volumes which are either native or appear native through automated mounting process. Disk which is locally connected through I O bus is considered a true native volume and its volume name volume A and icon appear in list . Likewise volume B which is the designation of networked volume also appears in the list indicating that the networked volume can be written to read from in the same manner as a native volume such as local disk volume A .

Server system also has a bridge which couples to an I O Input Output bus . I O bus connects to system various peripheral and I O devices such as a network interface card NIC a disk and a CD ROM Compact Disc Read Only Memory . I O bus also couples to the system a display device such as a monitor or LCD Liquid Crystal Display . The NIC enables the server to connect to one or more networks such as the Internet or a LAN Local Area Network and facilitates the exchange of information between server and other clients servers on that network . Disk is a hard disk drive floppy disk drive or tape drive and is used to store data application files and other more permanent information.

In accordance with the invention disk would house a profile datastore containing volume mounting parameter records for login IDs and for generic events as well as software to implement a web server. Using web server software which can loaded into memory and executed by processor server enables web pages and their components to be generated. For instance when a client connects to the server website the web server would generate a dialog requesting the client for a login ID and password. The web server would then authenticate the supplied login ID and password and return corresponding volume mounting parameters to the plug in on the client. If the profile datastore is a database or a part thereof database server software may also be implemented in server to process authentication and volume mounting parameter profile retrievals. Server is responsible for assembling the mounting command block which includes mounting parameters and a mount command. The server also generates XML or other documents that may contain one or more mounting command blocks and transmit these to clients via the client plug in. The server also has a network address which is obtained by the plug in on the client. If the address of server is on the approved list contained within the plug in then the volumes designated in the volume mounting parameters of the mounting command block are mounted. Server may be connected to one or more other servers such as a separate database server or may incorporate a database server application as a process running within server .

