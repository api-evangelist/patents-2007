---

title: System and method for communication protocol mapping
abstract: Systems and methods are provided for protocol mapping. According to an embodiment of the application, the protocol mapping is based on a non-compiled editable file (e.g. XML file) that describes the protocol mapping. Therefore, the protocol mapping can be updated by updating the non-compiled editable file without updating any compiled software. This allows the protocol mapping to be updated to reflect any changes to communication protocols that may occur without having to update any compiled software. Difficulties traditionally associated with updating protocol mappings can be avoided by not having to update compiled software.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08868770&OS=08868770&RS=08868770
owner: BlackBerry Limited
number: 08868770
owner_city: Waterloo
owner_country: CA
publication_date: 20071220
---
This application claims benefit from U.S. Provisional Patent Application No. 60 947 235 filed on Jun. 29 2007 the disclosure of which is hereby incorporated by reference in its entirety.

A portion of the disclosure of this patent document contains material which is subject to copyright protection. The copyright owner has no objection to the facsimile reproduction by any one of the patent document or patent disclosure as it appears in the Patent and Trademark Office patent file or records but otherwise reserves all copyrights whatsoever.

The application relates to communication protocols and more particularly to mapping between communication protocols.

Many enterprises are replacing their existing CENTREX Central Exchange or PBX Private Branch Exchange based telephony systems with VoIP Voice over IP Internet Protocol systems based upon SIP Session Initiation Protocol signalling systems. Such systems utilize existing IP infrastructure based upon LAN Local Area Network and WLAN Wireless Local Area Network technologies.

At the same time mobile phones that use Cellular networks such as GSM Global System for Mobile Communications CDMA Code Division Multiple Access and UMTS Universal Mobile Telecommunications System to conduct communications with others inside and outside the enterprise network are being enhanced to provide SIP based communications including VoIP over WLAN access allowing these devices to provide mobile telephony communication capability when within the enterprise network as well as when away from the enterprise network.

Although systems based on SIP are being widely deployed as the common signalling protocol for VoIP telephony there is a lack of standardization in the way SIP is utilized. Also the protocol continues to be developed further with continued introduction of new extensions to SIP. This has led to different versions of SIP with significant differences in the way they are used. These differences include the usage of different SIP headers for conveying the same information or to trigger the same action different call scenarios different message sequences for the same call setup or call feature the use of proprietary or pre standard SIP headers and the use of new extensions to the SIP standards.

These differences create a problem for manufacturers of mobile devices such as mobile phones. Mobile phones manufactured with a version of SIP software that implements an early version of SIP may be sold and attempted to be used on a network that requires a version of SIP software that implements a later SIP standard. It may not be economically viable for vendors of such mobile devices to produce different SIP software for every potentially deployed network SIP usage.

As more versions of SIP are in use it becomes more important for network providers to provide mappings between the various versions. Moreover it becomes important to be able to map SIP to other communication protocols such as Hyper Text Transfer Protocol HTTP . A protocol mapping might be updated each time a new version of SIP is introduced or whenever a mapping is to be provided for another existing protocol. However this might result in the protocol mapping being updated very frequently which can be inconvenient and impractical.

Some embodiments of the application provide for a system and method whereby a protocol mapping is based on a non compiled editable file describing the protocol mapping. The protocol mapping can be updated without updating compiled software. Therefore difficulties traditionally associated with updating the protocol mapping can be avoided by not having to update compiled software.

According to a broad aspect of the application there is provided a method of mapping communication between an application of a communications device and an application server of a communications network the method comprising maintaining a protocol mapping between a first communication protocol used by the application of the communications device and a second communication protocol used by the application server the protocol mapping being based on a non compiled editable file describing the protocol mapping mapping communication between the application of the communications device and the application server using the protocol mapping and updating the protocol mapping by updating the non compiled editable file without updating any compiled software.

According to another broad aspect of the application there is provided a computer readable medium having computer executable instructions stored thereon for execution on a processor so as to implement the method summarised above.

According to another broad aspect of the application there is provided an apparatus comprising a processor and a protocol mapping function for maintaining a protocol mapping between a first communication protocol used by an application of a communications device and a second communication protocol used by an application server the protocol mapping being based on a non compiled editable file describing the protocol mapping mapping communication between the application of the communications device and the application server using the protocol mapping and updating the protocol mapping by updating the non compiled editable file without updating any compiled software.

Referring now to shown is a block diagram of an example wireless system . The wireless system has a wireless network and a mobile device . The wireless network has a broker server and a plurality of application servers . In the illustrated example the application servers include a media server a Private Branch exchange PBX and a web server . The wireless system might have other components not shown for example additional mobile devices and or additional application servers. The broker server has a processor and protocol mapping function . The protocol mapping function has a non compiled editable file and protocol libraries . The broker server may have other components but they are not shown for sake of simplicity.

In operation the mobile device communicates with the wireless network over a wireless connection between the mobile device and the wireless network . The communication with the wireless network might for example be with one of the application servers . In the illustrated example the mobile device communicates using a first communication protocol fcp while each application server uses a respective second communication protocol scp scp scp. Therefore communication between the mobile device and the application servers involves mapping of communication protocols.

In the illustrated example the mapping of communication protocols is performed by the broker server of the wireless network . The protocol mapping function operates to maintain a protocol mapping between the first communication protocol fcp used by the mobile device and each second communication protocol scp scp scpused by the application servers . The protocol mapping is used to map communication between the mobile device and the application server that is in communication with the mobile device . The protocol libraries provide basic building blocks for using the communication protocols fcp scp scp scp.

According to an embodiment of the application the protocol mapping is based on the non compiled editable file which describes the protocol mapping. A specific example for the non compiled editable file is an Extensible Markup Language XML file. Alternative implementations might employ any appropriate proprietary language which might for example be a markup language. Since the protocol mapping is based on the non compiled editable file the protocol mapping can be updated by updating the non compiled editable file without updating any compiled software. This allows the protocol mapping to be updated to reflect any changes to the communication protocols fcp scp scp scpthat may occur without having to update any compiled software.

In the illustrated example the protocol mapping function is implemented as software and is executed on the processor . However more generally the protocol mapping function may be implemented as software hardware firmware or any appropriate combination thereof. Note that appropriate combinations involve the non compiled editable file of the protocol mapping function to be software implemented. The non compiled editable file might for example be in an American Standard Code for Information Interchange ASCII format. Other software implementations are possible for the non compiled editable file .

In specific software implementations the JAVA programming language and the JAVA Application Programmer Interface API are used. This allows Call Processing Applications to be developed that can run on multiple platform architectures and that can run using different call signalling protocols. For example the Java Telephony API JTAPI 1.3 provides a set of APIs that can be used to implement both the basic call model and also advanced call features. Other software implementations can include C C Pascal Perl etc. Note that software implementations can be compiled e.g. C C Pascal or interpretative e.g. Perl .

It is to be understood that the libraries of the protocol mapping function are completely optional. The basic building blocks for using the communication protocols fcp scp scp scpmight be implemented within the protocol mapping function in any appropriate manner or provided to the protocol mapping function by some component external to the protocol mapping function .

In the example described above with reference to the protocol mapping is performed by the broker server of the wireless network . In another embodiment the protocol mapping is performed by the mobile device itself. In this manner the mobile device operates as a broker server. An example is provided below with reference to .

Referring now to shown is a block diagram of another example wireless system . The wireless system has a wireless network and a mobile device . The wireless network has application servers much like those of the wireless network of . The wireless system might have other components not shown for example additional mobile devices and or additional application servers. Note that the wireless network is shown without a broker server as functionality of the broker server is implemented as part of the mobile device . The mobile device has a processor connected to a wireless access radio a protocol mapping function and applications . The connections between the processor and the other components may be direct connections or indirect connections in which there is one or more intervening component not shown . The protocol mapping function has a non compiled editable file and protocol libraries . The mobile device may have other components but they are not shown for sake of simplicity.

In operation the mobile device communicates with the wireless network using its wireless access radio . The wireless communication is over a wireless connection between the mobile device and the wireless network . The communication with the wireless network might for example be between one of the applications of the mobile device and one of the application servers . In the illustrated example the applications use the first communication protocol fcp while each application server uses the respective second communication protocol scp scp scp. Therefore communication between the applications and one of the application servers involves mapping of communication protocols.

In the illustrated example the mapping of communication protocols is performed by the mobile device . The protocol mapping function operates to maintain a protocol mapping between the first communication protocol fcp used by the applications of the mobile device and the second communication protocol scp scp scpused by the application server in communication with the mobile device . The protocol mapping is used to map communication between the application of the mobile device and the application server that is in communication with the mobile device . The protocol libraries provide basic building blocks for using the communication protocols fcp scp scp scp.

According to an embodiment of the application the protocol mapping is based on the non compiled editable file which describes the protocol mapping. A specific example for the non compiled editable file is an XML file. Alternative implementations might employ any appropriate proprietary language which might for example be a markup language. Since the protocol mapping is based on the non compiled editable file the protocol mapping can be updated by updating the non compiled editable file without updating any compiled software. This allows the protocol mapping to be updated to reflect any changes to the communication protocols fcp scp scp scpthat may occur without having to update any compiled software.

In the illustrated example the protocol mapping function is implemented as software and is executed on the processor . However more generally the protocol mapping function may be implemented as software hardware firmware or any appropriate combination thereof. Note that appropriate combinations involve the non compiled editable file of the protocol mapping function to be software implemented. The non compiled editable file might for example be in an American Standard Code for Information Interchange ASCII format. Other software implementations are possible for the non compiled editable file .

In specific software implementations the JAVA programming language and the JAVA Application Programmer Interface API are used. This allows Call Processing Applications to be developed that can run on multiple platform architectures and that can run using different call signalling protocols. For example the Java Telephony API JTAPI 1.3 provides a set of APIs that can be used to implement both the basic call model and also advanced call features. Other software implementations can include C C Pascal Perl etc. Note that software implementations can be compiled e.g. C C Pascal or interpretative e.g. Perl .

It is to be understood that the libraries of the protocol mapping function are completely optional. The basic building blocks for using the communication protocols fcp scp scp scpmight be implemented within the protocol mapping function in any appropriate manner or provided to the protocol mapping function by some component external to the protocol mapping function .

The illustrated examples presented above with reference to each involve a wireless network. It is to be understood that the wireless networks would have any appropriate components suitable for a wireless network. Note that the wireless networks may include wires in spite of having components for wireless communication. The components of each wireless network is implementation specific and may depend on the type of wireless network. There are many possibilities for the wireless network. The wireless network might for example be a Data Wide Network an 802.11 Wireless Fidelity Wi Fi network an 802.16 Worldwide Interoperability for Microwave Access WiMAX network or a cellular network. Examples of appropriate cellular networks include an Enhanced Data rates for GSM Evolution EDGE network a Code Division Multiple Access CDMA network and a Universal Mobile Telecommunications System UMTS network. Although the examples presented above focus on wireless communication it is to be understood that embodiments of the invention are also applicable to non wireless communication systems. In such embodiments communication devices may be provided in place of mobile devices. Note that there is no need for such communication devices to have wireless access radios for wireless communication.

Referring now to shown are flowcharts of example methods of mapping communication between an application of a communications device and an application server. These methods may be implemented in a broker server of a communications network for example by the protocol mapping function of the broker server shown in . Alternatively these methods may be implemented in a communications device for example by the protocol mapping function of the mobile device shown in . More generally these methods may be implemented in any appropriate apparatus. These methods may be implemented separately or in combination.

Referring first to at step the apparatus maintains a protocol mapping between a first communication protocol used by the application of the communications device and a second communication protocol used by the application server. According to an embodiment of the application the protocol mapping is based on a non compiled editable file describing the protocol mapping. The apparatus maps communication between the application of the communications device and the application server using the protocol mapping. In some instances as indicated at step this involves mapping communication from the first communication protocol to the second communication protocol. In other instances as indicated at step this involves mapping communication from the second communication protocol to the first communication protocol. More generally the mapping might involve one or more of mapping communication from the first communication protocol to the second communication protocol and mapping communication from the second communication protocol to the first communication protocol.

In some implementations as indicated at step the apparatus updates the protocol mapping by updating the non compiled editable file without updating any compiled software. The protocol mapping might be updated for example if there are any changes to the communication protocols. Note that the protocol mapping can be updated without updating any compiled software because the protocol mapping is based on the non compiled editable file. In specific implementations the non compiled editable file is an XML file. Alternative implementations for the non compiled editable file have described above.

Note that the application server might be one of a plurality of application servers each using one or more communication protocols. Therefore the apparatus might determine which application server is involved in the communication and which communication protocol used by that application server is relevant for the protocol mapping. An example is provided below with reference to .

Referring now to at step the apparatus maintains a protocol mapping between the first communication protocol and other communication protocols used by application servers. According to an embodiment of the application the protocol mapping is based on a non compiled editable file describing the protocol mapping. At step the apparatus determines which application server is involved in communication. Note that the application server might use more than one communication protocol. Therefore in some implementations as indicated at step the apparatus determines which one of the communication protocols of the application server is relevant for the protocol mapping. At step the apparatus maps the communication between the application of the communications device and the application server using the protocol mapping. The protocol mapping is between the first communication protocol and the relevant communication protocol of the application server involved in the communication.

There are many ways for the apparatus to determine which application server is involved in communication. An example is provided below for the scenario where the apparatus performing protocol mapping is a broker server of a communications network. In some implementations when the broker server receives a signal encoded using a first protocol from a communications device the broker server uses an application identifier built into the first protocol to identify the application server. The broker server can also use a feature identifier built into a second protocol used by the application server to identify which feature resident on the application server is to be accessed. Further details of using feature identifiers to make such determinations is provided in commonly assigned European Patent Application No. 07105054.6 entitled Methods and Systems to Allow Multiple SIP Applications on a SIP Client to Ability to Select Specific Applications and Features on a SIP Server the disclosure of which is incorporated by reference.

It is to be understood that there are many possibilities for the first communication protocol and the second communication protocol. The communication protocols used can each be any implementation specific protocol for example SIP HTTP or any other communication protocol. The communication protocols used might depend on the application server. In the examples present above with reference to the application server involved in the communication might for example be a media server. In this case both the first communication protocol and the second communication protocol might be based on SIP. Alternatively the application server involved in the communication might be a PBX. In this case both the first communication protocol and the second communication protocol might be based on SIP. Alternatively the application server involved in the communication might be a web server. In this case the first communication protocol might be based on SIP while the second communication protocol might be based on HTTP. Other possibilities for the application server include a presence server and an Instant Messaging M server.

There are other possibilities for the application server and therefore there are many other possibilities for the first communication protocol and the second communication protocol. The first communication protocol and the second communication protocol might each be any one of a SIP an HTTP a SOAP a Remote Method Invocation RMI Remote Procedure Call RPC a Computer Telephony Interface CTI an ECMA 323 web service protocol a Media Server Markup Language MSML a Telephony Application Programming Interface TAPI a Java Telephony Application Programming Interface JTAPI and any appropriate proprietary protocol. The first communication protocol is based on SIP for specific implementations.

In the examples present above with reference to for scenarios where the protocol mapping is performed by the communications device the communications device obtains the non compiled editable file. There are many ways that the communications device can obtain the non compiled editable file. In some implementations the communications device downloads the non compiled editable file. This might be initiated by the communications device. In other implementations the communications device automatically receives the non compiled editable file.

Referring now to shown is a block diagram of yet another example wireless system . The wireless system is provided as an example of multiple different protocol mappings by a broker server of a wireless network. It is to be understood that the wireless system is very specific for example purposes only.

The broker server is connected to a transceiver and a cellular network . The wireless system has a plurality of mobile devices A B C for communicating with the cellular network and or the transceiver . The broker server is also connected to a plurality of application servers including a plurality of PBXs A B C D a plurality of Presence Servers E F G H and a plurality of IM Servers I J. The connections between the broker server and the other components A B C D E F G H I J may be direct connections or indirect connections in which there is one or more intervening component not shown . The broker server has different types of protocol mappings including VoIP mapping A cellular mobility mapping B presence mapping C and IM mapping D. The PBXs A B C D are coupled to a Public Switched Telephone network PSTN . The Presence Servers E F G H and the IM Servers I J are connected to an Internet . The cellular network is connected to the PSTN via a circuit switched network not shown .

In operation the mobile devices A B C communicate using a communication protocol cp which is SIP based. However each application server A B . . . J communicates using one or more respective communication protocols cp cp . . . cp. The broker server performs protocol mapping between the device SIP cpand the other communication protocols cp cp . . . cp. The mapping is based on non executable editable files that describe the protocol mapping. For example there might be a respective XML file for each protocol mapping. Alternatively there might be a respective XML file for each type of protocol mapping A B C D. Other implementations are possible. Details of protocol mapping have been provided already and are therefore not repeated here.

Referring now to shown are signalling diagrams for example protocol mapping performed by the broker server shown in during establishment of a call. It is to be understood that these signalling diagrams are very specific for example purposes only.

The signalling diagrams include signals in respect of the mobile device A the broker server and the PBXs A B shown in . shows a first scenario for establishing a call with the first PBX A while shows a second scenario for establishing a call with a different PBX namely the second PBX B. Note that in each scenario the signalling to and from the mobile device A is identical while the signalling to and from the application servers A B is quite different. This is because the application servers A B use different communication protocols. Details of the signalling for each scenario are provided below.

Referring first to at step A the mobile device A sends a MakeCall message to the broker server in order to request establishment of a call. In response a plurality of signal exchanges occur between the broker server and the PBX A. The signal exchanges include an Invite message at step A a Trying message at step A an Authentication message at step A an Invite message at step A and another Trying message at step A . At step A the SIP server sends a Ringing message so as to indicate that the call is pending. At step A an Alerting message is sent to the mobile device A to indicate that the call is pending. In this case the recipient has answered the call and therefore an Answered message is issued at step A . Accordingly the broker server sends an Okay message to the PBX A at step A and also sends a Connected message to the mobile device A at step A . Thus the call has been established.

Referring now to at step B the mobile device A sends a MakeCall message to the broker server in order to request establishment of a call. In response the broker server sends a StartCallReq message to the PBX B at step B in order to request establishment of the call. The PBX B sends a RingingInd message at step B in order to indicate that the call is pending. At step B an Alerting message is sent to the mobile device A to indicate that the call is pending. In this case the recipient has answered the call and therefore a PickedUpInd message is issued at step B . Accordingly the broker server sends a Connected message to the mobile device A at step B and also sends a ReceivedResp message to the PBX B at step B . Thus the call has been established.

As can be seen in the interface to the application servers A B differs not only in the flow but in the parameter names sequence identifiers etc. The following XML excerpt shows how these differences can be described in such a way as to allow the broker server to be implemented as a generic protocol machine. It is to be understood that the following XML excerpt is very specific for example purposes only.

1. The Feature field defines through the attributes the application the feature and the vendor that this block of XML applies to. Note that PBX Vendor1 corresponds to the first PBX A while PBX Vendor2 corresponds to the second PBX B.

2. The Protocol field describes the protocol being used. This is a dynamic downloadable library that implements the mechanics of the protocol.

3. The Callblock fields describe the expected call flow. This tells the broker engine which signal to send at each stage of the call set up. Note that the attributes define if the call block is mandatory conditional or optional.

4. For each call block a Frame is described. The attributes describe the name that is used to access the DLL function and the direction of the signal.

5. For each frame a Parameter field describes the order of parameters either sourced from the original signal encoded as protocol or stored locally on the broker.

Referring now to shown is a block diagram of another mobile device that may implement any of the mobile device methods described herein. The mobile device is shown with specific components for implementing features similar to those of the mobile device of . It is to be understood that the mobile device is shown with very specific details for example purposes only.

A processing device a microprocessor is shown schematically as connected between a keyboard and a display . The microprocessor is a type of processor with features similar to those of the processor of the mobile device shown in . The microprocessor controls operation of the display as well as overall operation of the mobile device in response to actuation of keys on the keyboard by a user.

The mobile device has a housing that may be elongated vertically or may take on other sizes and shapes including clamshell housing structures . The keyboard may include a mode selection key or other hardware or software for switching between text entry and telephony entry.

In addition to the microprocessor other parts of the mobile device are shown schematically. These include a communications subsystem a short range communications subsystem the keyboard and the display along with other input output devices including a set of LEDS a set of auxiliary I O devices a serial port a speaker and a microphone as well as memory devices including a flash memory and a Random Access Memory RAM and various other device subsystems . The mobile device may have a battery to power the active elements of the mobile device . The mobile device is in some embodiments a two way radio frequency RF communication device having voice and data communication capabilities. In addition the mobile device in some embodiments has the capability to communicate with other computer systems via the Internet.

Operating system software executed by the microprocessor is in some embodiments stored in a persistent store such as the flash memory but may be stored in other types of memory devices such as a read only memory ROM or similar storage element. In addition system software specific device applications or parts thereof may be temporarily loaded into a volatile store such as the RAM . Communication signals received by the mobile device may also be stored to the RAM .

The microprocessor in addition to its operating system functions enables execution of software applications on the mobile device . A predetermined set of software applications that control basic device operations such as a voice communications module A and a data communications module B may be installed on the mobile device during manufacture. In addition a personal information manager PIM application module C may also be installed on the mobile device during manufacture. The PIM application is in some embodiments capable of organizing and managing data items such as e mail calendar events voice mails appointments and task items. The PIM application is also in some embodiments capable of sending and receiving data items via a wireless network . In some embodiments the data items managed by the PIM application are seamlessly integrated synchronized and updated via the wireless network with the device user s corresponding data items stored or associated with a host computer system. As well additional software modules illustrated as another software module N may be installed during manufacture. One or more of the modules A B C N of the flash memory can be configured for implementing features similar to those of the protocol mapping function of the mobile device shown in .

Communication functions including data and voice communications are performed through the communication subsystem and possibly through the short range communications subsystem . The communication subsystem includes a receiver a transmitter and one or more antennas illustrated as a receive antenna and a transmit antenna . In addition the communication subsystem also includes a processing module such as a digital signal processor DSP and local oscillators LOs . The communication subsystem having the transmitter and the receiver is an implementation of a wireless access radio with features similar to those of the wireless access radio of the mobile device shown in . The specific design and implementation of the communication subsystem is dependent upon the communication network in which the mobile device is intended to operate. For example the communication subsystem of the mobile device may be designed to operate with the Mobitex DataTAC or General Packet Radio Service GPRS mobile data communication networks and also designed to operate with any of a variety of voice communication networks such as Advanced Mobile Phone Service AMPS Time Division Multiple Access TDMA Code Division Multiple Access CDMA Personal Communications Service PCS Global System for Mobile Communications GSM etc. The communication subsystem may also be designed to operate with an 802.11 Wi Fi network and or an 802.16 WiMAX network. Other types of data and voice networks both separate and integrated may also be utilized with the mobile device .

Network access may vary depending upon the type of communication system. For example in the Mobitex and DataTAC networks mobile devices are registered on the network using a unique Personal Identification Number PIN associated with each device. In GPRS networks however network access is typically associated with a subscriber or user of a device. A GPRS device therefore typically has a subscriber identity module commonly referred to as a Subscriber Identity Module SIM card in order to operate on a GPRS network.

When network registration or activation procedures have been completed the mobile device may send and receive communication signals over the communication network . Signals received from the communication network by the receive antenna are routed to the receiver which provides for signal amplification frequency down conversion filtering channel selection etc. and may also provide analog to digital conversion. Analog to digital conversion of the received signal allows the DSP to perform more complex communication functions such as demodulation and decoding. In a similar manner signals to be transmitted to the network are processed e.g. modulated and encoded by the DSP and are then provided to the transmitter for digital to analog conversion frequency up conversion filtering amplification and transmission to the communication network or networks via the transmit antenna .

In addition to processing communication signals the DSP provides for control of the receiver and the transmitter . For example gains applied to communication signals in the receiver and the transmitter may be adaptively controlled through automatic gain control algorithms implemented in the DSP .

In a data communication mode a received signal such as a text message or web page download is processed by the communication subsystem and is input to the microprocessor . The received signal is then further processed by the microprocessor for an output to the display or alternatively to some other auxiliary I O devices . A device user may also compose data items such as e mail messages using the keyboard and or some other auxiliary I O device such as a touchpad a rocker switch a thumb wheel or some other type of input device. The composed data items may then be transmitted over the communication network via the communication subsystem .

In a voice communication mode overall operation of the device is substantially similar to the data communication mode except that received signals are output to a speaker and signals for transmission are generated by a microphone . Alternative voice or audio I O subsystems such as a voice message recording subsystem may also be implemented on the mobile device . In addition the display may also be utilized in voice communication mode for example to display the identity of a calling party the duration of a voice call or other voice call related information.

The short range communications subsystem enables communication between the mobile device and other proximate systems or devices which need not necessarily be similar devices. For example the short range communications subsystem may include an infrared device and associated circuits and components or a Bluetooth communication module to provide for communication with similarly enabled systems and devices.

Numerous modifications and variations of the present application are possible in light of the above teachings. It is therefore to be understood that within the scope of the appended claims the application may be practised otherwise than as specifically described herein.

