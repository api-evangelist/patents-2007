---

title: Internet SCSI communication via UNDI services
abstract: A method and system for emulating a hardware Internet Small Computer System Interface (iSCSI) Host Bus Adapter (HBA) without risking an interruption of communication between a computer and a remote secondary storage device is presented. During normal operations, a (hardware emulating) software HBA drives a Network Interface Card (NIC) to afford communication between the computer and the remote secondary storage. If an operating system (OS) anomaly occurs in the computer, the NIC is normally disconnected by the OS. To maintain communication between the computer and the secondary storage device if such an event occurs, a failover network device is called up by the computer's System Management Memory (SMM) Basic Input Output System (BIOS), which allows uninterrupted communication to continue between the computer and remote secondary storage device.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07562175&OS=07562175&RS=07562175
owner: International Business Machines Corporation
number: 07562175
owner_city: Armonk
owner_country: US
publication_date: 20070725
---
The present application is a continuation of U.S. patent application Ser. No. 11 127 397 filed on May 12 2005 now U.S. Pat. No. 7 430 629 and entitled Internet SCSI Communication via UNDI Services which is incorporated herein by reference.

The present invention relates in general to the field of computers and in particular to network based computers. Still more particularly the present invention relates to a method and system for maintaining software based Internet Small Computer System Interface iSCSI communication between a computer and a secondary storage if an operating system OS anomaly in the computer disrupts the operation of an iSCSI network interface driver.

Two ongoing improvements to modern computers are speed and resource sharing. Computers such as blade server computers which have multiple server blades in a single server chassis have processors and input output I O busses that continue to increase in speed and bandwidth capacity. The same is true for secondary memory devices such as hard drive arrays. However devices that allow computers to communicate remotely with secondary memory devices often cause a data bottleneck.

For example consider the prior art network topology depicted in . A computer is shown having an operating system OS which includes a Small Computer System Interface SCSI driver . SCSI driver allows data to be put on a SCSI bus not shown in computer to which can be connected secondary storage devices such as local hard drives also not shown .

In an effort to promote scalability and resource sharing computer uses Internet SCSI iSCSI . iSCSI is an Internet Protocol IP based storage networking standard that has been developed by the Internet Engineering Task Force IETF whose current iSCSI standard is herein incorporated by reference in its entirety. Data destined to a storage device on a SCSI bus is wrapped in an IP packet and sent over the Internet to a remote storage device which unwraps the IP packet to recover the SCSI commands and data. This function of wrapping and unwrapping SCSI commands and data for computer is performed by iSCSI packaging software found in a hardware iSCSI Host Bus Adapter HBA which typically is coupled to a Peripheral Component Interface PCI bus in computer .

Hardware iSCSI HBA s main components include a processor and a Network Interface Card NIC . Processor utilizes instructions from iSCSI packaging software to wrap unwrap the IP packets and NIC affords communication between computer and a network which may be an Ethernet Internet or any other network capable of supporting the IP protocol.

The IP iSCSI packets are communicated with an iSCSI target which is the server component of a Storage Area Network SAN which includes a secondary memory represented as a Hard Drive Array HDA . Thus data to be written to and read from HDA by computer is able to be communicated via network which allows HDA to be at any remote location away from computer .

As noted above hardware iSCSI KBA is a main bottleneck to data traveling between HDA and computer . There are several reasons why this is the case including speed constraints inherent in hardware iSCSI HBA s processor and NIC . Thus there is a need to develop a method and system that avoids this hardware bottleneck.

In response to the shortcomings of the prior art system described the present invention is thus directed to a method and system for emulating a hardware Internet Small Computer System Interface iSCSI Host Bus Adapter HBA without risking an interruption of communication between a computer and a remote secondary storage device. During normal operations a hardware emulating software iSCSI HBA drives a Network Interface Card NIC to afford communication between the computer and the remote secondary storage. If an operating system OS anomaly occurs in the computer the NIC is normally disconnected by the OS. To maintain communication between the computer and the secondary storage device if such an event occurs a failover network device is called up by the computer s System Management Memory SMM Basic Input Output System BIOS which allows uninterrupted communication to continue between the computer and remote secondary storage device.

The above as well as additional purposes features and advantages of the present invention will become apparent in the following detailed written description.

With reference now to there is depicted a network topology using a software Internet Small Computer System Interface iSCSI Host Bus Adapter HBA emulator HBA emulator . HBA emulator uses software to emulate the hardware iSCSI HBA described above. HBA emulator includes the ability to package packets of SCSI data as described above using iSCSI packaging software . The iSCSI data packets wrapped with an Internet Protocol IP header are sent to a Network Interface Card NIC driver which sends the iSCSI data packets to network via a NIC in the computer . HBA emulator is used instead of hardware iSCSI HBA .

If computer is using Window as its operating system NIC driver will be shut down at the beginning of an OS anomaly such as the OS shutting down the OS receiving an upgrade or patch or the OS crashing. Thus HBA emulator is unable to communicate with NIC leaving the communication pathway between computer and hard drive array broken. This situation not only interrupts communication between computer and hard drive array but also may result in the operating system not knowing that data sent to HBA emulator is not getting passed on to NIC . To address this problem as shown in HBA emulator in response to detecting an OS anomaly sends a System Management Interrupt SMI signal to a Basic Input Output System BIOS iSCSI boot loader found in computer s System Management Mode SMM BIOS . BIOS iSCSI boot loader calls up a Universal Network Device Interface UNDI driver which creates a failover link between network and operating system more specifically whatever relevant portions of operating system that are not affected by the OS anomaly via NIC . The UNDI driver then re enables the NIC to permit communication between computer and hard drive array .

Further detail of the steps described in are shown in . First note that SMM is a reduced power consumption state provided by certain processors including some manufactured by Intel . When a CPU enters SMM CPU saves its current state in computer s Static Random Access Memory SRAM in an area called System Management RAM SMRAM . CPU then runs from SMRAM an SMM handler program which calls the BIOS iSCSI boot loader as described above.

UNDI driver refers to a universal driver that is compliant with the UNDI standard which provides a hardware independent and OS independent mechanism for communicating with a network. UNDI provides a mechanism for Pre Boot Execution Environment PXE base code to use a NIC for network access without controlling the NIC hardware directly. While UNDI can be implemented in either hardware or software in the preferred embodiment of the present invention it is implemented in software in the SMM BIOS .

Thus software iSCSI HBA emulator which runs under operating system is bypassed and communication with iSCSI target is via BIOS iSCSI boot loader which contains resident code for booting iSCSI target as if it were a local drive. OS driver which represents an active portion of operating system that is not affected by the OS anomaly thus continues to communicate with hard drive array via the now by virtue of the code from the BIOS iSCSI boot loader loaded iSCSI target . Note that while in a preferred embodiment hard drive array is an array of hard drives as the name suggests alternatively hard drive array may be any secondary memory which is defined as any non volatile memory that cannot be directly processed by a CPU and includes but is not limited to hard drive arrays tape drive s optical disk drives and other similar mass storage devices.

With reference now to there is depicted a block diagram showing additional detail of computer which is shown for exemplary purposes as a blade server found in a blade server computer not shown but understood to be composed of a chassis holding multiple blade servers each of which have one or more processors . Blade server includes a management module which permits coordination of operations among other blade servers within the blade server computer.

Blade server also includes a processor unit which may be one or more processors operating in harmony coupled to a system bus . Also coupled to system bus is a video adapter which drives supports a display .

System bus is coupled via a bus bridge to an Input Output I O bus . Coupled to I O bus is an I O interface which affords communication with various I O devices including a keyboard a mouse a Compact Disk Read Only Memory CD ROM drive a floppy disk drive and a flash drive memory . The format of the ports connected to I O interface may be any known to those skilled in the art of computer architecture including but not limited to Universal Serial Bus USB ports.

Blade server is able to communicate with network via a network interface such as Network Interface Card NIC also shown in which is coupled to system bus . Network may be a Local Area Network LAN or preferably is a Wide Area Network WAN such as the Internet.

Also coupled to system bus is a SMM BIOS discussed above in reference to which shows BIOS iSCSI boot loader and UNDI driver . In a preferred embodiment hard drive along with firmware such as found in a System Management Module Basic Input Output System SMM BIOS chip populates a system memory which is also coupled to system bus . Data that populates system memory includes blade server s operating system which includes a command interpreter program known as a shell which is incorporated in a higher level operating system layer and utilized for providing transparent user access to resources such as application programs .

As is well known in the art a command interpreter or shell is generally a program that provides an interpreter and interfaces between the user and the operating system. More specifically a shell program executes commands that are entered into a command line user interface or from a file. The shell UNIX or command processor Windows is generally the highest level of the operating system software hierarchy and serves as a command interpreter. The shell typically provides a system prompt interprets commands entered by keyboard mouse or other user input media and sends the interpreted command s to the appropriate lower levels of the operating system e.g. a kernel for processing.

Exemplary application programs used in the present invention are a web browser and iSCSI HBA emulator discussed above . Web browser includes program modules and instructions enabling a World Wide Web WWW client i.e. blade server to send and receive network messages to the Internet using HyperText Transfer Protocol HTTP messaging.

Note that the hardware elements depicted in blade server are not intended to be exhaustive but rather are representative to highlight essential components required by the present invention. For instance blade server may include alternate memory storage devices such as magnetic cassettes Digital Versatile Disks DVDs Bernoulli cartridges and the like. These and other variations are intended to be within the spirit and scope of the present invention.

With reference now to a flow chart showing exemplary steps taken by the present invention is provided. After initiator block the status of operating system OS network services is monitored block . This monitoring includes checking the OS s queue status including a representation of whether threads in programs are being properly handled and whether there are any Plug and Play PnP callbacks indicating a possible need for a device driver to be loaded and or downloaded from a remote location . In addition block any storage activity and or expiration of a pre determined timer may likewise indicate an anomaly or event related to the OS has occurred which will cause the OS to initiate a shut down or at least a quiescent state which will result in communication using NIC driver to end as discussed above.

A query is made query block in response to detecting the OS anomaly asking if OS network services are up. That is the query determines if the OS is initiating a shut down or quiescent mode. If the OS network services are still up then all transmissions receipts of data packets block including those to hard driver array described above are handled normally using NIC driver and the process returns to block to continue monitoring the status of the OS network services.

If the network OS services are not up an anomaly is occurring the outbound packets and inbound buffers are prepared block . Pending packets are preferably copied to a SMM visible region and any available buffers are updated. Memories are copied and databases are updated to prepare the system for a System Management Interrupt SMI call that drives the current OS state contents of registers containing current interim state values to be saved block .

Next the iSCSI function is started block by entering into SMM mode as described above. This includes initiating Transmission Control Protocol TCP functionality as well as checking the receiving ring block for incoming data from the hard drive array to the computer and checking the transmitting ring block for outgoing data from the computer to the hard drive array.

After using the failover iSCSI failover system described above in a determination is made block that the original OS services are again available the anomaly is over . The Advanced Programmable Interrupt Controller APIC which handles interrupts from and for multiple CPUs is cleaned up block as needed due to having some interrupt pending due to UNDI which must be cleared so that the original OS services to not respond to that interrupt . A call is made to restore the original OS states block inbound packets are reconciled block and a determination is made to see if there are other data requests between the computer and the hard drive array query block . If so then the process returns to block . Otherwise the original OS responds normally to data storage requests from the computer to the hard drive array block and the process ends terminator block .

Referring now to a flow chart is presented giving an approach overview of the presently described iSCSI Boot Page Media BPM failover approach. After initiator block a determination is made that the OS is operating normally block as indicated by the Normal Protected Mode notation. Standard Windows Linux transport is occurring for packets going between the computer and the remote hard drive array. A timer expires or an anomaly event occurs block and at least initially the iSCSI activities block continue to function normally. However if a determination is made that the OS network services are not up query block resulting in the loss of the normal use of the NIC as described above then the process enters the System Management Mode interrupts are disabled Information Storage and Retrieval ISR registers are checked for events such as any inbound packets to process transmission packet rings are set up to handle the launching of outbound packets and iSCSI process Basic is initiated using the UNDI transport described in block . If the OS services are up then the iSCSI processing Rich network OS transport services are used in a normal fashion block . In either event iSCSI cleanup processing block occurs including completion of transmitting and receiving any packets in flight between the computer and the hard drive array and the process ends terminator block .

With regards to the SMM System Management Mode used in the present invention consider the following overview. SMM is a special execution mode that preferably is able to handle a big address mode capable of accessing up to 4 GB of memory space with a default of 1 MB using 16 bit op 16 bit segment . Single threaded execution in SMM executes until a return call returns the processor to its previous state. All protected mode data structures are left intact during interrupts by saving processor state to state space upon a system management call. Any processor in a blade or a blade server can enter system SMM upon an SMI interrupt so these entries must be coordinated among blades in a multi blade server chassis. SMM is valuable in the present invention since it is an independent and isolated environment from the OS and thus has no dependencies on OS services. Furthermore the real mode address found in SMM is conducive to UNDI usage due to simple addressing features.

With reference now to an overview of the Login process of the iSCSI BPM failover process is shown in which the transition from OS network services to iSCSI UNDI services is initiated. After initiator block steps through are similar to steps through described in . If not OS network services are up query block then a restart of operations using a Transport Driver Interface TDI which is a software interface between the protocols and the Application Programming Interface API layers or the Windows NT network model is performed block and the process ends terminator block . If the OS network services are not up such as the iSCSI driver detecting that TDI is down the kick off failover block initiates including preparing to re login using the UNDI transport starting a timer to ensure call returns are proper etc. Thus when a new login request for data being transported between the computer and the hard drive array occurs an SMI call to the iSCSI processing using UNDI transport occurs block in the SMM. THE UNDI is polled for a response including jumping into SMM querying status receive transmit quests for iSCSI etc. A session negotiation is launched via the SMM UNDI which returns from the SMM for OS execution. When UNDI determines that that OS anomaly is over then an RMS return call returns the operation to the normal now protected OS mode and iSCSI cleanup is performed block ending the process terminator block .

Note that from the OS network services perspective the present invention addresses the operation on a given blade. This results in resiliency in the absence of OS network services due to atypical behavior on the blade itself and allows the blade to have redundant paths to handle OS anomalies. In normal operations the blade uses the standard OS network services TDI NDIS network transport services in Windows newt0 network transport services in Linux and rich scope for all Logical Unit Numbers LUNs that uniquely identify SCSI busses to distinguish between devices that share the same SCSI bus . During anomaly conditions the computer is able to use the described BIOS UNDI network services during anomalies such as OS shutdowns OS upgrades and OS crashes. For both Windows and Linux systems BIOS UNDI services are re enabled. Because the Boot LUN is used there is simple threading and simple memory management.

It should be understood that at least some aspects of the present invention may alternatively be implemented in a program product. Programs defining functions on the present invention can be delivered to a data storage system or a computer system via a variety of signal bearing media which include without limitation non writable storage media e.g. CD ROM writable storage media e.g. a floppy diskette hard disk drive read write CD ROM optical media and communication media such as computer and telephone networks including Ethernet. It should be understood therefore in such signal bearing media when carrying or encoding computer readable instructions that direct method functions in the present invention represent alternative embodiments of the present invention. Further it is understood that the present invention may be implemented by a system having means in the form of hardware software or a combination of software and hardware as described herein or their equivalent.

While the invention has been particularly shown and described with reference to a preferred embodiment it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention.

