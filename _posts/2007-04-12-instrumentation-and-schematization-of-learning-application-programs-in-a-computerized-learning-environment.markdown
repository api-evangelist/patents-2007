---

title: Instrumentation and schematization of learning application programs in a computerized learning environment
abstract: A computerized learning method is provided. The method may include receiving a write request from a first learning application program to write a learning level for a skill in a user profile. The user profile is configured to store data indicative of a plurality of skills and a learning level for each skill. The skills and learning levels are defined according to a profile schema. The method may further include writing the learning level for the skill in the user profile. The method may also include receiving a read request from a second learning application program to read the learning level for the skill in the user profile. The method may finally include retrieving the learning level from the user profile, and sending the learning level to the second learning application program.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08251704&OS=08251704&RS=08251704
owner: Microsoft Corporation
number: 08251704
owner_city: Redmond
owner_country: US
publication_date: 20070412
---
Video games show potential as an effective tool for learning a range of subjects. However learning oriented games to date have been designed as separated experiences and cannot measure store or retrieve learning data about game players across game titles. For example skills acquired by the user in one game are not available for reading or modification by other games. This problem is compounded when games are from different publishers for example due to the different formats for data that each publisher employs. As a result the player must start anew acquiring skills and spend needless time playing levels of the game that are not adjusted to the user s skills.

While some video games enable a user to select a general level of difficulty prior to starting a game this has the drawback of potentially incorrect self assessment and also does not account for skill by skill differences in the ability of players. Further games in which a user selects a level of difficulty are not provided with mechanisms by which the game can update or modify the user s level of difficulty for example if the user selected too low a difficulty level or if the user improves his skill through practice in the game. Thus the user may grow tired of a game that is too easy or quit a game that is too hard. Finally there is no way to compare user learning in games from one game to the next because a difficulty level in one game may not be comparable to a difficulty level in another game. For this reason the user experience with learning software applications has been isolated fragmented and non cumulative.

A computerized learning method is provided. The method may include receiving a write request from a first learning application program to write a learning level for a skill in a user profile. The user profile is configured to store data indicative of a plurality of skills and a learning level for each skill. The skills and learning levels are defined according to a profile schema. The method may further include writing the learning level and other learning data for the skill in the user profile. The method may also include receiving a read request from a second learning application program to read the learning level and other learning data for the skill in the user profile. The method may finally include retrieving the learning level and other learning data from the user profile and sending the learning information to the second learning application program.

This Summary is provided to introduce a selection of concepts in a simplified form that is further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter. Furthermore the claimed subject matter is not limited to implementations that solve any or all disadvantages noted in any part of this disclosure.

As used herein program refers to software or firmware components that may be executed by or utilized by one or more computing devices of the computerized learning system and is meant to encompass individual or groups of executable files data files libraries drivers scripts database records etc. It will be appreciated that the learning service program may include a local component and an online component. The local component may be a local learning service program executed on the user client device and the online component may be an online learning service program executed on an online server system . The local component may function as a subset of the online component functionality in the event that connectivity is not available. Alternatively the local component may be a thin client e.g. a Web browser to which application software and services are communicated via the Internet. Whether the learning application programs are displayed on the user client device via a thin client which is served remotely or reside as standalone applications they are described herein to be executed on the client device.

The profile may be stored in the user client device in a peripheral device associated with the user client device as illustrated at A or on a data store associated with the online server system as illustrated at B. The user client device and the online server system are configured to communicate via a computer network which may include a wide area network WAN . The learning application programs of the user client device may be configured to communicate over WAN with the online learning service program via the application programming interface and local learning service . In other embodiments for example the computer network may be a wireless telephone network configured to communicate with computer enabled wireless telephones or other mobile computing devices.

The user client device may be a personal computer computer enabled wireless telephone portable data assistant PDA or other computing device on which a computer operating system is configured to interact with learning application programs . The user client device may include various components not shown in including but not limited to a processor connected via a bus to volatile memory e.g. Random Access Memory non volatile storage device e.g. Read Only Memory and or a mass storage device e.g. a hard drive . The user client device further may be configured to receive input from one or more of associated user input device such as a keyboard mouse stylus camera game controller and or microphone and to send output to output devices such as a display and audio speaker . It will be appreciated that these input and output devices may be integrated into the user client device such as in a laptop or mobile telephone.

As noted above peripheral device equipped with a non volatile storage A B for storing a copy of the profile may also be provided. The peripheral device may be for example a memory equipped stylus mouse portable USB flash drive etc. and may be configured to connect directly or via a wired or wireless connection to the user client device .

The computerized learning system further includes a plurality of other client devices connected to the computer network such as local peer client devices remote peer client devices a parent client device and an administrator client device . It will be appreciated that as used herein the term administrator is used broadly to refer to a person with authority to administer educational services to a population of students and encompasses teachers and managers alike as explained in detail below. Thus separate user interfaces may be provided for teacher administrators and managing administrators to access the learning system via the administrator client device . Like the user client device each of these other client devices is configured to run one or more of the learning application programs and the local learning service program . As these devices are configured similarly to device they will not be described in detail. It will be appreciated that the computer network may further include a local area network LAN and local peer client devices are configured to communicate with the user client device via LAN . LAN may be a wireless or wired network.

Remote peer client devices typically connect to WAN of the computer network . It will be appreciated that the primary difference between local peer client devices and remote peer client devices is their respective point of contact with the computer network and a single computing device such as a portable laptop computer or web enabled mobile telephone may transition between network access points and alternately assume the role of locally and remotely connected peer device. Similarly it will be appreciated that parent client device and administrator client device are configured to connect to WAN but may alternatively connect to LAN . It will also be appreciated that the distinction between parent administrator e.g. teacher or management user and peer client devices also depends on which of a plurality of users is using the client device to access the learning service program and users may use different client devices to access the learning service than the ones which hold the learning application programs. For example a child user can play a learning application program on a first computing device and a parent can access the online learning service to review statistics on the child s play via a second computing device that does not hold a learning application program. With reference to as described in more detail below the local learning service program and the online learning service program may be configured with a user interface module A B parent interface module A B and administrator interface module A B which are respectively configured to display a user parent and administrator interface to an authenticated user with user level parent level or administrator level privileges. Thus the role of a particular client device may change with the authenticated user using the client device. It will be appreciated that user interface module A parent interface module A and administrator interface module A may be part of web service program each program being executed on a separate purpose built web server within online server system . On the other hand modules B B are executed locally on user client device .

Continuing with reference to each of the local learning service program and the online learning service program also may include a variety of software engines configured to provide specific functionality. In the illustrated configuration each a copy of each engine is provided at each of the local learning service program and the online learning service program. The collection of software engines is illustrated to include an assessment engine A B recommendation engine A B matching engine A B a trophy engine A B an arbitration engine A B a reporting engine A B a sync engine A B and a statistics engine A B. These engines may be generally described without specifying a location or may be specifically described by reference to the location of the engine as local or online. It will be appreciated that the engines may reside both locally and online or may be provided at one or the other of the local service program or online service program. For example in one embodiment the arbitration engine and the recommendation engine reside only on the online learning service program such that local arbitration engine A and local recommendation engine A are omitted. The function of each of the engines listed above will be described in detail below.

As mentioned above the computerized learning system may include the data store configured to communicate with the online server system . The data store may be configured to store data used by the online server system including profiles as discussed above and illustrated at B recommendations generated by the recommendation engine statistics generated by the statistics engine application specific game schemas and scaffolding schemas . The function of these data types is also described in detail below.

The assessment engine of the learning service program may administer an assessment test to a user. In one embodiment an intra game assessment is made by learning application program . Alternatively a request is sent to the assessment engine of learning service program to administer an assessment test to the user. The assessment test is designed to verify learning levels determined in the intra game assessment.

For example when a user is determined to advance a learning level the content of the learning application program may be made more difficult and relevant to the aspiring level. Thus one purpose of the assessment test is to verify that a proposed adjustment of content in the learning application program based on advancement of a learning level is appropriate. By doing this the learning service program may verify that the intra game assessment of the user s learning level is substantially equivalent to the assessment engine s evaluation of the user s learning level before the assessed learning level may be updated to the profile of the user. Another related purpose of the assessment test is to verify that the learning application program is presenting content to users that is standardized or consistent in its difficulty. If one learning application program continually recommends users for learning level advancement who in turn fail assessment tests the learning service operator may inform the learning application program vendor that the content of the learning application program needs to be made more difficult in order to adhere to accepted standards. These accepted standards could be defined by the learning service operator for example.

In this way the assessment test may facilitate standardization of criterion for receiving trophies that are awarded across a plurality of learning application programs. In addition the assessment engine may be used to verify that adjustment of support in the learning application program by scaffolding engine may be appropriately correlated to skills gained by the user.

It may be further desired to receive parental authorization for the user to undertake the assessment test prior to administering the assessment test. In particular the assessment test may be administered via the online learning service program such that a parent of the user may authorize administration of a assessment test from a remote client device before the user may take the test. Accordingly an API call may request retrieval of data for generating an assessment test following parent authorization of the assessment test. For example an assessment test may be generated based on trophy data stored in the profile of the user such that the assessment test may effectively test skills intended to be acquired by the user for the trophy specified. In addition a notification message may be sent to an authorized parent of the user following the award of a trophy to the user. For example a parent of the user may receive a notification message in a parent view of data associated with the profile as described in further detail below.

Reporting engine A B may arrange data stored in the profile of the user in a plurality of preselected report templates for the user. In particular profile learning data may be arranged in a view corresponding to the user accessing the information such as a student user a parent of the user an administrative user etc. As such reporting engine A B may arrange data retrieved from the profile of the user by an API call into viewable reports that may vary depending on the requesting client.

Referring now to each of the learning application programs on the user client device is configured to present graphical user interface GUI including a challenge presentation mechanism configured to present a challenge to the user and further including a user response mechanism configured to receive a response as user input from the user. From the user response received via the user response mechanism the learning application program is configured to generate user performance data indicative of a user s performance in response to the challenge. GUI is also configured to present support also referred to as scaffolding to the user to aid the user in completing the challenge.

The learning application programs further may include a game engine including a copy of application specific game schema . The application specific game schema may for example take the form of a game configuration file written in an extensible mark up language as described in detail below. The game engine functions to generate the game play displayed on GUI of the learning application program. For example the game engine may control the audio and visual output of the learning application program .

The content and presentation of the support may be determined and controlled by a support system in the learning application program with input from a scaffolding engine . The scaffolding engine is configured to store a copy of scaffolding schema which provides a standardized framework for customizing support to a user s assessed scaffolding level as described in detail below.

The application programming interface shown in may include external APIs A and internal APIs B shown in . The APIs A and B are respectively configured to send and receive data between the learning application programs and the profile which may be stored in non volatile storage B of the user client device as indicated at B or which may be stored in non volatile storage of peripheral device as indicated at A. In additional to the local copy of the profile B non volatile storage A on the user client device is further configured to store a copy of application specific game schema and scaffolding schema .

A driver or other suitable device interface is provided to facilitate communications between the user client device and peripheral device and a network interface is provided to facilitate communications between the user client device and the online server system or other computing devices connected to the computer network .

Furthermore sign in interface may include an add new user selector . The add new user selector may be selected by a first time user that is signing into the learning service program for the first time. Upon selecting selector the first time user may be prompted to create a profile . In one particular example the creation process of the profile may include creating a user ID selecting an identification picture or avatar selecting a color scheme of the profile selecting a primary language and a secondary language where applicable and selecting a number of other possible personalizing distinguishing attributes for the profile. Once the profile is created the profile may be added to a list of selectable client IDs on the sign in interface and stored as described above on the user client device peripheral or the data store associated with the online server system .

In some embodiments the sign in interface may include a guest selector which a user may select to interact with a particular learning application program. By signing in to the learning service as a guest a user may bypass the creation process of the profile and may be provided with a guest ID. A guest may interact with various learning application programs but typically no user performance data may be saved and no learning level may be tracked once the guest stops interacting with the learning application program. Further a guest may have limited or no ability to interact with other users online.

In some embodiments the sign in interface may be displayed responsive to execution of the learning application program. Alternatively the sign in interface may be displayed as an element of a dashboard interface that may be selectively displayed by the learning service program .

In some cases the sign in interface may be selectively displayed during interaction with the learning application program so that different users may sign in or sign out of the learning service.

The user interface also may include a friends status list . In one example friends status list may show the friends or other online associates associated with the particular user. In a more particular example friends status list may show which friends of the user are currently logged into the learning service locally or online . In some embodiments friend status list may include a details selector that is configured to display a friends graphic user interface that presents detailed information about friends of the user.

User interface may include a trophies pane configured to display trophies that represent achievements the user has made in each of the plurality of learning application programs. In a more particular example each of the displayed trophies may include a trophy graphic and a description of the accomplished task associated with the trophy. In some embodiments the trophies pane may include a details selector that is configured to display a trophy graphic user interface that present detailed information about trophies earned by the user.

User interface may include a learning level progress pane . In one example learning level progress pane may display a learning level for one or more selected skills of the user. In the depicted embodiment a graphical and textual representation of the user s learning level for a plurality of skills English and Math are included. In some embodiments learning level progress pane may present learning level information of the user compared to other users. For example a statistical comparison of the user to a group of users or a head to head comparison of the user to one or more other users may be displayed.

User interface may include an available games list configured to display titles of appropriate learning application programs which are depicted as The Golden Dragon Word Drop Navigator and Story Creator in . The game titles may be selected by a user to purchase or execute the associated learning application program.

The interaction of the various components of the computerized learning system with profile as well as the organization of profile is discussed in detail hereinafter. As discussed above the application programming interface is configured to receive user performance data from a plurality of learning application programs executed on a user client device and store the user performance data in profile of the user in non volatile storage A B accessible from the user client device . As shown in the learning service program is configured to read user performance data from profile of the user and process the user performance data to determine an assessed user learning level for a skill. This assessment may be made by local assessment engine A of the local learning service program or online assessment engine B of the online learning service program .

The application programming interface further may be configured to send the assessed user learning level for the skill to a requesting learning application program. In turn the requesting learning application program may be configured to adjust content based on the assessed user learning level. One manner in which the content may be adjusted is by adjusting the difficulty of the challenge presented. In addition the level of support offered by the support system may be adjusted based on the user learning level as discussed below.

As shown in discussed above the learning service program may have a graphical user interface configured to display a representation of the data contained in the profile of the user the view including a graphical representation in learning level progress pane of assessed user learning levels for one or more skills the assessed user learning levels being computed based on user performance data received by the learning service program from a plurality of learning applications. The graphical user interface may be configured to display a statistical comparison of profile of the user with profiles of other users on the graphical user interface such as appears in the teacher administrator graphical user interface of also described below. It will be appreciated that this sampling of statistical data is merely exemplary and that other suitable organization of data collected from player activity may be added to the GUI.

Referring next to data stored in profile may be of a plurality of data types including 1 meta data that defines user characteristics 2 settings to customize of profile of the user 3 controls and restrictions for limiting various activities of the user associated with profile of the user 4 community member information such as information on friends of the user 5 learning level data of the user 6 game data associated with activity in one or more learning application programs previously played by the user and 7 student storage for storing various media such as sounds images etc. collected by the user. It will be appreciated that this organization is merely exemplary and that other suitable categories may be added to achieve different features and functionalities. Each of these categories of data will be described in turn. These data types are illustrated in detail in the example embodiment of a profile schema shown below in Table 1.

As shown above profile meta data may include elements such as an learning client system version element a profile ID a password a parent ID a synch date stamp a network ID a synch PC ID a screen name a primary language ID a secondary language ID a color a picture an application array an achievement array and an earned achievement content element. The learning client system version element may include a unique ID of the system detected during the most recent access of profile . This ensures that the client application is kept up to date relative to the server software. The profile ID may include a unique ID associated with the user of profile . The profile ID may be used to identify the user as online or offline. The password associated with profile of the user may be an encrypted password received as user input during the inaugural use of profile .

The parent ID may be a unique ID associated with an approved parent of the user. An approved parent may be another user associated with the user such as a parent teacher administrator or managing administrator authorized to modify control elements of the profile . Further an approved parent of the user may be authorized to modify a plurality of profiles. For example a teacher may be authorized to modify profiles associated with students in a classroom of the teacher. The sync date stamp may be an element of profile meta data identifying the most recent communication sync between profile on user client device for example and online learning service program . In addition the sync date stamp may be associated with a network ID and or user client device ID associated with the sync date stamp.

It will be appreciated that profile may be associated with a particular client device. Further profile may be limited to syncing with a single user client device. For example a user of profile attempting to sync to a plurality of personal computers may be prompted to select association with one of the personal computers.

Profile meta data may include a screen name. The primary and secondary language ID and or the locale ID may associate profile with a language and or various other relevant data pertaining to the locale of the user based on user input. The locale ID typically refers to a geographic region in which the user resides. Profile may be associated with a background color and a picture such as a jpeg enabling the user to customize aspects of the graphical user interface. The application array may include game IDs uploaded from game meta data a number of times played and a date associated with the last time the game was played. Further the trophy array may include trophy IDs associated with the game IDs as the user completes the trophy. Each trophy ID may be associated with a title and description.

Settings associated with profile may include elements such as a pen mouse speed an inversion element a sync to PC element and a sync to network element although various other elements may be added. The pen mouse speed element may include slow medium and fast settings. The inversion element may facilitate configuring learning application programs including a control system GUI such as an airplane simulation GUI to operate in an inverted mode such that for example an airplane can be controlled to go up by pushing forward rather than backward on a joystick. The sync to PC and sync to network elements may facilitate one of a manual or automatic syncing option based on a parameter such as a user preference learning application specification etc.

Controls and restrictions associated with profile may include elements such as a community ID sharing element a community content sharing element a wireless ID sharing element and a wireless content sharing element. The community ID sharing element may be configured to allow other users to access a view of a shared portion of profile of the user. In some embodiments the community ID sharing element may be selected by an authorized parent of the user and or an authorized administrator for a group of users. For example the community ID sharing element may be set to restricting views of profile of the user from other users. In addition the sharing element may be set to restricting views of profile from all users unless otherwise authorized. In another example access to views of profile may be restricted to authorized friends of the user. In yet another example other users in a restricted network may be authorized to access views of profile . The community content sharing element may be configured to allow users identified in the community ID sharing element to view particular elements in profile .

Community member information associated with profile may include elements such as a friends array a group array and a group members array. The friends array element may identify profiles associated with one or more friends of the user that may view profile of the user. As such profile IDs listed in the friends array element may be allowed to access views of profile if the user enables such access via access controls in the graphical user interface. The listing of the community members also facilitates easy lookup and communication with them directly from the user profile. The group array element may identify groups to which the user belongs. In one example an authorized parent and a user may be members of a group and access may be restricted to network IDs corresponding to home and school networks of the parent and user. Learning service may be provided with an API configured to manage users and groups and present user interfaces by which the users and groups may interact.

As shown in Table 1 and illustrated in profile may define a plurality of skills such as a reading speaking writing spelling listening adding subtracting multiplying and dividing . It will be appreciated that various other skills may be added to the profile schema as well such as number sense pattern recognition recognition of aural phonemes and many others. It will further be appreciated that a plurality of learning levels may be defined per skill. As depicted in this particular example they are numbered 0 3 but may be any other suitable range of levels.

Each learning level element may include game play records for learning application programs updated to profile . In one example each learning level element may include a record for application specific learning data for up to five recently used learning application programs. Further each record associated with the learning application programs may include a level ID associated with the learning level element a game ID uploaded to profile from game meta data of application specific game schema for example and a date associated with the most recent use of the learning application program of the record. Some learning level elements such as reading speaking writing spelling and listening may be grouped under a common language ID so that the skills can be tracked separately under each language.

Profile game data stored in game data may include elements such as a games saved element for continuing saved games and a game settings element for storing settings related to learning application programs used. Further student storage may include elements such as a story element an art element and a picture element or other personalization for storing media associated with learning application programs .

At the method may include adjusting the content of the requesting learning application program based on profile of the user. The difficulty of the challenge or the type and degree of support offered may be adjusted for example. At the method may include storing the assessed user learning level in profile of the user. Profile of the user may be organized according to a profile schema and may be configured to store learning level data for each of a plurality of skills.

For example the plurality of skills may include one or more language acquisition skills and one of the language acquisition skills may include vocabulary mastery. In such a case profile of the user may be configured to store vocabulary words that have been demonstrated as known to the user. For each vocabulary word a plurality of skills may apply. For example different language acquisition skills may be defined to include reading speaking writing spelling and listening to each vocabulary word. In addition other skills beyond language acquisition skills may be defined. For example the plurality of skills may include a visual skill such as pattern recognition an aural skill such as phoneme recognition a mathematical skill such as adding subtracting multiplying or dividing number sense or virtually any other suitable learning skill.

It will be appreciated that profile of the user may be configured to store one or more of profile meta data user setting data access control data community member data game data and user storage data described above. Further as discussed above profile of the user may be stored at a location accessible by a local learning service on a user client device such as at the data store accessible to online learning service program . As described above a local copy of profile of the user may be stored on a user client device or a peripheral thereof and a remote copy of profile of the user may be stored at an online learning service. The method may further include syncing the local copy and the remote copy of profile of the user according to predetermined sync rules.

At the method includes sending the user learning level to a requesting learning application program. At the method may include displaying a view of profile on a graphical user interface such as user interface described above. At the method may include displaying a statistical comparison of profile of the user with profiles of other users on a graphical user interface such as in parent and teacher administrator graphical user interfaces described below. For example the statistical comparison may comparison include a comparison of a user or group of users with other users or groups of users who have played the same learning application programs or who have played learning application programs that affect learning of similar types of skills.

As discussed above the computerized learning system may utilize schematization and instrumentation of learning application programs. Schematization refers to the process of defining a format for data that is exchanged between software components of the computerized learning system such as among the learning service program the application programming interface and learning application program. Instrumentation refers to the process of providing a software component the ability to collect store and retrieve schematized data such as through an application programming interface .

The interaction of various components of computerized learning system to achieve instrumentation and schematization will now be described. As discussed above the computerized learning system may include a plurality of learning profiles stored in non volatile storage A B each profile being associated with a user. Further each profile may include learning data organized according to a profile schema where the learning data includes one or more skills. Further still an assessed user learning level for each skill may be selected from among a plurality of possible learning levels. The computerized learning system may further include learning service program configured to receive requests from a plurality of learning application programs. As one example the requests may be used to read and write learning data relating to the learning levels for each skill to and from each of the user profiles. The requests may be sent from the learning application program via application programming interface to be received by the learning service program . The computerized learning system may include an arbitration engine A and B configured to determine if each of the read and write requests is authorized. This engine may compare the results submitted by a plurality of users who have played a multi player learning application together. This comparison can be used to determine if any of the results submitted through the application programming interface have been tampered with. The local arbitration engine B may determine if read and write requests for the local copy of a profile are allowed while arbitration engine A may determine if read and write requests for an online copy of the profile stored in data store are allowed. Alternatively all arbitration may be performed by an online arbitration engine and the local arbitration engine may be omitted.

Another element in the schematization of the data exchanged in computerized learning system is application specific game schema which is used to organize data related to a specific learning application program. Application game specific game schema may organize information related to a specific learning application program into game meta data which identifies characteristics about the learning application program game learning data which identifies various skills that the user is recommended to possess for the application or may acquire through playing the game and game trophy data which defines milestone accomplishments for which trophies are awarded in the learning application program.

Game meta data may be organized into elements such as a game ID a game title a minimum and or maximum number of players for the game and online play capabilities of the application. Game learning data may be organized into elements such as application specific target skills and skill levels where the target skill element may be assigned a skill ID. As such applications may be targeted to users exhibiting a range of skill levels in one or more skills associated with a learning application program. Game trophy data may organized into elements such as an achievement ID an achievement name an achievement description capability to display an achievement achievements that may be displayed may be assigned a description such that the user may learn how the achievement may be earned a point value for each achievement and an image for each achievement. One example embodiment of an application specific game schema is shown in Table 3 below.

Returning to as discussed above profile learning level data of profile is configured to store a learning level for each of a plurality of skills. In the depicted embodiment there are four learning levels labeled 0 3 for each skill. A textual explanation of the difference between learning levels for the illustrated skill listening to English is illustrated in .

It will be appreciated that the skills may include virtually any skill suitable to schematization including general mastery of vocabulary words and the learning service program may be configured to receive requests to read a set of vocabulary words for a user and write newly mastered vocabulary words to the user profile in response to requests from learning application programs. In the depicted embodiment the profile is configured to store a learning level for each of reading speaking writing spelling and listening for each of a plurality of words in a target language. This enables for example the content of a challenge or support presented to a user to be modified based not only on a user s general mastery of a vocabulary word but on the user s relative learning levels for different skills associated with that vocabulary word. It will also be appreciated that mathematical skills such as adding subtracting multiplying and dividing may also be included within skills .

At the method may include presenting a support selector to the user via the user interface to aid the user in responding to the challenge wherein the user performance data includes support history data indicating use of the support selector by the user. Examples of support selectors are illustrated in and discussed in detail below. The support selector may be configured to enable a user to select support in a plurality of support categories each support category corresponding to a skill defined in the profile schema. For example for learning application programs relating to language acquisition the support selector may be configured to enable a user to select support in written form in spoken form in a first language of the user and in a target language of the user. A support selector for learning application programs relating mathematical skill acquisition may include different options for example. According to another example the support selector may be a challenge support selector configured to enable the user to select support to understand the challenge presented to the user. In another example the support selector may be a response support selector configured to enable the user to select support to respond to the challenge.

At the method may further include presenting support to the user either in response to a user request for support pull support or upon reaching a predetermine support threshold push support as described below. The presentation of support to the user may be recorded as user performance data may form the part of the basis for the determination of learning level for a skill. For example users who request help often may be deemed not to be prepared to advance a learning level while users who seldom are presented with help may be candidates for advancement.

At the method may further include receiving a response to the challenge via the user interface of the learning application the user performance data being based on the response to the challenge. For example the method at A may include measuring a response time of the user response to the challenge the user performance data further including the response time. At B the method may include counting a number of inaccurate responses received from the user in response to the challenge the user performance data including the number of inaccurate responses. At C the method may include determining a degree of accuracy of the response and the response data may include the degree of accuracy of the response.

According to one example the method may include receiving a spoken response from the user via a microphone and determining a degree of accuracy of the spoken response. Thus the response data may include the degree of accuracy of the spoken response and the skill may be spoken language ability in a target language. The method may further include determining via a game based learning assessment module not shown that the stored learning level for the skill should be updated to an updated learning level based at least in part on the degree of accuracy of the spoken response.

According to another example the method may include receiving a written response from the user via the user interface and determining a degree of accuracy of the written response. Thus it will be appreciated that the response data may include the degree of accuracy of the written response and the skill may be written language ability in a target language. Further the method may include determining via a game based learning assessment module that the stored learning level for the skill should be updated to an updated learning level and may be based at least in part on the degree of accuracy of the written response.

At the method may include determining that a learning level for a skill of a user profile should be updated to an updated learning level based on user performance data from the learning application program and predetermined learning assessment rules. It will be appreciated that this determination may be based on a plurality of user responses to challenges. Thus as indicated by a dashed line between steps and the method may iteratively present a plurality of challenges to the user prior to making the determination at . For example the user may be presented with a challenge set containing a predetermined number of challenges which are successively presented to the user and the determination at may be based on the plurality of responses received for the challenge set.

At the method may include sending a write request to learning service program to modify the learning level for the skill in the user profile to an updated learning level.

The interaction of various components of computerized learning system to achieve a scaffolding support system is described in detail below. As described above with reference to computerized learning system includes learning application programs executable on a client computing device . The learning application program may further include a user interface configured to present a challenge to a user and receive a user response to the challenge. The user interface may include a support system configured to present support to aid the user in responding to a challenge. The learning application program may further include a scaffolding engine configured to determine a scaffolding level of the user for a skill and adjust the support provided for the skill via the support system based on the scaffolding level.

The scaffolding level for the skill may be stored in a user profile for example in non volatile memory accessible to the learning application program via application programming interface . The support system may be configured with a pull support option in which the support system presents support in response a user request for support via a support selector on the user interface. The support system may be configured with a push support option in which the support system presents support in response to a measured response parameter. Push and pull support are illustrated in greater detail in .

Referring now to the scaffolding engine may assign a scaffolding level to the user that is selected from a plurality of scaffolding levels that correspond to the user s learning level. As one specific example each learning level may have an associated scaffolding level selected from the group consisting of none N low L medium M and high H. In the illustrated embodiment the user has a scaffolding level of high H and a learning level of 1. It will also be noted that the learning levels 0 3 may have names associated with them such as beginner basic intermediate and advanced with level 0 being basic.

Furthermore the support system may be configured to tailor the amount of push and pull support offered to a user based on the user s scaffolding level for a skill with the most push and pull support being offered at the high scaffolding level some push support and full pull support being offered at the medium scaffolding level no push support and some pull support offered at the low scaffolding level and no push or pull support being offered when scaffolding is turned off. Thus it will be appreciated that not only the challenge itself may be tailored to the user s learning level but also the support for the challenge may be scaled to the user s scaffolding level for a particular skill.

The measured response parameter on which the support system delivers push support may be selected from a group consisting of response time number of incorrect responses response attempts accuracy level of response and score. A predetermined threshold for each type of measured response parameter may be set beyond which push support is presented to the user. As one example the skill may include listening and the support may include audio. As another example the skill may include reading and the support may include text. In yet another example push support may be presented to a user with a lowest score among a group of users or to a user whose score is below a predetermined threshold. Further the support may be provided in a native language of the user in one of spoken or written form. The support may also be provided in a target language of study in one of spoken or written form. Further the support system may be configured to assign a cost to the use of support the cost being used by the support system in evaluating whether to decrease the scaffolding level of the user. The cost of support in the target language may be lower than the cost of support in the native language for example. The support system may be configured to display the support in variety of output formats such as text audio animation video haptic pressure etc. which output may be attributable to a non player character in the learning application program. Further the support system may be configured to display the support as one or more user response options in one or more input format such as text input through a keyboard audio input through a microphone handwriting or input through a stylus mouse clicks gestures captured by a camera etc.

The learning application program may be configured to perform an intra game assessment and determine that the user has attained a user scaffolding level. The intra game assessment may be based on the use of support by the user in responding to one or more challenges. Typically the intra game assessment is based on a cumulative pattern of use of support by the user as compared to the use of support by other users. The learning application program may be further configured to sending a write request to update the profile of the user upon assessing that a user has attained a new scaffolding level. The learning application program may assess that a user has attained a new scaffolding level when the pattern of use of support for the user corresponds to that of other users at the new scaffolding level. By continuously performing intra game assessments the user s scaffolding level may be adjusted in order to stretch the user s learning ability. In this way support offered to the user is decreased and the rate of learning may be increased.

Furthermore the learning application program may be configured to assign a zone of proximal development as indicated at to the user based on the users assessed learning level and scaffolding level for a skill. The zone of proximal development as indicated at may be used to measure the approximate range of a user s current learning ability and may be used to adjust the content of the support or challenge presented by the learning application program with the goal of presenting content and support that is at the top of but still within the user s ability to comprehend and learn. For example language application program may be configured to determine whether a unit of game content such as challenge or support content is within the zone of proximal development and if it is not then to refrain from presenting the content to the user. In another example the learning application program may be configured to determine that a unit of content such as challenge or support content is above the user s current assessed and recorded learning level but within the user s zone of proximal development and may determine to present the content to the user in such a case to encourage growth of the user s learning level and test if the user is approaching a new scaffolding level or learning level.

Further the zone of proximal development may be considered when adjusting a scaffolding level or a learning level of the user. For example if the zone of proximal development indicates that a user s learning ability extends into a new scaffolding level or learning level at least one of the learning application program and the learning service program may initiate formal assessment review of scaffolding usage data and arbitration to request a change at least one of the scaffolding level and the learning level. Further if the review of scaffolding usage data indicates that a user s scaffolding level or learning level is above a threshold level the user s level may be updated and the zone of proximal development may be adjusted accordingly.

In some embodiments the support system may be configured to display a user accessible dictionary including each of a plurality of words presented in the challenge. The dictionary is typically a service level application and is a component of learning service program . As one example the dictionary may include information selected from a group consisting of a definition of the word in the target language and the native language of the user a media that illustrates the word a sample sentence using the word in context an audio file of the word being spoken and a pronunciation detector configured to receive and evaluate a user pronunciation of the word.

According to another embodiment the support system of the learning application program may be configured to present via a user interface of the learning application program a selected one of a plurality of levels of support. The selected level of support may be chosen based on a scaffolding level of the user. The scaffolding level of the user may be read from a user profile stored in memory and updatable upon determining that user performance in a learning application program meets or exceeds a predetermined threshold for scaffolding level advancement.

Game interface may include challenge module that may present a challenge to the user. Challenge module may include a challenge display pane for displaying the challenge in written form in at least one of the user s native language e.g. Chinese and the target language of study e.g. English . In some cases when a challenge is presented by a non playable character a portrait of the character may be included adjacent challenge display pane so that the user may identify who is providing the challenge.

As described above the learning application program may include a support system that can provide support to the user to respond to the challenge based on the user s scaffolding level. The support system may be configured with a pull support option in which the support system presents support in response to a user request for support and a push support option in which the support system presents support in response to a measured response parameter.

Furthermore both push and pull support may be selectively available based on a user s scaffolding level. In at least one embodiment the scaffolding levels may be selected from a group consisting of none low medium and high. Accordingly the support system may be configured to enable both the push support option and the pull support option upon detecting that a user scaffolding level for a skill is high disable some push support options and enable all pull support options upon detecting that a user scaffolding level for a skill is medium disable all push support options and enable some pull support options upon detecting that a user scaffolding level for a skill is low and disable both the pull support option and the pull support option upon detecting that a user scaffolding level for a skill is none.

In some embodiments the learning application program may be configured to display various types of visual or audio support based on the user s scaffolding level. For example a user with a high scaffolding level in Basic English may receive both written and spoken support whereas a user with a low scaffolding level may receive only spoken support. In the illustrated embodiment the user has a high scaffolding level so both visual and audio support may be provided.

Continuing with the pull support option may be provided as one or more support selectors on the user interface. Challenge module may include pull support selectors to aid the user in providing a response to the challenge. In some cases support may be provided in a native language of the user in one of spoken or written form. In some cases support may be provided in a target area of study e.g. English in one of spoken or written form. Specifically challenge module may include pull support selectors such as target language written support selector target language spoken support selector native language written support selector and native language spoken support selector . Responsive to a user selection target language written support selector may display the challenge in a written form of the target language in display pane . Responsive to a user selection target language spoken support selector may play an audio recording of the challenge spoken in the target language. The audio recording may be played from a speaker of the user client device . Responsive to a user selection native language written support selector may display the challenge in a written form of the native language in display pane . Responsive to a user selection target language spoken support selector may play an audio recording of the challenge spoken in the target language. It will be appreciated that selectors are challenge support selectors since they are configured to provide support to help the user understand the challenge.

Game interface may further include response module configured to enable the user to respond to the challenge. Response module may include a written response pane configured to display a user s written response and may also include spoken response selector . Response selector may be selected to activate an audio recording device to capture a user s spoken response. In some examples depending on the particular challenge a user s response may be only written or only spoken. In such cases the learning application program may adjust the appearance of the response module to only present the associated response mechanism i.e. written response pane or spoken response selector .

The support system may be configured to display support as user response options in text or audio. Accordingly the response module may include response support selectors configured to provide pull support to the user similar to the support selectors of the challenge module. In particular the response support selectors may provide target language written support target language spoken support native language written support and native language spoken support. In some examples a challenge may include multiple responses that may be presented in the response module for example responding yes or no . In such cases the response module may include support selectors that correspond to each of the respective responses similar to challenge selectors described above. For this reason the response support selectors will not be described in detail.

In some embodiments the support system may be configured to assign a cost to the use of support. The cost may be used by the support system in evaluating whether to decrease or increase the scaffolding level of the user. The cost may be based on for example response time number of response attempts requests for support etc. Thus cost meter may display the current number of support requests that a user may have remaining in order to demonstrate mastery of the challenge and to indicate to the user the norms for support requests at his her level of scaffolding. In addition cost meter may change its appearance each time the user requests support so that the user may have an indication of the number of support requests remaining. For example the cost meter may change color or eliminate a bar of the meter each time a request for support is made. In addition to a visual cost meter it will be appreciated that the cost of support may be implemented in another suitable manner for example by a score handicap according to which a user is awarded fewer points for completion of a challenge using support.

In some embodiments the cost of support may be different based on the type of support. For example the cost of support presented in the native language may be higher than the cost of support in the target language. Further in some embodiments the cost of support may be eliminated or reduce based on a user s scaffolding level. For example a user with a high scaffolding level a user who needs more help may not have a cost for support.

In some examples the support system may be configured to display a user accessible dictionary . For each of a plurality of words presented to the user in a challenge the dictionary may include information selected from a group consisting of a definition of the word in the target language and the native language of the user a media that illustrates the word a sample sentence using the word in context an audio file of the word being spoken and a pronunciation detector. The pronunciation detector may be configured to receive and evaluate a user pronunciation of the word. In some embodiments the dictionary may be selectively available based on at least one of scaffolding level and learning level.

In this example push support is supplied as target language written support displayed in the response module however push support may include other written or spoken support. Further in some cases push support may be presented by non player characters to aid the user in responding to the challenge.

The following table illustrates one specific set of scaffolding rules that may be used to deliver push and pull support based on user scaffolding levels in the user interface of .

It will be appreciated that the above scaffolding rules merely examples and are designed to be applied in learning application programs that teach language acquisition. Scaffolding that is applied in learning application programs that relate to other subjects such as mathematics may take a different appearance. For example instead of support in a native and target language all help may be in the native language. Further pull or push help for a math problem may display building blocks of knowledge that can be used by the user to solve the math problem or may begin solving an equation step by step etc.

Referring now to a flow chart illustrating a computerized learning method for determining recommendation of a learning application program will be described. The recommendation may be provided to the user a parent of the user or an administrator of the user via a graphical user interface. In some embodiments the recommendation may indicate one or more learning application programs. These learning application programs may be attributed to improving a particular skill of the user. As such the recommendation can provide learning application programs that are more effective at improving the particular skill than a learning application that is merely selected by the user at random from a population of learning applications. In this way the learning level or skill of the user may be advanced more rapidly or more thoroughly than may otherwise occur without the recommendation.

Beginning at a profile characteristic of the user may be received as an input at the learning application program. As one example referring also to the user may input one or more profile characteristics at a particular learning application program via user input device of user client device . As also described herein profile characteristics may include but are not limited to one or more of the elements described by Table 1. At profile characteristics of the user may be stored in a user profile.

As indicated at the method may further include receiving performance data for the user from at least one of a plurality of learning application programs at the learning service program. As one example where the user interacts with or uses a particular learning application program performance data associated with the interaction may be received by the learning service program. In some embodiments the performance data may be received by one or both of local learning service program and online learning service program . The performance data may be used by the assessment engine A B to determine a particular learning level for the user which may be stored in the user s profile. Note that the user s profile may reside locally at client device at a peripheral device as illustrated at A or remotely at B at the data store . The performance data may also be used by the assessment engine A B to update other learning data of the user in addition to or alternatively from the learning level of the user. For example in some embodiments the assessment engine may update a scaffolding level or other learning data stored in the user profile.

As indicated at the method may further include updating a learning level and or other learning data of the user based on the performance data from at least one of the plurality of learning applications. As performance data is received by the learning service in response to user interaction with a learning application program assessment engine A B is configured to determine a learning level for the user based on the performance data generated from the interaction. The learning level of the user for a particular skill may then be used to update the learning level of the skill at the user s profile. In some embodiments a change in the learning level for the user may be measured between the previous learning level that was stored in the user profile and the updated learning level. For example a learning level of the user for each skill identified by the learning service program may remain the same increase or decrease with respect to the previous learning level stored at the profile. As discussed above the assessment engine can reside at either or both of the local and online service programs.

At a recommendation may be determined for the user by a recommendation engine A B which may include one or more of the operations described with reference to . The recommendation may be based on the updated learning level or other learning data of the user. In some embodiments the determination of the recommendation also may be based on comparisons to patterns of advancement shown by aggregated performance data from other users using the plurality of learning application programs the other users sharing one or more matching profile attributes with the user. As described herein a recommendation may indicate one or more learning application programs websites printed or electronic publications such as books or other content stored at or referenced by the learning service about which the learning service has knowledge or meta data. In some embodiments the recommendation may further indicate a particular portion or challenge of the learning application that may be accessed by the user to improve a particular skill. As discussed above the recommendation engine can reside at either or both of the local and online service programs. However while depicted in both locations in the Figures in some embodiments it will be appreciated that the recommendation does not reside locally but only on the online server system .

At the method may include identifying a group of users based on at least one matching profile characteristic with the user. For example the identified group of users may have at least one matching profile characteristic with the user where one or more of the matching profile characteristics may be received as input from the user. Alternatively the matching profile characteristic may be inferred from user activity by the learning service program. As one example the group of users may be selected based on native language and target language of study. However it should be appreciated that other matching profile characteristics may be considered. Profile characteristics being matched further may include similarities in learning trend data or other data captured in the learning service but not explicit in the users profiles. The identification of one or more groups of users is described in greater detail with reference to .

As indicated at the method may further include updating a learning level for the group of users from a previous learning level at an online learning service. For example as each user of the group of users interacts with or uses a learning application program the learning level of each of the users may be updated in a respective user profile as described above with reference to .

As indicated at the method may further include measuring a change in the learning level for the group of users between the previous learning level and the updated learning level attributable to at least a selected one of the plurality of learning application programs. The change in the learning level of each user of the group of users may be used to identify which learning applications are effective at increasing the learning level of the user.

At a recommendation may be determined for the user based on at least one of the updated learning levels of the user and the measured change in the learning level for the group of users. For example the method may include determining a recommendation for the user based on the updated learning level of the user. Additionally the determination of the recommendation may be further based on the measured change in the learning level for the group of users. For example the recommendation may be determined by the recommendation engine so that it indicates learning application programs that have caused the greatest increase in the learning level of the group of users for a particular skill.

Note that a recommendation may indicate any suitable number of learning application programs or particular challenges associated with a learning application program. As one example the recommendation may indicate at least one of a plurality of learning application programs. In some embodiments the recommendation may further indicate a particular challenge of a learning application program. As yet another example the recommendation may indicate at least two of the plurality of learning application programs. Furthermore in some embodiments the recommendation does not include a learning application program that was previously used by the user. In this way the user may be recommended learning applications books websites etc. that have not been previously used or purchased by the user thereby reducing redundancy in the recommendation and increasing the relevancy of the recommendation.

As indicated at a weighting factor may be determined based on a comparison of the profile characteristics of the user and the group of users. As is described in greater detail with reference to a weighting factor may be applied by the recommendation engine in order to consider the relevancy of the learning information obtained from the group of users. As one non limiting example the profile characteristics of the user may be compared to the profile characteristics of each user of the group of users. For example the greater the match between the user s profile and the profile of the group the greater the weighting factor that may be determined. In this way the recommendation engine can provide greater deference to learning information associated with a group of users that more closely matches the user for which the recommendation is to be determined thereby increasing the relevancy of the recommendation.

As indicated at the method may include assigning a recommendation value to each learning application program of the recommendation. The recommendation values may be used for displaying the recommendation on a graphical user interface. As one example the relative position on the graphical user interface of each of the learning application programs indicated by the recommendation may be based on the assigned recommendation value of each learning application program. For example a recommendation value may be assigned to each learning application program of the recommendation based on the measured change in the learning level of the group of users and the weighting factor for the group of users determined at . Note that in some examples a weighting factor may not be used by the recommendation engine when determining a recommendation for the user. For example the user may be assigned to a user group without necessarily requiring that a weighting factor be determined.

As one non limiting example the learning application programs indicated by the recommendation may be arranged in a particular order when displayed on the graphical user interface. This order may be based on the recommendation value of each of the learning application programs. For example the learning application program that is attributable to the greatest increase in the learning level of the group of users may be assigned the highest recommendation value of the plurality of learning applications such that it may be placed at the first position or top of the order. Conversely a learning application that did not increase the learning level of the group of users may be assigned a lower recommendation value thereby causing the learning application to be displayed closer to the bottom of the list or at a different page. In this way it may be more likely that user or the user s parent teacher or other administrator will select the most effective learning application program.

At the recommendation for the user may be stored. As one example the recommendation may be stored at the learning service either locally at the local learning service or remotely at the online learning service. As another example the recommendation may be stored at a profile of the user such as at the local profile located at the client at a profile located at a peripheral device or remotely at the online learning service. In this way the recommendation may be determined in advance to a user s recommendation request thereby reducing the amount of time for providing the recommendation to the user.

At a request for the recommendation for the user may be received. For example the user may request the recommendation at the learning service program. Alternatively a parent teacher administrator or other administrator of the user may request the recommendation at the same or at a different client device via a respective parent teacher administrator or other administrator graphical user interface.

As indicated at the method may include displaying the recommendation on a graphical user interface of the learning service program. Where the recommendation is stored prior to the request the recommendation may be retrieved by the learning service. Alternatively the recommendation may be determined upon a request for the recommendation. Where the recommendation indicates multiple learning application programs the method may include displaying each learning application program of the recommendation on the graphical user interface. In some embodiments the relative position of each of the learning application programs on the graphical user interface may be based on the assigned recommendation value of each learning application program that is indicated by the recommendation.

As indicated by of the graphical user interface User is logged in or signed in to the learning application program marketplace such that recommendation for User is displayed. Alternatively a parent teacher administrator or other administrator may sign into the learning application program marketplace which may likewise be indicated at . Further indicates that the recommendation currently displayed by the graphical user interface is for User .

In this particular example the recommendation displayed by the graphical user interface indicates learning application programs 1 N via indicia . However it should be appreciated that any suitable number of learning application programs or particular challenges thereof may be indicated by the recommendation as indicated by the variable N in the fourth learning application program shown. Furthermore it should be appreciated that a recommendation may indicate learning application programs that span two or more pages displayed by the graphical user interface or that occupy a scrollable window. Thus may represent only a portion of the learning applications indicated by the recommendation for User .

A first learning application program of the recommendation for User is indicated at . The first learning application program may be indicated by a title indicated for example as Learning Application Program Gamma . A customer rating of the learning application program may be represented graphically for example by a number of stars. It should be appreciated that other suitable approaches may be used for displaying a user rating for the learning application program. A set of skills utilized by the learning application program may be indicated at . These skills may be used by the recommendation engine for recommending learning application program to the user based on the user s learning level for the particular skills associated with each of the learning application programs. For example the set of skills associated with learning application program Gamma includes skills such as English reading speaking and listening. Further the set of skills may include a skill range indicated by for example as 1 4. However other suitable ranges or values may be used. A description of the learning application program Gamma may be displayed. For example the description for learning application program Gamma may recite Gamma is the highest rated application . An image further indicates that a pictorial representation of the learning application program may also be displayed.

A purchasing interface may be displayed by the graphical user interface to enable the user or administrator of the user to select and purchase the learning application program. For example a selectable icon titled Buy Now may be displayed. Further a learning application program Gamma may require 25 points of a currency to complete the purchase. One or more seals may be provided adjacent each learning application program recommendation indicating that the learning application program has earned a seal of approval and is thus recommended by a third party certification service such as a testing service a government agency a school etc.

A second learning application program of the recommendation for User is indicated at . The second learning application program may be indicated by a title that is different from the first learning application program indicated as learning application program Alpha. The second learning application program may be displayed in a manner that is similar to the first learning application program. For example learning application program Alpha may also include a customer rating a skill set including a skill level and list of skills a description and an associated image. Furthermore a purchasing interface for learning application program Alpha may also be displayed. Note that in some embodiments a common purchasing interface may be to facilitate the purchase of two or more learning application programs.

A third learning application program Beta of the recommendation for User is indicated at . The third learning application may be indicated using similar indicia as the first and second learning application programs. An Nth learning application program Sigma of the recommendation for User is indicated at . The Nth learning application program may represent any suitable number of learning application programs that may be indicated by the recommendation for User .

In some embodiments only a portion of the recommendation may be displayed by the graphical user interface at a particular instance. Thus a selectable icon may be provided to enable the user or an administrator for the user to view more learning application programs that may be indicated by the recommendation in addition to those currently displayed.

As described with reference to method learning application programs may be displayed in an order that corresponds to their respective recommendation value. For example referring again to learning application program Gamma may be positioned before learning application program Beta on the graphical user interface where learning application program Gamma has a greater recommendation value. In other words learning application Gamma may have been attributed to a greater increase in the learning level of other users for a particular skill than learning application program Beta. In some embodiments the particular order of the learning application programs may be further indicated by corresponding indicia . Thus in this particular example Gamma is ranked first as indicated by and Beta is ranked third as indicated by .

Furthermore a learning application program that has already been purchased by the user or has already been used by the user may not be presented for the user with the recommendation or may be excluded from the recommendation. For example a learning application program may have a higher recommendation value than Gamma but it may nonetheless be removed from the recommendation by the recommendation engine. In this way redundancies in the recommendation may be reduced and relevancy of the recommendation may be increased.

As described with reference to of method a group of users may be identified when determining a recommendation for a particular user based on at least one matching profile characteristic. Referring now to a schematic diagram identifying various groups and subgroups of an example population of users is illustrated. As illustrated by a population may include any number of users that are interacting with a learning service such as local learning service or online learning service program .

Population also includes the users associated with groups and . Group which includes a subset of users from population may be defined as the users of population that share a first number of matching profile characteristics. As one specific example the users of group may share a profile characteristic that includes native language. For example the users of group may have a native language of Chinese. Hence the users of group may be more closely related to each other based on their profile characteristics than the remainder of population that is excluded from group .

Group which includes a subset of users from group may be defined as the users of population that share a second number of matching profile characteristics. In this particular example the second number of matching profile characteristics is greater than the first number of matching profile characteristics associated with group . In other words the users of group may be more closely related to each other based on their matching profile characteristics than the users of group that are excluded from group . For example where the users of group share a profile characteristic that includes native language the users of group may share profile characteristics that include both native language and grade of the user. Hence the number of users of group may be less than the number of users of group as group includes a more specific subset of users.

Similarly group which also includes a subset of users from group may be defined as the users of population that share a third number of matching profile characteristics. In this particular example the third number of matching profile characteristics associated with group is also greater than the first number of matching profile characteristics associated with group . Hence the number of users of group may be less than the number of users of group .

Note that the second number of matching profile characteristics defining group can be the same or different from the third number of matching profile characteristics defining group . Furthermore the type of profile characteristic that is shared among users may also differ. Groups and may be defined by different matching profile characteristics while sharing the same number of matching profile characteristics. As one example the users of groups and may share profile characteristics that include native language. As a more specific example group can include a native language of Chinese and a user age of 10 years and group can include a native language of Chinese and a target language of study of English. It should be appreciated that any number and type of matching profile characteristics may be used to define a group of users of the user population. For example similar learning levels for specified skills may also be used as a matching profile characteristic. A summary of example profile characteristics is described herein with reference to Table 1.

Continuing with group which includes a subset of users from groups and may be defined as the users of population that share a fourth number of matching profile characteristics. In this particular example the fourth number of matching profile characteristics associated with group may be greater than the second and third numbers of matching profile characteristics associated with groups and respectively. As one example the users of group may share a profile characteristic that is not necessarily shared by all users of group or group . For example where group includes users having a native language of Chinese and a user age of 10 years and group also includes users having a native language of Chinese but instead a target language of English group may include users having a native language of Chinese a target language of English and a user age of 10 years.

In this way one or more groups of users may be defined within a population of users based on any suitable number or type of matching profile characteristics. Further as illustrated by each group of users may be a subset of a larger group of users. In some examples users may be associated with one or more groups based on their respective profile characteristics.

As described with reference to of method a weighting factor may be determined in at least some examples based on a comparison of the profile characteristics of the user and the profile characteristics of a group of users. Referring now to a graph illustrating an example weighting factor function is described. As illustrated by the non limiting example of the weighting factor determined by the recommendation engine may increase with an increasing number of matching profile characteristics. For example referring also to a comparison of a user of group to the other users of group may result in a higher weighting factor than a comparison of the user of group to other users of group that are excluded from group . In other words the more closely a user shares profile characteristics with a group of users the higher the weighting factor that may be determined for the comparison.

The weighting factor may then be used by the recommendation engine to influence the recommendation. For example the influence of a particular group on the recommendation may increase with increasing weighting factor. As one non limiting example the relevance of the measured change in the learning level of the group of users may be adjusted by the weighting factor. In this way users that are more closely matched to the user for whom the recommendation is determined may influence the recommendation more than users that are less closely matched to the user.

Note that while illustrates how the weighting factor may vary with the number of matching profile characteristics the weighting factor may also vary with the type of matching profile characteristic. As one non limiting example the native language of a user may influence the weighting factor more than the age of the user. As such it should be appreciated that any suitable function may be used to determine a weighting factor based on the number and type of matching profile characteristics. Further the particular skills that are identified as behind the average deficit skills for peer matched profiles for a user may lead to the recommendation emphasizing those learning applications or other content that specifically targets those deficit skills.

Referring again briefly to a system for matching users of learning application programs may include learning service program configured to receive performance data for each of a plurality of users from a plurality of learning application programs such as learning application programs for example. The learning service program may be further configured to receive a request from a requesting learning application program to perform matching of the plurality of users for multi user interaction via the requesting learning application program. The system for matching users may also include a matching engine A B associated with the learning service program. The matching engine A B may be configured to match the plurality of users based on the performance data for each user received from the plurality of learning application programs to thereby produce a match result including one or more matched groups of users. As one example the matching engine A B may be executed locally on user client device and may be associated with the local learning service program.

The learning service program may be configured to send the match result to the requesting learning application program. The learning system may further include application programming interface configured to transmit communications between the learning service program and the requesting learning application program.

Computerized learning system may further include online learning service program executed on the online server system configured to communicate over the computer network with the local learning service program executed on user client device . The matching engine A B may be a component of the online service learning service program and may be configured to send the match result to the requesting learning application program via the local learning service program.

Computerized learning system may further include assessment engine A B associated with the learning service program configured to determine an assessed learning level for each of the plurality of users based on the performance data. It should be appreciated that the assessed learning level may be determined on a per skill basis for each of the plurality of users. The matching engine A B may be configured to match the plurality of users based on the assessed learning level for each of the plurality of users. It will be appreciated that other learning data for each of the plurality of users may also form the basis for the matching.

The matching engine A B may be configured to determine one or more skills utilized by the requesting learning application program by referencing application specific game schema in a game configuration file. As one example the game configuration file may be stored in non volatile storage A B accessible to the matching engine A B. The matching engine A B may be configured to match users based on learning levels for the skills determined to be utilized by the learning application program.

Computerized learning system for matching users may include a matching engine configured to receive a matchmaking request from a requesting learning application program via application programming interface . The request may be used to perform matching of a plurality of users for multi user interaction via a learning application program. The matching engine A B may be further configured to process the request by determining a plurality of available users who are available for game play reading performance data in a learner profile for each of the available users comparing the performance data according to a matching mode to thereby produce a match result including one or more matched groups of users and sending the match result to the requesting learning application program.

The learning service program may include local learning service program executed on a user device. The learning service program may further include online learning service program having an associated matching engine. The learning service program may receive requests from users to engage in a multi user online interaction via a learning application program where the matching may be performed in response to the request. At the method includes receiving a request to perform matching of the plurality of users for multi user interaction from a requesting learning application program. It will be appreciated that the request to perform matching may be received from a requesting learning application program and the request may include data indicating the game type of the requesting learning application program.

As shown at the method may include determining one or more skills utilized by the requesting learning application program by referencing an application specific game schema in a game configuration file stored at a location accessible to the learning service program. At the method may further include at the learning service program selecting a matching mode for matching the plurality of users based on the received game type of the requesting learning application program. For example the matching mode may be selected from a group including a mentor matching mode a team matching mode and a parity matching mode. Thus in some examples a plurality of matching modes may be provided.

At the method may include matching the plurality of users based on one or more parameters. As indicated at the method may include matching the plurality of users based on the performance data for each user received from the plurality of learning application programs to thereby produce a match result including one or more matched groups of users. As indicated at the method may further include matching the plurality of users based on a matched user profile characteristic of each of the plurality of users. The matched user profile characteristic may be selected from the group consisting of first or native language target language country grade level learning level for a skill age gender interests other profile data stored for each user or other user data that may be relevant to targeted learning skill or game genre.

At the method may include matching the plurality of users based on the assessed learning level for each of the plurality of users. At the matching may be based on learning levels for the skills determined to be utilized by the learning application program. At the method may further include matching among a plurality of users who are logged into the online service program and who have access to the learning application assets needed to play the learning application program or are otherwise registered to be online and available to play. In some embodiments the matchmaking engine is configured to send a message asking users who are detected to be online but not logged into the online learning service whether they would like to join a group of users who are commencing interactive play. The matching of the plurality of users may be based on one or more parameters described with reference to .

Referring to the plurality of users may be matched at based on the selected matching mode described above with reference to . As indicated at the matching mode may be a mentor matching mode according to which the learning service program may be configured to match users of disparate learning levels into one or more groups. Each group may include at least one mentor and at least one mentee. The mentor may have at least an assessed learning level that is higher than an assessed learning level of the mentee.

As indicated at the matching mode may be a parity matching mode according to which the learning service program may be configured to match users of substantially equal learning levels for head to head or cooperative game play. In some embodiments the learning service program may be configured to match users of substantially similar learning levels or may be configured to create the closest match of the users that may be practical from the population of users.

As indicated at the matching mode may be a team matching mode according to which the learning service program may be configured to match users into two or more teams of users with substantially equal aggregate team learning levels. In some embodiments the learning service program may be configured to match users into two or more teams with substantially similar learning levels or may be configured to create the most equal match of the teams that may be practical from the population of users. Note that the aggregate team learning level can include a total learning level of the team members an average learning level of the team members or a median learning level of the team members among other suitable aggregation approaches. In this way the users may be matched based on a selected matching mode.

At the method may further include recommending a handicap level to achieve substantial equality in learning levels among matched users. As one example where the parity matching mode is selected users having different learning levels may be provided with a handicap to reduce the difference between the learning levels. It should be appreciated that the handicap may be applied to each of the matching modes where there is an undesired difference in learning levels.

The method may further include at sending the match result to the requesting learning application program and at displaying the match result on a graphical user interface of the requesting learning application program. As one example the match result may be displayed on sign in interface of a particular learning application program via user client device . Once the match result is displayed the computerized learning system is configured to enable the users to engage in multi user interaction according to the match result.

The interaction of the various components of computerized learning system with trophy engine A B are discussed in detail hereinafter. Referring to discussed above learning service program may be configured to receive user performance data from a plurality of learning application programs . It may be appreciated that the user performance data may be organized according to a predefined schema such that user learning level in one or more predefined learning levels may be measured across the plurality of applications. Learning service program may include an assessment engine such as local assessment engine B that is configured to determine an assessed user learning characteristic such as a user learning level based on the user performance data. The learning service program may further include a trophy engine such as local trophy engine B that is configured to award a trophy or achievement to the user upon determining that the assessed user learning characteristic meets or exceeds a predetermined threshold. In the case where the user learning characteristic is a user learning level for a skill the trophy engine is configured to determine whether the user learning level meets or exceeds a predetermined user learning level. It may be appreciated that instead of a local assessment engine B executed on a local user client device and the assessment engine may be an online assessment engine A executed at the online server system . The online assessment engine A may be configured to administer an assessment test to the user to verify that the user has attained a user learning level that meets or exceeds the predetermined learning level threshold.

Learning service program may be configured to store data relating to a trophy in profile of the user. For example data relating to a trophy may be stored in the achievement array element of profile . It may be appreciated that profile of the user may be stored in non volatile storage A B on one or both of a local user client device and an online learning service.

As discussed above computerized learning system may further include application programming interface configured to receive the user performance data from each of the plurality of learning application programs and store the user performance data in profile for retrieval by the learning service program application programming interface being further configured to read and write data relating to the trophy in the user profile.

Learning service program further may be configured to display a graphical user interface including an icon representing the trophy. According to another embodiment the system may include learning service program configured to display a graphical user interface the graphical user interface being configured to display trophies awarded to a user by the learning service program for achieving assessed user learning levels meeting or exceeding a predetermined learning level threshold based on user performance in a plurality of learning application programs .

Referring to as described above user interface may include trophies pane configured to display trophies that represent achievements the user has made in each of the plurality of learning application programs. In a more particular example each of the displayed trophies may include a unique trophy graphic and a description of the accomplished task associated with the trophy. In some embodiments trophies pane may include a selector such as the details selector which is configured to display a trophy graphic user interface described below with reference to which presents detailed information about trophies earned by the user. Alternatively the trophies may be displayed in a game play interface of a learning application program or in the summary view.

In the depicted embodiment the trophy information of friends Mei Mei and Da rin is displayed in the semi private friends pane of trophy graphical user interface . The semi private friends pane may include information associated with trophy points trophies won trophy progress and dates corresponding to trophies for each friend. Additionally the trophy can record learning assessment data including detailed information regarding the skill levels achieved prior to awarding the trophy with pointers to a data record of the assessment. The trophy graphical user interface may include a selector for receiving a user selection to cause the trophy to be hidden from friends in the semi private view. In the depicted embodiment the selector hides all trophies from the view of friends however it will be appreciated that the hide selector may be provided for each trophy individually. Further learning service program may be configured to send a notification message to a parent of the user regarding the award of the trophy. This enables parents to keep up to date on a student s learning progress. A similar message may be sent to an administrator such as a teacher. For example the system may be configured to send a teacher trophy information for each student in a class.

As shown in a computerized learning method for use with trophies is illustrated. The method includes at receiving user performance data from each of a plurality of learning application programs at learning service program . At the method may further include determining an assessed user learning characteristic based on the user performance data. The assessed user learning characteristic may be an assessed user learning level or other characteristic such as attendance that is not learning level related. At the method may include administering an assessment test to the user to verify that the user has attained a user learning characteristic that meets or exceeds a predetermined threshold. In some embodiments the assessment test may verify that the user has attained a predetermined user learning level threshold. The method may further include prior to administering the assessment test receiving parental authorization for the user to undertake the assessment test. It will be appreciated that the assessment test may be administered via an online learning service.

At the method may further include awarding a trophy to the user upon determining that the assessed user learning characteristic meets or exceeds a predetermined threshold. As discussed above this may include determining that a user learning level meets or exceeds a predetermined user learning level threshold. At the method may further include storing the trophy in a user profile accessible to the learning service program. At the method may further include displaying the trophy on a graphical user interface of the learning service program. Alternatively the trophy may be displayed on the user interface of a learning application program.

At the method may include sending a notification message from the online learning service to the parent of the user regarding the award of the trophy.

As discussed above it should be appreciated that trophies may also be awarded for user learning characteristics that represent achievements within a learning application program that are not directly related to attainment of a learning level. For example a learning application program developer may specify that a user is to be awarded a trophy after playing the learning application a predetermined number of times or for perfect attendance at online events. In this case instead of steps above the method may include determining that the user has achieved a predetermined trophy criterion which may be set by the game developer and then awarding the trophy to the user upon making such determination.

The interaction of the various components of computerized learning system with parent graphical user interface is discussed in detail hereinafter. Referring to as discussed above learning service program may be configured to receive learning data from a plurality of learning application programs . Computerized learning system may include profile of the user configured to store the learning data in non volatile storage accessible to learning service program and parent graphical user interface displayed by the learning service program and configured to include a parent view of learning data associated with the profile. It may be appreciated that the parent user interface may be displayed via at least one of a web page email SMS short message service message local service program graphical user interface and web enabled mobile telephone or other suitable display device or format.

As described above learning service program may include assessment engine A B configured to determine an assessed user learning level based on the user performance data and store the learning level being in profile of the user. The assessed user learning level may be stored in profile according to a profile schema. Learning service program may further include a statistics engine A B configured to aggregate learning data stored in profile of the user with data stored in profiles of other users to thereby produce a statistical comparison. Learning data may be uploaded from profile of the user. Learning data of other users as defined by various elements such as the friends array the group array and the group members array according to the profile schema may be uploaded from profiles of other aggregated users. Learning service program may include recommendation engine A B configured to determine a recommendation for continued action for the user based on data stored in the learner profile.

Referring next to a parent graphical user interface is shown. The interaction of the various components of computerized learning system with parent graphical user interface is discussed in detail hereinafter. As discussed above learning service program may be configured to receive learning data from a plurality of learning application programs and each user s profile may store the learning data in a non volatile memory accessible to learning service program . Parent graphical user interface which may be opened by selecting the parent button of sign in interface is configured to present to a parent a view of learning data associated with a user profile. It may be appreciated that the parent user interface may be displayed via any one or more of a web page an email message a short message service sms message a local service program graphical user interface and a web enabled mobile telephone.

The parent graphical user interface may include various panels configured to present information to a parent. In some embodiments the information presented to the parent may include information produced by the various engines of learning service program shown and described in reference to above. For example as discussed above the assessment engine A B may be configured to determine an assessed user learning level based on user performance data provided by a learning application program and to store the learning level in profile of the user. Learning service program may further include statistics engine A B which may be configured to aggregate learning data stored in profile of the user with data stored in profiles of other users to produce a statistical comparison of the user with the other users. Learning service program may additionally include recommendation engine A B configured to determine a recommendation for continued action for the user based on data stored in the learner profile.

Information from each of these engines may be shown on parent graphical user interface . For example the parent graphical user interface may be configured to display an assessed user learning level determined by assessment engine . In the depicted embodiment the assessed learning level is displayed in progress panel as a plurality of learning levels for a skill arranged over time. Likewise statistical comparisons of a user to other users generated by statistics engine B may be displayed in a statistical comparison panel . Further a recommendation generated by recommendation engine A B may be displayed in a student recommendations panel . As specific examples of recommendations one or more recommended learning application programs for the user may be listed in the recommendations panel .

Continuing with the parent graphical user interface may be configured to display a summary of user activity in one or more of the learning activity programs utilized by the user. In the depicted embodiment a plurality of learning application programs are listed with a corresponding number of times played and a date played in a user activity summary panel . This information may be acquired for example by uploading from profile meta data of the user according to profile schema. It will be appreciated that the information shown in user activity summary panel is shown for the purpose of example and that any other suitable information may be shown in the user activity summary panel .

The parent graphical user interface may further include a friends status panel showing which of the user s friends are currently online and also a service level vocabulary status panel showing progress made acquiring vocabulary in one or more learning application programs. The parent graphical user interface may be further configured to display a control panel on the parent graphical user interface control panel being configured to receive parent selected control parameters governing a parent regulated activity of the user on the computerized learning system . Examples of activities that may be regulated include but are not limited to approved games approved friends and or approved time for playing games.

At the method may further include authorizing access to the parent graphical user interface for an authenticated parent of the user. For example a parent ID stored in meta data of profile may be associated with an encrypted password of an authenticated parent of the user.

The method may further include at displaying learning data from engines of learning service program . For example the method may include at reading an assessed user learning level for a skill from profile of the user and displaying the assessed user learning level in the parent view of profile of the user on parent graphical user interface . Additionally the method may include at displaying a statistical comparison of learning data stored in profile of the user with data stored in profiles of other users on parent graphical user interface . The method may further include at displaying a recommendation for the user on parent graphical user interface the recommendation being selected based on data stored in profile of the user. The method may also include at displaying a summary of user activity in the plurality of learning activity programs on parent graphical user interface displaying at information regarding online friends of a user on parent graphical user interface and or displaying at information regarding new skills acquired by the user on parent graphical user interface . The information displayed by the method described may be embodied in panels of parent graphical user interface as described above.

The method may further include at displaying a control on the parent graphical user interface the control being configured to receive parent selected control parameters governing a parent regulated activity of the user on the computerized learning system . One or more parent regulated activities may be selected by an authenticated parent of the user in the controls of profile according to profile schema as described above. The parent regulated activities may be selected in control panel on parent graphical user interface . Examples of parent regulated activities include but are not limited to whether a user is allowed to associate with selected other users via a friends interface whether a game or other application is an allowed application whether a selection within a game or application is an allowed selection and whether a user has permission to use a game or application for a specified duration at a specified time identity of the learning application program or whether an exchange of activities may be arranged e.g. an equal amount of time spent in learning activities can be exchanged for watching videos or other entertainment.

The interaction of the various components of computerized learning system with an administrator graphical user interface discussed in detail hereinafter. Two exemplary administrator graphical user interfaces are illustrated in namely a teacher administrator graphical user interface and a managing administrator interface . Teacher administrator graphical user interface is configured to display learning data from students in a teacher s classroom and managing administrator interface is configured to display administrative data as well as individual and aggregate learning data of students. As used herein the term managing administrator refers to a school official government official or other person having authority to view learning data for entire schools school districts geographic regions or other student populations in the aggregate. As used herein the term teacher administrator is refers to a teacher of a class of students. Thus the term administrator is used broadly to refer to a person with authority to administer educational services to a population of students and it will be appreciated that a teacher is considered a type of administrator herein. The population of students need not be present within a formal educational institution but may be an informal or ad hoc group.

As discussed above learning service program may be configured to receive learning data for a plurality of users from a plurality of learning application programs . Computerized learning system may further include reporting engine A B responsive to administrator selected parameters so as to retrieve and process the learning data to produce reports configured to be displayed on teacher and managing administrator graphical user interfaces . It may be understood that reporting engine A B may be configured to receive and process administrative data for use in creation of the reports. Teacher and managing administrator graphical user interfaces may include a selector configured to receive the administrator selected parameters and the administrator selected parameters are adapted to form the basis for the display of a learning data report.

As discussed above learning service program may include an assessment engine A B configured to determine an assessed user learning level based on the learning data wherein the assessed user learning level is displayed on teacher and managing administrator graphical user interfaces . Learning service program may further include statistics engine A B configured to aggregate the learning data for the plurality of users. Teacher and managing administrator graphical user interfaces may display a statistical comparison of the learning data. Learning service program may include recommendation engine A B configured to determine a recommendation for continued action for the user based on data stored in the learner profile. Teacher and managing administrator graphical user interfaces may further display a recommendation for one or more of the plurality of users the recommendation being selected based on the learning data. Learning service program may include matching engine A B configured to match two or more of the plurality of users based on the learning data received at learning service program for said two or more users.

In one embodiment teacher administrator selected parameters may be adapted such that learning data displayed in a learning data report such as report on teacher administrator graphical user interface may include learning level data. For example learning data parameters may be selected in report selector such that the learning data report at may display learning level data. In another embodiment learning data displayed on teacher administrator graphical user interface may include learning data associated with a predefined group of users through time. For example learning data parameters may be selected in report selector to include a group of one or more users. The predefined group of users may include at least one of a classroom a school a school district a state and a country for example. Student selector subject selector and report template selector are provided to select individual students subjects and report templates for the learning data report. Further it will be appreciated that in the depicted embodiment data in these selectors is populated by demographic selector . Demographic selector includes pull down menus by which a user may select a class year semester and month from which data is to be drawn from for including in selectors which in turn may be used by the user to further filter the data for inclusion in report . Some or all of this demographic data may be gathered from school records via proprietary computerized database systems if not available from computerized learning system . Further it will be appreciated that in some embodiments learning data gathered from computerized learning system may be combined with learning data from other sources such as standardized test scores demographic data etc. to produce report .

As described above teacher administrator graphical user interface may display a statistical comparison of the learning data. For example a statistical comparison in the form of a graph or table may be included in report . Teacher administrator graphical user interface may further display a recommendation for one or more of the plurality of users the recommendation being selected based on the learning data. For example recommendation pane may include an assessment of the learning level of one or more students or the group for a skill and a list of one or more recommendations.

The following is a list of example reports that may be produced via the teacher administrator user interface.

Various administrative data may be selected via report selector . Report selector typically includes a demographics selector configured to receive user selection of geographic region such as state class and school district and block neighborhood within a school district from which administrative data will be drawn to produce administrative report . Report selector may further include an administrative data selectors such as computerized learning system data selector and external data selector configured to enable the user to select with particularity which data gathered from external sources to include in administrative report . The computerized learning system data selector typically is configured to enable the user to select data gathered from computerized learning system while external data selector is typically configured to enable the user to select data gathered from third party and proprietary sources such national exam statistics or a school district s own records.

In one embodiment the external data may include financial data such as salary data management expense data and promotion data that the administrator may wish to compare and correlate. This data may be drawn from third party or proprietary services that reside outside of the learning service and may be combined with learning service data through the use of web services. The external data may also include administrative data such as testing data administered and scored in a standard manner. For example testing data may include one or more of state or national exam scores TOEFL scores and or Flesch Kincaid or other proficiency data. In yet another embodiment the external data may also include organizational data gathered from services outside of the learning service but combined for reporting purposes with learning service data. For example the organizational data may include one or more of enrollment data disability data gender distribution data and teacher absentee data. Various other exemplary data types are illustrated in . Administrative report may be configured to display a report containing a graphical or textual representation of the computerized learning system data such as the median assessed learning levels for English in the depicted embodiment. In addition as shown at A the administrative report may be configured to display a report containing a graphical or textual representation of computerized learning system data combined with other data from third party or proprietary sources such as the comparison of median assessed learning levels for English with median standardized test scores for English.

Further it will be appreciated that managing administrator graphical user interface is typically configured to offer the administrator access via link to the teacher administrator graphical user interface with managing administrator level permissions thereby enabling the generation of all of the reports listed above on a individual or classroom basis plus the following reports for larger aggregate groups of students.

The administrator user interface may also be configured to display a marketplace pane in which for example books and software of interest to managing administrators may be displayed. In the depicted embodiment a top sellers list is illustrated. Within the marketplace pane a link may be provided by which the administrator can access further information or make a purchase.

At the method may further comprise displaying a selector on administrator graphical user interface the selector being configured to receive administrator selected learning data parameters governing learning data displayed on administrator graphical user interface and at arranging learning data into a report displayed on administrator graphical user interface based on the selected learning data parameters. It will be appreciated that the learning data may be for aggregate student populations and may be combined with data not gathered via computerized learning system to produce the types of reports described above.

At the method may further comprise displaying a statistical comparison of the learning data on the administrator graphical user interface. At the method may further comprise displaying a recommendation for one or more of the plurality of users the recommendation being selected based on the learning data. At the method may further comprise authorizing access to the administrator graphical user interface for an authenticated administrator. It should be appreciated that the steps illustrated in particularly steps may occur in any suitable order in relation to each other and in relation to steps .

It should be understood that the embodiments herein are illustrative and not restrictive since the scope of the invention is defined by the appended claims rather than by the description preceding them and all changes that fall within metes and bounds of the claims or equivalence of such metes and bounds thereof are therefore intended to be embraced by the claims.

