---

title: Wireless infrastructure and ad hoc network integration
abstract: A system and method for integrating infrastructure and ad hoc wireless networks. In one example embodiment, a plurality of nodes and access points exchange beacons and route replies which are forwarded by intervening nodes. Nodes determine whether to switch access points based on cost values contained in the received beacons. Intervening nodes store routes with weights to the source node, such that the access points maintain weights to every node in their zones.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07808960&OS=07808960&RS=07808960
owner: The Hong Kong University of Science and Technology
number: 07808960
owner_city: Hong Kong
owner_country: CN
publication_date: 20070525
---
This application claims priority from U.S. provisional patent application 60 802 996 filed on May 25 2006 which is hereby incorporated by reference.

The present application relates to wireless networks and more particularly to integration of integration of infrastructure and ad hoc networks.

Infrastructure based IEEE 802.11 wireless networks the so called wireless LAN WLAN has been widely deployed for broadband access. In traditional WLAN all users directly connect to an access point AP for communication. This leads to limited coverage low load balancing capability and hence throughput.

The penetration of IEEE 802.11 based wireless networks the so called WiFi into our homes offices and cafes has provided users ubiquitous broadband Internet access. These wireless networks make use of infrastructure mode where an access point AP offers wireless users in its coverage access to the Internet. Although the 802.11 networks offer high data rate the transmission range is limited by the one hop connections in the infrastructure networks usually less than 100 m indoor or 250 m outdoor . Employing ad hoc mode in 802.11 in both APs and mobile nodes can extend traditional wireless local area networks WLAN to multiple hops thus increasing the coverage and reducing the needs of additional infrastructures. Such architecture is called. WIANI Wireless Infrastructure and Ad hoc Network Integration .

Different from traditional WLAN nodes in WIANI may connect to an AP through multiple hops or communicate to each other without going through an AP. shows the WIANI architecture. The APs are connected by a wired network such as an Ethernet . The traffic among APs always goes through the wired network. In wireless channel the APs and nodes communicate using ad hoc mode. WIANI differs from the mobile ad hoc networks in which there are no APs providing services to the nodes.

Extended wireless coverage and reduced deployment cost In the traditional WLAN a node must be located within the coverage area of some AP to receive wireless services. WIANI extends the coverage area by ad hoc connections. Such a solution is particularly useful in handling temporary needs. If a transient user population moves into an area with no AP coverage WIANI can be used to provide immediate wireless services. Obviously deploying more APs to cover the popular area may be a long term solution. However covering a large area by single hop WLAN may require a lot of APs among which some may not be useful most of the time. Therefore multi hop solution is more appropriate to handle transience. By deploying WIANI fewer APs are required to provide wireless services in the same area. Hence the deployment cost can be reduced.

Performance enhancement First with ad hoc support a node has more opportunities for path selection to route its data through the network. It may use a path through an AP or just use ad hoc nodes to forward its data if the AP is congested. Second a mobile node with low battery power may choose closer neighbor to forward packets to an AP rather than send directly through a long distance. Hence the node significantly reduces the energy requirements for communication. Meanwhile communicating with closer nodes also increases the received signal quality and hence allows the 802.11 protocol to operate at the higher data rate. 999

Load balancing among APs In traditional WLAN the uneven distribution of users may leads to congestion of some APs. While in WIANI since a node can connect to an AP in a multi hop way the traffic load can be better balanced.

To realize such a multi hop WLAN there are a number of challenges and issues such as channel access and assignment routing and fairness issues etc. One of the most important issues to be considered is the routing protocol for the network since the connections to an AP are extended to multiple hops and the local ad hoc routing is enabled. Plenty of routing protocols have been proposed for mobile ad hoc networks such as DSDV AODV DSR and so on. However these protocols do not take into consideration the advantages of using the APs in the network. Therefore the present applications proposes a dynamic load balancing routing protocol for WIANI.

A system and method for integrating infrastructure and ad hoc wireless networks. In one example embodiment a plurality of nodes and access points exchange beacons and route replies which are forwarded by intervening nodes. Nodes determine whether to switch access points based on cost values contained in the received beacons. Intervening nodes store routes with weights to the source node such that the access points maintain weights to every node in their zones. Further examples and embodiments are described more fully below.

The numerous innovative teachings of the present application will be described with particular reference to the presently preferred embodiment by way of example and not of limitation .

To achieve high availability and high throughput for multimedia access the present innovations include seamlessly integrating wired infrastructure with the ad hoc mode as defined in IEEE 802.11 standard. The project termed Wireless Infrastructure and Ad hoc Network Integration WIANI allows mobile users connect to APs through multiple hops and autonomously form local groups for communication. The present innovations preferably include the zone concept and routing in WIANI and its system and software architecture. The present application also provides implementation details of WIANI in Linux.

In one example embodiment the present innovations include two parts the load balancing zone forming and weighted x hop routing algorithms. A zone for an AP is defined by the nodes that have default route to it. In our zone forming algorithm the APs broadcast beacons periodically to let the nodes join the zones. In the weighted x hop routing a dynamic weight is assigned to each node and AP according to its traffic condition. A path with the lowest weight is selected as the best route. The number x limits the traveling hops of a route request RREQ and hence reduces the communication overhead.

In preferred embodiments the present innovations include a new WIANI architecture. The present innovations result in a load balancing scheme that achieves better system performance comparing to AODV and k hop routing protocol.

Prior work on LANs and ad hoc networks treats the two types of networks separately without considering a unified architecture. Wu et al. propose a system named iCAR which integrates cellular system with ad hoc relays. Such integration is also studied in another protocol called Heterogeneous Wireless Network. In them the cellular system uses a frequency band different from that of the ad hoc networks. It requires two radios in each device leading to a more expensive solution.

The present innovations differ in one example embodiment in the use of a unified wireless system in which the bandwidth may be shared by all users and hence the performance improvement with ad hoc relay is not obvious. Lin et al. propose a bridging protocol to enable multi hop connections from a node to an AP. The case for a Multi hop WLAN is also presented in the prior art which modifies the MAC layer to enable multi hop wireless path establishment. However the present innovations include a mixed mode WLAN framework to enhance the performance of WLAN and address the hot spot congestion problem. This work differs by considering a more general system which involves both ad hoc routing and routing to zone APs in network layer.

List et al. propose a routing protocol similar to AODV for k hop networks in which wireless hops in ad hoc connections are upper bounded by k. The present innovations in preferred embodiments differ in at least the following ways 

2 Dynamic weights are assigned to nodes according to traffic conditions in the nodes for making routing decision.

3 Although TTL is preferably used to limit the traveling hops of route requests the number may be different among nodes while the k hop networks predefine the same limit for all nodes.

Load balancing routing protocols have been studied in different networks including wired ATM and optical and wireless hot spot ad hoc and sensor networks. However the previous schemes focus on different systems with different characteristics. Hence it is not straight forward to apply them in other environments.

The present innovations in one example embodiment describe the detailed protocol of load balancing zone forming. A zone is defined as the set of nodes virtually associated to the same AP through one hop or multiple hops. Here the association to a AP means the node maintains a default route to the AP. The APs send beacons periodically to gather and maintain the zone information. On receiving a beacon a node makes decisions on which zone AP to join and then responds. In the following the unified multi hop wireless LAN architecture is first described and then the detailed load balancing zone forming algorithm is discussed.

In WIANI there are a number of APs and nodes as shown in . The APs are connected to the wired network such as the Internet . In the wireless channel all the APs and nodes use a unified ad hoc mode to communicate with each other.

Consistent with embodiments of the present innovations the APs provide Internet services and inter network connectivities to the mobile users. The local communications among nodes may be routed either along the ad hoc nodes or through the APs. Therefore the APs should know which nodes they need to serve and each node needed to maintain a route to an AP. Such routes may change dynamically as nodes move around. To accomplish such a purpose preferred embodiments of the present innovations deploy an AP driven beaconing mechanism to form a zone for each AP. A joining cost is assigned to the beacon message. A node receiving a beacon makes joining decision based on the cost and sets default route to the AP with the lowest cost by sending a reply. The AP discovers the nodes of its zone from such replies.

To balance the traffic load among the APs the present application proposes a load balancing zone forming protocol based on AP driven beaconing. The beaconing process works as follows.

In preferred embodiments each AP periodically transmits a beacon BEACON message. The format of the beacon message is shown in . The fields AP and seq are the unique AP ID and sequence number of a beacon message. Each AP increments its own beacon sequence number before it sends a beacon message. From the two fields a node knows whether the message is new or not. The TTL Time To Live field determines how many hops that a message is to be forwarded. The hop field records how many hops that a message has traveled. The initial cost of a beacon is assigned by the AP according to its traffic load and number of nodes in its zone.

Upon receiving a beacon message a node processes it according to the flow chart shown in . If the beacon is from a new AP which is not currently in the AP List of the node the node adds the AP to its AP List. The AP List of a node maintains the APs that a node can reach. The node only uses the default zone AP to forward data if there is no routing error. If there are errors when a node sends data to its zone AP such as the links are broken due to mobility it may use one of the other APs in the list. An example of the AP List is shown in Table 1.

After the new AP is added the node computes the cost to join the new zone of the new AP . When the cost is lower than the current cost by a given threshold T the node flips a coin to determine whether it will switch to the new zone or not. In this way the node does not switch its zone whenever the new cost is lower thus avoiding the instability oscillation effects in zone forming.

If the node switches to the new zone the node sends a Route Reply RREP message to the AP and updates its default route to the new AP. The RREP message is similar to the RREP in AODV. It contains the routing information to the node. The intermediate nodes who forward the RREP message also process the packet and update their route to the RREP source. After that if the beacon s TTL field is larger than 0 the beacon is again forwarded by the node with an updated hop and cost. If the TTL is zero the beacon will be discarded.

If the beacon is from the current zone AP the node checks the sequence number to see if it is a new beacon. If it is new the node updates its cost to the AP accordingly and replies a RREP. Then the node forwards the beacon with updated hop and cost if the TTL is larger than 0. If the beacon is with an old sequence number it is discarded.

Upon receiving the RREP message the zone AP updates the zone topology by maintaining a node list consisting of the nodes in the zone. When a node joins a zone by sending a RREP to the AP the AP adds an entry for it in the node list. A default route to each node is updated by the RREP of each beacon. If the AP does not receive the RREP from a node after a certain number of beacons the node will be removed from the list i.e. from the zone .

As a node determines which zone it joins according to the cost in each beacon such cost needs to be properly assigned to achieve load balancing among the zones APs . The AP preferably assigns an initial cost c to a beacon according to the traffic load in the past beacon interval across it and the number of nodes in its zone. When a node i receives a beacon it updates the cost to the AP in its AP List. If the node belongs to the zone or it determines to switch to the zone it adds its own cost ci to the cost in the beacon and then forwards the beacon. Therefore the total cost to join a zone is the cost sum of the AP and intermediate nodes i.e. C c i beaconforwardedpath eqn. 1 

The support of ad hoc routing enriches the path selections in the network and reduces the potential traffic load through the AP. Hence the multi hop architecture achieves better load balancing than traditional WLAN. However how to select a proper or optimal route becomes a more significant issue in a multi hop WLAN. To address the routing issue some embodiments of the present innovations include a weighted x hop routing for example one similar to AODV based on our load balancing zone forming. The present application uses the topology information obtained in zone forming to reduce the routing overhead as compare to ad hoc routing.

Preferred embodiments of the routing protocol attempt to trade off the routing requests by the periodical beaconing. Since the beaconing helps the APs and nodes maintain default routes to others in the network a source may use the default routes to forward data to the desired destination. The requirement of route requests is hence reduced.

As described herein the beacons preferably not only help a node to select and join a zone but also allow it to update its default route to its zone AP. To respond the beacon from its zone AP A node sends a reply message in the form of an AODV style RREP. It specifies how long the route is valid and is unicast back to the AP. The intermediate nodes also process the message and cache a route with a certain weight to the source node. The weight is the total cost of the intermediate nodes in the cache path. Hence the AP also has the weights to every node in its zone. In this way the beaconing mechanism helps the APs and notes to maintain weighted routing information. Depending on different applications such weight metric can be power stability or residual bandwidth in a node. In the following discussion residual bandwidth is used as the simulation metric. Of course the weight metrics are not limited to those listed here which are only examples.

There are three types of route discovery in our protocol for local communications outgoing or incoming traffic. In the first case the source and destination are in the same network e.g. a campus network . The source initials a Route Request RREQ flood that is limited to x hops where x is the number of hops that the source is away from the zone AP. A node with cached route to the destination responds a RREP which consists of a weight to the destination. If the destination replies a RREP the initial weight is set to zero. The zone AP also replies a RREP to the source with an initial weight from the AP to the destination. When the RREP travels back to the source the weight will be cumulated by the intermediate nodes. If the source receives multiple RREP it selects the path with lowest weight to forward data.

If the destination is not in the same network i.e. the traffic is outgoing the node preferably directly sends data to its zone AP. The AP will relay the traffic to the desired destination. An AP does not respond to the RREQ from a node which is not in its zone.

If an AP receives an RREQ with a destination in its zone it preferably sends a RREP with the weight information collected by the most recent beaconing. When an AP receives data orienting a node in its zone it preferably forwards the data using the route maintained by beaconing. If the route for a specific node is expired the route recovery is performed by the AP.

In preferred embodiments of the present innovations only APs and source nodes perform route recovery. When an AP receives a packet orienting a node with expired route it preferably triggers a beacon to refresh its zone topology and a route error RERR with the destination address to other APs in the network. Upon receiving a RERR message if an AP has valid route to the destination it responds a RREP to the AP sending the RERR. Otherwise if an AP finds the destination in the next beacon it sends a RREP to the original AP.

If a source using an ad hoc connection without going through an AP encounters a route error it uses the path to its zone AP as a backup. On receiving such packets the AP will forward them to the destination by the default route.

The present innovations implementation of WIANI and the software architecture are presented here. Regarding software platform the present innovations contemplate at least the following embodiments 

One way of implementing WIANI is to program a device driver which manipulates the wireless LAN card hardware directly using their released Application Programming Interface API . However this is not a good solution because the APIs of many wireless LAN cards are not released to programmers and hence are not programmable. As a result messages exchanged in the network cannot be modified or added. Furthermore the API for commercially available APs are mostly proprietary. Programming them requires a licensing agreement with the AP vendors which usually involves high fee. As a result due to the lack of support of wireless device vendors and cost consideration implementing WIANI this way is not very practical.

Accessing the hardware directly can be very complex since there are many different hardware designs for the same wireless LAN card. Thus it is preferred to rely on the kernel a piece of software responsible for providing access to the machine s hardware. As Linux kernel is an open source operating system kernel all of its underlying source code is available to the public. Thus this example of WIANI is implemented in Linux. In this environment there are two choices 

To program WIANI in kernel space we modify the original 802.11 association protocol and routing protocol such as beacon frames and their acknowledgement to support WIANI. The advantage of this approach is that the performance is good because all operations such as joining and switching a network do not need to go to user space. However putting the entire routing protocol in kernel space is not a good system design see citation 18 below . The complex protocol processing may consume much memory. Moreover mass deployment is difficult because users usually are reluctant to modify their kernel. Switching between WLAN and WIANI therefore making backward compatibility more difficult. Another weakness of kernel space programming is that it does not allow users flexibility.

In this approach we implement WIANI in user space with least kernel programming where a user space daemon is created to control the logic. The daemon makes use of the existing 802.11 interface to control the WLAN card. We adopt this approach in WIANI.

The present innovations preferably use the Wireless Extensions and Wireless Tools as available in Linux kernel version 2.4 or above. Wireless Extensions is a generic API allowing users to configure a driver and obtain network statistics and states in a WLAN card. As drivers nowadays commonly support Wireless Extension this set of tools supports most of the variations of WLAN cards regardless of their types. The advantage of this approach is that the network parameters may be changed on the fly without restarting the driver and readily offers compatibility with the existing traditional WLAN. Wireless Tools for Linux is a set of tools allowing the manipulation of functions in Wireless Extensions. It provides useful functions such as the followings 

iwlist allows user to initiate channel scanning and list channel frequencies bit rates encryption keys etc. 

The present innovations preferably use a mechanism in WIANI to dynamically allocate IP addresses to mobile nodes so that packets may be routed inside and outside a zone. Recently some address autoconfiguration protocols for Mobile Ad Hoc Networks MANETs have been proposed. Most of them are stateless approach which is suitable for a network without a central entity. These protocols are not suitable for WIANI because there are APs providing services to the nodes in WIANI.

For traditional WLAN a stateful approach such as DHCP dynamic host configuration protocol is widely deployed. A DHCP server reachable by all nodes assigns unique addresses to mobile nodes and keeps state information of addresses already assigned in an address allocation table.

In WIANI a slightly modified approach is adopted. The beacon message contains a list of available IP addresses at the AP. shows an embodiment of the address resolution as used in WIANI where we show a new node Node B joining the network on the left and the time space diagram on the right. The AP broadcasts the BEACON message with IP addresses to node A which in turn broadcasts to node B. Node B may receive multiple beacons. After deciding which AP to join it randomly chooses an IP address in the BEACON message and broadcasts an ADDR REQ message back to the AP. The ADDR REQ contains the AP address so that the intermediate node knows how to forward the message. ADDR REQ also contains the MAC address of the arriving node Node B in . After the arrival of ADDR REQ the AP responds with an ADDR REQ ACK acknowledgement message which contains the information of ADDR REQ and the lifetime of the IP address which is the amount of time the IP address is valid . If the arriving node does not receive an ADDR REQ ACK it chooses another IP address in the same or another BEACON and repeats the process. When the IP address of the arriving node becomes invalid the node sends an ADDR REQ to renew its address.

As the driver code of many wireless access point is not released to the public the present innovations can in some embodiments use a desktop PC with both wired and wireless interface to act an AP. From the client perspective there is no difference between a commercial access point and our simulated access point. A user space daemon is created to implement the zone forming algorithm. Wireless Extensions and Wireless Tools are used in setting the parameters for wireless communication.

We program WIANI AP to work in the standard IEEE 802.11 ad hoc mode. It broadcasts beacons periodically to gather and maintain the zone information and makes itself known to the mobile nodes in its zone. The format of the beacon message is shown in . The apId field stores the IP address of an AP. The seq field is the sequence number of a beacon message. The AP first randomly chooses a sequence number 16 bit integer and increments it for each new beacon message. The ttl Time To Live field indicates the number of hops that the message is forwarded. The hop field records how many hops that a message has traveled indicated at the AP as 0. Both the ttl and hop are 8 bit integer. The cost field indicates the current cost of joining the AP initialized by the AP according to its traffic load and number of nodes in its zone.

The BREP message has the same format as the BEACON with msgType equal to 2 where BEACON message has msgType equal to 1. There are two types of BREP message. They are association request and dissociation request.

The WIANI AP keeps a list of nodes it serves. The code fragment to handle the incoming message and to maintain network topology is shown in . If the AP receives a BEACON message it simply ignores it. Upon receiving a BREP message if it is an association request the AP adds the source node to its node list if it is new. On the other hand if the node is already in the list the AP updates the next hop and cost to the node. However if the BREP message is a dissociation request the AP then removes the source node from its node list and updates its cost according to the traffic load and the number of nodes in its zone.

A mobile node associates itself with AP by sending a reply in unicast. Each mobile node maintains an apList a list of reachable APs. The code fragment for a mobile node to handle the beacon message is shown in . Whenever a BEACON message is received a mobile node first extracts the apId field to see whether the AP is already in its apList. If it is not the mobile node creates an ApListEntry object and adds it to the apList. The mobile node subsequently checks if the cost to join the new zone is lower than the current cost by a given threshold. If so the mobile node switches to the new zone by flipping a coin. In this way the node does not switch its zone whenever the cost is lower thus avoiding oscillation. If it switches to the new zone it updates its default route to the new zone AP and sends a BREP message to dissociate its default AP and associate with the new zone AP. On the other hand if the key apId is already in the apList the mobile node checks whether the AP is its zone AP. If not i.e. it is an AP from the other zone then the node does the same thing as in the previous situation without adding a new ApListEntry object to the apList. If the BEACON is from the zone AP and is a new BEACON had a new sequence number the node updates the AP cost and sends a BREP message to the zone AP. Finally fwdBeacon checks whether ttl field is greater than zero or not. If so the ttl hop and cost fields are updated and the BEACON is broadcast to the other nodes.

An important observation is that IEEE 802.11 ad hoc mode does not support multi hop. shows a multi hop scenario. Even though node A can talk to B which can talk to C node A cannot talk to C through B in IEEE 802.11. Given that IEEE ad hoc mode does not support multi hop automatically we need to implement our own routing algorithm. We propose a weighted x hop routing for example similar to AOVD. We use the topology information obtained in zone firming to reduce the routing overhead as compared to other ad hoc routing implementations.

Weighted x hop routing is a reactive routing protocol. Routes are determined when needed. If a source has data to transmit to an unknown destination the route discovery process starts. There are three types of route discovery in WIANI 

Local communication shows the protocol messaging. When a source Node S wants to transmit data to an unknown destination Node D the source initializes a Route Request RREQ flood that is limited to x hops where x is the number of hops x equals 2 in that the source is away from the zone AP. If the intermediate node Node A which received the RREQ has no route to the destination it rebroadcasts the RREQ. A node with cached route to the destination replies a RREP to the source. An additional field WEIGHT is added to the AODV RREP message in WIANI with initial weight zero. The zone AP also replies a RREP to the source in unicast with an initial weight from the AP to the destination. As the RREP propagates each intermediate node updates WEIGHT in RREP and creates a weighted route to the destination. If the source receives multiple RREPs it selects the path with the lowest weight to forward the data.

Out zone communication If the destination is not in the same network i.e. the traffic is outgoing the node directly sends data to its zone AP in unicast. The AP then relays the traffic to the desired destination.

In zone communication If an AP receives data destined to a node in its zone from the Internet i.e. the traffic is incoming it forwards the data using the route it cached. If the route for a specific node is expired the AP triggers a BEACON message to refresh its zone topology.

If a node Node B detects link failure Link B D during transmission it sends a Route Error RERR to the source. The intermediate node receiving RERR invalids routes to the unreachable destination. Upon receiving the RERR message the AP then triggers a BEACON message to refresh its zone topology and sends a RREP to the source. In from the received Beacon Reply BREP message the AP finds another route to Node D through C. On the other hand if a node detects link failure in a standalone ad hoc network it uses the path to its zone AP to forward its data.

There are several AODV routing protocol implementations in recent years including AODV UU AODV UCSB AODV UIUC and Kernel AODV. The present innovations may implement on demand routing in two preferred ways though other ways are possible . The first way is direct kernel implementation. The kernel code is modified to handle the routing and packet forwarding. Another way is to implement a user space daemon which keeps as much as logic as possible out of the kernel.

We implement weighted x hop routing by adopting what has been developed in AODV UU which is a user space routing daemon maintaining kernel routing table. Netfilter is used to capture packets in the kernel space. shows the WIANI routing architecture. When a data packet is passed arrow a from an application to the network stack it is captured by Netfilter inside the Linux kernel. The packet is passed arrow b to the WIANI routing daemon which decides the need for on demand routing. If there is no valid route for the destination the routing daemon does the route discovery process and passes arrow c the packet back to the Netfilter. After that the packet is passed arrow d back to the network stack.

When an incoming packet is filtered by Netfilter arrow e it is passed to the WIANI routing daemon to make the routing decision. If the result is to forward the packet to another node the packet is passed arrow d back to the network slack. If the packet is destined to the processing node the packet is passed arrow f up to the application layer.

This section presents the simulation results of load balancing routing LBR protocol in WIANI. We have also implemented WIANI in Linux environment and carried out an experiment to verify the performance benefit of WIANI. We primarily examined the impact of multi hop extension on wireless infrastructure network in terms of wireless coverage load balancing capability and data throughput. Our results show that WIANI can lead to significant improvement in terms of these performance metrics.

In preferred embodiments the protocol is implemented using NS 2 version 2.27 with CMU wireless extension. The common parameters for all the simulation runs are listed in Table 2 which are similar to those in. We compare our results to AODV and the k hop routing protocol KRP proposed in.

For experiments we choose 100 mobile nodes to roam around a rectangular area of 2400 m 600 m at four different speeds of 1 5 10 and 20 m s. Four APs are placed 600 m apart and 300 m from the top and bottom of the simulation area. Each data point in the results are the average of 5 runs of different traffic files. The generated traffic is comprised of TCP or UDP constant bit rate of 50 kb s communications between mobile sources and sinks. We use the random way point mobility model with a distribution of 15 35 35 15 for each 600 m 600 m squared areas for both original positions and motion destinations of the mobile nodes . The mobile nodes move in a velocity from 1 to 20 m s. The beacon interval in all APs is set to 3 seconds. Our initial set of tests involves a network with 30 active connections 10 inner connections 10 outgoing ones and 10 incoming ones . In we show the distribution of the number of nodes served by the APs in a traditional single hop wireless LAN versus in a multi hop wireless LAN with load balancing zone forming. Clearly not only the number of nodes served is significantly improved but the distribution of nodes served by different APs are more uniform. Therefore Our zone forming scheme achieve substantially better load balancing.

In the following we compare our results to AODV and the k hop routing protocol KRP proposed in in term of 1 end to end path latency 2 packet delivery ratio PDR and 3 network throughput.

We plot in the average end to end path latency of the active connections versus different mobility velocity. In most cases LBR achieves shorter end to end delay comparing to AODV and KRP.

In we plot the packet delivery ratio defined by the percentage of packets that reach their destination over the total packets generated. Clearly as mobility velocity increases the PDR of the three schemes decreases accordingly because link errors are more likely to happen in higher mobility environments. However our LBR have higher PDR comparing to the other two schemes.

Experiments were performed on the 2nd floor of the Postgraduate Hall II at the Hong Kong University of Science and Technology HKUST . The experimental setup is outlined in the map of . The example network consists of two WIANI access points APs . We present the approximate wireless coverage of each AP by shaded circular areas as indicated in the figure. Each AP is connected to a wired local area network LAN which is connected to the Internet. A proprietary network management server is connected to the LAN to provide a common address allocation table for the APs.

The APs are laptops with Mobile Intel Pentium III 850 MHz processor 128 MB ram and Ethernet adapter. For wireless connectivity Cisco Aironet IEEE 802.11b wireless cards were used. For the comparison with traditional infrastructure mode WLAN we used two Buffalo AirStation IEEE 802.11b APs. Note that such an arrangement is actually disadvantageous to WIANI. Traditional APs are network layer devices whereas WIANI APs are laptops running a user space daemon. The data packets in WIANI encounter additional delay due to application layer processing.

The mobile nodes are laptops with Intel Pentium III 650 MHz processor and 128 MB ram. They are all equipped with Cisco Aironet IEEE 802.11b wireless PCMCIA card. The operating system used was Linux Fedora Core 4 with kernel version 2.6.11. The application considered is FTP file transfer. A FTP server is connected to the same LAN as the APs. We measured the total transfer time of downloading and uploading a 17 MB video file from and to the FTP server respectively. Each node also runs a FTP server program named vsftpd which is used in the measurement of local communication. The data transfer statistics were obtained from the Linux Arpanet FTP program. We then compare the data throughput of WIANI and that of traditional WLAN.

Of course the scope of the experimental data and specific examples used therein are not intended to indicate limits to embodiments of the present innovations and only serve as examples.

Another observation is that the data throughput will decrease with the number of hops in the ad hoc communication path. It can be seen from data throughput which involves A in . The hop count of AB AC and AD is 1 2 and 3 respectively and the data throughput is inversely proportional to the hop count. This is due to the routing and forwarding overhead in the multi hop scenario.

In traditional WLAN the uplink and downlink connections cut the throughput substantially leading to a waste of band width. This can be observed from the result of communication pair BC BD and CD. In nodes B and C belong to the same zone whereas node D belongs to another zone. In WLAN node B communicate with node C via AP. It requires both the uplink and downlink connections for a single data transfer. In WIANI nodes B and C use ad hoc communication to transfer data without AP s service and hence achieve better data throughput. The benefit of WIANI in terms of data through put is more obvious in communications D and CD. In traditional WLAN node D communicates with nodes B and C via AP and AP. This involves at least three connections for a single data transfer. The number of connections is increased if AP and AP are connected with one or more network devices like router. In WIANI node D communicates directly with node C. It communicates with node B via node C which involves two hops connection. In both cases it obtains higher data throughput than the traditional WLAN setting.

WIANI also increases the load balancing capability among APs. In node ID can receive the BEACON message from AP and AP. The cost in BEACON from AP is higher than that of AP since the associated nodes of AP is higher. Therefore node D associates itself to the zone of AP. As a result the hot spot congestion problem can be relieved with improved total network capacity.

According to a disclosed class of innovative embodiments there is provided A method for using ad hoc wireless network connectivity from a mobile access point comprising the actions of intermittently broadcasting a beacon message from at least one of a plurality of access points each said beacon message including a cost function value indicative of capacity through that access point and also including a counter which permits a hop count of the beacon message to be monitored by any user node which receives the beacon message and in individual ones of said user nodes monitoring said hop count and said cost function and selectively changing association and or routing to ones of said access points in dependence thereupon.

According to a disclosed class of innovative embodiments there is provided A method of managing wireless coverage comprising the steps of at a receiving node receiving a beacon from an access point if the beacon is from a new access point then adding the new access point to the receiving node s list of access points computing a cost to join the zone of the new access point and if the cost to join the zone of the new access point is lower than current cost by a given threshold determining whether to switch to the new zone as default zone and if the beacon is from a current access point updating the cost to the current access point if the beacon is new and forwarding the beacon with updated hop and cost if the time to live is greater than zero.

According to a disclosed class of innovative embodiments there is provided A method of managing access by multiple nodes to multiple access points comprising the steps of periodically transmitting a beacon from the access point wherein a cost field of the beacon is assigned by the access point according to its traffic load and number of nodes in its zone at a receiving node if the access point is new updating cost determining whether to switch access points and sending a route reply to the access point if the access point is not new updating cost to the access point if the received beacon is new and sending a route reply to the access point wherein route reply messages update the default route between the node and the receiving access point.

According to a disclosed class of innovative embodiments there is provided A system for managing wireless connectivity comprising a plurality of access points the access points configured to transmit a beacon to a plurality of nodes each access point having a zone wherein the plurality of nodes are configured to send reply messages to access points and in dependence on the content of beacons received from access points switch from a first access point to a second access point and update cost to access points and the default route between a sending node and a receiving access point.

As will be recognized by those skilled in the art the innovative concepts described in the present application can be modified and varied over a tremendous range of applications and accordingly the scope of patented subject matter is not limited by any of the specific exemplary teachings given.

Additional general background which helps to show variations and implementations may be found in the following publications all of which are hereby incorporated by reference 

None of the description in the present application should be read as implying that any particular element step or function is an essential element which must be included in the claim scope THE SCOPE OF PATENTED SUBJECT MATTER IS DEFINED ONLY BY THE ALLOWED CLAIMS. Moreover none of these claims are intended to invoke paragraph six of 35 USC section 112 unless the exact words means for are followed by a participle.

The claims as filed are intended to be as comprehensive as possible and NO subject matter is intentionally relinquished dedicated or abandoned.

