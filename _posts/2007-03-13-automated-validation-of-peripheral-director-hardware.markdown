---

title: Automated validation of peripheral director hardware
abstract: A system and method of automating the validation and control of peripheral director hardware in a switched fabric network. A system is provided that includes a script language processor for interpreting high-level statements and generating command functions understood by an application programming interface (API) associated with the switched fabric network, wherein the command functions include a query switch command, a query interface switch command, a write switch command, and a display result command; and a system for generating an output in response to a set of command functions submitted to the switched fabric network.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08015274&OS=08015274&RS=08015274
owner: International Business Machines Corporation
number: 08015274
owner_city: Armonk
owner_country: US
publication_date: 20070313
---
The invention relates generally managing complex switching fabrics and more particularly to a system and method of automating the validation and control of peripheral director hardware in a switched fabric network.

In large complex information technology IT infrastructures challenges exist in controlling and testing what is referred to as a switched fabric or switched fabric network. A switched fabric is a computer network topology where many devices connect with each other via switches also referred to herein as switching points nodes or directors . Switched fabric networks are different from typical hierarchical switched networks e.g. Ethernet in that switched fabric networks naturally support redundant paths between multiple devices forming a mesh network with devices being on the edges of the mesh. One of the advantages of this topology is failover meaning that in case one link breaks or a switch is out of order datagrams e.g. packets can traverse alternate paths. Another is scalability meaning that more switches can be added as the number of endpoints increases so the route length and thus latency and throughput can remain constant for point to point datagrams.

One of the challenges in implementing and maintaining a switched fabric is the fact that many different devices must be able to talk to each other via the various switching points. Accordingly there are many possible states for all of the switching points which make configuring the switched fabric error prone. Currently there exist no automated solutions for controlling and testing switched fabric networks.

The present invention addresses the above mentioned problems as well as others by providing system and method of automating the validation and control of peripheral director hardware in a switched fabric network.

In a first aspect the invention provides a director control system for controlling directors in a switched fabric network comprising a script language processor for interpreting high level statements and generating command functions understood by an application programming interface API associated with the switched fabric network wherein the command functions include a query switch command a query interface switch command a write switch command and a display result command and a system for generating an output in response to a set of command functions submitted to the switched fabric network.

In a second aspect the invention provides a computer program product stored on a computer readable medium for controlling directors in a switched fabric network comprising program code for interpreting high level statements and generating command functions understood by an application programming interface API associated with the switched fabric network wherein the command functions include a query switch command a query interface switch command a write switch command and a display result command and program code for generating an output in response to a set of command functions submitted to the switched fabric network.

In a third aspect the invention provides a method of controlling directors in a switched fabric network comprising providing a set of high level statements for controlling at least one node in the switched fabric network processing the high level statements and generating command functions understood by an application programming interface API associated with the switched fabric network wherein the command functions are selected from the group consisting of a query switch command a query interface switch command a write switch command and a display result command submitting the command functions to the switched fabric network via the API and generating an output in response to the command functions submitted to the switched fabric network.

In a fourth aspect the invention provides method for deploying director control system for controlling directors in a switched fabric comprising providing a computer infrastructure being operable to interpret high level statements and generate command functions understood by an application programming interface API associated with the switched fabric network wherein the command functions include a query switch command a query interface switch command a write switch command and a display result command and generate an output in response to a set of command functions submitted to the switched fabric network.

Referring now to drawings depicts a switched fabric network comprising various components e.g. C C and switching points or directors e.g. S S . Generally speaking each director includes an addressable port that can be manipulated by one or more commands defined by an application programming interface API associated with the switched fabric network. Coupled to switched fabric network is a computer system that includes a server application programming interface API and a director control system . Director control system provides a mechanism through which high level statements or scripts can be processed and converted into a set of API specific commands. This thus allows switched fabric network to be more easily controlled i.e. set up tested interrogated etc.

Director control system includes a script language processor that interprets high level statements or scripts and generates a set of command functions to allows director control system to interface with the switching points e.g. S S and ports in the switch fabric network via API and server . In particular director control system allows a user script other program or system etc. to set up test and interrogate switched fabric network without extensive manual labor.

In one illustrative embodiment director control system is implemented as a REXX program that runs under z OS and uses the API of System Automation for z OS to exercise ESCON and FICON directors. In the embodiment shown in director control system can issue four command functions via API . The command functions include Query Switch command Query Interface Switch command Write Switch Writeswch command and Display Results command . These command functions are generated by script language processor in response to a set of statements or script written in a high level script language described below.

Director control system may be implemented as a program that runs as a batch job. Its input may consist of one ore more command scripts telling director control system what to do with which directors and ports. Each command script may comprise one or more tests that consist of one or more commands to query a director check for certain errors and or modify a port definition or status. In an alternative embodiment input may consist of statements e.g. entered via a user interface or from another program.

Output of director control system output consists of a log file and a report . Log file contains every bit of data sent to or received from each director which is useful for bit level analysis if something does not work. Report shows for each test the script statements that define the test any error messages that are produced and any information that is produced in response to the input e.g. command script . Extensive error checking is performed and all errors are reported. This even includes such things as a reserved bit being nonzero in a query response. Report presents a detailed record of each test what it was trying to do and what it did.

As noted an existing control API includes predefined commands for interfacing with directors and ports in a switched fabric network . In this illustrative embodiment the commands are as follows 

Query Switch command returns a response block consisting of e.g. 256 80 byte records one for each possible port address allowed by the director architecture. These records contain definition and status information about each port. Query Switch command is used to investigate the state of a director e.g. determining what components are behind the director and what the status of the director is. For example Query Switch command can be used to investigate whether data can flow to a component whether there are any logical or physical faults etc.

Query Interface Switch command is similar but returns more data e.g. 360 bytes for each of the 256 possible port addresses. Query Interface Switch command can be used to query all details associated with a director and is utilized for instance when detailed diagnostics are required.

Writeswch command sends a variable number of e.g. 80 byte records to the director each one of which can effect one or more changes e.g. changing the port s logical name and or how it is switched to other ports etc. Writeswch command is thus utilized to alter the status of a director for example turning it on or off etc.

Display Results command is only used when an error occurs on a Writeswch command . Display Results command asks the API to provide further details about the error.

Status information about a director can for instance be determined by analyzing entries in the port associated with the director. For example a first predefined bit in a port s entry obtained in the response to a Query Switch command or Query Interface Switch command indicates whether or not that port is implemented. Similarly a second predefined bit in a port s entry obtained in the response to a Query Switch command or Query Interface Switch command indicates whether or not that port is installed.

A Prohibit Dynamic Connection Mask PCDM or dynamic mask is also defined that provides a 256 bit control string that is implemented for each port within a director. Each bit corresponds to a port address 00 FF . If the bit is 1 dynamic connections with the corresponding port are prohibited if it is 0 dynamic connections are allowed .

Script language processor may be implemented in any manner to generate commands understood by API and generally is implemented to allow for high level statements that can be readily understood by a user. The following is an example of a set of such statements where an asterisk denotes a comment and a plus sign in the first column indicates an operation that is to be performed within the same Writeswch record as the previous operation hence it must operate on the same port .

Listed below describe the various statement types supported by an illustrative embodiment of the script language processor . Note that address below means the 4 digit device address of the director and port indicates a 2 digit hexadecimal port address. An italicized word indicates that the word should be replaced by some value. Items within curly braces . . . are optional.

A Comment statement is identified by an asterisk in the first column. Comments are copied to the report data set but are otherwise ignored. Also in any other script statement an asterisk along with everything that comes after it is a comment. A completely blank line is also treated as a comment.

IDENT is a required statement that identifies each test that is being performed. All statements following an IDENT statement down to but not including the next IDENT constitute one test definition. The IDENT statement contains IDENT as the first word. Any text following the word IDENT is reproduced as an identifier on the second line of each report page for that particular test. This will typically be the type model and serial number of the director being tested and or something about the purpose of the test.

QIS performs a Query Interface Switch command which produces essentially the same information as QSW plus node descriptors and node element descriptors. The options include 

This function uses a Query Switch command to check a director for asymmetric prohibit allow conditions i.e. any situation in which port A is allowed to port B but port B is prohibited to port A. This unusual error condition has been known to occur.

The following commands may be batched together in the same WRITESWCH block until a logical limit is reached or until a BREAK command is encountered.

This uses the And PDCM function of the Writeswch command to allow the primary port to the specified set of secondary ports. If the primary port is also among the secondary ports it will be allowed to itself if the hardware allows it . A secondary port can also be a range of hex addresses e.g. 44 4C . Use all to allow the primary port to all implemented ports.

This uses the Or PDCM function of the WRITESWCH command to prohibit the primary port to the specified set of secondary ports. If the primary port is also among the secondary ports it will be prohibited to itself. A secondary port can also be a range of hex addresses e.g. 44 4C . Use all to prohibit the primary port to all implemented ports except the Control Unit Port CUP .

This uses the Modify PDCM function of the WRITESWCH command to replace the prohibit mask with a new mask that will allow the primary port only to the specified set of secondary ports. If the primary port is also among the secondary ports it will be allowed to itself if the hardware allows it . A secondary port can also be a range of hex addresses e.g. 44 4C . Use all to allow the primary port to all implemented ports.

Replace the port logical name with the specified new name. If newname is omitted any existing port name will be removed.

As noted reports provide details relating to the running of a test. An example of a report is shown in . Each report may include a heading such as 

Each of these reports consists of a table of which each row represents either one installed port in the director or a sequence of consecutive uninstalled ports. The columns of the table are identified by a column heading line. Illustrative column headings and their meanings are shown in a table in .

Certain basic information about the director is presented at the beginning of each of the QIS reports. This information is in two parts. On the left is an array of status information while at the right two of the node descriptor fields of the QIS response are interpreted. For example 

First this indicates the QIS response came from the current system without error. All of the remaining information comes from the first valid record of the response. The address of the director is shown and the address valid flag. In this case the director is not in the I O OPS data base but it has been opened by l o OPS and its logical switch number originally from the IOCP is shown. The CUP always is FE the switch is operational with no errors and the counts of implemented and installed ports are shown.

These are two of the several node descriptor entries in the QIS response records and they both apply to the switch itself. Both show in this case that the director is a CNT FC9000 model 256 made at a plant identified as NJ and having the serial number shown. The first of the two entries is a Node Element Descriptor because the director itself is a node element device rather than a node control unit for other devices . This is also indicated by the Typ value of Dev rather than CU . The device class value shows that it is a switch and the serial number indicator says that the serial number shown is the actual serial number of the box. The value in the column labeled L can be 1 indicating that this NED is not related to the next one retrieved or 0 indicating that it is not. In the second node descriptor the St field is a status indicator and the Lk field applies only to a converter.

Like the QSW Summary Report the QIS Summary Report consists of several descriptive phrases along with either a status value or the number and addresses of ports to which each description applies.

The director control system may include the ability to generate various messages in response to an inputted set of statements. Below is an illustrative list of such messages.

An attempt was made to combine a BLOCK or UNBLK statement with a preceding statement that was not a NAME or MASK x statement.

In general computer system may be implemented using any type of computing device and may be implemented as part of the switched fabric network. Computer system generally includes a processor input output I O memory and bus. The processor may comprise a single processing unit or be distributed across one or more processing units in one or more locations e.g. on a client and server. Memory may comprise any known type of data storage and or transmission media including magnetic media optical media random access memory RAM read only memory ROM a data cache a data object etc. Moreover memory may reside at a single physical location comprising one or more types of data storage or be distributed across a plurality of physical systems in various forms.

I O may comprise any system for exchanging information to from an external resource. External devices resources may comprise any known type of external device including a monitor display speakers storage another computer system a hand held device keyboard mouse voice recognition system speech output system printer facsimile pager etc. The bus provides a communication link between each of the components in the computer system and likewise may comprise any known type of transmission link including electrical optical wireless etc. Although not shown additional components such as cache memory communication systems system software etc. may be incorporated into computer system .

Access to computer system may be provided over a network such as the Internet a local area network LAN a wide area network WAN a virtual private network VPN etc. Communication could occur via a direct hardwired connection e.g. serial port or via an addressable connection that may utilize any combination of wireline and or wireless transmission methods. Moreover conventional network connectivity such as Token Ring Ethernet WiFi or other conventional communications standards could be used. Still yet connectivity could be provided by conventional TCP IP sockets based protocol. In this instance an Internet service provider could be used to establish interconnectivity. Further as indicated above communication could occur in a client server or server server environment.

It should be appreciated that the teachings of the present invention could be offered as a business method on a subscription or fee basis. For example a computer system comprising a director control system could be created maintained and or deployed by a service provider that offers the functions described herein for customers. That is a service provider could offer to provide switched fabric network management as described above.

It is understood that the systems functions mechanisms methods engines and modules described herein can be implemented in hardware software or a combination of hardware and software. They may be implemented by any type of computer system or other apparatus adapted for carrying out the methods described herein. A typical combination of hardware and software could be a general purpose computer system with a computer program that when loaded and executed controls the computer system such that it carries out the methods described herein. Alternatively a specific use computer containing specialized hardware for carrying out one or more of the functional tasks of the invention could be utilized. In a further embodiment part or all of the invention could be implemented in a distributed manner e.g. over a network such as the Internet.

The present invention can also be embedded in a computer program product which comprises all the features enabling the implementation of the methods and functions described herein and which when loaded in a computer system is able to carry out these methods and functions. Terms such as computer program software program program program product software etc. in the present context mean any expression in any language code or notation of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a conversion to another language code or notation and or b reproduction in a different material form.

The foregoing description of the invention has been presented for purposes of illustration and description. It is not intended to be exhaustive or to limit the invention to the precise form disclosed and obviously many modifications and variations are possible. Such modifications and variations that may be apparent to a person skilled in the art are intended to be included within the scope of this invention as defined by the accompanying claims.

