---

title: Control system and method therefor
abstract: A flexible control system and method of controlling a processing operation. The control system and method may be employed to control a high speed manufacturing system for processing articles of manufacture requiring processes to be performed on the articles at a pre-selected processing rate includes a trunk for simultaneously conveying a plurality of the articles of manufacture at the pre-selected processing rate in a first mode of motion from the beginning of the manufacturing system to the end of the system. At least one branch processing station is positioned intermediate the beginning and the end of the trunk wherein the branch processing station during its operation performs at least one process on articles of manufacture conveyed on the branch processing station and where the articles are conveyed in a second mode of motion. At least one transfer device is positioned intermediate the trunk and the branch processing station to continuously extract articles of manufacture from the trunk and transition the movement of the extracted articles of manufacture from the first mode of motion to the second mode of motion for transfer to the branch processing station. The transfer device also extracts each of the processed articles of manufacture from the branch processing station and transitions the movement of the articles from the second mode of motion to the first mode of motion for transfer to the trunk.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07831323&OS=07831323&RS=07831323
owner: Eveready Battery Company, Inc.
number: 07831323
owner_city: St. Louis
owner_country: US
publication_date: 20070110
---
This application is a continuation of U.S. patent application Ser. No. 10 365 207 filed Feb. 11 2003 entitled CONTROL SYSTEM AND METHOD THEREFOR now U.S. Pat. No. 7 171 281 which is a continuation of U.S. patent application Ser. No. 09 583 222 filed May 30 2000 entitled CONTROL SYSTEM AND METHOD THEREFOR now U.S. Pat. No. 6 615 091 which is a continuation in part of U.S. patent application Ser. No. 09 317 577 filed May 24 1999 entitled HIGH SPEED MANUFACTURING SYSTEM now U.S. Pat. No. 6 325 198 which claims the benefit of U.S. Provisional Application Ser. No. 60 090 860 filed Jun. 26 1998 entitled HIGH SPEED MANUFACTURING SYSTEM. The aforementioned related applications are hereby incorporated by reference.

The present invention generally relates to a manufacture control system and more particularly to a distributed control system and method for controlling the production of small items of manufacture such as batteries.

Items of manufacture and in particular small items of manufacture requiring multiple processes during their production and which are produced in large quantities such as dry cell batteries are completed by passing the articles through a series of individual apparatuses which are specifically designed to perform one or two processes. These processing machines are often stand alone units which operate on a bulk input bulk output basis. This type of system is labor intensive and lacks the capability for adequate quality control rapid maintenance or tracking of the manufactured articles.

Current processing equipment which typically operates in an indexed manner has a single main drive motor which drives the indexer as well as driving the application heads performing the specific process. These various operations conducted by the machines are mechanically timed and are controlled by mechanical cams. Such mechanical timing is time consuming to setup is not flexible and may lack precision. Any malfunction of these machines generally requires the entire machine to be pulled off line for time consuming repair thus resulting in undesirable production efficiency.

The bulk in bulk out manner in which these machines operate is such that the battery cans are extracted in random fashion from a bin thereby requiring proper orientation to begin the processing and are then output from the machine into another bin after processing. The processed cans are then transported in bulk to another processing station whereupon the bin extraction and article orientation functions are again repeated thus duplicating unnecessary handling and time consuming operations. Others of these machines operate on a theory of back pressure wherein the battery cans are stacked and urged to a processing station by applying a force to the backed up cans to force the articles through the processing machine. There must always be a supply of battery cans on the input side to maintain sufficient pressure to keep the pump primed thereby facilitating processing throughput. Such methods of input and output preclude the tracking of individual battery cans during processing and between discrete machines. The manufacturer therefore loses information about individual cans between product assembly or processing steps. A consequence of the random input and output is a loss of quality control on individual articles with the result being that there is little to no process data available on the articles and what data is available is not in alignment with quality control samples taken from the processing line.

At the conclusion of the quality control sampling the machine is again stopped and again unloaded by hand. This time consuming but necessary function often results in a significant loss of valuable production time in addition to the excessive labor costs associated therewith. Additionally repeated starting and stopping of the machine induces variation in the production process which can adversely affect production quality.

The current mechanically controlled machines often include one or more cams to transfer desired time sequenced motion to the processing apparatuses mounted to the machine for a desired synchronized operation. In addition to the single drive motor driving the processing apparatus the motor also operates and drives a large mass circular dial which transports the battery cans therearound to the individual process stations on the machine. Typically these large mass dials require a significant percentage of the power consumed by the machine to accelerate and decelerate the dial during the indexing operations. Power thus expended contributes little value added to the finished product. Also the acceleration and deceleration of large mass dials requires a significant portion of the total time of operation which therefore severely limits the throughput of the processing machines.

The aforementioned current processing equipment employs separately controlled process stations in which battery cans were randomly dumped from one machine to another thereby eliminating any ability to track a given battery can. Additionally in order to conduct experimental process operations conventional manufacturing systems commonly require that the normal system operation first be shutdown the experimental equipment then be installed and the experimental process thereafter conducted. Once the experimental operation is finished the conventional system is reconfigured for normal article manufacturing. Thus experimental processing required extensive shutdown time and labor to reconfigure the system and conduct the experimental process.

Therefore there is a desire and need in industry and particularly in dry cell battery processing for a processing system which can operate at increased throughput and which eliminates unnecessary handling and duplicative operations to be performed on the manufactured articles. The needed processing system has the additional characteristics of being flexible permitting off line set up and calibration the ability to be quickly deployed and capable of rapidly incorporating product design changes. Such a system is also desired to more efficiently monitor quality control on processes including the capability of tracking a single item of manufacture through the processing system and also the ability to test new processes and processing equipment for a comparative analysis of articles of manufacture processed normally with articles of manufacture processed with one or more test processes.

Also it is desirable to provide for a processing system that allows for battery cans to be tracked and accounted for throughout the entire processing operation. Further it is desirable to provide for such a processing system that allows for easy experimental processing that does not require excessive system shutdown and labor.

Further reduced manufacturing cost and increased processing operation efficiencies are desirable to produce a cost effective product. The added costs associated with conventional production line setup downtime and maintenance has created the need for creative control strategies that may reduce cost to provide a more cost effective product. Automated manufacturing control systems typically employ software that is dependent on a particular computer operating system and is designed to operate a predefined production line configuration. It is desirable to provide a distributed control system that is not dependent on a particular computer operating system software provides flexible processing capability and is able to control multiple production line configurations with minimal reconfiguration. It is also desirable to provide a distributed control system that may continue to control production of material in the event that a process control device such as a processor fails to perform as configured so as to reduce processing downtime and incur less added cost. Further there is a need for control software that is flexible to allow for use with various control systems for controlling different types of production machinery thereby eliminating the need for dependence on the supplier of a particular hardware or software configuration.

According to one aspect of the present invention a control system is provided that is adapted to control process operations for processing individual articles. The control system includes a coordinator controller adapted to control process operations associated with a processing system by communicating work request messages to at least one process module. The system also includes a software coordinator agent executable by the controller and configured to control the processing operation. A software process module agent is included and configured to represent a component of the process module and is executable to perform a process operation. The control system further includes a protocol adapted to allow the software coordinator agent to communicate messages with the software process module agent. Preferably the control system employs software models such as an input output model a communication model and a data distribution system model.

Another aspect of the present invention is a control system for controlling the processing operations. The control system includes a plurality of controllers adapted to control operations associated with a processing system. Each of the plurality of controllers are configured to communicate with at least another one of the plurality of controllers. A plurality of software agents each representing a component within the control system are provided in one or more of the plurality of controllers. The software agents are executable within any one or more of the plurality of controllers. Models for encapsulating structural architecture are preferably included in one or more of the plurality of controllers. The control system further has a protocol adapted to allow each of said software agents to communicate messages with other software agents.

A further object of the present invention is a distributed control system for controlling the manufacturing of one or more articles. The distributed control system includes a coordinating controller and a coordinator agent for monitoring processing of each article of manufacture and for coordinating the processing of each article of manufacture. The coordinating controller is networked with one or more process station controllers and is adapted to communicate with a process station agent. Each process station agent is generally adapted to initiate processing of articles of manufacture associated with a branch processing station. In addition a process module agent is provided for each process module associated with the processing station for performing a designated process on articles. The process module agent controls the processing operation of the associated process module while the coordinator agent preferably controls the processing operation of each article of manufacture initiates control operations tracks each product through the process operations and collects information on the processing of each article. The control coordinator process station controllers and process module agents communicate messages via a protocol.

Yet another aspect of the present invention is a method of controlling the processing of articles. The method includes the steps of providing a plurality of controllers adapted to control a processing operations and including a coordinator agent and a process agent. Work request messages are transmitted from the coordinator agent to each of the other of the process agents including information on a process operation and designated article. The process agents perform an intended process operation generate a work report message when the designated operation is complete and store the work report message in memory.

These and other advantages of the invention will be further understood and appreciated by those skilled in the art by reference to the following written specification claims and appended drawings.

For purposes of description herein the terms upper lower right left rear front vertical horizontal and derivatives thereof shall relate to the invention as oriented in with reference to a viewer in front of the trunk directly facing toward the processing stations. However it is to be understood that the invention may assume various alternative orientations and step sequences except where expressly specified to the contrary. It is also to be understood that the specific parts devices and processes illustrated in the attached drawings and described in the following specification are simply exemplary embodiments of the inventive concepts defined in the appended claims. Hence specific dimensions and other physical characteristics relating to the embodiments disclosed herein are not to be considered as limiting unless the claims expressly state otherwise.

The reference numeral generally designates a modular high speed processing system embodying the present invention. Modular high speed processing system is particularly adapted for creating a processing line for the manufacture and processing of articles of manufacture at a pre selected manufacturing rate and where a manufacturer desires to track and monitor individual articles throughout the processing sequence. As discussed below modular high speed processing system is comprised of unique discrete functional elements which can be arranged in multiple configurations to create a processing system tailored to a manufacturer s needs. While the embodiment of the modular high speed processing system described herein is directed at the manufacture and processing of battery cells for consumer electronic appliances it will be understood that the modules and functional elements described are adaptable for the processing of a wide range of other articles of manufacture.

As illustrated in modular high speed processing system includes individual branch processing stations and interconnected by trunk wherein processing stations and perform the desired processing of the articles to be manufactured thereon and trunk transports the articles between processing stations. The sequencing and monitoring of processing system is accomplished with a control system having a control coordinator which communicates with individual process station controllers and . Individual process station controllers and provide the control interface for processing stations and respectively the functioning of which is described more fully below.

The processing system as illustrated in comprises at least one branch processing station such as station having a plurality of processing modules located therealong for processing of individual articles of manufacture such as battery cans . As shown in branch processing station comprises a plurality of individual modular elements to facilitate the transport and processing of the battery cans and is typical of other branch processing stations. A transfer device such as device is located at one end of a continuous motion conveyor or between two ends of continuous motion conveyors and . Transfer device extracts battery cans from continuous motion conveyor for delivery to branch processing station . After processing the battery cans are extracted from branch processing station by transfer device and delivered to continuous motion conveyor for transport to the next branch processing station such as station .

The continuous motion conveyors and form trunk for conveying the battery cans in a constant speed motion between individual processing stations and . A platform or a suitable supporting frame is utilized to support and maintain the ends of continuous motion conveyors and transfer device and branch processing station in a fixed operating relationship. Couplers are utilized to hand off battery cans between adjacent elements such as between continuous motion conveyor and transfer device and between transfer device and branch processing station . Branch processing station comprises a continuous feed indexer which transports battery cans in an indexed manner and process modules . The indexed motion of continuous feed indexer transports battery cans in an alternating index dwell sequence wherein process modules perform their scheduled process on battery cans during the dwell portion of the transport of battery cans about indexer . While the preferred embodiment incorporates a trunk operating at a continuous constant speed motion and the branch processing stations and operating at an indexed intermittent motion the speeds and modes of motion of the trunk and branch processing stations can be continuous variable or intermittent with transfer device transitioning between the differing motions.

According to processing system as shown in battery cans are introduced to branch processing station by input module . Input module takes battery cans which are input thereto in a bulk random manner and orients cans to a common upright orientation and delivers the cans in an indexed manner to continuous feed indexer where the cans are transported for processing by process modules .

An experimental process module can be located at any desired position throughout system to conduct experimental processing in lieu of production processing to test and evaluate new methods and equipment of processing. Because control coordinator monitors each battery can position during transport the experimental processing can take place in concert with standard production and the experimentally processed battery cans can be identified and extracted for evaluation at the conclusion of the processing cycle.

After completion of processing by process modules battery cans are extracted from continuous feed indexer and have their motion converted from indexed motion to continuous motion by transfer device . Battery cans are then transferred to continuous motion conveyor where they are transported to a subsequent branch processing station for processing by process modules and and then to third branch processing station for further processing by process modules . The number of process modules at each branch processing station is determined by the time required for the individual process and providing sufficient quantity of process modules to maintain a desired production throughput. The manner of determining the number of modules is discussed in more detail below. Upon completion of processing battery cans are removed from system by extraction module for testing packaging and delivery of the final product.

A more complete understanding of the components of high speed processing system is gained from a detailed description of each of the modules comprising processing system .

With reference to a continuous feed indexer comprises a central frame to which are affixed a drive assembly at one end and an idler assembly at an opposite end with a conveyor assembly extending therearound. In the preferred embodiment the conveyor assembly is an endless transport belt assembly extending between drive assembly and idler assembly . A process module support is positioned proximate to at least one side of continuous feed indexer and to which are attached one or more process module mounts the configuration of which is discussed more fully below.

Referring to drive assembly is fastened to one end of frame . Drive assembly comprises a drive frame and supports spindle assembly in which is journaled a drive shaft . At a top end of drive shaft a cogged drive sprocket is attached to shaft to rotate in a horizontal plane. A home sensor comprising a slotted disk affixed to an upper end of shaft to rotate therewith and an optical sensor fixed to frame is utilized to align the transport belt assembly on the continuous feed indexer in a manner more fully described below. A drive pulley is affixed to a lower portion of shaft below spindle assembly and a servo drive motor is affixed to the bottom of shaft for providing the rotational power to drive pulley and sprocket .

Referring to idler assembly and tensioner assembly are located at the opposite end of frame . End plate is fastened to the end of frame opposite from drive assembly . End plate includes upper and lower bushings and extending into internal channels of frame . Idler assembly includes an idler support to which cogged idler sprocket is affixed to rotate in a horizontal plane. An end plate extends around idler sprocket and is spaced a fixed lateral distance from sprocket . The fixed distance of end plate from idler sprocket is slightly more than the outermost distance of the outer edge of a battery can as it traverses around sprocket such that battery cans as they traverse around sprocket are at least partially retained by track in end plate . A vertical idler end plate is affixed to idler support and has alignment shafts and attached thereto. Shafts and extend horizontally forward from plate and are closely received in bushings and respectively to permit the fore and aft adjustment of idler assembly with respect to frame and drive assembly .

The fore and aft adjustment of idler assembly is accomplished by tensioner assembly and provides the proper tensioning to transport belt assembly on continuous feed indexer . Tensioner assembly comprises a pivot attach bolt affixed to an upper end of end plate at the idler end of frame . A tensioner arm is pivotally affixed to an end of pivot attach bolt and pivots about pivot pin which extends horizontally through tensioner arm and bolt . A lower portion of tensioner arm has a nose which bears against idler end plate at a point coincident with the plane of centerline of transport belt assembly and pulley . Adjustment bolt extends through an upper end of tensioner arm and engages end plate . A coil biasing spring is sleeved over adjustment bolt and bears on the upper end of tensioner arm and on end plate to bias the upper end of tensioner arm against adjustment bolt .

Referring now to transport belt assembly comprises continuous belt and a plurality of cleats . A chain could be substituted for belt . Belt is a continuous belt of a desired length to extend around drive sprocket and idler sprocket and has a plurality of cogs or teeth on an inner side and a smooth outer side . Belt is typically constructed of a metal reinforced polymer however alternative combinations of belts and cleats are possible to achieve the purpose of assembly . Teeth have holes extending vertically therethrough for the attachment of carriers to carry the articles of manufacture. In the preferred embodiment carriers are cleats . The size and desired spacing of cleats will determine which teeth are designated to receive cleats .

Each of cleats has an upper flange and a lower flange which are vertically disposed one from the other by a vertical web . Vertical web spaces flanges and to closely receive belt therebetween such that smooth surface of belt abuts vertical web of cleat . Flanges and each have a hole extending vertically therethrough which is vertically aligned with hole in belt teeth when cleat is abutted to belt . Cleat is secured to belt by inserting pin through holes and . Holes and closely receive pin thereby preventing the inadvertent dislodgment of pin . Belt is compressed slightly to create an interference fit of cleat and pin to belt . However pin can be readily removed to facilitate the replacement of a damaged cleat on belt assembly without requiring the removal of belt assembly from continuous feed indexer . Alternatively teeth can have a pin fixed therein to mate with holes facilitating the installation and removal of cleats in a snap in fashion. Flanges and also have at a distal end thereof a groove and respectively. Grooves and can receive therein a guide rail fixed along frame to laterally stabilize cleats for counteracting the magnetic force when cans are extracted thereby maintaining cleats in a desired track around continuous feed indexer .

Cleat also has upper flange extending forward from web and is coplanar with flange . Likewise a lower flange extends forward from lower flange . Steel dowel pins extend forward from outer edges of flanges and forming recess therebetween. Recess receives therein one of the battery cans for transport along continuous feed indexer . Flanges and also have embedded in a central portion thereof magnets and respectively for retaining a battery can in recess . Alternatively cleat can be constructed to retain an engaging portion of a standard sized adapter which in turn has a capture portion to hold a desired size battery can. In this manner the conveyor assembly can accommodate different size articles of manufacture by simply changing adapters.

Referring now to a cleat backup rail is attached to an upper slot of frame with bolt engaging nut which is captive in slot . Cleat backup rail runs the length of frame and has upper and lower shoulders for receiving flanges and of cleat . Shoulders maintain cleats in a predefined vertical position along indexer . Cleat backup rail can also have a guide rail which engages either or both grooves and of cleat to also provide lateral stability for cleat to maintain cleat in a close lateral relationship with backup rail . Below backup rail a support is affixed to frame . Support is attached to frame in the same manner as cleat backup rail using nuts captive in slots of frame and bolting support thereto. A bottom cell support rail is affixed to an upper surface of support . Bottom cell support rail has a shoulder at an outer edge for receiving therealong and supporting thereon the bottom of battery cans as cans are conveyed along indexer . Bottom cell support also has an upper surface substantially corresponding to support bottom flange of cleat . Side rail supports are affixed to and located at regular intervals along support . Side rail supports have attached to an inner side thereof side rails which have an inner surface to guide the outer surface of battery cans . In the preferred embodiment each of side rail bottom cell support rail and cleat backup rail is formed from a self lubricating material such as an oil impregnated nylon or similar material to minimize wear and facilitate the movement of belt assembly around indexer . Alternatively rails and and be formed from any low friction or wear resistant material.

Referring to as the cans are processed on indexer and returned to trunk individual cans may have been vertically shifted with respect to the carrying cleat . Therefore any cans that have become vertically shifted during processing are realigned with cleats prior to extraction of cans from indexer . For this purpose individual hold down magnets are embedded in the bottom cell support rail at a plurality of locations along rail . Because belt assembly indexes about indexer in a motion dwell manner cleats pause at consistent predefined positions. Hold down magnets are positioned at these locations. When cleats stop during the dwell portion of the belt assembly motion about indexer battery cans are directly above magnets . The magnetic field of magnets is designed to be sufficient to pull an individual can down to contact the shoulder surface of bottom cell support rail .

Referring now to a home sensor is mounted above drive sprocket of indexer drive assembly . Home sensor comprises a slotted disk which rotates in conjunction with drive sprocket . Slotted disk has a plurality of radially oriented slots therearound spaced to correspond to the radial spacing of cleats around sprocket . Each of slots has a leading edge and a trailing edge . Whenever processing system is restarted from an unknown condition each element of system is reset to a known home position. The home sensor is utilized for this function by optical sensor sensing the passage of trailing edge of one of slots in disk thereby disrupting the signal condition of the optical signal generated by sensor . By sensing and adjusting the position of slotted wheel system can reset indexer to a known condition where cleats are moved to a predefined position about indexer . Alternatively a commercially available rotary transducer could be utilized as a home sensor for the nominal alignment of transport belt .

Referring now to a transfer device is shown for transferring battery cans from the continuous motion trunk conveyor to a processing station for processing thereon and from processing station returning processed battery cans to continuous motion trunk conveyor . Additionally transfer device transitions the motion of the battery cans from the continuous motion of trunk to the indexed motion of continuous feed indexer . Transfer device includes a continuous motion drive sprocket which is rotatingly driven by servomotor and an indexed motion drive sprocket in line with continuous motion drive sprocket . Drive sprockets and are toothed or cogged sprockets which engage toothed transport belt assembly . A carriage comprising an input flying idler and an output flying idler are laterally disposed one from the other by belt tensioning bar or alternatively pulled apart by a wire rope and pulley arrangement and is positioned midway between sprockets and . Belt tensioning bar is oriented perpendicular to a line connecting the centers of sprockets and thereby configuring transfer device in a cruciform configuration. An endless transport belt assembly comprising an endless belt and a plurality of cleats affixed to belt for carrying battery cans extends around the drive sprockets and and around flying idlers and . Belt tensioning bar acts on the centerline of belt to reduce loading forces applied to linear rail and carriage block . Fixed idlers are positioned proximate to the intersection of the two axes of the cruciform wherein belt assembly is routed around the inside of fixed idlers thereby directing belt assembly to follow a perimeter of the cruciform.

Referring to transport belt assembly comprises a toothed belt to which are attached at regularly spaced intervals a plurality of cleats for carrying battery cans about the periphery of transfer device . In the preferred embodiment belt is significantly wider than belt used on continuous feed indexer and cleats are fastened to belt in a different manner than the cleats of belt assembly . Cleat has a vertical web which maintains upper flange and lower flange in a vertically disposed relationship. Flanges and extend horizontally from upper and lower ends of web respectively. Each of flanges and have hardened steel dowel pins extending from the outer edges of the flange to define a recess therebetween for receiving a battery can for transport about transfer device . As in cleats cleats also have upper and lower magnets and embedded in a central portion of upper and lower flanges and respectively for attracting and retaining a battery can within recess . A vertical rib protrudes from the back of web and extends from the top of web to the bottom of web . Rib is the only portion of cleat which abuts belt thereby leaving a small clearance between the remainder of web and belt . The clearance at the ends of cleat allows belt assembly to make an inside turn around fixed idlers . Cleats are centered on a tooth of belt and are adjacently spaced corresponding to the spacing of cleats on indexer belt assembly . In the preferred embodiment cleats are fastened to belt with threaded fasteners with the threads of fasteners engaging rib and web . The use of threaded fasteners permits the rapid replacement of cleats without necessitating the removal of belt assembly from transfer device . However alternative means for clamping cleats to belt are possible and within the scope of belt assembly .

Referring now to and the dancer carriage comprises a linear rail having base plates attached to a bottom of rail for mounting to a support base . Linear rail is an elongate rail having an hourglass profile as shown in . A belt tensioning bar has an idler support attached at each end thereof and forms an accumulating member. Idler support at an input end of carriage supports a rotatable input flying idler and an end plate at an outer end thereof. Similarly an idler support at an output end of carriage supports a rotatable output flying idler and an end plate at an outer end thereof. Idler supports are mounted to carriage blocks . Carriage blocks have an internal linear recirculating ball bearing for translating along rail with minimal friction. To obtain the proper tension of belt assembly belt tensioning bar is provided with adjustable links at each end thereof for increasing or decreasing the distance between flying idlers and . Each of flying idlers and has a recess about its periphery to permit the clearance of heads of fasteners retaining cleats to belt . End plates and are positioned at the end of flying idlers and and spaced from the idler s perimeter to permit the passage of belt assembly therearound when belt assembly is transporting battery cans . End plates and are sufficiently close to idlers and to prevent centrifugal force from disengaging battery cans from cleats as belt assembly traverses the perimeter of transfer device .

Referring now to transfer device has associated therewith a plurality of sensor and switches to control the operation of processing system . An input limit switch and an output limit switch are mounted at the respective input and output ends of rail . An end block is affixed to the end of each idler support such that if transfer device was driven to an overly input rich condition dancer carriage translated to the left with battery cans to be processed or to an overly output rich condition dancer carriage translated to the right with processed battery cans end block would actuate the associated limit switch or which would cause system to be shut down and require the realignment of processing system elements. The limit switches and are the last resort shutdown for system to prevent damage to processing system . Input and output end of travel sensors are positioned to optically sense the programmed limits of travel of dancer carriage and to disable processing system if the limits were to be breached. The transfer device also has a home sensor to sense the proper resetting of carriage to its home position when initializing processing system . Finally indexing enable sensor and indexing disable sensor are positioned along rail to sense the maximum desired operational travel of carriage and to therefore in turn disable the indexing drive when transfer device becomes output rich and to enable the indexing drive when transfer device becomes input rich.

Referring to trunk typically comprises one or more continuous motion conveyors and to transport the articles of manufacture such as battery cans from one branch processing station to a subsequent branch processing station and continuing until all desired processing steps have been accomplished.

Each continuous motion conveyor such as conveyor is similar in construction to that of continuous feed indexer . Continuous motion conveyor comprises a central frame from the same extruded slotted beam as frame of continuous feed indexer . Frame has first idler assembly attached to one end of frame and second idler assembly attached to an opposite end of frame . A first tensioner pulley assembly is mounted to the top of frame proximate to first idler assembly and a mirror image second tensioner pulley assembly is mounted to the top of frame proximate to second idler assembly . A transport belt assembly comprising endless toothed belt and cleats extends around continuous motion conveyor for transporting of battery cans in one direction only. Transport belt assembly utilizes the same toothed belt construction as belt used in belt assembly and also uses the same cleats attached to belt in the same manner with a pin extending through rear flanges and of cleat and through individual teeth of the belt.

Each of idler assembly and idler assembly comprises a support to which spindle is attached. Spindles are mounted to a frame or platform and support continuous motion conveyor therebetween. Spindle has a shaft journaled at a top and bottom of spindle assembly and further extends above and below spindle assembly . A first cogged pulley is affixed to the upper end of shaft on first idler assembly and a second cogged pulley is affixed to the upper end of shaft on second idler assembly .

Referring to the continuous motion conveyor is shown in cross section. First tensioner pulley assembly is bolted to the top of frame . Tensioner support extends to the right of frame and horizontal tensioner pulley depends therefrom. As shown in transport belt assembly returns to the idler assembly from the opposite end of conveyor without carrying any battery cans . Since the return portion of belt assembly does not carry cans and as a result of its continuous motion does not experience vibrations induced by starting and stopping belt assembly does not require support beyond tensioner idler pulley assemblies and . The left side of conveyor is used to transport battery cans from one processing station to another and thus requires support similar to the support provided on both sides of continuous feed indexers such as indexer . A backup rail is affixed to an upper portion of frame at upper slot in frame . A captive nut is retained in slot for engagement by bolt to secure cleat backup rail to frame . Support block is affixed to frame at a lower slot in a manner similar to backup rail . A bottom cell support rail is attached to the upper surface of support block . Cleat of belt assembly rides along an upper surface of support rail while battery cans ride along a shoulder at an outer end of support rail . A plurality of side rail supports are attached along support block to support side rail . Side rail is positioned to maintain battery cans captive in cleats as the battery cans are conveyed from one end of continuous motion conveyor to the other end. As in continuous feed indexer backup rail bottom cell support rail and side rail are fabricated from a self lubricating material such as oil impregnated nylon or other low friction or wear resistant material.

As illustrated in a coupler is positioned intermediate adjacent ones of continuous motion conveyors and transfer devices and continuous feed indexers and . Each coupler performs a transfer function between these adjacent elements. For example one coupler will extract battery cans from the input side of transfer device and deliver them to the input side of continuous feed indexer for processing. After processing of cans on continuous feed indexer a second coupler extracts the processed cans from the output side of continuous feed indexer and delivers them to the output side of transfer device . Couplers are similarly used to transfer cans between continuous motion conveyors and transfer device . Couplers are the connecting links between the various transport and processing elements of system permitting these elements to be combined in an infinite number of arrangements while maintaining the capability of a continuous and uninterrupted flow of articles of manufacture throughout system .

Referring to a coupler comprises a spindle assembly having a mounting flange extending outwardly therefrom for mounting to a frame or platform such as platform . Mounting flange has a plurality of holes therearound to facilitate securing spindle assembly to platform . A rotatable shaft extends vertically through spindle assembly and is journaled in upper bearing at an upper end of spindle assembly and in bearing at a lower end of spindle assembly . Shaft extends below spindle assembly and has one or two cogged pulleys mounted thereto. Shaft also extends upwardly through spindle assembly and has mounted thereto at its upper end a dial assembly . Dial assembly has a dial which can be molded of an injectable resin or machined from plastic metal or ceramic and is shaped to minimize weight and rotational inertia.

As shown in dial assembly is generally circular and has a plurality of pockets defined by a perimeter of dial . Each pocket is shaped to receive a portion of a battery can and has an upper magnet and a lower magnet embedded within the portion of dial perimeter defining pocket for capturing and retaining battery can therein.

Referring now to a central web of dial is captured between washer plate and hub and is fastened to washer plate and hub by bolts . Dial assembly is sleeved over shaft as is a taper lock compression fitting which is received by an inner diameter of washer plate and hub . Taper lock compression fitting has an upper tapered insert and a lower tapered insert which are received between inner chamfered ring sleeved over shaft and outer chamfered ring bearing against the inner diameter of hub . A plurality of closely spaced bolts extend through compression fitting in a manner to draw upper tapered insert and lower tapered insert toward one another. As inserts and are drawn together by bolts the tapered surfaces of inserts and compress inner ring against shaft and expand outer ring against the inner diameter of hub thereby securing dial assembly to shaft .

A dead plate support is affixed to a top of spindle assembly . Dead plate support has mounted thereon one or more dead plates and . As shown in the sectional view of dead plate is secured to dead plate support by a threaded fastener such as bolt . Dead plates and are carefully positioned relative to dial assembly so that battery cans can rotate freely within dead plates and yet be sufficiently close to prevent battery cans from becoming dislodged or disengaged from pockets in dial . To this end dead plates such as dead plate as shown in section has a groove in a bottom surface in which is closely received dowel pins for precise radial positioning of dead plates on dead plate support . Dead plate and include upper and lower flanges to maintain each can in a desired vertical position with respect to dial .

Referring now to the upper pulley and drive sprocket arrangements are illustrated in . A continuous motion group whose motion requires coordinated speed for proper interface and transfer of battery cans in association with trunk includes the first idler sprocket of a receiving continuous motion conveyor the continuous motion drive sprocket of transfer device and a coupler to transfer cans from sprocket to sprocket . Likewise a second coupler is interposed between transfer device continuous motion drive sprocket and second idler sprocket of continuous motion conveyor . A second group of couplers and sprockets indexed motion group also requires a coordinated drive includes a coupler for extracting battery cans from indexed motion drive sprocket of transfer device and transferring cans to the input side of drive sprocket of continuous feed indexer . A second coupler extracts battery cans from the output side of drive sprocket and delivers cans to the indexed motion drive sprocket of transfer device .

Referring now to drive group is powered by servomotor from transfer device . In the preferred embodiment a double sided cogged drive belt engages drive pulley of transfer device to provide the desired rotational motion to couplers via their drive pulleys and the rotational motion for continuous motion cogged pulleys and of continuous motion conveyors and respectively via their respective idler pulleys and . Proper tension to belt is provided by belt tensioner . By interconnecting idler pulley of continuous motion conveyor with the idler pulley of continuous motion conveyor the speed of trunk is coordinated and remains substantially constant from one end of processing system to the other end.

The desired rotational motion for the indexed motion group is provided by servomotor which powers drive sprocket and drive pulley of continuous feed indexer . Drive pulley is interconnected to pulley of couplers and to indexed motion drive pulley which in turn drives index motion drive sprocket of transfer device . In the preferred embodiment a doubled sided cogged belt is also used in this group in conjunction with idler and tensioner for providing the proper tension to belt . However a drive system of intermeshed gears could also be utilized to impart the desired rotational motion to drive group and indexed motion group .

Belt assemblies such as belt assembly of continuous motion conveyors and belt assembly of transfer device and belt assembly of continuous feed indexer all progress around their respective frames in a clockwise direction. All couplers rotate in a counterclockwise direction. However the respective directions of travel can be reversed with couplers rotating in a direction opposite the belts.

Transport belt assembly of continuous motion conveyor transports battery cans along directional arrow . Each battery can is retained by a cleat of belt assembly . As cans progress around idler sprocket they are transferred to first input coupler and proceed therearound in captive fashion in a counterclockwise direction as indicated by directional arrow . First input coupler is also adjacent continuous motion drive sprocket of transfer device and cans are transferred from coupler to individual cleats of belt assembly on transfer device . The transfer point of cans occurs at the tangent point coupler and sprockets and . All can transfers occur in like manner throughout system .

As previously discussed carriage with input flying idler and output flying idler at its respective ends divides transfer device into a continuous motion side adjacent to trunk and an indexed motion side adjacent to continuous feed indexer . Cans progress along transfer device in a continuous motion manner according to directional arrows and . As cans progress around input flying idler their motion along directional arrows and is transformed into an indexed motion. The indexed motion comprises alternating periods of belt assembly translation having a speed greater than the continuous motion speed of trunk and a periods of dwell in which the motion of cans is stopped.

In the preferred embodiment the average speed of the indexed motion is slightly greater than the continuous motion speed of trunk . The translation component along the indexed side of transfer device is determined by the number of cans simultaneously processed on continuous feed indexer . Thus if six battery cans are simultaneously processed as shown by processing station in the translation component of indexed motion comprises positionally incrementing belt assembly a distance equivalent to six times the distance between adjacent cleats . The dwell component of the indexed motion corresponds to the time required to accomplish the required processing of cans by process modules on continuous feed indexer . Thus the continuous motion of belt assembly along directional arrows and will cause the leftward translation of dancer carriage to an input rich position of transfer device .

Concurrently the indexed motion along directional arrows and causes incremental rightward translations of dancer carriage toward an output rich position . The continuous motion along directional arrows and during the dwell component of the indexed motion returns carriage toward input rich position . Since the average speed of the indexed motion along directional arrows and is slightly faster than the continuous motion speed of trunk each cycle of indexed motion dwell causes dancer carriage to slowly migrate to output rich position over a period of indexed motion cycles. Upon dancer carriage reaching output rich position continuous feed indexer is temporarily disabled by process station controller thereby allowing the continuous motion of drive sprocket to reset transfer device to input rich position . Upon transfer device being reset to input rich position continuous feed indexer is again enabled to resume indexed processing of cans . The oscillating motion of dancer carriage and its resetting from output rich position to input rich position is graphically illustrated in as a time function and is additionally discussed below with respect to the control system.

As cans progress along directional arrow and around indexed motion drive sprocket each can is captured by second input coupler and progresses in a counterclockwise direction and is then in turn captured by cleats of belt assembly on continuous feed indexer . Cans progress along continuous feed indexer as shown by directional arrow and are processed by one or more process modules not shown during the dwell period of the index dwell motion of belt assembly . After processing cans proceed around idler sprocket and along directional arrow in the same manner of indexed motion for return to trunk . Upon reaching drive sprocket processed cans are handed off to first output coupler and proceed therearound in a counterclockwise direction as indicated by directional arrow .

First output coupler transfers cans to individual cleats of belt assembly on transfer device on the right or output side of transfer device . Cans continue to proceed in an indexed motion dwell manner along directional arrows and to output flying idler . After rounding output flying idler cans transition to continuous motion and proceed according to directional arrows and . Upon reaching continuous motion drive sprocket second output coupler captures individual cans and transports them in a counterclockwise manner according to directional arrow whereupon cans are handed off to individual cleats at drive sprocket of continuous motion conveyor . Cans then proceed in a continuous motion manner along directional arrow to be transported to one or more additional process stations. All battery can transfers are accomplished at the tangential points of dials and interfacing belt assemblies.

Referring now to a plurality of dead plates are arranged about the periphery of those areas where cans are transported in an arcuate manner. Dead plates function to retain cans within the carrying cleats or and within pockets of couplers . In this manner dead plates serve to prevent cans from disengaging from the magnets as a result of the centrifugal force imparted to cans around couplers or end sprockets of continuous motion conveyors and transfer device or continuous feed indexer .

Secondarily dead plates also function to ensure that cans are properly handed off from a cleat or to a coupler or the reverse thereof. To properly position dead plates along the path of cans dead plate supports such as dead plate support are mounted to an upper end of spindle assemblies such as spindle assembly in . Each fixed drive and idler sprocket and coupler involved with the transfer of battery cans have at least one dead plate and a dead plate support associated therewith.

The dead plate supports in the preferred embodiment have four basic configurations. D shaped dead plate support is mounted to the top of the spindle assembly associated with the drive and idler sprockets of continuous motion conveyors and and of continuous feed indexer . Dead plate support has an arcuate end and a linear end wherein the linear end is oriented toward the central frame such as frame of continuous feed indexer and the arcuate end is coaxial with the sprocket shaft and is oriented away from the outer end of the sprocket. The remaining dead plate supports can be circular such as dead plate support can have one arcuate cut out in its periphery such as dead plate support or two arcuate cut outs in its periphery such as dead plate support wherein the cut outs are separated by 90 degrees. The arcuate cut outs permit the nesting of dead plate supports for the proper mounting of dead plates .

The differently configured dead plate supports also facilitate the ability to position individual elements such as continuous motion conveyors and transfer device and continuous feed indexer at any desired angular relationship one to the other. Dead plate supports are coplanar to provide a continuous surface upon which to mount dead plates . Each of dead plate supports have a plurality of dowel pin holes at regularly spaced predefined intervals near the perimeter of the dead plate supports. Dowel pins are partially received within holes such that a portion of the dowel pin extends about a top surface of the dead plate support for engagement with a groove such as groove in in a bottom surface of dead plate . A dead plate can bridge adjacent nested dead plates .

A typical dead plate is illustrated in as dead plate . Dead plate corresponds to one of the dead plates positioned between drive sprocket of continuous feed indexer and first output coupler as shown in . Dead plate has a bottom surface which defines a groove having a width to closely receive the locating dowel pins protruding from dead plate supports . Dead plate also has at least one threaded hole in a bottom portion or other clamping mechanism to facilitate the securing of dead plate to its corresponding dead plate support. The bottom portion of dead plate has a shelf which corresponds to the bottom of a battery can as can is transported around processing system . Similarly a top portion of dead plate has an upper lip which is vertically disposed above shelf . Shelf and lip are vertically separated by web and in combination define a channel for the passage of at least a portion of a vertically oriented battery can therealong.

Web is either solid or can have a window defined at one end thereof. Window may be rectilinear or as shown in have a tongue which further defines at one end of window and in combination with an upper portion of web a slot and in combination with a bottom portion of web a slot . The purpose of windows are to permit the passage therethrough of dial of couplers or of cleats or at the point of battery can hand off from a coupler dial to a cleat or or from a cleat or to a coupler dial . Slots and permit the unrestricted passage of the upper and lower flanges of cleats and therethrough. The size and configuration of window and slots and correspond to the width of dials and to the vertical dimensions of cleats or such that during the operation of processing system there is no portion of dead plate which interferes with the passage of a dial or cleats or as they pass through window and slots and .

Referring to transport belt assembly is illustrated at drive sprocket of continuous feed indexer wherein battery cans are handed off to first output coupler after processing on continuous feed indexer . As cleats carry battery cans toward drive sprocket straight dead plate ensures that battery cans are retained in recesses of cleats . As belt assembly engages drive sprocket and begins to turn around an outer periphery of drive sprocket cans encounter a curved dead plate having a web whose inside surface is maintained at a constant radius from the center of drive sprocket . Dead plate has a rectilinear window through a central portion thereof to permit first output coupler to rotate therein.

Coupler is synchronized with belt assembly such that as belt assembly progresses around drive sprocket pockets defined by the outer perimeter of coupler engage and receive a portion of a battery can . A second dead plate dead plate is abutted to the opposite end of dead plate and is oriented to radially conform to the outer periphery of coupler such that web and tongue engage the portion of battery can within recess of cleat and opposite from pocket of coupler . At the point of transition from dead plate to dead plate battery can is captured by both coupler and cleat . As coupler rotates in a counterclockwise direction according to directional arrow web and tongue engage the portion of battery can received by cleat . Web and tongue operate to disengage battery can from cleat and to maintain battery can in an engaged relationship in pocket of coupler .

All transferring of battery cans from a carrying cleat or to a coupler and the transferring of a battery can from a coupler to a cleat or are accomplished in a similar manner throughout processing system . The transfer of battery cans uses alternately oriented dead plates to guide a battery can about a periphery of a carrying element from which the can is to be discharged engaging a synchronized carrying recess in a receiving element and transferring carriage of the battery can to the receiving element with the oppositely oriented dead plate.

As shown in a branch processing station such as station has one or more process modules mounted to a continuous feed indexer to acquire control of a battery can during the dwell period of the indexed motion perform at least one process on battery can and then return control of battery can to indexer . A second branch processing station has an alternately configured process module mounted to continuous feed indexer for performing a second manufacturing process on battery cans . One configuration of process module as mounted to continuous feed indexer is shown in . Process module includes a base which is received in process module mount attached to process module support . A process module controller is associated with each chassis and can be mounted interiorly or exteriorly of chassis . Controller is in communication with process station controller and control coordinator and includes signal inputs for receiving signals from controller and coordinator . The synchronized control of the operation of process module by process module controller process station controller and control coordinator is discussed in greater detail below. Process module controller controls the operation of application head in a synchronized manner with the dwell portion of the index motion dwell of continuous feed indexer .

Process module has an internal frame to which is mounted servomotor . Servomotor in turn is coupled to vertically oriented rotatable threaded shaft with coupler . A pair of guide shafts are supported by and extend upwardly from frame and flank the upper portion threaded shaft in a parallel manner. A carriage has a pair of sleeves in which guide shafts are received such that carriage is vertically slidable along guide shafts . Carriage further has a threaded element attached thereto and engages rotatable threaded shaft . As servomotor is operated carriage is vertically translated along guide shafts through the rotation of threaded shaft in threaded element . Carriage can be translated upwardly by rotating servomotor in one direction and lowered by rotating servomotor in an opposite direction. A front end of carriage extends through chassis proximate to continuous feed indexer . Application head is mounted to carriage end .

Process module mount positionally locates process module along the longitudinal axis of continuous feed indexer such that when a battery can and cleat are at the dwell portion of the indexed motion dwell sequence application head is directly aligned with battery can in a cleat . As battery can dwells on continuous feed indexer process module controller activates servomotor to rotate in a direction to lower carriage and bring application head into an operational processing position. Application head is then activated to perform its desired process which when completed is vertically raised from its engagement with can by reversing the direction of servomotor and raising carriage on guide shafts . Upon disengagement of application head cleats and battery cans retained therein are indexed along continuous feed indexer .

Referring now to a second type of process module process module has a chassis to which is mounted a process module controller which in turn communicates with process station controller of branch process station and control coordinator in a similar manner as process module . A process module controller is associated with each chassis and can be mounted interiorly or exteriorly of chassis . Chassis includes a base which is received in process module mount on support of continuous feed indexer . Process module has a fixed application head mounted to a top of chassis . Process module differs from process module in that process module captures can and disengages can from cleat to position can in a processing relationship with fixed head .

A horizontally translatable carriage has an upper arm and a lower arm extending out of the front of process module as process module faces continuous feed indexer . Carriage has upper guide sleeves sleeved over upper guide rails and also has lower guide sleeves sleeved over lower guide rails in such a manner as to permit a horizontal translation of carriage along rails and in a precise controlled manner. An actuator is interiorly attached to the front of chassis and has a connecting rod extending rearwardly therefrom which is further connected to carriage . Process module controller generates signals to activate actuator to initiate operation of process module during the dwell periods of the indexed motion dwell of cans and cleat about continuous feed indexer . When an actuation signal is received by actuator horizontal motion is imparted to connecting rod thereby translating carriage to the left as shown in . Upon completion of the processing by fixed application head a second signal is sent to actuator to impart an opposite horizontal movement of carriage to disengage battery can from process module .

As shown in the horizontal movement of carriage in process module results in a corresponding horizontal movement of upper and lower arms and respectively. Upper arm has a pair of upper idlers depending therefrom and rotatable thereon. Likewise lower arm has a pair of lower idlers rotatably mounted thereon such that idlers and are in a vertically opposed relationship and are disposed vertically one set from the other by a distance which is slightly greater than the vertical height of cleat . Arms and are vertically positioned such that cleat passes between idlers and in an unobstructed manner when cleats and battery cans are translated along continuous feed indexer . Process module also includes a vertically oriented servomotor which through coupler is drivingly connected to spin drive . Spin drive is slightly canted with respect to the vertical.

As cleat and battery can dwell along continuous feed indexer process module controller initiates the actuation of carriage which translates to the left. As carriage and arms and translate idlers and contact battery can and disengage can from cleat . Can nestles between laterally adjacent idlers and laterally adjacent idlers . Idlers and translate sufficiently to bring can into contact with driving rib of spin drive as shown in . When can is fully engaged with idlers and and with drive rib of spin drive can is disengaged from cleat however can has not been sufficiently displaced to be removed from the magnetic field which normally retains can in cleat . As battery can contacts drive rib spin drive imparts a spinning motion to can and as a result of spin drive being canted off vertical a slight downward force is imparted to can to maintain the bottom of can in contact with bottom support . Bottom support has a single ball bearing not shown upon which the bottom of can rests to facilitate the desired spinning of can while an internal coating is applied by fixed application head . Upon the internal coating being applied to can process module controller initiates voice coil actuator to translate carriage to the right and thereby disengage idlers and from can . Upon disengagement from can the magnetic field of cleat again attracts and captures can within recess . Upon recapturing of can in recess cleats and cans are indexed along continuous feed indexer and the process is repeated with a subsequent can .

Process modules and as described above are illustrative of representative process modules and their corresponding operation with respect to and in conjunction with continuous feed indexers and . Those skilled in the art will understand that variations and other configurations of process modules are possible for processing of other varied articles of manufacture and for performing alternative processes on battery cans during the manufacture of dry cell batteries.

Referring now to a process module support is shown with a plurality of regularly spaced process module mounts mounted thereto in relationship to indexer belt assembly . The lateral spacing of mounts along continuous feed indexers corresponds to the number of cans to be simultaneously processed and the programmed sequence of dwell periods of belt assembly to ensure that all battery cans are processed. Process module mount includes a mount platform which is secured in slots of support . Platform has a planar upper surface for receiving base of a process module such as process module . Platform has attached to one end thereof a retainer for receiving a front edge of process module base and platform has at an opposite end thereof quick release fastener which is engagable in slot at a rear of process module base . Process module mount functions to precisely locate process modules such as process module with respect to its corresponding continuous feed indexer. Process module and its attached application head can be positionally precalibrated off line from the continuous feed indexer such that when process module is mounted on mount the application head associated therewith is repeatedly positioned with respect to battery cans carried by belt assembly . Retainer of process module mount includes both lateral and longitudinal locating features thereby rendering like calibrated process modules interchangeable. Quick release fastener facilitates the rapid removal and installation of process modules requiring replacement to minimize the downtime associated with a malfunctioning processing system .

The high speed manufacturing system of the present invention employs a flexible and versatile distributed control system for monitoring and controlling the operation of the high speed manufacturing system. The distributed control system provides the functions necessary to control the high speed manufacturing system including control of the operation of the continuous motion conveyor continuous feed indexers transfer devices as well as controlling the individual process modules associated with each branch processing station. In addition to controlling the various components of the high speed manufacturing system the control system controls the routing of articles of manufacture throughout the high speed manufacturing system monitors the manufacturing processes tracks each article and logs the history of each article on the manufacturing line and is further capable of routing experimental articles to experimental process modules and tracking and logging the history of the experimental articles as well. The control system allows for experimental processing qualification runs and other process testing to occur without taking the manufacturing line out of a normal manufacturing production operation.

Referring to the control system for the high speed manufacturing system is generally shown made up of a distributed network of controllers for controlling the operation of the high speed manufacturing system. According to the embodiment shown and described herein the distributed control system includes a main control coordinator three local process station controllers and and a designated number of process module controllers A L each associated with a process module. The control system provides a real time operating system and has a communication bus platform provided via ethernet communication bus and bus to connect the controllers in a distributed control network. Communication bus may include an ethernet 10 Base T bus connected to the main control coordinator and each of local process station controllers and and the continuous motion conveyor CMC controller . Each of the process module controllers A L are connected via communication bus to their designated local process station controllers and . Communication bus may comprise individual communication lines which include an ethernet communication link such as an ethernet 10 Base T bus.

Each local process station controller is generally responsible for control and monitoring of the events taking place on one branch processing station of the manufacturing system. More particularly each local process station controller communicates with including provides control signals to and receives data information from one or more designated process control modules the continuous feed indexer and the associated transfer device all of which are preferably located on one branch processing station. Accordingly the first process station controller communicates with four designated process module controllers A D continuous feed indexer and its associated transfer device all of which are present on the first branch processing station. The second process station controller communicates with six designated process module controllers E J continuous feed indexer and its associated transfer device all located on the second branch processing station. Finally the third process station controller communicates with two designated process module controllers K and L as well as continuous feed indexer and its associated transfer device all located on the third branch processing station. While one process station controller is preferably dedicated to each branch processing station it should be appreciated that more than one process station controller could be assigned to a given branch processing station and one process station controller could be dedicated to serve more than one branch processing station.

The local process station controllers are responsible for communicating with the process module controllers that are designated thereto. The process station controllers are also responsible for controlling the associated continuous feed indexers including control of their timing and speed for the index and dwell intermittent motion. In addition the continuous feed indexer transmits information to the corresponding process station controller to indicate when the continuous feed indexer has completed an index or dwell operation. The transfer device transmits return data information back to the corresponding process station controller regarding its operation.

In addition the control system further includes a continuous motion conveyor CMC controller which is also connected in communication with the ethernet communication bus . The CMC controller is a separate distributed controller that is dedicated to controlling the operation of the continuous motion conveyor s of the trunk. The CMC controller receives control signals such as speed control signals from the control coordinator and provides return data information regarding the operation of the continuous motion conveyor. Accordingly the communication bus allows the control coordinator process station controllers and CMC controller to communicate with one another on one common distributed network.

The distributed control system has communication links for allowing remote access to the ethernet communication bus and control coordinator . It should be appreciated that communication bus can be wire or wireless. Remote access is achieved by way of a human machine interface HMI which may include a stand alone computer connected to the control coordinator . The human machine interface allows an operator to input command signals to the control system as well as retrieve data information from the control system . In addition a remote material information system MIS is provided in communication with the ethernet communication bus . The material information system may include a remotely located computer connected through a communication line to the communication bus to access the control system . For example the material information system may include a long distance communication link linking the communication bus of control system to a remotely located computer to allow remote access for inputting control signals and or retrieving data information from control system . Either the human machine interface or material information system may be used to program the control system including such operations as downloading designated software modifying control parameters performing experimentation as well as handling other operations. In addition the human machine interface and material information system also allow for the retrieval of the process manufacturing information that is monitored and logged by the control system . This may include retrieval of normal processing information experimental processing information article tracking information and any other data acquired from the various controllers and sensors of the control system .

The main control coordinator is a programmable processor based controller that coordinates and monitors the overall operation of the high speed manufacturing system. The main control coordinator distributes control signals to the process station controllers and CMC controller via communication bus . Control signals broadcast from control coordinator may include article notice messages to notify the various process station controllers of oncoming articles of manufacture as well as other information. The main control coordinator also receives and records information received from the process station controllers and CMC controller . Messages received by the control coordinator may include work report messages received from each process station controller which detail the work completed on each article of manufacture preferably following each process operation performed by the process modules.

Referring to the hardware configuration for one example of the main control coordinator is shown therein. The control coordinator includes a central processing unit CPU an input output port flash memory random access memory RAM a network hub contactors and relays and a disconnect switch . It should be appreciated and understand that various other standard controller components may be present in the control coordinator or the other controllers that are shown and described herein in connection with the control system . The central processing unit may include a commercially available microprocessor one example of which may include Model No. MVME 2304 made available from Motorola. The random access memory and flash memory are available to store program software to perform designated process control functions as well as other operating system programs and also to store data information collected with the control system . The network hub includes at least two 10 Base T ethernet ports and allows communication via the ethernet communication bus . The contactors and relays may be utilized to perform an emergency stop of the manufacturing system while disconnect switch provides a means to turn off the power supply to the control coordinator which will also shutdown the control system . It should be appreciated that the various components of the control coordinator may be assembled together on one or more boards and arranged on a VME rack.

Additionally the control coordinator is further shown in communication with a safety circuit that links the control coordinator to each of the process station controllers and the CMC controller . The safety circuit provides a separate hard wired connection that may be utilized to disconnect the control system power outputs when necessary such as during an emergency condition. A standard power supply is also provided to the control coordinator and may include 480 volts AC which is preferably transformed to a usable DC voltage of 24 volts DC or other suitable voltage level.

The local process station controllers and are provided as local controllers to the branch processing stations and each process station controller is designated to control the operations associated with one branch processing station of the manufacturing system including control of the continuous feed indexer its transfer device and the designated process modules all of which are associated with one branch processing station. Accordingly process station controller serves as a local controller to control the processing associated with the first continuous feed indexer transfer device and process module controllers A D. The second process station controller controls the processing performed on the second continuous feed indexer its transfer device and process module controllers E J. The third process station controller controls the processing associated with the third continuous feed indexer its transfer device and process module controllers I and L. In addition each process station controller receives data information such as work progress reports from its designated process module controllers transfer device and continuous feed indexer.

One example of a hardware configuration for the local process station controller is shown in . The process station controller hardware includes a distributed input output gateway a central processing unit CPU flash memory random access memory RAM and a continuous feed indexer CFI servo control . In addition the process station controller has a network hub contactors and relays and a disconnect switch . The central processing unit may include a commercially available microprocessor one example of which may include Model No. MVME 2023 made available from Motorola. The flash memory and RAM allow for storing of programmed software and data storage. The CFI servo control provides an amplified servo control signal to the CFI s servomotor to control operation of the continuous feed indexer. Network hub includes at least one ethernet port and allows for networked communication connections to bus as well as communication connections to bus . The contactors and relays allow for shutdown of the system during an emergency condition while disconnect switch allows for power disconnect from the process station controller to thereby shutdown the control system . The safety circuit is shown connected to the process station controller to provide a hard wired connection that may be used to shutdown the control system in case of an emergency shutdown condition. A standard power supply is also provided to the process station controller and may include 480 volts AC which is preferably transformed to a usable DC voltage of 24 volts DC or other suitable voltage level.

The process station controller is further shown having connections to the continuous feed indexer via lines and . The CFI servo cabling line allows for servo cabling to the continuous feed indexer to transmit drive signals to drive the servomotor associated with the continuous feed indexer. CFI Distributed I O 24 V DC line provides two way communication such as sensor and actuation signals and power to the continuous feed indexer. CFI Safety I O line provides a hard wired safety circuit connection to the continuous feed indexer to shutdown the system in case of an emergency shutdown condition. The process station controller is further shown in communication with process module controllers via communication bus . It should be evident that the other local process station controllers and may be configured identical or similar to controller as described above. Each local process station controller is preferably delegated the responsibility for initiating the process steps performed by the process modules associated therewith as well as controlling the motion of the corresponding continuous feed indexer.

Each of the process module controllers A L are provided for controlling and performing the physical processes that are to be performed by the associated process modules. For a battery manufacturing process application such physical processes may include inputting cells on the continuous feed indexer outputting cells off the continuous feed indexer applying sealant to the battery can inserting separators inserting KOH inserting anode gel inserting collectors crimping and closing cells and disposing of defective cells. It should be appreciated that the process module controllers are preferably software driven and are programmed such that each process module controller drives one or more servo controlled motors to perform one or more designated processing operations.

One example of a process module controller is shown in which is representative of the hardware configured for any of process module controllers A L. The process module controller includes a central processing unit CPU flash memory random access memory RAM a servo controller and a Base T ethernet port . The central processing unit may include a commercially available microprocessor examples of which may include Model No. Pentium made available from Intel Corporation and

Model No. Power PC 604E made available from Motorola. Flash memory and RAM store designated program software and data information while the servo controller generates servo control signals to drive one or more actuators or motors each of which is configured to perform a designated processing operation in conjunction with the process module associated therewith. The Base T ethernet port allows communication with the corresponding process station controller via the ethernet connection bus . In addition solid state relays and a disconnect switch are provided on the process module controller to allow for shutdown of the system. The process module controller is connected in communication with the corresponding process station controller to which it is assigned by way of the ethernet communication bus as well as the safety circuit which is a hard wired line that allows for emergency shutdown of the system. The process module controller further communicates with sensors and actuators on line to receive sensed data and initiate actuation of certain devices. Further the process module controller communicates via the servo controller with the designated motors associated with the process module.

The continuous motion conveyor controller is shown in according to one example. Continuous motion conveyor controller includes a distributed input output gateway a central processing unit CPU flash memory random access memory RAM and a CMCC servo control . The central processing unit may include a commercially available microprocessor one example of which may include Model No. MVME 2023 made available from Motorola. Flash memory and RAM are available to store designated software programs as well as data information. The CMCC servo control provides servo control signals to control the actuation and speed of the drive motor which drives the continuous motion conveyor . In addition contactors and relays and a disconnect switch are provided on the continuous motion conveyor controller to allow for shutdown of the system during an emergency shutdown condition.

The continuous motion conveyor controller communicates with the ethernet communication bus as well as the hard wired safety circuit . In addition the continuous motion conveyor controller has three lines and connected to the continuous motion conveyor. Included is a CMCC servo cabling line which allows servo control signals to be transmitted to the drive motor associated with the continuous motion conveyor . CMCC Distributed I O 24 V DC line allows for two way communication of sensor and actuator signals as well as power signals to the continuous motion conveyor. CMCC Safety I O line provides a safety circuit connection to the continuous motion conveyor to allow for shutdown of the continuous motion conveyor during an emergency shutdown condition.

It should be appreciated that the process module controllers A L are controlled by software defined process module agents as is explained herein. According to one embodiment the process module agents may be included with and processed by the local process station controller designated to controlling the associated branch processing station on which the corresponding process module operates. According to a second embodiment the process module agents may be programmed into and processed by the individual process module controllers A L associated with the corresponding process module. In any event the process module agent for controlling a specified process operation can be distributed amongst the available controllers by storing and processing the agents software in either the local process module controller associated with a particular process module or the process station controller designated to that process module.

The distributed control system is software based and preferably uses an object oriented software operating control system. According to one example C object oriented programming may be employed. The use of object oriented software programming for the control system facilitates maintenance and reuse of the high speed manufacturing system. The object oriented software identifies the physical and conceptual objects of the system and represents such objects as software agents. In addition responsibilities attributes and services are assigned to principle classes. The control software is responsible for checking and configuring the control system initiating operation of the system and monitoring the status of the system transporting articles of manufacture to and between process stations by way of the continuous motion conveyor transfer device and the continuous feed indexers and managing the global conveyor system to maximize article throughput and minimize transfer device limit failures. In addition the control system notifies the process stations about the status of oncoming articles actuates the process stations according to the programmed work specifications the article status and the conveyor status and records information about the processing of each article of manufacture. Further the control software effects shutdown of the control system when required handles subsystem failures either by restoring the subsystem replacing it or shutting down the overall system and resuming operation after either controlled or uncontrolled shutdowns and provides an operating interface that supports the system operation and any problem diagnosis resolution.

The physical objects of the system to which the control software is assigned agents include the control coordinator the process stations the process modules the continuous motion conveyor the continuous feed indexers and the safety system. For each of these objects which are controlled and or monitored by the control software object agents are defined to encapsulate their associated data and behavior and their responsibilities are specifically allocated. According to one embodiment the main control coordinator agent is allocated the responsibilities of checking and configuring the system initiating system operation and monitoring system status managing the global conveyor system to maximize article throughput and minimize transfer device limit values notifying process stations about the status of oncoming articles recording information about the processing of each article effecting control system shutdown when required handling subsystem failures either by restoring the subsystem replacing it or shutting down the overall system and resuming operation after either controlled or uncontrolled shutdown. Some of these responsibilities involve checking configuring starting interrogating adjusting and stopping subsystems such as the continuous feed indexers continuous motion conveyor and process stations. The main control coordinator agent delegates these responsibilities to the subsystems controlling agents that are associated with the continuous feed indexers continuous motion conveyor and processing station agents. Accordingly the control coordinator is responsible for the supervisory control of the entire control system.

The control system also includes a process station agent corresponding to each physical process station on the high speed manufacturing system. The process station agent is responsible for instructing the corresponding process station to process articles of manufacture according to their work specification and status. There may exist separate process station agents assigned to initiate each step of the manufacturing process carried out by a corresponding process module. For the battery manufacturing application there may be separate process station agents for initiating actuation of the inputting of cells outputting cells applying sealant inserting separators inserting KOH inserting anode gel inserting collectors crimping and closing cells and disposing of defective cells as well as other operations.

The control system further includes a process module agent corresponding to each physical process module on the high speed manufacturing system. The process module agent is responsible for controlling a designated process module to implement the specific individual steps to perform the designated operation dedicated to that particular process module. The process module agent may be viewed as a software routine which instructs the process module to perform a specified function according to the programmed routine. The process module agent further monitors the operation of the corresponding process module and sends monitored data in a work report to the process station agent assigned thereto.

The main control coordinator agent interacts with each of the process station agents and each of the process station agents interacts with each of the process module agents that are assigned thereto. During normal manufacturing operation the main control coordinator agent sends article notice messages to the process station agents to notify the process station agents of the oncoming articles of manufacture. A process station normally will not process the article of manufacture unless the process station agent which controls a particular process module has received an article notice message indicating that it should do so and the continuous feed indexer has returned a report that it is in proper position. In response the process station agent notifies the designated process module agent to initiate its programmed process operation. Once the process module has completed its intended operation the process module agent issues a work report message which is sent to the process station agent. The process station agent then broadcasts the work report message to other process stations as well as to the control coordinator . The control coordinator preferably monitors and records each work report message for each article of manufacture. The work report messages issued by the process station agents may include information describing the results of processing individual articles of manufacture and may indicate whether the processing operation was successful or not may contain test results or other measurements may report experimental processing information and may include cell processing history data. These work report messages are sent to the control coordinator in support of its notification and record keeping responsibilities.

To communicate article notice messages and work report messages the control system of the present invention preferably uses a protocol for communicating such information. Referring to one embodiment of a protocol that could be employed is shown and is identified as a broadcast protocol in which the process station agent broadcasts work report messages as shown by dashed lines to the other process stations and agents as well as to the control coordinator agent. A process station agent receiving a work report message examines the information to determine whether to process the article of manufacture that it refers to. The process station agent will generally process the article of manufacture if the work report message was issued by the process station agent controlling the process station that precedes its own and if the article was processed successfully. The control coordinator agent initiates processing of an article by broadcasting a dummy work report message for itself and simply records the work report messages that it receives. The advantage of the broadcast protocol is that activating or deactivating a process station does not entail opening or closing of network connections.

Referring to a second embodiment of a protocol referred to as the process station chain protocol is shown in which each processing station determines whether an article of manufacture should be processed further or rejected and the process station agent sends an article notice message directly to the appropriate process station or disposal station without the intervention of the control coordinator . In doing so the process station agents send copies of their work report messages to the control coordinator agent for recording. By distributing responsibility for article routing the process station chain protocol reduces the workload of the control coordinator and reduces network traffic.

A third embodiment of a protocol is shown in and is referred to as the hybrid protocol in which each process station agent such as process station agent sends its work report message for an article of manufacture to a local control coordinator proxy . The local control coordinator proxy determines which process station should process the article of manufacture next and issues an article notice message to the corresponding process station agent. In addition the real control coordinator issues an itinerary message to each process station. The control coordinator proxy does not have to communicate with the real control coordinator throughout each article of manufacture although the real coordinator informs the control coordinator proxy of changes in the itinerary for articles of manufacture. Thus the hybrid protocol reduces the workload on the real coordinator but at the same time removes knowledge of the line configuration from the process station agents.

A fourth embodiment of a protocol is shown in and is referred to as the centralized protocol which may or may not have article identification. According to the centralized protocol embodiment each process station agent sends work report messages to the control coordinator . The control coordinator examines the work report messages to determine which process stations should handle the corresponding articles of manufacture next and then directs appropriate article notice messages to the process station agents associated with those process stations. The control coordinator also records the work report messages that are received.

In addition an article identification scheme may be used in the centralized protocol for tracking articles of manufacture on the manufacturing system line by assigning to each article a sequence number corresponding to its position in the article stream and to use this number as an article identifier throughout the article s processing. Accordingly a process station agent can identify arriving articles by keeping a count of the transport cleats that have passed the process station and adding the transport cleat offset to the count. Of course this scheme requires that the order of articles on the line be preserved or any reordering of the articles be accounted for. As long as the reordering is deterministic it can be accommodated by using two numbers to track an article namely a sequence number SN and an article identifier ID . These numbers are included in the article notice and work report messages. The control coordinator assigns each article an article identification number upon its entry to the manufacturing system and this identification does not change during the article s processing even if any reordering occurs. Any reordering would be accounted for by the control coordinator and tracked as necessary to account for the position of each article of manufacture.

For each continuous feed indexer on the manufacturing system there preferably exists a continuous feed indexer agent which is responsible for controlling the continuous feed indexer and its associated transfer device. The continuous feed indexer agent also interacts with the control coordinator when the system is configured started or stopped when a failure occurs and when the control coordinator requests its status. In addition the continuous feed indexer agent monitors the condition of the continuous feed indexer and informs the control coordinator of malfunctions supports the control coordinator s responsibility to manage the global conveyor system and synchronizes the operation of the continuous feed indexer and associated process stations by interacting with the process station agents.

A continuous motion conveyor agent is also provided for controlling the continuous motion conveyor. The continuous motion conveyor agent is responsible for interacting with the control coordinator when the system is configured started or stopped when a failure occurs and when the control coordinator requests its status. In addition the continuous motion conveyor agent monitors the health of the continuous motion conveyor and informs the control coordinator of any malfunctions and supports the control coordinator s responsibility to manage the global conveyor system.

With the control coordinator agent and process station agents being physically distributed remote proxies such as shown in may be employed. A remote proxy is a local stand in for a remote server and provides a server interface in place of the real controller. The remote proxy may be used to encapsulate the details of network communication and to make distribution of agents transparent to other controllers. It should be appreciated that each networked controller may include a remote proxy that is representative of another controller with which that controller is to communicate. This allows for interaction between controller agents as though they were residing on the same processing unit even though the controllers are distributed. Alternately it should be understood that communication between the distributed controllers could be achieved using message queues which are well known in the art. It should also be appreciated that the software agents may run on one or more processing units with little configuration required.

Referring to the primary operations of the control coordinator agent are shown with interaction to other agents. The primary operations include startup normal production mode failure handling and shutdown . During the startup operation the control coordinator agent receives a startup command from the human machine interface and in response configures and initializes the various agents and data stores. This includes initializing the system data bases with information on the physical layout of the system and article itinerary. The control coordinator agent is also responsible for initiating each of the continuous motion conveyor controller the continuous feed indexer and the process station controllers to configure themselves through the configuration store based on the physical layout of the system.

Once the startup operation is complete the control coordinator agent may begin the normal production mode operation to execute the processing operations for manufacturing articles of manufacture. During normal production mode the control coordinator coordinates the manufacture processing operation which includes notifying each process station controller of the presence identification and status of articles of manufacture that are approaching the branch processing station corresponding to that process station controller as well as recording the results of processing each article of manufacture. The control coordinator also communicates with the continuous motion conveyor controller as well as the continuous feed indexer preferably via the corresponding process station controller.

With the failure handling operation a safety monitor monitors the various controllers and reports any problems to the control coordinator . The control coordinator can evaluate and attempt to correct or adjust manufacture operations when a failure has occurred and may initiate shutdown of the system if necessary. The human machine interface may initiate a shutdown operation in which the control coordinator instructs the controllers to undergo a software shutdown. With a software shutdown operation the control system stores the position identification and processing information for each article of manufacture on the manufacturing system so that processing of these articles may continue where it left off when the system is started back up. This allows for continued manufacture of partially processed articles which reduces article waste and shutdown time.

Turning to the primary operations of any of the process station controller or are shown interacting with various devices. During the startup operation the process station controller is instructed by the control coordinator to initiate startup. The process station controller can configure itself through the configuration source . In addition the process station controller preferably configures each of the process module controllers and the continuous feed indexer associated with the corresponding branch processing station.

During normal production operation the process station controller receives article notice messages from the control coordinator and further receives a CFI indexing status message from the continuous feed indexer . If the CFI position status message indicates that the continuous feed indexer has indexed to the proper position for the next processing step the process station controller instructs each process module for which an article notice message was received to execute its processing operation. Upon completing its processing operation each process module sends a return message to its process station controller to inform of its processing status for that article. The process station controller in turn transmits a work report message to the control coordinator for recording. In addition the process station further instructs the continuous feed indexer to move in an index and dwell intermittent motion preferably when instructed to do so by the control coordinator .

During the handle failure operation the process station controller interacts with the control coordinator as well as the process modules and continuous feed indexer associated therewith. The cycle stop shutdown operation likewise interacts with the control coordinator process module controllers and continuous feed indexer . Further a diagnostics operation is available with the process station controller in which a diagnostic tool interacts with the process station controller to perform diagnostic functions.

Referring to a controller class hierarchy is illustrated with a controller class and four subclasses which include the continuous feed indexer class the continuous motion conveyor class the process station class and the process module class . The controller class has assigned thereto primary methods which include configure cycle stop status and get status make ready handle safety shutdown resume start and suspend. Each of the subclasses and contain additional methods and each subclass further inherits all the methods of the controller class as represented by inheritance . In addition to the inherited methods the continuous feed indexer class includes added primary methods such as the deregister station method the station ready method and the register station method. The continuous motion conveyor class includes added primary methods such as the change speed method to change the continuous motion conveyor s speed and the conveyor get speed method to acquire the conveyor s speed. The process station class includes two additional primary methods namely the actuate method and handle article notice method. The process module class includes methods for performing designated process functions.

The high speed manufacturing system of the present invention is designed and controlled to perform high speed manufacture processing of articles in a manner that is flexible in that system components are modular easily replaceable and reconfigurable with the distributed control system. Additionally the manufacturing system is configured to allow expedient experimental processing of articles simultaneous to the normal manufacturing process. To achieve experimental processing the manufacturing system platform was developed with a specified set of choices for the number of identical process modules that are employed on each branch processing station. To realize increased processing capability on each branch processing station the number up N which is the number of process modules operated in parallel for the same processing operation may be increased. This allows a larger number of articles to be processed on a single branch processing station for those processes that require more time to be performed than other processes.

According to one embodiment the high speed manufacturing system restricted the number up N based on the following equation N 23 where x 0 through 5 and y 0 or 1. Alternative embodiments can restrict N to other values such as N 23 where x 0 through 4 and y 0 through 2. Based on the aforementioned equation the number up N for each branch processing station may be selected from the following possible set of values 1 2 3 4 6 8 12 16 24 32 48 and 96. As long as the number up N for each branch processing station is selected from the available set of values experimental processes performed on articles of manufacture can also be conducted during a normal manufacturing operation and within a reasonable period of time. According to the particular example of the manufacturing system as set forth in the first branch processing station employs a number up N equal to four while the second and third branch processing stations employ a number up N equal to six and two respectively. In order to run an experimental process for 1 000 articles with an experimental processing module while the manufacturing system is still performing normal processing at a processing rate of 700 articles per minute the manufacturing system would take approximately 13.33 hours. This is because the manufacturing system is capable of processing one experimental article for every twelve articles since from the prime factorization the factors of N 4 are 2 2 the factors of N 6 are 2 3 and the factors of N 2 are 2. Since the lowest common factor therefore is 2 3 2 12 one of every twelve articles may be experimental for the above example.

With particular reference to examples are provided for the number of process stations that are required as a function of process time and article throughput e.g. articles per minute for two third cycles provided that 67 of the cycle time is used for process operations. Process example illustrates that a large number of process modules are required for a process execution time of 2.000 seconds. Process examples and illustrate that a reduced number of process modules are required for process execution time periods of 0.500 seconds 0.267 seconds and 0.100 seconds respectively. Process example shows that a fast process execution time period of 0.050 seconds requires even fewer process modules. Accordingly the number up N required for a particular branch processing station increases with the more time consuming processes.

The operation of the distributed control system for controlling the high speed manufacturing system of the present invention will now be described as follows. Prior to performing processing operations the control system will undergo an initial startup operation in which the control coordinator initiates configuration of the various controllers and controlled devices including the continuous feed indexer the process stations and the process module controllers. Once configured each controller notifies the control coordinator that it is ready for operation. The control coordinator then requests alignment of the transfer devices to their predetermined home positions so that the control coordinator can account for the position and identification of each article of manufacture as it is conveyed and processed by the manufacturing system. The control system is now ready for normal processing operation.

With reference to the normal processing operation of the distributed control system is illustrated therein. During the normal manufacturing operation the control coordinator sends an article notice message to the process station controllers such as process station controller which is shown. The process station controller also receives an actuate cleats message from the continuous feed indexer which indicates that the continuous feed indexer has completed its index motion to the next processing position. When in proper position the continuous feed indexer s transport cleats and the articles carried thereon are aligned with process modules that are to perform the next processing operation. Once the process station controller received both the article notice message and the actuate message it sends actuate messages and to each corresponding process module controller such as process module controllers A and B. Actuate messages and instruct the receiving process module controllers A and B respectively to execute the process operation for its associated process module.

Upon completing its process operation each process module controller sends a return module report and to the corresponding process station controller informing it of the completed status. The process station controller in turn transmits work report messages and back to the control coordinator which contains the work progress information for each article of manufacture. The control coordinator is thereby able to track and log the history of each and every article of manufacture that is processed on the manufacturing system. In addition each process module controller also transmits module clear messages and to the corresponding process station controller indicating that the process module has returned the article to the continuous feed indexer and is clear of the article that was previously processed. The process station controller further issues a station ready message to the continuous feed indexer to enable the continuous feed indexer to execute its index motion.

The normal processing operation is repeated for each article to be processed. The high speed manufacturing system can be shutdown with a normal shutdown operation a failure shutdown or a safety shutdown. A normal shutdown operation is executed with the control coordinator broadcasting a cycle stop message to each of the process station controller the continuous feed indexers and the continuous motion conveyor which instructs the devices to stop normal operation at the end of a cycle so that the normal operation can be restarted where it left off without skipping any articles. A handle failure shutdown likewise includes the control coordinator broadcasting a cycle stop message to each of the process station controllers continuous feed indexers and the continuous motion conveyor to stop normal operation at the end of a cycle such that a restart is possible. However the handle failure shutdown is done in response to a handle failure signal. The handle safety shutdown involves a safety monitor such as a transfer device limit switch or door open detector notifying the control coordinator of a problem. In response the control coordinator sends shutdown messages to each of the process station controllers continuous feed indexers and the continuous motion conveyor to shutdown the system immediately.

Referring to the operation of the first continuous feed indexer is illustrated with line movement increments equal to the number up N 4 in which a series of articles are conveyed in indexed intermittent motion to present the articles in position for processing by four normal process modules . The process modules are successively spaced apart from each other by a distance of N 1 articles. As such for the N 4 example shown process modules are spaced five articles apart from the next process module. During normal processing operation each process module performs its designated process operation on every fourth article.

The high speed manufacturing system of the present invention further allows for experimental processing of articles to be performed at the same time as normal processing is performed. This can be achieved by employing an experimental process module as shown in parallel with one of the normal process modules . To perform experimental processing the experimental process module is instructed to perform processing on one article in place of one of the normal process modules. By spacing the normal process modules at N 1 articles the experimental processing may be easily employed. It should also be understood that how often the experimental process module can be used may depend on the number of experimental processes performed and the common denominator of N for each branch processing station as explained herein.

As mentioned above each of the continuous feed indexers move in an indexed intermittent motion to provide a dwell i.e. process period during which processing occurs and an index i.e. travel period during which the continuous feed indexer moves. The indexed intermittent movement of the continuous feed indexer is illustrated in as a function of velocity and time. During the index period the continuous feed indexer is initially ramped up in speed levels off and then is ramped down in speed until the proper dwell position is reached. During the dwell period the continuous feed indexer remains put while process operations are allowed to occur. The intermittent indexing motion of the continuous feed indexer is repeated throughout normal operation.

Referring to the seven proximity sensors are shown positioned along the travel path of the transfer device for monitoring the transfer device s travel. The home position sensor senses a predetermined home position of the transfer device which allows the control system to begin the normal operation of the high speed manufacturing system in a known position. The CFI index enable position sensor and CFI index disable sensor provide position sensing that defines the normal travel limits of the transfer device upon which a transfer device reset occurs. More particularly the CFI index disable sensor senses that the transfer device is output rich and upon completing the current cycle of the CFI will cause the CFI to disable. With the CFI disabled the input side of the transfer device continues to receive articles from the continuous motion conveyor. The CFI index enable sensor senses when the transfer device has become input rich and then causes the CFI to be re enabled.

The transfer device proximity sensing also includes a pair of IN EOT and OUT EOT position sensors and respectively for detecting first and second end of travel limits of the transfer device . When either the IN EOT position sensor or OUT EOT position sensor detects transfer device travel beyond the limits a software shutdown of the system is initiated. Beyond the end of travel sensors are a pair of Input and output hardware limit sensors and which may include hardwired limit switches. If the transfer device travels beyond either of the hardwired limit switch sensors or the manufacturing system is immediately shutdown.

Control of the transfer device in response to the proximity sensors is further illustrated in the state diagram provided in . As illustrated there is a CFI enabled state a CFI disabled state and a line cycle stop . With the home position sensor detecting home position of transfer device the CFI begins in the enabled state . When the CFI index disable position sensor detects an output rich condition the system transitions to the CFI disabled state in which the CFI is turned off at the end of its current cycle. Once the transfer device returns to an input rich condition the CFI index enabled position sensor returns the transfer device to the CFI enabled state . In either the CFI enabled or disabled states or the system may enter the line cycle stop state if either of end of travel position sensors and detects extended travel of the transfer device as shown in blocks and .

The relative movement of the transfer device is illustrated in as a function of percentage of transfer device travel and time. During normal operation the transfer device continuously receives articles of manufacture at its input side at a constant rate as determined by the continuous motion conveyor. The output side of the transfer device moves in sync with the continuous feed indexer in an indexed intermittent motion. The indexed intermittent motion includes index movement which is represented by the drop in the sawtooth response and the continuous feed input movement during a dwell or CFI disable is shown by the rise . The index travel movement generally occurs at a faster rate of speed than the continuous feed input motion. Accordingly the transfer device eventually becomes output rich at which point the CFI is disabled and the transfer device travel is ramped back to the input rich condition whereupon the CFI is then enabled again.

Accordingly the control system provides distributed electronic control e.g. fly by wire control which is flexible and agile. The distributed control system allows for high speed process manufacturing such as battery manufacturing at rates achievable of at least 900 to 1 800 batteries per minute. While the high speed manufacturing system has been described in connection with a battery application it should be appreciated that the high speed manufacturing system of the present invention may likewise by applied to various other applications for manufacturing desired articles of manufacture without departing from the spirit of the present invention.

Referring to the modular high speed processing system is further shown configured to simultaneously perform different multiple processes such as normal and experimental processing. It should be appreciated that the processing system may perform experimental processing on selected articles while at the same time performing normal processing operations. For example the processing station may perform a different specified operation on selected articles without shutting down the processing system and without requiring significant changes to the control system. For some types of experimental processing the processing system may employ at least one or both of a programmable input module PIM and a programmable output module POM . The programmable input module selectively inserts special pieces such as battery cans onto the production line at a designated location. The programmable input module can intersperse special run production pieces between bulk product pieces to enable more than one type of product to be processed concurrently on the processing system . The programmable output module selectively removes individual pieces from the processing system in a manner that allows each piece to be tracked as an individual entity on the production line. The programmable output module can identify and remove non bulk produced items from the production line before they are removed by the bulk output module. Accordingly the programmable input modules and programmable output modules selectively insert and remove special pieces which may be processed different than other normal production pieces by using one or more experimental process modules and the special pieces can likewise by tracked and the history can be logged as they move through the processing system .

Referring to an on line experimental processing methodology is illustrated for performing experimental processing on the processing station of . Beginning at step A a normal production processing operation is performed. In decision step B experimental processing method checks for whether a request for experimental processing has been received by the control coordinator and if not continues to perform the normal processing operation according to step A. When an experimental processing request is received the control coordinator downloads the experimental processing operation steps including the processing requirements number of pieces to be experimentally processed and other special information in step C. In step D a special experimental piece such as a battery can is loaded onto the process station at a known location via the programmable input module. In step E one or more experimental process modules are configured with processing specifications to perform one or more experimental processing steps. In step F the special pieces are routed to the experimental process modules where they are processed according to the experimental processing configuration. Once all process steps are completed method proceeds to step G to remove the experimentally processed piece from a known location on a process station via the programmable output module and then returns to the normal processing operation in step A.

Accordingly the experimental processing of the present invention advantageously allows for simultaneous production of differently processed items on the same processing system without requiring shutting down the system to reconfigure the processing arrangement. This advantageously allows for the experimental processing of certain selected articles or alternately for the mass production of different processed articles of manufacture on the same processing system and at the same time.

In addition to the production line conveyance hardware computing process controllers and distributed network hardware the control system framework employs flexible and versatile software that is executable on multiple control system configurations and various types of computer controllers. The control software is not dependent on any particular computer operating system but instead is open so that various types of hardware and software may interface thereby minimizing the dependence on a particular hardware and software configuration. In addition the control software is flexible so as to manage and orchestrate multiple production line configurations and to enable continued processing of material in the event that other processors and or software agents in the production line fail. Communications between distributed processors is high speed accurate and able to manage data traffic effectively in a near zero defect environment. The control software also allows for tracking of the process operations performed on individual articles of manufacture allows for several different batches of products to be produced without shutting down a manufacturing system allows for different types of production machinery to be controlled without requiring significant modification to the control software package and minimizes interruption of the processing operations when maintenance is to be performed amongst other advantages as described herein.

While the control system is described herein in accordance with a battery manufacturing system it should be appreciated that the control system and control software may be employed in various other applications to control many other types of manufacturing processes. The control system framework has flexible components to perform various types of cost effective manufacturing with very little modification to the control system. For example the control system and software may be employed to process small articles of manufacture such as small arms ammunition dry erase markers and COcartridges on a similar type of production conveyance line as that disclosed herein for making alkaline batteries. If the size of the conveyance system components such as cleats and servomotors are enlarged the types of articles of manufacture produced with the control system and software of the present invention may be applicable to processing larger articles such as canned soup paint motor oil household cleaners cooking oils canned fruits and vegetables all of which can be quickly and efficiently injected into cans bottles or other containers with dispenser process modules and yet require only minimal changes to the configuration data. In addition articles such as medium and large caliber ammunition could also be accommodated by increasing the size and power of the conveyance components. These and other types of applications may employ the control system and software of the present invention without requiring time consuming changes to the system logic and processing operations. Only changes within the configuration data and processing recipes would be necessary which may vary depending on the application.

The control system and method of the present invention may also be employed in other conveyance systems including intelligent roller conveyer and automatic guided vehicles AGVs . Such conveyance systems generally have the capability to flexibly buffer input and output production pieces move material on command and accurately position the production pieces for processing. With a roller conveyer buffering spur lines could be implemented along with position sensors. For automatic guided vehicles input and output buffers could be provided with stands at staging areas. Positioning could be included with the same positioning sensors that a roller conveyor or continuous feed indexer can interface with. These additional types of conveyance systems open up processing to various sorts of manufacturing processes that may benefit from the present invention.

Processes that require no production line conveyance system such as batch processing could also be controlled by the control system and software of the present invention. For example the dispensing of liquids and dry additives could be controlled by the control system in response to process monitoring sensor values. Processing devices such as mixer motors could be started and stopped through the use of timers temperature gauges or collodial sensors. Control of such processes can be implemented with the control system and process of the present invention with minimum modification to the configuration data and process recipes. Further control of steel production which generally requires no buffering of product pieces may also employ the control system and method of the present invention. Modeling software which normally determines process variables such as mill roller pressure in this type of production may be employed. An interface between the coordinator agent software and the modeling software may be easily accommodated and in this way recipe data may be dynamically updated for each piece of steel processed via mill rollers. Updated recipe data may be communicated from the control coordinator agent through the process station agent to the process module agent. Accordingly the control system and software is flexible enough so as to accommodate various different architectures for controlling various production processes. A substantial amount of the software with the exception of the lower level interfaces generally will not change from one application to another. Instead all that is generally needed is a robust conveyance system a change of configuration data and minimal creativity to enable the manufacture of various types of products.

The control network provides a highly modular architecture in which the control system is computer platform independent the computer processors can execute different operating system software and communications are high speed accurate and manageable. The process controllers are capable of being swapped rapidly such as to become fully operational in a very small amount of time such as between five and fifteen minutes for example. Aspects of intelligent manufacturing are achievable with the control system due to the dynamic flexible nature of the logical software components. Flexible distributed computing quick swapping of process modules dynamic configuration changes and streamline communication between modules is achieved via the control software. In addition to the software agents assigned to the control coordinator process stations continuous feed indexers continuous motion conveyor and process modules the software further includes a human machine interface agent safety monitor agents and message handler agents. Additional software routines bind the hardware represented agents together.

Referring to one embodiment of an agent based control architecture processed on an operating system is shown in which an agent software is associated with software that includes models and also referred to as encapsulations. Each agent represents a structural hardware architecture and has the ability to communicate with servomotors servo encapsulation inputs outputs I O encapsulation Distributed Data Services DDS model and dynamic configuration data configuration model . In some circumstances the agent may not have to communicate with a servomotor or I O model. If the agent functionality does not require communication with other models the subordinate model software does not perform a functional operation and is deemed a null model i.e. performs no specific operation . The architecture may remain the same for every agent regardless of the functions performed by each agent. The models preferably remain flexible so that the agent software can interact with any of a variety of servomotors I Os data access methods and configurations.

The software agents communicate with each other through the agent protocol as described herein. In one embodiment a protocol is configured as a series of previously configured messages that are transmitted and received between two software agents. The communication messages are formatted differently for two communicating software agents depending on the agents that are attempting to communicate. For example the control coordinator agent may be configured with one set of formatted messages that are shared with the continuous motion conveyor agent and a different set of previously configured messages that are used to communicate with the process station agents. The protocol also includes an expected interaction of messages between the two communicators agents . For example if the coordinator agent communicates a make ready message to a process station agent the control coordinator would be expecting a controller ready message back from the process station. This message interaction informs the control coordinator that the process station agent not only received the make ready message but that the process station agent has performed the normal processing successfully and is ready to continue. In addition the protocol may include the amount of time the process station is allowed to respond before the control coordinator resends the same message and may also specify the number of message retries that are allowed by the communication initiator. After all retries have been exhausted and no reply has been received the communication is deemed to have failed.

The control coordinator is responsible for controlling and coordinating the different pieces of the system. The coordinator agent is responsible for configuring initializing and controlling the software agents that represent the hardware components. The coordinator also provides a data bridge to the user interface performs all product routing tracking and safety monitoring and aligns the conveyance system components on the production line. During system startup the coordinator requests its own configuration from the configuration data store. Once its own configuration has been received the coordinator knows what other agents it needs to communicate with and where those other agents are located within the distributed control system.

The coordinator startup message sequence is shown in according to one embodiment. The coordinator startup initialization process starts when the coordinator agent requests its own configuration data from the configuration data store CS . Next the coordinator agent instructs each of the continuous motion conveyor agent continuous feed indexer agent and process station agents to initialize. The process station agents further instruct the associated process module agents to initialize and await a module initialized message. Once each agent is initialized the initialized process module agents process station agents continuous feed indexer agents and CMC agent return a controller initialized message to the coordinator agent indicating that the initialization thereof is complete. The coordinator agent thereafter transmits a configure message to each of the initialized agents instructing the agents to configure themselves preferably by querying the configuration database for configuration data. Once the configuration is complete each configured agent returns a controller configured message to the coordinator agent indicating that the configuration of that agent is complete.

Following the configuration sequence the coordinator agent resets each of the other agents and following the reset each reset agent returns a controller reset message to the coordinator agent. The coordinator continues its initialization by instructing each of the other agents to make ready. In response the process module agents return a module ready message to the associated process station agent. The process station agents CFI agents and CMC agent in turn return controller ready messages to the coordinator agent. Additionally the process station controllers and a station ready message to the CFI agent. The coordinator agent then sends a home message to each of the CMC agent CFI agents and process station agents. The process station agent in turn transmits a home message to the associated process module agents and receives a module home message when the process module is in the home position. The process station agents transmit a station ready message back to the CFI agent. Each of the process station agents CFI agents and CMC agent transmits a controller home message to the coordinator agent.

The coordinator agent initiates the alignment of the processing system by transmitting an align message to the CMC agent and CFI agents. The CFI agents in turn transmits a dancer ready message to the CMC agent to indicate that the dancer is in the ready position. The CMC agent further sends a seek message to the CFI agents to request the index tracking. In response to the seek message the CFI agents send an indexer tracking message back the CMC agent. The CMC agent and CFI agents further communicate home dancer and dancer at home message until the dancer is in the home position and thereafter the CMC agent transmits an alignment completed message to the coordinator agent. Once the alignment is complete the coordinator agent transmits a start message to the CMC agent CFI agents and process station agents. The process station agents in turn provide a start message to each of the associated process module agents which in turn return a module clear message. Thereafter the process station agents send a station clear message to the CFI agent to complete the coordinator startup sequence.

The sequence of messages communicated with the coordinator agent during production is shown in according to one embodiment. Each process station agent reports updates to the coordinator agent regarding the production pieces controlled by that process station agent. The coordinator agent passes the reported updates to the product history store which tracks the location and status of each commanded piece. When the process station agents have all reported to the coordinator agent and the pending updates have been passed on to the product history store the continuous feed indexer agents are commanded to actuate the production line hardware and to index the product pieces to the next process modules. The next process is then executed and the sequence repeats.

During production the process station agents handle two stages of processing including sending the handle article notice and actuate messages. The handle article notice message which is also shown in is sent from the coordinator agent to the process station agents and contains data that 1 identifies the product piece 2 assigns a sequence number to the product piece 3 identifies the process module controller that will perform processing and 4 defines the recipe action that is to take place during processing. The data contained in the handle article notice message is stored internally within the process station agents and provides the logical handshake between the product pieces the process modules that perform the production operations on the pieces and the product history data store that stores the processed information in addition to instructing the process modules as to how much processing must be performed. The actuate message is sent from the continuous feed indexer agents to the process station agents. The process station agents determine which of its associated process modules has product pieces positioned for processing. Using the configuration information the process station agents calculate the cleat number position at each associated process module. Each process station agent compares the cleat numbers to the sequence numbers that were contained in the handle article notice messages. The process station agent actuates all process modules that match a cleat number to a sequence number. After actuation the process station agent receives module report messages from each of its process modules and translates each module report into a work report and sends a handle work report message to the coordinator agent. This enables the coordinator agent to track the location and processing status for each production piece. Once all of the actuated process module agents have sent a module clear message indicating that the corresponding process module is clear to the process station agent the process station agent transmits a station ready message to its associated continuous feed index agent so that the continuous feed indexer may index to the next position only when all process modules are clear.

Whenever a failure occurs at the process module level the associated process module agent sends a handle failure message to the process station agent which passes a message to the coordinator agent for processing and or coordination. When the failure occurs at the process station agent level the process station agent can sometimes detect its own failure and can simply generate its own handle failure message and communicate the message to the coordinator agent. A handle failure control routine is illustrated in in which the control coordinator agent monitors for failure conditions and determines one or more certain actions in response to a failure condition in order to most efficiently maintain processing of products. The control routine begins with step A of continuously monitoring the various controllers for failure conditions. In decision step B the various controllers check for whether a failure condition has been received and if not continues to monitor for failure conditions in step A. If a failure condition is detected failure control routine proceeds to step C to generate a handle failure message. The handle failure message preferably identifies the failed device and the type of failure. In step D the handle failure message is sent to the control coordinator agent which in turn determines one or more actions to initiate in response to the handle failure message in step E. The control coordinator agent in decision step F checks for whether the action is a warning action and if so outputs a warning message to the operator in step G. Next in decision step H failure control routine checks for whether the action is a recovery action and if so enters a failure recovery mode in step I. In the failure recovery mode the coordinator agent attempts to recover from the failure such as by resending a command message or configuration data to the controller from which the handle failure message was generated. In decision block J the coordinator controller agent checks for whether the action is a re route action and if so re routes the production process so that all subsequent processing is routed so as to not include the failed processing device. Re routing of production process may result in reduced processing capability however it allows the manufacturing system to continue to operate and upon repair or replacement of the failed device full manufacturing capabilities may be returned with minimal loss of production. In decision step L the coordinator controller agent checks for whether the action is a shutdown action and if so shuts down the manufacturing system in step M. A system shutdown may include a safety shutdown an immediate stop a cycle stop or a limit stop depending on the type of failure. Thereafter the handle failure control routine is complete and if production remains operating the failure control routine returns back to the monitoring step A.

The sequence of messages communicated during a handle safety shutdown routine is further illustrated in . A safety monitor agent detects fault violations such as the triggering of a safety guard circuit while the CFI agent and CMC agent detect equipment jams. Upon detecting a fault the safety monitor agent sends a handle safety shutdown message to the coordinator agent and in response the coordinator agent notifies each of the process station agents and CFI agents to perform safety shutdowns.

In the case of any controller within the control system any agent can raise a handle failure notice such as is shown in . According to the example shown the coordinator agent issues cycle stop messages to each of the CFI and process station agents to shut down the system in response to a handle failure message received from the process station . Alternately the control coordinator may determine another course of action such as to reroute product pieces.

The process module agents are generally designed using software components. The software components are used in many possible configurations to comprise a single agent. A process module agent utilizes a generic template or shell to encapsulate the production hardware that the agent controls. The shell allows the process module agents to perform task synchronization configuration status reporting error reporting event handling communications with sensors and controls and servo management e.g. movement initialization and configuration . Through the shell the process modules control manufacturing devices in a consistent way so that the devices look act and feel as one generic device to the control software. The process module software design is consistent so that future software implementation and maintenance requires minimal cost and reconfiguration.

The safety monitor agent is responsible for monitoring the state of the safety system circuitry. Safety monitor agents detect emergency stop guard open and other potentially hazardous events and relays these events to the coordinator agent which in turn broadcasts the information to all registered controlling agents in the system via handle safety shutdown messages that forces a systematic shutdown of the control system. One safety monitor agent exists per computing processor in the distributed control architecture. Each safety monitor agent is configured with common as well as locally specific safety circuitry.

The human machine interface HMI is responsible for allowing the operator to control the control system and provides the operator with the ability to start stop configure and obtain the status of the system. Diagnostics are enabled through the operator s ability to monitor and force values through the input output points in the control system. The HMI also allows an operator to jog the production line equipment such as to change processing operations perform experimental operations change processing speeds etc.

The control software executes within embedded processors and monitors and controls the hardware. User interaction in the form of operator control configuration updates data retrieval and diagnostics with the embedded software occurs through either ethernet connections serial port connections or direct hardwired inputs outputs. User functionality is generally uniform regardless of the physical connections. The human to machine interface via software is independent of the underlying physical connection. The hardware and software components that are outside the embedded portion of the system are used for user interaction or clients. 

The HMI agent software is preferably secure in terms of operational safety and system security. Unauthorized use of the system is preferably blocked via use of one or more different security methodologies which are commercially available and known to those skilled in the art. Passwords and magnetic striped security badges are examples of some of the methods that may be utilized in the control system to maintain access security control.

Interactive control of the control system is preferably limited to one operational user at a time. While an unlimited number of users can have read only permission to view the status of the control system only one operator at a time has read write permission to change control values within the control system. The control system HMI allows delegation of read write data access to another device e.g. a wireless terminal but this transfer of control only occurs through a master panel by an operator that has appropriate system access privileges. Other types of user interaction devices are allowed to interact with the system with read only permission such as data acquisition devices including data mass storage units computer disks modems and ethernet communication boards.

The HMI agent also provides safety protection to the hardware portion of the system. Any operator initiated action that could potentially damage the system equipment will preferably cause an operator warning. The operator then has the option to continue or stop initiation of the system control action. Graphical interfacing to hyper text markup language HTML and Java based applications interact with the HMI agent software. Thus viewing the status of the production process interactively from a remote area is possible. It should be appreciated that HTML and Java programming languages are commonly used for Internet interfaces and should be readily understood to those skilled in the art. Additionally the control system includes a message handler agent which handles various messages generated by other software agents. Such messages are typically debug messages exception messages and failure messages. These messages are character strings that software agents send to a device such as a computer monitor a printer a computer disk an e mail file a pager or an Internet connection as well as other electronic devices.

The control system is composed of various physical parts that interact with each other fluently to allow the system to be homogenous distributed and highly communicative. An inherent interdependency exists among the subsystems. Certain subsystems must complete their functions before other processes can start their own processing. Each of the interdependent subsystems provides a service to the control system. The subsystems interact with each other through a client server relationship as described herein. The client which can be a computer a subsystem a block of programming logic or a software object is the requestor of data or a processing service. The server which likewise can be a computer a subsystem a block of programming logic or a software object is the provider of data or processing services that the client is requesting. For example a process station might request delivery of a new process piece by a continuous feed indexer. In this example the process station is the client requesting a service from the server CFI that is satisfying the request. The requests from a client to a server are handled through messages. When a message is sent from a client to a server in the form of a request a message is typically sent back to the client in an expected format.

As shown in the client and server may commonly reside in the same computing machine in which a local client server communication exists. For local communications the client A sends a request message to the server and in turn the server responds back to the client A with a response message. Likewise a second client B communicates with the local server in the same manner.

The client server relationship may also exist in a remote scenario on separate computing machines A and B as shown in . The remote scenario occurs when the client and server reside in separate computing machines and the messages must be serialized through a network proxy to a network adapter to be processed by the server. A network listener may manage connections between the network proxies and network adapters. The proxy provides the underlying functionality for a client to send a message to a remote server via an adapter . The proxy is the interface that encapsulates all of the client side network communications between client and server . This allows the client to transmit a message to a server in the same fashion independent of whether the server is on the same machine or on another machine. On every machine there preferably exists a proxy for each remote server to handle the messages received by that server. The interface that the proxy exposes to a client is identical to the interface exposed by the server.

A proxy contains one or more bidirectional object streams for communicating request message objects to the server and return response message objects back to the client. A message object can be thought of as a group of messages. An object stream provides a stream of data that may be fairly simple such as a socket stream which writes to a network socket or more complicated such as a stream handler which buffers messages in an internal queue.

Referring to an example proxy layout is illustrated therein according to one embodiment. As shown request data is sent out from client via proxy on one object stream A and its return values are received via the same object stream A. Similarly requests B and C are sent out on another object stream B and their return values are received through the same object stream B. Request D uses a third object stream C. Since the request does not have an expected return value the client will return immediately once request D has been queued.

The adapter is the counterpart of the proxy and provides the underlying functionality for a server to process a request message from a client . There are at least one or more proxies talking to an adapter while each proxy preferably talks to only one adapter at a time. The adapter is the interface between the request message object that a client proxy sends over the object stream to the server . The adapter retrieves the message objects from the object stream decodes the objects and ensures that the appropriate message is received at the server . If the request message has an expected return value then the value is encoded into the response message object and sent back over the stream to the originating client . If the server generates an error message the adapter catches the message and transmits the error message to the proxy for proper handling by the client . Accordingly there are three adapter tasks A C one to service each of the two object streams and one to process the corresponding messages.

Where a server has only one proxy connected to its adapter the proxy and the adapter may be connected directly. However when multiple proxies are connected to a single service an intermediary component referred to as a listener may be employed to accept all proxy connection requests for that server and create new adapters to respond to the proxies to allow for a dynamic number of proxies and adapters within the control system. The listener provides the functionality of multiple remote proxies to connect to a single server and waits for connections at the server network address. When a remote proxy connects to the listener the listener creates a new server adapter that the proxy will use to communicate with the server.

Referring to various interactions between a listener proxies and adapters are illustrated for establishing a communication connection. The listener is created and assigned to a server in the first interaction A . In the second interaction B proxy connects to the listener . In the third interaction C the listener creates a new adapter object. The adapter is then assigned to the same server that it associated with the listener in the fourth interaction D . Finally in the fifth interaction E the adapter takes over the connection with the proxy .

The control system includes a distributed data service DDS model which serves as a standard interface to data storage and acquisition within the control system. The DDS enables access to information without interference to the operation of the application that generates the information. If data is being accessed remotely either for a user interface or for diagnostic purposes the control system does not have to wait for permission to update the data. Instead synchronization between the control and informational data priorities is taken into account especially in the area of user data locks. In addition the DDS model allows updates to information that are transparent to users.

Data updates occur automatically through an association between the information source and the information presentation interface so that a user need not ensure that the remote access data is updated for each use. The DDS model further allows for the storage of information on volatile and non volatile media using the same interface. The interface to the information storage media is generally independent of the choice of media thus permitting access to the state of sensors when a power loss occurs. Types of storage media may include but are not limited to disk drives battery backed SRAM flash RAM and conventional RAM. The DDS further enables local and remote access to information through a text based name so that a user has the capability to access information by use of the name.

Application developers may be permitted to manipulate information remotely to provide simulated sensor responses such as providing simulated sensor inputs for forcing state behavior for a machine either during the development and testing of a new machine or application or to diagnose problems on the manufacturing floor. Throughout development testing and implementation the control system software application does not change. Generally speaking application developers may not always have all the pieces of hardware that go into a system at their disposal but they must continue to be productive in developing the application. Referring to it can be seen that regardless if data is being generated by a test switchboard a collection of toggle switches and or pushbuttons an HMI a programmable logic controller PLC a process module device or a set of software black boxes the application is able to continue processing without change to the DDS interface software.

Finally the DDS provides logging capabilities for real time information with respect to time. Since information may not by physically accessible in real time at all times methods of logging the information may be provided so that the sensor profiles are obtained. This is useful for mapping information from encoders to describe a move profile for a servomotor for example. Optimization algorithms for process control and closed loop process setpoint adjustments may be communicated through the DDS model or with a designated agent.

The control system application software programs respond to asynchronous events from a variety of internal and external sources. An event is defined as a change in state digital or value analog . The events that the control system responds to include device timer and software interrupts digital input transitions i.e. ON to OFF or OFF to ON analog value changes and operator input. The control system employs a single model for event handling to simplify the understanding and maintenance of the control system application. The event model employed by the control system accommodates both primitive device level events and high level synthetic events uniformly. As such the event model encapsulates details of handling device level events. Encapsulation is achieved by adopting an object oriented model for event handling in which events are messages and other objects are notified of their occurrence by method calls messages . One embodiment of an event handling model that is used for the control system application is known as the delegation model which is a uniform object oriented model that is relatively simple as compared to other real time event handling schemes currently in use with conventional control methodologies.

In the delegation model the following two kinds of objects are involved in event handling event sources and event listeners. An event source gives rise to events. Some examples of event sources include devices that generate interrupts interval timers sensors and user inputs from a graphical user interface GUI . An event listener is an object that is interested in the events generated by a particular event source. An event listener indicates its interest in an event source by registering or subscribing with the source dynamically. An event source can have multiple listeners and an event listener can register with multiple event sources. The delegation model requires that all listeners for a particular type of event implement a corresponding interface set of methods which is referred to herein as the notification interface for the event type. When an event occurs the event source notifies each of its listeners by calling the appropriate method from the notification interface for the event passing the event object as an argument. The delegation model is a variant of the observer design pattern.

A notification method of an event listener should execute at most a few instructions e.g. set a variable or signal a condition before returning and it should not block. If further actions are required a notification method can signal a task that will carry out the actions on behalf of the listener. If an event listener does not need to respond to some types of events generated by an event source the event listener can provide an empty no op implementation for the corresponding notification methods. A listener can deregister itself when it no longer needs event notifications.

An event source may have listeners of different types and a listener may register with event sources of different types. The delegation model may not be appropriate when the class of an event recipient is exactly known when the event source is designed. A notification interface is normally just a part of a listener s class interface and it may consist of a single method. Multiple inheritance may be used to mix in a notification interface with one or more other interfaces which need not be related to event handling. A single event class can actually represent multiple event types each with its own notification interface. For example a Java class called MouseEvent represents both mouse button events and mouse movement events which have separate notification interfaces named MouseListener and MouseMotionListener respectively. This is exceptional however there is normally one notification interface with one or more methods per event class.

The control system further employs a messaging model that allows the messaging agent software to communicate information about the activities of the control system. Messaging services provide information regarding the status of the system and allow the different components of the system to know how their interdependent component counterparts are doing. The messaging model is illustrated in having a message router publishers and subscribers and . The message router has access to and receives data from one or more publishers . The message router routes only the subscribed information to user interface subscriber and e mailer subscriber . Control system components selectively listen to the status of other components within the system. The selective listening is achieved through this methodology that is known as a publisher subscriber relationship. The publishers or information originators make their information globally available to whoever wishes to read the data. The readers of the information or subscribers and want to know about only some of the information that is globally available. The messaging model subscriber plugs into only the data that are of interest to the subscriber.

There are many implementations within the control system framework where the messaging model is utilized. For a User Interface like the HMI subscription to information like alarms and warnings is mandatory. Preferably users must know the status of the system. Real time data such as process module pressure temperature and fluid levels can be communicated through the DDS model or the messaging model. Data logging is another example of a messaging model implementation. Trending and other data analysis functions demand that data is available for them to operate. Debugging facilities both local and remote generally cannot occur without the messaging model. Also messaging services can be used to interface to external information display systems. The use of marquee display panels is common in manufacturing facilities to globally inform employees of the status of the production line addresses safety issues and aids in performing equipment maintenance. The messaging model also makes its information available to interface to e mail pagers cell phones and other human readable message devices.

The messaging model performs message logging and is software logic that allows the control system software to transmit human readable messages. The messages are text based and are transmitted as character streams. Messages are sent to only those subscribers that have expressed an interest in the messages from a particular message publisher. The message logger then records messages for later reference. This is important for a subscriber that may have been busy executing a high priority piece of logic when the message was originally transmitted or blocked by some other software agent activity. Because the message logger has recorded the message the tardy target subscriber can acquire the message at its leisure catch up with its required reading and process the message.

Message routing occurs by assigning a subject to a message when the publisher transmits the message so that each message has an assigned subject. The assigned subjects within the system are finite and are preferably known throughout the entire control system. If a software agent wants to know about alarms the agent will subscribe to a subject named alarms or something similar to that subject.

The control system has a software platform which is an environment containing a specific combination of computer hardware and operating system software within which an application performs its processing. Manufacturers of computer hardware attempt to supply processors that adhere to industry standards but commonly add features that distinguish their equipment from competing hardware. Likewise developers of operating system software attempt to follow stringent standards to keep their systems open to other computing devices through standardized software interfaces. However software developers also typically provide extended functionality. The control system of the present invention is platform independent so as to avoid a complex undertaking to program an interface to every possible hardware and operating system function that exists.

The solution that was devised to allow the control system to achieve a platform independence involved a definition of functionality that could be encapsulated for use on all computers regardless of operating system or processor hardware. While platform abstraction is a more complex design task than addressing individual interfaces implementation maintenance and reuse of the software interfacing are simplified once the design process has been completed. According to one embodiment the Portable Operating System Interface POSIX standard is used as the design and implementation standard for the platform independence model. The core elements of the POSIX standard for hardware and software hold the desired functionality for much of the computing equipment that is currently available. The platform independence model addresses and provides the functionality that is found to be common to the widest possible array of computing platforms.

There may be functional areas within the platform architecture that are different. In particular operating systems use different methods for tasking. This means that programs are executed in different ways. One type of operating system may perform multitasking between many programs by giving each program an equal amount of processing time on its central processing unit CPU . Another operating system may weigh time slices between programs based on some prioritization method. Still another may process program logic threads or logic flows on a first in first out FIFO basis. Also tasking priorities can be different on different operating systems. A task that runs at a priority of 1 could be running the highest possible priority on one operating system while on another operating system it would be running at the lowest possible priority.

Data representation can have disparate formats on different platforms. Thus the data representation that is found on one platform could be the reverse representation on another. POSIX does not encompass all differences between different operating systems. Analysis has shown that platform specific software is limited to a few areas i.e. tasking I O and servo control . Where there are disparities lower level custom software can be programmed and be made available to the rest of the system framework. New platforms can be added through modification of only the platform specific software. This leaves the majority of the control system intact and standardized for use on any platform. Some examples of commercially available platforms that may be used by the control system include Windows NT on Intel x86 VxWorks on PowerPC and VxWorks on Intel x86. Examples of commercially available operating systems that may be included within the control system framework are Windows 95 98 Windows 2000 Windows CE Linux IRIX HP UX UNIX QNX and Open VMS. Examples of commercially available computer hardware candidates that may be used with the control system include DEC Alpha family of computers SUN Motorola 68xxx and 68xx Motorola Digital DNA Net Silicon NetArm and Lucent Technologies Coldfire.

Also included is an input output I O model that abstracts the design of common I O types and devices. The I O model makes all input output devices look the same to the control system. The I O model removes dependencies that are created by specific hardware implementations and enables interaction between software agents based upon the intended roles of I O devices within the control application framework. One embodiment of the I O model is shown in . The I O model has encapsulation components including an I O Collection encapsulation and an I O Device encapsulation both coupled to a configuration store . In addition the I O model has an I O Point encapsulation . The I O Collection encapsulation represents all of the Inputs Outputs of a single CPU controller and exists for configuration and diagnostics. Upon system startup the I O Collection encapsulation creates an I O Device encapsulation object for every physical I O device within the system as specified by the configuration files within the configuration store . The I O Device encapsulation represents the specific implementation of a physical I O device such as a MATRIX DIO digital input output board. Upon its creation by an I O Collection encapsulation at system startup each I O Device encapsulation creates I O Point encapsulation objects to map its physical I O to a logical I O that has meaning in regards to the production line.

One example of I O Point mapping between physical devices and application layers is illustrated in . The I O Point provides the mechanism for tasks to access inputs outputs without knowledge of the underlying physical design. An I O Point may represent a sensor or a control and may represent analog or digital byte or bit values. The characteristics of an I O Point depend not only upon its device type for example MATRIX DIO but also upon the specific application of the device for example a Spin Disk process module . Based upon its physical device type and application use an I O Point s configuration and operation as a sensor or control is inherently defined at system configuration by the I O Device.

The processing system may require extensive use of servomotors to control conveyors and production line actuators. Since many types and models of servomotors are commercially available in the marketplace a common software interface to control servo motion was created. The common standardized interface provides flexibility to the control system requirements. The servo model design provides a set of hardware independent motion routines that satisfy the needs of the control system. During the design process it was recognized that different vendors have implemented specific features in their hardware that are not common to all hardware. The servo model addresses the specific features that are common to most servomotor hardware regardless of vendor. In particular the servo model contains functions to initialize the hardware make basic profile moves and monitor the state of the motor and controller. The servo model also provides mutual exclusion protection for public methods where necessary or in other words it safeguards operation of the servo equipment from software blocking when other logic has a higher execution priority.

The servo model preferably includes the basic motor control requirements that are commonly found on virtually all servo hardware some of which includes initialize controller software controller hardware and motor hardware set closed loop gain parameters and motion profile parameters move continuously at a controlled velocity with specific ramp up down acceleration move point to point using a trapezoidal motion profile move point to point using smoothing filters such as S curve and velocity feed forward perform ratio coupling of two axes electronic gearing provide encoder position information provide motion status information such as move has has not been completed provide controller status information for hardware failure detection and initiate motion based upon a specific event and start or modify a move based on an external event. Not all of the above identified basic motor control requirements are needed for every type of servomotor that is incorporated into the control system. The servo model can process any mix of these motor control requirements. It should be appreciated that Implementations of the servo model may be used for other powered equipment such as electronic drives and motors.

Referring to an example of a sequence of communications for achieving servo motion with the servo model is illustrated. The servo motion sequence includes the client sending a create motion message to the servo motion factory. The servo motion factory generates a servo motion message which is assigned to a servo to register the requested motion and axis of movement. The client sends a move message to the servo motion that in turn executes movement of the servomotor. Following completion of the motion the servo deregisters the executed servo messages and waits for the next message. The first four messages CreateMotion ServoMotion AssignToServo and RegisterMotion occur at system startup or system boot time. The next four messages Move MoveTrapezoidalAbsolute and two WaitForMoveComplete messages occur when the servo is commanded to actually perform a movement. The last three messages DestroyMotion ServoMotion and DeregisterMotion take place at system shutdown time. Thus the movement messages are recurring during production and the startup and shutdown messages occur only once.

The event handling sequence for the servo model is further illustrated in . The first five messages ServoMoveComplete ServoEventTask Run AddMoveCompleteHandler and AddHandler are generated at system startup or system boot time. The software object aServo ServoAxis creates a message for every possible servo movement axis. Another software object anEvent ServoMoveCompleteEvent receives the ServoMoveCompleteEvent messages. During startup it will locate a corresponding monitoring task for each ServoMoveCompleteEvent message and start the task. It locates the appropriate task via a ServoEventTask message to the anEvent ServoEventTask software object and starts the task with a Run message to the same object.

Client in this diagram indicates process module agent PMA software continuous motion conveyor agent CMCA software or continuous feed indexer agent CFIA software. Thus during the startup sequences the CMCA CFIA and all the PMAs will create event handlers for all the possible movement complete events that require monitoring.

The scanner performs polling of specified digital I O. When a movement complete event occurs the scanner transmits its HandleOffToOnEvent message to the AnEvent ServoEventTask object. At this point the set of production oriented messages is initiated i.e. from HandleOffToOnEvent to OnMovementCompleteEvent . The anEvent ServoEventTask object knows which task it needs to wake up because it has a comprehensive list of event handlers associated with the digital I O that indicate a movement complete event. So it initiates a WakeUp message that starts the correct event handler task waits for a response from the task NotifyHandlers and performs some internal processing if necessary with the OnNotifyHandlers method. If additional processing must be performed by software outside the confines of the servo encapsulation the software object aHandler ServoMoveCompleteEventHandler is triggered via the OnMoveCompleteEvent message and passes its own message to an appropriate software agent.

Platform independence is not just limited to computing hardware and operating systems. Referring to the control system also employs an implementation independent interface I that allows the control system to interface with web browsers diagnostic scripts and hand held portable computing devices such as palm processors wireless terminals laptop computers etc. Interfacing software to each of these remote devices is necessary to enable the control system framework to remain flexible so that various types of communication devices may interact with the control system. The implementation independent interface provides platform independence so that the control system may be implemented with different web browsers portable computing devices and new industrial processors with very little effort without requiring substantial configuration changes. The implementation independent interface supports text command protocol over Internet protocols on ethernet and may be implemented to be amenable to Java web based front ends. The implementation independent interface further allows testing through command scripts which is especially attractive to process simulation engineers and since the command protocol is text based viewer applications may execute on any platform.

The implementation independent interface provides a response for each command request from a client. This acts as a handshake for issuing subsequent commands. The client or requestor knows that the server I has received its request and has responded either successfully or unsuccessfully. The implementation independent interface provides a facility for client registration for asynchronous notification. Though the client originates most dialogs between client and server there are circumstances when the machine control server needs to notify the client of an event. Clients register with the implementation independent interface to be notified of certain events. The server registers the client and sends an unsolicited message whenever an asynchronous event occurs. This is especially useful to notify clients of error messages and alerts. Clients can cancel their registration with the server with a simple request.

The implementation independent interface command structure allows new commands to be added without loss of compatibility to the commands formerly in use which allows for the expansion of functionality to other web browsers and computing communication processors. The implementation independent interface allows the transmission of commands regardless of the transmission medium or host architecture. The interface permits clients to use serial lines hard wired I O and ethernet to communicate commands. Classes of software logic exist to cover the requirements of transmitting through most any communications medium regardless of protocol e.g. RS 232C RS 422 RS485 RS 449 TCP IP ATM etc. 

Clients that are operating with different hardware than the server or executing tasks written in a different programming language are given a viable interface through the implementation independent interface. If C ObjectStreams are used to pass objects between clients and servers a client is restricted to either passing only C objects or to pass a generic message object that is encapsulated within a C wrapper. The implementation independent interface permits the use of the command interface with languages such as Java C C as well as hyper text markup language HTML and web browser scripts. Version information that clearly identifies the protocol and the set of commands that the interface understands is available to clients and is returned by the interface. Clients are made aware of what set of commands and what protocols are currently implemented within the control system which becomes especially important when additions are made to the command structure.

The implementation independent interface command structure also enables configuration operation and monitoring of the computing processors by users. The machine control software executes on one or more processors and controls and monitors I Os throughout the control system. The operators who start stop and monitor the machines and the engineers who tune machine operations are able to access the machine control software through the implementation independent interface. In addition the implementation independent interface allows clients to be disconnected from the interface at any time. When wireless hand held devices are to be used as a user interface disconnection can occur often. The underlying communication connections between the clients and the interface are not persistent. The implementation independent interface does not require a dedicated connection for asynchronous notifications or for debugging clients like some conventional systems require. The interface releases the communication resources when it determines that the connection is broken thereby enabling clients to be truly portable i.e. mobile .

Further the implementation independent interface provides a method to monitor client commands and server responses which is useful as a debugging tool as well as a monitoring tool. System troubleshooters can see what was sent as a request and what was returned as a response. Also it can be determined when messages were sent and what control system framework components sent the messages. The client registers with the interface to receive all commands and their responses. The client may then process the data and or display the data.

As shown in the implementation independent interface provides a server client relationship in which the physical connections that access the control software can vary from ethernet connection to a hardwired input or output and can be extended to wireless clients. The software and hardware components that make up the physical connections in to interact with the embedded control software are referred to as clients. The user interface portion made up of hardware panel client A TCP client B web client C and debug client D of the implementation independent interface presents an ASCII command interface. Clients send commands through a command execution interface to the implementation independent interface. The commands are then processed by the user interface package and the control software. The control software generates responses and routes the responses through the implementation independent interface back to the appropriate clients. The client then interpret the responses and make the responses available to the user.

To further illustrate a TCP client B could represent a Telnet session with the user interface package through the Ethernet. The web interface if present is provided through a web server. The web server acts as a broker between the web browser s and the user interface package. The web server as a client is represented in the user interface package as a web client. The underlying physical connection for these clients and the transmission of requests from and replies to the clients are encapsulated in a UIClientInfo software class in the user interface package. All of these clients use the same ASCII commands protocol to access the control software. This ensures that the server task in the user interface package that executes the commands is the same for all clients. The command execution interface in turn treats all these clients the same way. New clients implement new physical connections. Client functionality is captured in a UIClientInfo base class in the user interface package.

Commands are text strings with parameters represented as lists of text strings. New commands may be added by extending a UICommand base class. Further these commands may be intercepted and interpreted by the clients to implement built in commands which may be useful in building tests.

The control system configures a number of data stores for storing data in memory preferably non volatile memory such as flash memory battery back non volatile random access memory NVRAM a computer disk file etc. The control system is able to store and access the data internally or remotely. The control system software architecture uniquely configures each logical software entity or agent for configuration storage. The configurations may be retrieved from memory. In addition each production piece has a process map or product itinerary recipe associated with it which is stored in a product itinerary storage. The product itinerary details each process module location that the product piece must visit to undergo each processing step. In the event that a process module encounters a failure the product itinerary is modified dynamically so that product rerouting can occur without shutting down the production line.

A product history storage is also provided in which all entries are time stamped. Data for each individual product piece that is manufactured through each of the process steps is accumulated and all entries are time stamped. Data that reflects failures of any kind are stored in a failure data store. Hardware failures software exceptions debug messages or information logs are found in the failure data store repository. Access to this data facilitates the generation of management reports fault analysis reports preventive maintenance schedules and other reporting functions. A message log storage is used to capture all messages that flow through the control system. Whenever a message is transmitted from one software agent to another software agent the message is logged within the message log store which may be employed for purposes of debugging and reconstructing production operations. Finally a distributed data system DDS log storage contains a history of all data transactions that occurred within the control system.

The control system may further include electronic production scheduling that allows for automation of the processing system by translating customer orders for goods into manufacturing outputs. Electronic production scheduling is achieved by providing functional links to a corporate network to receive the customer order request. The steps that are generally involved in receiving a customer order through providing a customer shipment are shown in routine in . In step A a customer order is documented. The order is given a processing priority in step B and the manufacturing resources are scheduled to satisfy the order in step C. In step D coordination as to which orders are to be produced and in what sequence is determined. Next in step E raw materials are delivered and input to the production line for processing. The machinery is setup to produce the customer goods in step F and the goods are manufactured in step G. The manufactured goods are then output from the production line in step H and the produced pieces are shipped to the customer in step I.

Manufacturing corporations often have administrative computer systems that record customer sales orders often referred to as an order entry system. Order entry satisfies the first two steps A and B. The control system performs the input of raw materials to the production line for processing sets up the machinery to produce the customer goods manufactures the goods and outputs the goods from the production line as set forth in steps E H. Electronic production scheduling with the possible exception of scheduling raw materials and shipping the goods to the customer performs the processing steps in an automated manner. With electronic production scheduling customer orders are used as input data to determine what needs to be manufactured. The electronic scheduler translates the customer needs into production needs then coordinates the resources needed to produce the goods in a timely fashion. Through software logic the electronic scheduler undergoes a number of decisions as shown in the routine in . The electronic scheduler determines what products need to be produced in step A and determines how many product pieces must be produced in step B. In step C the scheduler determines within what time frame the products have to be made. In step D the scheduler determines how much and what type of raw material is needed to produce the goods. In step E the scheduler determines what production operations need to be conducted. In steps F and G the scheduler then configures the system to perform the necessary processing to produce the scheduled product and initiates the processing.

The electronic scheduler extracts product quantity priority and time to complete from the order entry system. These three elements of data make up an in order entry. An Enterprise Resource Planning ERP system may be utilized to determine the amount and types of raw material that need to be processed to create the quantities needed by the customer. Coordination takes place between the ERP and the Scheduler that puts the raw materials at the production line at the correct time and in the correct quantity. The scheduler then generates a production recipe. The recipe is downloaded to the control system as a dynamic configuration file. The downloaded configuration is then implemented into the normal production process by activating or deactivating process modules on the production line.

The incorporation of trending software into the Human Machine Interface HMI is provided to manage the manufacturing operations. Historical data stores are queried for specified process variables for specified ranges of time. Resultant trend charts are available for operator views on computer monitors data storage or prints to hardcopy. The types of trend charts available include Pareto charts pie charts scatter diagrams regression analysis bar graphs line diagrams and three dimensional graphs among other generic or specialty trend charts.

Virtual simulation testing software may be employed to simulate all of the production hardware without actually interfacing to the physical devices. Conveyance system components such as the Continuous Motion Conveyor CMC the Continuous Feed Indexer CFI and servomotors are replicated as virtual components in the virtual simulation software. Virtual pushbuttons switches and sensors are simulated as emergency safety equipment positioning I O and feedback mechanisms. Process modules are imitated as logical black boxes that emit the same behavioral properties as their physical counterparts. This testing software is a highly flexible and dynamic suite of virtual simulation objects that allows process engineers to configure a virtual production line to perform process experimentation analyze process behavior and determine optimal process configurations.

One embodiment of the virtual simulation testing software routine is illustrated in . Routine includes step A of designing a process module PM which is preferably performed by an engineer. The engineer models the process module in three dimensional 3D modeling software in step B. In step C the engineer creates control sequences which are preferably entered in software. Next in step D the virtual simulation is run with the 3D modeling software according to the control sequence. In step E the results are evaluated. Proceeding to decision step F routine determines if the results are acceptable and if so routine saves the control sequence in step G and then routine ends in step H. However if the results are not acceptable routine returns to step C where the engineer can create a new control sequence. Accordingly routine may be employed to optimize the process control sequence via virtual simulation.

The virtual simulation software is advantageous to manufacturing organizations because of its leveraged cost savings. By employing virtual simulation software less time is actually spent on the production line setting up and tearing down experimental hardware configurations. With the virtual simulation software one process engineer can set up a virtual production line test a particular configuration or recipe and reconfigure the line in a short period of time.

Remote debugging facilities employing Application Programming Interfaces APIs may be provided to pinpoint any unforeseeable difficulties with process hardware and software. There are several control system framework components that encompass properties that support different aspects of remote debugging. For example the messaging model and the implementation independent interface both have features that provide message data logging. When these features are organized and coupled with other control system components i.e. the DDS model and integrated with enhanced utilities that were developed during testing a satisfactory remote debug tool is available.

The control system may employ monitoring equipment to monitor up to one hundred percent of the production processes. Processes and controls may be provided to permit continuous monitoring of process input and output variables. Every product movement event process variable change production module operation operator action software state transition etc. can be detected and noted with a synchronized time stamp.

Failures of any redundant component such as a process module are automatically recovered from where feasible by placing the failed component in a safe state and continuing production at a reduced rate according to one embodiment. Redundant components are envisioned to be utilized in a hot backup mode. The primary and secondary processors preferably share a common memory i.e. a mirror image . When the primary processor fails the secondary processor will immediately take over command processing. Processing will be uninterrupted due to the mirrored data in memory.

Also automatic failure recovery may be achieved for some logic failures that can occur in the control system. Not all logical failures can be recovered but the control system may be able to recover from many faults that defeat most of the currently available machine control systems with more control system components capable of being monitored and as more debugging facilities are made available the control system has more ability to monitor itself determine its own deficiencies and fix itself on the fly.

The coordinator controller and process station controller are critical single points of failure in the system. Hence it is desirable to have both of these types of controllers backed up with redundant hot backup controllers. When one of the critical controllers succumbs to hardware failure the secondary controller automatically takes over processing for the primary controller. Configuration data message objects and other data that are used to process product will be shared within the memory of both controller processors. The control software design provides features and function stubs for easy introduction of redundant hardware in hot standby mode for as many components as possible.

Process control software may be employed to utilize the continuous monitoring of variables to dynamically adjust process inputs to keep process outputs centered in the specified range to achieve dynamic recipe downloading. The production line recipes are stored within configuration data stores. The coordinator agent may dynamically update the recipe portion of the configuration data as needed. When the coordinator agent is coupled with process variable feedback values the coordinator agent can interface with a statistical process control software package or modeling software to generate resultant return values that can be rewritten to the configuration data and made available to the process modules. Recipes are communicated to the process station agents by the coordinator agent in the handle notice message. Thus a closed loop process parameter adjustment is realized.

A web browser interface may be implemented for the various HMI functions. HMI functions may merge the data of several production lines and even several different plants into a comprehensive summary web page. Many commercially available HMI development suites are very expensive and result in closed proprietary systems. The tools for developing HTML CGI and Java based human machine interfaces enable system openness. HMI screens can be served to almost any hardware over any TCP IP network. This is desirable to anyone who wishes to check on the status of a production line from anywhere at any time. The merging of data from several different sources allows corporate staff to instantaneously perform comparative analysis of plant performance as production is actually occurring. The web page can be embedded within the control system so that no executable package is required. Additionally the web pages can be embedded within the control system such that no executable package is required.

A video recording mechanism may also be included to provide digitally recorded video with each frame time stamped using the same synchronized clock as is used to timestamp logged machine data. When viewed with the time stamped data the video may be useful for engineers attempting to remotely diagnose failures or defects. The recorded video is preferably transmitted over TCP IP networks to a remote programmer or engineer for debugging or evaluation purposes. Being able to remotely view the motions of a machine may greatly help a programmer who is in the process of modifying or qualifying software. Due to the high speed nature of the machinery a high frame rate is needed. Due to the fast motion of product on the production line a slow motion or freeze frame playback mode is preferably available.

The use of remote video offers cost saving benefits. For example an engineer at one location is able to view a problem on a production line at another location without leaving the confines of the engineering office. In doing so video cameras are positioned at key points on the production line. In addition voice activated microphones could be worn by production personnel to provide a running commentary to the engineer. The voice video and data can be communicated from the control system software through the implementation independent interface software to an internet connection. Accordingly the remotely located engineer can monitor the production line listen to the commentary and capture numerical data simultaneously. The numerical data can be viewed interactively and or logged for later analysis. Accordingly the production line does not have to be shut down for a long period of time to allow the engineer to travel to the production line. Instead the engineer is able to monitor the problem in real time and correct the problem in an expedient manner through remote communication.

Additionally machine vision may be used as a control interface to the control system and may employ the real time video recording. Machine vision employs a video image in order to automate quality assurance functions. For example product piece orientation can be verified by analyzing the image taken by a video camera. In addition part pieces can be identified by analyzing video imaging. For use in automated quality assurance video can be used with pattern recognition analysis software. In doing so a video image that represents an idea product piece is stored in the computer memory. The machine vision video camera is oriented on the production pieces that pass by a location on the production line. A video image is taken of each piece as it passes by the location on the production line and the image is compared with the ideal image pattern that represents the ideal product. The pattern analysis software can allow a predetermined amount of tolerance for specified portions of the video image that do not exactly match the ideal image. Thus a high speed analysis can be performed without human intervention and will allow an acceptable level of deviation in the product being produced. If the piece does not meet the quality control criteria dictated by the pattern image the programmable output module can be triggered to extract the rejected piece and label it for analysis. Optionally other pieces of equipment such as compressed air nozzles could be utilized to remove the rejected piece by knocking it off the production line in real time in a high speed fashion.

Machine vision may also be applied to determine product piece orientation. In doing so the video camera is placed in a strategic location to verify that the piece is correctly orientated at a process module. If the video image does not exactly match the properly oriented ideal image the control software possibly located at the process module controller can be informed of the shortcoming and reorient the product piece prior to processing. As such the machine vision may serve as a feedback control to realize a desired orientation.

For use in product piece identification the video camera is likewise oriented to capture a video image of the product piece. The pattern analysis software compares the image against known product image patterns and determines the product that is being produced by way of the comparison. The use of machine vision allows manufacturers to produce multiple products concurrently on the same production line. As each product piece is identified a pre configured recipe can be downloaded from a process module to coordinate the appropriate processing that needs to be performed on the identified product piece.

The control system enables interfacing to many networks. The communications model was abstracted to allow data object streaming between almost all computing processors. In addition the software logic can support interfaces to Universal Serial Bus USB Firewire or any IEEE 1394 standard compatible communications interface Broadband Asynchronous Digital Subscriber Lines DSL Asynchronous Transfer Method ATM and Others.

The processing system may further employ docking stations for process modules to improving hot swapping of production line components reducing production down time easing hardware maintenance and standardizing process module fixtures. The process module including the process module controller may be equipped with a single integrated mechanical and electrical interface with the branch chassis. This feature requires that a process module will interface to logical as well as hardware components during the docking operation. Identification of the replacement module triggers an interaction among the coordinator agent the process station agent and the process module agent. Initialization configuration make ready and start messages will be issued received and processed to get the replacement module back into a production mode with minimal or no human intervention. Product itineraries will be updated to include the replacement module within the production process.

Referring to a docking station routine is illustrated therein. Routine includes step A of introducing a new process module to the production line. In step B the new process module identify itself to the control software which may be located in the process station. In step C the process station agent notifies the coordinator about the new process module and in step D the coordinator informs the process station agent to configure.

Proceeding to decision step E routine determines if the configuration has been found and if not proceeds to issue an error to the coordinator in step F and then terminates the routine. If the configuration is found routine proceeds to step G to update the configurations for the process station agent and process module agent. In decision step H routine determines if the update is successful and if not issues an error to the coordinator in step I and terminates thereafter. If the update is successful routine proceeds to step J in which the coordinator updates the product itineraries. Next in step K the coordinator sends an actuate command message to the process station agent. Thereafter in step L the process station sends an actuate command message to the process module agent. Finally in step M the process module performs its intended operation. Accordingly the process module may be quickly slopped out by physically and electrically connecting it to the processing system and control system in configuring the process module controller for inclusion in the control system with minimal human intervention.

The control system preferably provides a synchronized timing signal accurate to 5.0 milliseconds or less on all controllers within its confines. Diagnostics of production activities that involve coordinated actions by more than one controller e.g. conveyor management are facilitated by determining the sequence of operations. A means of synchronizing clocks is a very helpful feature in this respect. Debugging facilities and message logging are more beneficial to users of the system if event timestamps are recorded in relation to a real time clock that is uniformly synchronized throughout the system.

The control system provides reject identification which allows reject parts to be saved in an intact condition so that process engineers can identify causes of product defects in the production process. Rejected production pieces are saved in a proper orientation and labeled with a tracking code. The tracking code acts as an historical summary of the process modules that have performed operations on the rejected production piece. This feature preferably employs the programmable output module POM to capture reject production pieces. The value of being able to inspect defects to correlate visible or measurable features with defects identified on line is considered to be worth the extra tracking.

In lieu of using industry standard network cabling the control system may employ fiber optic network cabling to eliminate external interference from disrupting communications. The two most common types of interference that can garble communications are electromagnetic interference EMI and radio frequency interference RFI . EMI commonly occurs when communications cables are in close proximity to electrical power cables. Power cables generate a magnetic field when electrical power is flowing through them. The strength of the magnetic field varies depending upon the amount of voltage that is present. In an industrial environment it is common to have cables carrying voltages of 480 volts and higher. Thus the magnetic fields generated are strong. In comparison communications cables carry a very weak electrical signal. Voltages for communications cables usually occur within the 10 volt range. When the very weak communications cables are used in industrial operations they are susceptible to interference from a number of sources high voltage cabling transformers machine starters etc. The strong signals from powered devices easily distort the data carried on communications cables because the weak signal is literally overpowered .

The use of fiber optic cables eliminates EMI problems. Fiber optic cable carries data via light intensity impulses rather than through electrical charges. Transmitters and receivers of fiber optic equipment operate on principles of photosensitivity rather than voltage sensitivity. RFI refers to data interference that originates with a device that transmits a radio signal. If communication cables in a manufacturing plant are comprised of metal wire there is a possibility that the wire will act as an antenna. The radio signal will garble the data that is being transmitted on the communications cable because it intertwines the data signals with the voice signals.

Most communications cables have shielding that restricts the amount of interference that can affect it but shielding is limited to the amount of distortion that it can keep out. The more powerful the radio signal is the more likely there will be distortion of data within the cable. Fiber optic cable is made of glass and does not conduct electrons like a common wire cable does. Thus fiber optic networks will not sustain RFI and will retain error free data communications. Both of these types of interference disrupt data transmissions on conventional wire cabled networks. Fiber optic networks are immune to the effects of EMI and RFI.

The control system and software of the present invention may advantageously be employed to control any of a variety of processing operations with or without conveyance systems as described herein. In addition the control software of the present invention may be employed with various control architectures. For example the control software may be employed on a single central processing unit CPU control architecture in which the various agents such as the coordinator agent messaging agent conveyance agent processing agent and the implementation independent interface communicate internally as is shown in . The single controller as shown includes the implementation independent interface coordinator agent conveyance agent processing agent and messaging agent . More specifically controller preferably includes the following control system software coordinator agent continuous motion conveyer agent continuous feed indexer agent process module agent message handling agent safety monitoring agent implementation independent interface input output model servo encapsulating distributed data system communication model and configuration data store. In addition the controller may also include a human machine interface and a process station agent.

In contrast to the single CPU hardware architecture another example of a control architecture is illustrated in in which three CPUs are employed such that the coordinator agent messaging agent and implementation independent interface are executed on a first CPU controller A while the conveyance agent and processing agent are executed on second and third CPU controllers B and C respectively. The three CPU controller architecture includes the first controller A having the implementation independent interface coordinator agent and messaging agent . The second controller B includes the conveyance agent while a third controller C includes the processing agent . In addition the first controller A includes a conveyance proxy a processing proxy and a message adapter for communicating with the message proxy and conveyance adapter provided in second controller B and the message proxy and processing adapter provided on the third controller C. Further second controller B has a processing proxy for communicating with the processing adapter on the third controller C. According to one example it is preferred that the first controller A include the following coordinator agent message handling agent safety monitoring agent implementation independent interface input output model distributed data service communication model and configuration data store. In addition the first processor A may also include the human machine interface. The second processor B preferably includes the following continuous motion conveyer agent continuous feed indexer agent safety monitoring agent input output model servo encapsulation distributed data system communication model and configuration data store. The third processor C preferably includes the following process module agent safety monitoring agent input output model servo encapsulation distributed data system communication model and a configuration data store. In addition any of the controllers A C may include the process station agent. It should be appreciated that various other control architecture configurations may easily employ the software without departing from the spirit of the present invention.

The above description is considered that of the preferred embodiment only. Modifications of the invention will occur to those skilled in the art and to those who make or use the invention. Therefore it is understood that the embodiment shown in the drawings and described above is merely for illustrative purposes and not intended to limit the scope of the invention which is defined by the following claims as interpreted according to the principles of patent law including the Doctrine of Equivalents.

