---

title: User specified parallel data fetching for optimized web access
abstract: A hypermedia document display method can include presenting hypermedia content, the hypermedia content containing hyperlinks to additional hypermedia content; storing selected ones of the hyperlinks in a delayed viewing list; and, caching hypermedia content associated with the stored hyperlinks during the presenting step. The method can further include reconfiguring the stored hyperlinks to point to the cached hypermedia content. The presenting step can include displaying Web content in a Web browser. In that case, the Web content can contain hyperlinks to additional Web content. The presenting step also can include playing back multimedia content in a multimedia content player. Finally, the presenting step can include displaying audiovisual television content combined with hypermedia content in a television set.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08230474&OS=08230474&RS=08230474
owner: International Business Machines Corporation
number: 08230474
owner_city: Armonk
owner_country: US
publication_date: 20070516
---
This application is a divisional application of and accordingly claims the benefit of U.S. application Ser. No. 09 715 453 filed in the U.S. Patent and Trademark Office on Nov. 17 2000 issued as U.S. Pat. No. 7 260 600 on Aug. 21 2007.

This invention relates to the field of multimedia content transfer and access. More particularly the invention relates to a method and apparatus for user specified parallel content caching for optimized web access.

Ubiquitous access to hypermedia content for example Web content is part of the common vision of a connected society. Today many consumers have access to hypermedia content through client computers and an increasing number of people have access to hypermedia content through television TV sets. Additionally Internet enabled telephones and other Internet appliances can offer such access wirelessly. Each time a user accesses hypermedia content the hypermedia content can be accompanied by a collection of distracting hyperlinks or hot spots offering access to even more hypermedia content.

Many models of TV based e commerce envision that the consumer can be offered a hot spot on the screen and can click on the hot spot to initiate a commercial transaction. Similarly it is envisioned that consumers can click on hot spots to retrieve additional information regarding the subject matter of audiovisual content presented in the TV. Still retrieving hypermedia content in the midst of viewing television content can disturb the flow of the audiovisual presentation and can cause the user to miss entire portions of the presentation. To further exacerbate the problem the hot spots included in the presentation may not be available at times other than during the presentation. A similar problem exists for Web access via a computer. Specifically a user can view a Web page having therein many hyperlinks. The user has the choice of continuing to view the Web page or replacing the Web page with hypermedia content associated with selected ones of the hotlinks. This can be illustrated by the following scenarios 

A user views a television program and notices an indication that a replica of the leading actress dress can be purchased by clicking on the dress. However the user does not want to disrupt the delivery of the current program stream. Yet the user worries that the hyperlink may not remain available subsequent to the presentation of the program. Thus the viewer either can buy the dress and miss the show or watch the show and miss the opportunity to buy the dress. Similarly later in the show an indication is given that the lyrics for the program background music are available for viewing by clicking on another hot spot. Again the user wants to view the lyrics but does not want to miss the show.

An end user researches information on the Web. While viewing content rich in hyperlinks the researcher is faced with the challenge of reading the information in an orderly methodical fashion following the thought process of the author. However while reading the material the researcher will want to pursue a hyperlink cross referencing some additional material but only after reading the current content. In fact over the course of reading the article many hyperlinks may be identified as important. If the user follows the hyperlinks before reading all of the information the user can become lost and unable to return to the point in the original article where the pursuit of a cross reference began.

A hypermedia document display method can include presenting hypermedia content the hypermedia content containing hyperlinks to additional hypermedia content storing selected ones of the hyperlinks in a delayed viewing list and caching hypermedia content associated with the stored hyperlinks during the presenting step. The method can further include reconfiguring the stored hyperlinks to point to the cached hypermedia content. The presenting step can include displaying Web content in a Web browser. In that case the Web content can contain hyperlinks to additional Web content. The presenting step also can include playing back multimedia content in a multimedia content player. Finally the presenting step can include displaying audiovisual television content combined with hypermedia content in a television set.

The caching step can include caching the hypermedia content in a server communicatively linked to the content browser. Alternatively the caching step can include caching the hypermedia content in a local cache communicatively linked to the content browser. Notably in one aspect of the present invention the caching step can include evaluating available system resources and based upon the evaluation downloading the hypermedia content associated with the stored hyperlinks to a hypermedia content cache when the system resources are available. Additionally the caching step can include delaying the downloading when the system resources are constrained. Finally the caching step can include evaluating available system resources and based upon the evaluation caching the further hypermedia content in a proxy cache where downloading the further hypermedia content to a local cache can constrain local resources.

In another aspect of the present invention the caching step can include configuring a page depth to which the hyperlinks in the hypermedia content associated with the stored hyperlinks can be followed downloading the hypermedia content associated with the stored hyperlinks the downloaded hypermedia content containing additional hyperlinks to further hypermedia documents further downloading the further hypermedia documents the further hypermedia documents containing further hyperlinks to even further hypermedia documents and repeating the further downloading step until reaching the configured page depth.

The method of the invention also can include reconfiguring the stored further and additional hyperlinks to point to associated hypermedia documents stored in the cache. Moreover to facilitate the organization of the cached hypermedia content the caching step can further include establishing a set of folders having an associated topic and downloading the hypermedia content to selected ones of the set of folders each folder in the set containing hypermedia content corresponding to a topic associated with the folder. Finally to facilitate searching the cached hypermedia content the method can include adapting the cached hypermedia content for full text searching in a full text search engine.

In one aspect of the present invention the storing step can further include associating expiration data with each hyperlink in the delayed viewing list and purging hyperlinks from the delayed viewing list based on the expiration data. Additionally the method can further include purging cached hypermedia content associated with the purged hyperlinks. Significantly the method can include manually managing selected hyperlinks in the delayed viewing list. Alternatively the method can include automatically purging selected hyperlinks in the delayed viewing list. Notably the method can include selecting hyperlinks in the delayed viewing list and presenting cached hypermedia content associated with the selected hyperlinks. Moreover the method can also include selecting hyperlinks in the delayed viewing list and adding the selected hyperlinks to a list of bookmarks in the content browser.

The method can further include manually managing the cached hypermedia content. Finally the caching step can include determining if a selected hyperlink is associated with hypermedia content having a limited lifetime and if it is determined that a selected hyperlink is associated with hypermedia content having a limited lifetime identifying further hypermedia content necessary for viewing the hypermedia content having a limited lifetime and downloading the hypermedia content having a limited lifetime and the necessary further hypermedia content.

A hypermedia document display system in accordance with the inventive arrangements can include a content browser for presenting hypermedia content to a user a content cache for storing further hypermedia content related to the hypermedia content presented in the content browser a delayed viewing list for storing hyperlinks to the further hypermedia content in the content cache the hyperlinks contained in the hypermedia content presented in the content browser and a delayed viewing list manager. The delayed viewing list manager can download the further hypermedia content to the content cache during the presentation of the hypermedia content in the content browser. Also the delayed viewing list manager can add hyperlinks associated with the further hypermedia content to the delayed viewing list.

In one aspect of the inventive system the content browser can be a Web browser and the hypermedia content is Web content. Notably the content cache can be a local cache associated with the content browser. Alternatively the content cache can be a proxy cache communicatively linked to the content browser. Significantly the delayed viewing list manager can further include a resource sensitive downloading agent. The resource sensitive downloading agent can monitor available system resources and can download the further hypermedia content to the content cache when system resources are available. Otherwise the resource sensitive downloading agent can delay the downloading when the system resources are constrained.

A hypermedia content presentation system configured for operation in a cable system can include a set top box connecting a television set to the cable system. The set top box can be adapted to present through the television set both television content originating in the cable system and hypermedia content originating in data servers in a data communications network. The system also can include a gateway server for providing an interface between the data communications network and the cable system a delayed viewing list in the set top box for storing selected hyperlinks in the hypermedia content to further hypermedia content in the data communications network at least one cache for storing the further hypermedia content associated with the hyperlinks in the delayed viewing list and a delayed viewing list manager for downloading the further hypermedia content during the presentation of the hypermedia content through the television set by the set top box.

Notably the content cache can be a local cache associated with the set top box. Additionally the content cache can be a proxy cache associated with the gateway server. Significantly the delayed viewing list manager can include a resource sensitive downloading agent wherein the resource sensitive downloading agent can monitor available system resources. The resource sensitive downloading agent can download the further hypermedia content to the content cache when system resources are available. Conversely the resource sensitive downloading agent can delay the downloading when the system resources are constrained. Also the resource sensitive downloading agent can cache the further hypermedia content in a proxy cache where downloading the further hypermedia content to a local cache can constrain local resources.

The present invention can be incorporated into a business method for providing fee based content caching. This business method can include receiving requests from an end user to store in a delayed viewing list DVL selected ones of hyperlinks contained in hypermedia content presented in a client side content browser responsive to the end user requests storing the selected hyperlinks in the DVL and notifying a third party content caching system responsive to the notification caching in the third party content caching system further hypermedia content associated with the stored hyperlinks the caching occurring during the presentation of the hypermedia content in the client side content browser and charging the end user a fee for the content caching. Additionally the method can include transmitting to the end user for presentation in the client side content browser selected ones of the cached hypermedia content.

The fee can be based upon how many bytes of data are included in the cached hypermedia content. Alternatively the fee can be based upon how many times the end user caches hypermedia content. Notably the hypermedia content can be Web content. In that case the fee can be based upon how many Web pages are cached in the third party content caching system.

The present invention is a hypermedia content presentation method that can include presenting hypermedia content through a content browser wherein the hypermedia content contains hyperlinks to additional hypermedia content. Selected ones of the hyperlinks can be stored in a delayed viewing list DVL . Finally hypermedia content associated with the stored hyperlinks can be cached during the presenting step. Additionally the stored hyperlinks can be reconfigured to point to the cached hypermedia content.

In accordance with the method of the invention a user during a content browsing session can identify hyperlinks in hypermedia content presented in a content browser. The hyperlinks can point to hypermedia content which the user would like to browse at a later time. Notably the hypermedia content to which the hyperlinks point can be cached for later browsing without relinquishing the view currently presented in the content browser. Furthermore the desired hypermedia content can be downloaded during the content browser activity so that when the user decides to browse the cached hypermedia content download delays can be avoided.

Notably hypermedia content can also include therein hyperlinks to resources for example graphics objects multimedia objects and further hypermedia content. Similarly hypermedia content can include embedded graphics and multimedia objects as well as program scripts for example Javascripts for execution as Java applets or Visual Basic scripts for interpretation by a Visual Basic interpreter. Finally the hypermedia content can be a multimedia stream of data with which hyperlinks can be associated. Specifically hypermedia content in this regard can include streaming video with superimposed hyperlinks or hot spots .

As shown in a hypermedia content server can provide hypermedia content on demand through network to a requesting client in which the hypermedia content can be displayed in a hypermedia content browser . As will be apparent to one skilled in the art in practice a user interacting with the content browser can request the hypermedia content by specifying to a proxy server a URL associated with the hypermedia content . The proxy server in turn can retrieve the requested hypermedia content through the network from the hypermedia content server specified by the URL.

When the proxy server has received the requested hypermedia content from the hypermedia content server the proxy server can communicate the requested hypermedia content to the requesting client . The client in turn can present the requested hypermedia content to the user in the content browser . By the term present the invention is not merely limited to displaying hypermedia content . Rather where the hypermedia content is multimedia content the term present can mean audibly or visually presenting sounds or video respectively.

As noted above the hypermedia content can be Web content distributed across the Internet. Accordingly the content browser can be a Web browser and the proxy server can be a Web proxy server which can receive HTTP requests for Web content from the Web browser. Notably as shown for exemplary purposes only the hypermedia content can contain therein hyperlinks which can refer to further hypermedia content stored in hypermedia content servers . Where the hypermedia content is Web content the hyperlinks can refer to further Web pages multimedia content file resources etc.

The content browser can include any means for presenting hypermedia content to an end user. By presenting both audio and visual presentations either exclusively or in combination are contemplated. Example content browsers can include conventional HTML browsers XML browsers MPEG players VoiceXML browsers etc. In operation the content browser can present to a user requested hypermedia content as shown in . The requested hypermedia content can contain hyperlinks to further hypermedia documents including hypermedia documents . The user can select particular hyperlinks for storage in a delayed view list DVL in which hyperlinks to further hypermedia content can be stored. By storing the selected hyperlinks in the DVL the hypermedia content referenced by the stored hyperlinks can be downloaded to cache . Notably the hypermedia content not only can include further hypermedia content such as additional Web pages but also hypermedia content can include graphical objects multimedia objects file resources etc.

Significantly when a hyperlink is added to the DVL an agent acting separately from the content browser for example the DVL Manager can download the further hypermedia content to the cache . Although the cache is shown as a component of the client computer it should be recognized by one skilled in the art that the cache can be located on any computer communicatively linked to the client computer . For instance in an alternative aspect of the present invention the cache can be included in a server for example the proxy server .

Notably the DVL manager can retrieve the further hypermedia content in a manner consistent with the resources of the client computer the proxy server and the network resources which connect the client computer to the proxy server . Examples of constrained resources can include limited available network communications bandwidth and limited communications bandwidth between a client and the network. Other examples of constrained resources can include insufficient available disk storage for storing downloaded further hypermedia content . Notwithstanding the term constrained resources is not limited by those examples discussed above. Rather constrained resources can be any computing resources necessary to transmit data from a server to a client or vice versa.

The DVL manager can delay downloading the further hypermedia content when resources are constrained. Moreover the DVL manager can consider the type of content presented in the content browser when determining whether to delay the caching of the further hypermedia content . For example if bandwidth hungry streaming media is presented in the content browser the DVL Manager can delay the caching of the further hypermedia content until the streaming of the media has completed. However if a simple Web page is presented in the content browser the DVL Manager can cache the further hypermedia content during the presentation of the simple Web page. Notably in most cases where conventional Web pages are displayed in the content browser the DVL Manager can concurrently cache the further hypermedia documents as hyperlinks thereto are added to the DVL .

While the system A of illustrates the retrieval of hypermedia content in a hypermedia content browser in a client computer the invention is not limited to a client computer . Rather in another aspect of the present invention hypermedia content can be retrieved in a content browser in a set top box STB configured to provide computer network access through a television TV set configured to communicate in a cable network. is a schematic diagram illustrating such an alternative exemplary hypermedia content presentation system B.

As shown in hypermedia content can be created by content providers and may be specialized for TV presentation through specific TV authoring and transcoding tools. The hypermedia content can be stored as in the case of in data servers . However unlike the case of in the case shown in the hypermedia content can be provided to an end user not via a client computer but via a TV having a set top box connected to a cable system . More particularly the cable system can include a digital TV service center in which TV content can be combined with the hypermedia content and transmitted to end users through the set top boxes .

In this aspect of the invention end users can interact with the hypermedia content in a similar manner as in the case of . Specifically input device events such as keyboard strokes and mouse clicks can be transmitted on two way cable to the digital TV service center in the cable system . The input device events can be extracted from the cable signal and passed to a gateway server communicatively linked to data servers in the data communications network . As in the case of the data servers can be specific e commerce servers positioned in the Internet. Notably a server for example a proxy server can be positioned with or within the gateway server . Moreover where the resources of the set top box are limited the cache can be included in the server .

Notably the system B can include two caches a cache positioned with the server and a local cache not shown positioned in the set top box . By including two caches specific cached hypermedia content can be stored locally in the local cache to support the scenario where a user intends to disconnect the set top box from the network but continue to browse hypermedia content in the content browser . As a result the user can download to the local cache desired hypermedia content for browsing at a later time when disconnected from the network . As in the case of the cache of can maintain the necessary user and hypermedia content information to enable a user in conjunction with the DVL Manager to view hypermedia content previously identified by hyperlinks in the DVL . In particular when a hyperlink is initially added to the DVL the corresponding hypermedia content can be downloaded to the cache so that subsequently the cached hypermedia content can be combined with the TV content and provided to the TV on user command.

In decision step it can be determined whether hyperlinks are contained in the hypermedia content presented in the content browser. If no hyperlinks are contained in the browser the method branches to decision step in which it can be determined if the hypermedia content browsing session shall continue. If the session continues the method branches back to step . In step if hyperlinks are contained in the hypermedia content the method can await a user selection of one or more hyperlinks. The user can select hyperlinks using any conventional means. For instance the user can right click on a selected hyperlink thereby activating a floating menu. Subsequently in step the user can select a menu function for adding the hyperlink to the DVL. This process can repeat for each hyperlink to be added to the DVL. When no hyperlinks remain to be added to the DVL in step it can be determined if the hypermedia content browsing session shall continue. If the session continues the method branches back to step in which additional hypermedia content can be loaded.

Notably in step selected hyperlinks can be added to the DVL. In particular when a hyperlink is added to the DVL as in step a separate agent for example a DVL Manager not only can add the hyperlink to the DVL but also can download to a cache the hypermedia content to which the hyperlink refers. Significantly this caching step can occur separately albeit during the process illustrated in . more particularly illustrates a method for caching hypermedia content during the presentation of hypermedia content in .

Beginning in step of the DVL Manager can determine from the added hyperlink which hypermedia content to retrieve. Specifically the hypermedia content specified by the hyperlink can be retrieved. Alternatively not only can the hypermedia content specified by the hyperlink be retrieved but also all hypermedia content referenced by the specified hypermedia content can be retrieved. Intermediately the DVL Manager can be configured to retrieve hypermedia content referenced by the specified hypermedia content to a certain depth for example a certain number of page levels.

Significantly the DVL Manager can be a background agent communicatively linked to the DVL which can retrieve the associated hypermedia content as specified by corresponding hyperlinks and can store the same in a cache. Notably the DVL Manager can fetch and store the hypermedia content during the primary viewing of hypermedia content in the content browser. In consequence the DVL Manager can be resource aware for instance in terms of communications bandwidth data storage and processor availability. As such the DVL Manager can ensure that the caching of hypermedia content does not interfere with the primary task of presenting hypermedia content in the content browser. Hence in step the DVL manager can analyze system and network resources to determine in step whether resources are constrained. In decision step if resources are determined to be constrained in step the DVL Manager can delay caching the hypermedia content. Otherwise if resources are not constrained in step the DVL Manager can download the hypermedia content to the cache.

For example if the user is viewing an MPEG file in an MPEG browser the DVL Manager can detect the constrained bandwidth caused by the transmission of bandwidth consuming audiovisual content. As a result the DVL Manager can delay caching further hypermedia content malting the assumption that bandwidth is a constrained resource and that bandwidth need to be reserved for the MPEG browser. Subsequently the DVL Manager can determine when the constrained resource is no longer required by the primary task of presenting the MPEG content. Then the DVL Manager can download the further hypermedia content corresponding to hyperlinks added to the DVL by the user.

In order to use bandwidth optimally the DVL Manager can include a function for packet prioritization and handling. A packet prioritization and handling function can allow foreground traffic traffic associated with the content browser to receive priority. If multiple content browsers are in use the function can be supported by the operating system to provide the prioritization function. The packet prioritization and handling function can direct hypermedia content specified by hyperlinks in the DVL to the cache. As a result when the user views the cached hypermedia content the hypermedia content is available for immediate presentation.

Significantly the DVL Manager can provide an interface to the content browser through which cached hypermedia content can be presented as if the cached hypermedia content were still residing in data servers associated with the hyperlinks stored in the DVL. More particularly a user can view hyperlinks in the DVL and can load corresponding cached hypermedia content without requiring the content browser to retrieve the hypermedia content from a data server associated with the hyperlink. Rather the DVL Manager will have already retrieved the hypermedia content during the original presentation of hypermedia content during which time the user had selected the hyperlink for addition to the DVL. When finished viewing cached hypermedia content the user can choose to add the hyperlink to a set of bookmarks associated with the content browser.

Notably in addition to caching hypermedia content corresponding to hyperlinks added to the DVL the DVL Manager can provide management functions for managing both cached hypermedia content and hyperlinks stored in the DVL. is a block diagram illustrating an exemplary function hierarchy for a DVL Manager . As shown in the figure the DVL Manager can include functions for managing the DVL. Specifically an automatic purge function can cause an entry in the DVL to be purged when corresponding hypermedia content has been presented. In an alternative aspect of the invention an automatic purge can be performed to eliminate stale content. Stale content can be identified for example by the age of the hyperlink which refers to the content. In another aspect of the invention the entire DVL can be purged when the user disconnects the client device from the computer network or cable system as the case may be.

A manual purge function can permit a user to manually purge not only all hyperlinks in the DVL but also all hypermedia content in the cache. A selective purge function can permit a user to selectively purge particular hyperlinks in the DVL and corresponding hypermedia content. An add function can permit a user to add a hyperlink to the DVL. Finally a modify function can permit a user to modify an already existing entry in the DVL.

The DVL Manager also can include a set of services which permit the user to logically organize cached hypermedia content. Specifically cached hypermedia content can be organized into a series of topic folders. Accordingly the DVL Manager can include a create topic folder function and a delete topic folder . Additionally the DVL Manager can include a function for adding DVL entry to a topic folder a function for moving a DVL entry from one topic folder to another topic folder and a function for removing a DVL entry from a topic folder.

Finally the DVL Manager can include a facility for allowing the cached hypermedia content to be indexed with a full text search engine. In consequence the user can search downloaded hypermedia content for specific keywords or concepts. Accordingly the DVL Manager can include a function for indexing cached hypermedia content. Moreover the DVL Manager can include a keyword search function for performing keyword searches on indexed hypermedia content stored in the cache.

Significantly with particular regard to the support of set top box applications the DVL Manager can be configured to accommodate hyperlinks having a limited life span. Examples of such hyperlinks can include for example hyperlinks which are validly selectable only while an associated advertisement is simultaneously presented in the content browser of the TV. If it is determined that a hyperlink has a limited life span the DVL Manager in conjunction with the server positioned with the gateway server can be configured to both store enough of the simultaneously presented program stream and also cache any required hypermedia content to allow the hyperlink to be explored or activated at a later time subsequent to the expiration of the limited life span. This function can be automatically provided or can require manual selection.

The user is watching a television program on TV and sees an indication that a copy of the leading actress dress can be purchased by clicking on the dress. Notably in this case the dress is a hypermedia hot spot which has a hyperlink to further hypermedia content. In particular the further hypermedia content can be a Web page for conducting an e commerce transaction namely the purchase of the dress. The user can add the hyperlink to the DVL. The video stream of the television program remains uninterrupted. Subsequently the user can be presented with further hyperlinks superimposed on the video stream which the user can selectably add to the DVL.

For each entry in the DVL the DVL Manager can retrieve corresponding hypermedia content and store the same in a cache positioned in the gateway server providing the interface between the Internet and cable system. Alternatively the DVL Manager can store the retrieved hypermedia content in a local cache in the set top box. Subsequently when the user is ready to review the cached hypermedia content the user can select the hyperlink from the DVL and the corresponding cached hypermedia content is quickly available for viewing in the content browser.

Placement of the cache in the set top box or the gateway server can depend on the availability of resources at either location and the availability of bandwidth. It is assumed that in a cable infrastructure sufficient bandwidth exists so that data can be obtained and cached in parallel with a program stream without affecting the quality of the program stream. Further it is assumed that an equal or greater amount of bandwidth is available between the gateway server and the data server acting as the hypermedia content source. Therefore for networks with less bandwidth available in the last mile between the gateway server and the set top box caching materials at the gateway server may allow more efficient use of resource. When the client device lacks sufficient capability for storage or for running such applications the gateway server is the best place for both content and control to reside.

An end user can use a Web browser in a client computer to view content on the Web. In one Web page several hyperlinks to other Web pages can exist. The user can select particular hyperlinks in the Web page which can be added to a DVL. During the user s browsing of subsequent Web content the DVL Manager can download to the cache hypermedia content associated with the selected hyperlinks added to the cache. In this case it is assumed that more capability is available in the client computer as compared to a set top box. Therefore it is more likely that the cache can reside in the client computer.

Still it can be advantageous to have two caches one in the server and the other in the client computer. More particularly if the hypermedia content to be cached is large in size for instance a video file in order to optimize the bandwidth the hypermedia content can be downloaded to the cache in the server for example a proxy server maintained by the ISP which provides Internet access to the end user. In contrast if the hypermedia content is smaller in size for instance a simple Web page the hypermedia content can be downloaded to the cache in the client computer. Regardless when the user has completed viewing the Web content the user can recall the DVL and can select therefrom cached hypermedia content for viewing.

A user can view TV content in a television connected to a set top box in accordance with the inventive arrangements. During the viewing the user can select hot spots hyperlinks embedded in or superimposed over a region of a video image for addition to the DVL. When the viewing has completed previously marked hot spots can be presented either by listing entries from the DVL or by presenting the cached hypermedia content itself serially through the TV. Notably by presenting the listed DVL entries or the cached hypermedia content automatically at the conclusion of the viewing the viewer can be reminded of the entries in the DVL. Moreover the viewer can be encouraged to access the hot spots before the hot spots age out or are otherwise unavailable.

With a limited amount of storage for such hypermedia content in the cache this presentation of the cached hypermedia content can promote timely use of the material before determinations are made as to which of the selected hot spots can be preserved in the DVL for the user. This allows the viewer to view the data or complete the transaction if it is an e commerce transaction and discard the hot spot. If the user changes the TV channel the previously marked hot spots also can be presented over the TV. This provides a measure of time sensitivity to the cached hypermedia content and ensures that the hypermedia content will be viewed before relevant context is lost. A further aspect of example 3 can include the addition of other pertinent hypermedia content to that which has been cached. For example if a national advertisement and a national hot spot had been telecast the review at DVL inspection time can include local pertinent information such as hours of operation retail locations etc. This ability to modify and potentially add to the original information based on a user s expression of interest location and other demographics supports a new business model. In this business model the business entity supplying the additional material and providing the cache can generate revenues from advertisers viewers local franchisees etc.

The present invention can be used in a business model in which a third party can provide fee based DVL and content caching services to end users. In the business model of example 4 end users can register with a third party provider during which time the end user can agree to one or more particular fee arrangements. Such fee arrangements can include a flat fee for a specified quantity of cached content including unlimited cached content or fee for service in which case the user can be charged a fee for each instance of cached content. In this case the fee amount can be based upon the cached content for example upon each unit of storage used to store the cached. Each time the end user selects a hyperlink for inclusion in a DVL the content can be cached and the user charged accordingly. Alternatively the user can be charged upon viewing cached content.

To provide the functionality necessary for an end user to select hyperlinks and store the same in a DVL a program can be provided to the end user for example a content browser plug in. The program can provide means for the end user to select a hyperlink and activate a menu which can contain menu options such as Add to DVL . The program also can include functionality for adding selected hyperlinks to a DVL in response to an end user request to do the same. Finally the program can include means for creating and managing a DVL either locally by the client computing device of the end user or remotely in a computing device accessible by the third party provider.

