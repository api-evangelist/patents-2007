---

title: Securing unprivileged sessions on POSIX systems
abstract: A method and apparatus for providing security to Portable Operating System Interface (POSIX) system. In one embodiment, a file system with noexec/nodev options is mounted on the POSIX system. The root directory of the mounted file system is changed with a chroot operation to generate a secured system directory structure. The secured system directory structure is assigned to a non-administrative user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08239936&OS=08239936&RS=08239936
owner: Red Hat, Inc.
number: 08239936
owner_city: Raleigh
owner_country: US
publication_date: 20071114
---
Embodiments of the present invention relate to operating systems and more particularly to securing an operating system.

One of the biggest threat to an Operating System OS does not originated from the outside but from an internal user. An internal user having privilege access to the OS may compromise its security by intentionally or unintentionally running applications that could subvert the security of the OS.

One solution includes isolating a user in the OS via a virtual environment. However such user may still be able to manipulate its virtual environment to eventually compromise the security of the entire system by running malicious applications.

Described herein is a method and apparatus for providing security to Portable Operating System Interface POSIX system. In one embodiment a file system is mounted with noexec nodev options on the POSIX system. A chroot operation is then performed on the mounted file system to generate a secured system directory structure. The secured system directory structure is assigned to a non administrative user. In another embodiment a chroot operation is first performed on a file system of a POSIX system. A file system with noexec nodev options is then mounted on the file system of the POSIX system to generate a secured system directory structure. The secured system directory structure is then assigned to a non administrative user.

A chroot on POSIX type systems is an operation that changes the apparent disk root directory for the current running process and its children. A program that is re rooted to another directory cannot access or name files outside that directory called a chroot jail. The term chroot may refer to the chroot 2 system call. In other words the location of the root directory for a running process is changed so that the process cannot access any files in the remainder of the system.

Programs expect at startup to find scratch space configuration files device nodes and shared libraries at certain preset locations. For a chrooted program to successfully start the chroot directory must be populated with a minimum set of these files.

Programs are allowed to carry open file descriptors for files pipelines and network connections into the chroot which can simplify jail design by making it unnecessary to leave working files inside the chroot directory. This also works as a simple capability system in which the program is explicitly granted access to resources outside the chroot based on the descriptors it can carry in.

Another means for providing security to a POSIX type system is to mount a filesystem with noexec nodev options. Mounting a filesystem noexec nodev means that no files on the mounted filesystem is to be interpreted as a program or a link to a device driver.

The fstab for file systems table file is commonly found on Unix Linux systems as part of the system configuration. The fstab file typically lists all available disks and disk partitions and indicates how they are to be initialized or otherwise integrated into the overall system s file system. The fstab file is most commonly used by the mount command which reads the fstab file to determine which options should be used when mounting the specified device. Traditionally the fstab was only read by programs and not written. However more modern system administration tools can automatically build and edit fstab or act as graphical editors for it.

The dev nodev option instructs the POSIX system to interpret not interpret device special nodes on the filesystem. The exec option lets one execute binaries that are on that partition whereas noexec option doesn t let one do that. The noexec option might be useful for a partition that contains binaries that one does not want to execute on the system or that cannot even be executed on the system for example in the case of a partition containing a filesystem for a different operating system such as a Microsoft Windows C drive mounted on a Linux system .

In one embodiment when a user logs in the login process would obtain the filesystem position of the base of the system subset mount the user s home directory and a temp directory at the appropriate places with the noexec nodev options issue a chroot system call to change the root directory to the base of the system subset and change the real and effective user and group Ids to match those of the user logging in.

The system subset needs to be carefully designed to ensure that none of the available programs can be used to subvert the system security. Some common utilities such as the shell and Perl interpreter may be modified so that user scripts cannot be executed.

The exemplary computer system includes a processing device a main memory e.g. read only memory ROM flash memory dynamic random access memory DRAM such as synchronous DRAM SDRAM a static memory e.g. flash memory static random access memory SRAM etc. and a data storage device which communicate with each other via a bus .

Processing device represents one or more general purpose processing devices such as a microprocessor central processing unit or the like. More particularly the processing device may be complex instruction set computing CISC microprocessor reduced instruction set computing RISC microprocessor very long instruction word VLIW microprocessor or processor implementing other instruction sets or processors implementing a combination of instruction sets. Processing device may also be one or more special purpose processing devices such as an application specific integrated circuit ASIC a field programmable gate array FPGA a digital signal processor DSP network processor or the like. The processing device is configured to execute the processing logic for performing the operations and steps discussed herein.

The computer system may further include a network interface device . The computer system also may include a video display unit e.g. a liquid crystal display LCD or a cathode ray tube CRT an alphanumeric input device e.g. a keyboard a cursor control device e.g. a mouse and a signal generation device e.g. a speaker .

The data storage device may include a machine accessible storage medium on which is stored one or more sets of instructions e.g. software embodying any one or more of the methodologies or functions described herein. The software may also reside completely or at least partially within the main memory and or within the processing device during execution thereof by the computer system the main memory and the processing device also constituting machine accessible storage media. The software may further be transmitted or received over a network via the network interface device .

The machine accessible storage medium may also be used to store a security module for combining chroot operations and mounting a file system with nodev noexec options. The web browser module may also be stored in other sections of computer system such as static memory .

While the machine accessible storage medium is shown in an exemplary embodiment to be a single medium the term machine accessible storage medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine accessible storage medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any one or more of the methodologies of the present invention. The term machine accessible storage medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media and carrier wave signals.

In the above description numerous details are set forth. It will be apparent however to one skilled in the art that the present invention may be practiced without these specific details. In some instances well known structures and devices are shown in block diagram form rather than in detail in order to avoid obscuring the present invention.

Some portions of the detailed descriptions above are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like.

It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussion it is appreciated that throughout the description discussions utilizing terms such as processing or computing or calculating or determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The present invention also relates to apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. Such a computer program may be stored in a computer readable storage medium such as but is not limited to any type of disk including floppy disks optical disks CD ROMs and magnetic optical disks read only memories ROMs random access memories RAMs EPROMs EEPROMs magnetic or optical cards or any type of media suitable for storing electronic instructions and each coupled to a computer system bus.

The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose systems may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these systems will appear from the description below. In addition the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.

It is to be understood that the above description is intended to be illustrative and not restrictive. Many other embodiments will be apparent to those of skill in the art upon reading and understanding the above description. The scope of the invention should therefore be determined with reference to the appended claims along with the full scope of equivalents to which such claims are entitled.

