---

title: Data entry commentary and sheet reconstruction for multidimensional enterprise system
abstract: A computing device is described that includes a user interface to receive contribution data of an enterprise and to display a sheet of the contribution data, an annotation interface module to receive one or more annotations for objects of the contribution data, a planning application to retrieve a context definition defining a context in which each of the annotations was received, and an annotation table to store each of the annotations and the context definition corresponding to each of the annotations. The user interface may be configured to output the annotations. The computing device may improve the collaborative process of developing multidimensional data. Users of the computing device may quickly and easily share their thoughts, questions, and comments about the data through annotations. Recreating an annotated sheet may be done efficiently by storing relevant coordinates.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09268837&OS=09268837&RS=09268837
owner: International Business Machines Corporation
number: 09268837
owner_city: Armonk
owner_country: US
publication_date: 20071204
---
The invention relates to enterprise systems for example enterprise planning and performance management systems.

Enterprise software systems are typically sophisticated large scale systems that support many e.g. hundreds or thousands of concurrent users. Examples of enterprise software systems include inventory management systems budget planning systems order management systems inventory management systems sales force management systems business intelligence tools enterprise reporting tools project and resource management systems and other enterprise software systems.

A computing device for a user typically connects to the enterprise software system via a computing network. The user computing device may provide an operating environment for concurrent execution of multiple planning applications that access multidimensional data stored to a cache on the computing device. Typically the user computing device includes a cache to store datasets requested by the user. In many cases the cache stores complex multidimensional datasets i.e. data cubes which the user computing device may download from the enterprise software system via the network connection.

Various users may enter review and or change data in an enterprise system using the computing device. For example a contributor may enter data in a cell and a reviewer may review the data in the cell. The reviewer may accept reject or change the data. The reviewer may request that the contributor to look over the changes or re work the data in light of the review when the reviewer changes or rejects the data.

In general the invention is directed to techniques for annotating data of an enterprise system. An enterprise system may store data in one or more multidimensional databases or data cubes. A user of the enterprise system may retrieve observe manipulate and or store the data within a sheet presentation of a view of the data. A plurality of users may cooperatively develop the data and each of the users may need to recreate the same sheet of a particular data cube. The techniques described herein may improve the cooperative development of the data by enabling the users to communicate with each other through the use of annotations.

The techniques described herein may enable users to annotate various objects of the data. An annotation may include either or both of text based commentary and attaching a file to the annotated data object. For example a user may have a question or comment about a particular cell of a particular sheet. The user may be for example a reviewer who would like clarification about a particular data entry such as how a different user e.g. a contributor arrived at the particular entry. An annotation from the reviewer may only be relevant with respect to a specific sheet. According to the techniques described herein the enterprise system may store the annotation along with a context that defines the sheet and the coordinates of the cell to which the annotation applies. The context definition may define how to recreate the sheet and the coordinates may identify a particular cell of the sheet. A computing device may use the context to recreate the sheet and the coordinates to identify a particular annotated cell.

The contributor may see that an annotation exists and instruct a computing device to recreate the sheet for which the annotation was relevant according to the context in which the annotation was entered. The contributor may then take an appropriate action with respect to the annotation. For example the contributor may alter the entry or reply with an additional annotation explaining the reasons behind the particular entry. If the contributor replies with an additional annotation the reviewer may again retrieve the data and see the original annotation as well as the annotation from the contributor. The techniques described herein may also enable a user to enter an annotation for other objects such as the sheet as a whole or an entire data cube and the techniques may permit other users to quickly recreate the view and observe the annotation.

In one embodiment a method comprises receiving contribution data of an enterprise in accordance with a multi level enterprise model storing the contribution data within a database receiving a first annotation for an object of the contribution data retrieving a context definition defining a context in which the first annotation was received receiving a second annotation for the object within the same context as the context in which the first annotation was received storing the first annotation the second annotation and the context definition and outputting the first annotation and the second annotation.

In another embodiment a method comprises retrieving contribution data from an enterprise system retrieving a first annotation for an object of the contribution data from the enterprise system retrieving a context definition defining a context in which the first annotation was entered generating a link to the context defined by the context definition and outputting the link.

In another embodiment a computing device includes a user interface to receive contribution data of an enterprise and to display a sheet of the contribution data. The computing device also includes an annotation interface module to receive one or more annotations for objects of the contribution data. The computing device further includes a planning application to retrieve a context definition defining a context in which each of the annotations was received. Moreover the computing device includes an annotation table to store each of the annotations and the context definition corresponding to each of the annotations wherein the user interface is configured to output the annotations.

In another embodiment the invention is directed to a computer readable medium containing instructions. The computer readable medium may be a computer readable storage medium such as for example random access memory RAM read only memory ROM programmable ROM PROM erasable PROM EPROM electronically erasable PROM EEPROM flash memory or other suitable memory. The instructions cause a programmable processor to receive contribution data of an enterprise in accordance with a multi level enterprise model store the contribution data within a database receive a first annotation for an object of the contribution data retrieve a context definition defining a context in which the first annotation was received receive a second annotation for the object within the same context as the context in which the first annotation was received store the first annotation the second annotation and the context definition and display the first annotation and the second annotation to a user.

The techniques described herein may offer several advantages. For example the techniques may improve the collaborative process of developing multidimensional data. With the ability of a user to add annotations to a particular entry or a view of the data users of the enterprise system may quickly and easily share their thoughts questions and comments about the data. These annotations may only be relevant with respect to a particular view. Because of the many possible sheets that are possible to create a specific sheet may be difficult if not impossible to recreate either by the system itself or from a user s memory. By storing the context that defines a specific sheet recreating a specific sheet may be done efficiently and may easily allow users who work with the same data to coordinate their efforts toward contribution and review of the data more efficiently.

The details of one or more embodiments of the invention are set forth in the accompanying drawings and the description below. Other features objects and advantages of the invention will be apparent from the description and drawings and from the claims.

Enterprise users may utilize a variety of computing devices to interact with enterprise system via network . For example an enterprise user may interact with enterprise system using a laptop computer desktop computer or the like running a web browser such as Internet Explorer from Microsoft Corporation of Redmond Wash. Alternatively an enterprise user may use a personal digital assistant PDA such as a Palm organizer from Palm Inc. of Santa Clara Calif. a web enabled cellular phone or similar device.

Network represents any communication network such as a packet based digital network like the Internet. In this manner system can readily scale to suit large enterprises. Enterprise users may directly access enterprise system via a local area network or may remotely access enterprise system via a virtual private network remote dial up or similar remote access communication mechanism.

For exemplary purposes the invention will be described in reference to a performance management and enterprise planning system such as an enterprise wide financial management system or budget planning system. The techniques described herein may be readily applied to other software systems including other large scale enterprise software systems. Examples of enterprise software systems include order management systems inventory management systems sales force management systems business intelligence tools enterprise reporting tools project and resource management systems and other enterprise software systems.

In one example embodiment enterprise system enables and automates the reconciliation of top down targets with detailed bottom up forecasts for an enterprise. Enterprise system implements and manages an enterprise planning process which can be divided into three stages 1 a modeling stage during which a model is constructed 2 a contribution stage during which planning data is collected and 3 a review and performance management stage during which the planning data can be selectively accepted and analyzed.

Initially high level enterprise managers or executives referred to as analysts define organizational targets and build planning models for the enterprise. The analysts may include for example financial analysts such as the chief financial officer senior financial analysts or product and sales analysts. More specifically the analysts develop a model having a number of hierarchically arranged nodes representing various cost centers within the organization such as business units or departments. The analysts specify corporate target data for each node of the organizational hierarchy. Corporate target data may include financial data revenue data order data inventory data and the like depending on the particular enterprise planning activity being carried out by the enterprise.

Next the analysts assign one or more enterprise users to each node such as managers supervisors sales representatives lab managers or the like that are responsible for enterprise planning for the cost center corresponding to the node. Each enterprise user may be designated as a contributor that provides planning data to enterprise system a reviewer that accepts or rejects contributions from the contributors or both. The contributors and reviewers may be authorized users within the enterprise e.g. users or within other entities coupled to network such as suppliers or customers.

Typically enterprise users that are designated as contributors interact with enterprise system to input detailed forecasts in the form of contribution data. As described above enterprise users may provide detailed financial forecasts revenue forecasts order forecasts inventory forecasts estimated resource requirements and the like depending on the particular enterprise planning activity being carried out by the enterprise. Users may also enter and or review annotations from other users in accordance with the techniques as described in greater detail below.

Enterprise system automates the reconciliation of the forecast data with the corporate target data provided by the analysts. In particular enterprise system operates in accordance with a defined model i.e. the enterprise planning model created by the analysts to provide a hierarchical planning process having multiple reconciliation levels. As each of the contributors provides his or her contribution data enterprise system automatically aggregates the contribution data across the enterprise in real time and provides access to the aggregated data to enterprise users designated as reviewers associated with higher levels of the enterprise. In particular upon receiving contribution data from the contributors enterprise system identifies all higher levels of the organizational model affected by the newly received contribution data and calculates new aggregate totals at each level in real time.

Consequently the reviewers view aggregated data across the enterprise in real time during the enterprise planning session. At each level enterprise system ensures that the reviewers as defined by the nodes of the enterprise model reconcile the target data with the forecast data. Each of the reviewers may for example reject or accept the contribution data in view of corporate targets provided by the analysts. Moreover enterprise system may enable a user to annotate an entry of contribution data. Enterprise system may store characteristics of the sheet in which a user entered an annotation at the time of the annotation in order to enable simple recreation of the sheet by the same user or a subsequent user who would like to review the annotation. The process of reviewing and accepting or rejecting revising and again reviewing continues until the contribution data is ultimately approved by the highest level of the organizational hierarchy thereby ensuring that the contribution data from the contributors reconciles with corporate targets provided by the analysts. The ability to annotate data and to review the annotations may improve the efficiency of this process.

An annotation may contain various information. For example the annotation may contain the name or a user identification ID of the user who entered the annotation the date time at which the annotation was entered the value of the object being annotated at the time of the annotation and a comment from the user. As an example of a situation in which an annotation may be used a contributor may annotate an entry that the contributor believes is especially important about which the contributor is unsure or has a question or for other various reasons. As another example a reviewer may also wish to annotate certain entries such as an entry that the reviewer believes has an incorrect value. The reviewer may also add a second annotation to an entry from a contributor when the contributor has annotated the entry for example to ask a question. Enterprise system may store an entire history of annotations for a particular entry. In continuing with the example enterprise system may store the original annotation from the contributor as well as the annotation from the reviewer. Each annotation may include the name identification of the annotator the date time at which the annotation was entered the specific value of the entry at the time of the annotation a dimensional context for the annotation such as the coordinates and comments from the annotator.

Additionally a user may annotate a cell or other data object by attaching a document or other file to the data object to be annotated. Enterprise system may present an interface by which a user may request to attach a document to for example a cell. The user may then attach a particular document to the cell. When a subsequent user requests to view the comment enterprise system may open the attached document and display the attached document to the user.

Enterprise system may enable annotations of any type of object associated with the data. In one embodiment enterprise system may permit annotation of an entire sheet. In this case the annotation need not contain the current value s of any of the entries in the sheet. Enterprise system may store coordinates defining how to reconstruct the sheet when an annotation is relevant to the entire sheet. Moreover enterprise system may store a history of annotations with respect to the entire sheet if another user enters an annotation relevant to the same sheet in which a different user had previously entered an annotation. In some embodiments enterprise system may enable annotation of all objects associated with multidimensional data such as cells sheets datacubes or other such objects.

Enterprise system may enable organizations to reconcile corporate models and organizational targets with detailed forecasts. Enterprise system may provide a platform that delivers collaborative real time planning capabilities without requiring offline consolidation and aggregation of forecasts. Because enterprise system can aggregate contribution data in real time all users can be presented with an accurate up to date view of the numbers. Enterprise system may also present all users with the ability to view annotations. Further the architecture of enterprise system can readily scale to thousands of users and may be designed around best planning practices. In addition the techniques enabling high participation by enterprise users i.e. the contributors and reviewers allowing accurate planning cycles to be reduced.

Enterprise system may utilize a cut down process by which the multidimensional data store is sliced for each user in accordance with the defined enterprise model. During this process enterprise system identifies areas of the defined model to which users are assigned either as contributors or reviewers and slices the data store based on the assignments. When a given user logs in and proceeds with an enterprise planning activity enterprise system communicates the respective data slice to the respective computing device for display to the user via the extended spreadsheet application. In this fashion enterprise system need not communicate the entire model to each of users thereby reducing communication time as well as resource requirements. Instead each user receives only relevant information. Users interact with computing devices to capture contribution data and to reconcile the contribution data with organizational targets.

A computing device such computing device A may represent a particular slice of a data cube with one or more sheets. A sheet may be for example a cross tab display similar to a spreadsheet document. As described herein sheets relate to a two dimensional representation of data from a multidimensional data cube. On the other hand a spreadsheet document such as a Microsoft Excel document is typically a representation of two dimensional data from a relational database. Although a sheet typically may not simultaneously display data for each of the plurality of dimensions from which the sheet is derived due in part to the two dimensional nature of display devices such as monitors sheets generally contain data retrieved from a plurality of dimensions of a data cube. For example the sheet may select one value for each of certain dimensions e.g. all but two of the dimensions of the data cube. The sheet may then display all data for the two other dimensions in a cross tab display.

The techniques described herein may offer several advantages. For example the techniques may improve the collaborative process of developing multidimensional data. With the ability of users to add annotations to a particular cell or other object associated with the data users of enterprise system may quickly and easily share their thoughts and questions about the data. These annotations may only be relevant with respect to a particular sheet. Because of the many possible sheets that are possible to view a specific sheet may be difficult to recreate by the system itself or from a user s memory. By storing the coordinates of for example a cell to which an annotation relates recreating a specific sheet may be done efficiently and may easily allow users who work with the same data to coordinate their efforts in a more efficient fashion.

Planning application represents a planning application executing on computing device A. For example planning application may include user interface tools reporting tools modeling tools spreadsheet applications data collection templates business intelligence tools or other types of enterprise planning applications. Planning application may specify operations that object model performs upon data cubes through interactions with object model interface .

Object model interface comprises an application programming interface API that exposes object model . For example object model may be a metadata model for data cubes that represent multidimensional data from one or more data cubes. Object store may comprise memory such as a cache that stores specific instantiations of object model . Multidimensional data cubes A N data cubes of object store each store multidimensional data in accordance with object model .

In general object model represents any hierarchy of data objects and may comprise a series of collections and objects within the collections. In other words object model may comprise a hierarchy of objects each of which contains a collection which in turn provides access to one or more objects. Object model may be wrapped to protect the objects within the collections. In this way user A and planning application cannot directly alter the data within object store of object model . Instead planning application interacts with object model via object model interface and more particularly API to specify operations object model may perform. In particular object model interface receives operation calls from planning application via API and may return the result of the operations to planning application .

In the example of enterprise planning user A may interact with user interface to enter and manipulate enterprise planning data such as budget or forecast data. User interface may be for example a web browser front end such as an ActiveX component a Java applet or any other suitable web browser front end. As another example user interface may be a graphical user interface GUI for example a GUI compatible with Microsoft Windows the X Window System Aqua or other user interface and or windowing systems.

Data cubes may store multidimensional planning data which may include top down targets and bottom up contribution data and may allow all calculations for an enterprise planning session to be performed locally by computing device A using e.g. calculation engine .

Object model may maintain annotation tables A N annotation tables in object store . In the example embodiment as shown in object model maintains one annotation table per multidimensional data cube as well as a global annotation table . Although illustrated in as separate tables for the purpose of clarity annotation tables may be incorporated into respective ones of data cubes . For example data cube A may include an annotations dimension which may include cells that store annotations for other cells in data cube A.

Planning application may retrieve annotation data from enterprise system through network in addition to retrieving multidimensional data. Object model may store annotations relevant to data cubes in corresponding annotation tables . Entries in annotation tables may be relevant to a particular cell sheet data cube or other higher order data object. For example an annotation in annotation table A relevant to a particular cell may store the coordinates of the relevant cell of data cube A as well as a context definition defining the context in which the annotation was entered. As another example an annotation in annotation table A may relate to data cube A in its entirety.

Global annotation table may include entries that store annotations for individual ones of data cubes for a set of two or more of data cubes for user planning data as a whole and or for other objects of enterprise system . Although illustrated in as a separate table for purposes of clarity global annotation table may be incorporated into one or more of annotation tables or into one or more of data cubes .

User interface may include annotation interface IF module and commentary browser . User interface may present an interface by which a user such as user A may interact with a particular sheet. A sheet as described above may be a particular view of the data stored in object store . For example a sheet may present a cross tab display such as a spreadsheet view of the data wherein two of the dimensions of a multidimensional data cube may be displayed in full while the remaining dimensions are isolated to a single value for each dimension. A sheet may also present an aggregation of the data for example as a result of a multidimensional data query. User interface may receive a request for a particular sheet from user A. User interface may transmit the request to object model through object model interface to retrieve the requested data in order to populate the sheet with the correct values. Planning application may retrieve multidimensional data from enterprise system through network with which to populate data cubes . For example planning application may retrieve data corresponding to one or more data cubes from enterprise system .

Annotation IF module may present an interface by which a user such as user A may enter an annotation with respect to a particular cell or other object. Annotation IF module may retrieve the definition of the current sheet from user interface . For example annotation IF module may retrieve information defining what dimensions were used to create the sheet. Annotation IF module may store the definition of the current sheet along with an annotation entered by user A such that when the annotation is retrieved by either user A or by another user e.g. user B user interface may reconstruct the sheet in which the annotation was entered. In this way the user retrieving the annotation may more accurately interpret the annotation because the retrieving user may readily observe the context in which the annotation was entered.

A context is generally the sheet or other display in which a particular annotation is received. For example a data cube may have N dimensions D 1 i N. The data cube may be defined as D D . . . D. A cell of the data cube may be defined as D x D x . . . D x where 1 x D . A sheet of the data cube may be defined as D x . . . D D . . . D x for some j k such that 1 j N 1 k N and j k. Thus the context of an annotation for a particular cell D a D b of the sheet is the sheet itself i.e. D x . . . D . . . D . . . D x . Planning application may store an annotation in a corresponding one of annotation tables as well as the definition of the context in which the annotation was entered. When the annotation relates to a particular cell planning application may further store the coordinates of the cell in the corresponding one of annotation tables .

Annotation IF module may also enable users to enter a plurality of annotations with respect to the same data entry. For example user A may initially enter an annotation for a cell and later user B may enter an annotation for the same cell. Likewise user A may enter an additional annotation for a cell for which user A has already entered an annotation with or without an annotation from a different one of users . Annotation IF module may maintain a list such as an array a linked list or other data structure storing annotations for the cell in annotation tables . Each of the annotations in annotation tables may include for example the name or user ID of the user who entered the annotation the date on which the annotation was entered the current value of the cell for which the annotation is entered and comments from the user. User interface may present each of the annotations to a user viewing the sheet containing the cell for which the annotations were entered.

As an example user A who may be a contributor can modify his or her respective contribution data and perform calculations necessary for the enterprise planning process without necessarily accessing enterprise system . User A may also enter an annotation with respect to a cell a sheet or other data object using annotation IF module . User A may save the planning data locally and submit the planning data including the annotations to enterprise system for aggregation with the planning data from other users . One or more of the other users may enter further annotations or delete annotations from user A.

An annotation may be stored along with a definition of the context in which the annotation was entered. For example a data cube may include five dimensions A B C D E. One of users such as user A may request the sheet defined by particular values of dimensions A B and D e.g. A 3 B 2 D 7 while requesting C E as a cross tab display wherein the notation M i denotes the ith value of dimension M. User A may then enter an annotation in e.g. cell C 5 E 13 . An entry stored in a corresponding one of annotation tables may include the annotation data such as user name date comment and or current value of the cell the definition of the context i.e. the sheet definition A 3 B 2 D 7 C E and the index of the annotated cell i.e. C 5 E 13 .

Planning application may determine whether annotations exist with respect to a requested sheet or any of the cells of the sheet when populating the sheet with the data. For example planning application may search annotation tables and global annotation table for annotations relating to cells or other objects of data cubes . For each cell or other object for which an annotation exists user interface may present an indication to user A that an annotation exists. For example when a particular cell includes an annotation user interface may present a flag within the cell as shown in the exemplary screenshot of . User interface may indicate the existence of an annotation in other ways as well such as highlighting the annotated cell in a particular color presenting the text of the annotated cell in bold italics underline or a different font outlining the annotated cell with a border or partial border or by other means.

User interface may display an annotation when user A requests to view the annotation. For example user A may request to view the annotation by using a pointer controlled by a mouse attached to computing device A to hover over the cell for which an annotation exists user interface may interpret the hovering as a request to view the annotation and when user A moves the pointer away from the annotated cell user interface may determine that user A no longer wishes to view the annotation. User interface may display the annotation for example as a tooltip i.e. a window that appears next to the annotated cell after the pointer has hovered over the annotated cell for a certain period of time and that disappears when the pointer is moved away from the annotated cell. User interface may also display the annotation by other means for example by opening a new window containing the annotation or by presenting the annotation in a separate frame of the current window.

User interface may call commentary browser to present a list of annotations to user A. For example commentary browser may present a list of one or more annotations in a commentary browser window as shown in the example of . Commentary browser may furthermore display a link associated with an annotation such that when user A clicks the link user interface will present the sheet to which the annotation was relevant highlight the cell for which the annotation is relevant and or display the annotation. The link may be a link to the context in which the annotation was originally entered. Continuing the above example commentary browser may present a list of annotations to user A including in the list an entry for cell C 5 E 13 . When user A selects the annotation associated with cell C 5 E 13 commentary browser may display a link to A 3 B 2 D 7 C E. When user A selects the link commentary browser may display the sheet defined by A 3 B 2 D 7 C E and depict a flag or other indication of an annotation in cell C 5 E 13 .

Commentary browser and or user interface may further enable deletion of one or more of the annotations. User A may accordingly request to delete one of the annotations. In response planning application may remove the deleted annotation from annotation tables . When all annotations for a particular cell are deleted user interface may remove the flag that indicated the presence of an annotation from the display of the cell.

Enterprise system may automatically aggregate the contribution data across enterprise in real time and may provide access to the aggregated data to reviewers associated with higher levels of the enterprise. This process continues until the contribution data is ultimately approved by the reviewers associated with the highest level of the organizational hierarchy thereby ensuring that the contribution data from the contributors reconciles with corporate targets.

In one embodiment annotations may also be aggregated during data aggregation. For example distinct users e.g. users A and B may have annotated two distinct cells. During data aggregation the two cells may become aggregated into one cell. The data for the two cells may be combined mathematically or by some other means. Annotation table may likewise aggregate the annotations. That is the annotations for each cell may be joined to form a single list of annotations. In one embodiment user interface may present a single list of annotations for such an aggregated cell. In other embodiments user interface may differentiate the annotations relevant to each particular cell. For example user interface may present multiple lists of annotations annotations differentiated by color wherein user interface selects a distinct color for each of the cells being aggregated or by other means.

In one embodiment calculation engine and data cubes are loaded for use during the enterprise planning session. Calculation engine may for example comprise a forward calculation engine wrapped in an Active X object built in an array based language. In other embodiments calculation engine may be implemented by creating layered function datasets within object store . Calculation engine may generally perform operations such as mathematical operations on cells of data cubes .

In response annotation IF module may direct planning application to retrieve the definition of the sheet in which user A is entering the annotation . A sheet may be defined by context e.g. selected rows and columns and single value dimensions. Rows may be all entries in one dimension of a data cube while a column may all entries in a different dimension of the data cube. The context may further include particular values of the remaining dimensions of the data cube. For example data cube A may have five dimensions A B C D E one sheet may be defined as C E A 3 B 2 D 7 . This exemplary sheet would be a cross tab display of rows C by columns E wherein the data is selected for A 3 B 2 and D 7 . Planning application would retrieve the sheet definition C E A 3 B 2 D 7 .

Planning application may then retrieve the coordinates of a cell for which user A indicated a desire to enter an annotation . In continuing the above example user A may have selected the cell C 5 E 13 . Accordingly planning application would retrieve C 5 E 13 as the coordinates of the cell.

Planning application may also retrieve certain information for the annotation to identify the annotation to distinguish the annotation from other annotations or for other reasons. In the example portrayed in planning application retrieves a userID the current date which may be a date time according to any suitable format and a current cell value . Other embodiments may retrieve this or other information.

Annotation IF module may then prompt user A for a comment . In one embodiment for example annotation IF module may present a graphical text box such as comment box of to user A. Annotation IF module may display some or all of the information retrieved at as part of the graphical text box as in the example of . User A may then enter a comment and submit the comment for example by pressing an OK button also presented by annotation IF module . In response annotation IF module may retrieve the comment entered by user A.

Planning application may then determine whether the annotation was the first annotation . For example planning application may examine annotation tables to determine whether for the selected data cube an annotation exists in the selected cell of the selected data cube for the particular context. In continuing the above example planning application may examine annotation tables e.g. annotation table A related to data cube A to determine whether a comment exists for cell C 5 E 13 in the context of C E A 3 B 2 D 7 of data cube A. Notably planning application determines more than simply whether an annotation exists for the cell defined by A 3 B 2 C 5 D 7 E 13 of data cube A because annotations are typically sensitive to the context in which they are entered. However other embodiments may utilize other storage schemas wherein annotations are simply stored according to the coordinates of the cells to which the annotations relate.

When planning application determines that the annotation is the first annotation for the selected cell in the given context YES branch of planning application may store all of the details of the annotation . That is planning application may create a new entry in annotation tables defined by the coordinates and the context of the cell for which user A entered the annotation. Planning application may then store the details of the annotation e.g. the userID the date the current value and the user comment in the new entry of annotation tables .

When planning application determines that the annotation is not the first annotation for the selected cell in the given context NO branch of implicitly an annotation already exists for the selected cell in the given context. Accordingly planning application may store the details of the new annotation for the selected cell with the previous annotation . That is a new entry is not necessarily needed in annotation tables in order to store the new annotation.

In some embodiments annotation tables may store annotations in annotation tables in an array indexed by the cell coordinates and context and an ordinal number according to the order in which the annotation for the cell was received. In other embodiments annotation tables may use a date field of an annotation to differentiate annotations for a particular cell in a particular context from each other. In any case planning application may enable users to view each annotation for the cell individually or to view all of the annotations together. Moreover planning application may later receive a request to delete a particular annotation from the cell therefore storing the annotations for a cell individually may enhance the efficiency of viewing and or deleting individual annotations.

Commentary browser may first cause planning application to examine annotation tables to search for all available annotations . Commentary browser may retrieve this information from planning application . Commentary browser may also provide an interface by which user A may apply one or more filters as described with respect to the example of .

Commentary browser may create a list of all available annotations . Commentary browser may display the list of available annotations for example as depicted in . When user A requests one or more filters commentary browser may apply the selected filters and display only those annotations satisfying the filtering criteria. For example user A may request to see annotations with files attached commentary browser may determine which annotations from the full list have files attached and display only those annotations accordingly.

User A may request to view a particular annotation from the list of displayed annotations. In one embodiment for example user A may control a pointer with a mouse attached to computing device A. User A may select a particular annotation from the list of annotations by pointing to the annotation and pressing a button on computing device A such as a left mouse button. Commentary browser may then receive the request to view the selected annotation . In continuing the above example user A may request to view an annotation corresponding to cell C 5 E 13 . Commentary browser may retrieve the sheet definition i.e. the context corresponding to the annotation from planning application . That is for the above example commentary browser may retrieve the context definition C E A 3 B 2 D 7 from planning application .

Commentary browser may then display the annotation and a variety of options . In one embodiment for example commentary browser may display the annotation in a separate text box from that of a text box for displaying the list of annotations. Commentary browser may generate a link to the context e.g. the sheet according to the retrieved context definition. For the above example commentary browser may display a link to the sheet corresponding to C E A 3 B 2 D 7 . Commentary browser may also display an option to user A to delete the annotation. Commentary browser will then wait for user A to select an option . User A may select a different annotation in which case commentary browser will receive the newly selected annotation retrieve the sheet definition to create a link corresponding to the newly selected annotation and display the annotation link and available options .

When user A requests to delete an annotation DELETE branch of commentary browser may instruct planning application to delete the annotation from annotation tables . Planning application may accordingly remove the annotation from annotation tables . For example if the annotation was for a cell of data cube A planning application may delete the selected annotation identified by the context and the selected coordinates in annotation table A. In the case that the deleted annotation was one of a plurality of annotations for the same cell in the same context planning application will only delete the selected annotation not the entire list of annotations for that cell. Accordingly planning application may need to rearrange the annotations stored in annotation tables . For example if annotation tables store annotations in an array data structure planning application may move subsequent entries in the array forward by one unit. As another example if annotation tables store annotations as a linked list data structure planning application may rearrange one or more pointers of the linked list. For other data structures planning application may act accordingly. Commentary browser may also remove the deleted annotation from the displayed annotation list.

When user A requests to view the sheet VIEW branch of commentary browser may instruct user interface to display the sheet in which the annotation was entered. User interface may use the context definition to recreate and display the sheet . In one embodiment user A may click the link to the sheet by controlling a pointer with a mouse attached to computing device A to request to view the sheet. In some embodiments commentary browser may close after user A requests to view the annotation. In any case user interface may display the sheet corresponding to the annotation. In some embodiments user interface may highlight the cell corresponding to the annotation for example by displaying a box around the corresponding cell. In the above example user interface may display the sheet C E A 3 B 2 D 7 by retrieving values for A 3 B 2 and D 7 from planning application and displaying the data for the dimension C in rows and the dimension E in columns. User interface may also highlight cell C 5 E 13 . In some embodiments user interface may further display the annotation for example as a tooltip next to the annotated cell although other embodiments may display the annotation with other suitable means. As another example another embodiment may display the annotation in a distinct window. Yet another embodiment may display the annotation in a separate frame or toolbar of the same window.

User interface presents user planning data in a manner that may be readily understood by a human user. For instance user interface includes tabs for each data cube in user planning data stored in data cubes . Tabs indicate a Product Price and Cost data cube an Employee Grades data cube a Compensation Assumptions data cube an Asset Purchases data cube an Employee Plan data cube a Revenue Plan data cube and an Income Statement data cube.

In order to view and or edit data in a data cube of user planning data user A may use a mouse or other pointing device to click on the one of tabs that indicates the data cube. In the example of user A has clicked on the tab that indicates the Revenue Plan data cube. When user A clicks on one of tabs planning application may cause user interface to include a row selection box a column selection box and a set of context selection boxes . User A may use row selection box to select items of a dimension of the selected data cube to serve as the vertical axis of a table that presents data in the selected data cube. In the example of user A has used row selection box to select all items of an Indoor and Outdoor Products dimension of the Revenue Plan data cube. Similarly user A may use column selection box to select items of a dimension of the selected data cube to serve as a horizontal axis of table . In the example of user A has used column selection box to select all items of a Months dimension of the Revenue Plan data cube.

User A may then use context selection boxes to select one item in each of the other dimensions of the selected data cube. In the example of the Revenue Plan data cube includes an elist dimension a Product Gross Margin dimension a Channels dimension and a Versions dimension. Furthermore in the example of user A has selected the A1 item for the elist dimension the Units item for the Product Gross Margin dimension Discount Stores item for the Channels dimension and Budget Version 1 item for the Versions dimension. In this way user A specifies a two dimensional sheet of the data in the selected data cube.

After user A uses row selection box column selection box and context selection boxes to specify a two dimensional sheet of the data in the selected data cube user interface presents the specified two dimensional sheet of the data in the selected data cube as table for example in a cross tab display as shown in . Each individual cell in table contains data of a cell of the selected data cube that is indicated by an item in the selected row dimension of the selected data cube an item in the selected column dimension of the selected data cube and selected items in the context dimensions. For example cell in the 14.4V Professional Drill Driver Kit with Flashlight row and in the Mar 03 column of table contains value 29 415 corresponding to data of a cell in the Revenue Plan data cube that is located at the 14.4V Professional Drill Driver Kit with Flashlight item in the Indoor and Outdoor Products dimension the Mar 03 item in the Months dimension the A1 item in the elist dimension the Units item in the Gross Product Margin dimension the Discount Stores item in the Channels dimension and the Budget version 1 item in the Versions dimension.

Although not illustrated in the example of user A may also position cursor over one of tabs . After user A positions cursor over one of tabs user A may press a button on computing device A in order to cause user interface to display a data cube options menu. This data cube options menu may also include an annotate option. If user A selects this annotate option user interface may display an annotation entry window similar to that which user A may use to add an annotation to a cell. User A may then use this annotation entry window to add an annotation to the data cube or to some other object. Likewise user A may position cursor over a separate portion of user interface and press a button on computing device A in order to cause user interface to display a sheet options menu whereby user A may select an annotate option to enter an annotation with respect to the currently displayed sheet. In alternative embodiments other option selection means may be used without departing from the principles of the techniques described herein. For example in one embodiment user A may select the Tools drop down menu from the standard toolbar at the top of user interface . The Tools drop down menu may include an annotate option that user A may select to annotate a cell a sheet a cube or other data object.

Annotation entry window also includes a set of input boxes that allow user A to attach one or more files to an annotation for a cell in table . For instance user A may attach a file present on a local hard disk of computing device A by entering a path to the file in a path field . User A may also attach files present on other storage devices such as network drives. In the example of user A has entered the path C Invoices Products Professional order071007.pdf into path field . This attached file may contain an invoice for the order for 500 drill driver kits alluded to in comments box . A filename box in annotation entry window allows user A to enter a user friendly name for the file attached to the annotation. In the example of user A has entered the name Invoice for order in filename box . When a subsequent user requests to view the annotation of a cell that has an attached file planning application may permit the user to view the attached file. Planning application may retrieve the attached file and display the file to the user. In continuing the above example user B may request to view the file attached to cell . Accordingly planning application may retrieve the file order071007.pdf from location C Invoices Products Professional. Planning application may also display this file to user B. In general user A may attach any sort of file to an annotated object.

When user A selects an OK button of annotation entry window planning application automatically adds the annotation to the cell. Planning application may store the annotation in annotation table . In addition planning application may upload and store any files specified in path field . Alternatively user A may select Cancel box of annotation entry window to cancel the entry of the annotation in which case planning application will not save a new annotation and annotation entry window will close.

In the example of tooltip includes the text Order placed for 500 additional units of 14.4V Professional Drill Driver Kit with flashlight on Mar. 13 2003. Note that this text is the same as the text entered in comment box . Likewise tooltip includes user identifier that corresponds to user indication of annotation entry window and value identifier that corresponds to value indication of annotation entry window . Tooltip may also include date identifier that may include an indication of when i.e. the date and or the time at which the annotation was entered. Various embodiments may display the date time in various formats.

User A may edit entries of table . For example as shown in user A has changed the value of cell from 29 415 to 29 915. Users may use the annotation feature of user interface to track changes to the cells of table although no change in the values is necessary in order to enter annotations. In one embodiment user interface may present an auditing option to users wherein when the auditing option is selected planning application automatically records an annotation upon all changes to the data. Likewise user A can disable the auditing option and planning application will accordingly stop automatically recording annotations for changes to the data.

In the example of user A has already entered a comment for cell and user B has requested to enter an additional comment. User interface presents an annotation entry window A that is very similar to annotation entry window . For example annotation entry window A includes user identifier A value identifier A comment box A path field A and filename box A each of which may perform substantially similar functions to their respective counterparts in annotation entry window . In addition annotation entry window A presents annotation history box that presents previously entered annotations. In the example of annotation history box presents the annotation previously entered by user A. In one embodiment when the text for annotation history box exceeds the size of box user interface may include scroll buttons on the side annotation history box not shown in order for user B to view the entire annotation history.

When user B enters a comment in comment box A and selects OK button A planning application will save the new annotation along with previous annotations in annotation table . In the example of user B has entered the comment Please check the order history to confirm additional units. I believe it is only 400 additional units. 

When a user such as user A positions cursor over a cell in table that has an annotation user interface may automatically display tooltip . For a cell that includes multiple comments tooltip may include multiple partitions e.g. window A and B. In the example of window A includes user identifier A that corresponds to user indication A of annotation entry window A and value identifier A that corresponds to value indication A of annotation entry window A. Window B includes user identifier B that corresponds to user indication of annotation entry window and value identifier B that corresponds to value indication of annotation entry window . Moreover windows A B include respective date fields A B that indicate the respective dates and times at which the respective annotations were entered.

Comment list displays a list of annotations available to user A. User A may narrow the list of annotations using commentary filter and commentary view . Commentary filter may include a variety of filtering options for user A. In the example of commentary filter presents three check boxes User Annotation Audit and Attached Document. When the boxes are checked annotations satisfying the respective filtering criteria are displayed. For example if user A checks the Attached Document filter only annotations that include an attached document will be displayed. In other embodiments other filtering criteria may be presented. For example in another embodiment commentary filter may present a text box to users as well as a Search By drop down menu not shown user A may select User Name from the Search By drop down menu and type in the user name STC to view only annotations from user STC. Those skilled in the art will appreciate that other types of searches and filtering functions may be presented.

User A may also narrow the list of annotations using commentary view . In the example of commentary view displays two radio buttons that allow user A to view either all available annotations i.e. All Pages or only annotations regarding the current sheet i.e. Current Page . Other embodiments may present other options as well. For example an alternative embodiment may present radio buttons that allow user A to view all annotations relevant to specific dimensions or specific data cubes.

User A may select an annotation from annotation list . Commentary browser may illustrate the selected annotation by highlighting the selected annotation as shown in . Once user A has selected an annotation commentary browser may display the values of the annotation in comment box . For example comment box may display the user identification of the user who entered the annotation the date the annotation was entered and the comment associated with the annotation. Moreover comment box may include a link to the sheet for which the comment was entered. Link enables user A to quickly and easily retrieve the context in which the annotation was entered. That is user A may select link by positioning cursor over link and pushing a button on computing device A such as a left mouse button. Upon selecting link user interface may present the sheet in which the annotation was entered to user A.

User A may also perform other functions with commentary browser . For example user A may delete an annotation using Delete button . Once user A has selected an annotation from annotation list user A may select Delete button by for example positioning cursor over Delete button and pushing a button on computing device A such as a left mouse button. In response to a user selecting Delete button planning application may remove the selected annotation from annotation tables . When planning application connects to enterprise system planning application may upload updated annotation tables that do not include the deleted annotation therefore the deleted annotation will no longer be present either on computing device A or anywhere in enterprise system .

In a similar fashion user A may print one or more annotations from annotation list by selecting one or more annotations from annotation list and selecting Print button . Computing device A may transmit data to a printing device not shown in response to user A selecting Print button wherein the data sent to the printing device may include instructions to print the selected annotation s . Likewise user A may select Close button to close commentary browser and to return to the sheet view of user interface .

Various embodiments of the invention have been described. These and other embodiments are within the scope of the following claims.

