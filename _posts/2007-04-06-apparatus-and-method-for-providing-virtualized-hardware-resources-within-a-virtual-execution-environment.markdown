---

title: Apparatus and method for providing virtualized hardware resources within a virtual execution environment
abstract: Embodiments described are generally directed to a system and method for providing virtualized hardware resources within a virtual execution environment. In one embodiment, it is determined whether an operating system (OS) is a guest OS running within a virtual execution environment of a host platform. If an OS is determined to be a guest OS within a virtual execution environment, a virtual driver is provided for the virtual execution to fetch host hardware initiator information from a host server via a virtualization layer. In one embodiment, no corresponding guest driver is available to the virtual execution environment. In one embodiment, the virtualization layer provides virtualized hardware resources, including the virtual driver, for a virtual execution environment. Using the host hardware initiator information, in one embodiment, one or more virtual storage devices may be created within the host attached storage of the host platform. Other embodiments are described and claimed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07793307&OS=07793307&RS=07793307
owner: Network Appliance, Inc.
number: 07793307
owner_city: Sunnyvale
owner_country: US
publication_date: 20070406
---
At least one embodiment of the invention pertains to storage systems and more particularly to a method and apparatus for providing virtualized hardware resources within a virtual execution environment.

A storage server is a special purpose processing system used to store and retrieve data on behalf of one or more client processing systems clients . A storage server can be used for many different purposes such as to provide multiple users with access to shared data or to backup mission critical data.

A file server is an example of a storage server. A file server operates on behalf of one or more clients to store and manage shared files in a set of mass storage devices such as magnetic or optical storage based disks or tapes. The mass storage devices may be organized into one or more volumes of Redundant Array of Inexpensive Disks RAID . Another example of a storage server is a device which provides clients with block level access to stored data rather than file level access or a device which provides clients with both file level access and block level access. A storage server may provide direct attached network attached storage for a host platform that is logically partitioned. As described herein network attached storage may refer to data access to a storage server over a network such as a storage area network SAN. 

A virtual machine architecture logically partitions a physical machine such that the underlying hardware of the machine is time shared and appears as one or more independently operating virtual machines VMs . A virtual machine monitor VMM creates the VM and runs on a computer to facilitate for other software the abstraction of one or more VMs. Each VM may function as a self contained platform running its own operating system OS and application software. The software running in a VM is collectively referred to herein as guest software. In addition resources available within the VM may be referred to herein as guest resources. 

The guest software expects to operate as if it were running on a dedicated computer rather than in a VM. That is the guest software expects to control various events and have access to hardware resources on the host platform e.g. physical machine which maybe referred to herein as host hardware resources. The host hardware resources of the physical machine may include one or more processors resources resident on the processors e.g. control registers caches and others memory instructions residing in memory e.g. descriptor tables and other resources e.g. input output devices host attached storage network attached storage or other like storage that reside in the physical machine host platform or are coupled to the host platform such as a file storage server. The events may include interrupts exceptions platform events e.g. initialization INIT or system management interrupts SMIs and the like.

Hence a VMM presents to other software guest software guests or simply guest the abstraction of one or more VMs. The VMM can provide the same or different abstractions to the various guests. Each guest expects the full facilities of the host platform presented in the VM to be available for its use. For example the guest expects to have access to all registers caches structures I O devices memory direct attached storage network attached storage and the like according to the architecture of the processor and platform presented in the VM.

However when a storage server or a file server is part of a host platform which is partitioned or subdivided to provide one or more virtual execution environments such as VMs hardware partitions or the like the ability of guest software to access the storage server may be restricted within the virtual execution environment. In fact unless the storage server file server is accessible virtualized within the virtual execution environment guest OS control over the storage server file server is prohibited. As a result access to host hardware resources that may be available from a data storage application when running within a non virtualized host platform may not be available when such application operates within a virtual execution environment such as a VM. For example access to SAN commands of host network attached storage may not be available within the virtual execution environment.

Embodiments described are generally directed to a system and method for providing virtualized hardware resources within a virtual execution environment. In one embodiment it is determined whether an operating system OS is a guest OS running within a virtual execution environment of a host platform. If an OS is determined to be a guest OS within a virtual execution environment a virtual driver is provided for the virtual execution to fetch host hardware initiator information from a host server via a virtualization layer. In one embodiment no corresponding guest driver is available to the virtual execution environment. In one embodiment the virtualization layer provides virtualized hardware resources according to the host hardware resources available from the host platform including a virtual driver for the virtual execution environment. Using the host hardware initiator information in one embodiment one or more virtual storage devices may be created within the host attached storage of the host platform. Other embodiments are described and claimed.

A method and apparatus for providing virtualized hardware resources within a virtual execution environment are described. As described in greater detail below in certain embodiments host hardware resources of a host platform are unavailable within a virtual execution environment. As described herein a host hardware resource which is initially unavailable within a virtual execution environment may be made available to the virtual execution environment by providing a virtualized hardware resource. The virtualized hardware resource may be referred to herein as a guest hardware resource guest resource or guest hardware. In one embodiment a virtualization layer enables virtualization of hardware resources by providing an intermediate layer between a virtualization execution environment and the host hardware resources of the host platform.

As described herein an execution environment refers to various host hardware resources of a host platform as well as the various resources attached to the hardware platform and available to a software application during execution. As described herein a virtual execution environment may refer to various partitions as well as the various virtual machines or other like shared resources of a host platform. For ease of description the term aggregate is sometimes used when describing the logical aggregation of physical storage. As described herein the term virtual machine monitor VMM may include but is not limited to a virtual machine VM server partition server manager hypervisor or other like partition VM manager.

As noted above the techniques for providing virtualized hardware resources within a virtual execution environment introduced herein can be implemented in a storage server. shows a simple example of a network storage environment which incorporates a storage server . Note however that the techniques for providing virtualized hardware resources within a virtual execution environment introduced herein are not limited to use in network storage systems. For example the technique can be adapted for use in other types of storage systems such as storage systems that operate on behalf of one or more clients to store and manage shared files in a set of mass storage devices such as magnetic or optical storage based disks or tapes storage systems that provide clients with block level access to stored data storage systems that provide access to stored data or the like.

Storage server is coupled locally to a storage subsystem which includes a set of mass storage devices and to a set of host platforms . . . N through a network such as a local area network LAN . As described herein the term communicably coupled may refer to a direct connect a network connections or other like connection to enable communication between devices. In one embodiment host platforms are communicably coupled to storage server to enable access to host direct network attached storage such as storage subsystem .

Referring again to each of the host platforms may be for example a conventional personal computer PC workstation server system or the like. Storage subsystem is managed by storage server . For example storage server receives and responds to various read and write requests from the host platforms directed to data stored in or to be stored in storage subsystem . The mass storage devices in storage subsystem may be for example conventional magnetic disks optical disks such as compact disks read only memory CD ROM or digital versatile video disks DVD based storage magneto optical MO storage or any other type of non volatile storage devices suitable for storing large quantities of data.

Storage server may have a distributed architecture for example it may include a separate N network blade and D disk blade not shown . In such an embodiment the N blade is used to communicate with host platforms while the D blade includes the file system functionality and is used to communicate with the storage subsystem . The N blade and D blade communicate with each other using an internal protocol. Alternatively storage server may have an integrated architecture where the network and data components are all contained in a single box. The storage server further may be coupled through a switching fabric to other similar storage servers not shown which have their own local storage subsystems. In this way all of the storage subsystems can form a single storage pool to which any client of any of the storage servers has access.

As shown in each host platform includes a virtual execution environment . . . N . As shown in virtual execution environment each run a separate operating system OS and may be referred herein as a guest OS . The operating systems or OS of virtual execution environment are referred to as guest operating systems since they receive a limited view of the hardware H W resources . . . N which may include CPU memory I O devices direct network attached storage or other hardware resources such as for example storage server as shown in .

As shown in host platforms are illustrated as N node host platforms for loading guest OS . Representatively host platforms are illustrated according to a stand alone virtual machine monitor VMM configuration including VMMs . . . N. As described above a virtual machine monitor VMM creates a virtual execution environment or VM that runs on the host platform to facilitate for the guest OS or other software applications the abstraction of one or more VMs. As described herein a VMM may be referred to as a VM server as shown in .

As illustrated in each virtual execution environment may include a data storage application DSA to enable certain operations on storage server . In one embodiment data storage application or DSA may enable backup verify and restore data functionality on storage server . The DSA application may also provide logical unit number LUN provisioning and snap shot management for storage devices via storage server . However to perform such functionality DSA requires access to unavailable host hardware resources such as a hardware initiator to initiate desired functionality within storage server . As described herein the term hardware initiator may include but is not limited to an application specific integrated circuit ASIC card or other like logic to enable access to the host hardware resources such as direct network attached storage.

As described herein the storage devices made available by a host storage server such as storage server shown in may be referred to by as a logical unit number LUN. As described herein a LUN may refer to a logical data container that looks like a disk to a host client but which actually may be distributed across multiple disks by storage server . As further described herein a virtual storage device disk may refer to the virtualization or appearance of a local disk for applications that require locally or direct attached storage. As further described herein virtual storage devices or virtual disks may be referred to as units of storage that are designated for use by one or more host platform as managed by a storage server such as host storage server shown in .

As further described herein virtual disks are referred to as logical unit numbers or LUNs when accessed over an Internet i small computer system interface SCSI iSCSI fiber channel protocol FCP or other like storage access protocols. The FCP protocol may facilitate storage access through fiber channel host bus adaptors HBAs and storage area networks SANs. The iSCSI protocol provides storage access when the host storage server is coupled to the host platform using Gigabit Ethernet or other like storage access protocol.

As mentioned above a VMM such as VMM may restrict certain hardware resources of the host hardware such as host hardware . As a result corresponding guest hardware resources are not available virtualized within virtual execution environment . Accordingly each VMM may include a virtualization layer VL . In one embodiment virtualization layer provides one or more virtualized hardware resources for each virtual execution environment to enable DSA application with access to storage server to enable desired user requested functionality. In one embodiment DSA application is a storage utility that enables the LUNs or data storage devices managed by a storage server to appear as locally attached physical disks of a host platform. Further details regarding DSA application as well as virtualization are further illustrated with reference to .

Processors are the central processing units CPUs of a storage server e.g. storage sever shown in and thus control the overall operation of the storage server. In certain embodiments processors accomplish this by executing software stored in memory . Processor may be or may include one or more programmable general purpose or special purpose microprocessors digital signal processors DSPs programmable controllers application specific integrated circuits ASICs programmable logic devices PLDs or the like or a combination of such devices.

Memory is or includes the main memory of storage server . Memory represents any form of random access memory RAM read only memory ROM flash memory or the like or a combination of such devices. Memory stores among other things operating system of storage server in which the capacity guarantee techniques introduced above can be implemented.

Also connected to processors through the system interconnect are one or more internal mass storage devices a storage adapter and a network adapter . Internal mass storage devices may be or include any conventional medium for storing large volumes of data in a non volatile manner such as one or more magnetic or optical based disks. The storage adapter allows storage server to access storage subsystem shown in and may be for example a Fibre Channel adapter or a Small Computer System Interface SCSI adapter. Network adapter provides storage server with the ability to communicate with remote devices such as the clients shown in over a network and may be for example an Ethernet adapter.

In one embodiment operating system includes a number of network drivers to process client requests. The illustrated embodiment includes Ether channel driver Fiber Distributed Data Interface FDDI driver Asynchronous Transfer Mode ATM driver and gigabit Ethernet driver . In an alternative embodiment operating system may include more network drivers fewer network drivers and or different network drivers.

Operating system includes an implementation of Internet Protocol IP . In an embodiment operating system includes implementations of both Transmission Control Protocol TCP and User Datagram Protocol UDP . In addition the network layer may include implementations of Remote Procedure Call RPC and NetBIOS over TCP IP . Operating system may also implement one or more of various higher level network protocols such as Network File System NFS Common Internet File System CIFS and or Hypertext Transfer Protocol HTTP .

File system is application layer software that manages the directory structure e.g. the hierarchical structure of the data stored in storage subsystem . For example file system manager manages read write operations on the data stored in storage subsystem e.g. executes read write operations on the disks in response to client requests . In one embodiment file system manager includes storage management module . In an alternative embodiment storage management module is implemented in a different layer of operating system and or is distributed across more than one layer and or more than one module of operating system . As is further described below with reference to storage management module provides storage area network SAN module to configure the common pool of storage provided by aggregate .

Operating system includes volumes V and and aggregate . In one embodiment volumes are logical data containers that can be sized resized managed and moved independently from the underlying physical storage. In the embodiment illustrated in volumes decouple what was in conventional volumes a direct connection between volumes and physical associated physical disks. This decoupling of virtual volumes and physical disks vastly increases the flexibility and storage efficiency of operation system .

In contrast to conventional systems the underlying storage for a volume is no longer directly provided by disks. Instead volumes obtain storage from aggregate . The storage for Aggregate in turn is provided by storage subsystem . In one embodiment storage access manager determines where within the physical storage data is written. Storage access manager implements a higher level disk storage protocol such as RAID redundant array of independent disks while the storage driver not shown implements a lower level storage device access protocol such as Fiber Channel Protocol FCP iSCSI or other like storage access protocol which may not be virtualized for made accessible to a virtual execution environment by VMM . In one embodiment VL provides virtualized guest hardware resources for the storage access protocols of storage access manager .

Accordingly as described herein a logical unit number LUN may refer to specific volumes for example volumes for storage aggregate as shown in . As further described herein when such volumes are accessed using the FCP storage access protocol the iSCSI storage access protocol for a host bus adaptor or a storage area network the LUN may represent a virtual disk storage device to provide locally attached or direct attached physical storage for applications that require such locally attached storage. In one embodiment DSA application as shown in is a storage utility that enables the volumes to appear as locally attached physical storage disks of host platform . In one embodiment multiple virtual disks may be created from a single volume .

As further shown in host platform includes virtual execution environment or VM which includes guest OS as well as data storage application DSA . In the embodiment illustrated platform initialization software not shown may install data storage application within an execution environment. As part of such installation the initialization software or firmware may determine whether the execution environment is a virtual execution environment. Once determined to be a virtual execution environment a connection may be established with a virtualization layer . Following the connection with virtualization layer user credential may be provided for access to VM server .

In one embodiment a virtual driver is provided for VM to obtain information regarding host hardware resources available from VM server . In one embodiment VL provides virtual driver to acquire information regarding the installed host hardware initiators which are inaccessible to guest OS as well as DSA application of VM . In one embodiment virtual driver fetches information regarding the host hardware initiator s installed on VM server using virtualization layer VL . In one embodiment the data storage application may be for example a SnapDrive application as provided by Network Appliance Inc. of Sunnyvale Calif.

In contrast to conventional environments DSA may provide logical unit number LUN provisioning and snap shot management by accessing a storage server using the host hardware initiator information . Conventionally the guest OS on a virtual machine does not have access to the underlying FCP iSCSI host bus adaptors since the VMM or other VM server abstracts FCP iSCSI HBAs are unvirtualized the underlining hardware. A user of DSA does not see a list of guest hardware initiators as part of a create or connect to LUN functionality of DSA . However by providing virtual driver desired functionality may be provided by accessing the hardware resources of the host platform.

Representatively the host VMM model includes VMM which runs on top of host operating system OS . In a further embodiment one or more of the host platforms as shown in and may be configured according to a hybrid VMM model as shown in . Representatively hybrid VMM model is comprised of service OS and micro hypervisor basic VMM including optimized API . According to the hybrid VMM model micro hypervisor may be responsible for CPU memory resource virtualization and domain scheduling. Service OS may be responsible for VM management and device virtualiization simulation.

In accordance with the embodiments illustrated in virtualization of one or more host hardware resources for a virtual execution may be performed according to any of the host platform configuration shown in or other like configurations to provide non virtualized host platform resources for at least one virtual execution environment. Procedural methods for implementing one or more of the described embodiments are provided below.

Turning now to the particular methods associated with the embodiments are described in terms of computer software and hardware with reference to a flowchart. The methods to be performed by a computing device e.g. a storage server may constitute state machines or computer programs made up of computer executable instructions. The computer executable instructions may be written in a computer programming language or may be embodied in firmware logic. If written in a programming language conforming to a recognized standard such instructions can be executed on a variety of hardware platforms and for interface to a variety of operating systems.

In addition the embodiments are not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the embodiments as described herein. Furthermore it is common in the art to speak of software in one form or another e.g. program procedure process application etc. as taking an action or causing a result. Such expressions are merely a shorthand way of saying that execution of the software by a computing device causes the device to perform an action or produce a result.

Referring again to when a virtual execution environment is identified at process block a virtual driver is provided for the virtual execution environment to obtain information regarding a host hardware resources from a available virtual machine VM server virtual machine monitor VMM or other like partition server via a virtualization layer. As indicated above a virtual machine monitor VMM creates a virtual execution environment or VM that runs on a host platform to facilitate for the guest OS or other software application the abstraction of one or more VM. Accordingly in one embodiment a virtualization layer is provided to enable access to host platform resources by providing virtualized hardware resources to the applications running within the virtualization execution environment.

Referring again to at process block the virtual driver fetches host hardware initiator information using the virtualization layer. At process block the host hardware initiator information is provided to a DSA application. In one embodiment DSA application creates one or more virtual disks within host attached storage of the host platform using the host hardware initiator information. Alternatively if the DSA application is installed within a non virtualized execution environment a hardware initiator of the host platform may be loaded at process block and the creation of the one or more virtual disks at process block is performed using the host hardware interface.

Referring again to at process block a configuration database DB information repository of the execution environment is accessed. Once accessed at process block . it is determined whether a key found within the configuration database DB information repository identifies a guest controller. In one embodiment the configuration database DB information repository is a registry of the Windows OS as provided by Microsoft Corporation of Redmond Wash. When such guest controller is identified at process block the execution environment is identified as a virtual execution environment since guest resources are available within the execution environment that are virtualized provided by a VMM or VM server of the host platform for the virtual execution environment.

At process block the virtualization layer is loaded between the virtual execution environment and the VM server or host platform resources. At process block a connection is requested between the virtualization layer and a web service of the host server. Subsequently process block determines whether supplied user credentials are valid for access to a VM server. Once verified at process block the request connection is established to the web service of the VM server. In one embodiment the web service is for example an application programming interface API of the VM server such as for example a VMWare ESX server version 3.0 as provided by VMWare Inc. of Palo Alto Calif.

At process block the logical unit number LUN is mapped to an initiator group of the virtual execution environment. In one embodiment mapping of the LUN to the initiator group refers to the identification of a guest controller from which the LUN may be accessed from the virtual execution environment. At process block the LUN may be provisioned to the guest OS of the virtual execution environment using the identified guest controller of the virtual execution environment. At process block a file system may be mounted within a partition of a host data storage device to generate one or more virtual disks that are accessible to the virtual execution environment using for example the guest OS. As a result the LUN may appear as a locally attached disk of the virtual execution environment.

In one embodiment the initiator group refers to an OS device name of a virtual controller provided by a VMM server of the host platform. For example the VM server may provide virtual FCP SCSI controllers or other like HBA storage access protocol controller which may be referred to herein as guest controllers. In one embodiment while creating a write device mapping for a newly created LUN the VM server may specify a controller key of the virtual SCSI FCP controller from which the LUN is accessible. In one embodiment this controller key is returned so that the associated SCSI port and SCSI device can be scanned so that the newly created LUN becomes available to the DSA application which may be referred to herein as LUN provisioning. In other words when a virtual disk is generated for a guest OS the VM server provides a data object that has a unique key that distinguishes a guest controller from other devices in the same virtual machine.

In one embodiment the generation of a virtual disk provides a controller key which denotes a virtual SCSI FCP controller virtual disk. Using this controller key the controller from which the virtual device is accessible can be obtained. In one embodiment such controllers may appear in information repository or configuration database as SCSI ports. In one embodiment as part of DSA installation each guest controller of the virtual machine is enumerated to enable each host hardware initiator port to be associated with each SCSI port. Based on such association the controller key would determine the associated SCSI port and SCSI device such that a guest bus can be rescanned to provide the guest OS with access to the generated virtual disk.

At process block a mapping file is generated. In one embodiment the mapping file includes information management metadata to redirect access from the one or more virtual disks to physical devices of the host direct network attached storage. At process block a guest bus may be scanned on the guest OS to detect the host data storage device. In one embodiment the lack of a guest hardware initiator requires enumeration of the ports coupled to or available to the virtual execution environment. Accordingly based on such scanning the host data storage device in which the LUNs are generated may be detected to enable access thereof to the guest OS of the virtual execution environment. At process block a partition is created on the host data storage device. At process block a file system is mounted on the host data storage device to support the one or more virtual disks.

Elements of embodiments of the present invention may also be provided as a machine readable medium for storing the machine executable instructions. The machine readable medium may include but is not limited to flash memory optical disks compact disks read only memory CD ROM digital versatile video disks DVD ROM random access memory RAM erasable programmable read only memory EPROM electrically erasable programmable read only memory EEPROM magnetic or optical cards propagation media or other type of machine readable media suitable for storing electronic instructions. For example embodiments of the invention may be downloaded as a computer program which may be transferred from a remote computer e.g. a server to a requesting computer e.g. a client by way of data signals embodied in a carrier wave or other propagation medium via a communication link e.g. a modem or network connection .

It should be appreciated that reference throughout this specification to one embodiment or an embodiment means that a particular feature structure or characteristic described in connection with the embodiment is included in at least one embodiment of the present invention. Therefore it is emphasized and should be appreciated that two or more references to an embodiment or one embodiment or an alternative embodiment in various portions of this specification are not necessarily all referring to the same embodiment. Furthermore the particular features structures or characteristics may be combined as suitable in one or more embodiments of the invention.

Similarly it should be appreciated that in the foregoing description of embodiments of the invention various features are sometimes grouped together in a single embodiment figure or description thereof for the purpose of streamlining the disclosure aiding in the understanding of one or more of the various inventive aspects. This method of disclosure however is not to be interpreted as reflecting an intention that the claimed subject matter requires more features than are expressly recited in each claim. Rather as the following claims reflect inventive aspects lie in less than all features of a single foregoing disclosed embodiment. Thus the claims following the detailed description are hereby expressly incorporated into this detailed description with each claim standing on its own as a separate embodiment of this invention.

