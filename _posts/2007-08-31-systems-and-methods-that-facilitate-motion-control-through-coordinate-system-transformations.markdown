---

title: Systems and methods that facilitate motion control through coordinate system transformations
abstract: The subject invention relates to systems and methods that facilitate motion between different coordinate systems in an industrial control environment. The systems and methods accept data in one coordinate system and transform the data to a different coordinate system. Suitable transformations include instructions that transform between Cartesian, pre-defined non-Cartesian, and user-defined non-Cartesian coordinate systems, including transformations between a non-Cartesian coordinate system to another non-Cartesian coordinate system. Such transformations can be programmed in essentially any industrial control language and can be seamlessly integrated with the control environment. The systems and methods can be utilized to generate a motion instruction that includes, among other information, source and target coordinate systems and the transformation between them. The subject invention provides for connecting various systems together through respective motion instructions, wherein a motion of a source system is mapped to a coordinate system of a target system and the target system is moved accordingly.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08000838&OS=08000838&RS=08000838
owner: Rockwell Automation Technologies, Inc.
number: 08000838
owner_city: Mayfield Heights
owner_country: US
publication_date: 20070831
---
This application is a continuation of U.S. patent application Ser. No. 10 955 068 filed Sep. 30 2004 now U.S. Pat. No. 7 266 425 and entitled SYSTEMS AND METHODS THAT FACILITATE MOTION CONTROL THROUGH COORDINATE SYSTEM TRANSFORMATIONS which is related to co pending U.S. patent application Ser. No. 10 838 472 filed on May 4 2004 and entitled SYSTEMS AND METHODS FOR INTEGRATED MULTI AXIS COORDINATION and to U.S. patent application Ser. No. 10 853 674 filed on May 25 2004 issued on May 5 2009 as U.S. Pat. No. 7 529 599 and entitled SYSTEMS AND METHODS FOR COORDINATION MOTION INSTRUCTIONS the entireties of which are incorporated herein by reference.

The subject invention relates to industrial control systems and more particularly to systems and methods that provide motion coordination between different coordinate systems through pre defined and user defined transforms written in industrial control languages.

Industrial controllers are special purpose processing devices used for controlling e.g. automated and semi automated industrial processes machines manufacturing equipment plants and the like. A typical controller executes a control program or routine in order to measure one or more process variables or inputs representative of the status of a controlled process and or effectuate outputs associated with control of the process. The inputs and outputs can be digital and or analog assuming a continuous range of values. A typical control routine can be created in a controller configuration environment that has various tools and interfaces whereby a developer can construct and implement a control strategy using industrial and conventional programming languages or graphical representations of control functionality. Such control routine can be downloaded from the configuration system into one or more controllers for implementation of the control strategy in controlling a process or machine.

Measured inputs received from a controlled process and outputs transmitted to the process can pass through one or more input output I O modules in a control system. Such modules can serve in the capacity of an electrical interface between the controller and the controlled process and can be located local or remote from the controller. Inputs and outputs can be recorded in memory. The input values can be asynchronously or synchronously read from the controlled process by one or more input modules and output values can be written directly to memory by a processor for subsequent communication to the process by specialized communications circuitry. An output module can interface directly with a controlled process by providing an output from memory to an actuator such as a motor drive valve solenoid and the like.

During execution of the control routine values of the inputs and outputs exchanged with the controlled process can pass through memory. The values of inputs in memory can be asynchronously or synchronously updated from the controlled process by dedicated and or common scanning circuitry. Such scanning circuitry can communicate with input and or output modules over a bus on a backplane or network. The scanning circuitry can also asynchronously or synchronously write values of the outputs in memory to the controlled process. The output values from the memory can be communicated to one or more output modules for interfacing with the process. Thus a controller processor can simply access the memory rather than needing to communicate directly with the controlled process.

In distributed control systems controller hardware configuration can be facilitated by separating the industrial controller into a number of control elements each of which performs a different function. Particular control modules needed for the control task can then be connected together on a common backplane within a rack and or through a network or other communications medium. The control modules can include processors power supplies network communication modules and I O modules exchanging input and output signals directly with the controlled process. Data can be exchanged between modules using a backplane communications bus which can be serial or parallel or via a network. In addition to performing I O operations based solely on network communications smart modules exist which can execute autonomous logical or other control programs or routines. Various control modules of a distributed industrial control system can be spatially distributed along a common communication link in several locations. Certain I O modules can thus be located proximate to a portion of the control equipment and away from the remainder of the controller. Data can be communicated with these remote modules over a common communication link or network wherein all modules on the network communicate via a communications protocol.

In a typical distributed control system one or more I O modules are provided for interfacing with a process. The outputs derive their control or output values in the form of a message from a master or peer device over a network or a backplane. For example an output module can receive an output value from a processor via a communications network or a backplane communications bus. The desired output value is generally sent to the output module in a message. The output module receiving such a message will provide a corresponding output analog or digital to the controlled process. Input modules measure a value of a process variable and report the input values to another device over a network or backplane. The input values can be used by a processor for performing control computations.

Such control systems can be employed to control motion related to machines such as robots. Many of these systems include a source that commands motion in a target system. For example control software the source can be utilized to move a machine the target . In many instances a first machine is a source that when moved invokes a corresponding move in a target machine. In this instance the first machine can be moved by direct command or manually. In general source and target systems operate within distinct coordinate systems. For example control software may display and input motion related information in a Cartesian coordinate system whereas a machine may move in a non Cartesian pre defined or user defined coordinate system. In many of these systems transforms are utilized to map a position in a source coordinate system to a position in a target coordinate system such that a movement actual or a command in the source system can be propagated to the target system. These transforms typically are provided by a vendor of the control system. However conventional control systems either do not provide for user defined transforms or such user defined transforms are written in C assembly Pascal Basic and the like that are not easily integrated or user modified after being integrated within control software.

The following presents a simplified summary of the invention in order to provide a basic understanding of some aspects of the invention. This summary is not an extensive overview of the invention. It is intended neither to identify key or critical elements of the invention nor to delineate the scope of the invention. Its sole purpose is to present some concepts of the invention in a simplified form as a prelude to the more detailed description that is presented later.

The subject invention relates to systems and methods that provide for multi axis e.g. multi dimensional motion coordination between different coordinate systems in the industrial control environment. The subject invention provides a set of pre defined system transformations and enables a user to program add user defined transformations. Both pre defined and user defined transformations can be programmed in essentially any language including industrial control languages. This capability provides for novel advantages over conventional systems which typically include coordinate system transforms that are hard coded in C Basic assembly Pascal and the like. Allowing user defined transformations to be programmed in industrial control languages provides for seamless integration and synchronization of user defined transformations with a control system and facilitates ease of user modifications.

In general a user can specify e.g. configure a geometry for a source coordinate system and a target coordinate system by setting corresponding coordinate system type attributes of a coordinate system tag wherein a suitable transformation can be specified to transform a position in the source coordinate system to a position in the target coordinate system and vice versa. It is to be appreciated that suitable transformations include instructions that transform Cartesian coordinates to different Cartesian coordinates Cartesian coordinates to non Cartesian pre defined and user defined coordinates non Cartesian coordinates of one coordinate system pre defined and user defined to non Cartesian coordinates of a different coordinate system pre defined and user defined and non Cartesian coordinates pre defined and user defined to Cartesian coordinates.

Upon selecting the source and target coordinate systems a motion instruction can be programmed that includes the source and target coordinate systems and a relationship e.g. based on the transform there between. This motion instruction can be employed to define a relationship between source and target systems. For example when a motion is commanded in the source coordinate system the position of the source coordinate system is transformed to the target coordinate system and the target system is positioned accordingly. In another example when a motion occurs in the target coordinate system the position of the target coordinate system can be transformed to the source coordinate system to position the source system accordingly.

In general motion associated with many traditional machines is achieved in Cartesian coordinates. These Cartesian machines are usually characterized by multiple linear axes set at right angles to each other. Due to their construction Cartesian machines efficiently move in Cartesian coordinate space along Cartesian paths like lines and circles at intuitive speeds such as inches second . More often than not however they do not allow for programmable orientation of their tools . Machines that mimic human motion or allow you to position and orient their tools are generally referred to as robots. Robots are usually characterized by multiple rotary axes e.g. joints connected by linear links or axes. Due to their construction many robots move more easily in compound arcs at non intuitive speeds such as inch degrees second and not along Cartesian paths. Like human arms most robots possess great flexibility of motion. The subject invention provides a novel approach to control robot motion through a Cartesian or other coordinate system wherein motion is transformed from the Cartesian coordinate system to a pre defined or user defined non Cartesian coordinate system native to the robot. The transform utilized to achieve the foregoing can be user generated user integrated and written in any industrial control language.

To the accomplishment of the foregoing and related ends the invention then comprises the features hereinafter fully described. The following description and the annexed drawings set forth in detail certain illustrative aspects of the invention. However these aspects are indicative of but a few of the various ways in which the principles of the invention can be employed. Other aspects advantages and novel features of the invention will become apparent from the following detailed description of the invention when considered in conjunction with the drawings.

As utilized in this application terms component system controller module device manager and variants thereof are intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a server and the server can be a component. One or more components can reside within a process and or thread of execution and a component can be localized on one computer and or distributed between two or more computers.

As utilized herein transform transformation and variants thereof generally refer to mapping or converting one or more coordinates in a coordinate system e.g. related to a position in space to one or more coordinates in another coordinate system. Examples of mappings that can be employed in accordance with the subject invention include but are not limited to transforming a position in a Cartesian coordinate system to a position in a different Cartesian coordinate system a position in a Cartesian coordinate system to a position in a non Cartesian coordinate system transforming a position in a non Cartesian coordinate system to a position in another non Cartesian coordinate system and transforming a position in a non Cartesian coordinate system to a position in a Cartesian coordinate system. It is to be understood that a non Cartesian coordinate system can be a pre defined non Cartesian coordinate system or a user defined non Cartesian coordinate system. A pre defined non Cartesian coordinate system typically refers to a coordinate system provided with the systems and methods described herein and can be considered a system non Cartesian coordinate system. A user defined coordinate system refers to a non Cartesian coordinate system that a user of the systems and methods creates. A user defined non Cartesian coordinate system can be created through the subject invention stored with pre defined non Cartesian coordinate systems and utilized as if they were pre defined non Cartesian coordinate systems.

The subject invention relates to system and methods that facilitate motion coordination between coordinate systems through various coordinate system transformations including user defined transformations written in industrial control languages e.g. IEC languages for user defined non Cartesian coordinate systems. Conventionally coordinate system transforms are hard coded in C Basic assembly Pascal and the like and thus are not easily integrated within a motion control system. The subject invention provides a novel technique that enables a user to program a non Cartesian coordinate system and seamlessly integrate this user defined coordinate system and associated transformation into the motion control system. Examples of suitable programming languages that can be employed in accordance with aspects of the subject invention include structured text ST sequential function chart SFC functional block diagram FBD instruction list IL and ladder diagram LD . However other languages such as C C C Basic assembly Pascal and the like can be utilized if desired. It is to be appreciated that these languages can be invoked via a routine and an add on instruction e.g. through a JXR for example.

The systems and methods utilize a coordinate transformation component that accepts data defined in a Cartesian coordinate system and transforms it to data in a different Cartesian coordinate system and or a non Cartesian coordinate system e.g. pre defined and user defined . In addition the system and methods can accept data in a non Cartesian coordinate system e.g. pre defined and user defined and transform it to data in a different non Cartesian coordinate system e.g. pre defined and user defined or a Cartesian coordinate system. The foregoing can be achieved through a coordinate system transformation which can be created in essentially any language including industrial control languages. In general a user can specify source and target coordinate systems e.g. via setting coordinate system type attributes of a coordinate system tag whereby a motion instruction can be generated that denotes the source and target coordinate systems and a transformation to map from the source to the target coordinate system. Then when a motion is commanded in the source coordinate system the position of the source coordinate system can be transformed to the target coordinate system and the target system can be positioned accordingly.

The coordinate transformation component can be utilized when controlling motion movements for example in connection with a machine such as a robot e.g. a robotic arm or similar machine that automates tasks such as placing items cutting objects welding gluing etc. For example a user utilizing industrial control software can input a next new position for the machine. This input can be provided in a coordinate system selected by the user. However actual movement of the machine may be achieved in a different coordinate system. In this example the coordinate transformation component can be utilized to convert the user provided position in one coordinate system to a position in the native coordinate system utilized by the machine which may be different. Once mapped the machine can move to a new position based on its native coordinate system.

Although this example depicts a single transformation from user control software to machine movement it can be appreciated that more than one coordinate system transformations may occur. For example a first transformation can occur between a programming space and a positioning space and a second transformation can occur between the positioning space and the joint space. In another example a system may include a series of machines wherein motion in any one of the machines invokes motion in the remaining machines. Respective machines may move based on different coordinate systems and thus a coordinate system transformation can be utilized to facilitate mapping a movement in one machine to a movement in one or more other machines. An example of a system that utilizes multiple transformations is provided in detail below in connection with .

In addition to commanded movement from the control software the machine can be manually e.g. via human interaction moved or commanded to move through an alternative means such as instructions provided outside of the control software e.g. via a serial port . When such movements occur the coordinate transformation component can be utilized to map actual machine movement in the machine s coordinate system to movement in the coordinate system utilized by the user at the control software. The transformation can be employed to update the control software with a current position of the machine. Thus the user and the control software can be provided with a current position of the machine. Similar to position transformations from control software coordinate system space to machine coordinate system space position transformations from machine coordinate system space to user coordinate system space may include intermediate transformations. For example a first transformation can occur between a joint space and a positioning space and a second transformation can occur between the positioning space and a programming space. Typically a different transformation is utilized depending on the direction of the conversion for example one transformation is utilized when transforming coordinate systems from control software to machine and another transformation is utilized when transforming coordinate systems from machine to control software.

The transformation bank can store transformation algorithms e.g. instructions utilized by the coordinate transformation component . As noted above many conventional coordinate system transforms are hard coded in C Basic assembly Pascal etc. whereas the subject invention enables a user to program coordinate system with any IEC language. This novel approach to creating user defined coordinate systems in IEC languages provides flexibility and results in synchronization between the user defined coordinate systems transformations and the motion control system.

The system includes an interface . The interface can be a human interface and or part of an industrial control programming environment e.g. an application program . As such a programmer can utilize the interface to select define source and target coordinate systems. By way of example a programmer who desires to control motion associated with a machine can interact with the interface and set the source system and target systems. Upon selection the interface can present available transformations. If a transformation for the conversion between source and target coordinate systems exists the interface can generate an instruction that at least includes an entry that specifies the source system s coordinate system an entry that specifies the target system s coordinate system and an entry that specifies the transformation between the source system s coordinate system and the target system s coordinate system. Other entries within the instruction are described in detail below. In other aspects of the subject invention the user can provide a transformation such as a user defined transformation written in an industrial control language as described herein when a suitable transformation is not already available.

The coordinate transformation component e.g. the coordinate transformation component can transform a first position in a first coordinate system to a second position in a second coordinate system. It is to be appreciated that the first coordinate system can be a source coordinate system and the second coordinate system can be the target coordinate system. Thus when a first position in a source coordinate system is received by the coordinate transformation component a transformation to convert the first position to a second position in the target coordinate system can be obtained from the transformation entry in the instruction . The transform coordination component can obtain this transformation from the transformation bank and convert the first position to the second position . The source system can be control software or a machine under control and the target system can be a machine or control software . Examples of source to target and target to source coordinate system transformations include transformations between Cartesian pre defined non Cartesian and or user defined non Cartesian coordinate systems including between different pre defined non Cartesian coordinate systems and between different user defined non Cartesian coordinate systems as described previously.

It is to be appreciated that the interface can be a graphical user interface GUI a command line interface an Application Programming Interface API an industrial control system environment and the like. As such the interface can provide a region and or means to alter and or manipulate graphical objects e.g. icons structures text boxes etc. in connection with end user applications and or user interfaces. In addition input regions can be provided for entry of parameters arguments etc. that can be utilized to effectuate such entities. Moreover one or more presentation regions can be provided to dynamically present interfaces to the user to provide a preview of any alteration manipulation and or change. The interface can include basic text and or graphic regions that incorporate dialogue boxes static controls drop down menus list boxes pop up menus edit controls combo boxes radio buttons check boxes push buttons and graphic boxes for example. In addition utilities such as vertical and or horizontal scroll bars that facilitate navigation and toolbar buttons to determine whether a region will be viewable hidden minimized etc. can be employed.

The user can interact with at least the aforementioned regions to select and provide information via various devices such as a mouse a roller ball a keypad a keyboard a pen and or voice activation for example. Typically a mechanism such as a push button or an enter key on the keyboard keypad can be employed subsequent to entering textual and or voice information in order to invoke a response. However it is to be appreciated that the invention is not so limited. For example merely highlighting a check box can elicit an action. In another example a command line user interface can be employed to prompt e.g. via a text message on a display and an audio tone the user to perform an action or provide information via alpha numeric input corresponding to an option provided in the prompt or an answer to a question posed in the prompt.

The MCT instruction can be utilized to connect two different coordinate systems in order to allow a user to command motion in a source system wherein the commanded motion indirectly generates motion in a target system. The source and target systems are specified in the source system operand and the target system operand respectively. Commonly the source system is defined in a Cartesian coordinate system and the target system is defined in the machine s native e.g. joint space which typically is a non Cartesian geometry type. The transform connection can be bi directional in that if the user chooses to move in the target system motion will be generated in the source system .

The motion control operand can be associated with various control bits including an enable bit EN a done bit DN an error bit ER and an in process bit IP . In general EN is set when the rung in which the MCT instruction is programmed transitions from false to true and reset when the rung transitions from true to false DN is set when the coordinate transformation has been initiated successfully and reset when the rung transitions from false to true ER is set when the coordinate transformation has not been initiated successfully and reset when the rung transitions from false to true and IP is set when the coordinate transformation has been initiated successfully and reset when the rung transitions from false to true. In addition the MCT instruction can be associated with various error codes.

The orientation operand can define a transformation vector for rotating the source coordinate system into alignment with the target coordinate system. It is to be understood that orientation is a robotic term for directional attitude or offset about a point in Cartesian e.g. 3D space and can be expressed as three ordered rotations commonly known as roll pitch and yaw measured around three axes e.g. Z Y and X of a Cartesian coordinate system. The vector can be a one dimensional array whose dimension is defined by a number of primary axes in a Cartesian representation of the source coordinate system. It is to be appreciated that this dimension can be one e.g. X two e.g. X X three e.g. X X X . . . N e.g. X . . . XN wherein N is an integer greater to or equal than one. In one instance of the subject invention the orientation can include three ordered rotations performed in the following sequence Rotation around X Rotation around X and Rotation around X. Typically the system is configured such that all rotations must be specified in degrees according to the right hand screw rule. However the subject invention is not so limited.

The translation operand can define a linear offset of the source coordinate system relative to the target coordinate system. It is to be understood that translation is a robotic term for a linear movement or offset in Cartesian e.g. 3D space and can describe a distance between two Cartesian points. Commonly this operand is a one dimensional array whose dimension is defined by the number of primary axes in the Cartesian representation of the source coordinate system. For example for a three dimensional system the vector can be specified as X X X wherein these values can be in coordination units of the source coordinate system. In general when both orientation and translation offsets are specified control will apply the orientation offset before the translation offset.

The motion control operand can be associated various control bits including an enable bit EN a done bit DN and an error bit ER . In general EN is set when the rung in which the MCTP instruction is programmed transitions from false to true and reset when the rung transitions from true to false DN is set when the coordinate transformation has been initiated successfully and reset when the rung transitions from false to true and ER is set when the coordinate transformation has not been initiated successfully and reset when the rung transitions from false to true. In addition the MCTP instruction can set one or more error codes.

The orientation operand can define a transformation vector that rotates the source coordinate system into alignment with the target coordinate system. The vector can be a one dimensional array whose dimension is defined by a number of primary axes in a Cartesian representation of the source coordinate system. It is to be appreciated that this dimension can be one e.g. X two e.g. X X three e.g. X X X . . . N e.g. X . . . XN wherein N is an integer greater to or equal than one. In one instance of the subject invention the orientation can include three ordered rotations performed in the following sequence Rotation around X Rotation around X and Rotation around X. Typically the system is configured such that all rotations must be specified in degrees according to the right hand screw rule. However the subject invention is not so limited.

The translation operand can define a linear offset of the source coordinate system relative to the target coordinate system. Commonly this operand is a one dimensional array whose dimension is defined by the number of primary axes in the Cartesian representation of the source coordinate system. For example for a three dimensional system the vector can be specified as X X X wherein these values can be in coordination units of the source coordinate system. In general when both orientation and translation offsets are specified control will apply the orientation offset before the translation offset.

The transform direction operand can indicate whether a forward or inverse transform is executed. In general the forward transform takes a target position and calculates a source position and the inverse transform takes a source position and calculates a target position. The reference position operand can represent the coordinates in either the source or target coordinate system depending on the direction selected for the transform and typically is associated with a known position. This position can be utilized as an input to calculate the transform position. The dimension of the reference position typically matches the dimension of the coordinate system being referenced. The transform position operand can also represent the coordinates in either the source or target coordinate system depending on the direction selected for the transform. However this transform position can represent an unknown position.

The pre defined inverse transforms include transforms for determining a target position in Joint space given a source position in Cartesian space and the pre defined forward transforms include transforms for determining a source position in Cartesian space given a target position in Joint space. As noted previously pre defined transforms can be considered system transformations and are provided with the systems and methods described herein. Examples of transformations that can be stored in the transformation bank include Cartesian Articulated Cylindrical Articulated Independent 2 axes Articulated Dependent 2 axes Polar Cylindrical Articulated Independent 3 axes Articulated Dependent 3 axes SCARA Independent SCARA Dependent Spherical SCARA Independent 4 axes SCARA Dependent 4 axes Articulated Independent 4 axes and Articulated Dependent 4 axes . Graphical representations of several of the axes associated with these transformations are illustrated below in connection with .

The user defined inverse transforms include user programmed transforms for determining a target position in Joint space given a source position in Cartesian space and the user defined forward transforms include user programmed transforms for determining a target position in Cartesian space given a source position in Joint space. User defined transforms are created by users and can be added modified and or removed from the transformation bank . As depicted in the figure a user can employ the interface to add modify and or remove user defined transformations from the region of the transformation bank . It is to be appreciated that various other transforms can be included in the transform bank.

It is to be appreciated that respective coordinate systems and can be different coordinate systems. In additions more than one of the coordinate systems and can be a similar coordinate system. For example in one aspect of the subject invention the coordinate system can be associated with a virtual axis that represents a programming space. Such space is typically where a user specifies a program position. Motion associated with the coordinate system can be straight lines and or circles at intuitive speeds. The coordinate system can also be associated with virtual axes and can represent positioning space. A user can utilize this space to jog command motion to specify points for example for a robot in cylindrical coordinates. The coordinate system can represent joint space or machine space where machine geometry is defined and motion actually occurs. Registration and transform off motion to set left right handedness can be achieved here. Reach speeds can be entirely non linear in this space real servo axes can be connected and over travel checking can be performed. It is to be appreciated that chaining systems as utilized herein is defined as using the output of one system as the input of a subsequent system wherein this concept can be replicated one or more times to extend the length of the chain.

In general the number of source and target coordinate system axes does not have to match. When there are more axes in the coordinate system than the transformation equations require then only the required axes are utilized and axes not required can be ignored. In addition the order of execution of the nodes can be specified for example in a node sequence list wherein all nodes generating an input to a node are executed prior to the execution of that node. Typically the node sequence list is recorded and or stored when the MCT object connection is made. Recording such information ensures this sequencing is enforced. In addition the sequencing does not change as forward and inverse transforms are invoked for example when the direction of motion changes and thus the sequence list will not be re ordered. It is to be appreciated that during an error state movement by the target system can be transformed and utilized to update the source system.

At reference numeral a suitable transform for the conversion of the first position to a second position in a second coordinate system is obtained. As noted above a commanded move invoked with control software commonly is provided as a position in a Cartesian coordinate system whereas the machine s coordinate system commonly is a non Cartesian native coordinate system. Thus when control software controls a machine s movement two different coordinate systems may have to operate together to achieve a commanded move. In many instances the transformation between any two coordinate systems can be defined in a motion instruction which can be set up by a user. In addition the transformation can be from Cartesian to Cartesian coordinate systems from Cartesian to non Cartesian pre defined and user defined coordinate systems non Cartesian pre defined and user defined to Cartesian coordinate systems and from one non Cartesian coordinate system pre defined and user defined to a different non Cartesian coordinate system pre defined and user defined .

At the transformation is utilized to convert the first position in the first coordinate system to the second position in the second coordinate system. In one aspect of the subject invention the transform obtained converts the position in the Cartesian coordinate system to the position in the non Cartesian coordinate system. Similarly when the machine is manually moved the transform converts the position in non Cartesian coordinate system to the position in the Cartesian coordinate system. With many systems both a commanded move and a manual move can occur and thus two different transforms e.g. a forward and an inverse are utilized one that converts Cartesian coordinates to non Cartesian coordinates and one that converts non Cartesian coordinates to Cartesian coordinates. Moreover multiple position transformations can occur when transforming a commanded move to a machine s move and vice versa. For example a commanded move in Cartesian coordinates can be converted to non Cartesian coordinates for an intermediary device wherein the non Cartesian coordinates can be converted to different non Cartesian coordinates and utilized to move the machine. At the converted position is output and utilized to move the machine and or update control software.

At reference numeral a source system moves. Such move can be a commanded move via control software or a source system or a manual move for example a physical move by a user. At an associated motion instruction is utilized to obtain a suitable transformation between the position of the source system and a position of the target system. Such transformations can be stored in transformation bank and can include various transformations between coordinate system e.g. Cartesian and pre defined and or user defined non Cartesian coordinate systems . At reference numeral the transformation is utilized to transform the source position to a target position and at the target position can be utilized move the target system. Where one or more target systems are also source systems the forgoing can be repeated as necessary such that the move by the initial source system is propagated throughout the remaining systems.

What has been described above includes examples of the present invention. It is of course not possible to describe every conceivable combination of components or methodologies for purposes of describing the present invention but one of ordinary skill in the art may recognize that many further combinations and permutations of the present invention are possible. Accordingly the present invention is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims. In particular and in regard to the various functions performed by the above described components devices circuits systems and the like the terms including a reference to a means used to describe such components are intended to correspond unless otherwise indicated to any component which performs the specified function of the described component e.g. a functional equivalent even though not structurally equivalent to the disclosed structure which performs the function in the herein illustrated exemplary aspects of the invention. In this regard it will also be recognized that the invention includes a system as well as a computer readable medium having computer executable instructions for performing the acts and or events of the various methods of the invention. In addition while a particular feature of the invention may have been disclosed with respect to only one of several implementations such feature may be combined with one or more other features of the other implementations as may be desired and advantageous for any given or particular application.

