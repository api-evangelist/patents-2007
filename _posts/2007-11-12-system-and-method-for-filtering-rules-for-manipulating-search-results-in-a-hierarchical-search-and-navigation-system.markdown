---

title: System and method for filtering rules for manipulating search results in a hierarchical search and navigation system
abstract: A method is disclosed for modifying the results of a search performed in a collection of items by a search and navigation system. The method includes receiving a query from a user interface and determining a navigation state, defined by expressions of attribute-value pairs, based on the received query. The user interface accepts both selecting and deselecting of any of the attribute-value pairs in an expression corresponding to a navigation state to obtain an expression corresponding to a different navigation state, and each selection and deselection forms a new query. The method further includes retrieving, from the collection, items associated with the navigation state to form a set of unmodified search results, the set of unmodified search results having an arrangement for presentation to the user. A rule filter that includes a metadata expression is applied to a set of rules, each rule having a trigger, an action, and metadata. The application of the rule filter to the set of rules includes evaluating the metadata expression of the rule filter based on the metadata of each rule and passing rules for which the metadata expression of the rule filter evaluates as logical true. The trigger of each rule passed by the rule filter is evaluated, and the action of each rule for which the trigger of the rule evaluates as logical true is executed to modify the unmodified search results to form modified search results.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07856434&OS=07856434&RS=07856434
owner: Endeca Technologies, Inc.
number: 07856434
owner_city: Cambridge
owner_country: US
publication_date: 20071112
---
The invention relates generally to methods and systems for information retrieval and in particular to methods and systems for filtering rules for manipulating search results in a hierarchical search and navigation system.

Information retrieval from databases of information as a result of a user interface query is an increasingly challenging problem with aggregating amounts of information stored in databases and high demands to access that information. Conventional information search and navigation systems support the ability to supplement or modify query results according to criteria depending on the query the user or other parameters such as the date. For example Google adds sponsored links on top of search results based on query keywords and Amazon suggests items to users based on the profile or the recent purchase history of the user.

A method for manipulating the content of search results in a response to a query in a search and navigation system for a set of items using a plurality of rules is described in U.S. Patent Application Publication No. US 2003 0097357 Ferrari et al. which is incorporated by reference in its entirety. The method uses rules composed of a trigger and one or more actions. Upon evaluation of a trigger for example a trigger based on the entry of a particular query a rule action specifies how the system provides supplemental content or manipulates the content presentation. An interface for modifying one or more rules by an individual performing rules editing is described in U.S. patent application Ser. No. 10 813 871 Ferrari et al. filed Mar. 31 2004 which is incorporated by reference in its entirety.

However wide scale deployment of rules based solutions to search result content modification presents various difficulties. Under certain circumstances maintaining a large set of rules over time managed by more than one individual can result in complicated layers of logic some dependent on short term events such as sales promotions and others representing longer term content management policies or best practices. An approach is needed that addresses the scalability of rules based solutions to content modification.

For ease of presentation materials items and documents are used interchangeably to refer to the collection sometimes referred to as a database or knowledge base being searched. As used herein properties are related to and may be derived from but are generally distinct from objects identified by the foregoing terms. Properties are information bearing descriptors which can include terms extracted from a document however in preferred embodiments a set of properties associated with a document does not encompass the full text of the document. Although the properties are typically associated with the materials beforehand the properties can also be associated at the time the query is being executed especially when the materials are text documents. Embodiments of the invention are applicable to environments incorporating free text searching or selection based navigation or any other technique for specifying a query. Accordingly searching and navigation are at times used interchangeably. The invention has broad applicability and is not limited to certain types of materials or properties.

In one aspect the present invention provides a computer implemented method for modifying the results of a search performed in a collection of items by a search and navigation system. The method includes receiving a query from a user interface and determining a navigation state based on the received query. The navigation state is one of a plurality of navigation states which are defined by expressions of attribute value pairs such that for a first navigation state and a second navigation state there are multiple paths of intermediate navigation states connecting the first navigation state and the second navigation state. One method of navigation through the intermediate navigation states is achieved by a user interface that accepts both selecting and deselecting of any of the attribute value pairs in an expression corresponding to the first navigation state to obtain an expression corresponding to the second navigation state or one of the intermediate navigation states and each selection and deselection forms a new query. The method further includes retrieving from the collection items associated with the navigation state to form a set of unmodified search results. The set of unmodified search results has an arrangement for presentation to the user. The method further includes applying a rule filter that includes a metadata expression to a set of rules. Each rule has a trigger an action and metadata. The application of the rule filter to the set of rules includes evaluating the metadata expression of the rule filter based on the metadata of each rule and passing rules for which the metadata expression of the rule filter evaluates as logical true. The method further includes evaluating the trigger of each rule passed by the rule filter and executing the action of each rule for which the trigger of the rule evaluates as logical true to modify the unmodified search results to form modified search results. The modified search results are presented via the user interface.

Embodiments of the present invention may include one or more of the following features. The rule filter may be received from the user interface as part of the query and applied only during a search based on the query. The rule filter may be retrieved from a file and applied for all received queries.

The rule filter metadata expression may include a metadata property equated to a randomly assigned value that specifies a rule test set and the metadata of at least one of the rules may include a value specifying a rule test set to which the rule belongs. The query may be formed based at least in part on a text input. The query may be received from a user interface that accepts text input in addition to accepting both selection and deselection of attribute value pairs in an expression defining a current navigation state and each text input may form a new query.

The modified search results and the unmodified search results may differ in arrangement. The action of at least one of the rules may include an instruction for sorting the unmodified search results. The modified search results and the unmodified search results may differ by at least one retrieved item. The action of at least one of the rules may include an instruction for aggregating additional search results with the unmodified search results. The additional search results may arise from an additional navigation state specified by the rule action. The additional search results may arise from an additional query specified by the rule action. The action of at least one of the rules may include an instruction for adding at least one of text and graphics to the unmodified search results for presentation to the user.

The rule filter metadata expression may include a metadata property equated to a value specifying a rule state and the metadata of at least one of the rules may include a value specifying a state of the rule. The rule filter metadata expression may include a Boolean expression comprising a first metadata property equated to a value specifying a state of the rule and a second metadata property equated to a value specifying an author of the rule. The metadata of at least one of the rules may include a value specifying a state of the rule and a value specifying an author of the rule. The rule filter metadata expression may include a metadata property equated to a value specifying a merchandising campaign and the metadata of at least one of the rules may include a value specifying a merchandising campaign for which the rule was created. The rule filter metadata expression may include a metadata property equated to a value specifying a geographic region. The metadata of at least one of the rules may include a value specifying a geographic region for which the rule was created.

The search and navigation system which may be implemented in a network server comprises a Database a Search Engine a Rules Engine a Rules Filter Engine and a Rules Repository . These blocks are merely a conceptual representation of the functionality of the system and do not necessarily correspond to separate hardware or software components. The system receives input from the user which can be a free text query or the selection of a navigation link or a combination of these functions and presents the results to the user through the User Interface .

Upon receipt of a new user query the Search Engine determines the corresponding navigation states which as discussed in further detail below are defined by a set of attribute value pairs that specify a set of properties and comprise the set of documents in the collection that share all the specified properties. For example in a database of wines for retail distribution the attribute value pair Type Varietal Red has the value Red which characterizes the attribute Type Varietal and the attribute value pair Origin France has the value France which characterizes the attribute Origin . The conjunction of these two attribute value pairs Type Varietal Red AND Origin France defines a navigation state that comprises all documents that have both of these properties i.e. each document in the navigation state has both properties . In other words the navigation state comprises all French red wines in the database.

The Rules Engine receives a set of rules for performing functions such as modifying the content of the search results from the Rules Filter Engine and determines whether each of the rules will be executed. Each rule comprises a name or rule ID a trigger a set of actions to be performed upon successful evaluation of the trigger and metadata. The trigger identifies conditions that if satisfied cause the rule to be executed for the current query. For example the trigger may specify a particular navigation state to which the rule is applicable. The action of a rule specifies how the system provides supplemental content annotates content or otherwise manipulates the search result content presentation when the rule is activated. For example a rule may cause the search results from a retailer s database to include additional items such as promotional items when the query includes a particular keyword.

The metadata of the rules is used for among other things the filtering of the rules in the Rules Repository to select a subset of the rules which will be evaluated for the current query. As a result of rule filtering which will be described in further detail below only a portion of the rules are presented to the Rules Engine for evaluation of their trigger conditions. For example the system may be configured such that only rules containing the metadata state published are submitted to the Rules Engine for possible execution.

The Rules Filter Engine receives the user entered free text query selected navigation link or links or a combination of these as well as information from the Search Engine about the specific navigation states that correspond to the query. The Rules Filter Engine may also receive additional information from the User Interface such as user profile information and date and time information. The Rules Filter Engine may use these parameters to apply predefined rule filters to the rules stored in the Rules Repository . For example based on the identity of the user the Rules Filter Engine in a test configuration may output all of the published rules but only the draft rules that were created by that particular user. The Rules Filter Engine sends the filtered rules to the Rules Engine for evaluation.

The Rules Filter Engine may include a set of default global rule filters that perform basic filtering. For example as discussed above a typical default rule filter presents all published rules to the Rules Engine to have their triggers evaluated. In addition to the default rule filters a user with the proper permission can create a specialized global rule filters for particular circumstances either by using a text editor to create a script that describes the filter or by using a user interface. For example an administrator may create a rule filter that allows a creator of a new rule to examine the results of all of the draft rules on a live application database without affecting the view of the live application for other users. The Rules Filter Engine also may perform filtering based on a rule filter sent by the application as part of the query i.e. a rule filter to be implemented specifically for that query.

Applying this rule filter to the rule shown in the Rules Filter Engine passes this rule to the Rules Engine because the state of the rule as defined in the rule s metadata is equal to published . In the Rules Engine the trigger of this rule would be successfully evaluated for every query that contains the keyword DVD or VHS . The results of the query that successfully triggers the rule of would be supplemented with the new movie releases displayed in a separate frame as the rule action specifies.

Similarly in the example of the rule shown in the Rules Filter Engine presents this rule to the Rules Engine because the status of the rule is published as defined in the rule s metadata . The rule is triggered when the query contains the keyword cheap . In that case the rule s action manipulates the presentation of the results by sorting the retrieved records according to their prices.

In the example of a rule is maintained in a draft state until the user has completed modifying and testing the rule. When the user completes testing and modifying the rule the rule state is changed to the ready for approval state and is presented for review to a user Approver with permission to approve rules. The Approver can be notified of rules ready for approval automatically or the user can manually notify the Approver for example by sending an email. If the rule is approved by the Approver the rule state changes to approved. Then the rule is published by a user with privileges to publish rules and its state is changed to published . If the rule is not approved the Approver can either deactivate the rule or return the rule to the user for editing . In the first case the state of the rule is changed to inactive . In the second case the creator of the rule is notified and the rule re enters the draft state . The creator can after modifying the rule change the rule state to ready for approval and present the modified rule to the Approver . The Approver reviews the rule and decides whether to approve it or not. This can be an iterative process and the rule can be reviewed and modified multiple times before approval or deactivation i.e. changing the status to inactive . For example the approval workflow may be set up so that a new rule is reviewed twice by the Approver before it is deactivated.

A published rule can be edited by a user . While the user modifies the rule he has a personal view of a copy of the rule and the live application is not affected. When the modified rule is ready for approval the user changes the rule state to ready for approval and notifies the Approver. If the modified rule is approved its state is changed to approved. Then a user with publishing privileges may change the state of the rule to published and the modified rule replaces the previous version. According to one embodiment of the present invention a copy of a published rule may contain information on its parent rule. When the information on the parent rule is presented to the publisher of a modified rule she can manually delete the previous version of the rule with the new one or the previous version may be automatically deleted when the new rule is published.

According to one embodiment of the present invention more than one users can modify a published rule. Each user edits their own copy of the rule and can modify and test the rule before the rule is presented for approval. An Approver can approve one or more modifications of the published rule. A rule publisher can choose which one of the approved rules will replace the previous version of the rule.

Published rules can be deactivated by the creator of the rule the Approver or the application for example when the period of time for the rule has expired. A business manager can create a rule for example to promote a Labor Day Sale at an online store. During the Labor Day weekend all queries performed by users at the company website will result for example in a pop up window that lists the items on sale over the Labor Day weekend. After the weekend a user with the proper permission may inactivate the rule to prevent the window with the items on sale from popping up. According to one embodiment of the present invention rules can be deleted from the Rules Repository in any state by a user with permission to delete rules.

The Rules Filter Engine applies rule filters both the per query rule filters sent in the query and any global rule filters that have been stored in the system configuration to the rules in the Rules Repository based on the rule metadata and sends the filtered rules to the Rules Engine to be evaluated. The triggers of the filtered rules are evaluated . Depending on the validity of the triggers the rules are executed the corresponding actions are performed on the unmodified results and the results of those actions are returned to the user .

As discussed above rules include a trigger an action and metadata. The following are examples of Boolean valued functions that may be used to specify a trigger 

Query.Equals Q Query returns true if the query being considered by the rule is equal to Q false otherwise.

Navigation State.Equals N Navigation State returns true if the navigation state being considered by the rule is equal to N false otherwise.

Query.Contains Attribute Value Pair A Attribute V Value returns true if the query contains the attribute value pair A V false other wise.

Navigation State.Contains Attribute Value Pair A Attribute V Value returns true if the navigation state contains the attribute value pair A V false otherwise.

Navigation State.Is Ancestor Of N Navigation State returns true if the navigation state being considered by the rule is an ancestor of N false otherwise.

Navigation State.Is Descendant Of N Navigation State returns true if the navigation state being considered by the rule is a descendant of N false otherwise.

Navigation State.Contains Document D Document returns true if the navigation state being considered by the rule contains document D false otherwise.

A trigger may include a time element that specifies a time period during which the rule is active. The following are examples of the language for specifying a time trigger element 

Current Date Time.Greater Than D Date Time returns true if the date and time of the query is after the date and time specified in Date Time. 

Current Date Time.Less Than D Date Time returns true if the date and time of the query is before the date and time specified in Date Time. 

Current Date.Greater Than D Date returns true if the date of the query is after the date specified in Date. 

Current Date.Less Than D Date returns true if the date of the query is before the date specified in Date. 

The language for specifying a trigger may include the Boolean operators AND OR and NOT. Also the language for specifying a trigger may allow for variables local to the rule to be populated based on the navigation state being considered by the rule. Such variables might correspond to terms in the navigation state and could be specified positionally e.g. the second term in the navigation state or in terms of the partial order of terms e.g. the term or terms in the navigation state that are descendants of a given term . These variables once populated can be used by the rule s action.

The language for specifying an action to modify the content of the search results may include the following operations or a combination thereof 

Include Document D Document where document D either is hard coded or is partially or fully determined based on variables populated by the trigger.

Include Query Q Query where query Q either is hard coded or is partially or fully determined based on variables populated by the trigger. This operation may provide a preview of the navigation state corresponding to query Q. Such a preview could include a document or a plurality of documents or some other information that summarizes or otherwise describes the navigation state.

Include Navigation State N Navigation State where navigation state N either is hard coded or is partially or fully determined based on variables populated by the trigger. This operation may provide a preview of the included navigation state. Such a preview could include a document or a plurality of documents or some other information that summarizes or otherwise describes the navigation state.

Include Text T Text where text T either is hard coded or is partially or fully determined based on variables populated by the trigger.

Include Graphics G Graphics where graphics G either is hard coded or is partially or fully determined based on variables populated by the trigger.

The language for specifying an action may include operations for filtering sorting aggregation and truncation. These operations can be applied to documents or navigation states. These operations can be applied to query results to content pushed by rules or to both. These operations may act in a way that either is hard coded or is partially or fully determined based on variables populated by the trigger. Also these operations may make use of randomization.

Other types of rule action also are possible. For example document filtering may be used to reduce the number of documents in the query results or the content pushed by rules by restricting the documents in either or both sets to those satisfying a predicate e.g. the documents containing a particular term specified by the rule. A document filter can be composed using Boolean operations. Navigation state filtering is analogous except that it is applied to the set of navigation states to be included in the results or pushed content rather than to the documents.

Document sorting may be used to reorder the documents in the results e.g. ordering them by date or popularity. A document sort key can be based on explicitly represented document information or can be derived from such information. Navigation state sorting is analogous except that it is applied to the set of navigation states included in the results or pushed content rather than to the documents.

Document aggregation may be used to group the documents in the results into equivalence classes based on an explicit or derived property of those documents. The aggregation key can be specified using an attribute or plurality of attributes. Also the aggregation key can be based on explicitly represented document information or can be derived from such information.

Document truncation may be used to reduce the number of documents in the results by restricting them to a particular number of documents. Truncation respects document ordering i.e. truncating to 10 documents eliminates all but the first 10 documents from the results. Navigation state truncation is analogous except that it is applied to the set of navigation states included in the results rather than to the documents.

These operations may act in a way that either is hard coded or is partially or fully determined based on variables populated by the trigger. For example a rule may filter included documents to include only those that contain a majority of the terms in the navigation state. Alternatively a rule may sort included documents by the first term in the navigation state. In yet another example a rule may include a number of navigation states that is truncated based on the number of terms in the navigation state. These operations may make use of randomization. For example a rule may determine a set of candidate documents or navigation states to include and then use a random or pseudorandom process to determine which of those candidates to actually include.

A single rule may use one or more of these operations. It may order and apply them in any combination possibly using the same operation more than once. For example a set of included documents may be 1 filtered then 2 sorted according to a given sort key then 3 aggregated according to a given aggregation key and then 4 truncated to 10 aggregates. A rule or plurality of rules may be specified in a script. In such a case the rules may be combined using sequential conditional or randomized execution.

In sequential execution rules are considered in the order they are specified. For example if two rules triggered by the same query or navigation state are executed sequentially then the first rule is considered before the second. Sequential execution may take prioritization into account. For example higher priority rules may be considered before lower priority rules and the priority may be reflected in the order of results.

In conditional execution the execution of a rule depends on specified criteria. In some embodiments of the present invention conditional execution can be specified using if . . . then . . . else logic. Conditional execution may be combined with sequential execution such that the results of considering an earlier rule partially or completely determine whether a later rule is executed. For example a conditional rule may be specified to execute only if less than three previous rules have been executed for a given query or navigation state.

In randomized execution the execution of a rule depends on a random or pseudorandom process. For example a rule may be specified to execute only half the time that it is considered in order to vary the results randomly. Randomized execution may be useful in combination with conditional execution. For example it may be used to execute a randomly selected subset of 3 out of 10 applicable rules.

The Rules Engine may execute the rules in order which may be established by assigning a number to an order field of each rule e.g. 1 2 3 . . . . Several rules may be assigned the same order value in order to indicate that those rules can be performed in arbitrary order thus making the ordering of rules a partial rather than total order.

The execution of a rule may depend on two factors. The first factor is the trigger. The second factor is any conditional criterion specified for the rule such as an expression than depends on the results of the execution of a previous rule. In such a case the rule is executed only if both of these factors evaluate to true. For example a group of rules may be identified by numbers 1 through 10. The evaluation of rules in this group may be subject to the condition that a maximum of two of these rules are to be executed after which time the remaining rules in the group are no longer considered for execution.

The query of comprises a URL not shown with an appended portion as shown in which is the search application running on the User Interface. Following are the entities to be passed with the query. The entity N 0 indicates a navigation state that corresponds to the entire database and it is being used here for purposes of discussion merely as a placeholder in lieu of an actual navigation state selected by the user. The entity Nmrf . . . is the per query rule filter. The rule filter is specified in this example as a Boolean expression although other types of expressions also are possible. The expression contains metadata references in the form which evaluates to logical true when the rule contains metadata matching metadata identifier and the value of that metadata equals value. For example expression state draft evaluates as true for rules that contain metadata state draft . Thus the rule filter of will pass rules having metadata state published or state draft and author watkins . In other words the rule filter passes all published rules but only the draft rules authored by Watkins.

Each rule filter specifies a subset of rules to be executed and consequently a subset not to be executed based on the metadata associated with the rules and possibly additional information unique to each query such as user profile information. The metadata is a generic mechanism and any arbitrary data may be specified in the metadata. For example the rule metadata may specify 

The rule shown in the example of was created by user Watkins who wishes to supplement the results of user queries that produce navigation states containing the attribute value pair Type Varietal Pinot Noir with a list of white wines of Type Varietal Pinot Grigio. The rule includes metadata that specifies that the rule state is draft and that the rule author is Watkins . When Watkins logs in the system to perform a query for Pinot Noir wines the rule filter is applied and the Rules Filter Engine checks for the state and author attributes in the metadata . In this example the rule is in the draft state and the author of the rule has performed the query. These two values allow the rule to be passed by the Rules Filter Engine to the Rules Engine to be executed. The Rules Engine evaluates the trigger as TRUE and the action specifies that the list of Pinot Noir wines should be supplemented with a separate frame of Pinot Grigio wines with a heading What about white wine Because the state of the rule is draft this rule is not active to other users who perform queries for Pinot Noir wines.

An alternate example of a rule filter that selects rules for campaign management along with two rule examples are shown in . In this example the rule filter specifies values for region but not the specific promotion. A user may perform a query for TVs on sale on a Labor Day weekend for example TVs Labor Day Sale. The rule filter is applied and the Rules Filter Engine presents the published rule to the Rules Engine assuming a global rule filter is in place to pass only published rules when the query is performed from a specific region in this case North America. The rule trigger evaluates to true and the rule action modifies the results of the search according to a promotional campaign specified by the rule creator because the query contains labor and day and TVs .

A different rule used for similar campaign management purposes can be implemented as shown in . As an example the user query can be Flat Screen TVs. The same rule filter shown in is applied and the Rules Filter Engine examines the rule metadata namely the region in which the query was performed and presents the rule to the Rules Engine for evaluation. If the query is performed within the date range specified by the dates in the trigger the trigger evaluates to true and the rule action supplements the results with the featured TVs in the Labor Day TV sale set.

As shown in a rule can be personalized by including metadata corresponding to user profile information on the intended target user. For example in a website that sells sporting goods there might be rule categories which identify users based on the products in which they have previously shown interest. presents a rule filter and presents a Mountain Climber rule with metadata corresponding to a mountain climber user profile. A user who had previously purchased or viewed climbing items may be profiled as mountain climber and each time a mountain climber performs a query the rule filter is applied and the Rules Filter Engine presents the rule shown in to the Rules Engine. The action specified by the rule supplements the results of the query with climbing items in this example.

In this example when a user assigned a value of A performs a query for French wines the rule filter A B Testing Filter A applies and the Rules Filter Engine presents the Test Frame rule to the Rules Engine. The action specified in the rule adds a separate frame above the results with the wine being promoted. When the application assigns a set value B to the user the rule filter A B Testing Filter B applies and the appropriate rule passed by the Rules Filter Engine is Test Order . The Rules Engine specifies an action to the Search Engine and the query French wines returns the list of French wines in the database with the promotional wine being listed first in the search results. By examining the percentage of users who view information and or purchase the promotional wines the rule sets can be compared and in the future the set which performs better can be used for all users.

In some embodiments of the present invention the syntax for rule filters supports prefix oriented Boolean operators AND OR and NOT and uses comma separated name value pairs to specify properties and numeric rule IDs. The wildcard operator is also supported.

Boolean operators AND OR and NOT are available to compose complex combinations of property names property values and rule IDs. For example 

This filters for rules where the value of the image path property is book.jpg and all text contains any value including null.

The use of Boolean operators and comma separated name value pairs as shown above are for illustration purposes. In some embodiments the Rules Filter Engine syntax might use the entire set of operations supported by the full search engine while other embodiments may support Boolean operations plus some limited set of string and control statement operators. Additionally the Rules Filter Engine syntax could use data objects and can call functions to the data objects that return logical true or false. A Graphic User Interface may be provided for the creation of rule filters.

As discussed above Rule filtering is useful for reviewing the effect on the live application of various rules created by different users in the rule testing stage. When a user creates and tests a rule he has a view of the live application that reflects his newly created rule. He cannot view the effect of rules being tested by other users. However an administrator or a user with special privileges can create a rule filter that selects from the Rules Repository all the rules in the draft state. Viewing the effect of the different rules on the live application the administrator can for example provide feedback to the various users that create rules or decide to delete some rules.

A screenshot of an interface that allows a System Administrator to add a user to the system is shown in . The Administrator can specify the username and assign new password to the user. Additionally the interface allows to add identity to the user such as email address and the first and last name . The Administrator can assign different permissions to the user such as the permission to approve publish create edit or inactivate a rule. The manager can also specify access permissions such as administration access or configuration access.

In the example of the interface presents different options for rule management. The tabs across the top of the interface allow a user to Add Audit Approve Do Not Approve Inactivate or Delete a rule. As depicted in this exemplary interface the Audit Rule option provides information on the Priority the Zone the Status the State the Name the Date Created the Date Reviewed and the Date various rules were Published. Additionally when the user is in the Audit Rule option she can approve or not inactivate or delete a rule by selecting the checkbox next to the rule and pressing the appropriate tab to perform the action.

In some embodiments of the present invention the approval workflow environment might allow editing of the priority of a rule. For example a user may want to edit the priority of a rule that belongs to a specific group. The concept of priority is affected by the state of a rule because unpublished rules will not appear in the live application. There may be a priority assigned to the group as well as a priority that relates only to the rules in a specific group that are published. The priority of a rule can be set for example by the Approver. Alternatively the priority of a rule may be handled as part of the information about the rule that must be approved. The user may enter the priority of a rule as it relates to other rules in the group.

In some embodiments of the present invention the approval workflow environment allows users to add or edit keyword redirects. A user with proper permission may create and edit keyword redirect link combinations. The user requests approval and an authorized approver approves the new or edited keyword redirects. The history of the changes and publication is saved to a log file.

In an interface for managing keyword redirects shows three active redirects . A user with the proper permission can add a new redirect by selecting the appropriate tab and providing the keyword and the redirect link. The same or another user with proper permission can delete a keyword redirect by clicking on the delete button next to each redirect. The user interface also provides tabs for saving resetting approving and publishing changes. Keyword redirects may be thought of as specialized rules because they are triggered by entry of certain keywords and take the action of presenting a particular webpage to the user. For example if a user enters apple computer as a free text query the engine will redirect the results to a link or a navigation state that can correspond to the Apple company website.

In embodiments of the present invention the approval workflow environment allows users to add or edit thesaurus entries. A user with the proper permission may create and edit thesaurus entries and save them to the configuration. The user requests approval and an approver may then approve the new or edited entries. The history of the changes and publication is saved to a log file. Thesaurus entries may also be thought of as a special case of rules because the entry of a particular keyword may trigger an action in which an alternative word or phrase is used in a search. For example if a user enters disk as a free text query the engine may replace the specific keyword for example with CD instead of a plate and can present results based on the replaced keyword.

In embodiments of the present invention the approval workflow environment allows users to add or edit phrase entries. A user with the proper permission may create and edit entries and save them to the configuration. The user requests approval and an approver approves the new or edited phrase entries. The history of the changes and publication is saved to a log file. Phrase entries may also be thought of as a special case of rules because they are triggered by the entry of certain keywords and take the action of replacing the word or phrase with a predefined word or phrase . For example if a user enters compact disk as a free text query the engine may replace the specific keyword for example with CD and can present results based on the replaced keyword.

In embodiments of the present invention the approval workflow environment allows users to add or edit stop words. A user with proper permission may create and edit stop words and save them to the configuration. The user requests approval and an approver approves the new or edited stop words. The history of the changes and publication is saved to a log file. The same functionality may be provided for the creating and editing of dimensions and dimension value orders.

When unexpected spotlighting results or other unexpected actions are occurring in the live application a manager may log in and review the published rules. For example the manager can view when the rule was created approved and published and who performed these actions. This information enables the manager to consider whether the rule creator should not have the capability to publish a rule without approval from another party. The manager can edit the user profile to prevent the user from publishing additional rules.

In embodiments of the present invention the approval workflow environment allows a user for example a business or program manager to create a rule to promote a product for a specific period of time. In such a case the manager may be given permission in the system to access only one particular rule group and may be given permission to create but not approve or publish rules. The manager would not be able to create rules for any rule group except the group to which permission has been granted. As with other types of users involved in rule creation the rules created by the manager are initially in the draft state. When the rule is ready for publication the manager modifies the state of the rule to ready for approval. The users authorized to approve rules in that rule group are notified of the new rule. An Approver with the proper permission may then approve the rule at which time the rule state is changed to approved and eventually to published .

The approval workflow environment might allow previewing rules in a specific state. For example the users may preview draft and ready for approval rules approved rules or published rules. In certain embodiments the rules may be setup to have a state set of active which are rules that are currently in operation in the live application or inactive which are rules that have not yet been approved or that have been deactivated.

As shown in when a user performs a query while all of the rules are in the inactive state none of the rules will be passed to the Rules Engine for execution so there will be no modification of the content of the search results. shows the unmodified results returned in such a case which correspond to the documents in the wine collections that correspond to the attribute value pair Wine Type White.

As shown in users with proper privileges such as an administrator can see the effect of inactive rules on the live application by checking the preview box for one of the rules. This automatically creates a rule filter which selects only rules which either have their state set to active or a rule ID that corresponds to the rule that has been selected to be previewed. The modified search results based on the action of the previewed rule are shown in in which a specific wine record is displayed above the result set .

As discussed above the Rules Filter Engine can have a set of default filters that specify basic rule filtering a set of rule filters automatically created by the application e.g. the rule filter created by selecting the preview button as shown in and a set of rule filters added by an administrator e.g. a set of rules entered in text form using the rule filter syntax described above. All sets of rule filters can be automatically loaded or passed with each query or the application can choose not to consider a set. For example if an administrator has created a set of rule filters to replace the default set the application may not apply the default rule filters.

As discussed above the Rules Filter Engine passes filtered rules to the Rules Engine to be executed to modify the results of a search performed by the Search Engine . The Search Engine may employ various search methodologies but in the preferred embodiment it features a hierarchical search and navigation system based on a set of navigation states that are each defined by an expression of terms e.g. attribute value pairs.

In this type of search and navigation system a partial order of refinement relationships is defined among the terms which in this example are attribute value pairs. For example as shown in the term Origin France refines the term Origin Europe . The refinement relationships in the search and navigation system are transitive and anti symmetric. Transitivity means that if term A refines term B and term B refines term C then term A refines term C. For example if Origin Bordeaux refines Origin France and Origin France refines Origin Europe then Origin Bordeaux refines Origin Europe. Anti symmetry means that if two terms are distinct then both terms cannot refine each other. For example if Origin Bordeaux refines Origin France then Origin France does not refine Origin Bordeaux.

Further the partial order of refinement relationships among terms is not necessarily a total one. For example as shown in there could be two terms Origin France and Origin Spain such that neither term refines the other. Two terms with this property are said to be incomparable. Generally a set of two or more terms is mutually incomparable if for every pair of distinct terms chosen from that set the two terms are incomparable. Typically but not necessarily two terms with distinct attributes will be incomparable.

Given a set of terms a term is a maximal term in that set if it does not refine any other terms in the set and it is a minimal term in that set if no other term in the set refines it. For example in the set Origin France Origin Bordeaux Origin Spain Origin Madrid Origin France and Origin Spain are maximal while Origin Bordeaux and Origin Madrid are minimal. A term is a root term if it does not refine any other terms and a term is a leaf term if no other term refines it.

As shown using a wine collection example a navigation state that corresponds to all wines originating from France includes the attribute value pair Origin France . That navigation state does not characterize all the wines in the collection that share the same attribute Origin . For example the navigation state that corresponds to the list of wines originating from Spain includes the attribute value pair Origin Spain . Additionally shows a navigation state conjunctively defined by the attribute value pairs Origin France AND Type Varietal Red . In the same example another navigation state is defined by the attribute value pair Type Varietal White .

The hierarchical search and navigation system typically will provide a user interface that allows the user to navigate through the navigation states. As discussed above each navigation state is defined by an expression of terms e.g. attribute value pairs and comprises the set of documents associated with those terms in accordance with that expression. Users can navigate through the collection of navigation states for example by conjunctively selecting and deselecting terms to obtain the navigation state corresponding to each expression of conjunctively selected terms. The user interface may present a navigation state by displaying both the list of terms and a list of some or all of the documents that correspond to that state. Also the user interface may present the terms of the navigation state organized by attribute. The initial navigation state may be a root state that corresponds to no term selections and therefore to all of the documents in the collection.

The user interface allows users to narrow the navigation state by choosing a value for an attribute or by replacing the currently selected value with a more specific one if appropriate . The user interface may present users with the options available to narrow the present navigation state with relevant terms organized by attribute. The user may be able to select values from lists that are organized by attributes in the current navigation state or any other type of selection mechanism such as pull down menus etc. The user interface may present these navigation options in a variety of formats. For example values can be presented as pictures or as symbols rather than as text. The interface may allow for any method of selecting terms e.g. mouse clicks keyboard strokes or voice commands. The interface may be provided through various media and devices such as television or WWW and telephonic or wireless devices. Although discussed herein primarily as a visual interface the interface may also include an audio component or be primarily audio based.

Preferably in a present navigation state the user interface only presents options for narrowing the navigation state that lead to a navigation state with at least one document. This preferred criteria for providing navigation options ensures that there are no dead ends or navigation states that correspond to an empty result set. Also the user interface preferably only presents options for narrowing the navigation state if they lead to a navigation state with strictly fewer documents than the present one. Doing so ensures that the user interface does not present the user with choices that are already implied by terms in the current navigation state.

In general the user may be presented with a number of methods of obtaining a desired navigation state such as 1 by conjunctively selecting terms 2 by disjunctively selecting terms 3 by negationally selecting terms or 4 by entering a desired keyword in a search box.

For example as noted above users can navigate through the collection of navigation states to obtain a desired navigation state by conjunctively selecting and deselecting terms to obtain the navigation state corresponding to an expression of conjunctively selected terms. For some attributes multiple incomparable non refining conjunctive selections of values may be applicable. For example in a wine collection database for the attribute Flavor the values Fruity and Nutty neither of which refines the other may both be conjunctively selected so that the terms Flavors Fruity and Flavors Nutty narrow the navigation state. Thus users may sometimes be able to refine a query by conjunctively selecting multiple values under a single attribute.

The user may broaden the navigation state by disjunctively selecting additional terms. For example in a movie collection database a user could start at Products DVDs and then broaden by disjunctively selecting a term to Products DVDs OR Products Videos and then narrow by conjunctively selecting a term to Products DVDs OR Products Videos AND Director Spike Lee.

The user may narrow the navigation state by negationally selecting additional terms. For example a user could start at Products DVDs narrow by conjunctively selecting a term to Products DVDs AND Genre Comedy and then narrow by negationally selecting a term to Products DVDs AND Genre Comedy AND NOT Director Woody Allen .

One way to define the collection of conjunctive navigation states is to uniquely identify each conjunctive navigation state by a canonical conjunctive expression of mutually incomparable terms. A two step mapping process that maps an arbitrary conjunctive expression of terms to a canonical conjunctive expression of mutually incomparable terms creates states that satisfy this property. In the first step of the process an arbitrary conjunctive expression of terms is mapped to the subset of documents that are associated with all of those terms. Recalling that if a document is associated with a given term then the document is also associated with all of the terms that the given term refines in the second step of the process this subset of documents is mapped to the conjunctive expression of minimal terms among the terms that are common to all of the documents in that document set. The result of this second step is a conjunctive expression of mutually incomparable terms that uniquely identifies the corresponding subset of documents and hence is a canonical representation for a conjunctive navigation state. By way of illustration referring to the wine example in the term expression Origin France maps to the subset of documents documents 8 11 which in turn maps to the canonical term expression Type Varietal Red AND Origin France.

The conjunctive navigation states are related by a partial order of refinement relationships derived from the partial order that relates terms. This partial order can be expressed in terms of either the subsets of documents or the term expressions that define a conjunctive navigation state. Expressed in terms of subsets of documents a navigation state A refines a navigation state B if the set of documents that corresponds to state A is a subset of the set of documents that corresponds to state B. Expressed in terms of term expressions a conjunctive navigation state A refines a conjunctive navigation state B if all of the terms in state B either are in state A or are refined by terms in state A. Referring to the navigation state corresponding to the term expression Type Varietal Red AND Origin Chile document 4 refines the navigation state corresponding to Origin Chile documents 4 5 . Since the refinement relationships among navigation states give rise to a partial order they are transitive and antisymmetric. In the example Type Varietal Red AND Origin Chile document 4 refines Origin Chile documents 4 5 and Origin Chile documents 4 5 refines Origin South America documents 1 4 5 therefore Type Varietal Red AND Origin Chile document 4 refines Origin South America documents 1 4 5 . The root navigation state is defined to be the navigation state corresponding to the entire collection of documents. The leaf navigation states are defined to be those that cannot be further refined and often though not necessarily correspond to individual documents. There can be an arbitrary number of intermediate navigation states between the root and the leaves . Given a pair of navigation states A and B where B refines A there can be multiple paths of intermediate navigation states connecting A to B in the partial order. For convenience of definition in reference to the implementation described herein a navigation state is considered to refine itself.

Referring again to the Rules Engine as discussed above allows an information provider a user or a third party to specify rules that manipulate search result content presentation through the use of rules which comprise a trigger and one or more actions. The trigger is a predicate that identifies a set of conditions that if satisfied activate the rule. An action specifies how the system manipulates content presentation when the rule is activated. The information provider user or third party can create a group of rules i.e. a rule script that combines rules using sequential conditional or randomized logic.

Triggers may be defined in terms of expressions of attribute value pairs. If the expressions of attribute value pairs in the trigger correspond to valid navigation states in the search and navigation system then the trigger is defined in terms of a set of navigation states that is a subset of the collection of all possible navigation states. The rule is activated when the current query or the current navigation state responsive to that query satisfies one or more of the expressions that make up the trigger. Triggers also may be defined in terms of one or more keywords. The rule is activated when the current query is a free text query that includes the specified term or terms. In addition at trigger may be based on a combination of navigation states and keywords. The following discussion provides examples of possible types of trigger expressions.

A trigger may specify conditions that correspond to a single navigation state. For example a trigger might only be activated by an initial navigation state that a user first encounters while navigating the document collection. A rule with such a trigger might be used to push content likely to be of interest to most users such as the set of documents recently added to the collection. In contrast a trigger might only include a single navigation state that only a fraction of users are likely to encounter. A rule with such a trigger might be used to push content likely to be of interest to only that fraction of users such as the option to navigate to a closely related navigation state. For example in an application that represents movies in its collection of materials a trigger might be activated by a single term navigation state Genre Comedy. Another trigger might be activated by the conjunctive 2 term navigation state Genre Comedy AND Release Year 1980 1989. Because the latter trigger is more specific than the first trigger it can be useful to deliver more specific supplemental content.

A trigger may be configured to be activated by a plurality of navigation states. This flexibility allows designers of systems with large numbers of materials to avoiding the impracticality of writing a different rule for each navigation state. For example a trigger can be activated by all possible navigation states. In addition a trigger can be activated by some but not all of the possible navigation states. A plurality of navigation states can be identified without explicitly representing each navigation state. For example a plurality of navigation states can be included by specifying a particular attribute value pair and incorporating all navigation states with that attribute value pair implicitly. For example in an application that represents movies in its collection of materials a trigger might be activated by all navigation states that include the term Genre Classics i.e. the single term navigation state Genre Classics as well multi term navigation states like Genre Classics AND Release Year 1980 1989 Genre Classics OR Genre Drama.

A trigger may be defined in terms of the descendants of a given navigation state. Such a trigger designates a target subset of the document collection either explicitly as a set of documents or implicitly by characterizing the navigation state without enumerating every corresponding navigation state and causes the rule to be activated when the present query is associated with a set of documents that are contained by the target subset. For example in an application that represents movies in its collection of materials a trigger might be activated by navigation states that are descendants of the single term navigation state Genre Classics the descendants include Genre Classics AND Release Year 1980 1989 but not navigation states like Genre Classics OR Genre Drama which is a generalizing rather than a narrowing refinement.

Similarly a trigger may refer to the ancestors of a given navigation state i.e. navigation states that represent generalizing refinements from the given navigation state. Such a trigger also designates a target subset of the document collection either explicitly as a set of documents or implicitly by characterizing the navigation state and causes the rule to be activated when the navigation state is associated with a set of documents that contain the documents in the target subset. In particular such a rule could refer to navigation states that do not contain a document or plurality of documents. For example in an application that represents movies in its collection of materials a trigger might be activated by navigation states that are ancestors of the single term navigation state Genre Romantic Comedy the ancestors include Genre Comedy but not navigation states like Genre Romantic Comedy AND NOT Director Woody Allen which is a narrowing rather than a generalizing refinement.

A trigger may refer to the navigation states within a given distance of a given navigation state. For example distance may be measured using a set difference function such as the size of the symmetric difference between two sets of attribute value pairs. In some embodiments distance may be measured using a graph distance function such as the length of the shortest path in the graph of navigation states. In some embodiments distance may be measured using a dissimilarity measure such as the measure described in co pending patent application Method and System for Similarity Search and Clustering. 

A trigger may include Boolean operators like AND OR and NOT to specify an expression of attribute value pairs which may correspond to a navigation state or a plurality of navigation states. For example in an application that representing movies as its collection of materials a trigger might be activated by navigation states that are descendants of Genre Comedy OR descendants of Genre Drama AND are descendants of Release Year 1980 1989 but are NOT descendants of Director Woody Allen.

A trigger may make use of a random or pseudorandom process. For example a trigger can be specified so that even when the present navigation state otherwise satisfies the trigger the corresponding action is only performed some fraction of the time based on the results of a random or pseudorandom number generator. In addition the evaluation of a trigger may set or update variables that may be used by the rule s action or by subsequent rules. For example in an application that represents movies as a collection of materials a trigger might set a variable to be the Director term in the navigation state if there is one so that the action can push featured movies by that director.

As discussed above the action component of a rule specifies one or more ways in which the system manipulates search result content presentation when that rule is activated. The following discussion provides examples of possible rule actions.

An action may specify that a document or a plurality of documents be included as supplemental content. The included document or plurality of documents may depend on the query that activated the rule s trigger or may be independent of that query. An action is considered to be dependent on the query if the document or plurality of documents that are considered for inclusion are restricted to the documents associated with the present navigation state that satisfies the query. For example in an application that represents wines as a collection of materials an action might specify the inclusion as supplemental content of a document corresponding to a featured wine associated with the current navigation state. In addition the action of a rule may supplement a query response with navigation states queries or other content. In the user interface the supplemental content may be offered as a separate section apart from the results of the query or may be integrated with the results of the query. Alternatively the supplemental content may stand alone i.e. the results displayed to the user may include only the results of a rules actions in lieu of the results of the original query.

An action may specify supplementing the result with options to navigate to one or more navigation states. The included navigation state or plurality of navigation states may depend on navigation state that activated the rule s trigger or may be independent of that navigation state. For example the included navigation state or plurality of navigation states could be restricted to descendants of the navigation state that activated the rule s trigger. For example in an application that represents wines as a collection of materials an action incorporate as supplemental content the navigation state that narrows the current state by adding the term Rating 96 100.

An action may not only provide the option to navigate to a navigation state but also provide a preview of the results of using such an option to navigate. Such a preview could include a document or a plurality of documents or some other information that summarizes or otherwise describes the navigation state or states in the supplemental content. For example in an application that represents wines as a collection of materials an action might incorporate as supplemental content a preview of the documents in the navigation state that narrows the current state by adding the term Rating 96 100.

An action may specify text or graphics as supplemental content. Such text or graphics may serve to promote particular content or to fine tune how the user experiences the content returned in response to the query. The text or graphics may depend on the navigation state that activated the rule s trigger or may be independent of that navigation state. For example in an application that represents wines as a collection of materials an action triggered by the inclusion of a term like Price Under 10 might incorporate as supplemental content text that says We have the best prices in the business .

An action may specify how content presented to a user is logically or physically arranged. This arrangement may include sorting aggregation breaking up into discrete sections geometric placement or other arrangement details. The arrangement may depend on the navigation state that activated the rule s trigger or may be independent of that navigation state. For example in an application that represents movies as a collection of materials an action triggered by the inclusion of a term like Price Under 10 might present movies in the relevant navigation state sorted by price. In addition an action may specify how content presented to a user is rendered. In the context of a visual user interface rendering includes for example such considerations as font size and color. The rendering may depend on the navigation state that activated the rule s trigger or it may be independent of that navigation state. For example in an application that representing wines as a collection of materials an action might specify that documents corresponding to wines with a high ratio of rating to price be annotated with a text or graphics indicating best buys. 

An action may specify the inclusion of a transformation of the query with the results. This transformation may modify the query by adding removing or replacing attribute value pairs or keywords. The transformation can have the effect of narrowing or generalizing the query or can have an effect that neither narrows not generalizes the query but otherwise modifies the query received from the user e.g. by replacing a attribute value pair with a related attribute value pair that neither narrows nor generalizes the given term or by replacing a keyword with a related attribute value pair. The query transformation may depend on the query or navigation state that activated the rule s trigger or may be independent of that query or navigation state. For example in an application that represents wines as a collection of materials an action might specify that a query that included red in a full text search query will include Type Varietal Red as a term to generate a response to the query.

An action may specify the setting or updating of variables to be used by subsequent rules. In particular an action may do nothing more than manipulate variables. Such manipulation may be useful for a rules script that uses conditional logic based on those variables. For example a variable can be defined that stores the number of rules that have been triggered for a given navigation state. Such a variable would be incremented whenever a rule is triggered for that navigation state. A rules script might specify using conditional logic a maximum number of rules to trigger for a navigation state. It then could refer to this variable in the conditional logic to determine whether to evaluate additional rules or terminate the script for that navigation state.

The action of a particular rule may include a number of individual actions. These individual actions can be combinations of different types of actions supported by the rules engine in a particular embodiment. For example the action of a particular rule may include 1 identifying one type of supplemental content 2 identifying a second type of supplemental content 3 rendering the response to the query in a particular format and 4 rendering the supplemental content in a different format. Of course many other types of rule triggers and rule actions are possible.

While the present invention has been described with respect to what is presently considered to be the preferred embodiments it is to be understood that the invention is not limited to the disclosed embodiments. To the contrary the invention is intended to cover various modifications and equivalent arrangements included within the spirit and scope of the appended claims.

