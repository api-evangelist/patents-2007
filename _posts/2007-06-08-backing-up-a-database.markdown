---

title: Backing up a database
abstract: Backing up a database, including providing, in the database by a DBMS, at least one record with at least one backup field, the backup field being a data element that controls the backing up of the record, and backing up, by a backup module, the a record in dependence upon a value of the backup field.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08041680&OS=08041680&RS=08041680
owner: International Business Machines Corporation
number: 08041680
owner_city: Armonk
owner_country: US
publication_date: 20070608
---
The field of the invention is data processing or more specifically methods apparatus and products for backing up a database.

The development of the EDVAC computer system of 1948 is often cited as the beginning of the computer era. Since that time computer systems have evolved into extremely complicated devices. Today s computers are much more sophisticated than early systems such as the EDVAC. The most basic requirements levied upon computer systems however remain little changed. A computer system s job is to access manipulate and store information. Computer system designers are constantly striving to improve the way in which a computer system can deal with information.

Information stored on a computer system is often organized in a structure called a database. A database is a collection of related data and metadata. Metadata is data that describes other data such as for example data statistics. The data of a database is typically grouped into related structures called tables which in turn are organized in rows of individual data elements. The rows are often referred to a records and the individual data elements are referred to as fields or columns. In this specification generally therefore an aggregation of fields is referred to as a record or a data structure and an aggregation of records is referred to as a table. 

The metadata of a database typically includes schemas table indexes and database statistics. A schema is a structural description of the data in the database. A schema typically defines the columns of a table the data types of the data contained in each column which columns to include in an index and so on. An index is a database structure used to optimize access to the rows in a table. An index is typically smaller than a table because an index is created using one or more columns of the table and an index is optimized for quick searching usually via a balanced tree. Database statistics describe the data in tables of a database. Database statistics may describe for example the number of records having a particular value for a particular field. As with the data of a database metadata is often stored in tables of the database.

A computer system typically operates according to computer program instructions in computer programs. A computer program that supports access to information in a database is typically called a database management system or a DBMS. A DBMS is computer software that is responsible for helping other computer programs access manipulate and save information in a database. A DBMS often utilizes metadata of the database for accessing and manipulating data of the database.

A DBMS typically supports access and management tools to aid users developers and other programs in accessing information in a database. One such tool is the structured query language SQL . SQL is query language for requesting information from a database. Although there is a standard of the American National Standards Institute ANSI for SQL as a practical matter most versions of SQL tend to include many extensions. Here is an example of a database query expressed in SQL 

This SQL query accesses information in a database by selecting records from two tables of the database one table named stores and another table named transactions. The records selected are those having value Rochester in their store location field and transactions for the stores in Rochester. To retrieve the result for this SQL query the DBMS generates a number of primitive queries each primitive query used to retrieve a portion of the data needed to satisfy the SQL query. In retrieving the data for this SQL query an SQL engine will first use a primitive query generated by the DBMS to retrieve records from the stores table and then use another primitive query to retrieve records from the transaction table. Records that satisfy the primitive query requirements then are merged in a join and returned as a result of the SQL query received by the DBMS.

To guard against loss of data from various causes power failures disk drive damage or even operator error databases are backed up. Backup refers to making copies of data so that these additional copies may be used to restore the original in the event of data loss. Backups are useful primarily to restore a computer to an operational state following a large disastrous loss of data as well as to restore small numbers of records after accidental deletion or corruption. Backups are typically that last line of defense against data loss and consequently the least granular and the least convenient to use. A backup system often may contain one or more copies of all data worth saving and the data storage requirements can be very large. Organizing this storage space and managing the backup process is a complicated undertaking.

Methods apparatus and computer program products are disclosed for backing up a database including providing in the database by a DBMS at least one record with at least one backup field the backup field being a data element that controls the backing up of the record and backing up by a backup module the record in dependence upon a value of the backup field.

The foregoing and other objects features and advantages of the invention will be apparent from the following more particular descriptions of exemplary embodiments of the invention as illustrated in the accompanying drawings wherein like reference numbers generally represent like parts of exemplary embodiments of the invention.

Exemplary methods apparatus and products for backing up a database according to embodiments of the present invention are described with reference to the accompanying drawings beginning with . sets forth a functional block diagram of an exemplary system for backing up a database according to embodiments of the present invention. The exemplary system of includes a database . The database stores data in tables where the tables are composed of records made up of fields one of which in this example is a backup field a data element that controls the backing up of the record. That is the record includes a backup field that controls the backing up of the particular record containing the backup field.

The exemplary system of includes a DBMS to provide access tools and management tools to aid users developers and other programs in accessing the data stored in tables of the database . Access and management tools provided by the DBMS may be implemented as software modules inside the DBMS. In the exemplary system of the DBMS includes an SQL module . SQL module is implemented as computer program instructions that execute an SQL query against the tables of database .

In the exemplary system of SQL module receives SQL queries for execution from job execution engine . Job execution engine is a software module that executes jobs such as job by passing commands from the jobs to software applications appropriate to the command. Jobs may mingle SQL queries with other commands to perform various data processing tasks. Job for example includes several commands for execution as part of job including 

In this example job execution engine will pass the operating system commands from job to an operating system for execution and pass the SQL queries from job to SQL module for execution. Job execution engine passes the SQL queries to SQL module through an application programming interface API of database management system DBMS . DBMS exposes DBMS API to enable applications such as for example job execution engine to access modules of the DBMS such as for example SQL module . The DBMS API provides a command set for administering the DBMS . The SQL command illustrated in job is an exemplary command in the command set exposed through DBMS API .

In the exemplary system of SQL module includes access plan generator . An access plan is a sequence of database operations for carrying out a query to the database. The access plan generator of is implemented as computer program instructions that create an access plan for an SQL query. An access plan is a description of database functions for execution of an SQL query. Taking the following SQL query as an example 

This access plan represents database functions that are carried out by primitive queries to the database. In the example above the DBMS uses primitive queries to scan through the stores table and for each stores record join all transactions records for the store. The transactions for a store in the transaction table are identified through the storeID field serving as a foreign key. The fact that a selection of transactions records is carried out for each store record in the stores table identifies the join function as iterative.

The exemplary access plan generator of includes a parser for parsing the SQL query. Parser is implemented as computer program instructions that parse the SQL query. AN SQL query is presented to SQL module in text form as the parameters of an SQL command. Parser retrieves the elements of the SQL query from the text form of the query and places them in a data structure more useful for data processing of an SQL query by SQL module .

In the exemplary system of access plan generator also includes an optimizer implemented as computer program instructions that optimize the access plan in dependence upon database management statistics . Database statistics may reveal for example that there are only two values for storeID in the transactions table so that it is more efficient to scan the transactions table rather than using an index to locate records with a particular value for storeID. Alternatively database statistics may reveal that there are many transaction records with only a few transactions records for each value for storeID so that it is more efficient to access the transactions records by an index.

Database statistics are typically implemented as metadata of a particular database table such as for example metadata of tables of database . Database statistics may include for example 

These three database statistics are presented for explanation only not for limitation. The use of any database statistics as will occur to those of skill in the art is well within the scope of the present invention. When the optimizer attempts to use databases statistics for a column of a table for example and finds the database statistics missing or stale the optimizer notifies statistics engine . Statistics engine then generates the missing or stale statistics.

In the exemplary system of the exemplary SQL module includes a primitives engine implemented as computer program instructions that execute primitive query functions in dependence upon the access plan. A primitive query function or simply a primitive is a software function that carries out actual operations on a database retrieving records from tables inserting records into tables deleting records from tables updating records in tables and so on. Primitives correspond to parts of an access plan and are identified in the access plan. Examples of primitives include the following database instructions 

In addition to the SQL module the exemplary DBMS of also includes a backup module a set of computer program instructions that backs up the database by copying records from the database to a backup database . The system of operates generally for backing up a database according to embodiments of the present invention by providing in the database by the DBMS at least one record with at least one backup field and backing up by the backup module the at least one record in dependence upon a value of the at least one backup field . The backup field is a data element that controls the backing up of the record . for convenience of explanation shows one table one record and one backup field . Readers will recognize however that in typical systems that backup a database according to embodiments of the present invention the database will include many tables records and backup fields and the backup module will operate in a loop that scans through the database record by record and backs up records according to the values of the backup fields in the records. A backup field may be a data element having a value that specifies whether to backup the record containing the backup field. Such a data element may be a Boolean field having values TRUE or FALSE TRUE indicating that the record is to be backed up FALSE indicating that the record is not to be backed up. The backup field may be a data element having a value that specifies when to backup the record. A value that specifies when to backup the record may specify a frequency for backing up the record and backing up the record may be carried out by backing up the record at the specified frequency hourly daily weekly and so on for example. A value that specifies when to backup the record may specify a sequence for backing up the record among other records and backing up the record may be carried out by backing up the record in the specified sequence first second third . . . last and so on.

Backing up a database in accordance with the present invention is generally implemented with computers that is with automated computing machinery. For further explanation therefore sets forth a block diagram of automated computing machinery comprising an exemplary computer useful in backing up a database according to embodiments of the present invention. The computer of includes at least one computer processor or CPU as well as random access memory RAM which is connected through a high speed memory bus and bus adapter to processor and to other components of the computer .

Stored in RAM is a DBMS computer program instructions for database management. The DBMS of includes an SQL module which in turn includes an access plan generator a statistics engine and a primitives engine each of which implement computer program instructions stored in RAM that operate computer as described above. The DBMS of also includes a backup module . The backup module is a set of computer program instructions a module of the DBMS configured for backing up a database according to embodiments of the present invention. Also stored in RAM is a database that includes at least one table at least one record and at least one backup field .

The backup module backs up the database by copying records from the database to a backup database on . The computer of operates generally for backing up a database according to embodiments of the present invention by providing in the database by the DBMS at least one record with at least one backup field and backing up by the backup module the at least one record in dependence upon a value of the at least one backup field . The backup field is a data element that controls the backing up of the record . for convenience of explanation shows one table one record and one backup field . Readers will recognize however that in typical computers that backup a database according to embodiments of the present invention the database will include many tables records and backup fields and the backup module will operate in a loop that scans through the database record by record and backs up records according to the values of the backup fields in the records. A backup field may be a data element having a value that specifies whether to backup the record containing the backup field. Such a data element may be a Boolean field having values TRUE or FALSE TRUE indicating that the record is to be backed up FALSE indicating that the record is not to be backed up. The backup field may be a data element having a value that specifies when to backup the record. A value that specifies when to backup the record may specify a frequency for backing up the record and backing up the record may be carried out by backing up the record at the specified frequency hourly daily weekly and so on for example. A value that specifies when to backup the record may specify a sequence for backing up the record among other records and backing up the record may be carried out by backing up the record in the specified sequence first second third . . . last and so on.

Also stored in RAM is an operating system . Operating systems useful backing up a database according to embodiments of the present invention include UNIX Linux Microsoft XP AIX IBM s i5 OS and others as will occur to those of skill in the art. The operating system the DBMS and the database in the example of are shown in RAM but many components of such software typically are stored in non volatile memory also such as for example on a disk drive .

The computer of includes a disk drive adapter coupled through expansion bus and bus adapter to processor and other components of the computer . The disk drive adapter connects non volatile data storage to the computer in the form of disk drive . Disk drive adapters useful in computers for backing up a database according to embodiments of the present invention include Integrated Drive Electronics IDE adapters Small Computer System Interface SCSI adapters and others as will occur to those of skill in the art. Non volatile computer memory also may be implemented for as an optical disk drive electrically erasable programmable read only memory so called EEPROM or Flash memory RAM drives and so on as will occur to those of skill in the art.

The example computer of includes one or more input output I O adapters . I O adapters implement user oriented input output through for example software drivers and computer hardware for controlling output to display devices such as computer display screens as well as user input from user input devices such as keyboards and mice. The example computer of includes a video adapter which is an example of an I O adapter specially designed for graphic output to a display device such as a display screen or computer monitor. Video adapter is connected to processor through a high speed video bus bus adapter and the front side bus which is also a high speed bus.

The exemplary computer of includes a communications adapter for data communications with other computers and for data communications with a data communications network . Such data communications may be carried out serially through RS 232 connections through external buses such as a Universal Serial Bus USB through data communications data communications networks such as IP data communications networks and in other ways as will occur to those of skill in the art. Communications adapters implement the hardware level of data communications through which one computer sends data communications to another computer directly or through a data communications network. Examples of communications adapters useful for backing up a database according to embodiments of the present invention include modems for wired dial up communications Ethernet IEEE 802.3 adapters for wired data communications network communications and 802.11 adapters for wireless data communications network communications.

For further explanation sets forth a flow chart illustrating an exemplary method for backing up a database according to embodiments of the present invention. The database includes a table the table includes records the records include fields and the database is operated by a DBMS that includes a backup module like the ones described above with regard to references on . The backup module operates in a loop that scans through the database record by record and backs up records according to the values of the backup fields in the records. That is the backup module determines for each record whether and when to backup the record in accordance with the values of the one or more backup fields in the record.

The method of includes providing in the database by the DBMS at least one record with at least one backup field . The backup field is a data element in a record that controls the backing up of the record. The method of also includes backing up by the backup module the record in dependence upon a value of the backup field. In the example of the backup field is a data element having a value that specifies whether to backup the record. Such a data element may be a Boolean field having values TRUE and FALSE TRUE indicating that the record is to be backed up FALSE indicating that the record is not to be backed up.

The method of also includes tracking whether the at least one record has been backed up at least once. Such tracking may be carried out by an additional backup field for example a Boolean field in which the value TRUE indicates that the record has been backed up at least once and FALSE indicates no previous backup. In the method of backing up the record includes backing up the record only once if the value that specifies whether to backup the at least one record specifies that the record is not to be backed up. That is the method of includes a determination whether to backup the record according to the value of the backup field which in this example is a data element whose value specifies whether to backup the record containing the backup field. If the determination is that the backup field specifies a backup backup proceeds normally. If the determination is that the backup field specifies no backup the record is nevertheless backed up at least once . The backup fields can be made available for users to edit or change at will including users specifying that certain records are not to be backed up at all and this at least one backup step is optional depending on the particular embodiment or installation. It has the advantage however of providing the efficiency of avoiding the cost of repeated backups while still providing at least some protection against data loss and it can function effectively even for records specified by users for no backup.

For further explanation sets forth a flow chart illustrating a further exemplary method for backing up a database according to embodiments of the present invention. The method of is similar to the method of including as it does providing in a database a record with at least one backup field and backing up the record in dependence upon a value of the backup field. In the method of however unlike the method of the backup field is a data element having a value that specifies when to backup the record. Even more specifically in the method of the value that specifies when to backup the record specifies a frequency for backing up the record such as for example hourly daily weekly monthly and so on. Also in the method of backing up the record includes backing up the record at the specified frequency.

For further explanation sets forth a flow chart illustrating a further exemplary method for backing up a database according to embodiments of the present invention. The method of is similar to the method of including as it does providing in a database a record with at least one backup field and backing up the record in dependence upon a value of the backup field. In the method of also like the method of the backup field is a data element having a value that specifies when to backup the record. Unlike the method of however in the method of the value that specifies when to backup the record specifies a sequence for backing up the record such as for example first second third . . . last and so on. Also in the method of backing up the record includes backing up the record in the specified sequence. This method benefits users who want to backup active records first as well as users who want to backup the active records last depending on whether it is important to the user to have these records current at the beginning of a replication period or at the end of the replication period.

In view of the explanations set forth above readers will recognize that the benefits of backing up a database according to embodiments of the present invention include granting to database administrators and even to end users the tremendous flexibility and power to control backup on a record by record basis through an entire database.

Exemplary embodiments of the present invention are described largely in the context of a fully functional computer system for backing up a database. Readers of skill in the art will recognize however that the present invention also may be embodied in a computer program product disposed on signal bearing media for use with any suitable data processing system. Such signal bearing media may be transmission media or recordable media for machine readable information including magnetic media optical media or other suitable media. Examples of recordable media include magnetic disks in hard drives or diskettes compact disks for optical drives magnetic tape and others as will occur to those of skill in the art. Examples of transmission media include telephone networks for voice communications and digital data communications networks such as for example Ethernets and networks that communicate with the Internet Protocol and the World Wide Web as well as wireless transmission media such as for example networks implemented according to the IEEE 802.11 family of specifications. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that although some of the exemplary embodiments described in this specification are oriented to software installed and executing on computer hardware nevertheless alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.

It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims.

