---

title: Building compound extensible AJAX applications
abstract: A method of building compound extensible Asynchronous JavaScript And eXtensible Markup Language (AJAX) applications. A server-side web component utility searches an extension registry for Jazz web User Interface (UI) components and generates cached strings of JavaScript code based on the Jazz web UI components. When a browser accesses a Jazz web UI home page, the web component utility uses script tags to download the cached strings of JavaScript code. The web component utility executes the cached strings of JavaScript code and registers multiple available Jazz web UI components with an AJAX package management system. The web component utility serializes a subset of the extension registry that includes multiple extension points declared within the available Jazz web UI components. The Jazz web browser-based functionality downloads the extension registry subset data, parses the data, and makes the data available through one or more JavaScript Application Programming Interfaces (APIs).
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08037484&OS=08037484&RS=08037484
owner: International Business Machines Corporation
number: 08037484
owner_city: Armonk
owner_country: US
publication_date: 20070703
---
The present invention relates in general to data processing systems and in particular to composite web applications. Still more particularly the present invention relates to an improved method and system for building compound extensible Asynchronous JavaScript And eXtensible Markup Language AJAX applications.

Composite applications enable multiple independent groups to contribute components of an application. The multiple independently developed and or contributed components are executable within the same runtime context. However conventional methods of implementing composite web applications e.g. IBM s WebSphere Portal Eclipse and Microsoft s .NET do not address the relatively new domain of rich web applications such as Asynchronous JavaScript And eXtensible Markup Language AJAX . AJAX is a development technique for creating interactive web applications that makes web pages feel more responsive by exchanging small amounts of data between a web page and a web server and making page user interface updates incrementally without having to reload the entire page.

Java is an object oriented programming language which utilizes high level syntax derived from C and C but includes a simpler object model with fewer low level facilities. Java programs are typically compiled into bytecode which can either be interpreted at run time or compiled into native machine code for execution. Java programs utilize configurable security features to enable selective restriction of network and or file access operations. AJAX utilizes a client side script language such as JavaScript along with eXtensible Markup Language XML to enable the creation of the initial conditions for the evolution of dynamic intuitive complex and data centric user interfaces in web pages. AJAX thus increases the speed interactivity and ease of use of web pages.

Disclosed are a method system and computer storage medium for building compound extensible Asynchronous JavaScript And eXtensible Markup Language AJAX applications. AJAX is a development technique for creating interactive web applications that makes web pages feel more responsive by exchanging small amounts of data between a web page and a web server and making page user interface updates incrementally without having to reload the entire page. A server side web component utility searches an extension registry for Jazz web User Interface UI components and generates cached strings of JavaScript code based on the Jazz web UI components. Jazz web components are defined as web modules that extend a particular extension point e.g. com.ibm.team.repository.web.webBundles thereby allowing the component searching utility to differentiate web UI modules from other modules and make web UI module resources available to remote systems by giving them a Uniform Resource Identifier URI namespace on the server e.g. web bundle id . When a browser accesses a Jazz web UI home page the web component utility uses script tags to download and load the cached strings of JavaScript code. The web component utility executes the cached strings of JavaScript code and registers multiple available Jazz web components with an AJAX package management system. The web component utility serializes a subset of the extension registry that includes multiple extension points declared within the available Jazz web components and the Jazz web browser based functionality downloads this extension registry subset data parses it and downloads and makes it available through one or more JavaScript Application Programming Interfaces APIs .

The above as well as additional objectives features and advantages of the present invention will become apparent in the following detailed written description.

The present invention provides a method system and computer storage medium for building compound extensible Asynchronous JavaScript And eXtensible Markup Language AJAX applications. As utilized herein AJAX is defined as a development technique for creating interactive web applications that makes web pages feel more responsive by exchanging small amounts of data between a web page and a web server and making page user interface updates incrementally without having to reload the entire page.

With reference now to there is depicted a block diagram of an exemplary computer with which the present invention may be utilized. Computer includes a processor unit that is coupled to a system bus . A video adapter which drives supports a display is also coupled to system bus . System bus is coupled via a bus bridge to an Input Output I O bus . An I O interface is coupled to I O bus . I O interface affords communication with various I O devices including a keyboard a mouse a Compact Disk Read Only Memory CD ROM drive and a flash memory drive . The format of the ports connected to I O interface may be any known to those skilled in the art of computer architecture including but not limited to Universal Serial Bus USB ports.

Computer is able to communicate with a server via a network using a network interface which is coupled to system bus . Network may be an external network such as the Internet or an internal network such as an Ethernet or a Virtual Private Network VPN . Server is configured similarly to computer .

A hard drive interface is also coupled to system bus . Hard drive interface interfaces with a hard drive . In one embodiment hard drive populates a system memory which is also coupled to system bus . System memory is defined as a lowest level of volatile memory in computer . This volatile memory may include additional higher levels of volatile memory not shown including but not limited to cache memory registers and buffers. Code that populates system memory includes an Operating System OS application programs and an extension registry . Extension registry includes multiple extension points A through N where N is an integer. In another embodiment extension registry may instead be located in server .

OS includes a shell for providing transparent user access to resources such as application programs . Generally shell as it is called in UNIX is a program that provides an interpreter and an interface between the user and the operating system. Shell provides a system prompt interprets commands entered by keyboard mouse or other user input media and sends the interpreted command s to the appropriate lower levels of the operating system e.g. kernel for processing. As depicted OS also includes kernel which includes lower levels of functionality for OS . Kernel provides essential services required by other parts of OS and application programs . The services provided by kernel include memory management process and task management disk management and I O device management.

Application programs include a browser . Browser includes program modules and instructions enabling a World Wide Web WWW client i.e. computer to send and receive network messages to the Internet. Computer may utilize HyperText Transfer Protocol HTTP messaging to enable communication with server . Application programs in system memory also include a web component utility and an AJAX package management system . Web component utility extension registry and or AJAX package management system perform the functions illustrated in which is discussed below.

The hardware elements depicted in computer are not intended to be exhaustive but rather represent and or highlight certain components that may be utilized to practice the present invention. For instance computer may include alternate memory storage devices such as magnetic cassettes Digital Versatile Disks DVDs Bernoulli cartridges and the like. These and other variations are intended to be within the spirit and scope of the present invention.

With reference now to there is illustrated a high level logical flowchart of an exemplary method of building compound extensible AJAX applications according to an embodiment of the invention. The process begins at block in response to computer accessing network . Web component utility scans extension registry for Jazz web components as depicted in block . As utilized herein Jazz web components are defined as web modules that extend an extension point e.g. com.ibm.team.repository.web.webBundles and are automatically exposed on the network at the URI server root web module id . In one embodiment the Jazz web components are Open Services Gateway initiative OSGi bundles developed by emerging Equinox server side middleware. As utilized herein OSGi is defined as an open standards initiative which specifies a Java based service platform that can be remotely managed. In particular OSGi provides a framework that defines an application life cycle model and a service registry.

Web component utility generates cached strings of JavaScript code using the located Jazz web components as shown in block . At block web component utility determines whether a browser such as browser is accessing the Jazz web User Interface UI . If browser is not accessing the Jazz web UI the process returns to block . If browser accesses the Jazz web UI web component utility accesses the cached JavaScript by utilizing simple script tags as depicted in block . Web component utility executes the JavaScript to register available Jazz web components with AJAX package management system as shown in block . In one embodiment AJAX package management system may be a Dojo JavaScript Toolkit. As utilized herein a Dojo JavaScript Toolkit is defined as a modular open source JavaScript Toolkit also referred to as a library that is designed to enable the rapid development of JavaScript and or AJAX based applications and web sites.

Web component utility serializes a subset of extension registry which includes extension points A through N that are declared in the registered Jazz web components as depicted in block . In one embodiment the serialized subset of extension registry utilizes a JavaScript Object Notification JSON format i.e. a lightweight data interchange format . Web component utility parses the serialized subset to make extension points A through N available via JavaScript Application Programming Interfaces APIs as shown in block and the process terminates at block .

In one embodiment the JavaScript APIs are clones of one or more APIs within extension registry e.g. org.eclipse.core.runtime.IExtensionRegistry . The extended Jazz extension points A through N thus make the current web perspective available in the web workbench thereby enabling the web perspective to be automatically loaded the first time that a user enters the web perspective. Users may subsequently declare and extend Jazz extension points A through N by utilizing conventional methods and tools that are used to create Eclipse extension points. Furthermore users may easily access Jazz extension points A through N via local JavaScript objects.

The present invention thus provides a method of building compound extensible AJAX applications. Web component utility searches extension registry for Jazz web components and generates cached strings of JavaScript code based on the Jazz web components. When a browser accesses a Jazz web user interface UI home page web component utility uses script tags to access the cached strings of JavaScript code. Web component utility executes the cached strings of JavaScript code and registers multiple available Jazz web components with AJAX package management system . Web component utility serializes a subset of extension registry that includes multiple extension points A through N declared within the available Jazz web components. Web component utility parses the subset to make extension points A through N available through one or more JavaScript application programming interfaces APIs .

It is understood that the use herein of specific names are for example only and not meant to imply any limitations on the invention. The invention may thus be implemented with different nomenclature terminology and associated functionality utilized to describe the above devices utility etc. without limitation.

In the flow chart above while the process steps are described and illustrated in a particular sequence use of a specific sequence of steps is not meant to imply any limitations on the invention. Changes may be made with regards to the sequence of steps without departing from the spirit or scope of the present invention. Use of a particular sequence is therefore not to be taken in a limiting sense and the scope of the present invention is defined only by the appended claims.

While an illustrative embodiment of the present invention has been described in the context of a fully functional computer system with installed software those skilled in the art will appreciate that the software aspects of an illustrative embodiment of the present invention are capable of being distributed as a program product in a variety of forms and that an illustrative embodiment of the present invention applies equally regardless of the particular type of media used to actually carry out the distribution. Examples of the types of media include recordable type media such as thumb drives floppy disks hard drives CD ROMs DVDs.

While the invention has been particularly shown and described with reference to a preferred embodiment it will be understood by those skilled in the art that various changes in form and detail may be made therein without departing from the spirit and scope of the invention.

