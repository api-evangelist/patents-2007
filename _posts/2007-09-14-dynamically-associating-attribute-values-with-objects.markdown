---

title: Dynamically associating attribute values with objects
abstract: Dynamically associating an attribute and an associated value to an object includes dynamically associating attribute-value sets to an object, but is not so limited. An exemplary system includes a directory component that can be configured to dynamically assign different values, for a set attributes, to an object. An exemplary directory application can be configured to select an attribute-value set for an object based in part on a group membership determination, and a precedence parameter associated with an attribute-value, set, or other grouping. Other embodiments are available.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08095970&OS=08095970&RS=08095970
owner: Microsoft Corporation
number: 08095970
owner_city: Redmond
owner_country: US
publication_date: 20070914
---
This application claims the benefit of U.S. Provisional Application No. 60 901 940 filed Feb. 16 2007 which is hereby incorporated by reference in its entirety.

Directory applications can be used to organize information such as network users and resources associated with an enterprise. A particular directory may include a number of objects wherein each object may include one or more associated attributes. The attributes may in turn have one or more associated values. As an example a directory application may allow customers to set one password and account lockout setting for each domain user. If customers desire different password and account lockout settings for different sets of users they may be required to either create a password filter or deploy multiple domains which can be inefficient and time consuming.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended as an aid in determining the scope of the claimed subject matter.

Embodiments are provided to dynamically associate an attribute and an associated value to an object including associating attribute value sets to an object but the embodiments are not so limited. In an embodiment a system includes a directory component that can be configured to dynamically assign different values for a set attributes to an object.

These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory only and are not restrictive of the invention as claimed.

Embodiments are provided to dynamically associate a set of attributes and corresponding values to an object but the embodiments are not so limited. In an embodiment a system includes a directory component that can be configured to dynamically assign different values for a set attributes to an object based in part on a number of rules that the object satisfies. In one embodiment a system can be configured to select a set of attributes and corresponding values for any object based in part on a group membership associated with the object and a precedence number of an attribute set. Components of the system can also be used to assign precedence parameters and other parameters. Accordingly the various embodiments provide an extensible mechanism to assign dynamic values to an object s attributes based in part on a number of rules that an object satisfies.

In an embodiment a directory application can be configured to dynamically associate a set of attributes and corresponding values to an object based in part on a number of group and precedence rules. In one embodiment the directory application can be configured as a software program that can operate to select a set of attributes and corresponding values for any object based in part on a group membership associated with an object and a precedence parameter associated with an attribute value or attribute value set. The directory application can be used to link or associate a set of attributes and corresponding values to a directory group domain or other construct. The directory application can further be used to associate a member of a group with a set of attributes and values.

The directory application may be further configured to use one or more rules and any associated parameters such as one or more precedence based rules and associated values for example to resolve which attribute value or values associated with an attribute set are to be assigned to an object. For example the directory application can use a numerical determination or other ranking determination to select or assign an attribute value or values associated with an attribute value set to an object when the object is associated with multiple groups having a plurality of attribute values or attribute value sets.

For example the directory application can be used with a directory having a number of objects to make various object based determinations and assessments. The objects can include one or more associated attributes and the one or more attributes can have one or more associated values. For example if the object satisfied condition X values a b and c can be associated with a first set of attributes and values l m and n can be associated with a second set of attributes. However if the object satisfied condition Y values e f and g can be associated with the first set of attributes.

The embodiments described herein can be configured to associate a number of attributes and or values with an object including using groups precedence rules and conditions. Precedence based rules may be used to determine which attribute value set is to be associated with a user object. For example user A may be a member of group X. User B may be a member of group Y. Based at least in part on the group memberships of user A and user B and one or more precedence parameters an attribute value set can be associated with each user.

The various embodiments can also be used with various operating systems including but not limited to network operating systems directory structures and or with other systems devices etc. In one embodiment a directory component can be included as part of an operating system OS including the login and access functionality associated with the OS. The directory component can be used to dynamically associate information associated with an object such as a user object for example. In certain embodiments a number of application programming interfaces APIs can be used to implement a particular functionality of the directory component.

As one example each enterprise user has an identity and a number of associated attributes e.g. username login password etc. . The directory component can be used by the OS to organize object groups in certain directories. For example a first group of users may be associated with a first directory based on an association with a certain project whereas a second group of users may be associated with a second directory based on an association with a different type of project. Users may be assigned to different groups based on identity project type employment status title and other factors. Users may also be members of multiple groups. That is a user may have multiple group memberships.

In one embodiment a directory component can be used to assign attribute value s to an object. The directory component can be configured to use group membership parameters when including an object in a directory wherein the object can be included as a member of one or more of the groups. A group can be also a member of one or more groups. To determine the group membership of an object the directory component can operate to directly and or transitively obtain a list of all the groups that a particular object belongs to.

The directory component can also be used to specify and use different password settings for different users based in part on a group membership parameter. Password setting may be controlled based in part on the nature of the system being accessed e.g. secret confidential unaffiliated user affiliated user etc. . For example a password setting may include a password length and a password expiration period. A system which includes trade secrets and other sensitive information may require a longer password and a shorter expiration period due in part to the sensitive nature of the system. The directory component can use a precedence parameter such as a precedence number associated with a password setting for example when assigning a different attribute value or values associated with a set of attributes values to an object based in part on a rule or a set of rules.

The embodiments described herein can be used with any object in a directory or other data structure to dynamically associate attribute values and or attribute value sets to an object. The embodiments can be further extended to solve situations where an object may need to be assigned a different set of attributes and values depending on whether the object satisfies a certain set of rules including precedence related rules and conditions.

As shows in the system includes a serving computing device that includes a directory component . The directory component includes a database component but is not so limited. While a number of components are shown to be included as part of the functionality of the serving computing device other serving devices can be used to employ one or more of the components. For example a structured query language SQL server can be used to implement the database component and a separate dedicated server can be used in conjunction with the directory component . The database component can be configured as a relational multi dimensional or other data repository that includes data management functionality. Other computing device configurations and implementations are available.

The database component is configured to store and maintain information. As shown the database component includes a number of objects attributes and values . The database component also includes a number of groups and precedence parameters but is not so limited. For example a first group may include a number of users or group members associated with a first domain and system type and a second group may includes a number of users associated with a second domain and system type. As described below a precedence parameter can be used when determining whether to assign an attribute value or values associated with an attribute value set to a user object. In an embodiment the precedence parameters comprise precedence numbers which can be used to determine an assignment of an attribute value or values associated with an attribute value set. In one embodiment the directory component can be configured as a software application which includes the functionality and applicability of a directory service application such as the ACTIVE DIRECTORY directory software application.

The directory component can be configured to include calculation and or other functionality including using a number of rules or rule sets to dynamically associate an attribute value or values with an object. The rules can be used to determine if an object satisfies a given condition and a number of associated values can be assigned to the object if the condition is satisfied. For example the rules can be configured as a step by step assessment as follows 1 If an attribute value set is applied directly to a user object the attribute value set is the resultant attribute value set 2 If more than one attribute value set is applied to the user object sort the list of attribute value sets based on a precedence parameter wherein the attribute value set with highest precedence parameter is the resultant attribute value set and 3 If no attribute value set is applied to the user object determine a global group membership of the user and obtain all attribute value sets that are applicable to the user based on the global group membership 4 Sort out list of attribute value sets obtained at 3 in order of precedence wherein the attribute value set with the highest precedence parameters is the resultant attribute value set and 5 If no attribute value set is obtained based on the foregoing apply a default domain policy.

In one embodiment the directory component can be used to dynamically associate an attribute value or values with one or more objects using group and precedence based rules and associated parameters. The directory component can also be used to determine an attribute value or attribute value set that applies to an object based on certain inputs but is not so limited. For example the directory component can be used to determine an attribute value set that applies to an object based in part on a username and current password input by a user wherein a precedence number can be used to dynamically assign different password attribute values to the user object based in part on a group membership determination.

Continuing with the example assume that a user s password is to be changed according to a company policy to change passwords every 60 days. Based in part on the requested change the directory component can be used to determine if the newly submitted password is in accord with a particular policy associated with an attribute value set. As used herein an attribute value set can include multiple attributes and associated values. For example an attribute value set may include a number of attribute value pairs wherein each attribute value pair includes an attribute and an associated value see . Accordingly the directory component can be used to determine what attribute value or attribute value set applies to a submitted password. It is possible that an attribute value set includes different password expiration periods wherein a particular expiration period may be assigned to a user object based in part on a group membership of the user. As described below the system can also be used to ensure that an entered password is in accord with an associated policy by ensuring that the entered password is in accord with a proper attribute value set that may be associated with the policy.

With continuing reference to the system can also include at least one client component or other interface. While one client component is shown such as a rich client running on a computing device for example the system can include any number of clients. Moreover the components of the system can communicate according to a wired wireless combination of wired and wireless and other communication methods. In an embodiment a user can use the client component to maintain arrange and otherwise manage rules objects groups attributes values precedence parameters and or other information associated with the directory component . For example a user can use the client component to define groups and precedence parameters associated with one or more objects which can then be stored in the database component . In one embodiment the client component can be configured as a user interface such as a web based interface for example that a user can use when managing objects groups attributes values precedence parameters and or other information.

For example a user can use the client component to define which users are to be associated with one or more groups or domains. A number of attributes and a number of associated values can be defined based on a certain policy or other reason for each user group or groups. Correspondingly a user can be identified by being a member of a certain group. In certain cases a group may have one associated user. Furthermore a user can be a member of multiple groups see for example . As described herein components of the system can be used to determine or identify any and all groups that a particular user is a member of or associated with.

As an illustrative example suppose each attribute value set is associated with a precedence number such as 1 2 3 etc. A user can use the client component to assign a precedence number to each type of attribute value set. In an alternative embodiment a user can use the client component to assign a precedence number to each attribute value if there are multiple values associated with an attribute. Once assigned the attribute value sets can be associated with a group or groups a domain or domain a system or systems or some other object or objects. Thereafter the directory component can operate to sort the list of attribute values or attribute value sets associated with groups which are associated to one or more objects and assign an attribute value or values associated with an attribute value set to the user object according to a desired implementation such as b rank order descending ascending random first last middle etc. or some other criteria.

For example the rules may be used by the directory component to select an attribute value set based on a lower precedence determination. If there is no attribute value set the rules may direct the directory component to use a default policy or some other desired policy. For example the default policy can be associated with a default attribute value set or specific policy associated with certain users. Accordingly the system is configured to use a default policy if there is no attribute value set associated with the group or groups that a user is associated with. The processes described herein can be used when associating an attribute value or attribute value set with any type of object.

Moreover components of the system can be used to determine if there are any attribute value sets associated with one or more identified groups. For example assume that a user is a member of ten groups and five of the groups have associated attribute value sets. Components of the system can be used to organize e.g. sort the attribute value sets and to select an appropriate attribute value set from the organized data structure wherein the appropriate attribute value set can be based on a defined policy policies or some other criteria. The system can be used implement the defined policy for members of multiple groups a member of no group members of a single group groups of no members groups having certain user characteristics e.g. security permissions access levels title location etc. etc.

In one embodiment one or more components of the system can be configured as an application programming interface API or other interactive interface and used to add delete and or modify one or more groups including attribute value precedence and other parameters associated with the one or more groups. For example a user can use an API when defining attributes and values for various groups. An API for example client component can also be used to define one or more rules including precedence based rules that can be used when resolving attribute value sets and or password policies to be associated with users of the system .

The system can be implemented as part of networked distributed or other computer implemented environment. The system and its components can communicate via a wired wireless and or a combination of communication networks with other systems component and devices. A number of client computing devices including desktop computers laptops handhelds or other smart devices can interact with and or be included as part of the system . In alternative embodiments the various components can be combined and or configured according to a desired implementation.

As described above a user such as an administrator for example can use the client component to maintain arrange and otherwise manage rules objects groups attributes values precedence parameters and or other information associated with the directory component . For example a user can use the client component to define which users are to be associated with one or more groups or domains. A user can also define a number of attribute values attribute value sets and or precedence parameters that can be used in various operations described below. In one embodiment an object table can include one or more password settings objects PSOs which can be used to represent one or more attribute value sets. Once defined the directory component can use information of the database component to determine whether there are one or more attribute value sets linked to one or more groups and any associated users but the embodiments are not so limited.

With continuing reference to at the directory component can use the information of the database component to determine a group membership of a user based in part on one or more rules and or other parameters. For example the directory component can use a username and a current password to ascertain whether a user belongs to one or more groups. In one embodiment user credentials or other user information can be determined based on a user input or some other operation and used in the process and to determine group membership. For example the directory component can be configured to determine a group membership of a user based in part on group identification association which can use identity and other user information when making the group membership determination.

At the directory component can use information of the database component to identify any potential attribute values or attribute value sets that may be associated with or linked to one or more of the groups in accordance with the group membership determination at . At the directory component operates to determine if there is an attribute value or attribute value set linked to or associated with a group based on the result at . For example the directory component can search through the database component to locate any attribute values or attribute value sets that are associated with a particular group based at least in part on the group membership determination.

If there is no attribute value or attribute value set associated with the user s group or groups at the directory component uses or assigns a default policy for the user. For example a user may be part of a group that does not require passwords or does not have attribute value sets associated with the group. The default policy can be set to expire after a certain amount of time or according to some other criteria. If there is more than one attribute value or attribute value set associated with the user s group or groups at the directory component can operate to sort or otherwise organize the number of attribute values or attribute value sets. For example the directory component can be configured to sort a plurality of attribute value sets in a numerical order such as a descending ascending or some other order. In one embodiment the directory component can sort a list of attribute values or attribute value sets in accordance with a number of precedence parameters such as by using one or more precedence numbers to identify one or more attribute value sets for example.

At the directory component can select an appropriate or resultant attribute value attribute value set or attribute value sets to be associated with the user based in part on the precedence parameters and associated rules . For example if a user is associated with multiple groups the directory component can select the appropriate attribute value set based at least in part on the lowest precedence number. Once selected the attribute value or attribute value set can be used to implement a particular policy or other procedure. For example a selected attribute value set can be used to ensure that a submitted user password meets the characteristics of a set corresponding with a company password policy.

In one embodiment a set of attributes can be fixed to a set of values that can be used to control user password complexity. For example certain attributes may be associated with certain user objects based on a password policy e.g. x number of characters and length of a password or some other policy. Two examples of these attributes may be password length and password expiration. A default set of values can be assigned to these attributes and any other sets can be defined by the users on a defined object. Every group may be linked to an attribute value set or implicitly linked to default attributes and values.

One issue stems from having static attributes and or values. For example a company may have a single password policy for the entire company that is for all the users in the company domain. A domain may be part of an active directory structure. Thus all the users in the company are associated with the same password policy and the company would like to assign different passwords and other criteria to certain employees based on different policies or other requirements. For example a password policy can refer to password characteristics. That is each password has to expire in so much time and have a certain format for example. In one embodiment different password characteristic policies can be assigned to or associated with different sets of users. The password characteristic policies can be used to differentiate the users and to associate permissions and access credentials for example.

With continuing reference to the following example illustrates the use of the flow in the context of a PSO. A PSO can be defined as an attribute value set that includes one or more attribute value pairs. For example password length of 10 characters describes an attribute value pair where password length is the attribute and 10 characters is the associated value. As described below can be used in the context of using a PSO when associating a policy with a user or users. For example a number of PSOs and or precedence parameters can be used when assigning a new password length and an associated expiration date to a particular domain user. Again components of are used in the following description but the embodiments are not so limited and other configurations are available. Moreover as described above a user can use the client component to maintain arrange and otherwise manage rules objects groups attributes values precedence parameters and or other information associated with the directory component or some other component device domain system etc.

At the directory component can use the information of the database component to determine or identify a user s group membership based in part on the identity of the user or other user data. At the directory component uses information of the database component to determine if there are any PSOs linked to an identified group or groups. At the directory component uses information of the database component to determine if there is a PSO linked to a group or groups. If there is no PSO associated with the user object s group or groups at the directory component uses or assigns a default password policy. The default password policy can be set to expire after a certain amount of time or according to some other criteria. If there is more than one PSO associated with the user s group or groups at the directory component operates to sort or otherwise organize the number of PSOs by some defined criteria such as by precedence for example.

In one embodiment the directory component can sort a list of PSOs by a precedence parameter such as precedence number for example. For example the directory component can sort a list of PSOs from a minimum precedence number to a maximum precedence number. At the directory component can associate a PSO with a user object based on the PSO corresponding to a certain precedence parameter such as having a lowest or minimum precedence number for example. In another embodiment the directory component can associate a PSO with a user object based on the PSO having the greatest or maximum precedence number. Other PSO assignment methodologies can be implemented in accordance with a desired implementation.

As described above a user can define or create an attribute value set such as a PSO for example that can be associated with and assigned to a user object based on a number of rules parameters and or other factors. In alternative embodiments an application can be configured to define a number of attribute value sets that can be dynamically associated with a number of user objects based on a given policy which can be implemented using precedence rules for example. For example an attribute value set can be associated with a particular password policy for an enterprise. If an attribute password length has a value of ten characters then the attribute password expiration has a value defined as a number of days months etc.

As described above one or more values associated with an attribute value set can be dynamically assigned to a user object based in part on group membership and other factors. Continuing with the example of each attribute value set can be resolved to an associated group or groups. The directory application see directory application of can use information of a database to determine which attribute value sets correspond to which groups. Correspondingly attribute value set and its precedence number correspond with Group attribute value set and its precedence number correspond with Group and attribute value set and its precedence number correspond with Group . Additionally User is a member of Groups and User is a member of Groups and and User is only a member of Group .

Once it has been determined which groups are associated with a particular user object a password object for example the directory application can dynamically assign attribute values associated with an attribute value set a password length and an expiration period for this example to the user object based in part on group membership and or precedence determination. For example the directory application can use information associated with the database to determine which user belongs to which group or groups. Identity and other user information can be used as part of the group member determination.

For this example the directory application can be configured to assign values of an attribute value set having the lowest precedence number when a user belongs to multiple groups. Accordingly since User belongs to 3 groups Groups the directory application dynamically assigns the attribute values corresponding to the attribute value set having the lowest precedence number which is attribute value set having a precedence number of one. Since User belongs to 2 groups Groups and the directory application dynamically assigns the attribute values corresponding to the attribute value set having the lowest precedence number for those groups which is attribute value set having a precedence number of 2. Finally since User belongs to only Group the directory application dynamically assigns the attribute values corresponding to the attribute value set to User . While an order of assignment is described in this example the assignments can be simultaneously implemented or according to a different order.

As further example assume there are 2 password settings objects PSOs having the following attributes and values 

As used in this example the term linked refers to an association between PSO and a group e.g. the PSO points to a group . As objects a PSO and a group can occupy a row in an object table wherein a unique number can be used to represent the PSO and the group since each table row has a unique number. In one embodiment a link table includes three columns a source column a target column and a relationship column. Continuing with this example the link table would include a row having PSO as the source group as the target and Attached to as the relationship wherein the source and the target can be represented by the associated row numbers. In similar fashion a user can be added or linked to a group. For this example the user would be the source the group would be the target and membership would be the relationship.

Continuing with the example above the resultant set of attributes and values that apply to a user object can be determined using the process depicted in . Using the flow of User can be associated with the attributes and corresponding values defined in PSO administrators meaning that user would be required to have a password length of at least 15 characters and to change their password at least every 10 days. User would be associated with the attributes and corresponding values defined in PSO power users meaning that user would be required to have a password length of at least 10 characters and to change their password at least every 30 days. Finally. User would be associated with the attributes and corresponding values defined in the default policy meaning that user would be required to have a password length of at least 8 characters and be required to change their password at least every 90 days. In one embodiment the system can automatically inform a user of a new password policy and required password characteristics based on the selected attribute value or attribute value set.

The following example tracks a parking enforcement application. The administrator marks certain parking places as special and assigns users to certain groups. For example there are 2 handicapped parking spaces 10 vice president parking spaces and 3 maintenance parking spaces. Further there are 5 groups all maintenance employees all business operations employees maintenance vice presidents business operations vice presidents and handicap employees . A parking enforcement officer would go up to one car read the license plate figure out who s car it is then ask the system if that person is allowed to park in the spot they are in the spots they are allowed to park in is the attribute and the values are possible are handicapped vp maintenance and general parking . So if they are parked in a handicap spot and they are not in that group they get towed meaning handicap has the highest precedence. Or say the person is a VP of maintenance they are members of the groups maintenance vice presidents and all maintenance employees then they can park in a VP spot or a maintenance spot or a general parking spot.

The following example tracks a hospital pain medication application. The administrator sets up groups according to what medical problems they have and each group is associated with some types of medication. For example people with headaches define one group and the associated medication is pain medication aspirin. Another group includes people recovering from laser eye surgery and the associated medications are eye drops anti bacterial and pain medication eye drop numbing agent and aspirin. Another group includes people with a brain injury and the associated medication is blood medication thinner and pain killer morphine. Now when a patient complains of pain the nurse could input the patient s name into the pain medication application and see what pain medication to administer. If we assume the precedence is based on the severity of the pain medication then a patient who simply has a headache gets aspirin and a patient recovering from laser eye surgery and has headaches gets eye drop Novocain and aspirin and a patient with a headache and a brain injury gets morphine etc. The groups assist in defining attributes and values of pain medication.

As yet another example a driver s license includes name address and phone number attributes. Other attributes may include family hometown car type etc. wherein all of the attributes and or values may define a number of groups. That is each group may include the same type of car last name etc. Certain attributes can be associated with certain groups and an attribute value or attribute value set can be associated with a group or groups based on a group membership determination and a precedence determination. For example values associated with an attribute value set can be dynamically assigned to a group based on the eye color of group members.

Referring now to the following discussion is intended to provide a brief general description of a suitable computing environment in which embodiments of the invention may be implemented. While the invention will be described in the general context of program modules that execute in conjunction with program modules that run on an operating system on a personal computer those skilled in the art will recognize that the invention may also be implemented in combination with other types of computer systems and program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the invention may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Referring now to an illustrative operating environment for embodiments of the invention will be described. As shown in computer comprises a general purpose desktop laptop handheld or other type of computer capable of executing one or more application programs. The computer includes at least one central processing unit CPU a system memory including a random access memory RAM and a read only memory ROM and a system bus that couples the memory to the CPU . A basic input output system containing the basic routines that help to transfer information between elements within the computer such as during startup is stored in the ROM . The computer further includes a mass storage device for storing an operating system application programs and other program modules.

The mass storage device is connected to the CPU through a mass storage controller not shown connected to the bus . The mass storage device and its associated computer readable media provide non volatile storage for the computer . Although the description of computer readable media contained herein refers to a mass storage device such as a hard disk or CD ROM drive it should be appreciated by those skilled in the art that computer readable media can be any available media that can be accessed or utilized by the computer .

By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EPROM EEPROM flash memory or other solid state memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer .

According to various embodiments of the invention the computer may operate in a networked environment using logical connections to remote computers through a network such as a local network the Internet etc. for example. The computer may connect to the network through a network interface unit connected to the bus . It should be appreciated that the network interface unit may also be utilized to connect to other types of networks and remote computing systems. The computer may also include an input output controller for receiving and processing input from a number of other devices including a keyboard mouse etc. not shown . Similarly an input output controller may provide output to a display screen a printer or other type of output device.

As mentioned briefly above a number of program modules and data files may be stored in the mass storage device and RAM of the computer including an operating system suitable for controlling the operation of a networked personal computer such as the WINDOWS operating systems from MICROSOFT CORPORATION of Redmond Wash. The mass storage device and RAM may also store one or more program modules. In particular the mass storage device and the RAM may store application programs such as a directory application word processing application a spreadsheet application e mail application drawing application etc. As described above the functionality of the directory application can be included as part of the operating system functionality.

It should be appreciated that various embodiments of the present invention can be implemented 1 as a sequence of computer implemented acts or program modules running on a computing system and or 2 as interconnected machine logic circuits or circuit modules within the computing system. The implementation is a matter of choice dependent on the performance requirements of the computing system implementing the invention. Accordingly logical operations including related algorithms can be referred to variously as operations structural devices acts or modules. It will be recognized by one skilled in the art that these operations structural devices acts and modules may be implemented in software firmware special purpose digital logic and any combination thereof without deviating from the spirit and scope of the present invention as recited within the claims set forth herein.

Although the invention has been described in connection with various exemplary embodiments those of ordinary skill in the art will understand that many modifications can be made thereto within the scope of the claims that follow. Accordingly it is not intended that the scope of the invention in any way be limited by the above description but instead be determined entirely by reference to the claims that follow.

