---

title: Composite user interface and framework
abstract: Computer-implemented methods of processing contact records are provided. A user may merge and unmerge contact records to control which records are synchronized with each other. Identity claims of records may be compared to identify possible duplicate records. Identity claims may include addresses, phone numbers, instant messenger addresses or other contact data that is likely to be uniquely associated with a contact. When possible duplicate contact records are found, a dialog box is displayed that identifies the possible duplicate records and includes an option for merging the possible duplicate contact records.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07734577&OS=07734577&RS=07734577
owner: Microsoft Corporation
number: 07734577
owner_city: Redmond
owner_country: US
publication_date: 20070911
---
This application is a continuation of U.S. application Ser. No. 10 883 139 filed Jul. 1 2004 which is a continuation in part of application Ser. No. 10 692 164 filed Oct. 23 2003.

Computer devices are increasingly being used to store contact data. It is not uncommon for a user to store contact data in devices and locations such as mobile phones personal digital assistants PDAs laptop computers and servers connected to the Internet. Synchronization applications have been developed to help users synchronize contact dastored in different locations. For example after updating a phone number stored in a mobile telephone a particular synchronization application may be used to synchronize the updated phone number with contact data stored in an application such as Microsoft Outlook . The data stored in the same mobile phone may also be synchronized with a contact data stored in a proprietary contact application.

One of the common drawbacks associated with storing data such as contact data in several different devices and locations is that it is common to have inconsistent data. For example a user may update a friend s phone number stored on a mobile phone and update the same friend s address stored in a laptop computer. Several weeks later the user may not remember if the phone number stored in the mobile phone or the laptop computer is the most current number. Another common drawback associated with current systems and methods is that users may have redundant data. For example a user may store a phone number and home address in a contact application under the name Tom Smith and store a work email address and home address under the name Thomas Smith. This results in partial contact information being included in two different records.

Therefore there is a need in the art for systems and methods that increase the consistency of contact data stored in multiple devices and in multiple locations. There is also a need in the art systems and methods that reduce the amount redundant contact data.

Aspects of the present invention address one or more of the issues mentioned above thereby providing systems and methods that increase the consistency of contact data stored in multiple devices and reduce the amount of redundant contact data. A contact database stores a plurality of contact records. Related contact records are linked together so that updating one record results in the updating of the related records. A graphical user interface allows users to merge linked records. The unmerge command may result in the creation of a new composite record and the re linking of related contact records.

A basic input output system BIOS containing the basic routines that help to transfer information between elements within the computer such as during start up is stored in the ROM . The computer also includes a hard disk drive for reading from and writing to a hard disk not shown a magnetic disk drive for reading from or writing to a removable magnetic disk and an optical disk drive for reading from or writing to a removable optical disk such as a CD ROM or other optical media. The hard disk drive magnetic disk drive and optical disk drive are connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical disk drive interface respectively. The drives and their associated computer readable media provide nonvolatile storage of computer readable instructions data structures program modules and other data for the personal computer . It will be appreciated by those skilled in the art that other types of computer readable media that can store data that is accessible by a computer such as magnetic cassettes flash memory cards digital video disks Bernoulli cartridges random access memories RAMs read only memories ROMs and the like may also be used in the example operating environment.

A number of program modules can be stored on the hard disk drive magnetic disk optical disk ROM or RAM including an operating system one or more application programs other program modules and program data . A user can enter commands and information into the computer through input devices such as a keyboard and pointing device . Other input devices not shown may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through a serial port interface that is coupled to the system bus but may be connected by other interfaces such as a parallel port game port or a universal serial bus USB . Further still these devices may be coupled directly to the system bus via an appropriate interface not shown . A monitor or other type of display device is also connected to the system bus via an interface such as a video adapter . In addition to the monitor personal computers typically include other peripheral output devices not shown such as speakers and printers.

The computer can operate in a networked environment using logical connections to one or more remote computers such as a remote computer . The remote computer can be a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer although only a memory storage device has been illustrated in . The logical connections depicted in include a local area network LAN and a wide area network WAN . Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the local network through a network interface or adapter . When used in a WAN networking environment the personal computer typically includes a modem or other means for establishing communications over the wide area network such as the Internet. The modem which may be internal or external is connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the personal computer or portions thereof may be stored in the remote memory storage device.

It will be appreciated that the network connections shown are illustrative and other techniques for establishing a communications link between the computers can be used. The existence of any of various well known protocols such as TCP IP Ethernet FTP HTTP Bluetooth IEEE 802.11x and the like is presumed and the system can be operated in a client server configuration to permit a user to retrieve web pages from a web based server. Any of various conventional web browsers can be used to display and manipulate data on web pages.

Computer device includes a contact database for storing contact information. Contact information may include names addresses phone numbers email addresses instant messenger identifications etc. In alternative embodiments contact database may also store other data such as digital certificates passwords playlists data files or any other data that a user wishes to synchronize with a store. Moreover the function of the single database may be performed with two or more databases. For example a first database may store contact data and a second database may store playlists.

A plurality of synchronization adapters are used to synchronize data stored in contact database and stores and . One skilled in the art will appreciate that structure of any particular synchronization adapter may be a function of the type of store and an application programming interface API that is used to access data stored in contact database . One or more stores may be configured to not allow a user to manage data stored in that store. Active Directory for example allows users to read data but not to write data. Active Directory may be connected to computer device via an import adapter . Import adapter is used to transfer data from Active Directory to contact database .

A synchronization mapping record may include rules constraints or other information that governs the synchronization of data. For example if mobile phone only allows a user to store two phone numbers per name a constraint in synchronization mapping record may prevent more than two phone numbers per name from attempting to be synchronized with the data stored in mobile phone .

PDA publisher record mobile phone publisher record and contact application publisher record each synchronize with a composite record . Publisher records and and composite record may be included within contact database shown in . In an exemplary implementation a user may update John Smith s contact information stored in PDA . Synchronizing PDA with computer device causes PDA publisher record to include the updated contact information. The updated contact information is then synchronized with composite record . Composite record may then be synchronized with mobile phone publisher record and contact application publisher record . The next time that mobile phone is synchronized with computer device the contact data stored in mobile phone is synchronized with mobile phone publisher record . The contact data stored in contact application may be synchronized in a similar manner. Of course composite record may be synchronized with a plurality of additional publisher records which will lead to the synchronization of data stored in additional stores.

In the embodiment shown in records and are shown located within operating system . One of the advantages of locating the records within an operating system is that the number of APIs required to update data stored in several different stores can be minimized. In one embodiment a single API is used to manage the data stored within publisher records such as PDA publisher record mobile phone publisher record and contact application publisher record . This is in contrast to prior art systems in which a given store might be required to use one API for synchronizing data with data stored in a first application a second API for synchronizing data with data stored in a second application and so on.

Instead of synchronizing contact information with a publisher record the three data stores synchronize directly with a composite record . In an exemplary implementation a user may update John Smith s contact information stored in PDA . Synchronizing PDA with computer device causes the contact information to be synchronized with composite record . Thus the next time that mobile phone is synchronized with computer device the contact data stored in mobile phone is synchronized with composite record . The contact data stored in contact application may be synchronized in a similar manner. Of course composite record may be synchronized with the data stored in a plurality of additional stores.

In step possible duplicate contact records are identified. Possible duplicate contact records may correspond to contact records having the same identity claims. In step a dialog box is displayed that identifies the possible duplicate contact records and includes an option for merging the possible duplicate contact records. illustrates an exemplary dialog box . Dialog box identifies the stores that are the sources of possible duplicate contact records. Dialog box may also list the contact data that is the same for each of the contact records. For example dialog box may display the identity claims that resulted in the contact records being identified as possible duplicates.

In step a command to merge the possible duplicate records is received. The user may select merging now button to cause contact records to be merged. In steps the contact data from the at least two composite records is merged into a single composite record. For example if one composite record corresponds to a contact identified as John Smith and a second composite record corresponds to a contact identified as Jonathan Smith the contact data from both records would be merged into a single composite record that identify the contact with a single name. Finally in step the publisher records that were linked to the original composite records are linked to the single composite record. Re linking the publisher records to the composite record ensures that contact data will be synchronized appropriately.

In step possible duplicate contact records are identified. Possible duplicate contact records may correspond to contact records having the same identity claims. illustrates an exemplary dialog box . Dialog box identifies the stores that are the sources of possible duplicate contact records. Dialog box may also list the contact data that is the same for each of the contact records. For example dialog box may display the identity claims that resulted in the contact records being identified as possible duplicates.

In step a new composite record for the duplicate records may be created. The data from the duplicate contact records i.e. the composite records for the duplicate records will be merged into the new composite record. Alternatively a composite record may be modified to incorporate data included in another contact record. That is the data from two or more composite records may be combined without creating a new composite record. In step the contact data for the duplicate records is compared so that any conflicts in the duplicate contact records can be resolved. For example if one composite record corresponds to a contact identified as John Smith and a second composite record corresponds to a contact identified as Jonathan Smith the records may be duplicates but would have conflicting identity claims. Once the conflict is resolved the contact data from both records would be merged into a new composite record that identifies the contact with a single name.

In step a dialog box may be displayed to the user identifying conflicting data in the duplicate contact records e.g. a conflicting contact name as described above and the user is given an option to choose which contact name should be used for the new contact record or to cancel the merge all together. An exemplary dialog box is depicted in . Once the user resolves the conflicting data as described the data from the duplicate contact records is copied or merged into the single new composite record.

Finally in steps and any data stores that pointed to the original composite records are linked or redirected to the single or new composite record. Re linking the data stores to the new composite record ensures that contact data will be synchronized appropriately.

In another embodiment of merging contact records contact data is merged to form a union of properties. For example the contact data of one contact record may contain the phone number 206 123 4567 and the contact data of a second contact record may contain the phone number 123 4567 home . According to the embodiment the phone numbers would be merged to show a union of properties 206 123 4567 home as the resulting phone number.

In step if any of the subfields within the duplicate contact records were identified as conflicting a dialog box may be displayed to allow the user to choose the correct data to be included in a merged composite record for the duplicate contact records. Finally the correct data from the duplicate contact records may be copied or merged into a single composite record in step . Of course step may alternatively include merging data into a single existing record. The method described in can similarly be used for resolving conflicts in other types of identity claims such as conflicting phone numbers and addresses. It is further noted that some embodiments of the present invention may contain processes to automatically resolve conflicting identity claims such that no user interaction is required.

The description above has been given in terms of preferred and exemplary embodiments. Numerous other embodiments modifications and variations within the scope and spirit of the appended claims will occur to persons of ordinary skill in the art from a review of this disclosure.

