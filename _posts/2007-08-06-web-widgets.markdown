---

title: Web widgets
abstract: A media authoring tool includes web widgets for creating page elements for various types of media (e.g., websites, blogs, broadcasts, slide shows, multimedia presentations). A widget inspector associated with the widget can be used to modify the behavior of the widget.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08667415&OS=08667415&RS=08667415
owner: Apple Inc.
number: 08667415
owner_city: Cupertino
owner_country: US
publication_date: 20070806
---
Website creation tools targeted to the consumer market allow end users to create websites and other types of media e.g. blogs podcasts multimedia presentations slide shows with little or no knowledge of web languages. One popular website creation tool is iWeb developed by Apple Inc. Cupertino Calif. . Users of website creation tools often desire to have a large selection of interesting page elements e.g. text images video animation to choose from when creating a website. Some of these elements however can be tedious or time consuming to create and or may require the user to have extensive knowledge of expert features provided by the tool. Some website creation tools require the user to exit the tool or interact with a different user interface of the tool to accomplish certain tasks such as interacting with third party web services e.g. map services advertising services or searching directories and files for content e.g. digital photos to be included in the website.

A media authoring tool includes web widgets for creating page elements for various types of media e.g. websites blogs broadcasts slide shows multimedia presentations . A widget inspector associated with the widget can be used to modify the behaviour of the widget.

In some implementations a method includes generating a page for presentation in a user interface of a media authoring tool generating a widget and an associated widget inspector presenting the page and the widget inspector in the user interface presenting the widget on the page obtaining a user input through the widget inspector and automatically modifying a behavior of the widget based on the user input.

In some implementations a method includes generating a page for presentation in a user interface of a media authoring tool obtaining a user input specifying a content source generating a widget for displaying content from the content source the widget including a navigation control presenting the page and the widget in the user interface presenting first content through the widget obtaining navigation control input and presenting second content through the widget based on the navigation control input.

Other implementations are disclosed that are directed to systems methods and computer readable mediums.

Referring to a user has selected a blank page from a menu in the user interface of the media authoring tool. In some implementations the user can select a page template from a list of page templates. The page templates can be associated with themes. A page template can include a professional looking layout of various page elements e.g. text boxes shapes web widgets having various properties or attributes e.g. font size location orientation color opacity texture shape shadows animation that the user can manipulate and customize through the user interface . With some media authoring tools e.g. iWeb a website created by a user can be automatically published to the Internet where the website can be viewed by anyone with a web browser.

In some implementations the user interface can include a tool bar for allowing the user to select various editing tools for creating and modifying elements on the webpage . Some examples of tools include a text box tool for creating text boxes a shapes tool for adding shapes and a web widget tool for invoking web widgets.

A web widget functions like an application in the media authoring tool. Web widgets can be built using various web technologies including for example a markup language e.g. HTML XHTML Cascading Style Sheets CSS JavaScript etc. Web widgets can have their own user interfaces and controls for assisting the user in creating various page elements. A web widget can differentiate whether it is running in a media authoring tool or in a browser e.g. Safari .

Upon selection of the HTML snippet from the menu or other selection mechanism the widget inspector is presented on the web page . In some implementations the web inspector includes an editing window for pasting or typing HTML instructions. The user can type one or more HTML instructions in the editing window and click the Apply button to have the instructions interpreted and displayed in the display area of the web widget .

Referring to the user has typed the HTML instruction Hello p and World in the editing window of the widget inspector . When the user clicks the Apply button the HTML instructions are interpreted and the text Hello World is presented in the display area of the web widget .

The HTML web widget allows the user to easily generate HTML snippets and immediately see the results of those snippets in a single user interface of the tool. The user does not have to exit the tool or open a new interface which could disrupt the user s workflow. Nor does the user have to publish the page to see how the snippet will be rendered in a browser.

The ad web widget allows the user to easily interface with an ad service provider including account access and creation in a single user interface of the media authoring tool. The user does not have to exit the tool or open a new interface which could disrupt the user s workflow. Nor does the user have to publish the page to see how the ad will be rendered in a browser.

In some implementations the map can be provided by a map service e.g. Google Maps . The web widget can provide all the supporting code e.g. HTML JavaScript CSS for connecting to the map service sending requests for map data receiving the map data in response to the requests and the formatting of map data for presentation in the web widget . A communication channel can be established between the web widget and the map service using an operating system OS service or a library service provided by the system hosting the media authoring tool. In some implementations the host system e.g. a personal computer can be coupled to the Internet using a wired or wireless communication link. The OS or library service can establish the communication channel using known communication protocols e.g. TCP IP HTML Secure Socket Layer .

The map web widget allows the user to easily interface with a map service in a single user interface of the media authoring tool. The user does not have to exit the tool or open a new interface which could disrupt the user s workflow. Nor does the user have to publish the page to see how the map will be rendered in a browser.

Responsive to the user selection a page is generated for presentation in a user interface of the media authoring tool . A widget and an associated widget inspector are generated . The page is presented in the user interface together with the widget inspector . In some implementations the web widget is presented on the page . In other implementations the web widget can be presented at another location in the user interface and the user can then move the web widget onto the page e.g. drag and drop . The web widget can include a bounding box which includes handles for resizing. The web widget and widget inspector can be clicked and dragged to a desired location on the page. The user provides input into the widget inspector by typing pasting and or selecting predefined options . The behaviour of the web widget can be automatically modified based on the input .

The software stack can include an application layer and operating system layers. In this Mac OS example the application layer can include iWeb Core and Web Widget applications. The iWeb Core code includes code for the iWeb website creation tool and the web widget code includes code for implementing web widgets. The web widget code can include HTML CSS JavaScript and other resources. CSS is a stylesheet language used to describe the presentation of a document written in a markup language e.g. style web pages written in HTML XHTML . CSS can be used by authors and readers of web pages to define colors fonts layout and other aspects of document presentation. JavaScript is a scripting language which can be used to write functions that are embedded in or included from HTML pages and interact with a Document Object Model DOM of the page.

In some implementations the web widget code in the application layer uses WebKit services. WebKit is an application framework included with Mac OS X which is the basis of Mac OS X s Safari web browser. The framework allows third party developers to easily include Safari functionality in custom applications. WebKit includes an Objective C Application Programming Interface API that provides the capability to interact with a web server retrieve and render web pages download files and manage plug ins. WebKit also includes content parsers e.g. HTML CSS a JavaScript bridge e.g. for synchronizing between Safari and Java applets a JavaScript engine interpreter and a DOM. The WebKit can use services provided by Core Services which provide basic low level services. The Core Services can request services directly from the Core OS e.g. Darwin Unix .

The software stack provides the software development tools to create web widgets and the various features and processes described in reference to . Other software stacks and architectures are possible including architectures having more or fewer layers different layers or no layers.

The memory stores information within the system . In some implementations the memory is a computer readable medium. In other implementations the memory is a volatile memory unit. In yet other implementations the memory is a non volatile memory unit.

The storage device is capable of providing mass storage for the system . In some implementations the storage device is a computer readable medium. In various different implementations the storage device may be a floppy disk device a hard disk device an optical disk device or a tape device.

The input output device provides input output operations for the system . In some implementations the input output device includes a keyboard and or pointing device. In other implementations the input output device includes a display unit for displaying graphical user interfaces.

Various implementations of the systems and techniques described here can be realized in digital electronic circuitry integrated circuitry specially designed ASICs application specific integrated circuits computer hardware firmware software and or combinations thereof. These various implementations can include implementation in one or more computer programs that are executable and or interpretable on a programmable system including at least one programmable processor which may be special or general purpose coupled to receive data and instructions from and to transmit data and instructions to a storage system at least one input device and at least one output device.

These computer programs also known as programs software software applications or code include machine instructions for a programmable processor and can be implemented in a high level procedural and or object oriented programming language and or in assembly machine language. As used herein the terms machine readable medium and computer readable medium refer to any computer program product apparatus and or device e.g. magnetic discs optical disks memory Programmable Logic Devices PLDs used to provide machine instructions and or data to a programmable processor including a machine readable medium that receives machine instructions as a machine readable signal. The term machine readable signal refers to any signal used to provide machine instructions and or data to a programmable processor.

To provide for interaction with a user the systems and techniques described here can be implemented on a computer having a display device e.g. a CRT cathode ray tube or LCD liquid crystal display monitor for displaying information to the user and a keyboard and a pointing device e.g. a mouse or a trackball by which the user can provide input to the computer. Other kinds of devices can be used to provide for interaction with a user as well for example feedback provided to the user can be any form of sensory feedback e.g. visual feedback auditory feedback or tactile feedback and input from the user can be received in any form including acoustic speech or tactile input.

The systems and techniques described here can be implemented in a computing system that includes a back end component e.g. as a data server or that includes a middleware component e.g. an application server or that includes a front end component e.g. a client computer having a graphical user interface or a Web browser through which a user can interact with an implementation of the systems and techniques described here or any combination of such back end middleware or front end components. The components of the system can be interconnected by any form or medium of digital data communication e.g. a communication network . Examples of communication networks include a local area network LAN a wide area network WAN and the Internet.

The computing system can include clients and servers. A client and server are generally remote from each other and typically interact through a communication network. The relationship of client and server arises by virtue of computer programs running on the respective computers and having a client server relationship to each other.

Although a few implementations have been described in detail above other modifications are possible. For example the flow diagrams depicted in the figures do not require the particular order shown or sequential order to achieve desirable results. In addition other steps may be provided or steps may be eliminated from the described flow diagrams and other components may be added to or removed from the described systems. Accordingly various modifications may be made to the disclosed implementations and still be within the scope of the following claims.

