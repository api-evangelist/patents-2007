---

title: Automated event correlation
abstract: Events captured at an application are compared to event correlation instances, wherein an event correlation instance represents a relationship between events of components of the application. The event of a plurality of events that is a potential root cause event of the plurality of events is determined. The potential root cause event and component associated with the potential root cause event are outputted.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08205215&OS=08205215&RS=08205215
owner: Microsoft Corporation
number: 08205215
owner_city: Redmond
owner_country: US
publication_date: 20070504
---
Troubleshooting incidents in complex distributed applications used in enterprises is difficult and time consuming. Information available to system administrators includes events logged by various components of a distributed application. Using these events an administrator needs to manually backtrack a chain of events to nail down the root cause of an incident. This requires that the administrator have knowledge of relationships between various components of the application and also have knowledge of relationships between the events logged by different components of the application. The administrator must know under what all conditions a given event in a given component occurs. Today s systems fail to provide automated event correlation.

The following presents a simplified summary of the disclosure in order to provide a basic understanding to the reader. This summary is not an extensive overview of the disclosure and it does not identify key critical elements of the invention or delineate the scope of the invention. Its sole purpose is to present some concepts disclosed herein in a simplified form as a prelude to the more detailed description that is presented later.

Embodiments of the invention are directed to automated event correlation. Event correlation instances describe the relationships between application components and events logged by the components. Events logged by the application components are compared to the event correlation instances. Matching event correlation instances are analyzed to determine a potential root cause event of a group of events.

Many of the attendant features will be more readily appreciated as the same become better understood by reference to the following detailed description considered in connection with the accompanying drawings.

The detailed description provided below in connection with the appended drawings is intended as a description of the present examples and is not intended to represent the only forms in which the present examples may be constructed or utilized. The description sets forth the functions of the examples and the sequence of steps for constructing and operating the examples. However the same or equivalent functions and sequences may be accomplished by different examples.

Event correlation system may include a distributed application . Central event database is a database that stores events captured at components of distributed application . Distributed application includes an application made up of separate components that execute on different computing devices and or different virtual machines on the same computing device that are connected such as by a network. An example distributed application includes a client component executing on client that communicates with an application service component executing one or more middle tier servers . The application service component in turn communicates with a storage service component executing on one or more data storage servers . System services may work across all three tiers of distributed application such as directory security management event monitoring and the like. Distributed applications are often deployed in enterprise systems. It will be appreciated that embodiments of the invention are not limited to use with distributed applications but may be used with an application have components executing on a single computing device.

Distributed application may be monitored by an event monitor system service e.g. Microsoft System Center Operations Manager . Events that occur at distributed application may be logged and stored at central event database . An event includes an occurrence or happening that is significant to a component of the distributed application. When the event occurs the event and or information related to the event are stored in central event database .

Event correlation engine includes a service that continuously monitors events being logged into central event database and compares the events against event correlation instances. Any matches between events and event correlation instances are flagged and analyzed to determine a potential root cause event of an incident that triggered one or more events. The results determined by event correlation engine may be displayed in a potential root cause user interface UI . It will be appreciated that event correlation engine presents a potential root cause event and that a system administrator may have to perform additional analysis to determine if the potential root cause event was the actual root cause event.

Event correlation database may have stored event correlation instances for use by event correlation engine . In event correlation database has stored event correlation instance and event correlation instance . In one embodiment event correlation instances and have been created from event correlation template stored at event correlation database . Only one event correlation template is shown for the sake of clarity but it will be appreciated that event correlation database may have stored various templates to describe various relationships between events and their associated components.

Event correlation template and its instances and specify various components of distributed application the relationships between the components and the relationships between events logged by the different components. Event correlation template may be instantiated by adding particular application and computing device details to the template to create event correlation instances and . For example template and its instances and may capture information such as event E in component C causes event E in component C.

In one embodiment template includes a template schema. The template schema contains a list of components dependencies between them at a high level and the list of events in each component and their relationships. For example component C depends on component C. C.E is logged when C.E is logged. When C.E and C.E are found in central event database it is concluded that C is in a bad state due to C.E. In one embodiment an event correlation instance may be expressed using an instance schema based on the template schema. For example machine names where various components of the application are installed are stored in the instance schema.

In one embodiment event correlation template has been created by a developer of distributed application a third party developer an experienced system administrator or the like. Such users have good knowledge of distributed application and understand the relationships between events in different components of distributed application . This knowledge may be imparted into template . System administrators may tailor an event correlation template to their own enterprise system by instantiating the template and thus have automated troubleshooting when events occur in their distributed applications. Thus system administrators may have access to expert knowledge of a distributed application and have this knowledge applied to their particular enterprises in an automated fashion.

In one embodiment an event correlation creation user interface may be used to generate an event correlation instance from an event correlation instance template. In another embodiment UI may be used by a system administrator to generate event correlation templates for their enterprise system. In one embodiment template may be downloaded from an Internet site such as the site of the distributed application developer to event correlation database for use by a system administrator.

Turning to an embodiment of event correlation performed by event correlation engine is shown. In one embodiment the logic of may be implemented by computer readable instructions executable by one or more computing devices.

Event correlation engine may iterate an event through the event correlation instances to find event correlation instances that match the event. These matching event correlation instances may be flagged for further analysis. In one embodiment the comparison is performed by comparing the event to the causal event of an event correlation instance. For example an event is compared to event correlation instance by comparing the event to event E at C .

The flagged event correlation instances may be linked together using their event relationships to generate an event mapping as shown in . In one embodiment two event correlation instances may be linked when the resulting event of one event correlation instance is the same as the causal event of another event correlation instance. For example in event correlation instance is linked to event correlation instance since event is the resulting event in event correlation instance and the causal event in event correlation instance .

After developing the event mapping from the event correlation instances event correlation engine may then backtrack through the event correlation instances in the event mapping to discover the event that is the potential root cause of events . As shown in backtrack steps and from events and respectively arrive at event . Backtrack step from event arrives at event . Since there is not backtrack relationship from event event is a potential root cause of events . Event E and its corresponding component C may then be outputted from event correlation engine as a potential root cause of an incident and displayed in potential root cause UI .

Turning to a flowchart shows the logic and operations of event correlation by event correlation engine in accordance with an embodiment of the invention. In one embodiment at least a portion of the logic of flowchart may be implemented by computer readable instructions executable by one or more computing devices.

Starting in block one or more events are received at event correlation engine . In one embodiment the events are received using a push model where central event database pushes events to event correlation engine . In one example events when logged are pushed. In another example events are pushed periodically. In yet another example new events are pushed when the number of new events passes a threshold. In another embodiment events are received in a pull model where event correlation engine pulls events from central event database . In one example event correlation engine pulls events periodically.

Continuing to block an event is compared to event correlation instances. The logic iterates through all the event correlation instances to find any that match the event. Next in decision block the logic determines if there is a match between the event and any event correlation instances. If the answer is no then the logic proceeds to decision block discussed below . If the answer to decision block is yes then the logic proceeds to block to flag the matching event correlation instance s for later analysis.

Continuing to decision block the logic determines if there are more events to be compared to the event correlation instances. If the answer is yes then the logic returns to block . If the answer is no then the logic proceeds to block .

In block the logic determines a potential root cause event for a group of events. As discussed in connection with the logic may backtrack through related event instances to find a root cause event. Proceeding to block the potential root cause event and its associated component are output by event correlation engine and may be displayed to a user. In one embodiment an event mapping similar to is displayed in potential root cause UI .

Turning to a flowchart shows the logic and operations of creating event correlation instances in accordance with an embodiment of the invention. Starting in block an event correlation template is created. For example the template may be created by a developer of distributed application a third part developer or others. In another example the temple may be created by an experienced system administrator.

Proceeding to block a system administrator finds a pertinent event correlation template. In one example the template may be downloaded from a developer s web site a community web forum etc. In another example templates have been stored on event correlation database for use by a system administrator.

Continuing to block the event correlation template is instantiated to create an event correlation instance. Instantiation involves modifying the template to include information particular to the enterprise system the event correlation instance will be deployed in. Such information may include information identifying the distributed application e.g. name version etc. information about computing device s that execute the distributed application components e.g. machine name network address etc. and the like.

Continuing to block the event correlation instance is stored in the event correlation database for use by the event correlation engine.

Turning to an event correlation template in accordance with an embodiment of the invention is shown. In the case of Microsoft SQL Server a user will not be able to create a subscription in SQL Server Reporting Services if SQL Server Agent is not running. SQL Server Reporting Services is a SQL Server component that generates reports about information stored in a database. SQL Server Agent is a SQL Server component that automates some administrative tasks. SQL Server Agent may run jobs monitor SQL Server and process alerts.

Event correlation template describes this relationship between an event at a SQL Server Agent component and an event at an SQL Server Reporting Services component. If SQL Server Agent is not running Event at Component then SQL Server Reporting Services is unable to create a subscription Event at Component. Template shows an administrator a potential root cause event as to why a user cannot create a subscription in SQL Server Reporting Services. In one embodiment to instantiate template server names where the SQL Server Agent component and the SQL Server Reporting Services component are executed are added to template to create a corresponding event correlation instance.

Although not required embodiments of the invention are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement embodiments of the invention may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allow device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency infrared Near Field Communication NFC and other wireless media.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

In the description and claims the term coupled and its derivatives may be used. Coupled may mean that two or more elements are in contact physically electrically magnetically optically etc. . Coupled may also mean two or more elements are not in contact with each other but still cooperate or interact with each other for example communicatively coupled .

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments of the invention. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device . Those skilled in the art will also realize that all or a portion of the computer readable instructions may be carried out by a dedicated circuit such as a Digital Signal Processor DSP programmable logic array and the like.

Various operations of embodiments of the present invention are described herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment of the invention.

The above description of embodiments of the invention including what is described in the Abstract is not intended to be exhaustive or to limit the embodiments to the precise forms disclosed. While specific embodiments and examples of the invention are described herein for illustrative purposes various equivalent modifications are possible as those skilled in the relevant art will recognize in light of the above detailed description. The terms used in the following claims should not be construed to limit the invention to the specific embodiments disclosed in the specification. Rather the following claims are to be construed in accordance with established doctrines of claim interpretation.

