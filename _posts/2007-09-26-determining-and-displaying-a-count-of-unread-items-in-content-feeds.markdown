---

title: Determining and displaying a count of unread items in content feeds
abstract: A method quantifies unread content items for a stream subscribed to by a user. The stream includes a time-ordered list of content items from two or more content feeds. Each content feed includes a set of content items published by a respective publication source. The method includes determining a count of content items having an unread status in accordance with read state information stored for the user with respect to the stream, and transmitting the count to a client system for display.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08060634&OS=08060634&RS=08060634
owner: Google Inc.
number: 08060634
owner_city: Mountain View
owner_country: US
publication_date: 20070926
---
The disclosed embodiments relate generally to content syndication and more particularly to content feed user interfaces for viewing content feed items.

Content syndication is growing in popularity as a way to distribute frequently updated information such as news and blog postings on the Internet. Using content syndication formats such as Really Simple Syndication RSS content providers can include content and or links to such content in a content feed. Users may subscribe to these content feeds using an application known as a feed reader content feed reader feed aggregator or content feed aggregator. When the content feed is updated with new content items the new content items are reflected in the user s reader.

A method quantifies unread content items for a stream subscribed to by a user. The stream includes a time ordered list of content items from two or more content feeds. Each content feed includes a set of content items published by a respective publication source. The method includes determining a count of content items having an unread status in accordance with read state information stored for the user with respect to the stream and transmitting the count to a client system for display.

A system quantifies unread content items in a stream subscribed to by a user. The stream includes a time ordered list of content items from two or more content feeds. Each content feed includes a set of content items published by a respective publication source. The system includes memory one or more processors and one or more programs stored in the memory and configured for execution by the one or more processors. The one or more programs include instructions for determining a count of content items having an unread status in accordance with read state information stored for the user with respect to the stream and instructions for transmitting the count to a client system for display.

A computer program product is used to quantify unread content items in a stream subscribed to by a user. The stream includes a time ordered list of content items from two or more content feeds. Each content feed includes a set of content items published by a respective publication source. The computer program product includes a computer readable storage medium and a computer program mechanism embedded therein. The computer program mechanism includes instructions for determining a count of content items having an unread status in accordance with read state information stored for the user with respect to the stream and instructions for transmitting the count to a client system for display.

A system quantifies unread content items in a stream subscribed to by a user. The stream includes a time ordered list of content items from two or more content feeds. Each content feed includes a set of content items published by a respective publication source. The system includes means for determining a count of content items having an unread status in accordance with read state information stored for the user with respect to the stream and means for transmitting the count to a client system for display.

In a content feed aggregation system a user may subscribe to one or more content feeds and be presented with the content items included in those content feeds. The content items may be presented to the user in an ordered list such that the format of each item in the list is uniform. However the user may desire to view additional information about content items beyond that provided by a uniform list. The disclosed embodiments provide the user with ways to view additional information about various items. For example in one mode of operation when a user selects a first content item the selected item is displayed in an expanded format and other items are displayed in a compact format. When the user subsequently selects a second content item the second item is displayed in the expanded format and the first item is displayed in the compact format. In another example unread items are displayed in a visually distinctive format from items that have been read or marked as read thus providing the user with information about the read status of various items. In some embodiments a count of unread items in a content feed is displayed.

Content feeds are also herein called feed streams. The feed items from a content feed source can be considered to be a stream of items. Furthermore some embodiments of the content feed aggregation and distribution system described herein allow users to define virtual streams that incorporate content items from content feeds and or other virtual streams. Thus in these embodiments the term feed streams or simply streams also encompasses virtual streams defined by the users of the content feed aggregation and distribution system.

The server system accesses content feeds from the feed sources . The server system includes a server and a database . Server serves as a front end for the server system . Server sometimes called a front end server retrieves the content feeds from the feed sources and also provides an interface between the server system and the client systems . In some embodiments the functions of server may be divided or allocated among two or more servers.

The server system stores content items in the content feeds in the database . In some embodiments the database stores both metadata e.g. title description URL date time and possibly other metadata and the content of each content item. However in some other embodiments the database stores the metadata but not the content for each content item. The database also stores user feed information for a plurality of users. The user feed information for a particular user identifies content feed subscriptions as well as sources filters and read states for that particular user. That is user feed information associated with a user identifies the content feeds to which the user has subscribed any filters the user has defined for the feeds any labels the user has associated with individual feed items and whether feed items have been marked as read by the user. User feed information associated with a user also may identify whether the user has marked an entire feed as read such that all items in the feed with timestamps dated prior to a specified time are marked as read. 

It should be appreciated that the server system including the server and the database may be implemented as a distributed system of multiple computers. However for convenience of explanation the server system is described below as being implemented on a single computer which can be considered a single logical system.

A content feed or channel is a resource or service that provides a list of content items that are present recently added or recently updated at a feed source . A content item in a content feed may include the content associated with the item itself the actual content that the content item specifies a title sometimes called a headline and or a description of the content a network location or locator e.g. URL of the content or any combination thereof. For example if the content item identifies a text article the content item may include the article itself inline along with the title or headline and locator. Alternatively a content item may include the title description and locator but not the article content. Thus some content items may include the content associated with those items while others contain links to the associated content but not the full content of the items. A content item may also include additional metadata that provides additional information about the content. The full version of the content may be any machine readable data including but not limited to web pages images digital audio digital video Portable Document Format PDF documents and so forth.

In some embodiments a content feed is specified using a content syndication format such as RSS. RSS is an acronym that stands for rich site summary RDF site summary or Really Simple Syndication. RSS may refer to any of a family of formats based on the Extensible Markup Language XML for specifying a content feed and content items included in the feed. In some other embodiments other content syndication formats such as the Atom syndication format or the VCALENDAR calendar format may be used to specify content feeds.

Further information regarding the RSS syndication format known as Really Simple Syndication is disclosed in the 2.0 by D. Winer which is hereby incorporated by reference herein in its entirety. M. Nottingham et al. disclose further information regarding the Atom syndication format in which is hereby incorporated by reference herein in its entirety.

A user interfaces with the server system and views content items at a client system or device hereinafter called the client system for ease of reference . The client system includes a computer or computer controlled device such as a personal digital assistant PDA cellular telephone or the like. The computer typically includes one or more processors not shown memory which may include volatile memory not shown and non volatile memory such as a hard disk drive and a display . The computer may also have input devices such as a keyboard and a mouse not shown .

In some embodiments a user may interact with the server system via a feed reader user interface that may be presented on the display . The user may create a list of feed subscriptions via the feed reader user interface . In some embodiments using the feed reader user interface the user may also create filters or labels to be applied to content feeds and or content items and modify the read states of content feeds and or content items. The feed reader user interface transmits a list of content feed subscriptions or modifications to a list of content feed subscriptions to the server system for storage at the database . The feed reader user interface presents content items stored at the database to the user based on the user s list of content feed subscriptions. That is feed reader user interface presents to the user content items specified in the content feeds to which the user has subscribed. A user may view the full version of the content of a content item in the feed reader user interface by selecting it e.g. by clicking on it with a mouse pointer . In some embodiments a copy of the user s list of content feed subscriptions and copies of the presented content items may be cached locally at the client system .

In some embodiments the feed reader user interface may be a web based user interface. That is the feed reader user interface includes one or more web pages. It is noted that a single web page can contain multiple frames each of which may appear when displayed by a browser application to be a distinct web page. The web page s may be written in the Hypertext Markup Language HTML Extensible Markup Language XML or any other suitable language for preparing web pages and may include one or more scripts for interfacing with the server system . For example the web page s may include a Javascript application that interfaces with the server system via an application programming interface API . The Javascript application receives content items from the server system manages the rendering of those content items at the client and also performs the client side aspects of other tasks such as marking items or feed streams as read adding and removing content feed subscriptions labeling content feed subscriptions and or individually selected content items selecting or revising user preferences and the like. The user may subscribe to content feeds view content items and otherwise interact with the server system by interacting with the web page s of the feed reader user interface . In other words the server system including the feed reader user interface provides a web based content aggregation service. The server system aggregates and stores content items in accordance with the user s content feed subscriptions. In some embodiments the server system can also apply filters or labels change the read states of content items or feed streams in accordance with user actions or instructions and calculate the number of content items in a feed stream with read states indicating that the items have not been read. When the user accesses the feed reader user interface the content items are presented to the user via the feed reader user interface .

In some other embodiments the feed reader user interface may be a part of a standalone application that is run on the client system . The standalone application may interface with the server system via an application programming interface API .

A user may select a next item second item for example by scrolling down the list or may select another item second item for example by clicking on it. In response the ordered list is redisplayed . The newly selected second item is displayed in expanded format while other items such as the first item are displayed in compact format . depicts an exemplary schematic screen shot of a user interface showing a second item in expanded format while the first item and other items are displayed in compact format.

As discussed below with reference to in some other embodiments content items are marked as read when they are displayed in expanded format. Alternatively content items are marked as read when they are selected regardless of whether they are displayed in expanded or compact format. Furthermore in some embodiments content items that have been marked as read which have not yet been scrolled off the displayed list are displayed in a manner that is distinct from the display of unread items. For example one or more portions of the displayed text e.g. the displayed title or headline of items marked as read may be displayed in bold text while corresponding portions of unread items may be displayed using non bold text. In another example unread items are displayed with a first color scheme while items marked as read are displayed in a second color scheme that differs from the first scheme in the saturation hue and or brightness of the color or colors used.

A user may select a next item second item for example by scrolling down the list or may select another item second item for example by clicking on another item. In response the ordered list is redisplayed . The newly selected second item is displayed in expanded format while other items such as the first item are displayed in compact format . Selection of the second item results in the status of the second item being changed from unread to read . In some embodiments the status is changed by transmitting information to server indicating that the second item has been read . Server then updates database to reflect that the second item has been read by the user.

Feed reader user interface includes a list of labels also referred to as folders associated with content feeds to which a user has subscribed. Exemplary labels shown in include News and Sports . The labels or folder names may be user defined names. User interface also includes an ordered list of content items associated with a selected label. For example in the Sports label has been selected by the user as indicated by a shaded background. In this example ordered list includes items and . In some embodiments items in ordered list are ordered according to timestamps associated with the items. In some other embodiments items in ordered list are ordered in accordance with a score that takes into account both the content of the items and the timestamps of the items.

A user may select a different label for example by clicking on a different label. If a user selected the News label ordered list would display content items associated with News label . Also user interface would indicate that the News label was selected by displaying it with a shaded background. In this example the background for Sports label would no longer be shaded after the user selected News label .

In all items in ordered list including items and are displayed in compact format. In this embodiment compact format includes the source headline and timestamp for each item displayed in a single line. For example the compact format display for item includes Sports Source 1 Sports Headline 1 and Timestamp 1 all displayed on the same line of ordered list . In other embodiments compact format might include additional information. For example a brief portion of the content could be displayed next to the headline.

User interface shows that an item in ordered list is selected by displaying that item with a bold border. In item is selected as indicated by its bold border. Items and are not selected as indicated by their narrow borders. In other embodiments a selected item may have a border with a different color from that of other items e.g. a thick blue border for the selected item and a gray or thin black border for the unselected items . A user may select another item second item by clicking on Next Item button or Previous Item button by clicking directly on another item or by scrolling through ordered list using scrollbar and then clicking on another item. For example in a user could select item by clicking Next Item button or by clicking directly on item . Item then would be displayed with a bold border and other items such as item would appear with narrow borders.

As discussed above in regards to a user may select another item second item . For example in the user might select item by clicking on item or by clicking Next Item button . a schematic screenshot of a web browser presenting a web page that displays a feed reader user interface shows the result of this user action according to an embodiment. The selected item corresponding to item in compact format appears in expanded format. Other items including first item corresponding to item in expanded format are displayed in compact format.

In the example of item is not as large as item it has only one line of content as opposed to two. Therefore the ordered list in displays fewer items than the ordered list in ordered list in displays seven items while ordered list in displays eight items. In general the number of items displayed in ordered list will vary depending on the size in expanded format of the selected item.

Some but not necessarily all content items displayed in expanded format include a link to the full content associated with those content items. The link may be activated by a user clicking on the headline in the content item or by clicking on a link icon not shown in displayed in the expanded format of a respective content item. Activation of the link typically causes the browser to open a new browser window or tab and to download and display the document if any located at the location e.g. URL specified by the link.

Although not shown in the feed reader user interface will typically include icons menu items or the like for reviewing and managing the user s content feed subscriptions including removing and adding content feed subscriptions and optionally labeling a respective content feed subscription with one or more user defined labels or alternately assigning the respective content feed subscription to one or more user defined folders .

In some embodiments the feed reader user interface displays a count of unread items in a feed stream. For example in unread item counts are displayed in the list of labels in accordance with some embodiments. In News label which corresponds to label in indicates that there are 46 unread items in the News feed stream. Similarly Sports label which corresponds to label in indicates that there are 27 unread items in the Sports feed stream. In this example the number of unread items is specific to a particular user multiple users may subscribe to the same feed stream and separate counts of unread items will be maintained for each subscribing user.

In some embodiments the feed reader user interface includes a Mark All As Read icon associated with a specified feed stream. For example the icon in is associated with the Sports feed stream referenced by label which is the currently selected feed stream in the feed reader user interface . Upon detecting selection by the user of the Mark All As Read icon for example by clicking on the icon with a mouse or other selection device a time of selection of the icon is recorded. All items in the relevant feed stream Sports in this example that have timestamps dated prior to the recorded time of selection of the icon are considered to have been read. In some embodiments the time of selection is a timestamp of the most recent item in the specified feed stream that was displayed or available at the client to be displayed prior to when the user selected the Mark All As Read icon .

In some alternate embodiments a feed reader user interface includes a Mark All As Read icon associated with all feed streams to which a user subscribes not shown . Upon selection of this icon all items in all feed streams to which the user subscribes that have timestamps dated prior to a recorded time of selection of the icon are considered to have been read. In some embodiments the time of selection is a timestamp of the most recent item in all feeds streams to which the user subscribes that was displayed or available at the client to be displayed prior to when the user selected the Mark All As Read icon.

In some embodiments unread items are displayed in a visually distinctive format from items marked as read. For example unread items are displayed in bold text while items marked as read are displayed in non bold text. In another example unread items are displayed with a first color scheme while items marked as read are displayed in a second color scheme that differs from the first color scheme in the saturation hue and or brightness of the color or colors used such that the first color scheme is visually distinctive from the second color scheme.

In the count of unread items displayed in the Sports label has been updated to reflect activation of the Mark All As Read icon . The Sports label now shows that there are two unread items in the Sports feed stream corresponding to the two new items and that arrived subsequent to selection of the icon . The counts of unread items displayed for other feed stream labels e.g. News have increased with respect to the counts displayed in to reflect the arrival of new items in those feed streams.

In some embodiments the feed reader user interface does not display items that have been marked as read only unread items are displayed. For example in the feed reader user interface only displays the new items and that have associated timestamps dated after the recorded time of selection of the Mark All As Read icon . Items that have timestamps dated prior to the recorded time of selection of the Mark All As Read icon e.g. items and are not displayed.

Execution of a mark all read command associated with a specified stream is detected . The specified stream includes two or more content feeds. Each content feed includes a set of content items published by a respective publication source. In some embodiments the specified stream includes two or more constituent streams at least one of which includes two or more content feeds. In some embodiments detecting execution of the mark all read command includes detecting selection of a mark all read icon e.g. icon associated with the specified stream e.g. the Sports stream represented by label .

A time of execution of the mark all read command is recorded . For example a time of selection of the Mark All As Read icon is recorded. In some embodiments the time of execution is a timestamp of the most recent item in the specified stream that was displayed or available at the client to be displayed prior to execution of the mark all read command.

Content items associated with the specified stream are displayed . Content items with associated timestamps dated prior to the recorded time of execution are displayed in a visually distinctive format from content items with associated timestamps dated after the recorded time of execution.

In some embodiments content items with associated timestamps dated after the recorded time of execution are displayed in bold text and content items with associated timestamps dated prior to the recorded time of execution are displayed in non bold text . For example in items and have timestamps dated after the recorded time of selection of the icon and are displayed with bold headlines. Other items e.g. and have timestamps dated prior to the recorded time of selection of the icon and are displayed with non bold headlines. In some embodiments content items with associated timestamps dated prior to the recorded time of execution are displayed in a first color scheme and content items with associated timestamps dated after the time of execution are displayed in a second color scheme wherein the second color scheme is visibly distinctive from the first color scheme. For example the second color scheme may differ from the first color scheme in the saturation hue and or brightness of the color or colors used.

The method thus provides a way of visually distinguishing unread items from items marked as read. In some embodiments however a feed reader user interface will not display items marked as read.

Content items associated with the specified stream are displayed . No content items with associated timestamps dated prior to the recorded time of execution are displayed. For example in only items and are displayed because only items and have timestamps dated after the recorded time of selection of the Mark All As Read icon .

In some embodiments the obtained time of execution by the user of the mark all read command corresponds to a recorded time of selection by the user of a mark all read icon e.g. icon . For example the server obtains a recorded time of execution from the client system which transmits the recorded time of execution of the mark all read command to the server. In some embodiments the client system transmits a message to the server indicating that the user has executed the mark all read command but not necessarily specifying the time of execution. The server then obtains the time of execution in accordance with a recorded time of receipt of the message. In some embodiments the time of execution is a timestamp of the most recent item in the specified stream that was transmitted to the client system prior to detecting execution of the mark all read command or that was made available for display at the client system prior to detecting execution of the mark all read command.

The time of execution is stored . For example the server stores the time of execution in an entry in a user subscription table .

In some embodiments in which the stream recursively includes other constituent streams storing the time of execution involves identifying the constituent streams and storing the time of execution as timestamps in table entries e.g. entries corresponding to the respective constituent streams. In some embodiments identification of the constituent streams is performed to a predetermined depth of recursion. Storing timestamps for constituent streams assures that if a user subscribes to two streams i.e. a first stream and a second stream that share a common constituent stream then execution of a mark all read command for the first stream will allow items from the common constituent stream to be displayed as having been read when displayed as part of the second stream.

The server receives from the client system a request for a plurality of content items of the specified stream. The content items have associated timestamps. The request may be generated for example in response to a user logging in to the feed reader user interface and selecting a label corresponding to the specified stream e.g. Sports label .

The server transmits to the client system the plurality of content items and data indicating read states of the plurality of content items . In some embodiments the client displays content items with associated timestamps dated prior to the time of execution in a visually distinctive format from content items with associated timestamps dated after the time of execution . In some embodiments the client system does not display content items with associated timestamps dated prior to the time of execution .

In some embodiments the data indicating read states of the plurality of content items include the time of execution of the mark al read command . In some embodiments the data indicating read states of the plurality of content items include a read flag of a content item of the plurality of content items . The client system may use a respective content item s read flag and or the time of execution of the mark all read command to determine whether to treat the respective content item as unread or read.

Attention is now directed to methods of quantifying unread content items. is a flow diagram illustrating a method of quantifying unread content items in accordance with some embodiments. The method may be used for example to calculate the unread counts displayed in the list of labels in . In some embodiments the method is performed at a server e.g. server system separate from a client system e.g. client system associated with a user.

A stream subscribed to by a user for which unread content items are to be quantified is specified . The stream includes a time ordered list of content items from two or more content feeds. Each content feed includes a set of content items published by a respective publication source. In some embodiments a respective content feed is a virtual stream.

A count of content items that have an unread status is determined in accordance with read state information stored for the user with respect to the stream.

In some embodiments the count excludes regardless of actual read status items in the time ordered list in accordance with a first predefined depth limit and a first predefined age limit . For example determining the count of content items with an unread status may include fetching all content items in each content feed that constitutes the stream up to the first predefined depth limit or the first predefined age limit whichever is reached first. In some embodiments the first predefined depth limit and the first predefined age limit are applied to each content feed individually. In some other embodiments the first predefined depth limit and the first predefined age limit are applied to the entire stream instead of being applied to each constituent content feed individually.

In an example as illustrated in a stream includes first and second constituent content feeds. The first predefined age limit is 30 days and the first predefined depth limit is 3000 content items. For the first constituent content feed the first predefined depth limit is reached prior to the first predefined age limit item has a timestamp less than 30 days old. Therefore items one through 3000 are fetched from the first constituent content feed . For the second constituent content feed the first predefined age limit is reached prior to the first predefined depth limit item has a timestamp that is 30 days old and item has a timestamp greater than 30 days old. Therefore items one through are fetched from the second constituent content feed . A total of 4963 items are fetched from the two constituent content feeds and . It remains to be determined how many of the 4963 fetched items are unread.

In some embodiments the count excludes items in the time ordered list in accordance with a subscription timestamp that corresponds to a time of subscription by the user to the stream . For example when fetching content items in a respective content feed in the stream no content items are fetched with timestamps earlier than a subscription timestamp associated with the user regardless of the first predetermined age and depth limits. The unread count thus will not include items that predate the user s subscription to the stream. In another example a small predefined number of content items are fetched that have timestamps earlier than a subscription timestamp associated with the user. For example the 10 items with timestamps dated immediately prior to the subscription timestamp are fetched.

In an example as illustrated in a user subscribed to a stream that includes first and second constituent content feeds at a time corresponding to a recorded subscription timestamp . In this example item in the first constituent content feed and item in the second constituent content feed are the last items in their respective content feeds to have timestamps later than or equal to the subscription timestamp and thus are the last items fetched from their respective content feeds. A total of 2306 items are fetched from the two constituent content feeds and . It remains to be determined how many of the 2306 fetched items are unread.

In other examples a respective content feed in the stream may have a distinct subscription timestamp corresponding to when the respective content feed was added to the stream. In quantifying unread content items from the respective content feed no content items with timestamps earlier than the subscription timestamp are fetched.

In some embodiments the count excludes items in the time ordered list in accordance with a timestamp indicating user execution of a mark all read command associated with the stream . For example when fetching content items in each constituent content feed no content items are fetched with timestamps earlier than a recorded time of execution of a mark all read command. In some embodiments a mark all read command is executed by selecting an icon . The unread count thus will not include items that predate execution of the mark all read command.

In an example as illustrated in a mark all read command was executed for a stream that includes first and second constituent content feeds at a time corresponding to a recorded mark all read timestamp . In this example item in the first constituent content feed and item in the second constituent content feed are the last items in their respective content feeds to have timestamps later than or equal to the mark all read timestamp and thus are the last items fetched from their respective content feeds. A total of 877 items are fetched from the two constituent content feeds and . It remains to be determined how many of the 877 fetched items are unread.

In some embodiments the count excludes items in the time ordered list in accordance with a timestamp indicating user execution of a mark all read command associated with a constituent stream of the stream . Thus if a user subscribed directly to a particular stream and also subscribed to second stream e.g. a virtual stream that included the particular content stream then execution of a mark all read command associated directly with the particular stream would cause items from the particular stream to appear in both subscriptions to have been read.

In some embodiments the count excludes items in the time ordered list in accordance with a second predefined age limit and a second predefined depth limit as applied to a time ordered read list identifying items in the stream for which a stored read status indicates that the items have been read . Items on the time ordered read list are filtered from the items that were fetched from the stream s constituent content feeds to determine the unread count. The time ordered read list is sometimes referred to as a user s read stream or exclude stream.

The exclude stream may be created by fetching content items in the stream with a status indicating that they have been read up to the second predefined age limit or the second predefined depth limit whichever is reached first. To determine the count of unread items these items are filtered out from the content items that were fetched from the stream s constituent content feeds in accordance with the first predefined depth limit the first predefined age limit the subscription timestamp and or the mark all read timestamp.

In an example the second predefined age limit is 30 days and the second predefined depth limit is 10 000 content items. illustrate respective streams and that include respective time ordered lists of content items from two or more content feeds. The content items from the constituent content feeds of each stream and have been combined into a single time ordered list as shown respectively in . Each item has a read status indicating whether the item is read or unread. In the example of read items in the stream are fetched up to the second age limit which is reached prior to the second depth limit . Item which is the 3487th read item in the stream has a timestamp that is 30 days old and thus is the last item fetched into the exclude stream of the stream . Items fetched into the exclude stream are shown in bold. In the example of read items in the stream are fetched up to the second depth limit which is reached prior to the second age limit . Item which is the 10 000th read item in the stream is the last item fetched into the exclude stream of the stream . Again items fetched into the exclude stream are shown in bold.

In some embodiments the count excludes items in the time ordered list that have timestamps earlier than a timestamp of a last item determined in accordance with the second predefined age limit and the second predefined depth limit having a read status indicating that the item has been read . For example the last item is the item in the user s read stream i.e. exclude stream having either a depth equal to the second predefined depth limit e.g. last item or a timestamp corresponding to the second predefined age limit e.g. last item whichever is reached first. Content items having timestamps earlier than the timestamp of the last item are filtered out for example in a manner similar to filtering out items in the exclude stream.

As in method a stream subscribed to by a user is specified and a count of content items that have an unread status is determined in accordance with read state information stored for the user with respect to the stream.

In some embodiments the count excludes items in the time ordered list in accordance with a second age limit that is applicable if a time ordered read list identifying content items in the stream for which a stored read status indicates that the items have been read i.e. the stream s exclude stream has a depth greater than or equal to a second predefined depth limit . In some embodiments the second age limit corresponds to a timestamp of a content item in the stream corresponding to an item having a depth in the time ordered read list equal to the second predefined depth limit . For example if the second predefined depth limit is equal to 10 000 for the stream shown in then the second age limit would correspond to a timestamp associated with item . Item would be the last item fetched into the exclude stream and content items having timestamps earlier than the timestamp associated with item would be filtered out.

The feed reader module includes a content item format module for determining the format in which to display content items a local database for storing content items sent by the server and a server interface module for interfacing with server computer .

In some embodiments the feed reader module may be a script based module embedded in a web page served from the server system . The web page may be rendered by a client application such as a web browser at the client computer . When the web page is rendered the feed reader module is executed thereby providing a web based interface to the server system . The script based feed reader module may be written in JavaScript ECMAScript or any other suitable scripting language.

In some other embodiments the feed reader module may be a standalone application stored in memory of the client computer . The standalone application may include but is not limited to a feed aggregator application. In further other embodiments the feed reader module may be an add on or a plug in to another application. For example the feed reader module may be a plug in or extension to a web browser application or an email application.

In some embodiments received content items may be cached locally in memory . Similarly a user s list of content feed subscriptions may also be cached locally in memory .

Each of the above identified elements in may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise re arranged in various embodiments. In some embodiments memory may store a subset of the modules and data structures identified above. Furthermore memory may store additional modules and data structures not described above.

Each of the above identified elements in may be stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs i.e. sets of instructions need not be implemented as separate software programs procedures or modules and thus various subsets of these modules may be combined or otherwise re arranged in various embodiments. In some embodiments memory may store a subset of the modules and data structures identified above. Furthermore memory may store additional modules and data structures not described above.

Although shows a server computer is intended more as a functional description of the various features which may be present in a set of servers than as a structural schematic of the embodiments described herein. In practice and as recognized by those of ordinary skill in the art items shown separately could be combined and some items could be separated. For example some items shown separately in could be implemented on single servers and single items could be implemented by one or more servers.

Table further includes a row for each user with fields or columns containing user data for each content stream. In some embodiments the user data for a respective content stream includes a subscribed flag and timestamp indicating whether and when the user has subscribed to the content stream associated with the column containing the user data. The user data may also include a marked as read flag and timestamp which indicates whether and when the user corresponding to the row has viewed the items in the content stream associated with the column . The user data may further include additional user information such as one or more user specified labels . A user may label content streams that the user may want to view again in the future and a record of the label that the user associated with a content stream may be stored in the user data .

The user data optionally may include one or more additional fields and . For example the user data optionally may include a sort order flag for specifying the order in which to display content items on a user interface such as user interface . For example content items may be displayed in chronological order or according to a ranking based on predefined criteria e.g. the quantity and or quality of the content in the content items as well as the recency of the content items . The user data may further include an animation flag to indicate whether or not to display animations on the user interface. The user data may include user interface feature flags or parameter values to specify other user interface characteristics associated with the user. For example user interface feature flags may be used to specify the formatting and color of a user interface. User interface feature flags may specify whether to display items with a status indicating that they have been read in a visually distinctive format from unread items or whether not to display items with a status indicating that they have been read. In an embodiment users may set the sort order flag the animation flag and user interface feature flags via menus accessible from the user interface not shown .

Feed content table user subscription table and user preferences table or portions of these tables may be stored using sparse table storage mechanisms since large portions of the user data in these tables may be empty or set to default values.

Columns and are associated with virtual content streams defined as streams derived from one or more other content streams. For example user has subscribed to streams and and assigned the label tech to both streams as indicated by the check mark and text label tech at the intersection of row with columns and . User thereby created stream a virtual stream. In some embodiments a respective virtual stream is given a feed ID that includes a user name or identifier and a label assigned by a respective user e.g. the feed ID may have the form user label . Examples of such feed ID s are listed in row of . In this example stream has the feed ID User1 tech. Because the feed ID of a respective virtual stream includes the user name or identifier of the user who defined the virtual stream multiple users may use the same label without conflict. For example user row not shown has assigned the label tech to one or more streams resulting in stream with feed ID User25 tech .

Some virtual streams may correspond to or may include individual content items on one or more content feeds that have been labeled by a respective user. For example a user e.g. user99 may mark or label specific content feed items as favorite items or the user may assign a user specified label e.g. best or reviews to specific feed items. If the set of user labeled items is made available for subscription by others the user labeled items become a virtual stream that is assigned a stream identifier such as user99 best . This virtual stream is assigned a column in the user subscription table and subscription and user labeling information for the virtual stream is stored in this column.

Check marks in column associated with stream indicate which other users have subscribed to stream . In this example user has subscribed to stream and assigned the label friends to it. User also has assigned the label friends to stream created by user . User thereby created stream which has feed ID User2 friends . Stream thus is a virtual stream comprising other virtual streams stream and stream demonstrating that multiple levels of recursion are allowed for virtual streams. User has subscribed to stream . If user desired he could label stream thereby creating another virtual stream with an additional level of recursion and another user could subscribe to that virtual stream.

The foregoing description for purpose of explanation has been described with reference to specific embodiments. However the illustrative discussions above are not intended to be exhaustive or to limit the invention to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the invention and its practical applications to thereby enable others skilled in the art to best utilize the invention and various embodiments with various modifications as are suited to the particular use contemplated.

