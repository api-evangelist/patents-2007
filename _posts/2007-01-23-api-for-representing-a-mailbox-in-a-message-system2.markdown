---

title: API for representing a mailbox in a message system
abstract: The disclosed architecture is an application program interface (API) that includes a collection of class members defined in a single class for accessing mailboxes in messaging storage locations in an enterprise organization. Each mailbox in the organization has an identity that primarily encapsulates at least a mailbox server name, a unique mailbox database GUID (globally unique identifier), and a unique mailbox GUID. By encapsulating information associated with a mailbox into one class, database lookups can be optimized and a single source of mailbox information provided for both authentication and display purposes. Other information can also be encapsulated.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09537816&OS=09537816&RS=09537816
owner: Microsoft Technology Licensing, LLC
number: 09537816
owner_city: Redmond
owner_country: US
publication_date: 20070123
---
The advances in both IP and cellular networks serve as the catalyst for enormous amounts of information exchange. Users can utilize many different types of devices such as portable computers and cell phones to access and disseminate information from most any location. In particular wireless and mobile capabilities are becoming principal forms of communication and data access. With the widespread deployment of wireless services mobile information workers play a key role in many corporate business operations. Employees that travel such as sales representatives and field service technicians for example require access to mail contacts information calendar etc. from anywhere.

Businesses realize that communications is a very important investment not only for promoting products and services but also for maintaining employee productivity. More recent developments include enterprise class solutions that provide security and policy driven solutions for messaging and data exchange for computing and mobile devices. For example collaboration systems allow employees to communicate in shared environments to discuss topics of interest and exchange information on related topics.

However these conventional attempts at unified solutions are only partially successful. Corporate systems can typically include a blend of legacy backend and communications systems some of which are sufficiently compatible to facilitate a partial solution to existing needs. Niche vendors provide patchwork interfaces to make these systems work in some basic fashion. However it is desirable to have a software component that provides a universal solution to the wide variety of systems and data that enterprises employ. Such a system could deliver a significant reduction in total cost ownership and a significantly improved user experience whether online across a range of network connections or offline.

The following presents a simplified summary in order to provide a basic understanding of some aspects of the disclosed innovation. This summary is not an extensive overview and it is not intended to identify key critical elements or to delineate the scope thereof. Its sole purpose is to present some concepts in a simplified form as a prelude to the more detailed description that is presented later.

The disclosed architecture comprises an application programming interface API for representing and accessing all messaging storage locations e.g. mailboxes in an organization. The disclosed API is part of an API layer that captures business logic associated with e mail messages contacts and calendar items for example. In the context of user mailboxes each mailbox in the organization has an identity also referred to a principal . The identity primarily encapsulates a mailbox server name a unique mailbox database GUID globally unique identifier and a unique mailbox GUID. By encapsulating information associated with a mailbox into one class database e.g. Active Directory lookups can be optimized and a single source of mailbox information provided for both authentication and display purposes. The API facilitates integrating communications data and information into the enterprise organization.

In other words the architecture employs the API to represent the identity of a mailbox in an organization that utilizes a messaging and or collaboration server system. In combination with user authentication the class facilitates establishing a session to the mailbox server for the purpose of accessing data stored in that mailbox. Information that can be encapsulated includes the server where the mailbox is located a unique identifier for the database on that server that contains the mailbox and a unique identifier for the mailbox itself. Other information can also be encapsulated.

In one implementation the API is provided through a messaging API layer called Exchange Server Objects XSO as part of a communications and collaborations server product e.g. Exchange Server by Microsoft Corporation . The API can be positioned as part of a middle tier system for providing an interface for many different applications. The API also adds collaborative functionality to applications e.g. Net Runtime and Framework Microsoft Outlook Microsoft Office Communicator Microsoft CRM Customer Relationship Management and so on . The API facilitates the integration of communications data and services such as e mail notifications shared calendaring contacts and tasks into line of business applications such as sales force automation. Moreover the API can be remotely manageable and accessible such that applications can utilize functionality from anywhere in the organization in support of mobile and web based access.

To the accomplishment of the foregoing and related ends certain illustrative aspects of the disclosed innovation are described herein in connection with the following description and the annexed drawings. These aspects are indicative however of but a few of the various ways in which the principles disclosed herein can be employed and is intended to include all such aspects and their equivalents. Other advantages and novel features will become apparent from the following detailed description when considered in conjunction with the drawings.

The disclosed innovation comprises an application programming interface API for representing in one implementation all mailboxes in an enterprise organization. The API layer in which the disclosed API resides encapsulates all business logic associated with messages e.g. e mail contacts and calendar items for example. Every mailbox in the organization has an identity also referred to a principal . The identity primarily encapsulates a mailbox server name or names a mailbox database GUID globally unique identifier a unique mailbox GUID as well as the identity of the security principal or principals associated with the mailbox. By encapsulating information associated with a mailbox into one class LDAP lightweight data access protocol based database e.g. Active Directory lookups can be optimized and a single source of mailbox information provided for both authentication and display purposes. The API layer facilitates integrating communications data and information into the enterprise organization.

A mailbox can be described as an area in memory or on a storage device where e mail calendar contacts journal notes tasks and other personal information is placed. In messaging systems each user has a private mailbox. When the user receives a message e.g. e mail the system automatically places it in the mailbox. A mailbox store is a database for storing mailboxes or inboxes . Mailbox stores can store data that is private to an individual and contain mailbox folders generated when a new mailbox is created for an individual. In one implementation of the API users are able to send messages using a variety of tools including Web based Distributed Authoring and Versioning WebDAV Simple Mail Transfer Protocol SMTP XML Web Services e.g. WS I compliant voice based access to send and receive mail and Messaging Application Programming Interface MAPI . Users can receive messages in private mailbox folders in the store which can be accessed using WebDAV Post Office Protocol version 3 POP3 Web Services Internet Message Access Protocol IMAP4 telephone voice based access and or MAPI.

The innovation is now described with reference to the drawings wherein like reference numerals are used to refer to like elements throughout. In the following description for purposes of explanation numerous specific details are set forth in order to provide a thorough understanding thereof. It may be evident however that the innovation can be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to facilitate a description thereof.

Referring initially to the drawings illustrates a computer implemented system that includes an interface component for accessing data and information. The system includes a storage component that facilitates the storage of messages and content of disparate data types in storage locations denoted STORAGE LOCATION STORAGE LOCATION . . . STORAGE LOCATION where N is a positive integer e.g. e mail inbox associated with users. The messages can include data types such as text voice graphics video images and or audio for example content which can be considered part of multimedia and which can be communicated via wired and or wireless clients. This can also include data such as calendar items that include appointments and meetings and attachments such as open standards based or proprietary binary streams that are transported and stored and do not need to be directly understood by the system. For example a cell phone with messaging capability can send a text message that also includes captured images short video clips voice files etc. all of which can be stored in an associated user storage location e.g. user inbox or mailbox of an enterprise communications system. The storage component can be associated with a single datastore of the storage locations multiple datastores that include storage locations or multiple datastores across which the storage locations are distributed.

The interface component comprises an API via which one or more applications denoted APP APP . . . APP where P is a positive integer can access the storage component and associated storage locations . The API defines a class of objects or class members that serve as a single means for universally accessing each of the storage locations using the different applications . For example the system can be an enterprise communications system e.g. middle tier that facilitates the routing and storage of enterprise user messages such as e mail to the corresponding user storage location e.g. STORAGE LOCATION . The applications can include clients associated with devices that facilitate mobile access web access voice access and e mail access for example.

In one implementation of the API users of the different applications are able to send messages using a variety of tools including but not limited to Web based Distributed Authoring and Versioning WebDAV Simple Mail Transfer Protocol SMTP XML Web Services e.g. WS I compliant Web browser based and voice access applications hosted on a server and Messaging Application Programming Interface MAPI . Moreover users can receive messages in storage locations e.g. private mailbox folders which can be accessed using WebDAV Post Office Protocol version 3 POP3 IMAP XML Web Services e.g. WS I compliant Web browser based and voice access applications hosted on a server and or MAPI for example.

In one specific implementation the system comprises a communications and collaboration software product known as Exchange Server by Microsoft Corporation. The system can be deployed as a middle tier system that includes a business logic API that allows the applications included as part of the Exchange Server product to access data stored in the messaging storage locations also referred to as inboxes or mailboxes . In order to access specific user inboxes the class of the API is provided that embodies class objects or class members that include properties associated with finding each inbox in the enterprise communications and or collaboration system. Each inbox in the enterprise has an identity defined by encapsulating at least a mailbox server name a unique mailbox database GUID globally unique identifier and a unique mailbox GUID. By encapsulating the information associated with a mailbox into one class lookups associated with the storage component e.g. an Active Directory storage system by Microsoft Corporation can be optimized and provide a single source of mailbox information for both authentication and display purposes.

The interface component facilitates access to each of the mailboxes and via the API and more specifically the class . As described previously the class serves as a single point of access to all mailboxes e.g. mailboxes and persisted across multiple datastores of an enterprise. This is facilitated by the class including class members that define or encapsulate properties associated with the mailbox locations. Mailbox locations can be found and accessed across the many datastores of the enterprise whether associated with the single server or multiple implementations of the server . In other words it is within contemplation of the innovation that a company can employ several communications servers in support of a large number of users. Thus there can be many datastores and associated mailboxes clustered in a central location and or distributed across the enterprise geographically and topographically for example. In all cases the API and class provide the means by which each user mailbox can be located and accessed.

Access can be by way of a variety of different communications technologies and protocols of clients . For example a user of a mobile client e.g. a cell phone can access the server via IP and or cellular networks seeking to check for messages or other related information of the first mailbox of the first datastore . Upon receiving a request from the mobile client the server processes the request through the interface component in accordance with the protocols employed by the mobile client . The server can include different applications that support communicating with the different types of clients each corresponding application of which passes the client request to the interface component and API . The API provides universal access to all mailboxes of the enterprise datastores via the class . The request is processed through the class to locate the first mailbox based at least in part on mailbox information embodied in class members that includes the mailbox server name for the server the unique mailbox database identifier for the first datastore and unique mailbox identifier for the first mailbox . Other properties will be described infra.

Similarly a user of a web access client e.g. a portable computer can access the server via IP and or cellular networks seeking to check for messages or other related information of the second mailbox of the first datastore . Upon receiving a request from the web access client the server processes the request through the interface component in accordance with the protocols employed by the web access client . The request is processed through the class to locate the second mailbox based at least in part on mailbox information embodied in class members that includes the mailbox server name for the server the unique mailbox database identifier for the first datastore and unique mailbox identifier for the second mailbox .

In one implementation of the web access client a part of the user interface in the web access client can be hosted in iframes as part of other web applications. IFrame or inline frame is an HTML hypertext markup language element technology that facilitates the embedding of another HTML document inside the main document. The web access client exposes a set of web part URLs uniform resource locators that allow other applications to request certain portions of the web access UI. For example another application can load the web access web part URL for the inbox calendar or contact folder into an iframe hosted in that application.

Yet again a user of an e mail client e.g. a portable computer cell phone can access the server via IP and or cellular networks seeking to check for messages or other related information of the third mailbox of the second datastore . Upon receiving a request from the e mail client the server processes the request through the interface component in accordance with the protocols employed by the e mail client . The request is processed through the class to locate the third mailbox based at least in part on mailbox information embodied in class members that includes the mailbox server name for the server the unique mailbox database identifier for the second datastore and unique mailbox identifier for the third mailbox .

Similarly a user of a voice access client e.g. a portable computer cell phone can access the server via IP and or cellular networks seeking to check for messages or other related information of the fourth mailbox of the second datastore . Upon receiving a request from the voice access client the server processes the request through the interface component in accordance with the protocols employed by voice access client . The request is processed through the class to locate the fourth mailbox based at least in part on mailbox information embodied in class members that includes the mailbox server name for the server the unique mailbox database identifier for the second datastore and unique mailbox identifier for the fourth mailbox . The voice access client allows a unified messaging enabled user to access the corresponding mailbox via a telephone or other voice communications means . The user can navigate through mailboxes or settings using telephone keys or speech input.

It is to be understood that other clients can be accommodated by the system over that which has been described. Thus illustration of the four types of clients is exemplary only and is not be construed as limiting in any way. A common practice is to write APIs on top of APIs to reach a broader audience of customers and systems. For example services can be written on top of the disclosed API that surface a similar set of operations to programmers talking to the services over the Internet. Thus programmers that could not previously talk to this API are now able to do so through the layered API.

At class objects or members are defined to include properties associated with finding mailboxes. At the class objects are grouped into a single class. At the class is employed in an API for access by disparate communications applications and protocols. At mailbox access requests from disparate communications clients are processed through the API and class. At each enterprise mailbox can be accessed through the API class based on the corresponding request.

In operation when a client communicates with the enterprise in order to request access a user mailbox the mailbox can be located on either of the datastores or . One of the server applications can communicate the request to the backend system which processes the request through the API and class . The request can then be processed for routing back to the mid tier system to the storage subsystem and ultimately to the appropriate mailbox on the mid tier datastore . Alternatively the request can be processed against the backend system datastore when the user mailbox resides there.

In yet another alternative implementation the client includes the API and class . Thus a mailbox request can be processed directly by the client for routing and access to the appropriate database for example the mid tier database or the backend system database . User authentication can then be processed at the datastore subsystem for example prior to granting access to the mailbox.

As used in this application the terms component and system are intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component can be but is not limited to being a process running on a processor a processor a hard disk drive multiple storage drives of optical and or magnetic storage medium an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on a server and the server can be a component. One or more components can reside within a process and or thread of execution and a component can be localized on one computer and or distributed between two or more computers.

Referring now to there is illustrated a block diagram of a computing system operable to execute the universal access class of the disclosed architecture. In order to provide additional context for various aspects thereof and the following discussion are intended to provide a brief general description of a suitable computing system in which the various aspects of the innovation can be implemented. While the description above is in the general context of computer executable instructions that may run on one or more computers those skilled in the art will recognize that the innovation also can be implemented in combination with other program modules and or as a combination of hardware and software.

Generally program modules include routines programs components data structures etc. that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that the inventive methods can be practiced with other computer system configurations including single processor or multiprocessor computer systems minicomputers mainframe computers as well as personal computers hand held computing devices microprocessor based or programmable consumer electronics and the like each of which can be operatively coupled to one or more associated devices.

The illustrated aspects of the innovation may also be practiced in distributed computing environments where certain tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules can be located in both local and remote memory storage devices.

A computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by the computer and includes volatile and non volatile media removable and non removable media. By way of example and not limitation computer readable media can comprise computer storage media and communication media. Computer storage media includes volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital video disk DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by the computer.

With reference again to the exemplary computing system for implementing various aspects includes a computer the computer including a processing unit a system memory and a system bus . The system bus provides an interface for system components including but not limited to the system memory to the processing unit . The processing unit can be any of various commercially available processors. Dual microprocessors and other multi processor architectures may also be employed as the processing unit .

The system bus can be any of several types of bus structure that may further interconnect to a memory bus with or without a memory controller a peripheral bus and a local bus using any of a variety of commercially available bus architectures. The system memory includes read only memory ROM and random access memory RAM . A basic input output system BIOS is stored in a non volatile memory such as ROM EPROM EEPROM which BIOS contains the basic routines that help to transfer information between elements within the computer such as during start up. The RAM can also include a high speed RAM such as static RAM for caching data.

The computer further includes an internal hard disk drive HDD e.g. EIDE SATA which internal hard disk drive may also be configured for external use in a suitable chassis not shown a magnetic floppy disk drive FDD e.g. to read from or write to a removable diskette and an optical disk drive e.g. reading a CD ROM disk or to read from or write to other high capacity optical media such as the DVD . The hard disk drive magnetic disk drive and optical disk drive can be connected to the system bus by a hard disk drive interface a magnetic disk drive interface and an optical drive interface respectively. The interface for external drive implementations includes at least one or both of Universal Serial Bus USB and IEEE 1394 interface technologies. Other external drive connection technologies are within contemplation of the subject innovation.

The drives and their associated computer readable media provide nonvolatile storage of data data structures computer executable instructions and so forth. For the computer the drives and media accommodate the storage of any data in a suitable digital format. Although the description of computer readable media above refers to a HDD a removable magnetic diskette and a removable optical media such as a CD or DVD it should be appreciated by those skilled in the art that other types of media which are readable by a computer such as zip drives magnetic cassettes flash memory cards cartridges and the like may also be used in the exemplary operating environment and further that any such media may contain computer executable instructions for performing the methods of the disclosed innovation.

A number of program modules can be stored in the drives and RAM including an operating system one or more application programs other program modules and program data . All or portions of the operating system applications modules and or data can also be cached in the RAM . It is to be appreciated that the innovation can be implemented with various commercially available operating systems or combinations of operating systems. Here the applications and or data modules can include the interface component the API and class of .

A user can enter commands and information into the computer through one or more wired wireless input devices for example a keyboard and a pointing device such as a mouse . Other input devices not shown may include a microphone an IR remote control a joystick a game pad a stylus pen touch screen or the like. These and other input devices are often connected to the processing unit through an input device interface that is coupled to the system bus but can be connected by other interfaces such as a parallel port an IEEE 1394 serial port a game port a USB port an IR interface etc.

A monitor or other type of display device is also connected to the system bus via an interface such as a video adapter . In addition to the monitor a computer typically includes other peripheral output devices not shown such as speakers printers etc.

The computer may operate in a networked environment using logical connections via wired and or wireless communications to one or more remote computers such as a remote computer s . The remote computer s can be a workstation a server computer a router a personal computer portable computer microprocessor based entertainment appliance a peer device or other common network node and typically includes many or all of the elements described relative to the computer although for purposes of brevity only a memory storage device is illustrated. The logical connections depicted include wired wireless connectivity to a local area network LAN and or larger networks for example a wide area network WAN . Such LAN and WAN networking environments are commonplace in offices and companies and facilitate enterprise wide computer networks such as intranets all of which may connect to a global communications network for example the Internet.

When used in a LAN networking environment the computer is connected to the local network through a wired and or wireless communication network interface or adapter . The adaptor may facilitate wired or wireless communication to the LAN which may also include a wireless access point disposed thereon for communicating with the wireless adaptor .

When used in a WAN networking environment the computer can include a modem or is connected to a communications server on the WAN or has other means for establishing communications over the WAN such as by way of the Internet. The modem which can be internal or external and a wired or wireless device is connected to the system bus via the serial port interface . In a networked environment program modules depicted relative to the computer or portions thereof can be stored in the remote memory storage device . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers can be used.

The computer is operable to communicate with any wireless devices or entities operatively disposed in wireless communication for example a printer scanner desktop and or portable computer portable data assistant communications satellite any piece of equipment or location associated with a wirelessly detectable tag e.g. a kiosk news stand restroom and telephone. This includes at least Wi Fi and Bluetooth wireless technologies. Thus the communication can be a predefined structure as with a conventional network or simply an ad hoc communication between at least two devices.

Referring now to there is illustrated a schematic block diagram of an exemplary computing environment that facilitates universal access via an API class in accordance with the innovation. The system includes one or more client s . The client s can be hardware and or software e.g. threads processes computing devices . The client s can house cookie s and or associated contextual information by employing the subject innovation for example.

The system also includes one or more server s . The server s can also be hardware and or software e.g. threads processes computing devices . The servers can house threads to perform transformations by employing the architecture for example. One possible communication between a client and a server can be in the form of a data packet adapted to be transmitted between two or more computer processes. The data packet may include a cookie and or associated contextual information for example. The system includes a communication framework e.g. a global communication network such as the Internet that can be employed to facilitate communications between the client s and the server s .

Communications can be facilitated via a wired including optical fiber and or wireless technology. The client s are operatively connected to one or more client data store s that can be employed to store information local to the client s e.g. cookie s and or associated contextual information . Similarly the server s are operatively connected to one or more server data store s that can be employed to store information local to the servers .

The clients can includes the clients of and the client of for example. The servers can include the mid tier server of and the mid tier communications server backend system and associated datastores and of .

What has been described above includes examples of the disclosed innovation. It is of course not possible to describe every conceivable combination of components and or methodologies but one of ordinary skill in the art may recognize that many further combinations and permutations are possible. Accordingly the innovation is intended to embrace all such alterations modifications and variations that fall within the spirit and scope of the appended claims. Furthermore to the extent that the term includes is used in either the detailed description or the claims such term is intended to be inclusive in a manner similar to the term comprising as comprising is interpreted when employed as a transitional word in a claim.

