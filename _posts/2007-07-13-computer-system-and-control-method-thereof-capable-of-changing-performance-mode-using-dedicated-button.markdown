---

title: Computer system and control method thereof capable of changing performance mode using dedicated button
abstract: A computer system having a process running unit which runs processes of a plurality of programs; a user input unit through which a command of a user to select one of a plurality of performance modes is inputted; and a controller which controls the process running unit to run a process of a program of the programs, which are currently being executed, according to a priority order corresponding to the performance mode selected by the command of the user if the command of the user is inputted.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08621474&OS=08621474&RS=08621474
owner: Samsung Electronics Co., Ltd.
number: 08621474
owner_city: Suwon-si
owner_country: KR
publication_date: 20070713
---
This application claims the benefit of Korean Application No. 2006 87575 filed Sep. 11 2006 in the Korean Intellectual Property Office the disclosure of which is incorporated herein by reference.

Aspects of the present invention relate to a computer system and a control method thereof which run processes of a plurality of programs being executed according to a priority order.

The performance of a computer depends on a variety of factors such as the running speed of a process the life of a battery noise and so on. These factors however are mutually exclusive. For example if the speed of a process increases the life of the battery decreases and the noise of the computer system increases. Therefore it is difficult to improve the running speed of the process the life of the battery the noise etc. at the same time. Accordingly it is preferable that factors are properly controlled depending on the circumstances so that the computer may operate at optimal performance.

To improve the performance of a computer system a conventional art such as that described in Japanese patent first publication No. 07 0319569 discloses a way to convert a system operating environment such as a power saving mode a high performance mode and so on through inputting a hot key by a system management interrupt SMI . Though it is possible to change a mode in hardware such as a CMOS memory SMI etc. it is impossible to do so in software such as a priority control of an application thread or changing a power scheme which is applied by an Operating System OS in the conventional art.

In a typical Operating System OS such as Microsoft Windows if a user wants to change a priority order of the application thread i the user pushes Ctrl Alt Del keys to run Windows task manager ii the user selects select columns in the View menu and selects base priority item in a dialog box and iii the user selects the process which the user wants and clicks the right mouse button. This procedure which preferentially allocates a resource to a predetermined process is very complicated. Accordingly though an ordinary user may want to improve the running performance of a program the user does not know how to do so. Thus the user is not able to run the system at an optimal level of performance. Even if the user does know how to change the priority the procedure is still cumbersome.

Aspects of the present invention provide a computer system and control method thereof capable of operating at peak performance according to a working circumstance which is selected by a user via a simple operation.

Additional aspects of the present invention provide a computer system and control method thereof capable of improving performance by allocating a resource to a program determined by the user prior to other programs. Also additional aspects of the present invention provide a computer system and control method thereof capable of improving performance by changing a performance mode according to the working circumstance by activating a button a limited number of times.

According to an aspect of the present invention a computer system comprises a process running unit to runs processes of a plurality of programs a user input unit through which a user inputs a command to select one of a plurality of performance modes and a controller to control the process running unit to run a process of a program of the programs which are currently being executed according to a priority order corresponding to the performance mode selected by the user s command.

According to another aspect of the invention the processor running unit runs the processes of the programs being currently executed according to the priority order.

According to another aspect of the invention the process running unit runs the process by executing an OS providing an API that allows changing the priority order and the controller executes an application program to change the priority order of the program using the API.

According to another aspect of the invention the performance modes comprise a normal mode corresponding to a predetermined priority order and a high performance mode corresponding to a priority order which is higher than the normal mode.

According to another aspect of the invention one of the programs currently being executed is a currently activate program.

According to another aspect of the invention the user input unit comprises at least one button to allow the user to input a command and the controller determines that one of the performance modes is selected if a predetermined time period has passed after the button is activated.

According to another aspect of the invention the computer system further comprises a graphic processor to display a graphic image related to selection of the performance modes on a predetermined display apparatus according to control by the controller.

According to another aspect of the invention the controller controls the graphic processor to display the graphic image which shows a current performance mode of the performance modes if the button is pushed and shows changing the performance modes one by one whenever the button is pushed again.

According to another aspect of the invention the process running unit comprises a CPU to execute the program and the controller adjusts at least one level of over clocking or one level of throttling of the CPU according to the selected performance mode.

According to another aspect of the invention the computer system further comprises a fan to cool the CPU and a storage unit and the controller controls performance of at least one of the fan and the ODD according to the selected performance mode.

The foregoing and or other aspects of the present invention can be achieved by providing a control method of a computer system running processes of a plurality of programs that are currently executing on the computer system the method comprising receiving a user s command to select one of a plurality of performance modes and running a process of one of the plurality of programs according to a priority order corresponding to the performance mode selected by the user s command.

According to another aspect of the invention running the process runs the processes of the programs being currently executed according to the priority order.

According to another aspect of the invention running the process comprises running the process by executing an OS providing an API that allows changing the priority order of the programs and executing an application program to change the priority order of one of the programs by the API.

According to another aspect of the invention the performance modes comprise a normal mode corresponding to a predetermined priority order and a high performance mode corresponding to a priority order higher than the normal mode.

According to another aspect of the invention one of the plurality of programs currently executing is a currently activate program.

According to another aspect of the invention receiving the user s command comprises receiving the user s command via a user input unit having at least one button with which the user inputs the command and the running the process determines that one of the performance modes is selected if a predetermined time passes after the button is pushed.

According to another aspect of the invention the control method of the computer system further comprises displaying a graphic image related to selection of the performance modes.

According to another aspect of the invention the displaying the graphic image comprises displaying the graphic image showing a current performance mode of the performance modes if the button is pushed and displaying the graphic image showing the performance modes being changed one by one whenever the button is pushed again.

According to another aspect of the invention and the method further comprises adjusting at least one level between over clocking and throttling of a CPU according to the selected performance mode.

According to another aspect of the invention the method further comprises controlling performance of at least one of a fan and a storage medium according to the selected performance mode.

Additional aspects and or advantages of the invention will be set forth in part in the description which follows and in part will be obvious from the description or may be learned by practice of the invention.

Reference will now be made in detail to the present embodiments of the present invention examples of which are illustrated in the accompanying drawings wherein like reference numerals refer to like elements throughout. The embodiments are described below in order to explain the present invention by referring to the figures.

As shown in a computer system comprises a process running unit a user input unit and a controller . The controller controls a fan an optical disk drive and a graphic processor to display images on a display apparatus .

The process running unit runs processes of a plurality of programs which are currently being executed according to a priority order of the programs. The user input unit receives a command such as from a user to select one of a plurality of performance modes and transmits the received command to the controller . When the controller receives the command via the user input unit the controller controls the process running unit to run a process of one of the plurality of programs according to a priority order corresponding to the performance mode selected the command. While not required the input part can be a port through which the command is received or may be a keyboard mouse or like input device.

The process running unit executes an Operating System OS such as Microsoft Windows to run the processes. The OS provides an Application Programming Interface API allowing an application program to change the priority order of the programs. The controller may be embodied with a predetermined application program to change the priority order of the programs using the API provided in the OS.

One CPU is capable of running only one task at a time. Multitasking or executing multiple programs at once means using context switching in the CPU Central Processing System to give the appearance of multiple programs running at the same time. As shown in the OS manages threads in various states ready waiting running terminated etc. For reference a program is a combination of at least one process and a process has at least one thread. Threads comprise a unit like a time slice or a quantum. shows a configuration of the process the thread and the time slice. In the examples shown the term process generally refers to threads and time slices if not otherwise mentioned.

As shown in first each time slice changes between the ready the running and the waiting states. If the running state is finished the time slice changes to the terminated state. Herein the time slice in the running state uses the CPU. When a thread begins operation the thread is initialized. Once initialization is complete and the thread is ready to run the thread moves to the ready state. When a selector which may be included in the CPU or in another component determines that the thread may run the thread moves to the standby state while the selector prepares the CPU memory etc. for running the thread. If the thread is pre empted while in the standby state for example by a higher priority thread as described below the thread returns to the ready state. If a thread in the running state no longer requires the CPU for example because the thread is waiting for an I O or other process to complete the thread moves to the waiting state so that another thread can run. The thread may return to either the running state or the ready state once the process completes. In addition if moving from the waiting state to the ready state requires adjusting a kernel stack the thread moves to a changing state where the kernel stack is prepared to receive another thread.

When the time slice for a thread in the running state ends the thread returns to the ready state from the running state. When the thread completes execution the thread moves to the terminated state where the thread terminates. Subsequently if the thread needs to run again the thread is re initialized returning to the initializing state.

The OS executes the plurality of programs according to the priority order. In other words if multiple programs need to run at the same time the OS runs the program with a high priority order prior to other programs. The priority order of the thread may be changed. Threads can be executed in several ways including a voluntary switching method and a preemption method.

As shown in voluntary switching is similar to a situation where a customer A is waiting for a hamburger after ordering the hamburger in a hamburger shop and another customer B orders. In other words while the thread A shown in is executing a job which will take a long time the thread A moves to the waiting state since its priority order becomes low. Accordingly while the thread A is in the waiting state another thread B can run.

As shown in preemption is similar to a situation where the customer A is just starting to order the hamburger when an important customer B suddenly comes into the hamburger shop and is allowed to order before the customer A. The customer A is preempted he is not allowed to order and must get back in line. In other words even though the thread A is in the running state if the thread B which has higher priority order is in the waiting state thread A is stopped and the thread B having the higher priority order is allowed to run.

The controller raises the priority order of a program using the API. Accordingly the process running unit runs the corresponding program prior to other programs according to the raised priority order. As shown in when the threads and of programs and are in the ready state if the priority order of the program to which the thread belongs increases the thread is executed before the threads and of programs and . Therefore the running speed of the program which the user is using increases and the user perceives a better performance.

The program may be a currently active program among the plurality of programs currently executing. The plural performance modes may comprise a normal mode and a high performance mode. The normal mode may correspond to a general priority order set in the OS. The high performance mode may correspond to a priority order higher than the normal mode. However other performance modes can be used such as modes to achieve energy efficiency modes for gaming or modes for recording reproducing audio or video.

The user input unit may have at least one button not shown to select the performance mode. For example the button may be a predetermined key in a keyboard. However the performance mode can be selected in any manner such as by a predetermined keystroke e.g. Control Alt Delete by a graphical interface or by a menu. The controller selects one of the plural performance modes according to the user s input.

To simplify operation the controller may determine that one of the plural performance modes is selected if a predetermined period of time passes after the button is pushed. For example if the button is pushed once the controller determines that that the user wants to change the performance mode. If the button is inputted again within one second or another predetermined period of time the controller determines that the next performance mode is selected. If the button not pushed after a predetermined time period e.g. one second the controller changes the current performance mode to the performance mode last selected. In this fashion the user can easily select the performance mode suitable for the current situation.

Furthermore the computer system may display a selection state of the performance mode. The computer system may further comprise a graphic processor to display a graphic image related to selection of the plural performance modes on the display apparatus according to controlling of the controller . The graphic processor may be embodied with a Graphic Device Interface GDI of the OS and a graphics card not shown . The graphic image may be displayed as a format of an On Screen Display OSD . The display apparatus may include a monitor attached to computer system or can be integral to the system and or the input part .

As shown in the controller controls the graphic processor to display the graphic image which shows the current performance mode and the other performance modes if the button is pushed. In the graphic image shows that the current performance mode is the normal mode. Whenever the button is pushed again the controller controls the graphic processor to display the graphic image which shows changing modes one by one. As shown in the graphic image shows the performance mode changed from the normal mode to the high performance mode. Other aspects of the invention may display the performance modes differently and or may permit the user to change performance modes in a different fashion.

While not required in all aspects the controller may control a characteristic of the computer system in addition to the priority order of the process so that the performance of the computer system can be improved. These characteristics may include over clocking and throttling the CPU. The controller may change a level of over clocking throttling etc. according to the performance mode selected by the user. For example the controller may raise the level of over clocking throttling etc. if the performance mode changes from the normal mode to the high performance mode.

While not required in all aspects the computer system includes a fan to cool the CPU and an Optical Disk Drive ODD which is an example of an internal or external storage unit. The controller may control the performance of the fan and the ODD according to the performance mode selected by the user. For example the controller may speed up the rotation of the fan and operation of the ODD if the performance mode is changed from the normal mode to the high performance mode. While described in terms of an ODD it is understood that other media drives such as magnetic media drives can be used in addition to or instead of the ODD . Additionally while described in terms of a fan it is understood that any system environmental controller or environmental management unit can be used which governs the environment of the computer system an example of which includes the fan .

Furthermore the plural performance modes may comprise a power saving low noise mode in addition to the normal mode and the high performance mode. The power saving low noise mode consumes less power and makes less noise than the normal mode or the high performance mode. If the power saving low noisy mode is selected as the performance mode the controller may reduce the level of over clocking throttling etc. and or slow the rotation of the fan or the operation of the ODD .

Table 1 shows the plurality of performance modes and the characteristics of the system as described above. Other aspects of the invention may include additional performance modes having varying priority and speed controls.

As shown in table 1 the normal mode corresponds to general operations of the system. In the normal mode the functions of the power saving low noise mode and the high performance mode are turned off. In the normal mode processes run with normal priority and the fan and ODD may operate at their normal rates. The normal mode may be the default mode used when neither high performance nor energy efficiency quiet operation is needed.

The power saving low noise mode may be used when the user operates the computer system in a quiet place such as a library wants quiet at night wants to extend the life of a battery etc. In the low priority mode the fan may rotate at a slower rate and the ODD may operate at a slower rate so as to reduce noise and extend battery life. A process running in the power saving mode may run at a lower priority than processes running in the normal or high performance modes.

The high performance mode may be used when the user feels that a particular program is not running smoothly or when using a program that requires significant system resources such as multimedia 3D games etc. In the high priority mode the fan may rotate at a higher speed so as to cool the CPU and allow the CPU to operate at a higher clock speed. Similarly the ODD may operate at a faster rate so as to allow accessing of more data at a faster rate. A thread running in high performance mode may be given a higher priority so that the thread will pre empt a thread with normal priority as described above with respect to .

If it is determined that the button is pushed at operation S the controller determines that selection of the performance mode has started and controls the graphic processor to display the graphic image showing the current performance mode at operation S. Next the controller determines whether the button to select the performance mode was pushed again within the predetermined time period at operation S. If the controller determines that the button was not pushed within the predetermined time period the controller controls the graphic processor to stop displaying the performance mode by deleting the displayed graphic image at operation S and the routine returns to operation S.

If the controller determines that the button was pushed again within the predetermined time period the controller controls the graphic processor to display the graphic image showing the changed performance mode at operation S. Next the controller determines whether the button is pushed within the predetermined time period at operation S. If it is determined that the button was pushed again within the predetermined time period the routine returns to operation S.

If it is determined that the button was not pushed within the predetermined time period the controller controls the process running unit to run the process of the currently active program according to the priority order corresponding to the selected performance mode at operation S.

As described above the computer system and control method thereof are capable of operating at peak performance according to the current situation selected by a user with a simple operation.

According to aspects of the present invention the power saving low noise mode the normal mode and the high performance mode can be changed according to circumstances so that the limited resources of the system can be used efficiently. For example high performance mode can solve problems of slow or choppy video when the user runs a game or a moving picture. Also the user is able to use the computer system in a quiet place without any restrictions and the life of the battery can be extended when the user uses the power saving low noise mode.

Especially aspects of the present invention are capable of easily changing the mode to a suitable mode for the current circumstance by clicking the button just once so that it is very convenient for the user. Other aspects of the present invention allow changing the priority order of the process running via the OS so that it is capable of improving the user s perceived performance using software not additional hardware.

The performance mode changing techniques and the controller according to aspects of the present invention may be recorded in computer readable media including program instructions to implement various operations embodied by a computer. The media may also include alone or in combination with the program instructions data files data structures and the like. Examples of computer readable media include magnetic media such as hard disks floppy disks and magnetic tape optical media such as CD ROM disks and DVD magneto optical media such as optical disks and hardware devices that are specially configured to store and perform program instructions such as read only memory ROM random access memory RAM flash memory and the like. The media may also be a transmission medium such as optical or metallic lines wave guides etc. including a carrier wave transmitting signals specifying the program instructions data structures etc. Examples of program instructions include both machine code such as produced by a compiler and files containing higher level code that may be executed by the computer using an interpreter. The described hardware devices may be configured to act as one or more software modules in order to perform the operations of the above described embodiments of the present invention. Although a few embodiments of the present invention have been shown and described it would be appreciated by those skilled in the art that changes may be made in this embodiment without departing from the principles and spirit of the invention the scope of which is defined in the claims and their equivalents.

While described in the context of a computer it is understood that aspects of the invention can be implemented in other contexts such as a portable processor used in a media player phone or other portable or non portable device.

Although a few embodiments of the present invention have been shown and described it will be appreciated by those skilled in the art that changes may be made in this embodiment without departing from the principles and spirit of the invention the scope of which is defined in the claims and their equivalents.

