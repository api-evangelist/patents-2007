---

title: Micro payments
abstract: In one example embodiment, a system and method is shown that includes receiving financial data generated by a widget residing on a web page, the financial data including at least one of donation, or purchase data. The system and method may further include transmitting a display update to update the widget, the updating based upon the financial data. Some example embodiments may include, selecting a widget using an input device to generate data including at least one of donation or purchase data. Moreover, the system and method may include transmitting the at least one of donation or purchase data. Further, the system and method may include storing the at least one of donation or purchase data to a cookie.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09524496&OS=09524496&RS=09524496
owner: 
number: 09524496
owner_city: 
owner_country: 
publication_date: 20071221
---
This is a United States Patent Application that claims priority under 35 U.S.C. 119 e to a United States Provisional Patent Application titled MICRO PAYMENTS Ser. No. 60 919 097 filed on Mar. 19 2007 and which is incorporated by reference in its entirety herein.

The present application relates generally to the technical field of algorithms and programming and in one specific example to the use of a payment algorithm to make donations and purchases.

Common to many business functions implemented on web pages carried out over the internet is the request response paradigm whereby a user may make a request e.g. request to purchase something and then receive a response e.g. a confirmation that the user has made a purchase . This request response paradigm fails to capture the real time experience of making a purchase or donation. Moreover this request response paradigm uses large amounts of bandwidth and computing resources since in the case of web pages used to transact business a new web page must be generated every time an additional step in the business transaction takes place.

Embodiments of methods and systems to use a payment algorithm to make donations and purchases are illustrated herein. In the following description for purposes of explanation numerous specific details are set forth to provide a thorough understanding of some embodiments. It may be evident to one skilled in the art however that some embodiments may be practiced without these specific details.

In some example embodiments a system and method for transacting business over a network e.g. an internet in the form of micro payments is illustrated. In one embodiment a user is able to make a payment in the form of a donation or a purchase without having to execute a large number of display pages e.g. web pages user interfaces etc. during the process of making the payment. Specifically the user may be able to asynchronously e.g. an asynchronous paradigm make a payment without having to load a web page related to making the payment. Rather than following the request response paradigm of many existing internet payment methods in one example embodiment a user need only execute a screen object or widget e.g. collectively payment widget in order for the payment to be made. A widget may be a web widget in the form of a portable chunk of code that can be installed and executed within any separate Hyper Text Markup Language HTML based web page by an end user. Additionally a widget may be an interface element that a computer s user interacts with such as a window or a text box as appearing within a GUI. In some example embodiments this screen object or widget may make a payment and reflect that the payment has been made by way of the screen object or widget being automatically updated. A payment in the form of a donation may contain financial information relating to money to be donated to an organization such as a charitable organization a band or other performing group or individual. A payment in the form of financial information may relate to money to be paid in exchange for some thing that is purchased such as digital content e.g. music audio visual content or some other suitable good or service that can be purchased.

Example embodiments may include a record of a donation or payment being stored to a cookie e.g. a persistent cookie that may later be formatted and transmitted as financial data e.g. donation or purchase data to a payment application server. Some embodiments may include transmitting a record of financial data to a payment server without storing the data to a cookie. In some example cases there may be no need to execute update or otherwise involve other screen objects or widgets that may appear on the same web page. In some example cases this asynchronous paradigm may be illustrated within the context of a partial screen update whereby only a portion of a web page is updated. A portion may be a screen object or widget implemented using for example AJAX or Dynamic Hyper Text Markup Language DHTML technology or techniques. Specifically it may only be the object or widget implemented using the AJAX technology that is using a request response mechanism the entire web page itself need not be updated.

Some embodiments may include the use of AJAX technology and techniques to facilitate this asynchronous paradigm of making payment. In using AJAX technology rather than a request response paradigm e.g. synchronously the web page may only update on an as needed basis where for example a screen object or widget is modified or otherwise executed. For example if a user executes a screen object or widget written using the AJAX technique rather than the entire web page changing to reflect the making of the payment only the screen object or widget associated with the payment may change. An object or widget written using AJAX techniques e.g. an AJAX widget may be implemented together with other objects and widgets using other techniques. In some example cases these AJAX widgets may be supplied by a third party to be inserted into a web page in order to bring certain functionality e.g. the ability to make purchases or to make donations to the web page.

Example embodiments may include the use of persistent or non persistent cookies to track a user s transaction decision and to transmit these purchase decisions without the requirement that a web page be updated. For example rather than purchase data being exchanged in a request response manner a user may record all of his or her transaction information to a cookie and at some point the data in the cookie may be accessed by for example a payment server. Such access would not require updating the web page used to make the transaction for such an update could be performed asynchronously. These transaction decisions could be executed solely by using a screen object or widget.

In some example embodiments a widget factory in the form of a widget application server may generate a payment widget e.g. an AJAX widget to be used to engage in transactions asynchronously. For example a user may connect to the widget application server via initiating a Transmission Control Protocol Internet Protocol TCP IP session with the widget application server. Once the TCP IP session is initiated the user using a web browser one may initiate the generation of HTML and supporting JavaScript code using the widget application server. Specifically the widget application server could generate code that could be copied and pasted onto a web page. A stand alone application that utilizes TCP IP may be used in lieu of a web browser to initiate the generation of HTML and JavaScript code. A publishing interface may be used to retrieve the HTML and supporting JavaScript code. This publishing interface may be some type of HTML editor interpreter that may be used as a stand alone application or in conjunction with another application such as a browser.

In some example embodiments the above referenced web page could be a web page that one e.g. a publisher of the widget or publisher intends to transact business upon. This web page may be referred to as a published page. For example if a party wishes to receive donations via a third party web site and web pages associated therewith the party may provide a payment widget to the third party. The payment widget may be used to facilitate the donation or payment of funds to a recipient of funds. This payment widget once implemented e.g. placed within a web page of the third party could then automatically transact business for the party without interfering with the rest of the third party s web pages.

Some embodiments may include a user e.g. a visitor to the third party web site clicking a payment widget to donate to a band or to purchase a song. A donation amount could either be stored on a browser cookie or sent to a server storing the web page upon which the donation widget appears. In some example cases the donation widget can intelligently decide when to require immediate payment before delivering a digital good and when to allow transactions to aggregate. This decision could be made based on the sale or donation amount but it could also be based on a publisher s preference to require payment before delivering content. Further a donation widget may be used to make an immediate payment if a user has already signed up e.g. enrolled for a service that uses payment widgets. In some example embodiments the AJAX widget may always display a current donations total provide a way to log out so that a user who shares a computer can prevent others from using their account and provide a link to review the donations. A donation total may be a total or aggregated amount of money donated or otherwise transacted with a recipient of donated funds.

Some example embodiments may include the implementation of various business rules associated with one or more payment widgets. For example if the donation amount combined with all other unpaid donation amounts exceeds a payment threshold then a payment flow would begin that either bills the buyer or solicits enough information from the buyer to bill them for their unpaid donations. Further a user may be given 30 60 or 90 days or some other suitable period of time to request a refund on any donation made. Additionally the user could access the refund management page by clicking a link presented within the payment widget viewing a page containing unpaid donations and clicking a refund link.

Further these business rules may also include a micro donation service that may aggregate and intermediate the payments e.g. the micro payments . For example a user may make donations across multiple websites or web pages and may retract some of those donations within 30 days. Once the donations have aged 30 days the micro payment billing engine may charge the user for the donations incurring transaction fees. A micro payments billing engine may wait 30 days before issuing disbursements in an attempt to catch most charge backs. In some example cases the billing engine may wait 45 days 60 days or some other suitable period of time as determined by a system administrator or other suitable person. This suitable period of time may be construed as a billing threshold. If a chargeback comes through within this period then no disbursements may be made for donations related to the chargeback. A chargeback may be funds that are credited back to a user of the payment widget. Further the micro payments billing engine may issue disbursements for the donations less some transaction fee e.g. 10 .

Other business rules may also be implemented. For example certain additional business rules may be implemented including a 

In some example embodiments a payment widget as reflected in the rendered code is used in combination with a cookie . For example in some embodiments a cookie is written and stored to a browser cache according to instructions sent by payment server . Cookie values e.g. data contained on the cookie as previous illustrated may be sent back to the payment server as donation or purchase data . Donation or purchase data may be transmitted to the payment server at the expiration of some predetermined time period e.g. a date or range of dates . Further the values contained in the cookie may be manipulated by code that is cached on the browser. Specifically the widget application server or even the payment server may serve up the widget code at the expiration of a predefined deadline or date Then as the user interacts with the widget the widget code may manipulate the cookie values. When the user eventually interacts with the server e.g. or again after the 3 day expiry then the cookie is sent to the server e.g. or containing whatever the data was recorded to the cookie by the widget e.g. widget code .

Some embodiments may include a method including receiving financial data generated by a widget residing on a display page e.g. operation and updating only the widget using a partial screen update with the update being based upon the financial data e.g. operation . Further the financial data may include at least one of purchase data or donation data. The method may also include recording and aggregating the financial data e.g. and billing an account e.g. the billing predicated upon a billing threshold being met by the aggregated financial data. Moreover the billing threshold may include at least one of a monetary value a date value or a number of transactions value. Additionally the method may further include retrieving account information from a cookie initiating a sign up flow to receive account data the account data being used to populate the cookie and then billing an account. The method may additionally include receiving financial data generated by using an AJAX technique. Furthermore the method may include retrieving financial data from a cookie the financial data including at least one of donations data or purchase data. The method may include recording the financial data generated by the widget residing on a display page updating only the widget using a partial screen update to reflect current donation totals with the update occurring where a threshold is met. Additionally the method may include generating widget code to be placed into the display page.

Further a donor billing table is also illustrated. Shown is a table containing a billing ID value e.g. an integer data type illustrating a transaction a billed amount e.g. an integer or currency data type illustrating the amount of a transaction funding source e.g. a string data type illustrating the source of payment such as credit card check etc. and a unique key. Additionally a recipient table is illustrated with a payout ID amount paid e.g. an integer or currency data type illustrating the donation or payment amount fees e.g. an integer data type illustrating the fees paid for the donation or payment and recipient unique ID. Moreover a recipient payout table is illustrated that contains a recipient unique ID value.

In some example embodiments a method is illustrated as being implemented in a distributed or non distributed software application designed under a three tier architecture paradigm whereby the various components of computer code that implement this method may be categorized as belonging to one or more of these three tiers. Some embodiments may include a first tier as an interface e.g. an interface tier that is relatively free of application processing. Further a second tier may be a logic tier that performs application processing in the form of logical mathematical manipulations of data inputted through the interface level and communicates the results of these logical mathematical manipulations to the interface tier and or to a backend or storage tier. These logical mathematical manipulations may relate to certain business rules or processes that govern the software application as a whole. A third storage tier may be a persistent storage medium or non persistent storage medium. In some example cases one or more of these tiers may be collapsed into another resulting in a two tier architecture or even a one tier architecture. For example the interface and logic tiers may be consolidated or the logic and storage tiers may be consolidated as in the case of a software application with an embedded database. This three tier architecture may be implemented using one technology or as may be discussed below a variety of technologies. This three tier architecture and the technologies through which it is implemented may be executed on two or more computer systems organized in a server client peer to peer or some other suitable configuration. Further these three tiers may be distributed across more than one computer system as various software components.

Some example embodiments may include the above described tiers and processes or operations that make them up as being written as one or more software components. Common to many of these components is the ability to generate use and manipulate data. These components and the functionality associated with each may be used by client server or peer computer systems. These various components may be implemented by a computer system on an as needed basis. These components may be written in an object oriented computer language such that a component oriented or object oriented programming technique can be implemented using a Visual Component Library VCL Component Library for Cross Platform CLX Java Beans JB Enterprise Java Beans EJB Component Object Model COM Distributed Component Object Model DCOM or other suitable technique. These components may be linked to other components via various Application Programming Interfaces APIs and then compiled into one complete server client and or peer software application. Further these APIs may be able to communicate through various distributed programming protocols as distributed computing components.

Some example embodiments may include remote procedure calls being used to implement one or more of the above illustrated components across a distributed programming environment as distributed computing components. For example an interface component e.g. an interface tier may reside on a first computer system that is remotely located from a second computer system containing a logic component e.g. a logic tier . These first and second computer systems may be configured in a server client peer to peer or some other suitable configuration. These various components may be written using the above illustrated object oriented programming techniques and can be written in the same programming language or a different programming language. Various protocols may be implemented to enable these various components to communicate with one another regardless of the programming language used to write them. For example a component written in C may be able to communicate with another component written in the Java programming language by using a distributed computing protocol such as a Common Object Request Broker Architecture CORBA a Simple Object Access Protocol SOAP or some other suitable protocol. Some embodiments may include the use of one or more of these protocols with the various protocols outlined in the Open Systems Interconnection OSI model or TCP IP protocol stack model for defining the protocols used by a network to transmit data.

Some embodiments may utilize the OSI model or TCP IP protocol stack model for defining the protocols used by a network to transmit data. In applying these models a system of data transmission between a server and client or between peer computer systems is illustrated as a series of roughly five layers comprising an application layer a transport layer a network layer a data link layer and a physical layer. In the case of software having a three tier architecture the various tiers e.g. the interface logic and storage tiers reside on the application layer of the TCP IP protocol stack. In an example implementation using the TCP IP protocol stack model data from an application residing at the application layer is loaded into the data load field of a TCP segment residing at the transport layer. This TCP segment also contains port information for a recipient software application residing remotely. This TCP segment is loaded into the data load field of an IP datagram residing at the network layer. Next this IP datagram is loaded into a frame residing at the data link layer. This frame is then encoded at the physical layer and the data transmitted over a network such as an internet Local Area Network LAN Wide Area Network WAN or some other suitable network. In some example cases the term internet refers to a network of networks. These networks may use a variety of protocols for the exchange of data including the aforementioned TCP IP and additionally ATM SNA SDI or some other suitable protocol. These networks may be organized within a variety of topologies e.g. a star topology or structures.

The example computer system includes a processor e.g. a Central Processing Unit CPU a Graphics Processing Unit GPU or both a main memory and a static memory which communicate with each other via a bus . The computer system may further include a video display unit e.g. a Liquid Crystal Display LCD or a Cathode Ray Tube CRT . The computer system also includes an alphanumeric input device e.g. a keyboard a User Interface UI cursor controller e.g. a mouse a disk drive unit a signal generation device e.g. a speaker and a network interface device e.g. a transmitter .

The drive unit includes a machine readable medium on which is stored one or more sets of instructions and data structures e.g. software embodying or used by any one or more of the methodologies or functions illustrated herein. The instructions may also reside completely or at least partially within the main memory and or within the processor during execution thereof by the computer system the main memory and the processor also constituting machine readable media. The instructions may further be transmitted or received over a network via the network interface device using any one of a number of well known transfer protocols e.g. HTTP Session Initiation Protocol SIP .

The term machine readable medium should be taken to include a single medium or multiple media e.g. a centralized or distributed database and or associated caches and servers that store the one or more sets of instructions. The term machine readable medium shall also be taken to include any medium that is capable of storing encoding or carrying a set of instructions for execution by the machine and that cause the machine to perform any of the one or more of the methodologies illustrated herein. The term machine readable medium shall accordingly be taken to include but not be limited to solid state memories optical and magnetic media and carrier wave signals.

Example embodiments may include a method and system for making donations and payment using micro payments. This method and system may allow for the payments and donations to be made without requiring a user to execute a payment flow where such payment flows use a plurality of web pages to facilitate or otherwise process a payment or donation. Rather through using technology including for example AJAX technology a user may make a payment or donation that is reflected via a partial screen update e.g. the entire web page need not be refreshed . With regard to the payment itself in some example embodiments a user may be able to make payments or donations up to some threshold value. Once this threshold value is reached the user may be required to make the payments e.g. actual monies may be exchanged .

The Abstract of the Disclosure is provided to comply with 37 C.F.R. 1.72 b requiring an abstract that may allow the reader to quickly ascertain the nature of the technical disclosure. It is submitted with the understanding that it may not be used to interpret or limit the scope or meaning of the claims. In addition in the foregoing Detailed Description it can be seen that various features are grouped together in a single embodiment for the purpose of streamlining the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separate embodiment.

