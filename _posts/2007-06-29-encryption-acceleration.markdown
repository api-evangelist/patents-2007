---

title: Encryption acceleration
abstract: The subject mater herein relates to data processing and, more particularly, to encryption acceleration. Various embodiments herein provide devices and systems including a standardized encryption application programming interface embedded in firmware to perform encryption services. Some such embodiments move encryption operations away from operating system processes into firmware. As a result, encryption operations are generally accelerated.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07987349&OS=07987349&RS=07987349
owner: Intel Corporation
number: 07987349
owner_city: Santa Clara
owner_country: US
publication_date: 20070629
---
The subject mater herein relates to data processing and more particularly to encryption acceleration.

As data security becomes more an more important to individuals and enterprises encryption of data both stored and transient data has become prevalent. However software operations to encrypt and decrypt data are extremely resource intensive. This commonly slows performance of devices performing the encryption operations. Slowed performance is especially visible in instances where data stored on hard disks is encrypted such as in encrypted volumes. In such instances as operating systems are loaded it is not uncommon for at least some portions of operating system instructions to be decrypted prior to execution. However the operating system needs to be decrypted in the pre boot environment which is very resource poor. As a result the decryption of the operating system extends boot time considerably. With Logical Block Addressing LBA based encryption utilized in full volume encryption coupled with ever larger disks such as two terabyte disks today and ten terabyte disks expected by 2010 LBA based encryption and other encryption technologies create usability concerns from long install operations long machine reboots and the like.

Further as network bandwidth availability increases more and more data in larger and larger files is being sent over networks. At the same time encryption of data transmitted over networks is often necessary. As a result data transmission latency is increasing due to software encryption and decryption operations performed on the data.

Various embodiments described herein provide encryption service application programming interfaces API that provide an encrypt service and a decrypt service. These interfaces may be embedded in firmware of any number of devices. In typical embodiments each device including an encryption service API provides at least one or both of encrypt service and a decrypt service through an interface that is standardized across devices. However although the API from one device to the next may be utilized in a standardized manner the API of each device is implemented in firmware of the device in a manner that is specific to the resources within the specific device. Some such embodiments leverage industry standard capabilities for access to resources such as hard disks via the Unified Extensible Firmware Interface UEFI . Some such API s abstract capabilities of UEFI based systems such as pre operating system multi processor interfaces and abstractions of other platform hardware. These and other embodiments are described in greater detail below.

In the following detailed description reference is made to the accompanying drawings that form a part hereof and in which is shown by way of illustration specific embodiments in which the inventive subject matter may be practiced. These embodiments are described in sufficient detail to enable those skilled in the art to practice them and it is to be understood that other embodiments may be utilized and that structural logical and electrical changes may be made without departing from the scope of the inventive subject matter. Such embodiments of the inventive subject matter may be referred to individually and or collectively herein by the term invention merely for convenience and without intending to voluntarily limit the scope of this application to any single invention or inventive concept if more than one is in fact disclosed.

The following description is therefore not to be taken in a limited sense and the scope of the inventive subject matter is defined by the appended claims.

The functions or algorithms described herein are implemented in hardware software or a combination of software and hardware in one embodiment. The software comprises computer executable instructions stored on computer readable media such as memory or other type of storage devices. Further described functions may correspond to modules which may be software hardware firmware or any combination thereof. Multiple functions are performed in one or more modules as desired and the embodiments described are merely examples. The software is executed on a digital signal processor ASIC microprocessor or other type of processor operating on a system such as a personal computer server a router or other device capable of processing data including network interconnection devices.

Some embodiments implement the functions in two or more specific interconnected hardware modules or devices with related control and data signals communicated between and through the modules or as portions of an application specific integrated circuit. Thus the exemplary process flow is applicable to software firmware and hardware implementations.

Computer readable instructions stored on a computer readable medium are executable by the processing unit of the computer . A hard drive CD ROM ROM and RAM are some examples of articles including a computer readable medium. The memory may hold a program such as an operating system to provide operation features to users processes and other elements and hardware.

The computer may also include an out of band controller that provides services on the computer for various purposes. The computer in some embodiments includes a trusted platform module TPM to hold encryption keys and other sensitive information depending on the embodiment.

In some embodiments a Universal Serial Bus USB device may be coupled to the computer . The USB device includes an encryption API and may also include a TPM. When coupled to the computer the encryption API of the USB device registers with the operating system or BIOS and provides encryption service to one or more processes or devices of the computer. In some embodiments the USB device must be coupled to the computer to allow the computer to boot through utilization of one or more keys or passwords stored in the TPM.

The non volatile memory of the computer such as a ROM holds a BIOS that provides basic operation functions to the computer and allows the computer to boot. The non volatile memory also holds an encryption application programming interface API . The encryption API in some embodiments is part of the computer BIOS and provides encryption services to encrypt and decrypt data for the BIOS aid other processes during boot of the computer . The encryption API may also be utilized by processes of the operating system such as an operating system loader during boot and other processes of the operating system or other programs after the operating system is operational. In some embodiments the encryption API utilizes one or more encryption keys stored in the TPM to perform encryption operations.

In these embodiments and others the encryption API is part of the Unified Extensible Firmware Interface and is also present on one or more other devices such as network interface card . The encryption API of the network interface card the encryption API of the BIOS and encryption API of one or more other devices provide a standardized API to perform encryption operations such as encrypting and decrypting. In such embodiments the standardized API provides services which may be called in a standard fashion across all devices including the API. However each device including the standardized encryption API implements the API in a manner to leverage the resources available on the specific device. The encryption operations of the standardized encryption API generally abstract the capabilities for a particular cipher such as the Advanced Encryption Standard Galois Counter Mode in various devices.

When implemented in the BIOS of a computer including multiple processors or multiple cores in a single processor the encryption API may be implemented to parallelize encryption and decryption operations across multiple processors or cores. In a network interface card the encryption API may be implemented to take advantage of one or more microprocessors available on the network interface card rather than sending data to a central processor to be encrypted or decrypted. The result is better utilization of device resources rather man over consumption of system resources. Further encryption operations are moved out of operating system software and into hardware which in many embodiments is able to perform the operations more efficiently.

Various embodiments including the encryption API allows encryption operations to be removed from software and moved to firmware to accelerate these operations. The encryption operations of the standardized encryption API abstract the capabilities for a particular cipher such as the Advanced Encryption Standard Galois Counter Mode in various devices.

The method further includes loading An operating system boot loader . An operating system boot loader is a process that is executed on a computing device to load and start the various processes of an operating system. In embodiments where at least some of the data including the operating system is stored on the computing device in encrypted volumes the boot loader is typically not stored in an encrypted fashion because traditionally the operating system has performed the encryption operations. Thus the boot loader cannot be decrypted using processes of the operating system that are not yet running. However in some embodiments where initializing the computing device includes starting a bios including the standardized encryption API the encryption services are available when the boot loader is loaded by the BIOS. Thus loading the operating system boot loader may include decrypting the operating system boot loader.

After loading the operating system boot loader the method includes evaluating boot loader instructions to determine if an encryption operation request is received from the boot loader . If not the boot loader continues processing . The method then continues evaluating instructions until a request to perform an encrypt operation is received. When received the encryption operation is performed and control is returned to the operating system .

Although illustrates the encryption API embedded within firmware of a network interface card other embodiments include other devices with an encryption API embedded therein. One example embodiment includes a hard drive with an encryption API embedded in firmware. In such embodiments the hard drive may encrypt and decrypt ail or a portion of data stored on the hard drive using the encryption API. Some such embodiments may encrypt an decrypt the data using an encryption key stored in a TPM of a computing device held in a USB device or otherwise provided.

It is emphasized that the Abstract is provided to comply with 37 C.F.R. 1.72 b requiring an Abstract that will allow the reader to quickly ascertain the nature and gist of the technical disclosure. It is submitted with the understanding that it will not be used to interpret or limit the scope or meaning of the claims.

In the foregoing Detailed Description various features are grouped together in a single embodiment to streamline the disclosure. This method of disclosure is not to be interpreted as reflecting an intention that the claimed embodiments of the inventive subject matter require more features than are expressly recited in each claim. Rather as the following claims reflect inventive subject matter lies in less than all features of a single disclosed embodiment. Thus the following claims are hereby incorporated into the Detailed Description with each claim standing on its own as a separate embodiment.

It will be readily understood to those skilled in the art that various other changes in the details material and arrangements of the parts and method stages which have been described and illustrated in order to explain the nature of the inventive subject matter may be made without departing from the principles and scope of the inventive subject matter as expressed in the subjoined claims.

