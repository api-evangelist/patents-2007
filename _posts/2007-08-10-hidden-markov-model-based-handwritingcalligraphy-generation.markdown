---

title: Hidden markov model based handwriting/calligraphy generation
abstract: An exemplary method for handwritten character generation includes receiving one or more characters and, for the one or more received characters, generating handwritten characters using Hidden Markov Models trained for generating handwritten characters. In such a method the trained Hidden Markov Models can be adapted using a technique such as a maximum a posterior technique, a maximum likelihood linear regression technique or an Eigen-space technique.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07983478&OS=07983478&RS=07983478
owner: Microsoft Corporation
number: 07983478
owner_city: Redmond
owner_country: US
publication_date: 20070810
---
Handwriting and or calligraphy generation which mimics a real pen trajectory of personalized or artistic handwritten characters is becoming more and more popular in entertainment or computer graphics. Systems that generate such style elements differ from conventional systems that simply print or display a standard font. A brief overview of conventional systems follows which helps to highlight challenges that exist for handwriting and or calligraphy generation.

Many types of input devices exist to enter text or handwriting. For example a conventional computer keyboard is an input device that generates signals as a key or combination of keys is actuated. A chip inside the computer receives the signal bits and decodes them into the appropriate keypress. The computer then decides what to do on the basis of the key pressed e.g. display a character on the screen or perform some action . The displayed character is conventionally displayed according to a typeface or font. For example a word processing program may include fonts such as Arial Time New Roman etc.

In typography a typeface is a coordinated set of glyphs designed with stylistic unity. A typeface usually comprises an alphabet of letters numerals and punctuation marks it may also include ideograms and symbols or consist entirely of them for example mathematical or map making symbols. The term typeface is often conflated with font a term which historically had a number of distinct meanings before the advent of desktop publishing these terms are now effectively synonymous when discussing digital typography. One notable and still valid distinction between font and typeface is a font s status as a discrete commodity while typeface designates a visual appearance or style.

The art and craft of designing typefaces is called type design. Designers of typefaces are called type designers and often typographers. In digital typography type designers are also known as font developers or font designers.

Whether a user enters a character through a keyboard a pen tablet voice recognition etc. for conventional systems the end result is dictated by the selected font which has a one to one correspondence to the character entered. For example while a person may enter characters in cursive using a pen on a tablet the best cursive result a conventional handwriting recognition and generating system can achieve is through a cursive font that has no regard for character order spacing etc. In other words the output is stripped of expression. While a user may arguably apply an italicized style to certain fonts for emphasis or underlining or bold the end result still lacks expression found in human handwriting.

With respect to expression a person can express anger by using stiff angled high pressure strokes or a person can express joy by using looping expansive low pressure strokes. Indeed the field of graphology is dedicated to the study and analysis of such characteristics especially in relationship to human psychology. Graphology has been used to assess compatibility of couples intelligence and even the future akin to astrology especially for celebrities politicians etc. In the medical field graphology has a more practical purpose for example to aid in diagnosis and tracking of diseases of the brain and nervous system. Courts and banks often use aspects of graphology or more generally stroke characteristics character tying etc. to authenticate or opine on authorship.

Various exemplary techniques discussed herein can generate handwriting and or calligraphy. Such techniques allow for a broad range of user expression.

An exemplary method for handwritten character generation e.g. cursive calligraphy or other stylized character includes receiving one or more characters and for the one or more received characters generating handwritten characters using Hidden Markov Models trained for generating handwritten characters. In such a method the trained Hidden Markov Models can be adapted using a technique such as a maximum a posterior technique a maximum likelihood linear regression technique or an Eigen space technique.

Techniques are described herein for use in handwriting and calligraphy generation systems. Such techniques may be applied to handwriting associated with any of a variety of languages. For example in English various exemplary techniques can generate cursive handwriting while in Chinese various techniques can generate handwritten characters. In either of these examples the style of the generated or rendered handwriting may be that of a golden writer that of the particular writer or a combination of more than one writer. For the latter a writer can choose the degree of feature similarity or adaptation between her handwriting and that of a golden writer or a celebrity writer . Such techniques allow a writer to forge a golden writer s handwriting or calligraphy to forge a celebrity s handwriting or calligraphy or to mix aspects of another writer s style into the writer s own handwriting or calligraphy.

Various exemplary techniques described herein generate handwritten characters using a Hidden Markov Model HMM based approach such as commonly used in handwriting character recognition. For example to generate the stylized output the computer includes software that uses an exemplary HMM based handwriting generation approach. An exemplary method for handwritten character generation e.g. implemented at least in part by a computing device includes receiving a character and generating a corresponding handwritten character using HMMs trained to generate handwritten characters. Such a method may receive a string of characters or a group of characters and generate corresponding handwritten characters.

Thus as described herein handwritten character generation relies on an HMM based approach. Various character recognition systems use a HMM based approach to recognize characters based on a writer s input data. An individual HMM includes states and state transitions that can be trained using appropriate training information. A group of trained HMMs together with input information about a character or characters can be used to predict a probable outcome for the input information e.g. a character or characters corresponding to the character information .

As described in more detail below an exemplary method allows a computing device to generate handwritten characters in a natural personalized or artistic way. As shown in the example of a user can type in a message using the keyboard and then the computer will automatically generate pen trajectories that mimic human handwriting.

Various exemplary techniques address handwriting generation in a flexible trainable framework. An exemplary technique models representative features e.g. x y coordinates of a character together with derived features e.g. slope and curvature . Hence when generating a trajectory for a handwritten character the method can solve a maximum likelihood problem that provides a smooth trajectory because not only the slope but also the curvature is trained to be as close as possible to the corresponding models in the sense of likelihood.

Beside advantages such as flexibility trainability and adaptability another capability is generation of continuous handwriting which extends beyond the traditional concept of font see Background section . Various exemplary techniques can use pressure and speed information for defining features. With such information and features an exemplary framework that uses a HMM based generation approach can also deal with artistic calligraphy in Eastern Asian written by brush.

Various exemplary techniques can characterize a pen trajectory using various stroke order writing styles and imaginary strokes or other techniques used in conventional HMM based character recognition systems . An exemplary handwritten character generation system adopts multi path HMMs and Multi Space Probability Distribution MSD to solve for stroke order writing styles and imaginary strokes.

A conventional HMM based approach for character recognition may operate as follows. After defining features for Eastern Asian characters defined features are extracted from training ink data to train a HMM model. The extracted features sometimes referred to as feature information can be used to i train a character recognition model or ii can be input into a trained character recognition model that in turn outputs a character that corresponds to the feature information.

As described herein for purposes of handwriting and or calligraphy an exemplary HMM based approach for generation of handwriting uses defined features to capture particularities not only associated with a character but also with stylistic nature of individual strokes in a character or a character string e.g. a word written in cursive . The process of capturing such characteristics is referred to herein as encoding which is part of a training process to train an exemplary HMM based system to generate handwriting and or calligraphy.

For conventional HMM based character recognition feature extraction is applied to ink data for a handwritten character and the resulting feature information is input to the trained HMMs. Next the output from the trained HMMs is used to select a character that corresponds to the feature information and indirectly to the ink data. Accuracy of the trained HMM models depends on a variety of factors including the selected set of online features.

As described herein an exemplary HMM based approach for handwriting generation uses a selected set of features that is rich enough to encode handwritten characters and their associated style elements. Depending on the level of expression to be encoded or reproduced e.g. rendered features can allow for encoding a single character or a character string with different styles e.g. joyful angry etc. .

More specifically an exemplary method processes handwriting ink data e.g. ink data for handwriting of a golden writer an ordinary user etc. to provide feature information which is then used to train a HMM based handwriting generation model. Ink data processing can include where required re sampling to ensure uniform spacing of ink data points for each character stroke. Ink data processing can break ink data into frames where the frames can be analyzed with respect to a set of predetermined features. For example a set of features can include a tangent or slope feature a curvature feature and an imaginary stroke feature. In turn this set of features can enhance character generation.

Features can be described with respect to rules which may be mathematical equations. A feature may be characterized using a number e.g. an angle a length etc. numbers e.g. coordinates etc. or other representation. A relationship may exist between features where such a relationship may be quantified for purposes of character encoding and or style encoding. Extracted features of ink data may be represented in the form of a vector or array for example as suitable input for training a HMM based handwriting generation system.

A features based approach allows ink data to be reduced in a manner that focuses on preserving characteristics that enhance or otherwise facilitate handwriting generation while still preserving desirable style characteristics. Feature extraction can also act to eliminate data or characteristics that are irrelevant or diminish recognition accuracy.

Various techniques described herein can be used with online handwriting ink data or offline handwriting ink to train or adapt a HMM based generation system. Offline handwriting data is usually converted into an image that lacks temporal information whereas online handwriting data may be collected a tablet device that samples a series points for a pen tip trajectory. However offline handwriting data may be generated in a manner that preserves temporal information e.g. speed velocity acceleration etc. and or other information e.g. pressure brush thickness etc. .

While the timings of only show Cartesian coordinates and a time stamp handwriting ink data may include other information. For calligraphy brush information or other calligraphy related information may be included in handwriting data. Handwriting data can include information as to writing order of several strokes such as the sequential points through that correspond to three stokes of a character. As described further below a HMM based model can include paths that represent different stroke orders for a group of strokes which in turn can account for handwriting style. In general a predetermined set of features captures particular types of handwriting information to preserve style characteristics.

Devices configured to record handwriting typically rely on interaction between a writing implement e.g. a pen and a recording surface see e.g. the devices of . When forming a character each ink stroke may be recorded as a sequence of sampling points evoked by a pen tip s touch on a tablet which represents the pen tip s trajectory between pen down and pen up. A user may also lift the writing implement between strokes such that movement of the implement is not recorded however movements not associated with ink strokes may be considered trivial compared to movements for ink strokes. More generally a handwritten character has one or more ink strokes which are not continuous in coordinates.

For Eastern Asian characters a user may write a character in a printed style a running style or a cursive style. Such styles may be written consistently with a fixed number of strokes or a variable number of strokes. For example consider the cursive and printed versions of the character . In a printed style characters are written more regularly e.g. like a printed font and the boundary between two strokes tends to be quite distinctive while in a running or cursive style successive strokes tend to be connected together and the boundary between successive strokes are vague. More specifically in cursive Eastern Asian character writing a user tends to connect several part of a character into one part by writing it with only a single stroke noting that a user may use more than one stroke for the entire character. In contrast for printing Eastern Asian characters a user s stroke number for a character is usually quite stable. Inconsistencies that arise in cursive writing or printed writing may be considered style characteristics that may be accounted for when modeling style. Conventional character recognition systems treat such inconsistencies as problematic and use techniques to reduce their effect when building a HMM model for character recognition. Such a conventional approach diminishes the ability to model style.

Referring again to the character of an exemplary character generation system can identify one or more imaginary strokes to facilitate modeling for character generation in a manner that accounts for style of a writer s handwriting and or calligraphy. For example an imaginary stroke can be defined as an imaginary linear movement of a pen from a previous stroke s pen up to the next stroke s pen down. With imaginary strokes between neighboring real strokes all strokes are connected to form a continuous trajectory on which a HMM can be built to model a handwritten character for purposes of handwriting generation.

Another block in shows an example of a character with an imaginary stroke and an example of the same character with a real stroke . As described herein imaginary strokes can be represented using fewer dimensions than real strokes. Specifically in the example the imaginary stroke is represented as a straight dashed line with slope but without curvature as indicated by the x and y distances and the cosine and sine function or by a tangent function . In contrast to the imaginary stroke the real stroke is not straight but curved thus the features cos and sine may be used in addition to the slope features for a real stroke whether the real stroke is a fundamental part of a character e.g. skeletal component a connecting stroke e.g. cursive or a style element e.g. calligraphic element . As described herein for a handwriting generation system slope features can be estimated for imaginary strokes while slope and curvature features can be estimated for real strokes.

Identification of imaginary strokes via an imaginary stroke feature can assist in encoding and training as well as style generation. Further while the portion of the character with the real stroke may be labeled or identified as having little or no relevance to character recognition it may also be identified as an imaginary stroke portion or cursive connecting portion or style portion and used for purposes of handwriting generation.

As described herein imaginary strokes can be generated by connecting adjacent real strokes together to form a continuous trajectory. For example ink data can be transformed e.g. resampled to a continuous set of data with equal increments between data points. For a handwritten Eastern Asian character the ink data can be represented as a single continuous trajectory with portions marked as imaginary or real as appropriate. For a handwritten cursive English character or characters a single continuous trajectory may be used as well where connection portions to connect characters in cursive script are appropriately marked.

The aforementioned continuous trajectory approach can in some instances cause confusion among characters with similar but actually different trajectories. To overcome such issues an exemplary Multi Space Probability Distribution MSD technique can be implemented to model imaginary strokes jointly with real strokes. For example considering the two Chinese radicals water and speech if all real strokes are connected the trajectories of the two radicals then become indistinguishable. In addition to the pen trajectory a binary indicator to encode connection no connection between successive real strokes can be useful to differentiate real from imaginary strokes. As already mentioned with respect to the character another issue in imaginary stroke modeling occurs for direct connection of two successive real strokes where features like curvatures are degenerated such imaginary strokes have zero variance .

Using the MSD technique real and imaginary strokes become observations from different probability spaces that can be modeled stochastically. Also the flexibility in the MSD technique to assign different feature dimensions to each individual space allows a recognition system to ignore certain features that can cause singularity issues in modeling. For purposes of character recognition experimental results obtained in handwritten Chinese character recognition indicate that the MSD approach provides about a 1.3 2.8 character recognition accuracy improvement across different recognition systems where MSD significantly improves discrimination among confusable characters with similar trajectories e.g. versus and . As described herein such an approach is applied to an HMM based model for handwriting generation.

For HMM based models exemplary structures for handling imaginary and real strokes can include a state State A approach that has one data stream with two probability density functions PDFs a 4 dimensional Gaussian PDF models a real stroke feature and a 2 dimensional Gaussian PDF models an imaginary stroke feature and a state State B approach that has two streams with one stream modeled by a 2 dimensional Gaussian function and the other being a MSD stream which has two PDFs a 2 dimensional Gaussian PDF to model a real stroke feature and a 0 dimensional PDF whose probability is constantly 1. For State B the probability of a state is the summation of these two streams output probabilities.

The physical meaning of a real probability RP for a stroke is the probability that the stroke was written in a pen down phase or a real stroke. For those states that correspond to real strokes in printed fonts RP should be close to 1. For those states that correspond to imaginary strokes an imaginary probability PI is between 0 and 1 depending upon how likely the samples in the training or input data are connected.

By adding imaginary strokes and appropriate MSD modeling discrimination among characters of similar trajectories is enhanced. For example in traditional HMM approaches discrimination among the radicals of and can lack accuracy while with a MSD HMM approach discrimination is more accurate. The overall improvement achieved by using a MSD HMM approach is effective in alleviating issues caused by simply connecting real strokes with imaginary ones.

As already mentioned an exemplary HMM based approach can use slope and curvature features. More specifically the slope features cos sin and curvature cos sin features allow modeling of characters and style. While sine and cosine are used in various examples other representations of slope and curvature may be used as alternatives e.g. tangent etc. . The slope features can be measured on imaginary strokes but for the curvature features due to the direct connection of two successive real strokes curvature of an imaginary stroke is intrinsically zero which yields a singularity in HMM modeling. To overcome this in MSD HMM for real strokes a four dimensional feature set cos sin cos sin is used while for imaginary strokes a two dimensional feature set cos sin is used. This approach eliminates the possibility of a curvature singularity for imaginary strokes while preserving rich stroke information for real strokes. In other words via this feature arrangement non stochastic degenerated information of curvature information in imaginary strokes is discarded and pen trajectories are modeled efficiently.

An exemplary HMM based modeling approach uses slope features and curvature features to determine the original coordinates which are the representative features. While it is not specifically stated which part is determined by slope and which part is determined by curvature the final result is a maximum likelihood solution ML solution in the sense of not only slope but also curvature. The MSD technique is added to a HMM based model to determine whether a stroke is real or imaginary for example using a realness weight or probability in a MSD HMM model. The aforementioned real probability RP and imaginary probability IP correspond to this weight. While such a weight can be a continuous value it can also be treated more approximately e.g. those values less than 0.5 can be set to a weight of 0 and those values larger than 0.5 can be set to a weight of 1 .

The approach illustrated in the HMMs is referred to as a multi path approach. In conventional online handwriting modeling the HMM topology is left to right and only capable of characterizing a specific kind of pen trajectory. An exemplary multi path HMM approach accounts for variances in writing orders and writing styles. As explained further below an exemplary method includes training multi path HMMs for a unit of variant writing orders and writing styles.

As already mentioned for the HMMs each single transition path models a certain writing order or writing styles. The exemplary multi path topology also enables automatic training of all paths without separating the data into different training groups of writing orders and writing styles. In the example of each trained path represents a primary writing pattern of the character which can be one writing stroke order or one writing style. The pattern that each path represents is automatically trained from the data. For example the Chinese character usually can be written in two stroke orders. From the diagram each path of the trained 2 path model for this character represents one writing stroke order in model visualization each line represents one state model . Also for the Chinese character while it usually has only one writing stroke order it can be written in different styles e.g. regular and cursive .

Once a set of features and modeling approaches to handle such features have been selected an HMM based model can be trained and then used to generation handwritten characters along with their style elements. Further as described herein a HMM based model can be adapted using a writer s own handwriting or otherwise personalized to introduce particular style elements. Adaptation is optional and the extent of adaptation can vary according to a writer s desires e.g. from nearly no personalization to highly personalized .

According to the method the standard data is input to a training block that trains a HMM model to generate a trained HMM model which includes a collection of trained HMMs . In this example the HMMs model slope curvature imaginary stroke features of the standard data . As explained with respect to the HMM model may be a MSD HMM model where a MSD technique applies to modeling of real and imaginary strokes.

Given the trained HMMs handwriting generation can occur in a synthesis block that receives the input data from a particular writer which as explained with respect to may come from any of a variety of sources e.g. keypad keyboard voice recognition character recognition etc. . The synthesis block produces a generated result which may be rendered according to a pen model . Where the personalization option is not implemented the result is a non personalized result left side that depending on the rendering e.g. pen model can mimic or reproduce the standard handwriting data style. For example where the standard handwriting data corresponds to a golden writer then the rendered result can be a reproduction of the golden writer s style even though it was simply an ordinary user that input the data e.g. as input via a keypad keyboard etc. .

The personalization option can adapt the style of the standard handwriting data with the style of other handwriting data . The data may be from a user or another. Where the data is from a user the personalization block can adapt the style of the standard handwriting data such that the result is a mix of the standard style and the writer s own style. Where the data is from another for example the standard handwriting data may be from a celebrity such as Angelina Jolie and the other handwriting data may be from another celebrity such as Brad Pitt. In turn the input data may be from an ordinary writer that wants her handwriting to look like a mix between Angelina Jolie and Brad Pitt i.e. brangelina .

Adaptation techniques are discussed in more detail with respect to noting that a user may determine how much adaptation occurs. As indicated at the bottom of a rendered result may have no personalization some personalization or be highly personalized.

As described herein HMM based modeling for handwriting and or calligraphy provides an open solution in that all kinds of features can be easily used which is helpful especially in artistic calligraphy synthesis. Such an approach can build a personalized handwritten font with only a few adaptation samples by using HMM adaptation technologies. An exemplary HMM based approach allows for connection morphing of unseen character combinations in training data which can be naturally generated by decision tree or other clustering technologies widely adopted in speech recognition and synthesis which endows such a system with better generalization or creation ability.

Referring again to the method of the data blocks and are as described in . While the data block may be from a standard writer i.e. a golden writer it may also be a collection of data from more than one writer e.g. many writers to train an average font.

The training phase can receive standard handwriting data and analyze such data to identify rich strokes and labels. The rich strokes are input to a feature extraction block that extracts features such as x y coordinates velocity and pressure as indicated by the representative features vector R x y v p. A feature conversion block converts the features into a more meaningful vector that is a function of the basic features as indicated by f R x y x y v v p p . . . . This information is then input to a HMM training block together with the corresponding labels to produce trained HMMs .

As in speech synthesis high order dynamic features are helpful in describing smoothing evolving trajectories. Thus per the feature extraction block and the feature conversion block to generate the trajectories of representative features R x y v p the approach adopts modeling features of x y x y v v p p. In this example the static features of x and y themselves are not included because it is usually not trivial to well normalize them. In some cases where they can be normalized they can also be used.

As already discussed for imaginary and real strokes the dimension of imaginary space is lower than that of real space. For example an approach adopts x y x y as the features in real space then the features in imaginary space is x y because the accelerations curvature are by definition always 0 on imaginary strokes.

An adaptation block can adapt the trained HMMs using other handwriting data . Again adaptation or personalization is optional and may be selected by a user to adapt or personalize a standard handwriting or calligraphy style.

In the synthesis phase input data labels are input to a model selection block that selects a HMM sequence. A generation block follows that determines the best fit HMMs using a maximum likelihood approach as indicated by the function R argmax P f R . Thus in the synthesis phase given a piece of text e.g. hello world example of the corresponding model sequences is first selected from the trained and optionally adapted HMMs per the selection block and per the generation block the maximum likelihood solution with respect to representative feature vectors is obtained and used in a rendering block to produce a rendered result or an adapted or personalized rendered result .

An adaptation block receives as input a writer s training data which may be from a personal writer a celebrity writer etc. Adaptation of the trained HMMs occurs using one or more techniques. For example a maximum a posterior MAP a maximum likelihood linear regression MLLR or an Eigen space ES technique may be used for purposes of adaptation of the trained HMMs .

After adaptation block a synthesis block receives a writer s input data e.g. keyboard entered characters and then generates a result with at least some of the writer s characteristics per the writer s training data .

While Eastern Asian characters are shown in various exemplary techniques can be used for characters of other languages. For example various exemplary techniques allow for generation of cursive English handwriting. Such continuous generation may occur in a relatively real time basis where handwriting is generated and transmitted to a remote location or rendered locally. For example a user may enter a text message on a cell phone and the generated handwriting may appear rendered at a remote location. In such an example the generation may occur on one computing device and the rendering at another. Or the generation and rendering may occur at a remote computing device e.g. text sent to remote device for generation of handwriting and rendering . Generation and or rendering may occur based on an identified sender of a text message e.g. friend 2 likes celebrity X so generate render friend 2 s text messages in celebrity X s handwriting .

An exemplary computing device for handwriting and or calligraphy generation can include a processor a user input mechanism a display and control logic implemented at least in part by the processor to generate a handwritten character based on generation algorithm that uses Hidden Markov Models HMM and a Multi Space Probability Distribution MSD technique and features extracted from handwritten character ink data wherein the extracted features comprise a real stroke feature set and a lesser dimension imaginary feature set.

Such a computing device can include control logic to uniformly sample the ink data and to generate ink data frames of uniform length control logic to generate a series of contiguous ink data frames from the character ink data where the series of ink data frames includes real stroke frames and imaginary stroke frames control logic to generate ink data frames from the character ink data and to determine for a x y Cartesian coordinate system a x value and a y value for each ink data frame control logic to generate ink data frames from the character ink data and to determine a sine value and a cosine value e.g. for a frame or for an angle between two adjacent ink data frames . An exemplary computing device for generation of handwriting using a trained HMM based approach may be a cellular phone or other handheld computing device e.g. a PDA etc. .

The computing device shown in is only one example of a computer environment and is not intended to suggest any limitation as to the scope of use or functionality of the computer and network architectures. Neither should the computer environment be interpreted as having any dependency or requirement relating to any one or combination of components illustrated in the example computer environment.

With reference to an exemplary system for implementing an exemplary character generation system that uses a features based approach to conditioning ink data includes a computing device such as computing device . In a very basic configuration computing device typically includes at least one processing unit and system memory . Depending on the exact configuration and type of computing device system memory may be volatile such as RAM non volatile such as ROM flash memory etc. or some combination of the two. System memory typically includes an operating system one or more program modules and may include program data . This basic configuration is illustrated in by those components within dashed line .

The operating system may include a component based framework that supports components including properties and events objects inheritance polymorphism reflection and provides an object oriented component based application programming interface API such as that of the .NET Framework manufactured by Microsoft Corporation Redmond Wash.

Computing device may have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Thus computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well know in the art and need not be discussed at length here.

Computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a network. Communication connection s is one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.

Various modules and techniques may be described herein in the general context of computer executable instructions such as program modules executed by one or more computers or other devices. Generally program modules include routines programs objects components data structures etc. for performing particular tasks or implement particular abstract data types. These program modules and the like may be executed as native code or may be downloaded and executed such as in a virtual machine or other just in time compilation execution environment. Typically the functionality of the program modules may be combined or distributed as desired in various embodiments.

An implementation of these modules and techniques may be stored on or transmitted across some form of computer readable media. Computer readable media can be any available media that can be accessed by a computer. By way of example and not limitation computer readable media may comprise computer storage media and communications media. 

An exemplary computing device may include a processor a user input mechanism e.g. a mouse a stylus a scroll pad etc. a display and control logic implemented at least in part by the processor to train and or to generate handwriting based on a handwriting generation algorithm that uses a Hidden Markov Model HMM and a features based approach to extract information from time sequential ink data. For generation and or rendering such a device may be a cellular telephone or generally a handheld computer.

One skilled in the relevant art may recognize however that the techniques described herein may be practiced without one or more of the specific details or with other methods resources materials etc. In other instances well known structures resources or operations have not been shown or described in detail merely to avoid obscuring aspects of various exemplary techniques.

While various examples and applications have been illustrated and described it is to be understood that the techniques are not limited to the precise configuration and resources described above. Various modifications changes and variations apparent to those skilled in the art may be made in the arrangement operation and details of the methods and systems disclosed herein without departing from their practical scope.

