---

title: Optimal display of multiple windows within a computer display
abstract: An apparatus and method for optimally displaying multiple windows on a display is provided. The multiple windows can be sequentially or simultaneously resized and/or repositioned. The method performs at least one of resizing or repositioning operation on at least one of the multiple windows to fit within the available display area. The method provides the user the ability to see a maximum of information from multiple windows and allows access to the scroll bars, title bars, status bars and command window of the multiple windows.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07844917&OS=07844917&RS=07844917
owner: International Business Machines Corporation
number: 07844917
owner_city: Armonk
owner_country: US
publication_date: 20070131
---
The present invention relates to browser applications for use in multiple windows environment and more particularly to a method apparatus and computer product to optimize the arrangement of the multiple windows on a computer display.

Modern software requires substantial amounts of information to be displayed upon a computer display. Generally users of complex software programs maintain many open windows upon a computer display such that information is continuously and readily available. These windows may display information and or contain graphical user interfaces GUIs used to control execution of a program. Furthermore users typically execute multiple programs simultaneously such that one or more windows are displayed for each executing program. The result is a computer display that is cluttered with windows and a requirement for the user to continuously manipulate the windows to control the content being displayed.

More specifically when multiple windows are positioned on the screen opening a new window and displaying its contents may lead to some fastidious and numerous manual operations i.e. mouse and button manipulation to manipulate the windows into an understandable view. Solutions to manually manage multiple windows in a Graphical User Interface GUI based operating system are known in the art. In the known solutions based on the actual graphics possibilities provided by various operating systems for example Windows Mac OS and GNOME the method to manually optimize the arrangement of a number of windows on the screen includes resizing the form factor of a window and window placement. Resizing the form factor may be performed using basic control buttons of the window. These control buttons are typically located in a title bar and are used to manage window operations such as maximize minimize and close. Additionally a resizing edge capability is available to allow a user to modify the form factor of the window by selecting the edge that needs to be shifted and dragging the edge to resize the window. Also global window placement can be arranged on the screen by moving a chosen window from one location to another. Such window movement requires a user to drag and drop the window using manipulations of the mouse or other input device.

The other solutions known in the art may involve closing of open windows stopping of running applications or shrinking of undesirable windows and sending them to a taskbar. However the necessity to open multiple windows to control or monitor data processing operations such as interactive programs implies that the program results and action menus have to be permanently displayed on the front view of the screen. Thus these solutions may not be viable in most cases.

Many business scenarios such as stock trading involve technical tasks that require a user to open multiple windows. These multiple windows allow the user to access the necessary information required for a running activity the stock prices in this particular case. The usual problem is that some of the windows may stack on one another while other windows may overlap. Often a main window may be hidden or the content is not fully displayed causing dissatisfaction to the user. In order to create a better placement and viewing certain manual operations including but not limiting to move magnify resize drag close shrink expand shift and abut may continuously need to be performed by the user.

Thus it may be seen that the existing solutions to manage multiple windows on the screen present several drawbacks. Some of them include 

4. The resizing of the window opening to fit both contents and free area pixels of the screen is not optimized.

7. The optimal arrangement of multiple windows may be difficult to obtain manually such as by using computer mouse or light pen.

8. Depending on the window location on the screen and in particular when a window is near to the screen border it is not possible to access to window commands and scroll bars with the classic API Application Programming Interface such as the maximize action or resize action.

As mentioned above prior art solutions are not fully appropriated with the new trend of program development and technology evolution.

Thus there is a need for a solution that arranges multiple windows within a given screen and maximizes the area utilization of the screen by using an enhanced placement method that gives the user a perfect viewing of the multiple window content.

The present invention is directed to a method apparatus and computer product for optimizing the arrangement of multiple windows on a computer display.

Accordingly the present invention provides a method for determining parameters of a display and multiple windows displayed on the display. The method further calculates new parameters for a selected window based on the content of the selected window and performs at least one of resizing and repositioning operation on the selected window based on the new parameters by altering outline edges of the selected window and moving the selected window to a corresponding immediate corner of the display and an abutment of outline edges of the adjacent windows. The resultant window is located around the initial location after resizing or repositioning the selected window.

In the foregoing description specific embodiments of the present invention have been described by way of examples with reference to the accompanying figures and drawings. One of ordinary skill in the art will appreciate that various modifications and changes can be made to the embodiments without departing from the scope of the present invention as set forth in the claims below. Accordingly the specification and figures are to be regarded in an illustrative rather than a restrictive sense and all such modifications are intended to be included within the scope of the present invention.

The present invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In accordance with an embodiment of the present invention the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore the invention can take the form of a computer program product accessible from a computer usable or computer readable medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable medium can be any apparatus that can contain store or transport the program for use by or in connection with the instruction execution system apparatus or device.

The medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device . Examples of a computer readable medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid disk and an optical disk. Current examples of optical disks include compact disk read only memory CDROM compact disk read write CD R W and DVD.

Processor can be constructed from one or more microprocessors and or integrated circuits. Processor executes program instructions stored in main memory . Main memory stores programs and data that computer system may access. Main memory includes one or more application programs data operating system a configuration module and a resizing module . When computer system starts processor initially executes the program instructions that make up operating system . Operating system is a sophisticated program that manages the resources of computer system for example processor main memory mass storage interface network interface and system bus .

Application programs are executed by processor under the control of operating system . Application programs can be run with program data as input. Application programs can also output their results as program data in main memory. In one embodiment of the present invention computer system includes configuration module that allows management of the arrangement of multiple windows which are to be automatically resized and repositioned on the display. Computer system further includes resizing module for resizing and or repositioning multiple windows on the display. The modules are software code that may be a callable routine or embedded into another program i.e. an operating system or application program. For example although configuration module and resizing module are shown as a part of operating system in accordance with one embodiment of the invention it is equally within the scope of the present invention to provide a separate software application or utility that could also provide configuration module and resizing module separate from operating system .

Mass storage interface allows computer system to retrieve and store data from auxiliary storage devices such as magnetic disks hard disks diskettes and optical disks CD ROM . These mass storage devices are commonly known as Direct Access Storage Devices DASD and act as a permanent store of information. One suitable type of DASD is a floppy disk drive that reads data from and writes data to a floppy diskette . The information from the DASD can be in many forms. Common forms are application programs and program data. Data retrieved through mass storage interface is usually placed in main memory where processor can process it.

While main memory and DASD are typically separate storage devices computer system uses well known virtual addressing mechanisms that allow the programs of computer system to run smoothly as if having access to a large single storage entity instead of access to multiple smaller storage entities e.g. main memory and DASD device . Therefore while certain elements are shown to reside in main memory those skilled in the art will recognize that these are not necessarily all completely contained in main memory at the same time. It should be noted that the term memory is used herein to generically refer to the entire virtual memory of computer system . In addition an apparatus in accordance with the present invention includes any possible configuration of hardware and software that contains the elements of the invention whether the apparatus is a single computer system or is comprised of multiple computer systems operating in concert.

Network interface allows computer system to send and receive data to and from any network connected to computer system . This network may be a local area network LAN a wide area network WAN or more specifically the Internet . Suitable methods of connecting to a network include known analog and or digital techniques as well as networking mechanisms that are developed in the future. Many different network protocols can be used to implement a network. These protocols are specialized computer programs that allow computers to communicate across a network. TCP IP Transmission Control Protocol Internet Protocol used to communicate across the Internet is an example of a suitable network protocol.

System bus allows data to be transferred among the various components of computer system . Although computer system is shown to contain only a single main processor and a single system bus those skilled in the art will appreciate that the present invention may be practiced using a computer system that has multiple processors and or multiple buses. In addition the interfaces that are used in the preferred embodiment may include separate fully programmed microprocessors that are used to off load compute intensive processing from processor or may include I O adapters to perform similar functions.

The remainder of this specification describes in exemplary embodiments how the present invention improves the convenience of viewing multiple windows simultaneously on the display by performing at least one of resizing and repositioning operation on one or more windows using available display size. Those skilled in the art will appreciate that the present invention applies equally to any type of computer window generated on any type of computer display using any type of computer program including applications and system programs.

Referring to computer system is shown to further include a display . For the sake of clarity shows main memory directly coupled to display recognizing that there may be intervening circuitry or operations between the information in main memory and display . Main memory includes applications a configuration module and a resizing module . Any number of applications may be running and stored in main memory . Configuration module allows a user to initiate a process that manages arrangement of multiple windows on display . These multiple windows may relate to single or multiple different applications. Resizing module performs at least one of resizing and repositioning operation on one or more windows and gives the user the ability to see maximum information from multiple windows simultaneously. Further resizing module allows the user to manage the arrangement of multiple windows so as to manipulate scroll bars of the open windows that could be hidden otherwise .

Display includes multiple application windows with each window containing an icon in a title bar. Display further includes a configuration panel and a desk command menu . Desk command menu and icon constitute a graphical user interface for resizing a window.

Application windows on display are created by corresponding applications e.g. application application . . . application n running in main memory . Application windows contain the standard buttons namely maximize minimize and close buttons in respective title bars. Application windows further display icon in the title bar once configuration module has been activated. Desk command menu is displayed on display when a user right clicks a mouse. Resizing module is executed when a user clicks icon or appropriate buttons in desk command menu or both. It will be apparent to a person skilled in the art that different variations of the present invention are possible. In accordance with one embodiment only an icon on the title bar for resizing and repositioning a window is included. In accordance with another embodiment a desk command menu comprising buttons for resizing and repositioning windows is included.

The selection of local window action button allows resizing and repositioning of a window in the display so that multiple windows may be optimally arranged on the display in a sequential manner. The selection of global window action button on the other hand sequentially or simultaneously manages the placement of multiple windows to be resized and repositioned in real time.

An embodiment of the invention presents three modes of functionality depending on the selection of different buttons within configuration panel .

In accordance with first mode neither local window action button nor global window action button is selected. Accordingly computer system operates as usual as no dynamic action is triggered. Multiple windows may be resized and repositioned using any of the presently available solutions.

In accordance with second mode local window action button is enabled in configuration panel . The enabling of local window action button in configuration panel allows configuration module to initiate a process that manages optimization of the windows sequentially. Icon is displayed in title bar of each window once local window action button is selected in configuration panel . Further desk command menu displays Suit Window Local button and Suit Window Global button . Desk command menu can be accessed by the user by clicking on the right button of the mouse.

A Suit Window Local application that corresponds to sequential optimization of multiple windows is invoked by clicking either icon in title bar of selected window or by using Suit Window Local button available in desk command menu . This application optimizes the arrangement of windows sequentially. When activated the suit window local application automatically performs at least one of resizing and repositioning operation on the selected window to satisfy the user expectation. The window resizing and repositioning is performed using maximum available display size with a minimum amount of window movement. Therefore the resultant window is almost located at the same zone as previously located.

In accordance with third mode global window action button is selected in configuration panel to enable configuration module to initiate an application that manages optimization of the multiple windows that need to be resized and or repositioned. The optimization of the multiple windows may be performed sequentially or simultaneously after selecting global window action button . The configuration of the third mode is indicated to the user by the presence of icon in title bar of each window in addition to the presence of Suit Window Local button and Suit Window Global button in desk command menu .

The Suit Window Global application that corresponds to simultaneous optimization of multiple windows is invoked by user first by clicking on icon in title bar of selected window and then selecting Suit Window Global button available in desk command menu . This leads multiple windows to be simultaneously resized and or repositioned together to fit with the available display size.

The Suit Window Local application that corresponds to sequential optimization of multiple windows is invoked by user by either clicking on icon in title bar of selected window or by selecting Suit Window Local button available in desk command menu . This leads multiple windows to be sequentially resized and or repositioned together to fit with the available display size.

At step display resolution is measured. Further a form factor of the display is measured at step followed by the measurement of available size of the display at step . The available size of the display is the entire display area available for multiple windows to be displayed on the display. Once the parameters including display resolution form factor and available size of the display are determined the parameters of the multiple windows are determined. The parameters of the multiple windows are determined so that the size and position of the multiple windows on the display is considered before performing a window optimization.

At step the original outline of the multiple windows is determined. The original outline ascertains the position x coordinate y coordinate of a window on the display. At step the original size width and height of each window is determined. Further the original form factor of each window is determined at step .

After determining the parameters including original outline original size and original form factor of the multiple windows a new size of a window to be optimized is computed at step . In case of sequential arrangement of the multiple windows the first window to be optimized may be selected by the user. In case of simultaneous arrangement the sequence of selection of windows may be randomly defined clockwise or anticlockwise by the user. The new size of the selected window is a function of its content which includes text image program panel rolling menus and the like. The width of the selected window is computed based on the content to ensure that maximum content of the window is being displayed while ensuring minimum movement of the selected window on the display.

The selected window is resized to a maximum available size of the display if necessary at step . Next the selected window is resized on the display based on the new size at step . Further the contents including the size of the scroll bars and the title bars of the selected window are resized if the selected window is resized in various directions. The images on the selected window are resized with regard to the display parameters including display resolution and form factor to prevent them from becoming larger than the screen resolution at step .

The selected window is repositioned with respect to other windows at step . The present invention provides different possibilities to reposition the multiple windows on the display. The selected window is moved to an immediate corner of the display at step . The selected window can be repositioned either to an immediate corner of the display or can be located in the middle of the display. For example if five windows are to be repositioned in the display the resultant arrangement of the windows can lead to four windows at each corner of the display while one window in the middle of the display.

At step the hidden and overlapped windows are moved to an active window of the display. The active window of the display is the available area of the display to position the multiple windows. This moving is done because some of the multiple windows may overlap with the other windows or some of the multiple windows may be partially hidden by other windows. The active area of the display does not count the display area reserved for user initiative order or computer program panels.

Next the selected window is aligned to the same axis by edges abutment at step . The axis of the windows adjacent to the selected is considered before repositioning a selected window. Step ensures that the edges of the selected window on an X axis abut the edges of other windows on X axis. Similar operation is performed on a Y axis. For example if five windows are to be repositioned on the display the final optimization may result in four windows at each corner and one window in the middle of the display. The window in the middle of the display may be aligned with two Y edges abutment with the Y screen and two X axis abutments with the four other windows.

The shape of the selected window can be resized expanded shrunk moved or abutted with respect to a distant edge that serves as a reference.

Further it is checked if the selected window is fully displayed at step . To determine if the selected window is fully displayed it is checked whether the scrollbars or equivalents are included in the selected window at step . Further it is determined if the scrollbars or equivalents are accessible to the user at step .

The window resizing and or repositioning is performed using maximum available size of the display with a minimum location change of a selected window. The repositioned window is located on the display with minimum movement on the display. However the repositioned windows may be of a different size.

DWRCA computes new parameters for resizing and repositioning of window W. Since a single window is to be resized and repositioned DWRCA would resize the window W to occupy the entire available display size. The new size of window W would change to x s y s and the position of window W would be 0 0 . Thus after the resizing and repositioning operation window W would be displayed as depicted in block .

To resize and reposition windows W and W DWRCA computes the parameters of windows W and W. In accordance with an exemplary embodiment the display size may be determined as x s y s

In case of overlapping windows the selected window is repositioned according to the maximum width overlaid. The DWRCA computes the new size and position of window W based on the overlapping length o len and overlapping width o wid of window W on window W. If overlapping width o wid of window W is greater than the overlapping length o len of window W the size and position of window W after computation is as follows 

Using the aforesaid parameters DWRCA resizes window W to fit the available display size with borders joined to an immediate border of window W and the corresponding display edges as depicted in display .

If overlapping length o len of window W is greater than the overlapping width o wid of window W the window size and position of window W after computation is as follows 

Using the aforesaid parameters DWRCA resizes window W to fit the available display size with borders joined to an immediate border of window W and the corresponding display edges as depicted in display . Displays and illustrate window W being stretched however window W can be resized and repositioned as per user s preference.

DWRCA computes the parameters of display and windows W W and W to ascertain the size and position of the display and the windows W W and W. The parameters of each window include original outline original size and original form factor of each window. It then determines the new parameters of each window based on the available display size. DWRCA then resizes and repositions the windows based on the new parameters as shown in display . The resizing of the windows may result in windows with different sizes as each window is resized depending upon the available display size. However the window is repositioned at approximately the same location.

Display shows three different windows namely W W and W such that windows W and W overlap and are placed at a distance from window W. The windows W W and W may relate to a single application or to multiple different applications. The user initiates the Suit Window Local action that optimizes a window arrangement on the display containing three different windows. The Suit Window Local action gives the user the flexibility to sequentially optimize the windows.

Window W is selected by the user to be resized and repositioned by clicking a corresponding icon in a title bar of window W or a Suit Window Local button in desk command menu . On clicking icon or Suit Window Local button the DWRCA runs in order to resize and reposition window W by respectively expanding its outline edges from the initial position to the abutment of window W and window W and the immediate corner available on the display the bottom left corner in this case. The arrangement of windows after window W is resized and repositioned is depicted in block .

The user may then select window W which is overlapped with window W by clicking a corresponding icon in a title bar of window W or a Suit Window Local button in desk command menu . The DWRCA runs in order to resize and reposition the window W by respectively expanding its outline edges from the initial position to the abutment of the immediate corner available on display the top left corner in this case. Additionally the DWRCA removes the overlap between windows W and W by aligning windows W and W in the same axis.

Next window W is arranged to fit with the available display size left on the display. Window W is selected by the user in the similar manner. Since window W is tangent to the windows W and W the DWRCA resizes and repositions window W by expanding its outline edges from the initial position to the abutment of the immediate corners available on the display namely the top and bottom right corners as shown in block .

Display shows an arrangement containing three different windows respectively named W W and W such that windows W and W overlap each other and are distant from window W.

From the initial windows position given in display the simultaneous optimization is initiated first by clicking on any of icons or or included in a title bar of the windows W W and W respectively and second by selecting Suit Window Global button in desk command menu .

When Suit Window Global button is activated the DWRCA determines the appropriate windows that need to be optimized from an initial to a final arrangement and defines the accurate transformation in terms of size form factor area and location with regard to the available display area and automatically restarts the window placement process on a user request. The appropriate arrangement is performed by modifying the initial window size and position by respectively expanding the outline edge of the selected window to the abutment of both the outline edges of the others windows and an immediate corner of the display to get the final optimization as depicted in block . In addition the DWRCA considers the initial location of each window so that the resultant window is almost located at the same zone as previously located before running the Suit Window Global action. The DWRCA also resizes the inside of the window to fit the contents. That means the resultant size that is computed also includes the total size of scroll bars status bars toolbars and title bars.

The optimization of the multiple windows in the third mode can be in clockwise or anticlockwise direction. It is up to the user to select the window he wants to manipulate. It is also possible to optimize only one window out of the multiple windows.

Although various embodiments which incorporate the teachings of the present invention have been shown and described in detail herein those skilled in the art can readily devise many other varied embodiments that still incorporate these teachings.

