---

title: Dropdown widget
abstract: A data processing system and method of presenting data on a graphical user interface. A dropdown widget with multiple lists is provided. According to an embodiment, items are grouped into multiple lists, and the lists are presented in an alternating or cyclic fashion in response to a user input. In a certain embodiment, a particular list may be selected for display by choosing the corresponding button on a widget. In some cases, multiple lists may be displayed at the same time. The present invention enables the user to select one or more items from mutually exclusive or hierarchically organized lists.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07971155&OS=07971155&RS=07971155
owner: 
number: 07971155
owner_city: 
owner_country: 
publication_date: 20071021
---
The present application claims priority to U.S. Provisional Patent Application No. 60 862 450 filed on Oct. 22 2006 and entitled Dropdown List Control which is incorporated herein by reference in its entirety this application hereby claims the benefit of this provisional application under 35 U.S.C. 119 e .

The present invention generally relates to a data processing system. More particularly the present invention pertains to a graphical user interface component.

A graphical user interface GUI has become one of the most widely used mechanisms in which the user interacts with a data or information processing and or communications system such as a personal computer PC or a personal digital assistant PDA or a cellular phone etc. This is partly due to the recent progress in information technologies both in software and hardware areas and this is also partly due to the wide recognition of the benefits with which the well designed graphical user interface provides the user in terms of the usability and accessibility etc. In the graphical user interface paradigm in the so called windowing systems in particular the user interacts with a computer or other data processing communications devices through one or more special areas in the display screen s typically of rectangular shapes called windows. Windows can be opaque or semi transparent. A special window that covers the whole display screen is generally known as a desktop e.g. in a window system of personal computers . Some windows are configured to display textual or graphical content within their boundaries such as edit windows used in word processing applications. Other various types of special purpose or stock graphical user interface components or widgets or controls or common controls are also included in most GUI toolkits or libraries or in most operating systems that natively support graphical user interfaces. For example Microsoft Windows Apple Macintosh various X Window based window systems on Unix platforms and other GUI systems on virtual machines such as Java Swing Microsoft .Net framework etc. and Palm Symbian and other operating systems for handheld devices or mobile handsets etc. 

One of the most commonly used GUI controls is a so called dropdown or dropdown list widget. A typical dropdown list consists of an edit box and a pull down list. An item from the pull down list may be selected and displayed on the edit box which may or may not be editable by an end user. An item may also be added to the list either programmatically or by the user e.g. by adding the item into the editable edit box . The list part may be made visible pulled down or hidden closed by clicking on the non editable edit box or on a button typically drawn with a downward arrow which is usually included in the dropdown list widget. In a typical graphical user interface GUI system only one item may be selected and displayed through the edit box area . Change of the selected item in the edit box either in response to user input or initiated programmatically based on other conditions or events etc. typically triggers an event which may be used for example to control the behavior of other widgets or to perform certain predefined operations e.g. through callback functions . The dropdown list control or simply dropdown control is sometimes called a combo box because it provides the combined functionalities of an edit control and a list control or other type of component . It should be noted however that the combo box control is a single widget in all common graphical user interface systems libraries or frameworks for example with a well defined interface e.g. an application programming interface or API . In certain implementations the list control part may always be displayed along with the edit control part e.g. instead of being toggled between the hidden and pulled down states . Other variations are also found.

A related graphical user interface component is a menu control or a menu bar strip which usually consists of one or more menu items. Menu items are typically organized in a hierarchical fashion and they are designed to trigger certain associated actions when activated e.g. in response to a user selection . Selecting a non leaf menu item e.g. similar to a folder typically pulls down or hides its child menu items e.g. in the downward direction or to the right etc. in a similar way that a list is displayed or hidden when the combo box is toggled. Selecting a leaf menu item usually issues an associated command which is to perform a predefined function. Unlike the dropdown list component however the menu control is primarily used to trigger or issue an action rather than to select an item and the menu control does not generally change the parent menu s label in response to selecting a child menu item. shows a horizontal menu bar or menu strip control in the prior art. The top level menu control shown in the figure is in a closed state and it comprises three menu items File Edit and View . Menu items can be opened by clicking or hovering on the menu items or areas on or surrounding the associated labels using a mouse pointer or by activating certain predefined keyboard shortcuts. illustrates the menu bar control in an open or dropped down state. The Edit menu has been pulled down and its child menu or submenu is displayed below the menu bar. The vertically arranged submenu bar includes one or more menu items each of which may open up another submenu or fire up an associated command or action when activated. Labels of menu items are typically non editable e.g. by the user . A menu bar or a submenu bar may be closed either explicitly e.g. by clicking on the menu etc. or implicitly e.g. automatically when a user interacts with different widgets other than the menu etc. . Certain aspects of the present invention may apply to a menu control as well as to a dropdown list control even though our discussion may only refer to a dropdown list control in some cases.

A typical implementation of the dropdown list widget in the prior art is designed to pick an item from a single list of data associated with the widget add an item to the list or otherwise manipulate the data in the list. In some cases the data may be organized into hierarchical lists such as in the case of a menu component that includes submenus but each menu or submenu is still associated with a single list e.g. its child menu items . In certain implementations the list may be filtered or otherwise dynamically manipulated but they still deal with one list. There are cases however in which being able to organize items in more than one list or select an item from the multiple lists for example from different data sources etc. is desirable. For instance listing hundreds or thousands of cities in the United States in one list may not be the most convenient way to organize and or present the data to the user. Instead it may be more user friendly if the cities are grouped for example into states and presented in multiple shorter lists.

Certain embodiments of the present invention provide methods and apparatuses for presenting a set of data on a graphical user interface GUI . In particular a dropdown widget with multiple lists is provided. According to an embodiment of the present invention selection items are grouped into multiple lists and the lists are presented in a certain preset order for example in response to a user input. In some embodiments a list may be selected by using a toggle button on a widget e.g. in a cyclic fashion. In some other embodiments a particular list may be selected by choosing the corresponding button from multiple buttons or by clicking on a particular area of the widget. Certain selected lists may also be presented based on the context or based on user preferences. Two or more lists may be displayed at the same time. Embodiments of the present invention can be used to enable the user to select items from two or more mutually exclusive or hierarchically organized lists.

According to an embodiment of the present invention a multi list combo box control is provided. The graphical user interface component comprises an edit or text box area and one or more list boxes. A list may be selected and pulled down using a toggle button. In some embodiments lists are displayed in a cyclic way for example when the dropdown button is pressed or a pointer is hovered over the button. In some embodiments a list may be explicitly selected using a certain user interface such as a built in spin control or multiple buttons. In certain cases lists may be filtered and only a set of selected pre filtered lists may be accessed by the user. Items in lists may also be filtered in certain implementations. In a certain embodiment one or more lists may be simultaneously displayed either overlapped or concatenated. Embodiments of the present invention may be used for displaying items from mutually exclusive lists e.g. an item is either an email address or a telephone number etc. or from multiple folders or categories e.g. bookmarks belonging to different folders etc. . Embodiments of the present invention may also be used for displaying items from hierarchically organized lists. For example the US cities may be grouped into 50 states either beforehand when storing the data or on the fly when presenting them on the user interface etc. and they may be displayed through a GUI widget embodiment of the present invention. Certain embodiments may be used for displaying context dependent lists e.g. for selecting an item s from one or more lists etc. . For example context sensitive help or help topics help categories etc. may be presented to a user which the user may cycle through to find the right help topic he or she is looking for. Embodiments of the present invention may also be used for displaying items classified in terms of their attributes e.g. based on relevant dates etc. or items simply divided into multiple groups e.g. alphabetically etc. . In a certain embodiment multiple items may be selected e.g. one from each separate list etc. . For example three color components may be selected from three color palettes e.g. for R G and B colors included in a single multi list combo box widget.

Therefore as summarized herein the present invention provides among other things a graphical user interface control with multiple drop down or pull down lists. These and other embodiments features aspects and advantages of the present invention will be apparent from the accompanying drawings and from the detailed description and appended claims which follow.

The present invention will now be described more fully hereinafter with reference to the accompanying drawings in which various exemplary embodiments of the invention are shown. This invention may however be embodied in many different forms and should not be construed as limited to the embodiments set forth herein rather these embodiments are provided so that this disclosure will be thorough and complete and will fully convey the scope of the invention to those skilled in the art. Likewise for purposes of explanation numerous specific details are set forth in the following description in order to provide a thorough understanding of the present invention. It will be evident however to one skilled in the art that the present invention may be practiced without these specific details. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the present invention. Parts of the description may be presented using terminology commonly employed by those skilled in the art to convey the substance of their work to others skilled in the art. Also parts of the description may be presented in terms of operations performed through the execution of programming instructions. As well understood by those skilled in the art these operations often take the form of electrical magnetic or optical signals capable of being stored transferred combined and otherwise manipulated through for instance electrical components.

The invention may utilize a distributed computing environment. In a distributed computing environment program modules may be physically located in different local and remote memory storage devices. Execution of the program modules may occur locally in a stand alone manner or remotely in a client server manner. Examples of such distributed computing environments include local area networks enterprise wide computer networks and the global Internet. In addition it should be understood that the programs processes methods etc. described herein are not related to any particular computer or apparatus nor are they related or limited to any particular communication network architecture. Rather various types of general purpose machines may be used with program modules constructed in accordance with the teachings described herein. Similarly it may prove advantageous to construct a specialized apparatus to perform the method operations described herein by way of dedicated computer systems in a specific network architecture with hard wired logic or programs stored in nonvolatile memory such as ROM read only memory .

Various methods will be described as multiple discrete operations in turn in a manner that is most helpful in understanding embodiments of the present invention. However the order of the description should not be construed as to imply that these operations are necessarily to be performed in any particular order in particular in the order of the presentation. Some portions of the detailed descriptions which follow are presented in terms of algorithms and symbolic representations of operations on data bits within a computer memory. These algorithmic descriptions and representations are the means used by those skilled in the data processing arts to most effectively convey the substance of their work to others skilled in the art. An algorithm is here and generally conceived to be a self consistent sequence of steps leading to a desired result. The steps are those requiring physical manipulations of physical quantities. Usually though not necessarily these quantities take the form of electrical or magnetic signals capable of being stored transferred combined compared and otherwise manipulated. It has proven convenient at times principally for reasons of common usage to refer to these signals as bits values elements symbols characters terms numbers or the like. It should be borne in mind however that all of these and similar terms are to be associated with the appropriate physical quantities and are merely convenient labels applied to these quantities. Unless specifically stated otherwise as apparent from the following discussions it is appreciated that throughout the present invention discussions utilizing terms such as processing computing calculating determining or displaying or the like refer to the action and processes of a computer system or similar electronic computing device that manipulates and transforms data represented as physical electronic quantities within the computer system s registers and memories into other data similarly represented as physical quantities within the computer system memories or registers or other such information storage transmission or display devices.

The present invention also relates to apparatus for performing the operations herein. This apparatus may be specially constructed for the required purposes or it may comprise a general purpose computer selectively activated or reconfigured by a computer program stored in the computer. The algorithms and displays presented herein are not inherently related to any particular computer or other apparatus. Various general purpose machines may be used with programs in accordance with the teachings herein or it may prove convenient to construct more specialized apparatus to perform the required method steps. The required structure for a variety of these machines will appear from the description below. In addition the present invention is not described with reference to any particular programming language. It will be appreciated that a variety of programming languages may be used to implement the teachings of the invention as described herein.

According to an embodiment of the present invention a method and apparatus for presenting a set of data on a graphical user interface GUI is provided. A GUI component or control widget in a certain embodiment comprises an edit or text box area and one or more list boxes. A list may be selected and pulled down using a toggle button or other activation mechanism. Data from certain data sources may be presented in one or more lists as selectable items. According to an embodiment of the present invention selection items are grouped into multiple lists and the lists are presented in a certain preset order e.g. in response to a user input. In some embodiments lists are displayed presented in a cyclic way for example when the dropdown button is pressed or a pointer is hovered over the button. In some other embodiments a list may be explicitly selected using a certain user interface construct such as a built in spin control or one or more buttons or by clicking on a particular area of the widget. In some other embodiments certain selected lists may also be presented based on the context or based on user preferences. In certain cases lists may be filtered and only a set of selected pre filtered lists may be accessed by the user. Items in lists may also be filtered in certain implementations. In a certain embodiment one or more lists may be simultaneously displayed either overlapped or concatenated. Embodiments of the present invention may be used among other things to enable the user to select items from two or more mutually exclusive or hierarchically organized lists without using multiple controls.

With reference now to figures illustrate various exemplary graphical user interface components according to certain embodiments of the present invention. The widgets shown in these figures are displayed in their closed states or visual representations indicating the closed states etc. . The exemplary widget of according to an embodiment of the present invention comprises a text box or edit area and a button or a multi arrow button e.g. to indicate that the button or the widget is associated with multiple lists etc. . When the button is pressed or a mouse pointer is hovered over an edit box area etc. a dropdown list is displayed. In a certain embodiment a different list is displayed e.g. in the same dropdown list box etc. when the button is pressed again. When all lists have been displayed at least once e.g. in a certain predefined order pressing the button one more time may close the drop down list box. The list box may also be closed once an item is selected from one of the lists or the hovering mouse pointer leaves the area of control etc. depending on the implementation . The text area is used to display a currently selected item. In a certain embodiment the text box may be editable . In such an embodiment the selected item may be edited in the edit box or a new item may be added. The newly added item may be inserted into one of the lists e.g. stored in a data source such as a document in a file system or a table in a relational database etc. for example into the first list in a certain preset order or into the active list which is associated with the currently or previously selected item or into the currently open list if any etc. When the text box is non editable it may be used as an extension of the button . That is the multi list box may be toggled e.g. cyclically by clicking on the text box portion of the widget for example using a mouse button.

Turning now to various exemplary graphical user interface components according to certain embodiments of the present invention are illustrated. The various widgets shown in these figures are displayed in their open or pulled down dropped down states. shows a graphical user interface widget according to an embodiment of the present invention. The widget shown in the figure comprises among other things one or more lists of items e.g. stored in a memory of a data processing system etc. . One of the associated lists or a part of it is currently shown in a pull down or visible state . The list box portion of the widget can be activated e.g. opened pulled down or closed hidden etc. using a button . shows the graphical user interface widget of with a different list pulled down. The button has a different visual representation in this example. One of the items of the associated lists e.g. or etc. may be selected and displayed in the edit box portion of the widget by the user for example using a pointing device or a keyboard. In the exemplary figure of the selection has not been changed even though a different list has been opened. Typically opening a list and selecting an item involve two or more separate events e.g. user actions . In some embodiments at least one list may always be visible open . Lists may be sorted in some way. In certain implementations the items in an open list may also be edited or deleted. A new item may be inserted e.g. into a particular position etc. . In a certain embodiment the data may be presented in a table or grid format or as a graph or figure etc. According to an embodiment of the present invention different lists are displayed in the same size list box. For example a short list may be padded with blank lines etc. In some embodiments each list may have a different e.g. optimal or user configured etc. size. In a certain embodiment a dropped down list may be resized e.g. its height etc. for example using the resize grip . In some cases the resizing affects the list size of all lists coupled with the widget. In some other cases each list may be individually resized.

Referring now to various components of an exemplary multi list dropdown component according to an embodiment of the present invention are illustrated in a schematic block diagram form. The exemplary widget includes an editable or non editable edit box for displaying a selected item text or image etc. a button for toggling drop down lists and one or more list boxes and in the figure. As stated earlier these components represent abstraction of functional entities e.g. not necessarily separate controls by themselves . In a certain embodiment the button part may be optional. In a certain other embodiment more than one button may be used. The items in the lists may be dynamically generated or filtered based on predefined lists etc. or they may come from separate static data sources. In some cases a list may be dynamically paginated into multiple lists e.g. based on a pre configured value such as the maximum number of items in a single list page etc. . In a certain embodiment of the present invention a single dropdown list box component e.g. a visual abstraction is used reused for multiple data sources or lists . In a certain other embodiment a list box component may be built in memory for each data source. In some cases the lists of the appropriate data are simply drawn painted e.g. in response to events such OnPaint OnInvalidate etc. . The lists or list boxes may be resizable e.g. new items may be added exiting items may be deleted etc. or otherwise alterable in some implementations. New lists may also be added or existing lists may be removed from the widget in certain cases. According to an embodiment of the present invention items e.g. stored in one data source etc. may have attributes or tags classes categories etc. associated with them and a set of lists may be created e.g. either at the time of application startup or at the time of widget creation initialization configuration etc. based on the items attributes. For example one list may contain items with the last modified date in the year 2004 and another list may contain items with the last modified date in the year 2005 etc. According to an embodiment of the present invention a graphical user interface widget is visually constructed from these elements or building blocks and .

In a typical implementation GUI widgets are part of an operating system or a virtual machine or an application framework or they are provided as part of a GUI library either statically or dynamically linked etc. . This is schematically illustrated in which shows relevant software modules or components in a block diagram form according to an embodiment of the present invention. According to this exemplary diagram the user interacts with the system shown on the right hand side of the figure. The exemplary system comprises an operating system and an application framework . In this illustration the GUI widget is included in the application framework . The user typically interacts with an application not shown in the figure which may be built within or on top of the application framework and configured to run on a particular operating system or a virtual machine etc . The application may implement its own multi list combo box controls according to a certain embodiment of the present invention or it may utilize pre implemented widgets for example provided in the application framework . In this diagram the relevant data items in one or more lists the selected item other visual configuration etc. is stored in a persistent data source . The list data may be dynamically built in memory e.g. based on a certain preset algorithm and or using other input data etc. . In some cases the data source or content of the widget may be associated with a particular application.

As shown in the exemplary data processing system includes at least one bus which is coupled to a microprocessor s and a memory such as a ROM read only memory or a volatile RAM random access memory and a non volatile storage device s . The system bus interconnects these various components together and also interconnects these components and to a display controller s and a display device s such as LCD liquid crystal display screens and to peripheral devices such as input output I O devices and which may be mice keyboards input wheels modems network interfaces printers and other devices which are well known in the art. Typically the I O devices and are coupled to the system through I O controllers . The volatile RAM is typically implemented as dynamic RAM DRAM which requires power continually in order to refresh or maintain the data in the memory. The mass storage is typically a magnetic hard drive or a magnetic optical drive or an optical drive or a DVD ROM or other types of memory systems which maintain data e.g. large amounts of data even after power is removed from the system. Typically the mass storage will also be a random access memory although this is not required. While shows that the mass storage is a local device coupled directly to the rest of the components in the data processing system it will be appreciated that the present invention may utilize a non volatile memory which is remote from the system such as a network storage device which is coupled to the data processing system through a network interface such as a modem or Ethernet interface. The bus may include one or more buses connected to each other through various bridges controllers and or adapters as is well known in the art. In one embodiment the I O controller includes a USB universal serial bus adapter for controlling USB peripherals and an IEEE 1394 firewire controller for IEEE 1394 compliant peripherals. The display controllers may include additional processors such as GPUs graphical processing units and they may control one or more display devices .

With reference now to flow charts illustrating various exemplary operations of certain embodiments of the present invention are shown. shows a flow chart according to an embodiment of the present invention. The exemplary process of the flow chart illustrates among other things operations for displaying a multi list combo box widget on a graphical user interface. The process begins at block by first instantiating a graphical user interface widget e.g. a multi list combo box . The lists or the data of the widget are then configured at for example by listing a collection of related selectable items in each list. The lists may be further filtered or otherwise modified processed and the order of presentation is determined as indicated in block . One of the items from the lists is selected e.g. based on stored data at for display purposes e.g. to be displayed as a selected item in the edit box area of the widget . The data may be retrieved from user specific data source e.g. in a registry file on Windows platform in a relational database or in an application configuration file etc. . In a certain embodiment the newly created widget is displayed in its closed state at . In a certain other embodiment the widget may be displayed in an open state with the first selected list displayed dropped down etc.

Turning now to various exemplary embodiments of the present invention are illustrated. shows a GUI widget a multi list dropdown list box according to an embodiment of the present invention. The exemplary widget is shown in its open state in the figure with multiple lists simultaneously displayed e.g. overlapped to one another . In the figure the third list is shown on top of the other lists. The user may be able to cycle through the lists by clicking on a button with a pointer possibly including the closed state . In a certain embodiment a list may be explicitly selected by clicking on the displayed region of the list e.g. a narrow slab like region in the figure etc. . In some embodiments a tab control is used to present multiple lists in a dropdown list box portion of the widget. In some other embodiments more than one list may be displayed at one time e.g. one above the edit box area and another below it etc. . The lists may then be cyclically rotated through these two or more list areas for instance. illustrates another visual representation of an exemplary multi list widget and according to an embodiment of the present invention. In the top and bottom figures two different lists are displayed and . The exemplary widget uses a multi scroll bar and that is a scrolling control with multiple thumbs or scroll boxes and . In top illustration the top thumb is selected and the corresponding list is activated in the bottom illustration the bottom thumb is selected and the corresponding list is displayed. The thumbs may also be used to scroll through items in the selected list. According to an embodiment of the present invention two or more lists may be combined e.g. dynamically and items from these lists may be presented at the same time. This is illustrated in where an exemplary multi list combo box is shown according to an embodiment of the present invention. The exemplary widget comprises a button for displaying hiding the list portion and or for alternating among different lists. The widget is shown in an open state in the figure with multiple lists displayed at the same time. The illustration shows at least two lists and virtually concatenated into one. In some implementations concatenation may be toggled e.g. between displaying one list and displaying more than one list at the same time . The widget also includes a scroll bar for scrolling items or for displaying a portion of the lists. In a certain embodiment items from one or more lists may be grouped into a page e.g. comprising multiple lists and each page may be displayed in the list area when activated for example by the button . In some embodiments all lists may be combined into one and displayed e.g. in response to a user input for example as one of the multiple states etc. .

In some embodiments of the present invention lists or items may be filtered based on various criteria. One example is illustrated in which shows an exemplary graphical user interface window for setting user preferences according to an embodiment of the present invention. This particular setting may be used for configuring a multi list combo box widget in a certain context. For example when a user is given a choice for selecting a certain movie the lists may be limited to selected genres in this UI window. According to a certain embodiment the preference setting UI e.g. for filtering may be presented along with a multi list widget. For example an additional button may be associated with the widget which can activate a setup window similar to the one shown in . In some cases each list may be configured to show not show from its list box area for example using a Do Not Show checkbox etc.

With reference now to another exemplary graphical user interface GUI component according to an embodiment of the present invention is illustrated. In this particular example two lists e.g. cities from California and cities from Florida and respectively are to be displayed through this GUI control. The exemplary control comprises two separate buttons and e.g. one for California and one for Florida . Activating one button opens closes the corresponding list or replaces the currently open list etc. . In the widget currently displays the California city list whereas in the widget currently displays the Florida city list . The buttons have different visual representations depending on the selection. For example buttons and are activated in respectively. The other buttons e.g. in the top figure and in the bottom figure are drawn in normal states. In a certain embodiment of the present invention for example as shown in this example the selected item may be displayed with additional information e.g. the prefix CA in this example to indicate the list to which the item belongs. If an item Palm Beach is selected the display on the edit box may be changed to FL Palm Beach in this particular example.

According to some embodiments of the present invention hierarchically organized lists or hierarchically organized data may be used with certain multi list GUI widgets e.g. categories subcategories leaf items etc. . In the example shown in a city in the United States may be selected by first selecting a state and then selecting one of the cities in that state. shows the exemplary widget with the state list according to an embodiment of the present invention. The widget further includes a button for opening closing alternating lists etc. Once a selection is made at a top or upper level e.g. a category another list compatible with the top upper level selection e.g. items in the selected category is displayed whose selection may prompt to display another lower level list etc. In this illustration California has been selected and a list of cities in California is displayed in a different widget state as shown in . This state change may be triggered for example by the user selecting a different item in the list . Once a selection is completed e.g. in multiple levels the list part may be closed. Selecting an Internet host domain name is another example which can be implemented in a user friendly way using a hierarchically organized multi list combo box. For example a user can select the top level domain first e.g. .com .net etc. which triggers displaying the second level e.g. abc.com cnn.com Yahoo.com etc. if.com has been selected and so forth.

Accordingly methods and apparatuses of operating a graphical user interface for a data processing system in particular a combo box widget with multiple selection lists have been provided. While the above description contains many specificities these should not be construed as limitations on the scope of the invention but as exemplifications of the presently preferred embodiments thereof. Many other ramifications and variations are possible within the teachings of the invention. As will be appreciated by one of skill in the art the present invention may be embodied as a method data processing system or program product. Accordingly the present invention may take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment combining software and hardware aspects. Furthermore the present invention may take the form of a computer program product on a computer readable storage medium having computer readable program code means embodied in the medium. Any suitable storage medium may be utilized including hard disks CD ROMs DVD ROMs optical storage devices or magnetic storage devices. Thus the scope of the invention should be determined by the appended claims and their legal equivalents and not by the examples given.

