---

title: Intrusion detection system alerts mechanism
abstract: A system and method for analyzing Intrusion Detection System (IDS) alert data associated with a computer network is described. The method includes applying first association rules to obtained IDS alert data associated with a computer network and processing the obtained IDS alert data with the first association rules. Analyst feedback data associated with the processed obtained IDS alert data is received, and a training data set from the analyst feedback data is received. New association rules are determined based upon the training data set, and the new association rules are outputted to a display of a computing device. Outputting the new association rules may include outputting patterns within the IDS alert data of false positive alerts. The new association rules may be applied back to the obtained IDS alert data.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07991726&OS=07991726&RS=07991726
owner: Bank of America Corporation
number: 07991726
owner_city: Charlotte
owner_country: US
publication_date: 20071130
---
Generally speaking an Intrusion Detection System IDS is system which detects unusual and or hostile activities in a computer network. IDSs detect and or prevent activities that may compromise system security and or an attempted hacking of a component within the network while in progress. IDSs provide a view of unusual activity and issue alerts notifying administrators and or block a suspected connection altogether.

The false positive rate is a fundamental metric used by the Intrusion Detection System IDS industry to measure the performance of an Intrusion Detection System. Under the current state of IDS it is still difficult for an IDS product to obtain an absolute low false positive rate.

For an entity there may be a huge amount of security data created by various Intrusion Detection System IDS Intrusion Prevention System IPS systems. Analysts may analyze alerts data from the security data for long periods of time including years. Such alert data may including a large number of false positives.

With a large number of false positives to analyze true negatives are missed in the analysis. Currently there is no method or system for eliminating the false positive to improve the efficiency of the alerts.

Due to the characters of security alerts data set the value of variables is more than often categorical rather than numerical also alerts may have many different attributes depending on the availability of background knowledge and the type of alert itself. This makes a classical supervised learning method such as a decision tree a neural network and RIPPER rule learner difficult to apply. The relevance of each independent variable to the target variable varies with the type of alerts which make the traditional feature selection difficult. For example even within a same data set alerts may have different set of dependent attributes features based on the type of alerts e.g. whether it is an alert on application vulnerability exploit or network scan.

Finding an effective method to learn from the history training data and thus improving the performance of an Intrusion Detection System and analyzing process is needed.

In light of the foregoing background the following presents a simplified summary of the present disclosure in order to provide a basic understanding of some aspects of the invention. This summary is not an extensive overview of the invention. It is not intended to identify key or critical elements of the invention or to delineate the scope of the invention. The following summary merely presents some concepts of the invention in a simplified form as a prelude to the more detailed description provided below.

Aspects of the present invention are directed to a method and system for analyzing Intrusion Detection System IDS alert data associated with a computer network is described. The method may include applying first association rules to obtained IDS alert data associated with a computer network and processing the obtained IDS alert data with the first association rules. Analyst feedback data associated with the processed obtained IDS alert data may be received and a training data set from the analyst feedback data may be received. New association rules may be determined based upon the training data set and the new association rules are outputted to a display of a computing device.

In accordance with other aspects of the present invention outputting new association rules may include outputting patterns within the IDS alert data of false positive alerts. Still further the new association rules may be applied back to the obtained IDS alert data.

In accordance with another aspect of the present invention another method for analyzing Intrusion Detection System IDS alert data associated with a computer network is described. The method may include receiving a training data set with a single target variable and a group of categorical independent variables. For a target variable T a variable set V V V . . . V and a cluster set for variable V C C . . . C where jis the total number of clusters for variable V each variable Vmay be clustered. Selected variables may be received for processing and a combination depth of 1 may be set. For each cluster Cof the selected variable V each record in the training data set where record V Cand record target T may be checked. A new association rule C T and purity is equated to m n may be generated where n is the count of records with record V C and m is the count of records with record V Cand record target T.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. The Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used to limit the scope of the claimed subject matter.

In the following description of the various embodiments reference is made to the accompanying drawings which form a part hereof and in which is shown by way of illustration various embodiments in which the invention may be practiced. It is to be understood that other embodiments may be utilized and structural and functional modifications may be made.

I O may include a microphone keypad touch screen and or stylus through which a user of device may provide input and may also include one or more of a speaker for providing audio output and a video display device for providing textual audiovisual and or graphical output. Software may be stored within memory and or storage to provide instructions to processor for enabling server to perform various functions. For example memory may store software used by the server such as an operating system application programs and an associated database . Alternatively some or all of server computer executable instructions may be embodied in hardware or firmware not shown . As described in detail below the database may provide centralized storage of account information and account holder information for the entire business allowing interoperability between different elements of the business residing at different physical locations.

The server may operate in a networked environment supporting connections to one or more remote computers such as terminals and . The terminals and may be personal computers or servers that include many or all of the elements described above relative to the server . The network connections depicted in include a local area network LAN and a wide area network WAN but may also include other networks. When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter . When used in a WAN networking environment the server may include a modem or other means for establishing communications over the WAN such as the Internet . It will be appreciated that the network connections shown are illustrative and other means of establishing a communications link between the computers may be used. The existence of any of various well known protocols such as TCP IP Ethernet FTP HTTP and the like is presumed and the system can be operated in a client server configuration to permit a user to retrieve web pages from a web based server. Any of various conventional web browsers can be used to display and manipulate data on web pages.

Additionally an application program used by the server according to an illustrative embodiment of the invention may include computer executable instructions for invoking user functionality related to communication such as email short message service SMS and voice input and speech recognition applications.

Computing device and or terminals or may also be mobile terminals including various other components such as a battery speaker and antennas not shown .

The invention is operational with numerous other general purpose or special purpose computing system environments or configurations. Examples of well known computing systems environments and or configurations that may be suitable for use with the invention include but are not limited to personal computers server computers hand held or laptop devices multiprocessor systems microprocessor based systems set top boxes programmable consumer electronics network PCs minicomputers mainframe computers distributed computing environments that include any of the above systems or devices and the like.

The invention may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures etc. that perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote computer storage media including memory storage devices.

Referring to an illustrative system for implementing methods according to the present invention is shown. As illustrated system may include one or more workstations . Workstations may be local or remote and are connected by one or communications links to computer network that is linked via communications links to server . In system server may be any suitable server processor computer or data processing device or combination of the same. Server may be used to process the instructions received from and the transactions entered into by one or more participants.

Computer network may be any suitable computer network including the Internet an intranet a wide area network WAN a local area network LAN a wireless network a digital subscriber line DSL network a frame relay network an asynchronous transfer mode ATM network a virtual private network VPN or any combination of any of the same. Communications links and may be any communications links suitable for communicating between workstations and server such as network links dial up links wireless links hard wired links etc.

As understood by those skilled in the art the steps that follow in the Figures may be implemented by one or more of the components in and or other components including other computing devices.

Proceeding to step manual analysis on the outliers may be performed. Step may be performed by analysts affiliated with an entity that obtains the IDS alert data or an outside company with analysts to analyze the IDS alert data of the entity. Validation of the outliers occurs as part of the manual analysis . Analyst feedback on the manual analysis of the outliers data is obtained in step . The feedback data from the analyst may be inserted into a training data set in step . In addition contextual data of a group of categorical independent variables may be inserted into the manual analysis step .

Both the contextual data in and the training data set in are utilized in step as part of the machine learning algorithm in accordance with one or more aspects of the present invention. Given a security alerts training data set the machine learning algorithm tool performs an exhaustive heuristic search in the data set. The tool searches through every possible combination. An output becomes a pattern in the format of associated rules quantified by purity. The purity of each association rule indicates how likely the alert is of being a true positive. A descending sorted list of association rules produces discernable patterns and those patterns demonstrate the confidence of a true positive in descending order.

The output of step may be inserted into step to tweak analytics rule set associated with processing of the IDS alert data in step . The analytics rule set in is feedback into the process as an input to step . In addition the output of the tool in may be feedback as an input to step as an edit to policy threshold or signature used in obtaining IDS alert data from the network . Such feedback allows for more proper processing of security IDS alert data.

As should be understood by those skilled in the art for illustrative purposes notations for the calculations and processes that follow may correlate to the following. A target variable is T variable set V is V V . . . V cluster set for variable Vis C C . . . C where jis the total number of clusters for variable V. The process starts and at step clustering is performed for each variable V. At step variables selection occurs. Proceeding to step the combination depth is equaled to 1. For each cluster Cof selected variable V all the records in the data set are checked if the record V equals Cand the record target equals T. At step an associate rule is generated. C T and purity is equated to m n. n is the count of records with record V equal to C and m is the count of records with record V equal to Cand record target equal to T.

Proceeding to step the combination depth is increased to 2. In step for all two combination set V V from variable set V all the records in the data set are checked if the record V equals Cand the record V equals Cand the record target equals T. Cis a cluster from variable Vand Cis a cluster from variable V. At step an associate rule is generated. C C T and purity is equated to m n. n is the count of records with record V equal to Cand record V equal to C. m is the count of records with record V equal to Cand record V equal to Cand record target equal to T.

Proceeding to step the combination depth is increased to k. In step for all k combination set V V . . . V from variable set V all the records in the data set are checked if the record V equals Cand the record V equals Cand . . . and the record V equals Cand the record target equals T. Cis a cluster from variable V Cis a cluster from variable V . . . and Cis a cluster from variable V. At step an associate rule is generated. C C . . . C T and purity is equated to m n. n is the count of records with record V equal to Cand record V equal to Cand . . . and record V equal to C. m is the count of records with record V equal to Cand record V equal to Cand . . . and record and V equal to Crecord target equal to T.

Given a security alerts training data set labeled with a class label such as false and true alerts as showed Table 2 or as shown in Table 3 and a group of independent variables one aspect is to find a correlation between the target variable and the independent variables. The machine learning tool will do an exhaustive heuristic searching learning in the data set and output the pattern in the format of association rules quantified by purity which articulate the connections between like records which might not be readily apparent to analysts. The purity of each association rule indicates how likely an alert is true positive false positive under certain condition s . As described the algorithm searches through every possible combination of given set of conditions and outputs the purity of that specific combination. Thus a descending sorted list of association rules reveals the patterns that lead to true positive or false positive with descending confidence. This greatly enhances the speed with which those trained in the art can distill large data sets and increases their opportunities for discovering false negatives and eliminating false positives. The benefit of using a graphic tool to present these results to knowledgeable security analysts is helpful since background knowledge is necessary to better interpret the nature of each rule and to tune the IDS policy in time.

The last column Conclusion in Table 2 indicates whether this alert is a true positive or a false positive and is a target value. All the other information used by analysts such as src alertName and rawdata are independent variables from which the conclusion is drawn.

In one application a user may use any variables as a target value as long as she wants to discovery how the other variables correlate with it. She may put the target variable as the last column in the data file. For example if conclusion is chosen to be target variables such as a current target value is Application exploit dst src and alertName may be chosen to be independent variables. Therefore a user may want to know what kind of alert from where to where always or most of time leads to an application exploit alert. Alternatively if the user chooses src as a target value and alertName and time as independent variables the user may want to know what type of alerts at what time would always come from that src. 

In this illustrative example load button may be an interface to load data for processing in accordance with one or more aspects of the present disclosure. Reference element is the cluster threshold used to choose variables for processing. The cluster threshold input may be an option for a user. In one example the cluster threshold may correlate to step from . With respect to reference element the combination depth i.e. the cardinality of left hand set used in pattern searching for processing of the clusters may be set. The combination depth is a criteria used by heuristic algorithm in deciding the recursive function depth. In one example this reference element may correlate to steps and or from . With respect to reference element the target value used in the pattern may be set here. In one example a target value of 0 may correlate to false positive and a target value of 1 may correlate to true positive.

Basic data set information such as the data set size number of variables and target variable may be shown in data field area . Reference element may be selected to run the processing after completing load and initial set up. Reference element may be a button to update the input parameters so that when the Run button is selected new result are outputted. During and after processing a run time log data field may be shown. Reference element shows a data field of clustering features for all variables used in the data set. In this illustrative example conclusion 9 may indicate that there are nine categories under variable conclusion IDS Testing False positive Application Reconnaissance Access auth Virus Researching Policy violation and Security system. 

Reference element shows a data field of currently selected variables that are used for pattern searching. In the illustrative example provided the currently selected variables may be specified by alertName or may be selected by a user such as an analyst with an input device activating a cursor on a computing device. The selected variables in data field may be selected independent variables by a user. Reference element shows that data field displays patterns with a percentage in excess of 60 . As should be understood by those skilled in the art other percentages than 60 may be utilized and the present disclosure is not so limited to the examples provided herein.

Reference element displays an output window of patterns of the security data that meet the greater than 60 setting. Within output window patterns may be found in the format of variable1 variable2 . . . Target 0 1 percentage and total count. For example the output shown as reference element indicates that for all 28 the total count shown URL Data etc passwd alerts e.g. the alertName from src 171.161.224.166 82 of them are false positives since a 1 means an index value of the target value being false positives. Thus the alerts URL Data etc passwd comes from 171.161.224.166 are 82 lead to a false positive alert and the total appearance of it is 28. That is 82 of all those 28 cases are false positive alerts.

Reference element illustrates a two way sort button to sort the pattern window based on percentage or percentage and total count. As should be understood by those skilled in the art any of a number of different output sorting methods may be utilized as needed or desired and the present disclosure is not so limited to the examples provided herein. As such these patterns from the surety data sets assist in reducing the number of false positives identified in the security data.

While illustrative systems and methods as described herein embodying various aspects of the present invention are shown it will be understood by those skilled in the art that the invention is not limited to these embodiments. Modifications may be made by those skilled in the art particularly in light of the foregoing teachings. For example each of the elements of the aforementioned embodiments may be utilized alone or in combination or subcombination with elements of the other embodiments. Aspects of the present disclosure may be used as a standard application programming interface API to apply it on various security data. It will also be appreciated and understood that modifications may be made without departing from the true spirit and scope of the present invention. The description is thus to be regarded as illustrative instead of restrictive on the present invention.

