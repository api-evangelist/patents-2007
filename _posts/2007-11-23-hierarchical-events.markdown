---

title: Hierarchical events
abstract: Systems and methods for the organization of hierarchical events are disclosed. A parent event in a first calendar application workspace classifies a hierarchy of events. A child event child event corresponds to a hierarchy of events. Identification of the parent event and a new child event results in the display of the new child event in a second calendar application workspace, the new child event being a scheduled event in the hierarchy of events that does not indicate a calendaring conflict with the parent event. A collaborative organization environment for discussion concerning the new child event may be provided.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08578301&OS=08578301&RS=08578301
owner: Skadool, Inc.
number: 08578301
owner_city: Los Gatos
owner_country: US
publication_date: 20071123
---
This application claims the priority benefit of U.S. provisional patent application No. 60 867 028 filed Nov. 22 2006 and entitled Hierarchical Events and U.S. provisional patent application No. 60 867 023 filed Nov. 22 2006 and entitled Virtual Forms. The disclosure of each of the aforementioned applications is incorporated herein by reference.

The present invention generally relates to calendaring and scheduling applications. More specifically the present invention relates to facilitating the calendaring and scheduling of hierarchical events.

Events may be hierarchical in nature. For example a business trip may constitute an event. On this business trip an individual may visit several customers. Each customer visit may also be considered an event. One or more of the customer visits may include multiple meetings that may constitute even more events. In the example shown in the business trip event includes customer visit events the customer visit events include individual meeting events . The example illustrated in exhibits a hierarchy of events that is three levels deep. While is for a hierarchy three levels deep other hierarchies exist with greater or fewer levels.

Regardless of the particular depth and detail of any given hierarchy each event in a particular hierarchy includes a parent child relationship. For example in the business trip of a customer visit is a child of the business trip event . The same customer visit however is also the parent of a meeting with a particular person affiliated with that customer and .

Hierarchical relationships are not effectively managed by existing calendaring or organizer systems. In Microsoft Outlook as shown with respect to the business trip of an event that has a hierarchical relationship to other events is handled by overlapping those individual events on the same calendar. This overlap creates the false appearance of conflicting events. As illustrated in such overlap may confuse prior art calendaring systems into believing that a conflict exists.

For example if a user has a business trip the user would reserve their time as busy for that trip. This reservation serves as an indication that the user is not available for other events during the trip s scheduled time. While the user is on that trip however the user may be free for events associated with that trip even though their calendar shows them as busy. As such the user must proactively recognize that the overlapping of events does not constitute a true scheduling conflict. In a complex hierarchy of events keeping track of true or false conflicts may be time consuming confusing and subject to error. Other calendar systems such as Apple iCal Google Yahoo Zimbra Trumba and Meeting Maker have similar limitations as Microsoft Outlook with respect to scheduling hierarchical events.

Alternatively separate calendars may be created for specific parent type events e.g. a vacation to create containers for events. For example one calendar may represent a vacation and have several child events scheduled and contained therein. A business trip may represent another calendar with individual meeting events scheduled and contained therein. This container method is likewise difficult to manage. A calendar created as a container for one set of events e.g. a personal calendar does not provide a way to reserve time on other calendars e.g. a business calendar . This separate calendar methodology may leave the impression that the user is available for other events such as business meetings when in fact the user is out of the office on vacation. The user in this methodology is thereby forced to create an event corresponding to this vacation calendar on their other calendars it they want to reserve time for the vacation.

In prior art scheduling applications the use of time reservations for events helps to determine the availability of an individual for other events. In systems such as Microsoft Outlook three types of time reservations may be supported for events Busy Tentative and Free. Busy indicates that the individual should be shown as not available for other events during the event s scheduled time. Tentative indicates that the individual should be shown as tentatively available for other events during the event s scheduled time. Free indicates that the individual should be shown as available during the event s scheduled time.

Since there may be multiple simultaneous events the availability of an individual at a given time is determined by the time reservations of all the events scheduled at that time. If there are any events scheduled at that time with a time reservation of busy then the individual is assumed to not be available for a new event at that time. If there are no events at that time with a time reservation of busy but there exists events at that time with a time reservation of tentative then the individual is assumed to be tentatively available at that time. If there are no events at that time with a time reservation of busy or tentative then the individual is determined to be free at that time. The use of this method in the prior art calendaring and scheduling systems is inadequate when for expressing the availability of an individual for events within a hierarchy. For example if the user creates a business trip event on their calendar with a time reservation of Busy then the calendar does not show the individual as available for meetings during that business trip.

There is therefore a need in the art for managing and navigating the hierarchical relationship of events in such a way that it may he applied to existing calendar systems.

In a first claimed embodiment of the present invention a system for organization of hierarchical events is disclosed. The system includes a first and second computing sub system. The first computing sub system generates a parent event classifying a hierarchy of events. The first computing sub system is associated with a planner of the parent event. The second computing sub system generates a new child event corresponding to the hierarchy of events. The second computing sub system is associated with an invitee to at least a portion of the parent event. The system further includes a server configured to generate information related to the display of the new child event in a calendar application displayed at the computing sub systems.

A second claimed embodiment of the present invention concerns a method for organization of hierarchical events. The method includes receiving an identification of a parent event in a first calendar application workspace. The parent event classifies a hierarchy of events. An identification of a new child event is also received. The new child event corresponds to the hierarchy of events. The new child event is displayed in a second calendar application workspace. The new child event is a scheduled event in the hierarchy of events and does not indicate a calendaring conflict with the parent event.

In another embodiment of the aforementioned method hosting of a collaborative organization environment is provided. The organization environment allows for a collaborative space for discussing the new child event.

A third claimed embodiment of the present invention provides for a computer readable storage medium. Embodied on the medium is a program. The program is executable by a processor to perform a method for organization of hierarchical events. The method executed by the processor includes receiving an identification of a parent event in a first calendar application workspace. The parent event classifies a hierarchy of events. An identification of a new child event is also received. The new child event corresponds to the hierarchy of events. The new child event is displayed in a second calendar application workspace. The new child event is a scheduled event in the hierarchy of events and does not indicate a calendaring conflict with the parent event.

In another embodiment of the aforementioned computer readable storage medium and associated method hosting of a collaborative organization environment is provided. The organization environment allows for a collaborative space for discussing the new child event.

A calendar application may be a desktop application launched from a personal computer e.g. laptops and or desktop or an enterprise calendaring solution hosted by enterprise server . A calendar application may include an Internet based application executed in an Internet browser the application accessed via a website corresponding to a hosted service e.g. at server . Such a web based application may operate utilizing the likes of Ajax or Flash although embodiments of the present invention are not limited by a particular type of software application or the hosting of the same.

The functionality offered by the present invention may be practiced without particular limitations as to hardware device e.g. desktop versus laptop versus PDA software e.g. calendar application or operating system or means for connecting to communications network . For example one device e.g. PDA may connect to communications network using a wireless connection and an IEEE 802.x protocol. Laptops and on the other hand may connect to communications network utilizing a cable modem and dial up connection respectively. Desktop computer may connect utilizing a digital subscriber line DSL and cellular device may communicate over the communications network using the General Packet Radio Service GPRS and available radio spectrum.

Communications network may include various communications facilities and mediums e.g. telephony wireless satellite cable or optic . These facilities and mediums may be provided by telecommunications companies and Internet Service Providers. Communications network may be a geographically widespread network e.g. a Wide Area Network WAN like the Internet that depends upon the aforementioned communications facilities to link various network segments. The communications network may also be or be composed of smaller linked communications networks such as Local Area Networks LANs . A LAN may include a group of computers and other devices dispersed over a relatively limited area and connected by a variety of broadband communications links. LANs may take on a variety of configurations including server client peer to peer peer groups or a combination of the same. Communications network may also be a closed proprietary network.

The various computing devices may not be immediately connected to the communications network . For example and as shown with respect to desktop computer an intermediate computing device such as a centralized or enterprise server may intermediately couple the computing device to the network. Various ancillary applications e.g. enterprise applications or firewalls may be implemented on the enterprise server to allow for or enhance certain end user functionality. Similarly PDA maybe coupled to the communications network via a Wireless Access Protocol WAP gateway. Other devices such as Personal Client Servers PCS or Smart Device Servers SDS may be implemented subject to the particular nature of a device in the network and or a particular network connection. Similarly any variety of access points and routers may be implemented to provide communicative coupling of the aforementioned devices and communications network .

A communicative coupling to the communications network may not be immediately present. A device may temporarily lack a connection direct intermediate or otherwise to the communications network . For example a user may be using their laptop on an airplane which may lack the means to connect to a communications network .

Calendar application includes calendar application workspace where menus events and other information may be displayed and selected with respect to the actual calendar grid . Calendar grid may in some instances constitute a workspace in that it offers selection editing and other scheduling functionality. The layout of calendar application is exemplary. Different graphic layouts may be implemented while maintaining the functionality associated with various elements as discussed herein. In that regard not all functional elements are required for the operation of calendar application .

Main calendar grid of is presently in a month view as governed by view selection tool bar as discussed in more detail below. Main calendar grid displays various events . An event may in some situations constitute a parent event. Event may also constitute a child event. Certain events may be siblings of one another i.e. part of a common hierarchy .

A user may click or otherwise select an event to open edit work on or otherwise view information concerning that particular event . For example selecting a particular event may open a zoom popup box that displays more details for that event . Various modes of workspace management including a popup box are disclosed in U.S. provisional patent application No. 60 867 023. In the case that an event is a parent event selecting the parent event and launching a popup box may allow for a user to add information e.g. a child event indicia of these selections may be received by a user computing device and or at a central server. In no events are currently selected.

Included in the calendar application are top level tabs . Top level tabs allow a user to switch between different applications within the overall calendar application program. For example top level tabs as depicted in user to switch between a calendar application currently selected and an address book . Other applications maybe available including a note pad task list journal e mail and so forth.

Calendar application also includes a header row . Header row includes a new event button that allows a user to create a new event. Header row also includes a view selection tool bar . View selection fool bar allows a user to navigate between different views of a calendar including day five days week month and year. As shown in the month view is selected from the view selection tool bar . The view selection tool bar of also includes a map button as discussed in further detail below.

A month identifier also appears in the header row . The month identifier identifies the present month view as shown in the calendar grid . Month identifier may depending on a particular view selection reflect more less or additional information such as week day year and so forth. Bracketing the month identifier are navigation buttons that allow a user of the calendar application to navigate back and forth between different date ranges of the calendar grid . For example and with respect to month view as shown in the navigation buttons allow a user to move from July 2007 to June 2007 and August 2007 using the outer double arrow buttons. The user may move a week i.e. a row at a time using the inner single arrow buttons.

Calendar application of in the left most calendar application workspace includes a navigation calendar . Manipulation of navigation calendar allows a user to navigate through different months using one click functionality as an alternative to navigation buttons . The today link located below the navigation calendar may be selected in order to navigate the calendar grid to the corresponding date using one click functionality.

The event dashboard summarizes data associated with a selected event arid may use other graphic interface tools e.g. pop up windows and balloons to access and edit details of the data for the selected event e.g. an event . The event dashboard and other interface tools including those disclosed in U.S. provisional patent application No. 60 867 023 allow a user to view and edit a large amount of data associated with an object or feature directly from the main calendar grid of the calendar application . Like all aspects of the present invention the layout of information within the event dashboard is exemplary various layouts may be implemented. Further not all elements described herein are necessarily required for the operation of event dashboard .

Event dashboard includes an indication of the event title in the header of the dashboard . Event dashboard further includes a button row which in includes a done button delete button and cancel button The done button operates to close the selected event and save any edits whereas the delete button will delete the event . The cancel button will cancel any edits e.g. additions deletions etc. and close the event .

The dashboard also includes an accordion section that allows for individual sections to be expanded and retracted. In the accordion section of the dashboard a user can single click on any particular section causing the selected section to expand while others collapse. When an event is first selected a default accordion section is automatically expanded. As shown in an event summary section is currently expanded. The event summary section identifies the selected event and where it is occurring if such information was previously provided . The summary section further provides a start and end time as well as a status designator e.g. busy out of office or free . Options with respect to repetition of the event and reminders also appear in the summary section as does a designator as to what calendar the event appears on e.g. a personal calendar versus a business calendar .

Also included within the accordion section of the dashboard is an invitations module which is presently collapsed in favor of the aforementioned summary section . Through the invitations module various users participants may be invited to participate in the event . Participation may also involve being able to assist in the planning of the event through a collaborative organization environment which may be a part of or otherwise generated by discussion module as further described below. Invitations may be extended with respect to the parent event or any number of child events. Extended invitations may differ between the parent and child or any sibling events therein. Information concerning to whom invitations were extended the status of acceptance or denial of an invitation any message accompanying an invitation and the means utilized to invite a participant e.g. e mail a native messaging system as described below SMS or instant messenger may also be indicated by the invitation module .

The dashboard of the calendar application also provides for a discussion module . The discussion module allows for users to view and participate in event discussions which may take place within a calendar workspace or result in the launch of another window displaying a web page or other collaborative environment. Tine discussion module may provide for feedback only among invited participants to a particular event or for any person with access to the calendar information the parent event or a related sibling event. Discussions may occur through one or more of an instant messenger application native messaging application e.g. through a messaging service akin to electronic mail but otherwise provided by an entity hosting the discussion board and or service or a message board. Discussions may be in the moment or a history log may be maintained such that users may view a previously concluded or presently inactive discussion. Other information may be provided in or through the discussion module . Examples of functionality include polling blogging linking to other websites photo and video posting and map functionality.

With respect to the aforementioned map functionality a portion of the calendar application workspace may support a concurrent or dedicated map view as may be activated through selection of the map button as initially referenced in the context of . Selection of map functionality may allow for the physical position of events to be viewed in addition to the temporal positions provided by the other views. This map view may be accessed from the workspace in a fashion similar to the time window views by putting a map view on the view selection tool bar .

When map view is selected a navigation calendar may be used to control what events appear on the map. For instance only events scheduled on the selected dates of the navigation calendar may appear on the map. The map view may support features such as zooming and panning to navigate to different regions of the map. In addition a list of events on the selected dates may be displayed next to the map. Selecting an event may cause the map to automatically navigate so that the selected event is in the view. Events may also be selected directly on the map. Like the time window views selecting an event may cause an event form or dashboard to appear giving access to view and edit event details such as scheduled time.

Additionally the event may be selected from the calendar of one of the time window views. An event form may appear in the left column giving access to additional data about the event. While this form is displayed the user may select map view from the workspace and see the event on the map. The form of the left column may still remain. In the view giving access to the detailed event data while viewing the event on the map. Other events on the same date as the selected event may also appear in the map view. The map feature may be implemented using application programming interfaces APIs offered by providers of map services e.g. Google Maps Yahoo Maps or Microsoft Live or as a separate third party application.

Information related to events and accommodations may he provided by the discussion module . For example the discussion module may operate to launch control or otherwise link to a website or other collaborative space including addresses and phone numbers of accommodations as well as services and attractions such as restaurants museums night clubs and other points of interest. Driving directions or public transportation information may also be provided. This collaborative space may also be shown directly on the dashboard by expanding the dashboard to the right to cover or partially cover the calendar grid.

Information provided by third parties may be integrated with the discussion module such that information about local services and attractions may be easily searched located and scheduled. Discussion module may provide for integrated reservation services e.g. through Open Table for restaurants or otherwise provide information to secure a reservation through normal human interactions e.g. a phone call to a restaurant . Various access permissions may be provided to invitees participants or other users of the service e.g. user names and passwords or keyed URLs and particularly any collaborative space generated or controlled by the discussion module . Similar securities may exist through the course of the present invention with respect to access to information editing or introduction of information.

Also included within the accordion section of the dashboard is an event calendar module that identifies the actual events that may have been calendared for a particular event . The events identified may he the child events of the selected event. The event calendar module is discussed in additional detail with respect to below.

Certain sections or modules of the dashboard too may include an expansion tab. By clicking or selecting the tab the dashboard may expand to give a user the ability to edit certain details concerning an event . For example as shown in the event summary section has been expanded by clicking on the scheduling tab . Through expansion of specifically the event summary section a user may now view and edit start and end times for an event . Through selection of the aforementioned scheduling tab the dashboard may expand to the right to give a user control of the scheduled time and time reservation for a corresponding event. This expanded dashboard is shown in where user control of the scheduled time and time reservation is provided in the form of a series of drop down menus. The user may identify start time and end time as well as duration and reservation status e.g. busy tentative free . This expanded section i.e. workspace may be collapsed by clicking or selecting the collapse reduction icon . Alternatively a user may also click or select the scheduling tab or select any other tab or module in the accordion section of the dashboard .

Creation of a new event may be similar to selecting an event on calendar grid of except that the user may instead select the New Event button . Like selecting an event a dashboard like dashboard as shown in may appear after the user selects the New Event button . The user may click on tabs like those on dashboard to expand the dashboard to edit specific information about the event such as scheduled time. Alternatively to create a new event the user may select a date on calendar grid like that of by clicking on a date. The selected date may show a New Event link that when selected opens a dashboard like dashboard of that gives the user access to edit event details associated with the new event.

The calendar grid of as controlled by navigation calendar corresponds in many respects to the calendar grid of as described above. For example the calendar grid may be controlled by a header row with buttons for navigating to different dates or for changing the view. This header row also contains done button delete button and cancel button of the dashboard. The other modules of the accordion section are similar to those of as discussed above.

The grid as illustrated in differs from however in that the grid illustrates the child events for a selected event . The Trip to San Francisco as selected in the context of has resulted in the display of a new calendar application workspace that reflects the child events for the aforementioned parent event i.e. the trip to San Francisco . As reflected in a total of five child events are displayed. Each of the five events are children of the parent the trip to San Francisco and are part of a hierarchy. A conceptual discussion of event hierarchies may be found with respect to . Each child event may be referred to as a sibling of another child event in that they have the same parent.

In the grid is shown in week view. As in the view selection tool bar in allows the user to change the calendar grid to other views. Since only sibling events at the current level of the hierarchy are shown on calendar grid only the child events of the selected event of i.e. Trip to San Francisco appear in each of these views. If in the user selects the map link of the view selection tool bar the user will see only the child events of the Trip to San Francisco on the map. As discussed in the context of and in map view the user may use navigation calendar to limit which day s events are displayed on the map.

New child events may be created on calendar grid of by clicking or dragging the mouse on the grid over the desired scheduled time for the event. As a result an event dashboard would appear giving the user the ability to edit additional information about the new sibling event Selecting the Done button of the event dashboard would save the edits and result in the creation of the new event.

The aforementioned link may be part of a form that appears when an event is selected such as an event dashboard. Events displayed as a result of the initial selection may themselves he selected thereby causing the form to be replaced or covered with the form for the newly selected event. This form too may include links providing for navigation of the hierarchy of events.

An event path may be displayed to allow a user to navigate through a hierarchy. For example if the calendar workspace is filled with exemplary calendar ..from the displayed path would be Top Calendar Event Event . Event ... Each of the calendars events in the path may serve as link to navigate back up or down to a given layer in the hierarchy. When one of the links is selected the system may navigate to the level in the event hierarchy where the corresponding event appears selected or no event appears selected if at the top of the hierarchy .

In another embodiment an event page may be opened for a selected event. This page may be opened for example by double clicking on an event. Alternatively a selected event on a calendar may have a page level tab or a top level tab like the top level tabs shown in that when selected exposes the event page for that selected event. While any number of methods may be used to open an event page associated with an event this page may have alternative views available for selection. A set of tabs on the event page may allow the user to select what is displayed on the event page. For example these tabs may cause the event page to be updated with the corresponding view. These tabs could appear in the left column of the event page or anywhere on the event page. Some examples of possible views may include event information event conversations map view event photos and event calendar.

Selecting the event calendar tab may cause the event page to be loaded with a calendar workspace that may be filled with that event s children events. These events may be displayed in a calendar application grid. A navigation calendar may also appear to provide a way to control what set of dates are displayed in the workspace. The events on this event calendar may also have event pages that may be opened in a similar manner with their own calendar tabs thus enabling a deeper hierarchy of events. As in the above example the event path may be displayed to provide links to navigate back up the hierarchy. For example selecting a link may cause the application to display the event page of the corresponding event.

A new window too may open the event page for a selected event or the calendar of a selected event. By opening a new window navigating back up to a given layer of the hierarchy may occur by selecting the appropriate open window to bring it to the foreground if the windows overlap. Windows in some embodiments may be tiled. Any combination of the above methods or use of other methods for navigating through a hierarchy of events is within the scope of the present invention.

In one embodiment a single column within the workspace corresponding with a day may be used for both events and time reservations. In this case each region of the column corresponding to a region in time may have the entire width of the column filled with shading to indicate the time reservation for that region of time. For instance the area could be filled with semi transparent grey for busy semi transparent yellow for tentative or not filled at all for free. The events may appear on top of the shading and may not fill the entire width of the column so that the time reservation underneath them can be seen. This is illustrated in for example which shows events that are narrower than the day columns. Time reservations of busy are shown as semi transparent background shading corresponding to the scheduled time of the events. These reservations can be seen to the right of the events in the area of the day column not covered by the events.

The organization of events in a hierarchy aids the user of the calendar to better express their availability for a given activity. For example in one embodiment of a calendar system supporting the presently described hierarchical events scheduling system the availability of an individual that is reflected on the calendar workspace may be derived from the time reservations of all events for that individual. This derivation may be based on hierarchical relationships relative to the current level of the hierarchy displayed in the workspace.

For example a vacation event at the top level of the hierarchy may reserve time as busy for that vacation. When the user navigates to the calendar associated with the vacation event however the time reservation associated with that vacation event may be shown as free. In such an embodiment at the top level calendar the user may create the vacation event to block time so no events are scheduled at this level of the event hierarchy while they are on vacation. In the vacation calendar however this time reservation will be removed shown as free and the user may be free to schedule their vacation events. The time reservations associated with the children of the vacation may appear in the vacation calendar but not the time reservation the vacation event has on the vacation s parent calendar. This is illustrated for example in where the time reservation for the parent event i.e. Trip to San Francisco is not shown. For the same reason the time reservations of all the ancestors i.e. ancestor events of a given calendar may not be displayed in that calendar.

A given system implementing the presently disclosed hierarchical events may choose to display the time reservations for other offspring of the calendar s ancestors as these might be of interest within a given calendar. For instance one might have a conference call event scheduled with their manager while on a business trip. The business trip event might be on the same calendar as the conference call. It may be useful to display the time reservation for that conference call on the business trip s calendar so that customer meetings are not scheduled at the same time.

There are additional ways a given implementation may choose to display time reservations in the practice of the presently disclosed invention. For example a user who has a business trip on their top level calendar with its own associated calendar may choose to not create a busy time reservation on their main calendar for that business trip. The user may make this choice as to allow conference calls to be scheduled when they are free during that business trip. Any time reservations for the children of that business trip may propagate up the hierarchy to prevent these conference calls from being scheduled while they are traveling or holding meetings during that business trip.

To handle these aforementioned cases related to time reservations a scheduling system may choose to implement a method for displaying the availability of an individual in the calendar workspace. Through such a method the individual s availability at a given time is determined by evaluating the time reservations for all of that individual s events at all levels of the hierarchy that are scheduled at the same time. The exception to this method may be that the time reservations for the parent and other ancestors of the calendar displayed in the workspace are ignored.

To display that individual s availability on the calendar workspace the time reservation of all other events which includes the events displayed on the workspace their descendants and all other offspring of the ancestors but not including the ancestors could have their time reservations overlaid onto the calendar workspace. Such overlay may occur with some degree of semi transparency. As a result the darkness and color help to determine not only if the individual is available but also if they are overbooked at a given time and the severity of the same e.g. darker shading being equated with a more extensive overbooking .

This same approach would easily extend when displaying the collective availability of a group of individuals or resources. This approach becomes increasingly powerful when these individuals or resources are invited to the same hierarchical event. As a result these individuals will share a common event calendar within their personal event hierarchies which can serve to reserve time on all of their personal calendars for the purpose of future scheduling of child events of the event to which they are invited.

Some embodiments may not display any time reservations for events that are not contained within the calendar that is shown in the workspace to keep the system simple. Optionally some embodiments may show all time outside the parent s start and end time as not available. The system may enforce the start and end times of events on a calendar so that they fall within the start and end time bounds of the parent event. This may be done by not allowing the child events to be scheduled outside the bounds of the parent or by appropriately modifying the bounds of the parent event to accommodate the schedule times of its child events.

In some instances an event may be a child of one event and or a parent of many events. An event may also have multiple parents. An event containing children may have a calendar associated with the event and that contains these children. The event may he considered to be the container for other events. However it may be useful to present event hierarchy to the end user using the concept of a calendar as users are familiar with calendars acting as containers of events.

The newly entered child event is then displayed in step in a fashion similar to that illustrated with respect to in that no scheduling conflict is shown between the parent and child as those are both a part of the same event hierarchy. Optional step provides for the hosting and occurrence of a discussion in a collaborate environment. Such an environment may be accessed or generated through the likes of a discussion module as referenced in the context of .

While the present invention has been described in connection with a series of preferred embodiment these descriptions are not intended to limit the scope of the invention to the particular forms set forth herein. To the contrary the present descriptions are intended to cover such alternatives modifications and equivalents as may be included within the spirit and scope of the invention as defined by the appended claims and otherwise appreciated by one of ordinary skill in the art.

