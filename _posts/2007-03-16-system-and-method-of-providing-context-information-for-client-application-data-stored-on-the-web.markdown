---

title: System and method of providing context information for client application data stored on the web
abstract: An improved system and method for supporting web system services is provided for storing data and context of client applications on the web. A client application may include a web system services interface for invoking web system services to support web applications to operate over the web using different devices that may store data and context of web applications as a web application document onto a web server. A web application document may be represented by components that may include view information, content, and context information. The application may also include a web system services user interface for providing a graphical user interface for a user to invoke web system services that may include a new document system service, a store document system service, and a restore document system service. A schema for context scope may be implemented for collecting context information relevant to the web application document.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08046436&OS=08046436&RS=08046436
owner: Yahoo! Inc.
number: 08046436
owner_city: Sunnyvale
owner_country: US
publication_date: 20070316
---
The present invention is related to the following United States patent application filed concurrently herewith and incorporated herein in its entirety 

 System and Method for Providing Web System Services for Storing Data and Context of Client Applications on the Web U.S. patent application Ser. No. 11 724 719 

 System and Method of Storing Data and Context of Client Applications on the Web U.S. patent application Ser. No. 11 724 730 

 System and Method of Restoring Data and Context of Client Applications Stored on the Web U.S. patent application Ser. No. 11 724 732 

 System and Method of Providing a User Interface for Client Applications to Store Data and Context Information on the Web U.S. patent application Ser. No. 11 724 718 and

 System and Method of Serving Advertisements for Web Applications U.S. patent application Ser. No. 11 724 717.

The invention relates generally to computer systems and more particularly to an improved system and method for providing web system services for storing data and context of client applications on the web.

Web users are increasingly conducting their personal and professional lives online by using a variety of different applications and devices to provide functionality for communications scheduling activities searching and retrieving information creating and sharing information and content and many other applications. A variety of applications and information formats like wikis blogs video and audio editors and personal social networking pages provide increasing capability of users to create and share information. Users may create any number of documents that may be shared by reference to a network location or may be sent as an encapsulated document to another user via email. For example users might move from creating daily blog posts or myspace profiles to creating sales presentations business reports multimedia entertainment works non fiction works or electronic books containing multiple media items of varying formats.

Unfortunately there fails to be any consistent set of services supporting an arbitrary set of applications that may be used on the web and that may store content on the web accessible by any of the applications. An online user may be able to receive news headlines from RSS feeds but may not be able to store the headline news stories on the web and later access the text messages using a text to speech application to listen to the news headlines from a mobile device. Or an online user may be able to send and receive email attachments using client server based email systems connected over the web but may not be able to access the content of the attachments using a text editor executing on a handheld device. Similarly an online user may receive a video conferencing broadcast over the web but may not be able to store the video conference on the web and later access the video conference from storage on the web using a streaming media application on an IP video phone.

Although there may be a variety of applications commercially available for creating and storing a web page on a client computer or creating and storing a web page on a web page server there fails to be a data and storage model for a client to create a content file on a client device and to store the content file on the web where it may be accessible by a variety of web based applications executing on different devices. HTML style web pages for instance fail to support inclusion of such varied forms of context that may be accessible by a variety of web based applications. What is needed is a system and method that may implement a data and storage model that may accommodate an otherwise varied set of document types applications and device configurations so that an online user may seamlessly store and retrieve content ubiquitously using any device connected to the web.

Briefly the present invention may provide a system and method for providing web system services. In various embodiments a client having an application may be operably coupled by a network to one or more servers such as an identity authentication server a web application server and or a web server. An application such as a web browser may execute on the client computer and may include functionality for providing an interface such as a web system services interface for invoking web system services to support web applications to operate over the web using different devices that may store data and context of web applications as a web application document onto a web server. A web application document may be represented by components that may include view information content and context information. The application may also include a web system services UI for providing a graphical user interface for a user to invoke web system services a context information monitor for monitoring and collecting context information to be incorporated into a web application document a content parser for parsing content from an application for inclusion in a web application document and a content loader for loading content from a web application document saved on the web into the application operating on the client.

The identity authentication server may provide functionality as a web service for authenticating the identity of a user associated with a web application server. The identity authentication server may be operably coupled to identity information storage which may store user information including for example a user identification a password an email address and so forth. The web application server may include web system services for supporting web applications to store data and context as a web application document on operably coupled storage. For instance the web system services may include new document system service a store document system service and a restore document system service. The new document system service may provide functionality for creating a web application document including content and context for use by many different web applications including the web application used to input the content operating on different devices. The store document system service may provide functionality for storing a web application document on a web server accessible by a user connected to the web server by any number of different devices. The restore document system service may provide functionality for restoring the content and context of a web application document for a web application operating on different devices.

The present invention may also provide a graphical user interface for invoking a web system service for storing client application data and context as a web application document on a web server. An implementation of a user interface menu web system services interface code and associated programmatic functionality may be dynamically loaded when a client may request authentication of a user. In various embodiments part or all of the executable code may be loaded from client storage or part or all of the executable code may be loaded in various other embodiments from a web application server via the network. A client application may request a web system service to be performed on a web application document using the implementation of the user interface menu web system services interface code and associated programmatic functionality. For example an application on a client device such as a web browser may display a drop down menu of web system service operations that may be performed on web application documents. Such web system service operations may include New Open Close Save Save As Restore and so forth. A web browser may display a drop down menu of web system service operations that may be performed on web application documents. Such web system service operations may include New Open Close Save Save As Restore and so forth.

A user may request web system services to be performed to create and then to store a web application document on a web application server. To do so a user may create a new web application document in the client application by selecting New in the web application menu to invoke web system services interface code that may create a new web application document. The user may then add content to the document such as an image or text and then save the web application document by selecting Save in the web application menu to save the web application document on the web. In an implementation the web application document may be transmitted though a network to a web application server which may write the web application document into a named folder or section of a hard drive. If a user may wish to review a web application document or to create a new one a conventional web server may be accessed in an embodiment by a client.

Or an application such as a web browser may be executing on a client that may display the contents of a web page retrieved from a web server. By selecting Save in the drop down menu the user may request that the content in the web page be stored in a web application document on the web. A Save screen may also display selectable options for a user to specify parameters of the information to be saved in a web application document. For instance parameters may be specified to indicate whether the view information should be stored into the web application document whether the content of a client application file should be stored into the web application document and whether the context information related to a client application file should be stored into the web application document. A context scope declaration schema may be provided for collecting context information and the context scope declaration may be represented as a logical schema of elements including a field of view a time relevance criteria entries to return and who may be associated with the relevant information. Furthermore the amount of context information for elements of the context information schema may be selectable for customizing the context information preserved in the web application document.

A user may also restore a web application document in an application operating on a client by selecting Restore in the web application menu to invoke a web system service interface for restoring the web application document. The web system service may then be performed on the client by requesting the content of a web application document to be loaded from the web into the application using the context stored in the web application document. After the content of the web application document may be loaded in the application the content may be modified by the application.

Advantageously a user may select the amount of context information to store about the web application document as well as specify keywords to be associated with the web application document. Importantly the present invention implements a data and storage model that may accommodate an otherwise varied set of document types and configurations by providing consistent services across an arbitrary set of applications. Other advantages will become apparent from the following detailed description when taken in conjunction with the drawings in which 

The invention may be described in the general context of computer executable instructions such as program modules being executed by a computer. Generally program modules include routines programs objects components data structures and so forth which perform particular tasks or implement particular abstract data types. The invention may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in local and or remote computer storage media including memory storage devices.

With reference to an exemplary system for implementing the invention may include a general purpose computer system . Components of the computer system may include but are not limited to a CPU or central processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures. By way of example and not limitation such architectures include Industry Standard Architecture ISA bus Micro Channel Architecture MCA bus Enhanced ISA EISA bus Video Electronics Standards Association VESA local bus and Peripheral Component Interconnect PCI bus also known as Mezzanine bus.

The computer system may include a variety of computer readable media. Computer readable media can be any available media that can be accessed by the computer system and includes both volatile and nonvolatile media. For example computer readable media may include volatile and nonvolatile computer storage media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can accessed by the computer system . Communication media may include computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. For instance communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

The system memory includes computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer system such as during start up is typically stored in ROM . Additionally RAM may contain operating system application programs other executable code and program data . RAM typically contains data and or program modules that are immediately accessible to and or presently being operated on by CPU .

The computer system may also include other removable non removable volatile nonvolatile computer storage media. By way of example only illustrates a hard disk drive that reads from or writes to non removable nonvolatile magnetic media and storage device that may be an optical disk drive or a magnetic disk drive that reads from or writes to a removable a nonvolatile storage medium such as an optical disk or magnetic disk. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary computer system include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. The hard disk drive and the storage device may be typically connected to the system bus through an interface such as storage interface .

The drives and their associated computer storage media discussed above and illustrated in provide storage of computer readable instructions executable code data structures program modules and other data for the computer system . In for example hard disk drive is illustrated as storing operating system application programs other executable code and program data . A user may enter commands and information into the computer system through an input device such as a keyboard and pointing device commonly referred to as mouse trackball or touch pad tablet electronic digitizer or a microphone. Other input devices may include a joystick game pad satellite dish scanner and so forth. These and other input devices are often connected to CPU through an input interface that is coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A display or other type of video device may also be connected to the system bus via an interface such as a video interface . In addition an output device such as speakers or a printer may be connected to the system bus through an output interface or the like computers.

The computer system may operate in a networked environment using a network to one or more remote computers such as a remote computer . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node and typically includes many or all of the elements described above relative to the computer system . The network depicted in may include a local area network LAN a wide area network WAN or other type of network. Such networking environments are commonplace in offices enterprise wide computer networks intranets and the Internet. In a networked environment executable code and application programs may be stored in the remote computer. By way of example and not limitation illustrates remote executable code as residing on remote computer . It will be appreciated that the network connections shown are exemplary and other means of establishing a communications link between the computers may be used.

The present invention is generally directed towards a system and method for providing web system services for supporting web applications to operate over the web using different devices that may store data and context of web applications as a web application document onto web servers. As used herein a web system service may mean to perform an operation on a web application document that may include data and context stored on the web for creating storing or restoring a web application document. In addition to storing content for users on the web enhanced context and related information may be saved along with the content. Accordingly a user may select the amount of context information to store about the web application document as well as specify keywords to be associated with the web application document. In general context may mean information related to the web application document that may be either inferred or declared. Advantageously the scope of context may be varied by a user so that either more or less contextual information of a given type may be saved as part of the web application document.

As will be seen the present invention may implement a data and storage model that may accommodate an otherwise varied set of document types and configurations by providing consistent services across an arbitrary set of applications. Moreover information stored using the web systems services may be made generally available for retrieval by web applications other than those that stored the information. As will be understood the various block diagrams flow charts and scenarios described herein are only examples and there are many other scenarios to which the present invention will apply.

Turning to of the drawings there is shown a block diagram generally representing an exemplary architecture of system components for supporting web applications to operate over the web using different devices that may store data and context of web applications as a web application document onto web servers. Those skilled in the art will appreciate that the functionality implemented within the blocks illustrated in the diagram may be implemented as separate components or the functionality of several or all of the blocks may be implemented within a single component. For example the functionality for the identity authentication server may be included in the web application server . Or the functionality of the content loader may be may be implemented as a separate component from the application . Moreover those skilled in the art will appreciate that the functionality implemented within the blocks illustrated in the diagram may be executed on a single computer or distributed across a plurality of computers for execution.

In various embodiments a client computer may be operably coupled by a network to one or more servers such as identity authentication server web application server and or web server . The client computer may be a computer such as computer system of . The network may be any type of network such as a local area network LAN a wide area network WAN or other type of network. An application such as a web browser may execute on the client computer and may include functionality for providing an interface such as web system services interface for invoking web system services to support web applications to operate over the web using different devices that may store data and context of web applications as a web application document onto a web server. The application may also include a web system services UI for providing a graphical user interface for a user to invoke web system services a context information monitor for monitoring and collecting context information to be incorporated into a web application document a content parser for parsing content from an application for inclusion in a web application document and a content loader for loading content from a web application document saved on the web into the application operating on the client . The application the web system services UI the context information monitor the content parser and the content loader may be any type of interpreted or executable software code such as a kernel component an application program a script a linked library executable controls an object with methods and so forth. The web system services interface may be any implementation of application programming interfaces APIs that may invoke web system services. For example functionality for the web system services interface may be implemented on a browser toolbar using client related code of the type commonly used in browser plug ins such as C . Or it may be developed using a combination of technologies such as Javascript that may be executed locally asynchronous access to a server through use of XMLHttpRequest and or a Javascript object available for execution by the web browser. For example there may be a bookmarklet that may include a program such as a JavaScript application that may directly connect from the web page to a database to add user generated metadata and page content.

The identity authentication server may be a computer such as computer system of and may provide functionality as a web service for authenticating the identity of a user associated with a web application server . The identity authentication server may be operably coupled to identity information storage which may store user information including for example a user identification a password an email address and so forth. In an embodiment the functionality of the identity authentication server for authenticating the identity of a user associated with a web application server may be implemented as a component of the web application server rather than implemented as a web service as illustrated in . Moreover the identity authentication server may be directly coupled to the web application server in a configuration instead of operating as a web service accessible via network .

The web application server may include web system services for supporting web applications to store data and context as a web application document on operably coupled storage . The web system services may include new document system service a store document system service and a restore document system service . The new document system service may provide functionality for creating a web application document including content and context for use by many different web applications including the web application used to input the content operating on different devices. The store document system service may provide functionality for storing a web application document on a web server accessible by a user connected to the web server by any number of different devices. The restore document system service may provide functionality for restoring the content and context of a web application document for a web application operating on different devices.

The web application server may also be operably coupled to a web server that may store a web application document on operably coupled storage . A web application document may include view information content and context information . The web server may be accessed in an embodiment by a client to retrieve a web application document or to create a new one. The web server may pass control to the web application server or obtain relevant information from the web application server and transmit the information through a network to an application operating on a client computer .

In general the web system services may implement a data and storage model that may accommodate an otherwise varied set of document types and configurations by providing consistent services across an arbitrary set of applications from office productivity tools including a word processor a spreadsheet application and a presentation builder to creativity programs such as audio or video mixers blogs or site builders. To do so web system services may allow the web to provide primary storage for information rather than client hard drives. In addition to storing content for users on the web enhanced context and related information may be saved along with the content. Furthermore view information may be saved that provides information about the organization structure determining presentation to user such as HTML or Cascading Style Sheet CSS declarations. Information stored using the web systems services Save function may be made generally available for retrieval by web applications other than those that stored the information. Furthermore privacy controls may additionally be implemented for sharing such enriched documents with other users. In addition to saving content context information and view information those skilled in the art will appreciate that one or more instances of content may be captured as well. For example instances of content presented on a dynamic web page such as news may be progressively saved so that users may scan the instances of content to review top news stories of interest.

Returning to executable code may be received at step for invoking a web system service on a web application document. In an embodiment an implementation of a user interface menu web system services interface code and associated programmatic functionality may be dynamically loaded when a client may request authentication of a user. In various embodiments part or all of the executable code may be loaded from client storage or part or all of the executable code may be loaded in various other embodiments from a web application server via the network. An implementation of web system service interface code may include a NewWebAppDoc application programming interface API that may be invoked by an application executing on a client to request a web application document to be created a SaveWebAppDoc API that may be invoked by an application executing on a client to request a web application document to be saved and a RestoreWebAppDoc API that may be invoked by an application executing on a client to request the content of a web application document to be loaded from the web into the application using the context stored in the web application document.

A request may then be sent at step to perform a web system service on a web application document. For example a user may create a new web application document in the client browser by selecting New in the web application menu to invoke an API such as NewWebAppDoc. The user may then add content to the document such as an image or text and then save the web application document by selecting Save in the web application menu to invoke an API such as SaveWebAppDoc to save the web application document on the web. In an implementation the web application document may be transmitted though a network to a web application server which may write the web application document into a named Folder or section of a hard drive. Such a folder may be named by a user as a user may name a folder on a local hard drive of a client. If a user may wish to review a web application document or to create a new one a conventional web server may be accessed in an embodiment by a client. The web server may either pass control to a web application server or obtain relevant information from the web application server and transmit the information to the client through the network for accessing or creating a web application document.

Additionally a user may access the world wide web using a range of different devices such as one or more computers a mobile phone a media player personal server CE devices or other devices. The network speed display characteristics internal memory and other characteristics may be substantially different for each of these devices. Content may be formatted differently for each of these different devices. For example an image may be formatted for display on a cell phone screen with a different width and height than the same image formatted for display on a computer screen. Or a different pixel resolution may be used for devices connected to the web using slower network speeds to reduce bandwidth requirements.

Also web application folders may be associated with a user s information. By invoking a web system service function a user is able to create logical folders . Such a logical folder may represent a directory in file storage and may be named by a user stored in a database as part of the user s information and associated with re writable media such as that used in a conventional hard drive. A user may then store copies of a web application document in a web system services folder. Such stored information may be in one implementation written to a set of sectors on a magnetic disk such that each sector contains a pointer to the next sector in the chain. The location of the header or start point of this chain of sectors containing user information may be stored in a table of such entries further associated with a user web application folder. Importantly users may take full advantage of a scalable set of storage devices without requiring exposure to the details of where these devices are physically located.

A request may then be received at step to store the web application document on a web server and the web application document may be stored on a web server at step . For instance a user may select a web system service UI control in an embodiment for storing a web application document and a web system service interface may receive a request for storing a web application document from the web system service UI control. In an embodiment a user may request a web application document in a client browser to be stored on the web by selecting Save in the web application menu to invoke an API such as SaveWebAppDoc to save the web application document on the web. In an implementation the web application document may be transmitted though a network to a web application server which may write the web application document into a named Folder or section of a hard drive.

A request may then be received at step to store the content of an application in a web application document on a web server and the content may be stored in a web application document on a web server at step . For instance a user may request that content in a client application be stored in a web application document on the web by selecting Save in the web application menu to invoke an API such as SaveWebAppDoc in an embodiment to save the content in a web application document on the web. The web system service may then save the content in a web application document and send a request to a web application server to store the web application document on a web server.

When web system service operations may be selected using the graphical user interface web system service APIs may be invoked for performing the requested web system service. In an embodiment a NewWebAppDoc API may be invoked to request a web application document to be created a SaveWebAppDoc API may be invoked to request content from an application to be saved in a web application document and a RestoreWebAppDoc API may be invoked to request the content of a web application document to be loaded from the web into the application using the context stored in the web application document.

Any type of content may be input into the web application document at step . Different types of content stored in various client application files may be input into a web application document including text graphics video audio and multimedia content. And context information may be input into the web application document at step . Context information is related to the content of a web application document and may be implicitly related such as activities performed by a client device around the time the document was created or edited or explicitly related as in keywords associated with a given web application document by a user. In an embodiment references to the context information may be stored in a web application document instead of storing the context information itself.

For example the text and the image of may be stored as item of . The descriptor may characterize the item as text with animation. The text and the image of may be stored within item of as components and respectively of item . The descriptor information for the text component may declare the data type as string and the resource information may store the text as a text string. The descriptor information for the animation component may declare the data type as animation and the resource information may store the animation sequence. Similarly other items such at item and item might contain the URLs of images used in the document or the folder and file names of the actual image files as stored in one of the user s web system services folders. Furthermore a description of the content may also include the content history and metadata information that may also be stored along with the content. For instance information about the original creator where else the content may have been used where the content originated and so forth may be included in the descriptor of content items and components in a container. Such description of content may be available for modification and reuse as content may be modified and or reused.

Additionally context information may be stored in the container. For example time or place context information may be stored as a set of strings within an item in the container. The descriptor information in the item may declare that the data is of type string and may further characterize the data as a timestamp representing the number of seconds from a given standard starting point. Thus the view content and context information may be generally included in a multi form data container with a description of the information included in the container so that the encapsulated information may be archived transmitted accessed by processes etc. Such a web application document with its enriched context information may make available a rich set of information that may be enhanced by external processes. For instance a web application document may include context information about related subjects for example which can be inspected by a browser that retrieves relevant information dynamically generated by others on other websites over time. A web application document may also include temporally organized communications information such as a list of communiqu s received by the creator during the creation of the document and related to that document by content or other context. Thus a browser might be able to call forth a list of emails relevant to the document providing retrospective context to the document creator at a later review date.

Those skilled in the art will appreciate that such clustering of the information in a data structure representing the web application document may be accomplished in various embodiments using a variety of data structures. For instance the clustering of the information may be accomplished as illustrated in by container model or using other methods such as by creating linked entries in an XML object database where the data in each object corresponds to and is arranged according to the XML tags that characterize the data.

At step the content of a client application file may be parsed to determine the content components that may be input into the web application document. A parser like content parser of may parse content of the client application file outputting content components identified in the client application file. The context components may then be stored at step into the web application document.

At step context information may be extracted from monitored content information sources to determine context information components that may be input into the web application document. A monitor like context information monitor may monitor and collect context information related to the content of a web application document to be incorporated into a web application document. At step context information components may be stored into the web application document. After the view information content and context information may be stored in a web application document processing may be finished for transferring content and context information of a client application file into a web application document.

In an embodiment for instance there may be a location context type for location information such as the name of the place where the client may be located the geographic coordinates where the client may be located the web application functions or services used for the web application document the IP address of the device used to access the web application document and so forth. There may also be an action context type for actions generally performed by a client device preceeding during or following an operation performed on a web application document. These actions may include general activities performed by a client device or information about the activities such as searches on the web clickstream activity captured by a web browser recently used documents and playlists . These action context types may be an example of context types of information explicitly related to a web application document. Communication context types may represent context information implicitly related to a web application document. A communication context type may represent context information of communications including email instant messaging and other types of text messaging or textual information sent or received. There may also be a world information context type for information about world events occurring and generally accessible by a client device preceeding during or following an operation performed on a web application document. A world information context type may represent context information about world events including headlines weather alerts and other types of world events. This information may be captured from client services active on a client device such as RSS feeds providing headline news and other information.

There may also be a semantic similarity context type for capturing information that may be used to find other textual content with semantic similarity. This semantic similarity information may represent internal semantic similarity information captured from the content of the web application document or may represent external semantic similarity information captured from world information or action information. For example as content may be input into or content may be edited in a web application document a semantic analyzer may monitor key terms and create inferred context information representing internal semantic context information. Thus when a user writes frequently about animation the term animation or animate may be captured as a key term stored as internal semantic similarity information. Likewise a semantic analyzer may monitor and capture key terms in appearing in world information such as headline news. Semantic analysis may include word frequency matching for keywords and or tags and association of common individuals or groups of users may be identified by semantic analysis. Additionally there may be social information context type for information about relationships to people or relationships between people and the content of a web application document.

For any of these context types those skilled in the art will appreciate that additional context information may be obtained. For example additional social network information may be obtained including the extended set of individuals related to the content and or to each other or those related to a relevant concept or event. For example if the content may be about animation those who share an interest in animation in a user s social network may be associated as elements of social network type of context information. Or if the content may be about an animation festival the group of users who had attended the animation festival the festival event information and those who had RSVP ed to attend the event might be included as elements of social network type of context information. Or additional location information may be obtained for instance that may include the time when the web application document was created modified or accessed the zip code and other users present. Similarly additional action information may include web pages accessed documents saved or recalled media stored and or played and or other applications used. Additional communication information world information and semantic similarity information may be obtained and used as context information.

The criteria for determining what items may be relevant may include similarity text matching user attention and so forth. Similarity may be determined using collaborative filtering semantic analysis of word frequency matching and or visual analysis . User attention for a web application document may be determined either explicitly by being highly scored by a user or implicitly by being revised most.

The Save screen may also include selectable options for a user to specify parameters of the information to be saved in a web application document. For instance the Save screen may provide check box controls such as check box control for selecting to save the view information of a client application file a check box control for selecting to save the media or content of a client application file and or check box control for selecting to save the context information of a client application file. A user may choose to select a variable amount of context information by setting a slider control to indicate the amount of context information to save for different context types. There may be a slider control for selecting the amount of time and place context information . There may be a slider control for selecting the amount of actions context information . There may be a slider control for selecting the amount of communications context information . There may be a slider control for selecting the amount of world information context information . And there may also be a slider control for selecting the amount of similarity context information .

Furthermore a user may select to save either copies or references of the content or context information. In an embodiment the Save screen may provide check box controls such as check box control for selecting to save copies of the content and context information and check box control for selecting to save pointers referencing the content and context information. Saving pointers referencing the content and context information may save storage space on the web server where the web application document may be stored but may prove less reliable in restoring the web document as reference information may have changed or become unavailable. Thus a user might elect to store the document content itself where reliable restoring of exactly the information originally included is required or elect to store references where this is not a requirement or elect to store a combination in an interface configuration not shown where the variable nature of referenced information is desirable such as to include a picture of the day relevant to the document content.

At step it may be determined whether the content of a client application file may be stored into the web application document. Executable code invoked by the SaveWebAppDoc API may determine in an embodiment whether the content of a client application file may be stored in a web application document by performing a lookup of a setting such as a setting activated by input received in check box control of indicating whether to store the content in the web application document.

At step it may be determined whether the context information related to a client application file may be stored into the web application document. Executable code invoked by the SaveWebAppDoc API may determine in an embodiment whether the context information related to a client application file may be stored in a web application document by performing a lookup of a setting such as a setting activated by input received in check box control of indicating whether to store the context information in the web application document.

At step the amount of action type information may be determined to be stored into a web application document. In an embodiment executable code invoked by the SaveWebAppDoc API may determine the amount of location type information to be stored in a web application document by performing a lookup of a setting such as a setting fixed by slider control of indicating an amount of action type information to store in the web application document. Similarly the amount of communications type information the amount of world type information the amount of similarity type information and the amount of social type information may be determined to be stored into a web application document at steps and respectively. Executable code invoked by the SaveWebAppDoc API may determine the amount of communications type information the amount of world type information the amount of similarity type information and the amount of social type information to be stored in a web application document by performing a lookup of settings such as a settings respectively fixed by slider controls and of .

At step the content to be restored from the web application document to a client application may be determined. For example the content components found from parsing the components of the web application file by executable code invoked by the RestoreWebAppDoc API may be loaded from the web application file into a client application for display.

At step the context information to be restored from the web application document to a client application may be determined. For example the context information components found from parsing the components of the web application file by executable code invoked by the RestoreWebAppDoc API may be loaded from the web application file into a client application or the web system services interface for access and display.

Those skilled in the art may appreciate that selectable settings for view information content information and context information may be set using default setting for individual devices or for a class of devices. presents a flowchart for generally representing the steps undertaken in one embodiment to transfer content and context information from a web application document to a client application for display. At step a request may be received to restore application data for an application executing on a client device. In an embodiment the RestoreWebAppDoc API may be invoked by receiving a request from a user interface to restore a web application document for a client application. In general a parser like content parser of may parse components of a container representing the web application document to identify information to load on the client device. The view information of a web application document may be parsed at step to determine view information that may be loaded on the client device. For example a container representing a web application document may be parsed and it may be determined that the view information for presentation may be HTML. In an embodiment the view information may be stored as a set of strings within an item in a container such as the container illustrated in . The view information may then be loaded at step on the client device.

At step context information components of the web application document may be parsed to determine context information to load on the client device. The context information components may then be loaded at step as context information on the client device. At step the content components of the web application document may be parsed to determine content to load on the client device. The content components may then be loaded at step as application data on the client device. After the view information content and context information may be loaded on the client device the application data may be processed by an application executing on the client device. A user may then request that the content and context information of a client application be stored as a web application document on a web server.

There may be any number of applications that may use the context and related information saved along with the content of a web application document. The context information may be used as a stream of keywords for online advertising applications. The keywords may be transmitted to an online advertising service that may return advertisements for display along with the application data or web application document. A user may click on these advertisements and generate revenue for the online advertising service. presents a block diagram generally representing an exemplary architecture of system components for using context information for online advertising applications. Those skilled in the art will appreciate that the functionality implemented within the blocks illustrated in the diagram may be implemented as separate components or the functionality of several or all of the blocks may be implemented within a single component. For example the functionality for the client query handler may be included in the same component as the application . Moreover those skilled in the art will appreciate that the functionality implemented within the blocks illustrated in the diagram may be executed on a single computer or distributed across a plurality of computers for execution.

In various embodiments a client computer may be operably coupled to one or more advertising servers by a network . The client computer may be a computer such as computer system of . The network may be any type of network such as a local area network LAN a wide area network WAN or other type of network. An application may execute on the client computer and may include functionality for sending context information as a query to a client query handler . The application may be operably coupled to the client query handler that may include functionality for receiving a query with context information that may include one or more keywords and may include functionality for sending a query request to an advertising server to obtain a list of advertisements for display. In general the application and the client query handler may be any type of interpreted or executable software code such as a kernel component an application program a script a linked library an object with methods and so forth.

The advertising server may be any type of computer system or computing device such as computer system of . In general the advertising server may provide services for query processing and may include services for providing a list of advertisements for display on a client. In particular the advertising server may include a server query handler for receiving and responding to query requests and an advertisement selector for choosing lists of advertisements for keywords of the queries. Each of these modules may also be any type of executable software code such as a kernel component an application program a linked library an object with methods or other type of executable software code.

The advertising server may be operably coupled to a database of advertisements such as advertisement storage that may include any type of advertisements that may be associated with an advertisement IDs and keywords that may be associated with keyword IDs . In an embodiment a keyword ID may be associated with an advertisement ID that may map keywords to advertisements . A list of advertisements may be selected for one or more keywords and may be sent to the client computer for display along with application data of an application .

At step a list of advertisements may be selected using the keywords from the context information of the application. In an embodiment advertisements may be selected by an advertisement selector using any well known online keyword auction techniques where advertisers may bid on keywords for selection of their advertisements to be included in a list of advertisements chosen for display. After selecting the list of advertisements using the keywords the list of advertisements may be sent at step to the client device for display. A client device may then receive the list of advertisements at step from the advertising server for display on the client device and the list of advertisement may be displayed at step on the client device along with the client application data.

In addition to using context information for online advertising applications those skilled in the art will appreciate that other applications may use the context and related information saved along with the content of a web application document. For instance a listing of relevant people included as elements of context information from a web application document may be generated along with their contact information and displayed by an application in a sidebar display on a client device.

Thus the present invention may save and restore a web application document using a variety of devices and may capture context information relevant to the web application document. Advantageously a user may specify a named folder on a web server for storing the web application document as easily as storing a file on a local hard drive. Additionally a user may select the amount of context information to store about the web application document as well as specify keywords to be associated with the web application document. Importantly user identities may be mapped to stored information to support such storage on the web and may be authenticated in varying degrees to conform to the sensitivity of the information provided.

As can be seen from the foregoing detailed description the present invention provides an improved system and method for providing web system services for storing data and context information of client applications on the web. Such a system and method may implement a data and storage model that may accommodate an otherwise varied set of document types and configurations by providing consistent services across an arbitrary set of applications. The web system services described may allow the web to provide primary storage for information rather than client hard drives. In addition to storing content for users on the web enhanced context and related information may be saved along with the content. Furthermore view information may be saved that provides information about the organization structure determining presentation to user. Moreover information stored using the web systems services may be made generally available for retrieval by web applications other than those that stored the information. Furthermore privacy controls may additionally be implemented for sharing web application documents with other users. As a result the system and method provide significant advantages and benefits needed in contemporary computing and in online applications.

While the invention is susceptible to various modifications and alternative constructions certain illustrated embodiments thereof are shown in the drawings and have been described above in detail. It should be understood however that there is no intention to limit the invention to the specific forms disclosed but on the contrary the intention is to cover all modifications alternative constructions and equivalents falling within the spirit and scope of the invention.

