---

title: Processing related data from information sources
abstract: Systems and methods for managing data are disclosed. Embodiments of the present invention may allow attribute values associated with data records to be assembled and presented in a unified manner. More particularly, embodiments of the present invention may utilize a set of locally stored identity information associated with a data record to determine a set of logical procedures operable to retrieve values for one or more non-identity attributes from a remote location. Furthermore, other embodiments of the present invention may apply a logical procedure to the values of the attributes corresponding to data records to select one or more values of one or more attributes of the data records.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08515926&OS=08515926&RS=08515926
owner: International Business Machines Corporation
number: 08515926
owner_city: Armonk
owner_country: US
publication_date: 20070322
---
This invention relates generally to associating data records and in particular to identifying data records that may contain information about the same entity such that these data records may be associated. Even more particularly this invention relates to assembling or presenting data from information sources which comprise these data records.

In today s day and age the vast majority of businesses retain extensive amounts of data regarding various aspects of their operations such as inventories customers products etc. Data about entities such as people products parts or anything else may be stored in digital format in a data store such as a computer database. These computer databases permit the data about an entity to be accessed rapidly and permit the data to be cross referenced to other relevant pieces of data about the same entity. The databases also permit a person to query the database to find data records pertaining to a particular entity such that data records from various data stores pertaining to the same entity may be associated with one another.

A data store however has several limitations which may limit the ability to find the correct data about an entity within the data store. The actual data within the data store is only as accurate as the person who entered the data or an original data source. Thus a mistake in the entry of the data into the data store may cause a search for data about an entity in the database to miss relevant data about the entity because for example a last name of a person was misspelled or a social security number was entered incorrectly etc. A whole host of these types of problems may be imagined two separate record for an entity that already has a record within the database may be created such that several data records may contain information about the same entity but for example the names or identification numbers contained in the two data records may be different so that it may be difficult to associate the data records referring to the same entity with one other.

For a business that operates one or more data stores containing a large number of data records the ability to locate relevant information about a particular entity within and among the respective databases is very important but not easily obtained. Once again any mistake in the entry of data including without limitation the creation of more than one data record for the same entity at any information source may cause relevant data to be missed when the data for a particular entity is searched for in the database. In addition in cases involving multiple information sources each of the information sources may have slightly different data syntax or formats which may further complicate the process of finding data among the databases. An example of the need to properly identify an entity referred to in a data record and to locate all data records relating to an entity in the health care field is one in which a number of different hospitals associated with a particular health care organization may have one or more information sources containing information about their patient and a health care organization collects the information from each of the hospitals into a master database. It is necessary to link data records from all of the information sources pertaining to the same patient to enable searching for information for a particular patient in all of the hospital records.

There are several problems which limit the ability to find all of the relevant data about an entity in such a database. Multiple data records may exist for a particular entity as a result of separate data records received from one or more information sources which leads to a problem that can be called data fragmentation. In the case of data fragmentation a query of the master database may not retrieve all of the relevant information about a particular entity. In addition as described above the query may miss some relevant information about an entity due to a typographical error made during data entry which leads to the problem of data inaccessibility. In addition a large database may contain data records which appear to be identical such as a plurality of records for people with the last name of Smith and the first name of Jim. A query of the database will retrieve all of these data records and a person who made the query to the database may often choose at random one of the data records retrieved which may be the wrong data record. The person may not often typically attempt to determine which of the records is appropriate. This can lead to the data records for the wrong entity being retrieved even when the correct data records are available. These problems limit the ability to locate the information for a particular entity within the database.

To reduce the amount of data that must be reviewed and prevent the user from picking the wrong data record it is also desirable to identify and associate data records from the various information sources that may contain information about the same entity. There are conventional systems that locate duplicate data records within a database and delete those duplicate data records but these systems may only locate data records which are substantially identical to each other. Thus these conventional systems cannot determine if two data records with for example slightly different last names nevertheless contain information about the same entity. In addition these conventional systems do not attempt to index data records from a plurality of different information sources locate data records within the one or more information sources containing information about the same entity and link those data records together. Consequently it would be desirable to be able to associate data records from a plurality of information sources which pertain to the same entity despite discrepancies between attributes of these data records and be able to assemble and present information from these various data records in a cohesive manner.

As data records from various information sources may be different in both format and in the data which they contain and the various information sources may themselves may heterogeneous however the assembling and presentation of data associated with these data records may be problematic. These problems may be exacerbated by the fact that some of the information in these data records may be confidential or otherwise sensitive thus for various reasons e.g. legal reasons etc. certain of the information in the data records can only be stored at the information sources themselves and as explained above multiple data records may exist which may refer to the same entity where each of these multiple data records may in turn have attributes which have multiple historical values. Given that these various data records may also reside in different information sources the complexity of the problems surrounding the assembling and presentation of related data from these various data records residing in multiple information sources becomes apparent.

Thus there is a need for system and methods for assembling and presenting related data from information sources.

Systems and methods for managing data are disclosed. Embodiments of the present invention may allow attribute values associated with data records to be assembled and presented in a unified manner. More particularly embodiments of the present invention may utilize a set of locally stored identity information associated with a data record to determine a set of logical procedures operable to retrieve values for one or more non identity attributes from a remote location. Furthermore other embodiments of the present invention may apply a logical procedure to the values of the attributes corresponding to data records to select one or more values of one or more attributes of the data records.

In one embodiment obtaining one or more member data records wherein each member data record is associated with a set of identity attributes and a set of non identity attributes values for the set of identity attributes corresponding to the member data record are stored locally and values for the set of non identity attributes corresponding to the member data record are stored at a remote location determining a first logical procedure corresponding to each of the non identity attributes and obtaining a value for each of the non identity attributes wherein obtaining the value comprises invoking the first logical procedure corresponding to the non identity attribute

In another embodiment a response to the query a set of attributes from one or more of the data records may be processed using a second logical procedure to produce a final set of attributes and values for these final attributes from the values for the attributes of the one or more data records.

Embodiments of the present invention may provide the technical advantage of providing a centralized way to obtain data from a variety of different information source types and formats instead of having to compose custom code to get data from these other systems at a potentially higher development cost.

Furthermore embodiments of the present invention may allow a user to easily select the data he wishes to review with respect to a set of data records. This allows a singular view of data to be provided to consuming applications. This view can be defined to exactly match business requirements for the data.

Embodiments of the invention disclosed herein can be implemented by programming one or more computer systems or devices with computer executable instructions embodied in a computer readable medium. When executed by a processor these instructions operate to cause these computer systems and devices to perform one or more functions particular to embodiments of the invention disclosed herein e.g. generate an appropriate threat rating or threat score for each event. Programming techniques computer languages devices and computer readable media necessary to accomplish this are known in the art and thus will not be further described herein.

These and other aspects of the invention will be better appreciated and understood when considered in conjunction with the following description and the accompanying drawings. The following description while indicating various embodiments of the invention and numerous specific details thereof is given by way of illustration and not of limitation. Many substitutions modifications additions or rearrangements may be made within the scope of the invention and the invention includes all such substitutions modifications additions or rearrangements.

The invention and the various features and advantageous details thereof are explained more fully with reference to the nonlimiting embodiments that are illustrated in the accompanying drawings and detailed in the following description. Descriptions of well known starting materials processing techniques components and equipment are omitted so as not to unnecessarily obscure the invention in detail. Skilled artisans should understand however that the detailed description and the specific examples while disclosing preferred embodiments of the invention are given by way of illustration only and not by way of limitation. Various substitutions modifications additions or rearrangements within the scope of the underlying inventive concept s will become apparent to those skilled in the art after reading this disclosure.

Reference is now made in detail to the exemplary embodiments of the invention examples of which are illustrated in the accompanying drawings. Wherever possible the same reference numbers will be used throughout the drawings to refer to the same or like parts elements . In one embodiment the system and method of the invention may be particularly useful in a health care setting and thus examples of embodiments of the present invention may be described in this context. It will be appreciated however that embodiments of systems and methods in accordance with the invention have utility in a wide variety of other settings.

Before describing embodiments of the systems and methods of the present invention it may first be helpful to go over examples of embodiments of systems and methods for associating entities which may be utilized in conjunction with embodiments of the present invention such as those described in U.S. Pat. No. 5 991 758 entitled System and Method for Indexing Information about Entities from Different Information Sources issued Nov. 23 1999 by inventor Scott Ellard and U.S. patent application Ser. No. 11 656 111 entitled Method and Systems for Indexing Information About Entities to Hierarchies from Different Information Sources by inventors Scott Ellard and Jim Cushman filed on Jan. 22 2007 which are both incorporated by reference in their entirety.

As shown the MEI may receive data records from the information sources as well as write corrected data back into the information sources. The corrected data communicated to the information sources may include information that was correct but has changed information about fixing information in a data record or information about links between data records. In addition one of the users may transmit a query to the MEI and receive a response to the query back from the MEI. The one or more information sources may be for example different databases that possibly have data records about the same entities. For example in the health care field each information source may be associated with a particular hospital in the health care organization and the health care organization may use the master entity index system to relate the data records within the plurality of hospitals so that a data record for a patient in Los Angeles may be located when that same patient is on vacation and enters a hospital in New York.

It will be apparent to those of ordinary skill in the art that both the data sources and the operators may be affiliated with similar or different organizations or owners. For example data source may be affiliated with a hospital in Los Angeles run by one health care network while data source may be affiliated with a hospital in New York run by another health care network. Thus the data records of each of data sources may be of a different format.

This may be illustrated more clearly with reference to depicting two embodiments of example data records. Each of these data records has a set of fields corresponding to a set of attributes of each of the data records. For example one of the attributes of each of the records may be a name another attribute may be a social security number birth date gender etc. It will be apparent that an attribute may comprise multiple fields of a data record for example the name attribute of data record may comprise fields and the last middle and first name fields respectively.

Notice however that each of the records may have a different format for example data record may have a field for the attribute of driver s license number while data record may have no such field. Similarly like attributes may have different formats as well. For example name fields in record may accept the entry of a full first last and middle name while name fields in record may be designed for full first and last names but only allow the entry of a middle initial.

Returning to the MEI of the master entity index system may be located at a central location and the information sources and users may be located remotely from the MEI and may be connected to the MEI by for example a communications link such as the Internet. The MEI the one or more information sources and the plurality of users may also be connected together by a communications network such as a wide area network. The MEI may have its own database that stores the complete data records in the MEI but the MEI may also only contain sufficient data to identify or locate a data record e.g. an address in a particular information source or an information source associated with the data record or any portion of the values of the data fields that comprise a complete data record so that the MEI retrieves the entire data record or portions thereof from the information source when needed. The MEI may link data records together containing information about the same entity in an entity identifier or associative database as described below separate from the actual data record. Thus the MEI may maintain links between data records in one or more information sources but does not necessarily maintain a single uniform data record for an entity. Now an example of the master entity index system in accordance with embodiments of present the invention will be described.

As data records from the information sources are fed into the MEI the MEI may store the incoming data record or portions thereof in the entity database according to a member type definition and may also attempt to match the incoming data record about an entity to a data record already located in the MEI database referred to as member data records . If the incoming data record matches an existing data record a link between the incoming data record and the matching data record may be generated. If the incoming data record does not match any of the existing data records in the MEI a new entity identifier as described below may be generated for the incoming data record. Then as additional data records are received from the information sources these data records are matched to existing data records and the MEI database of data records is increased.

The one or more control databases may be used by the MEI to control the processing of the data records to increase accuracy. For example one of the control databases may store rules which may be used to override certain anticipated erroneous conclusions that may normally be generated by the MEI. For example the operator of the MEI may know due to past experience that the name of a particular patient is always misspelled in a certain way and provide a rule to force the MEI to associate data records with the known different spellings. The control databases permit the operator to customize the MEI for a particular application or a particular type of information. Thus for a health care system containing information about a patient the control databases may contain a rule that the nickname Bill is the same as the full name William. Therefore the MEI will determine that data records otherwise identical except for the first name of Bill and William contain information about the same entity and should be linked together. The MEI will now be described in more detail.

For each of the operations of the MEI including the synthesis as described below the querying and the monitoring the results of those operations may depend on a trust value that may be associated with each data field in a data record. The trust computation for a data field may vary depending on the characteristics of the data field such as the date on which that data record containing the field was received or a quantitative characterization of a level of trust of the information source. For example a data field containing data that was manually entered may have a lower trust value than a data field with data that was transferred directly from another information source. The trust value for a data field may also affect the probability of the matching of data records. Now the data store of the master entity index system will be described in more detail.

The MEI may provide other operations that can be constructed from combining the operations listed above. For example an operation to process data records for which it is not known if a data record exists can be constructed by combining the query operation for data records with the add new data record or update existing data record operations. These composite operations may lead to better performance than if the operator executed a combination of the basic operations. They also relieve the operator for having to determine the correct sequencing of operations to achieve the desired result.

The data store may include an entity database one or more control databases and an exception occurrence database as described above. The entity database may include a data record database and an identity database . The data record database may store the data records or the addresses of the data records in the MEI as described above while the associative identity database may store a group of data record identifiers that associate or link those data records which contain information about the same entity. The separation of the physical data records from the links between the data records permits more flexibility because a duplicate copy of the data contained in the data record is not required to be present in the identity database. The data record database and the associative database may also be combined if desired.

In one embodiment the data record database may be configured according to one or more member type definitions where each member type definition which comprises a set of attributes of data records which are stored and managed in MEI system . The attributes of the member type definition may be grouped into identity data which comprises those attributes whose values are stored in data record database in conjunction with a data record. Conversely non identity attributes may be attributes whose values are not stored in data record database and which may or may not be encompassed by the member type definition. For example in a healthcare setting member type definition may comprise Person which is commonly used in a healthcare environments to accommodate management of person patient data Provider which is commonly used in healthcare provider payor environments to accommodate management of network provider e.g. medical centers doctors laboratories etc. data Guest which is used in the hospitality environment to accommodate the management of guest frequent guest data and Company which is used most often in non healthcare environments typically to manage information about companies rather than or in addition to information about customers.

For each data record corresponding to a member type definition then the set of identity information from the data record corresponding to that member type definition may be stored in data record database along with a reference to an information source or location corresponding to the data record e.g. the location of a data record in an information source from to which the member data record corresponds . It will be noted here that for each member type definition a different set of identity information e.g. attributes may be specified and that only as much identity information corresponding to the member type definition as is available for that data record may be stored. For example if a data record corresponds to a member type of Person the values for the name and address attributes of the data record may be stored in data record database if they are available. Furthermore historical values may be stored for each of the identity attributes. For example if a member type definition comprises an address attribute a first address value may be stored for a member in data record database. At some later point the member data record e.g. a data record corresponding to the member data record may be updated with a new address. At this point the value for the address associated with the member data record may be updated to the new address and the first address value stored as a historical value for the address attribute associated with that member. It will be noted that the number of historical values for each identity attribute may differ according to the identity attribute and may be as few or as many as desired in a given embodiment of the present invention.

The identity database represents the combination of data records in the data record database that refer to the same entity. Each entity is assigned an entity identifier. Entity identifiers are based on the concept of versioned identification. An entity identifier consists of a base part and a version number. The base part represents a specific individual about whom information is being linked. The version number represents a specific combination of data records that provides information about the entity that is known at a specific time. In this example the data records are shown as squares with the alphabetic identifier of the data record inside and the entity identifier is shown as the base part followed by a period followed by a version number. For example . indicates an entity identifier with 100 as the base part and 1 as the version number. In this example entity identifier . links data records A and B entity identifier . links data records C D and E and entity identifier . links data records A B and R. Now the details of the control databases will be described.

The one or more control databases may permit the operator of the master entity index system to customize the MEI s processing based on information known to the operator. The control databases shown are merely illustrative and the MEI may have additional control databases which further permit control of the MEI by the operator. The control databases may for example include a rules database an exception handling database an anonymous name database a canonical name database and a thresholds database .

The rules database may contain links that the operator of the system has determined are certain and should override the logic of the matching of the MEI. For example the rules database may contain identity rules i.e. rules which establish that a link exists between two data records and or non identity rules i.e. rules which establish that no link exists between two data records . In this example the rules database contains identity rules which are A B and C D and a non identity rule which is Q.notequal.R. These rules force the MEI to establish links between data records or prevent links from being established between data records. For example the information sources may have four patients with data records S T U and V respectively who are all named George Smith and the operator may enter the following nonidentity rules i.e. S.notequal.T T.notequal.U U.notequal.V V.notequal.S to keep the data records of the four different entities separate and unlinked by the MEI. The rules in the rules database may be updated added or deleted by the operator of the master entity index system as needed.

The exception handling database contains one or more exception handling routines that permit the master entity index system to handle data record problems. The exception handling rules within the database may have the form of condition.fwdarw.action processing rules. The actions of these rules may be actions that the MEI should automatically take in response to a condition for example to request that an individual manually review a data record. An example of an exception handling rule may be if duplicate data record.fwdarrow.delete data record which instructs the MEI to delete a duplicate data record. Another example is if different attributes sex .forwardarrrow.request further review of data record which instructs the MEI that if there are two data records that appear to relate to the same entity but the sex of the entity is different for each data record the MEI should request further review of the data records. In response to this request an operator may determine that the data records are the same with an incorrectly typed sex for one of the records and the operator may enter a rule into the rules database that the two data records are linked together despite the difference in the sex attribute. The exception database may have an associated database . described below which stores the actual exceptions that occur during processing of the input data records.

The anonymous name database permits the MEI to automatically recognize names that should be ignored for purposes of attempting to match two data records. In this example the anonymous name database may contain not on file John Doe and baby.subtext. 1 which are names that may be typically assigned by a hospital to a patient when the hospital has not yet determined the name of the patient. As another example a part not in a warehouse inventory may be referred to as not on file until the part may be entered into the database. These anonymous names may be used by the MEI to detect any of the anonymous names or other filler data that hold a space but have no particular meaning in data records and ignore those names when any matching is conducted because a plurality of data records containing the name of John Doe should not be linked together simply because they have the same name.

The canonical name database may permit the MEI to associate short cut data such as a nickname with the full data represented by the short cut data such as a person s proper name. In this example for a health care organization the nickname Bill may be associated with William and Fred may be associated with Frederick. This database permits the MEI to link together two data records that are identical except that one data record uses the first name Bill while the second data record uses the first name William. Without this canonical name database the MEI may not link these two data records together and some of the information about that patient will be lost. The thresholds database permits the thresholds used by the MEI for matching data records as described below to be adjustable. For example an operator may set a high threshold so that only exact data records are matched to each other. A lower threshold may be set so that a data record with fewer matching data fields may be returned to the user in response to a query. The details of the matching method will be described below in more detail.

The exception occurrence database allows the MEI to maintain a record of all of the exceptions that have occurred. The exception occurrence database may store the actual exception conditions that have arisen during processing. For example the exception occurrence database may contain an entry that represents that entity . has two data records with different values for the sex attribute.

The operator of the MEI may clear the identity database without clearing the data record database . Thus an operator may have the MEI receive a plurality of input data records and generate a plurality of links with a particular matching threshold level as described below being used. The operator may then decide to perform a second run through the data using a lower matching threshold level to produce more links but does not want to delete the data records themselves and does not want to delete the identity and non identity rules from the rules database created during the first run through the data. Thus the operator may delete the identity database but keep the control databases and in particular the rules database for the second run through the data.

As discussed above the query unit permits a user of the master entity index system to query the MEI about information in the data records or information in the control databases of the MEI and the MEI will return a response to the query including any relevant data records or information. In one embodiment for example a user may query the MEI utilizing one or more criteria and the MEI will respond to the query with data corresponding to a set of member data records determined based on the criteria. More particularly MEI may provide an application programming interface API such that a user may submit a query comprising one or more criteria and the MEI utilize the criteria to obtain a response to the query where the response comprises a set of member data records and return data corresponding to these member data records to the user. In one embodiment the result of the query returned to the user may comprise sets of attribute values or other information where each set of attribute values corresponds to at least one of the member data records.

For various reasons such as regulatory laws or codes e.g. the Health Insurance and Portability and Accountability Act or HIPAA privacy concerns concerns about storage space or efficiency etc. however it may not be desirable to store all the values of all the attributes or other information associated with a data record in data store e.g. in conjunction with a member data record . Thus in addition to any identity information e.g. attributes whose values are stored in data store of MEI comprised by a member type definition in one embodiment as discussed above a member data record may be associated with a set of non identity information e.g. attributes whose values are stored externally to data store of MEI .

Thus the values for the non identity attributes associated with a particular member data record may be stored at an information source which stores the data record corresponding to that member data record and the values for the identity attributes of the member data record stored in the data record database and which may also be stored at the information source in conjunction with the data record corresponding to that member data record . By only storing identity information e.g. values for identity attributes for a member data record at MEI the amount of data stored in data store may be reduced and by tailoring the identity information stored at data store according to any pertinent laws regulation or desires of owners of information sources these various laws regulations desires etc. may be accounted for with regards to the storage of member data record data.

This arrangement however may present a number of difficulties. One of these difficulties is how to manage data stored in these disparate locations e.g. in data store and multiple information sources . Specifically each of information sources may not be managed by MEI and may utilize any one of a number of formats protocols etc. Thus to collect information corresponding to a member data record e.g. both identity and non identity information on a particular member data record attribute values associated with that member data record may need to be obtained from both data store and from one or more information sources . It may be desirable however to present a unified view of a member record or entity to a user. In other words to allow the gathering and storage of the various values of attributes associated with member data records to be transparent to a user of MEI.

To that end attention is now directed to systems and methods for managing data stored in disparate locations. Embodiments of the present invention may allow attribute or other values associated with one or more member data records to be assembled and presented in a unified manner. More particularly embodiments of the present invention may utilize a set of locally stored identity information associated with a member data record to determine a set of logical procedures corresponding to a set of externally stored non identity information associated with the member data record. Each of this set of logical procedures may be operable to implement logic to retrieve values for one or more non identity attributes from an information source.

Turning to a flow diagram of one embodiment of a method for managing data stored externally e.g. in information sources in conjunction with data stored locally e.g. in data store of MEI is depicted. At step MEI may generate or otherwise obtain a set of member data records. These member data records may be generated in response to a query received from an operator as will be discussed later. Each of these members data record may comprise the set of identity information e.g. values for identity attributes associated with that member data record e.g. stored in data store . Based on the member type definition to which the member data record corresponds a set of attributes whose values are non identity information e.g. not stored in data store may be determined at step . For each of these non identity attributes of these member data records a logical procedure may be determined at step to obtain values for the non identity attributes for each of the members if it exists and these logical procedures invoked at step . A logical procedure may have a defined set of inputs and outputs for example based on the attribute type and an associated member type definition and comprise logic operable to retrieve the value for a particular non identity attribute from an information source. This retrieval may entail communication with a particular information source according to the protocol or format utilized by that information source or may entail the invocation of a web service provided by that information source or almost any other type of communication. For each of the member data records then the values of the non identity attributes obtained by each of the logic flows invoked at step may be assembled with the identity information stored locally in data store according to the member type definition or other format at step .

The embodiment of the methodology depicted in may be better explained with reference to which depicts an example of one embodiment of managing data stored in disparate locations in conjunction with responding to a query from a user. MEI may receive query from a user. Query may comprise a set of criteria provided by the user and a set of desired results which may comprise a set of attributes member data records or entities. For example a request may comprise a name e.g. such as John and the desired results may comprise the attributes of patient record and an order history. As noted above request may be formed according to an API provided by MEI . Based on this query MEI may obtain a set of member data records utilizing the set of criteria in query and provide these member data records to data management logic . Each of member data records may be of a particular member data type and comprise identity information for the member data record which may include an associated information source for the member data record . Using an attribute map corresponding to the member data type mapping logic may reference a set of logical procedures where each of the set of logical procedure may be operable to retrieve a value for a non identity attribute associated with the member data record from an information source. More particularly in one embodiment each of logical procedures may be invoked with at least a portion of the identity information associated with the member data record and may utilize this identity information to access an information source to retrieve values for the non identity attribute associated with the logical procedure .

Using the identity information associated with the member data record and the attribute values retrieved by each of logical procedures assembly logic may assemble a result to return to the initiator of query . This result may be assembled according to an API provided by MEI or another format and may correspond to the API with which query was initiated. In one particular embodiment the format of the assembled result may correspond to the member type definition for the member data record. Result assembled by assembly logic may then be returned to the initiator of query .

It may be helpful here to reference a particular example. For purposes of this example therefore assume that MEI has a member type definition for a person which comprises four attributes a Name attribute a Patient Record attribute an Order History attribute and an Invoice No. attribute. The identity information corresponding to this member type definition is a value for the Name attribute. Now suppose that query comprises a particular name as a criterion and based upon this criterion MEI locates two member objects and . Member object is associated with information source while member object is associated with information source .

Each of those logical procedures may then be invoked and provided with the identity information e.g. the value of the Name attribute associated with member data record . In this example logical procedure may be Patient Rec Logic 1 operable to obtain the value of the Patient Record attribute associated with member data record from information source logical procedure may be Order History Logic 1 operable to obtain the value for the Order History attribute associated with member data record from information source and logical procedure may be Invoice Logic 2 operable to obtain the value for the Invoice No. attribute associated with member data record from information source .

The identity information associated with member data record can then be provided to assembly logic along with each of the values for the attributes obtained by logical procedures e.g. non identity information . The identity information and non identity information corresponding to member data record may then be formatted or otherwise processed e.g. according one or more logical procedures as explained in more detail below by assembly logic and returned to the operator which initiated a query.

Moving now to a block diagram of one embodiment of the processing of member data record of the current example is depicted. Member data record may be provided to data management logic e.g. including the identity information associated with member data record which in this case may comprise a value for the Name attribute associated with member data object . Mapping logic may then utilize table to determine a set of logical procedures to obtain values for the non identity attributes e.g. external to MEI of member data record . In the example depicted as member data record is associated with information source mapping logic may determine that the Name attribute is not a non identity attribute and therefore no procedure needs to be determined for this attribute. Mapping logic will also determine based on the information source associated with member data record e.g. IS that the Patient Rec Logic 2 procedure should be invoked to obtain the value for the Patient Record attribute of member data record that the Order History Logic 1 procedure should be invoked to obtain the value for the Order History attribute of member data record and that no logical procedure should be invoked to obtain the value for the Invoice No. attribute of member data record e.g. because no value for Invoice No. which corresponds to member data record may be stored .

Each of those logical procedures may then be invoked and provided with the identity information e.g. the value of the name attribute associated with member data record . In this example logical procedure may be Patient Rec Logic 2 operable to obtain the value of the Patient Record attribute associated with member data record from information source and logical procedure may be Order History Logic 1 operable to obtain the value for the Order History attribute associated with member data record from information source .

The identity information associated with member data record can then be provided to assembly logic along with each of the values for the attributes obtained by logical procedures e.g. non identity information . The identity information and non identity information corresponding to member data record may then be processed by assembly logic to form a result and the result returned to the user which initiated the query.

A few things will be noted after a review of the above example. First it will be observed that one logical procedure may be associated with the retrieval of a value of an attribute of a member data record from multiple information sources or individual logical procedures for the retrieval of the value of an attribute may be defined for individual data sources or any combination thereof. In other words logical procedures may be tailored or otherwise operable to interact with one or more of the information sources to obtain a value according to almost any type of communication protocol storage format etc utilized by an information source or otherwise desired. Furthermore each of logical procedures may accomplish almost any type of processing on these values such as parsing of the obtained values etc.

The definition of these various logical procedures may also occur in almost any manner desired. In one embodiment for example a user may utilize a graphical interface to define each of the logical procedures where the graphical interface may offer a set of visual representations of functionality which the user may assemble and a logical procedure instantiated from the graphical representation created by the user. These logical procedures may also be hard coded during installation or configuration of MEI the logical procedures may be provided by one or more third party vendors etc.

Using embodiments of the present invention a variety of other functionality may also be implemented in managing data stored in disparate locations. For example data management logic may receive a user identification along with the set of member data object and based upon this user identification apply a set of permissions to the identity attributes and non identity attributes to determine if the user represented by the user identification has permission to receive values for these attributes such that assembly logic may assemble a reply to a query based on these permissions. A wide variety of these security protocols may similarly be implemented such that only values of certain attributes associated with member data records may be accessed.

Embodiments of the present invention may also be utilized to determine which values of attributes are to be returned in response to a query from a user. In many cases a member data record which is to be returned in response to a user request or an entity to be returned to a user in response to a query which may be comprised of multiple member data records may have multiple values associated with one or more of the attributes associated with the member data record or the entity. For example a member data record may have two or more values corresponding to a name attribute where one value is the current value of the name attribute for the member data record and another value for the name attribute may be a historical value for the name attribute. Similarly an entity may comprise two or more linked member data records where one of the member data records of the entity may have one value for a name attribute and another member data record associated with the entity may have a different value for the name attribute. If each of these values for a member data record or entity is returned to a user in response to a query it may require a great deal of review for a user to locate the values or information that he desires. Thus it would be desirable if the values of attributes associated with member data records and entities could be refined or composited according to a user s desires before being returned to a user.

To address this desire among others attention is now directed to systems and methods for refining or compositing one or more member data records. More particularly embodiments of the present invention may apply a logical procedure to the values of attributes corresponding to one or more data records to select one or more values of one or more attributes. Specifically embodiments of the invention may apply a logical procedure referenced in a user query to composite member data records obtained as a result of the query such that the response to the query comprises the values for attributes as determined by the application of the logical procedure. A variety of these logical procedures may be defined such that a user may easily obtain desired results through the selection of one or more of these logical procedures.

Embodiments of the systems and methods of the present invention may be better understood with reference to which depicts one embodiment of utilizing a logical procedure for the compositing of member data records. As discussed above in response to a query from a user data management logic may receive member data records and associated values for identity attributes of the member data record . Values for non identity attributes of member data records may be obtained using logical procedures selected by mapping logic as discussed above . Thus a set of member data records comprising values for the identity attributes of the member data record and values for nonidentity attributes may be provided to assembly logic such that assembly logic may assemble result to return to the user in response to query .

In one embodiment query from a user may comprise a reference to a logical procedure which is to be applied to member data records and their associated attribute values to generate result to be returned in response to query . Each of logical procedures may be operable to process one or more member data records either alone or in conjunction with one another according to a defined set of logical steps to select values and attributes to be returned to a user in result . For example a logical procedure may select values for attributes of a member data record to return to a user a logical procedure may process one or more member records of an entity to select values for attributes of the entity to return to a user or both selecting attributes of one or more member data records related as an entity and then further processing the values of the attributes selected for each of the related member data records to select values for attributes of the entity to return to the user . Put another way a logical procedure may refine the set of or composite the values of attributes for one or more member data records to select a final set of values for one or more attributes such that these final values may be returned to the user in result . By allowing a user to select a logical procedure for the compositing of the values of attributes of member data records a user may be presented with values or attributes that more closely match a users desires.

It may be helpful here to illustrate examples of the processing of member data records using a logical procedure. depict examples of this processing. In particular depicts one embodiment of the processing of an example member data record to select values for attributes of the member data record while depicts the processing of example member data records of an entity to composite values for desired attributes corresponding to the entity.

Turning first to one embodiment of the processing of an example member data record is depicted. Suppose for purposes of this example a user has submitted query to MEI and that member data record has been provided to data management logic such that it can be processed to compose response to the user. Now suppose that member data record is associated with values for the identity attribute of Name and that values for the Name attribute comprises a current value of James T. Kirk and a first historical value of James Tiberius Kirk . Further suppose that member data record is associated with values for the non identity attributes of Social Security No. and Address and that value for the Social Security No. is 452 98 7865 and the value for Address is 1234 Easy St. Austin Tx. 78704 .

The user who initiated query may however not wish to view values for every attribute of the member data records returned to him or all the values of an attribute. Consequently in query a user may select or specify a logical procedure such that the member data records responsive to query may be processed according to the logical procedure selected to composite or refine the set of attributes or values for those attributes returned to the user such that the user can view desired results to his query.

Continuing with the example above the user may desire to view only the most recent value for the Name attribute and the value for the Address attribute. The user may also with to only view the street address city and state information for the Address attribute e.g. not any zip code information . In order to be presented with his desired results then in query the user may submit reference to logical procedure . Logical procedure may be operable to select the most recent value for the Name attribute of a member data record and the street address city and state information for the Address attribute. With respect to this example when member data record is processed using logical procedure referenced in query the value James T. Kirk is selected for the Name attribute the value 1234 Easy St. Austin Tx. 78704 is selected for the Address attribute and is further processed such that the value for the Address attribute becomes 1234 Easy St. Austin Tx. . The set of values for selected attributes produced by logical procedure in this case the attributes of Name and Address and their respective values of James T. Kirk and 1234 Easy St. Austin Tx. may then be used in assembling result to send to the user in response to query .

Proceeding to one embodiment of the processing of example member data records and which comprise an entity is depicted. Suppose for purposes of this example a user has submitted query to MEI and that member data records and which are linked as described above as an entity have been provided to data management logic such that member data records and can processed to compose response to the user regarding entity . Now suppose that member data record is from information source and is associated with values for the identity attribute of Name and that values for the Name identity attribute further comprises a value of James T. Kirk . Further assume that member data record is associated with values for the non identity attributes of Social Security No. and Address and that the value for the Social Security No. is 452 98 7865 and the value for Address is 1234 Easy St. Austin Tx. 78704 . Additionally suppose that member data record is from information source and is associated with values for the identity attribute of Name and that values for the Name identity attribute further comprises a value of James Tiberius Kirk . Further suppose that member data record is associated with values for the non identity attributes of Social Security No. Invoice No. and Address and that value for the Social Security No. is 452 98 7865 the value for Invoice No. is 324A2 and the value for Address is 6405 Ave. B Austin Tx. 78751 .

The user who initiated query may however not wish to view values for every attribute of an entity e.g. multiple linked member data records returned to him or all the values of an attribute. Consequently in query a user may select or specify a logical procedure such that the member data records responsive to query may be processed according to the logical procedure selected to composite or refine the set of attributes or values for those attributes returned to the user and the user can view the desired results to his query.

Continuing with the example above in order to be presented with his desired results then in query the user may submit reference to logical procedure . Logical procedure may be operable to select the value for the Name attribute associated with a member data record from information source if it exists the value for the Address attribute associated with a member data record from information source if it exists the value for an Invoice No. attribute. Logical procedure may be further operable to process the selected value for the Address attribute to obtain the street information from the Address attribute. With respect to this example when member data records and are processed using logical procedure referenced in query the value James T. Kirk is selected for the Name attribute the value 6405 Ave. B Austin Tx 78751 is selected for the Address attribute and is further processed such that the value for the Address attribute becomes 6405 Ave. B and the value 324A2 is selected for the Invoice No. attribute. The set of values for selected attributes produced by logical procedure in this case the attributes of Name Invoice No. and Address and their respective values of James T. Kirk 324A2 and 6405 Ave. B may then be used in assembling result to send to the user in response to query .

Again after reviewing the above descriptions and examples it will be realized that these logical procedures may refine and composite or otherwise process the value of attributes of one or more member data records according to almost any logic desired. The definition of these various logical procedures may also occur in almost any manner desired. In one embodiment for example a user may utilize a graphical interface to define each of the logical procedures where the graphical interface may offer a set of visual representations of functionality which the user may assemble to define a desired logical procedure and a logical procedure instantiated from the graphical representation created by the user. These logical procedures may also be hard coded during installation or configuration of MEI such that a user may select from a set of pre define logical procedures the logical procedures may be provided by one or more third party vendors etc.

In the foregoing specification the invention has been described with reference to specific embodiments. However one of ordinary skill in the art appreciates that various modifications and changes can be made without departing from the scope of the invention as set forth in the claims below. Accordingly the specification and figures are to be regarded in an illustrative rather than a restrictive sense and all such modifications are intended to be included within the scope of invention.

Benefits other advantages and solutions to problems have been described above with regard to specific embodiments. However the benefits advantages solutions to problems and any component s that may cause any benefit advantage or solution to occur or become more pronounced are not to be construed as a critical required or essential feature or component of any or all the claims.

