---

title: Digital file management system with unstructured job upload
abstract: Uploading digital assets from a source media directory into a web-based digital asset management system includes representing a structure of the source media directory, and the digital assets, as a XML object, and storing the XML object in a database. Based on the XML object, the source media directory structure and the digital assets can be displayed through a web-enabled user interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08190659&OS=08190659&RS=08190659
owner: Industrial Color, Inc.
number: 08190659
owner_city: New York
owner_country: US
publication_date: 20071017
---
This application claims the benefit of priority of U.S. Provisional Patent Application No. 60 896 186 filed on Mar. 21 2007.

Digital file management can include a wide range of processes such as capturing the digital files processing the files and delivering the finished files. Many individuals with different roles may be involved in various aspects of the process. In addition the individuals who are collaborating on a particular project often are in different geographical locations.

For example in the context of a digital photograph shoot the parties involved may include the photographer the talent the art director and the client. Each of those parties may be in a different geographical location yet they may need to collaborate on certain aspects of the project. Thus while the photographer may be at the site of the shoot the art director whose input is required as the shoot proceeds may be located far away in a different part of the world.

U.S. Patent Publication No. 2007 0073776 which is assigned to the assignee of this current application discloses an enterprise level digital asset management system that enables users to upload digital assets e.g. digital files such as photographs to a central on line site and to view edit manage arrange organize annotate and adjust the digital images. Multiple parties can communicate and collaborate with one another substantially in real time in connection with a project involving the digital images. The images can be stored archived edited sorted and sent using a central web accessible workspace that can be accessed remotely by the various persons working on the project. Users e.g. clients can order post production services such as file processing direct print output downloads to media file transfers file archiving and retrieval. The system can be fully automated to allow users to access their digital assets independently as well as order and pay for services through a built in ordering component. The system can consolidate various aspects of the digital photography workflow.

The present disclosure relates to additional features that can be incorporated into a digital asset management system such as the system disclosed in the foregoing patent application.

Various aspects are disclosed in the detailed description below the accompanying drawings and the claims.

For example according to one aspect uploading digital assets from a source media directory into a web based digital asset management system includes representing a structure of the source media directory and the digital assets as a XML object and storing the XML object in a database. Based on the XML object the source media directory structure and the digital assets can be displayed through a web enabled user interface.

Representing the source media directory structure and the digital assets as a XML object can include in some cases recursively traversing the source media directory and to build the XML object. The XML object can include for example a relational folder structure indicative of where folders in the source media directory are located with respect to one another. The XML object further can include information indicative of the location of the digital assets within the source media directory as well as information about the name and properties of the digital assets.

In some implementations the source media directory includes a sub directory. The source media directory structure can be uploaded for example from a client location.

Some implementations can include creating a second XML object representing the source media directory structure. The second XML object which contains no information about the location name and properties of the digital assets also is stored in the database. A visual display can be provided through the web enabled user interface of the source media directory structure and the digital assets based on the second XML object.

According to a related aspect a system for uploading digital assets from a source media directory into a web based digital asset management system includes a database and a server operable to represent the source media directory structure and the digital assets as a XML object and to store the XML object in the database. A web enabled user interface coupled to the server is operable to display the source media directory based on the XML object.

In another related aspect an article includes a machine readable medium storing machine readable instructions that when applied to the machine cause the machine to represent a source media directory structure of digital assets and the digital assets as a XML object and store the XML object in a database.

Other features and various advantages will be apparent from the following detailed description the accompanying drawings and the claims.

The system includes a data input upload module which allows digital files to be uploaded to the system. Although the particular implementation described below focuses on digital image files such as digital photographs various implementations may incorporate other types of digital files including for example data files video files audio files application files and documents. In some implementations the digital files can be uploaded directly to a file server. Other implementations may use a remote upload for example via the Internet or other network. A data pre processing module performs such processes as tagging the uploaded files with metadata and keywords creating preview images from raw and high resolution image files and linking the preview and high resolution files. The system includes a file storage and network module as well as a file management module .

A main module has several sub modules that allow users to interact with the system. The main module includes an administration sub module a client or user interface sub module a collaboration sub module and a work order processing sub module . The administration sub module allows an administrator to establish accounts jobs and permitted activities for individual users. The client or user interface sub module allows a user to log into the on line system view image files stored in the system search and sort image files view options rank or compare image files store selected image files in separate folders and edit and annotate image files among other functions. The collaboration sub module allows multiple users of the system effectively to share an on line workspace in real time. The work order processing sub module allows a user to place selected image files in an electronic shopping cart and to place orders for prints of the selected files.

A web interface module allows users using external devices e.g. personal or laptop computers to access the system through a website on the Internet or other network. User applications residing on the external devices may include for example an Internet browser a file transfer protocol FTP client application e mail and a virtual private network VPN for approved client access.

As shown in the example of the screen displayed to a user is divided into three section an image library section an image gallery section and an image preview section .

The image library section displays a job tree or directory . In the context of digital images e.g. photographs for example the job tree provides a hierarchical listing of jobs shoot dates shots and images. A particular job may include data from one or more shoot dates each of which has one or more shots associated with it. Each shot includes one or more images. The user can navigate through the job tree and select a particular job shoot date or shot by moving the cursor on the computer screen display to a particular item and clicking on that item. An electronic mouse or similar device can be used to move the cursor to the desired area of the screen. A user can search for a particular item in the job tree by entering the name of the individual file or collection of files into a search area and clicking the adjacent quick search button.

The screen allows the user to select one of several views in which the selected image files are presented in the image gallery section by moving the cursor and clicking on one of several icons that appear in the screen. The default view which is shown in is a thumbnail presentation of the images. Other views that can be provided include a listing of the image files and a metadata view of the images. The metadata view allows the user to view the image of each selected file together with certain metadata related to the image.

The image preview section displays a medium size view of a particular one of the images that can be selected for example by clicking on that image in the image gallery . In the illustrated implementation the image preview section is present regardless of which view of the image gallery is selected e.g. thumbnail list or metadata .

The user can enter various information into the system in connection with a particular image in the image preview section or with respect to an image in the default view of the image gallery section . For example the user can click on one of the boxes in the image preview section so as to rank or score the image on a scale of one to five. Another group of boxes A allows the user to indicate an action that is to be taken with respect to the particular image. In the illustrated implementation possible actions include select alternate approve kill and flag. The boxes labeled select alternate approve and kill also reflect a form of user ratings. For example a user may wish to indicate that a particular image is approved for use in the particular project or that the image is killed and should not be considered for use in the project. Additional groups of boxes B appear beneath each image in the default view of the image gallery . The functions of the boxes B is the same as the function of the corresponding boxes A in the image preview section . If the box labeled flag is selected then the particular image will be acted upon when the compare flagged images button located at the lower right hand side of the screen is selected. The functionality of the compare flagged images button is discussed below. The image preview section also lists information as to who initiated a particular action with respect to the displayed image and when the action took place.

A drop down menu A in the image preview section allows the user to add the displayed image to one of several folders e.g. a lightbox or shopping cart . Below each image in the default view of the image gallery is a drop down menu B that functions in a similar manner to the drop down menu A. Images also can be added to a lightbox or cart by clicking the button .

The image preview section includes an area where the user can enter text notes relating to the image. Information entered in the text notes section can be saved by clicking the save button in the image preview section . The notes are saved in a database and are tracked so that all notes associated with a particular image can be viewed in a history thread.

The screen of includes a drop down menu that allows the user to apply one of several filters and sorting arrangements to the content that appears in the image gallery . In the default mode information for all the images in the selected section of the image library are displayed in the image gallery . However the drop down menu labeled view allows the user to limit the images that appear in the gallery based on criteria selected by the user. For example the images can be filtered according to the ranking applied to the image or according to some other status information applied to the images e.g. selected alternative approved killed not killed or some combination of those choices . Similarly the user can select the order in which the image information appears in the image gallery by using the sort by drop down menu . For example the image information can be sorted so that the images in the gallery section appear in order of ranking or other status information. The upper limit on the number of images that appear in the gallery section can be selected using a drop down menu labeled of results. 

By clicking on the compare flagged images button the system displays selected images to allow side by side comparison. The images can be selected for inclusion in the side by side comparison by clicking on the boxes A or B labeled flag corresponding to the desired images.

The system also includes an image editor that provides various tools to allow a user to view magnified versions of the images and to make annotations and mark ups on the image or to make various color or other changes to the image.

Some of the foregoing features are discussed in greater detail in U.S. Patent Publication No. 2007 0073776 the disclosure of which is incorporated by reference.

An additional aspect relates to how the job tree see is populated and addresses navigating a digital file storage directory structure via a World Wide Web user interface.

In some implementations the digital assets that are to be uploaded into the system need to be pre arranged into a set folder structure so that they can be uploaded accurately.

In other implementations a job ingestion engine is provided to allow a user to select a job which can include for example any number of folders shoots and images or other digital files from any storage point in the system so that the job can be uploaded to the user s account through a World Wide Web interface without having to pre arrange the files that are to be uploaded in a pre specified format.

In a particular implementation the digital file management system includes a job ingestion engine which facilitates the ingestion of a job from any directory point on storage. The functions of the job ingestion engine can be implemented for example as part of the data input upload module and the data pre process module . Any storage point registered with the system configuration is available as a source of the digital assets through the user interface. Storage points from any available network location local area network wide area network client location remote location can be registered on the system and serve as an upload source. The system uses an unstructured upload of digital assets e.g. digital images through a web interface such that the files to be uploaded need not be in a pre specified format.

The source directory can contain images or sub directories that contain other directories or images. The user can choose how to organize digital assets in the source directory the digital asset management system then takes a snapshot of the directory structure.

In the following paragraphs an example is described using Extensible Markup Language XML . Other implementations however use different extensible markup and or text based serialization languages such as JavaScript Object Notation JSON .

In a preferred implementation uploading is accomplished as illustrated in by recursively traversing the source media directory and building an XML document that captures and represents the original directory tree along with all JPEG images or other digital files contained in each directory. Subsequently the backend service which in some cases is implemented as a Windows service continues to process the directory by storing the digital images or other digital files as well as various data about folders that contain the JPEG images or other digital files in a database .

To record the source media directory structure accurately at the time of the upload the job upload server takes a snapshot of the directory structure and expresses the hierarchy in XML format in the database . This XML entry includes the relational folder structure e.g. where the folders are in relation to each other sub folders and the location of all JPEG images or other digital files in the directory tree. In this way the system is aware of the relative location of all images and directories and can determine the access rights and conditions for any system user. The job upload server converts the size and color profile of each digital asset at the time of the upload.

To allow a user to access the directory tree structure quickly the backend service preferably also generates a second XML entry which contains the folder structure only along with any necessary database directory mapping but no information regarding the location name and properties of any images. The second XML document is processed by the system user interface to show the user a correct representation of the directory structure uploaded to the system. This allows the user to navigate through the stored files quickly so that the system provides the larger XML data for the particular digital assets e.g. images to the user interface only when a request to view images is made. By storing the directory contents in XML format in the database the system can provide granular access permissions to each folder and image on the system.

By taking a snapshot of the directory structure and ingesting this information in XML format in the database the system does not require that media be pre arranged into a set folder structure to be uploaded accurately. Any directory containing any number of sub directories and images can be added to the system without preparatory work.

From an administrator s perspective the unstructured file upload allows for fast content upload without requiring a pre defined directory structure. The original media folder structure is preserved in the database and presented to the user through a user interface via the web provider server . The job i.e. directory and digital images seen through the user interface is identical in structure to the media provided for upload. Each customer account can have a default upload point such as a FTP server of local server. The administrative user selects the source root directory from an upload job interface see . A drop down menu for example can be provided to permit selection of a desired root node in the directory. All folders and images below the selected root node are included in the job upload and indexed in the database in XML format. The administrative user also can apply privileges within the context of a role against any folder within the job directory structure.

The unstructured file upload can take the form of a distributed service. Thus the service can be installed multiple times on the same server or on multiple servers so that it can implement multiple applications at the same time.

Access to folders and images is determined according to permissions for each folder and the respective role assigned to each individual.

In some cases different asset derivatives can arrive at the system at different times and in different formats. For example some digital assets may arrive electronically whereas other digital assets may arrive by physical media. Thus a user may upload a large number of jpg files via FTP and then upload a large number of DNG files at a later date.

In the context of digital image files for example when uploading the digital files for a particular job the web enabled user interface initially receives for example only low resolution files of the digital images for display. Subsequently in response to the request of a user the user interface can receive and display the corresponding high resolution images. By deferring transmission of the high resolution files until they are requested by a user the overall efficiency and speed of the system can be enhanced. To make the high resolution files available through the web enabled user interface the high resolution files need to be associated with the corresponding low resolution files previously received through the web enabled user interface.

This section addresses how in some implementations digital asset files e.g. raw files TIF files high resolution files in the source media and in the destination directory are associated with one another. More generally this section provides a mechanism that allows the system to sift through hundreds or thousands of digital files and logically link them so the user can download or work with any available file for a given record. As explained below the system compares the database against the files on storage and indexes all files that have the same name but different extensions.

In one implementation the digital file management system includes a high resolution file mapping service that allows administrators or other users to upload high resolution images by mapping existing job assets with their derivatives i.e. the various versions of substantially the same image or other digital asset stored as files with different file extensions or as different file types . The system allows this task to be implemented not only at the shoot folder level but also at the job level. As illustrated in a high resolution mapping server finds all images in the destination directory that have the same file name but different file extension or type as a high resolution image in the source directory and appends this high resolution image to the existing job asset in the destination directory. The system registers the derivative asset by interpreting the file extension or type and associating the appropriate format. If synchronization is performed at the job or shoot date level then it opens the possibility that images in the source folder exist with identical filenames. In that case the system prompts the user as to whether it should skip this file and continue to the next file or whether it should abort the task. In the latter case the system can suggest running the task for each shoot folder where a copy of the image exists.

The foregoing task can in many cases require a significant amount time to complete particularly for jobs containing thousands of images. Accordingly an Application Programming Interface API can be used for this feature implementation. The workflow can be described as follows. First the user interface layer initiates a handshake with the high resolution mapping service represented by in to verify that it is ready to receive data before sending it. The high resolution mapping service returns a response containing all found high resolution images that match file extensions that the system supports. The response is then converted into JavaScript array. The JavaScript driven front end scans this array by feeding each found file information back to the server. The high resolution mapping service verifies whether the file is qualified as a new high resolution asset derivative. If a successful match is found the file is copied from its source location to the designated file storage a record transaction is entered in the database and the result of this operation is returned back to the caller. The database can be the same as or different from the database of .

The high resolution storage endpoint configured in the database makes it very easy to switch to a different network attached storage NAS box or cluster should the need arise.

A purpose of the high resolution file mapping service is to provide access to the various file versions that are produced through the lifecycle of digital media production. The initial job upload makes the low resolution preview assets available to the user for review. Once the high resolution files are available to the system e.g. uploaded to any storage node registered in the system configuration the high resolution file mapping service provides a mechanism for the administrator to make the high resolution files available for download to system users.

Using the high resolution file mapping administrator user interface see the administrator chooses an account which causes the user interface to display a default storage point for that account. The administrator then navigates the destination directory to choose the job or folder for the existing assets. Next the administrator chooses a location in storage for the high resolution files to be associated with the low resolution files. When the administrator clicks on the SYNCHRONIZE button using for example an electronic mouse the system searches through the designated storage point and finds all filenames that match files available in the existing job or shot. All known file types are copied to the system storage and the database is updated to reference the link between the high resolution images and the corresponding low resolution images. In addition the file type e.g. PSD RAW CR2 TIFF is recorded in the database along with the size of the file e.g. in megabytes .

Users on the system can download all available file types through the user interface. Thus when a user selects a particular thumbnail image from the images displayed for example in the screen of the user interface displays an enlarged version of the selected image and displays an icon to permit the user to obtain a list of all available files having the same name but different extensions as the selected image file see . In a particular implementation upon selection of the download Action icon a list is displayed of all available files their file formats and the size e.g. in megabytes of each file. The user then can click the desired file to cause the system to present that file to the browser for user download so that the particular digital image in the file is displayed through the user interface. In some implementations upon selection of a particular file for download the system automatically sends a message to an administrator to permit tracking of downloaded high resolution or other images so as to facilitate billing.

As explained below in the illustrated implementation the availability to a particular user of the high resolution file mapping service is determined by the particular role associated with that user for the specific job.

In another aspect the system allows an administrator or other user to define customized roles each of which combines elements of functionality and access privileges. For example each role defines what features and capabilities of the system individuals in that role have access to. Individual users or groups of users then are assigned access to individual jobs within the context of a role. Preferably individual user and groups cannot be assigned access to a job without first assigning a role to the user or group. Each user then can navigate the system user interface and is presented with the functions and privileges provided by the user s role for each individual job. As illustrated generally by different roles may be associated with different jobs such that an individual assigned to a particular role with respect to a particular job has access privileges and capabilities defined by that role.

An administrator can utilize the dynamic role assignment functionality in several ways including creating and managing system roles on a per account basis or assigning system roles to individual users on a per job basis. illustrates an example of a user interface screen that allows the administrator to create and define roles. All or some of the available features can be grouped together to define the features permitted for a particular role. The roles creation and management function allows all available ratings and tools to be assembled into granular roles. The administrator can assign various capabilities e.g. kill select alternate approve and notes to any role and determine whether the particular function should be hidden viewable or modifiable for that role. In addition the system allows the administrator to implement the role as one that is shared i.e. all ratings are viewable by other shared roles or as one that is private i.e. ratings are saved and viewable for each individual user in that role .

Once a role is defined it can be applied to a user and mapped to any job on the system. illustrates an example of a user interface screen that allows the administrator to assign a user to particular roles and jobs. To have access to a job on the system a user must be assigned to a job in a particular role. Thus roles can be assigned to individual users not only at the system level but at the job level. This allows the administrator to provide varying levels of access to jobs for each user on the system. Thus a particular user may be assigned to a role that provides one set of functions and access privileges with respect to a first job and may be assigned to another role that provides him with a different set of functions and access privileges with respect to a second job. For example with respect to a first job the user may be granted the rights to mark selects only whereas with respect to a second job the user may have full rights to mark selects kills alternates approvals and notes. Preferably only the tools for which the user has permissions to use are made available to that user regardless of where the digital assets e.g. images from a given job are moved on the system e.g. library lightboxes cart portfolios . To facilitate the administrator s establishing roles one or more pre defined roles can be defined and made available to provide a starting point. Nevertheless the administrator can define an unlimited number of custom roles.

Similar techniques can be used to define roles not only at the system or job level but also at any other level e.g. at an individual folder level .

Job access can also be marked for expiration on a certain date or after a specified time elapses. In that case the user will have access to the job within the context of the applied role until the expiration date occurs. Once that date comes access can be revoked or the role can change. For instance a user may have seven days during which he is permitted to mark ratings for a job. After the seven day period the user may have the right to review images only and have no permissions to change ratings options.

Image Data interchange describes the system interactions captured by the system. The interactions can be stored for example in a database. These interactions include but are not limited to entries made by users to indicate image ratings e.g. select alternate kill approve notes and other edits as well as interactions such as access history.

User interactions with the system can be enabled in isolated shared or hybrid mode. In particular at the role level image data interchange can be implemented in any of those modes. Thus user image data sharing is defined at the role level where rights are granted and implemented per job as described above.

In the isolated mode user interaction is isolated for each user in that role see . Thus for example all ratings and notes to the digital assets made by a particular user in that role can be viewed and edited by that user only. Nevertheless administrators or others assigned to a different role may still be able to access such ratings and notes depending on the privileges assigned to that role.

In the shared mode user interaction is shared see . Thus for example all users in a particular role can view and edit image ratings and notes regardless of which user assigned to that role initially made the ratings or notes.

In the hybrid mode users assigned to the role can review ratings and notes made by all other users. The hybrid mode can be useful for example for management and executive usage and collaborative decision making purposes.

The system can facilitate hybrid shared mode for every tool on the system for each job. For example the image ratings feature can be enabled in the shared mode while the image notes feature is enabled in the isolated mode with respect to the same image and the same user. This allows for a fundamental separation of shared and private data within the same interface accessing the same content.

For the administrator the user level image data interchange provides the flexibility to isolate users from each other and reduce error. It also provides the opportunity for managers to review the work of multiple people to better inform creative decision making. Once the administrator assigns a user to a job in an isolated role all ratings and information entered into the system for that job can be edited by that user only. In this scenario the asset ratings are stored separately for each user rather than universally for the asset itself. As a result many users can be assigned to a single job in isolated roles without requiring the same job to be uploaded multiple times.

For the user the system provides multiple levels of user level image data functionality. For example a supervising user has the ability to review image data interchange for all users on the system assigned to the same jobs. In this case the filtering sorting and review features allow the supervising user to view system conditions for specific users or groups of users. For instance a user in a supervisory role could review selected or killed images for a specific user or group of users. The separation of ratings from the asset also enables the system to generate aggregate information about an asset or collection of assets. For instance a supervisor may want to review all selected images in two recent jobs by two users in a group but not by a third user in the group.

Also the user level image data interchange provides aggregate and rules driven views. For instance for a network entertainment advertising partner to gain access to a digital asset e.g. an image that image must not have been killed or marked as not eligible for publicity materials. This condition is set by the system which tracks all users with access to a given image and determines whether it has been marked as a kill. Similarly photo editors working in groups can decide for example that an image may be approved only if a predetermined fraction e.g. two thirds or four fifths of the photo editors mark it as a select. Such information is stored by the system which automatically applies any such conditions to the status of the image. In this way individual users work in isolation but contribute to a collaborative decision making process determined by the collective input of all users with access to certain media.

