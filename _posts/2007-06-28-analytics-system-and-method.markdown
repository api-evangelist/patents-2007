---

title: Analytics system and method
abstract: An agentless software data collector in a customer computer network collects metrics data from managed devices on the network to provide to a remote data center accessed via a public wide area network (WAN) interface. The software data collector collects metrics data, as well as receives real-time queries, such as from a Remote Procedure Call (RPC) initiated from a hosted web interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08185619&OS=08185619&RS=08185619
owner: Compuware Corporation
number: 08185619
owner_city: Detroit
owner_country: US
publication_date: 20070628
---
This application claims the benefit of priority of U.S. Provisional Application No. 60 816 986 filed Jun. 28 2006 which is incorporated herein by reference in its entirety.

The present invention relates to systems and methods for providing analytics to a public wide area network WAN interlace for devices on a customer computer network.

Conventional distributed computing environments use a variety of methods to communicate data between clients and servers. One technology known as Remote Procedure Calls RPC allows an application in one location to trigger a subroutine or procedure to execute in another location. This RPC triggering in a client server scheme typically requires agents or direct established connection with an agent to employ RPC. When employed for managing network resources RPC agents are required on all devices on the network for which data is being gathered. The burden of agents on every device poses many problems. First the management task to ensure installation and operation of all agents is significant. Second many devices from which resource data is desired are incapable of executing and supporting an agent. In devices that do support agents the available data about the resource may be limited to the agent s capabilities. Further many devices are not configured to handle the load or operation of a data gathering agent. An agent based architecture for monitoring resources on a network is therefore burdensome and unreliable particularly where metrics are collected from different types of resources and necessary to generate desired analytics of the collective network resources.

Accordingly there is a need for an agentless system and method to provide analytics for managed devices in a customer computer network. There is also a need for providing analytics for various types of resources and respective metrics targeted for management on the desired computer network.

To answer these needs in one embodiment the present invention includes a method for providing analytics for a plurality of devices in a customer computer network via a public wide area network interface. The method includes providing a customer agentless software data collector within the customer computer network collecting analytics data from the plurality of devices with the customer agentless software data collector sending the analytics data from the customer agentless software data collector to a remote data center on a public wide area network where appropriate normalizing and aggregating analytics data receiving a request for analytics data for one or more of the plurality devices from a public wide area network interface to the remote data center and displaying analytics data for one or more of the plurality devices in response to the request.

In some embodiments the public wide area network is the Internet and the public wide area network interface is a web browser. In further embodiments of the invention the public wide area network includes wired and wireless public networks.

In embodiments of the invention a customer computer network includes one or more of a customer s wide area network local area network virtual network fiber network and combinations thereof including wired and or wireless networks.

In another embodiment the invention further comprises communicating one or more remote procedure calls between the public wide area network interface and the customer agentless software data collector. In some embodiments the remote procedure call s initiate system discovery at the customer agentless software data collector initiate changes to the settings of the customer agentless software data collector and or initiate the customer agentless software data collector to respond to a real time analytics inquiry.

In a further embodiment the customer agentless software data collector actively polls analytics data from the plurality of devices at predetermined time intervals.

Another embodiment of a method of the invention further includes abstracting a common metric from disparate metric data from two or more devices of the plurality devices and displaying a comparison of the two or more devices as to the common metric in the public wide area network interface. In some embodiments a method of the invention includes calculating a composite metric as the common metric for at least one of the two or more devices.

In other embodiments the inventions includes a system for providing analytics for a plurality of devices in a customer computer network via a public wide area network interface comprising a customer agentless software data collector within the customer computer network collecting analytics data from the plurality of devices a remote data center on a wide area network receiving analytics data from the customer agentless software data collector wherein the remote data center is accessible from a public wide area network interface and a reporting engine for providing analytics data for one or more of the plurality devices to the public wide area network interface.

In one embodiment a system of the invention includes one or more remote procedure calls communicated between the remote data center and customer agentless software data collector for remotely initiating an activity at the customer agentless software data collector. In embodiments an activity includes without limitation changing a setting of the customer agentless software data collector running system discovery and or responding to a real time query for analytics data.

In further embodiments the customer agentless software data collector includes a configuration for passively collecting analytics data from the plurality of devices at predetermined time intervals.

Embodiments of the invention will be described with reference to the accompanying drawings and figures wherein like numbers represent like elements throughout. Further it is to be understood that the terms used herein are for the purpose of description and should not be regarded as limiting. The use of including comprising or having and variations thereof herein is meant to encompass the items listed thereafter and equivalents thereof as well as additional items. The terms connected is used broadly and encompass both direct and indirect connections. Further connected is not restricted to physical or mechanical connections.

In one embodiment the invention provides a centrally controlled and web hosted data center application on a public wide area network such an Application Service Provider ASP model combined with a distributed agentless software data collector provided in a customer network that distributes load and monitors control of the customer network s and monitored devices. The agentless software data collector operates locally in a customer s data center s including across the globe while the data center central application maintains the clustered high availability database and hosted web based user interface.

In some embodiments a public wide area network includes the Internet and a web based interface includes an Internet browser. In other embodiments custom applications may be provided as interfaces to the data center application hosted on a public wide area network. In other embodiments public wide area networks may include other wired and wireless public networks beyond the Internet.

As used herein customer computer network is distinguished from the open public wide area network such as the open Internet as including a customer s wide area network local area network virtual network fiber network and combinations thereof including wired and or wireless networks. An agentless software data collector of the present invention operates on at least one computing device in the customer network. In embodiments of the invention the software data collector is installed from a download or from a storage medium. In other embodiments the data collector is provided pre loaded on a hardware device to or systems software used by the customer.

Referring to a high level architecture of an embodiment of the invention includes a customer network with devices from which collection of metrics data is desired. The customer network includes a software data collector connected to a remote data center on a public wide area network such as the Internet. The software data collector collects metrics data from the monitored devices and provides the data to the data center . A customer accesses analytics based on the metrics data from the remote data center via a public wide area network interface such as a web browser.

A polling client actively collects data which has been aggregated in monitored devices with a predetermined polling frequency. For example 

the polling client polls all desired SNMP devices for metrics data including performance and utilization data from the customer environment the polling client has been configured to monitor. In embodiments configuration is done centrally from the data center discovering devices for the data collector and then transferred down to the data collector . In embodiments polling client includes the following functional components crypto communications cache control polling control RPC call execution and configuration mgmt.

Crypto components of polling client interact with the polling proxy services in the data center with a high level of security.

Communications component of polling client is responsible for the basic data transmission to and from the data center . It initiates communications at predetermined intervals such as every 5 minutes or as otherwise configured for transferring data to the data center and passes configuration data to be stored locally in the data collector .

Cache control of polling client is used when communications to the data center is not possible and monitoring data becomes available on the data collector . The monitoring data is then stored in the local cache until the communications component gets a connection to the data center for transmission. This buffering adds reliability to the data collected and minimizes the effects of unreliable communications link to the remote data center .

Polling control component of polling client invokes the polling threads periodically such as 5 minute intervals to start the polling of SNMP devices for SNMP data. In one embodiment the polling threads are multiple independent threads. In other embodiments polling control component invokes API calls. Polling control handles the throttling of the polling activity up to some maximum number of concurrent polling processes at any given time. This ensures the data collector with the hardware it is running on is executing efficiently eliminating for example excess CPU thrashing memory swapping and context switching. Polling control also control the polling thread completion and resource release tasks.

RPC call execution component of polling client receives remote procedure call s from data center and executes them in real time and reports the results completion status back to the data center . These calls include without limitation configuration changes addition of new metrics and receiving software upgrade commands.

Configuration mgmt component of polling client maintains locally stored configuration data on durable storage making updates and reporting current configuration version.

A flow collector is another component of data collector in embodiments of the invention. The monitoring activities on the data collector are divided up between data collection such as SNMP collection and flow collection. In embodiments these two activities are independent including having their own respective installation routines in further embodiment. The independent embodiments enable the software footprint on the data collector to remain as small as possible. For instance if flow is not to be captured flow collector and its associated components may not be installed permitting a scaling up of SNMP monitoring if needed. In embodiments of the invention flow collector has similar functional components as the polling client including crypto communications cache control RPC call execution and configuration mgmt management .

Crypto component of the flow collector interacts with the flow proxy services in the data center with a high level of security.

The communications component of the flow collector is responsible for the basic data transmission to and from the data center . It initiates the communications every 5 minutes for transferring data to the data center and passes any configuration data to be stored locally in the data collector .

Cache control is used when communications to the data center is not possible and monitoring data becomes available on the data collector . The monitoring data is then stored in the local cache until the communications component gets a connection to the data center for transmission to the data center . This buffering adds reliability to the data collected and minimizes the effects of unreliable communications link to the data center .

RPC call execution component of the flow collector receives remote procedure call s from the data center and executes them in real time reporting the results completion status back to the data center . These calls include without limitation configuration changes addition of new metrics and receiving software upgrade commands.

Configuration management component of the flow collector maintains the locally stored configuration data on durable storage making updates and reporting current configuration version.

In further embodiments of the invention a SNMP poller is a worker thread spawned by the polling control of polling client to actively conduct device polling work from the target device with SNMP get verbs.

In embodiments SNMP poller invokes SNMP normalization such as an independent copy Python engine process for normalizing the SNMP polling data suitable for sending to the data center . The Python engine executes interprets the specific Python extensions which are specifically created for each metric collected manipulating the raw data to the desired form. Since these are executing as interpreted code in separate processes manipulating only data for a metric possible inference across metrics is avoided. This enables the reliable rapid development cycles for adding and maintaining the metrics.

In embodiments of the invention NetFlow Nflow Sflow listener provides passive collection as opposed to active collection of SNMP poller since target devices such as NetFlow or S flow devices are not probed for monitoring data. Listeners instead listen and capture the transmissions from these devices. The devices collecting flow data have been configured to send the data aggregated or not to the listeners IP address and UDP port.

In embodiments of the invention Nflow Sflow aggregator gets the transmitted data from the listener and aggregates if needed when the set time slice bucket such as 5 minutes is still receiving data from the device . When the device sends time slice expiration message signaling the bucket is completed the aggregator calls the flow parser to prepare the data.

The flow parser interprets the flow data collected and aggregated and converts the data to be ready for storing in the data center .

In embodiments of the invention discovery process is initiated by request of the customer from the data center individually for each data collector . The start discovery command as well as the needed parameters are passed to the discovery process via the RPC command execution channel. The discovery process probes all the IP addresses specified in the discovery parameters identifies each device s supported protocols and pertinent identification information returning the results back to the customer interface initiating the discovery.

With continuing reference to in one embodiment data center includes a web server farm . Web server farm is the customer facing scalable and high availability cluster of servers ensuring that customer access to the reports dashboard and alerts is readily available. Each web server hosts applications providing services including but not limited to presentation engine reporting engine and notification engine.

The presentation engine transforms the analytics data retrieved from the analytics store of a database cluster into a presentable format for a web browser or similar interface. Technologies such as and not limited to AJAX Asynchronous JavaScript and XML are used to partition the reports and dashboards for partial page refresh capability to improve the user experience.

The reporting engine handles formulating and performing mathematical calculations for the reported information deriving it from the data records retrieved from the analytics database .

The notification engine constantly monitors the error database for events needed to be forwarded to the users. The errors reported by the rules evaluation engine are analyzed and appropriate emails sms and pager messages are formed based on the data in the error record. These notifications are then disseminated to the right recipients as configured through the interface by the customer in the alerts definitions.

Polling proxy services at data center such as implemented in a clustered set of servers interface with one or more data collectors in all the customer s sites around the world. All the communication with the customer s SNMP polling client is done through this service. Polling proxy services functions include but are not limited to crypto listeners track configuration 5 minute inserts or such other time interval as configured aggregation rules evaluation status updates and RPC call tracking.

The polling proxy uses the crypto components to encrypt communications between the data center and data collector s in customer network with encryption methods.

Each poling proxy server opens listener threads for each data collector . These listeners establish the secure communications link such as over public wide area network for transferring data between the customer network and data center . In one embodiment communications are initiated from the data collector i.e. customer network for improved security and control.

Configuration tracking component ensures data collector runs the latest software version as well as the latest customer configuration settings on the data collector . It retrieves the software and configuration version from the data collector as well as the latest settings from the central configuration database . If there are differences in the versions it starts the upload process updating the data collector with the desired configuration.

In an embodiment of the invention 5 minute or such other time interval inserts of polling proxy operates as follows. Once every 5 minutes current analytics smallest collection granularity the data collector initiates metrics data transmission from the customer database such as including cache . During the transmission the configuration information is also transferred across a secured link in an embodiment of the invention.

Aggregation of polling proxy is a calculation component. The information coming from the data collector has already been normalize in embodiment of the invention and in most cases is ready to be inserted into the analytics store . In some cases additional aggregation and averaging is needed to complete the data entries for the metric template. For instance when data is calculated from several sequential 5 minute transmissions the aggregation component takes care of this calculation as well as storing relevant information from the previous transmissions at hand.

Rules evaluation provides data comparison such as for alarm triggering in embodiments of the invention. After each insert of a 5 minute transmission into the analytics store rules for generating alerts error records for dissemination to the alarm recipient are examined. The rules evaluation process evaluates for each alarm in the account by comparing the received calculated data against the set or calculated threshold. Some alarms are of multiple threshold type for each threshold is evaluated and logic stored in the alarm definitions is used to determine if an alarm error record trigger needs to be inserted into the store . As described the notification engine monitors these error records and sends the alarms out to the recipient.

The status update component handles collected data from the customer side data collector that is in a form of a status rather than measured value. The status update ensures status is inserted into the analytics store .

With respect to RPC call tracking RPC remote procedure calls are used to implement commands execution on the data collector initiated from the data center for example a call may be to discover newly available metrics for a device . These requests are not queued up for the next 5 minute transmission but an RPC call is initiated to the data collector at the customer network immediately. In one embodiment RPC tracking component keeps account of all the open not completed RPC calls waiting for a reply from the data collector as well as the call initiator coordinating the call to a request response pairs. If the data collector fails to reply the call is timed out and cleared from the open call list or if the initiator of the call fails to receive the reply the call is flushed out of the list.

With continuing reference to flow proxy services such as implemented in a clustered set of servers interfaces with data collector s . Communication with the customer s flow collector in the data collector is done through this service. Flow proxy services include but are not limited to crypto listeners track configuration 5 minute or such other configured time interval inserts aggregation CIDR rollup and RPC call tracking.

Like the polling proxy the flow proxy uses the crypto components to encrypt communication between the data center and data collector with encryption methods.

Each flow proxy server opens listener threads for each flow collector of the data collector . These listeners establish secure communications link for transferring data between data collector and data center such as over a public wide are network . All the communications are initiated from the data collector s side for improved security and control.

Configuration tracking component of flow proxy ensures data collector runs the latest software version as well as the latest customer configuration settings on the data collector . It retrieves the software and configuration version from the data collector as well as the latest settings from the central configuration database . If there are differences in the versions it starts the upload process updating the data collector with the desired configuration.

In an embodiment of the invention 5 minute or such other time interval inserts of flow proxy operates as follows. Once every 5 minutes current analytics smallest collection granularity the data collector initiates metrics data transmission from the customer database such as including cache . During the transmission the configuration information is also transferred across a secured link in an embodiment of the invention.

Aggregation of flow proxy is a calculation component. The information coming from the data collector has already been normalized in embodiment of the invention and in most cases is ready to be inserted into the analytics store . In some cases additional aggregation and averaging is needed to complete the data entries for the metric template. For instance when data is calculated from several sequential 5 minute transmissions the aggregation component takes care of this calculation as well as storing relevant information from the previous transmissions at hand.

In embodiments of the invention most of the Nflow and Sflow data is aggregated already on the flow collector in customer network however CIDR Classless Inter Domain Routing rollup of flow proxy performs the rollup to sub network aggregation based on the IP address categorization performed centrally in the flow proxy server s CIDR rollup component.

RPC call tracking in flow proxy is like RPC in proxy service . RPC remote procedure calls are used to implement commands execution on the data collector initiated from the data center for example a call may be to discover newly available metrics for a device . These requests are not queued up for the next 5 minute transmission but an RPC call is initiated to the data collector at the customer network immediately. In one embodiment RPC tracking component keeps account of all the open not completed RPC calls waiting for a reply from the data collector as well as the call initiator coordinating the call to a request response pairs. If the data collector fails to reply the call is timed out and cleared from the open call list or if the initiator of the call fails to receive the reply the call is flushed out of the list.

The global analytics store in embodiments of the invention resides on a scalable server farm with redundant servers acting as a single database cluster. The metrics data after it has been normalized is stored in the analytics store . In one embodiment the data store scales out by addition of server clusters each capable of handling several customer databases. Customers information is visible only on an account by account basis. The architecture also supports hierarchical account structure where a super account has visibility to all sub account data.

In one embodiment configuration data store is also hosted in a scalable redundant server farm. This architecture is scalable and one server cluster can host several isolated account s databases.

As described in some embodiments the invention supports multiple data collectors in the same customer network operating in the same location in fault tolerant manner or in geographically dispersed locations offering reliable global distributed monitoring. Each data collector is associated with an identifier allocated to a customer s account. The data collector is validated using this identifier when it tries to connect to the data center . The software data collector can be moved from one server to another safely by uninstalling un registers from data center it and reinstalling re registers with data center .

In embodiments an architecture further includes the capability for users to control the distributed data collectors and make real time requests of them from the central web based user interface auto discovery real time device status checking real time metric support discovery real time monitoring of known flow source addresses etc. . . . which immediately return data to the user from any number of data collectors distributed around the globe.

Both the polling client and the flow collector have been architected to support easy expandability beyond protocols such as but not limited to SNMP Sflow and NetFlow including WMI WBEM and SNMP walk. Addition of new components is also available in further embodiments such as adding a new DLL in Windows operating environments and exe in Linux platform.

In embodiments the inventions permits metrics combined from different data sources by providing an API and a platform for flexible scriptable and extensible network and device metrics which allow users and developers to create new metrics that combine multiple data points from a variety of sources including but not limited to SNMP WMI WBEM SMI ICMP and Raw TCP UDP communications into meaningful metrics that may perform a variety of calculations and manipulations on the data before storing the value.

Further embodiments of the invention include an isolated processing architecture that allows for metrics to be run in an isolated interpreter so that new metrics may be created at runtime and added to the system without the need for an extensive development and test cycle. Any individual metric is prevented from damaging the data used by other metrics or from crashing the system as a whole.

The present invention also enables abstracting and composition of metrics for unification of disparate data for representation in embodiments of the invention. Examples of a need for abstracting metrics includes 1 unification of disparate metrics for representation including management display alerting and reporting and 2 creation of Composite Metrics to aide monitoring and comprehension for disparate devices.

In the monitoring realm metrics are represented by identifiers that are unique to the device and system. In other words metrics on a Dell server are unique to that server and will typically be different than metrics on a Sun server. Not only does this increase the number of metrics necessary to monitor a network it limits any relationships or correlations across a network or community. In embodiments of the invention metrics are abstracted so that meaningful correlation and comparison can be accomplished. For example a user might want to compare the availability of all the devices on their network. Availability is defined by different metrics for different device and the present invention permits these metrics to be abstracted and tagged under the context of Availability. This abstraction allows a user to compare and graph the Availability of different devices on their network even though the metrics involved for each device may be unique.

In some instances it is also very helpful to monitor a certain behavior of a system but the distinct metric may not exist on that device. For example many industry professionals monitor the CPU Utilization of their network devices to help determine the health of their network. While some devices including Windows machines have metrics designed to report CPU Utilization others do not. A Sun machine is an instance of a device where the CPU Utilization metric does not typically exist.

 Composite Metrics can be used in embodiments of the invention to represent desired metrics even if they do not natively exist on a certain device. For the Sun machine it has been determined that CPU Utilization can be calculated using the CPU Nice CPU User and CPU System metrics. Embodiments of the present invention recognize these metrics create a new composite metric and calculate a value for CPU Utilization. Data is collected for this composite metric during regular polling periods. These composite metrics can be aggregated reported on and used for alerting. The composite metrics therefore allow a user to immediately monitor information relevant to them without requiring an in depth knowledge of device specific behavior.

In embodiments of the invention data collector has several methods for gathering and reporting data. One is actively polling data at desired time intervals such as 5 minutes. This means the collector grabs data from devices and send it to the data center to allow monitoring of metrics such as system performance and create graphing trending data for a relative timeframe. Another method is passively listening for data such as by NetFlow and Sflow listener and such data is also set to data center . Additionally data collector responds to real time requests. For example if the user wishes to run a network discovery the user can initiate this action from an interface such as a web interface on a computing device and discovery will immediately begin on customer network and the results displayed to the user in interface . Accordingly the data collector is enabled to communicate in distinct reporting and response methods and provides an agentless data collector for network management.

Referring now to one non limiting example is illustrated for a user that wants to identify and monitor an APC power supply among other potential devices on customer network .

A user via an interface to a public wide area network logs into a hosted website of data center with applicable account information. The user selects to run network discovery on an IP range of 10.254.0.0 10.254.0.128 searching for APC power supply .

The website initiates an RPC call via the RPC call tracking component on the polling proxy service . The RPC call tracking component passes the start discovery command and user defined parameters to the data collector on the customer network via a secure communications link across public wide area network such as the Internet.

The data collector routes the command and parameters to the RPC call execution component of the polling client .

The RPC call execution component receives the start discovery command and parameters and initiates the discovery process.

The discovery process probes all the IP addresses specified in the discovery parameters and identifies supported protocols and pertinent identification information for each device the APC power supply was found at IP address 10.254.0.23 .

The discovery process returns the results back to the data center polling proxy via the polling client .

The website receives the data from the polling proxy and displays it to the user via the interface such as a web browser.

Although the invention herein has been described with reference to particular embodiments it is to be understood that these embodiments are merely illustrative of the principals and applications of the present invention. Accordingly while the invention has been described with reference to the structures and processes disclosed it is not confined to the details set forth but is intended to cover such modifications or changes as may fall within the scope of the following claims.

