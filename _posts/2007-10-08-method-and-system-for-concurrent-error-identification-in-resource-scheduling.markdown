---

title: Method and system for concurrent error identification in resource scheduling
abstract: A method and system for handling real-time indications of resource scheduling conflicts. In one embodiment, the method includes a computer system including a user interface, display, processor, and some form of memory. Contained within the memory is a resource scheduling process that analyzes resource data, scheduling criteria, and work parameters to create a working schedule. In conjunction with the creation of a working schedule, the scheduling process detects resource conflicts that can inhibit the schedule's functionality. Once detected an identification process conveys the error to the user concurrently with the schedule process to provide the user with a real-time indication of resource conflicts. The indication is presented in an unobtrusive manner so as to not interfere or impede the scheduling process. In addition, should the specific resource causing the conflict be identifiable, the indication process conveys that information in a similar real-time methodology.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07752508&OS=07752508&RS=07752508
owner: Verint Americas Inc.
number: 07752508
owner_city: Melville
owner_country: US
publication_date: 20071008
---
This application is a continuation of U.S. patent application Ser. No. 09 837 251 filed Apr. 18 2001 now U.S. Pat. No. 6 959 405 and U.S. patent application Ser. No. 11 237 456 filed Nov. 15 2005 now U.S. Pat. No. 7 281 173.

The invention is in the field of real time error handling. More particularly this invention relates to the real time handling of resource scheduling conflicts and resolution of these conflicts in a complex scheduling environment.

Resource scheduling is a complex task that requires satisfaction of several potentially conflicting goals and constraints. In a complex environment a resource scheduling algorithm may reach its conclusion with several unfulfilled goals and exceptions. These unfulfilled goals frustrate the intended result of a working resource schedule. One such complex environment of resource scheduling is call center forecasting and agent scheduling. In this complex an diverse setting a significant amount of configuration and parameter specifications must be done via user interfaces before a final result can be produced. Existing applications for resource scheduling do not adequately produce an unobtrusive interactive mechanism for warning the user of parameter or configuration selections that are likely to result in poor performance or failure of the schedule.

Current algorithms produce warnings or an indication of a conflict that interrupt the scheduling process. Present systems known to one skilled in the art use modal interfaces to detect and inform the user of errors. Errors that are detected in mid stream of the user s work forcibly interrupt the user with a warning message. This warning message prevents the user from continuing work without at least acknowledging its presence. These warning mechanisms are rigid in their application and if disabled are completely ineffective at providing any type of failure notification. For example this warning process is accomplished through a series of programmed communications between the error detection program and the primary scheduling program that results in the scheduling operations ceasing.

The prior art fails to provide an unobtrusive or concurrent means to notify a user of a resource scheduling conflict. By forcing the user to interact with a warning or notification of a pending error the efficiency of the scheduling process suffers. If the user elects to dismiss the warning no further indication is present to convey to the user that the conflict is still present. Furthermore should a user elect to correct the conflict upon receiving notification the user is required to navigate independently in the program to the position in the program that contains the cause of the conflict which is both inefficient and costly.

A method and system for handling real time identification and notification of resource scheduling conflicts is described. In one embodiment the claimed method works concurrently with a resource scheduling process to indicate to the user in an unobtrusive manner that a resource conflict has occurred. The user upon selecting the indication of an error is provided with a description of the conflict and the option of suppressing or resolving the resource conflict. In another embodiment the indication is represented by a visual depiction of a stoplight located at the lower right corner of the display. The colors red and yellow are used to depict unsuppressed and suppressed conflicts respectively. One skilled in the art will recognize that the identification and notification of the conflict may bee through any number of media including but not limited to visual aural or tactile means.

If the user elects to resolve the resource conflict one embodiment provides a hyperlink utilizing ordinary Hypertext Markup Language HTML to link the user to the corresponding portion of the scheduling process where the conflict exists. Furthermore should the user elect to use the hyperlink to access the appropriate page the entry that is creating the conflict is highlighted for ease of identification. Once the conflict has been resolved the real time indication in this embodiment the stoplight will revert to a green light indicating that no resource conflicts exists. Conversely if the user elects to suppress the conflict the red light will change to yellow and remain illuminated until the suppressed conflict is resolved. Should a new conflict arise both the red light and the yellow light will illuminate indicating that suppressed as well as unsuppressed resource conflicts exist. Throughout these indications of conflicts the functionality of the scheduling process remains unaffected and the user is unimpeded should he or she decide to ignore the conflict indication.

A system and method for real time handling of error identification and notification in complex environments such as call centers are described. In the description that follows numerous specific details are set forth in order to provide a thorough understanding of the present invention. It will be evident however to one skilled in the art that the method and system presented may be practiced without these specific details.

One embodiment of a method for providing a real time identification of resource conflicts during a scheduling process can be used in the call center environment. A call center is an organization that answers and responds to telephone calls from customers for one or more particular organizations. Call centers also respond to other customer contacts such as e mail faxes voice over Internet protocol and web chat. Such centers possess a plurality of resources. A resource can be the equipment the employees the facilities or any other asset that facilitates the business in achieving its purpose. In a call center the individual employees answering the calls are agents and each possesses a particular skill set. Each employee is therefore an example of a resource with specialized skills. For example one agent may be able to respond to technical problems another may specialize in billing questions and still another may specialize in taking product orders. Each agent likely possesses multiple skill sets and a call center manager s challenge is to optimize the agents schedules so as to maximize the utilization of these skill sets without compromising the functionality of the center thus minimizing cost.

As the call center schedule is developed minor modifications in an employee s availability schedule or the call center s resource requirements can require the entire schedule to be regenerated. Numerous working parameters and employee criteria are established to ensure the profitability and efficiency of day to day operations. Considerations such as the maximum number of hours worked per pay period per employee the maximum period of work without a break or the necessity for at least two experienced call agents to be on call at any one time are examples of such criteria and parameters. In one embodiment of the present method as a scheduler inputs changes into a working schedule a real time indication is presented to the user if the alteration in the schedule affects a parameter or criteria adversely and will impair the overall functionality of the schedule.

Real time indications are a result of the scheduling program constantly recalculating the viability of the proposed data into a working schedule. As new data is input the entire schedule is reconfigured and checked for conflicts without any interface or input by the user other than the original entry of the data. The feedback to the user of any conflicts is immediate. For example an alteration of an agent s ability to maintain a work shift may have dramatic overall affects. Since the agent possesses a certain skill set and the call center must be maintained with a minimum level of skilled individuals the deletion of the agent s skills from the working schedule may result in the center being understaffed for a particular period. In such a situation the real time error identification system would present in one embodiment a red light depicted as but not limited to a stoplight at the bottom of the display to notify the user of the conflict.

The indication would occur as soon as the user altered the employee s schedule. Since the indication of the error is unobtrusive meaning that the display of the conflict or scheduling problem would not interfere with the normal operation of the scheduling program the user can continue to alter the schedule as he or she fees fit. Thus if in this example the user was aware that the alteration of the agent s work schedule would present a problem but has already envisioned a resolution of the conflict the user need not waste time by having to interact with warning system needlessly. Upon seeing the indication of a conflict the user could input the potential solution and see if the red light is removed indicating the conflict has been resolved thus validating the envisioned solution.

Likewise in another embodiment a user can first become aware of a conflict through the real time identification system. In this situation if a user alters the schedule the concurrent identification will unobtrusively notify him or her that a problem exists. The system described in this embodiment does not require the entire form or schedule to be completed before an error is detected. The user in this embodiment can select the identification symbol the red light in this case and be presented with a new window containing a description of the conflict as well as a proposed solution. The user can then elect to suppress or ignore the conflict resulting in the illumination of a yellow light in the stoplight depiction or select a hyperlink located within the description that will open the primary scheduling process window centered on the functional area containing the conflict. The window containing the conflict will further have the entry causing the problem highlighted for easy recognition. With the conflict resolved the new window can be closed and the original scheduling process continued without the presence of an error indication.

If the user elects to suppress the conflict the yellow light indication will remain illuminated until the conflict is resolved. The suppression of the conflict does not impede the real time identification of other conflicts. If an additional conflict is identified a new red light indication is displayed in conjunction with the yellow light indicating a new conflict as well as the multiple warnings or conflicts that are suppressed. Selection of the conflict identification will in this embodiment present not only descriptions and potential solutions of the current conflict but of the suppressed conflicts as well. Further if multiple conflicts exist that are not suppressed selecting the red light will list all of the conflicts for the user s review. The resolution of the resource conflict removes the scheduling error and cancels any indication present. This can be accomplished by following advice given in the resolution window or by disregarding the potential solution and inputting a different change that will alleviate the conflict.

An additional embodiment provides the user with a means to associate a conflict with a particular resource and provides a real time indication of that association to the user. As with the previous embodiments the identification and handling of resource conflicts occurs concurrently with the primary scheduling process. Once a conflict occurs an indication of the conflict is presented to the user in such a manner as to not interfere with his or her use of the application. In addition to the real time communication of a problem this embodiment provides a method wherein the specific resource associated with or causing the conflict is readily identified to the user.

In one embodiment a visual indication or symbol is placed next to the resource that is associated with a conflict. Furthermore this method of identification can differentiate the type of conflicts associated with each resource. If for example the conflict is rule based such as exceeding the maximum number of hours worked per week this embodiment conveys this information to user without interrupting the scheduling process by placing a symbol next to the resource. Likewise if a conflict is due to a scheduled meeting or similar calendar event the method can similarly communicate such information to the user without disrupting the normal operation of the scheduling process. In one embodiment the method places a visual symbol next to the conflicted resource and alters the color of the exclamation mark based on the type of conflict. Likewise the indication could be aural or any other similar medium to communicate the identification of a conflict to the user. If in this embodiment the exclamation mark is blue the conflict associated with that employee rises from a rule problem whereas if the exclamation mark is red the problem is based in a conflict with a meeting or other calendar events. These and other depictions are described in the following diagrams.

An additional embodiment further allows the user to review all the conflicts associated with a particular resource and individually select which conflicts are to be resolved.

At it is determined whether a conflict exists. If no conflict exists a green light is displayed to the user at . If a conflict does exist it is determined at whether the conflict is resource specific for example whether the conflict relates to a particular employee. If the conflict is resource specific it is determined at whether the conflict is rule based or calendar based. If the conflict is rule base a blue exclamation point is displayed at . If the conflict is calendar base a red exclamation point is displayed at .

Referring again to block if it is determined the conflict is not resource specific it is then determined at whether the conflict has been previously suppressed. If the conflict is suppressed it is then determined at whether there are other conflicts that are unsuppressed. If there are other conflicts that are unsuppressed both a red and a yellow light are displayed at . If there are no unsuppressed conflicts a green light is displayed at .

When a red green or yellow light is displayed the user can then click on the light for further information. If the user clicks on the red light a new window containing an HTML page is generated describing the conflict and suggesting potential solutions. To do this one embodiment utilizes a warning template file and the Windows registry.

If the user clicks on the yellow indication light an HTML page is generated describing the suppressed conflict or conflicts and potential solutions. Contained within the new HTML page is a hyperlink that connects the user to the specific window within the primary scheduling resource software where the conflicted resource can be altered. If the user clicks on the hyperlink one embodiment communicates with the primary resource scheduling software causing the display of the specific window necessary to modify the data causing the error. Additionally the data that should be altered is highlighted to facilitate resolving the conflict. If the user elects to suppress the conflict the conflict is marked appropriately and stored in the Windows registry. If the user elects to un suppress the conflict an HTML page is generated based on the new unsuppressed conflict.

From the above description and drawings it will be understood by those of ordinary skill in the art that the particular embodiments shown and described are for purposes of illustration only and are not intended to limit the scope of the invention. Those of ordinary skill in the art will recognize that the invention may be embodied in other specific forms without departing from its spirit or essential characteristics. References to details of particular embodiments are not intended to limit the scope of the claims.

