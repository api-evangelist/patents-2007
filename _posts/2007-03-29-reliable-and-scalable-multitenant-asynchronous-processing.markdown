---

title: Reliable and scalable multi-tenant asynchronous processing
abstract: In a multi-tenant environment, synchronous processing requests from clients associated with tenants are handled by middle tier servers, which forward requests for asynchronous processing to queues associated with organizational databases for each tenant directed by a locator service. A group of independent asynchronous processing servers are used to perform the asynchronous processing interacting with the databases in a distributed manner. The allocation of the requests among the asynchronous servers is managed by an exponential back off for organizations with no waiting requests algorithm combined with a quota system based on historic load for organizations that have requests. The independence of the synchronous and asynchronous processing servers, as well as the distributed interaction between the asynchronous processing servers and the databases enables scalability of the system based on request types and implementation of reliable recovery mechanisms.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07680848&OS=07680848&RS=07680848
owner: Microsoft Corporation
number: 07680848
owner_city: Redmond
owner_country: US
publication_date: 20070329
---
In hosted computer applications servicing a large number of customers on shared hardware referred to as a multi tenant system where requests for processing are asymmetric a need to process longer running requests at different priorities may arise. Furthermore the servicing of multiple customers on shared hardware requires that the system behave fairly with respect to handling requests from different customers.

Customer Relationship Management CRM solutions provide tools and capabilities needed to create and maintain a clear picture of customers from first contact through purchase and post sales typically in a hosted computer application environment. For complex organizations a CRM system may provide features and capabilities to help improve the way sales and marketing organizations target new customers manage marketing campaigns and drive sales activities. CRM systems may include many components hardware and software utilized individually or in a shared manner by users internal or external to the organization.

Thus a typical CRM system that hosts multiple customers tenants may process a large number of requests for data from a variety of data sources utilizing a plurality of servers. With at least a portion of the data stores and or servers being dedicated to particular tasks or tenant organizations providing reliable service with optimized performance is a challenging task.

This summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended as an aid in determining the scope of the claimed subject matter.

Embodiments are directed to providing scalable asynchronous processing services in a multi tenant environment. Synchronous processing requests from tenants are handled by middle tier servers which forward requests for asynchronous processing to queues associated with organizational databases for each tenant. A group of independent asynchronous processing servers are used to perform the asynchronous processing interacting with the databases in a distributed manner. The independence of the synchronous and asynchronous processing servers as well as the distributed interaction between the asynchronous processing servers and the databases enables scalability of the system based on request types and implementation of failure safe recovery mechanisms.

These and other features and advantages will be apparent from a reading of the following detailed description and a review of the associated drawings. It is to be understood that both the foregoing general description and the following detailed description are explanatory only and are not restrictive of aspects as claimed.

As briefly described above scalable and reliable multi tenant systems may be implemented by distributing synchronous and asynchronous processing requests between independent groups of servers that interact with organizational databases through a locator service. In the following detailed description references are made to the accompanying drawings that form a part hereof and in which are shown by way of illustrations specific embodiments or examples. These aspects may be combined other aspects may be utilized and structural changes may be made without departing from the spirit or scope of the present disclosure. The following detailed description is therefore not to be taken in a limiting sense and the scope of the present invention is defined by the appended claims and their equivalents.

While the embodiments will be described in the general context of program modules that execute in conjunction with an application program that runs on an operating system on a personal computer those skilled in the art will recognize that aspects may also be implemented in combination with other program modules.

Generally program modules include routines programs components data structures and other types of structures that perform particular tasks or implement particular abstract data types. Moreover those skilled in the art will appreciate that embodiments may be practiced with other computer system configurations including hand held devices multiprocessor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers and the like. Embodiments may also be practiced in distributed computing environments where tasks are performed by remote processing devices that are linked through a communications network. In a distributed computing environment program modules may be located in both local and remote memory storage devices.

Embodiments may be implemented as a computer process method a computing system or as an article of manufacture such as a computer program product or computer readable media. The computer program product may be a computer storage media readable by a computer system and encoding a computer program of instructions for executing a computer process. The computer program product may also be a propagated signal on a carrier readable by a computing system and encoding a computer program of instructions for executing a computer process.

Referring to diagram of example synchronous and asynchronous processing between a client and servers is illustrated. Synchronous and asynchronous processing may be performed in many topologic settings between clients and servers each of which may be virtual or physical .

The basic configuration in shows client communicating with server for synchronous processing which is typically handled by the same server in real time. On the other hand requests for asynchronous processing from client are forwarded to a queue by server . Queue maintains the requests according to a prioritization scheme first come first serve or other schemes and provides them to asynchronous server . As responses are received from asynchronous server and provided back to the requesting client through server the order of pending requests in queue is adjusted accordingly.

In an operation client receives information from discovery service regarding which service or servers in scalable group it may talk to. According to other embodiments client may be provided credentials by discovery service that enable it to communicate with web services in scalable group . A particular server within web services may be assigned to the client by random selection according to a predefined algorithm e.g. a load balancing algorithm and the like.

In conjunction with the discovery service locator service may provide a purpose of the service and which databases of organization databases may be used by a server of the web services . Organization databases include separate virtual or physical databases for each of the organizations participating in the multi tenant system. For example a financial services system may include separate databases for each of the participating financial organizations banks etc. that store account information account access information and so on. Information about the individual databases their configuration any redundancies and the like may be stored in configuration store . Configuration store may further include data associated with the discovery and or locator services.

When the request from the client is received at one of the servers of web services a determination is made whether the request involves synchronous processing or asynchronous processing. The web servers may be stateless machines. If synchronous processing is requested the web server itself may provide the service although redundancies for fail safe mechanisms may be built in . If asynchronous processing is requested the request is provided to a queue associated with the appropriate organization database. The queue may be physically a part of the database. As the request comes up in the queue one of the asynchronous servers is contacted for processing the request. A relationship between the asynchronous servers and the individual organization databases is a truly distributed one where each server may work with any one of the databases. This distributed interaction between the asynchronous servers and the organization databases provides the ability to automatically recover from failures in the asynchronous processing machines by allowing the databases to connect to another available server when one fails.

As discussed below in more detail an exponential back off algorithm for organizations with no waiting requests combined with a quota system based on historic load for organizations that have requests may be implemented according to further embodiments to optimize system performance by keeping overall system load to a minimum. The system can also keep up with varying quantities of work over time from the clients using the load distribution algorithm and the distributed server database interaction.

Due to the independent distribution of synchronous and asynchronous work and the interaction between the servers and the databases any part of the group is scalable. Thus multiple instances of the servers and or databases may be provided to address increased workload additional organizations data capacity and so on.

According to a first scenario a request that involves synchronous processing is received from the client by web server of the group of web servers . As mentioned above the selection of web server for the client request may be random or based on an algorithm. Because the request is for synchronous processing it is handled by the web server itself and the response provided to the requesting client by the web server.

According to a second scenario a request that involves asynchronous processing is received from the client by web server . The client may belong to an organization tenant whose data is stored in database of the database group . Locator service in conjunction with configuration store may provide information to web server as to which database it needs to access. According to some embodiments each database may also include a queue for keeping the asynchronous processing requests. Thus the request from web server is placed in the queue for database .

The databases can interact with servers of the asynchronous cluster in a distributed manner enabling redundancies failure recoveries and efficient load distribution. Locator service which may optionally be part of the scalable group may also provide connection and status information about the databases to the asynchronous servers. When the request is picked up by one of the asynchronous servers from its queue at database the processing is completed and the response provided to the client through the same web server. According to other embodiments the web servers may also be redundant such that another web server may pick up the task of receiving the processed data from the database or asynchronous server and provide to the client if the original web server is down.

In a CRM system according to embodiments each customer may be granted their own logical database also called an organization . When customers make requests that are deemed by the system to be long running they are recorded in a queue. The asynchronous processing cluster then determines when requests are waiting to be processed in each organization. This is accomplished by polling the organizations queues. As a result two problems may be encountered a large amount of requests to determine if an organization has any outstanding operations and the problem of determining how many requests to process at each polling interval from an organization. If too many are taken from one organization another organization s requests may not be able to be processed called starvation .

According to other embodiments an algorithm addresses both challenges through a technique called exponential back off for organizations with no waiting requests combined with a quota system based on historic load for organizations that have requests. The algorithm for determining which customers have long running operations pending optimizes system performance by keeping overall system load to a minimum and keeping up with varying quantities of work over time per customers.

Furthermore it is common for customer requests to be treated uniformly regardless of their cost. Even when asynchronous processing is employed it is commonly performed on the same hardware as the synchronous processing. By providing independent scaling of short running operations synchronously on the middle tier cluster and long running operations asynchronously on the asynchronous host cluster a multi tenant system is enabled to be expanded to address the processing requests from clients based on the type of requests enabling tenants to be treated fairly by the system.

Moreover the distributed interaction between servers of the asynchronous cluster and the organization databases provides the ability to automatically recover from failures in the asynchronous processing machines by allowing the databases to connect to another available server when one fails.

Referring to CRM application is any application that uses CRM client to send requests to CRM web services . CRM Server is a collection of many CRM platform modules exposed as CRM web services . Asynchronous Queue Data Access is an Application Programming Interface API that provides access to the queue of asynchronous operations.

CRM tenant database s are one or more physical or virtual databases that are used to store CRM metadata entities as well as asynchronous queue itself. As described above locator service is a service that provides an API to retrieve a list of organizations in a deployment. Asynchronous processing host is a service application that invokes operations asynchronously. According to some embodiments an external component may be used to execute workflow operations inside the asynchronous processing host . Extensibility API is a collection of interfaces and classes that are released as part of CRM service and can be used by plug in code. Extensions are code blocks that implement synchronous as well as asynchronous operations.

In a multi tenant deployment there may be many instances of the CRM server and many instances of the asynchronous processing host. Due to a reliable queue implementation where long running requests are queued by the CRM server for later processing each of these server clusters can be scaled independently.

According to some embodiments a modified round robin approach may be utilized to fetch pending requests from organizations queues and not to create an overwhelming load of polling empty queues. The order to visit organizations may be randomized by each asynchronous host in order to avoid convoying behaviors across multiple hosts in a cluster. All states for each organization may be initialized to 0 priority and wait iterations . Such an algorithm may proceed as follows for each poll interval 

The algorithm may be optimized for each system by setting the following constants poll interval poll threshold max capacity min priority and max priority. These values may be parameterized for optimum operation. Thus such an algorithm may have the affect of polling idle organizations less frequently and increasing the number of requests to dequeue from an organization if the number dequeued last time was insufficient to keep up with the incoming rate for that organization up to a maximum threshold in order to not be unfair to organizations with a much smaller incoming rate .

The scalable asynchronous processing systems and operations described in and are exemplary for illustration purposes. A system for providing asynchronous processing services in a multi tenant environment may be implemented using additional or fewer components using the principles described herein.

Such a system may comprise any topology of servers clients Internet service providers and communication media. Also the system may have a static or dynamic topology. The term client may refer to a client application or a client device. While a networked system implementing scalable asynchronous processing may involve many more components relevant ones are discussed in conjunction with this figure.

Requests for processing may come from tenants using individual client devices or application server in a networked multi tenant system. Such a system may also be implemented in one or more servers e.g. servers and accessed by the client devices or applications . One or more web servers physical or virtual such as web server receive the requests and direct them to the appropriate resource. If the request is for synchronous processing the web server s may handle the request directly. If the request is for asynchronous processing web server may involve asynchronous processing queues in organization databases and a group of asynchronous servers e.g. server .

Organization databases may be embodied in a single data store such as data store or distributed over a number of data stores. Dedicated database servers e.g. database server may be used to coordinate data retrieval and storage in one or more of such data stores.

Network s may include a secure network such as an enterprise network an unsecure network such as a wireless open network or the Internet. Network s provide communication between the nodes described herein. By way of example and not limitation network s may include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media.

Many other configurations of computing devices applications data sources data distribution systems may be employed to implement scalable multi tenant asynchronous processing. Furthermore the networked environments discussed in are for illustration purposes only. Embodiments are not limited to the example applications modules or processes.

Web services may be a separate application or an integral module of a hosted multi tenant service application that provides data and processing services to client applications associated with computing device . Locator service may provide services associated with determining a purpose of the service and which databases to use for web servers as well as asynchronous processing servers as described previously. This basic configuration is illustrated in by those components within dashed line .

The computing device may have additional features or functionality. For example the computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included. These devices are well known in the art and need not be discussed at length here.

The computing device may also contain communication connections that allow the device to communicate with other computing devices such as over a wireless network in a distributed computing environment for example an intranet or the Internet. Other computing devices may include server s that execute applications associated with a data access and directory service. Communication connection is one example of communication media. Communication media may typically be embodied by computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.

The claimed subject matter also includes methods. These methods can be implemented in any number of ways including the structures described in this document. One such way is by machine operations of devices of the type described in this document.

Another optional way is for one or more of the individual operations of the methods to be performed in conjunction with one or more human operators performing some. These human operators need not be collocated with each other but each can be only with a machine that performs a portion of the program.

Process begins with operation where a request for processing is received from a tenant. As described previously tenants of a multi tenant hosted service are typically associated with organizations each of which has a dedicated database within the system. Prior to receiving the request the tenant may be provided credentials and information as to which web server it should contact from a discovery service associated with the multi tenant hosted service. Processing advances from operation to decision operation .

At decision operation a determination is made whether the request is for synchronous processing or asynchronous processing. The determination may be based on user specified parameters a type of the request e.g. requests that require large amounts of data to be processed extensive processing and the like . If the request is for synchronous processing the process advances to operation . Otherwise processing moves to operation .

At operation the synchronous processing is handled at the receiving web server. Processing moves from operation to operation where a response based on the result of processing the request is provided to the requesting tenant. After operation processing moves to a calling process for further actions.

At operation information regarding which organization database is to be used is retrieved from a locator service associated with the hosted service. Processing moves from operation to operation where the request is placed in a queue for the selected database. In some embodiments the queue may be physically a part of the database. Processing moves from operation to decision operation .

Once the asynchronous server is introduced to the client request placed in asynchronous queue the web server may return to the client and the web server portion of the process may end. As a separate process as indicated by the dashed line connecting operation and decision operation the asynchronous processing is performed.

The asynchronous processing portion begins at decision operation where a determination is made whether an asynchronous server is available to handle the request. If an asynchronous server is not available processing moves to operation where the service waits until an asynchronous server becomes available. Assignment of asynchronous servers may be determined using an algorithm as described above in conjunction with .

If an asynchronous server is available processing advances to operation where the assigned asynchronous server handles the request interacting with the assigned database. The interaction between the asynchronous servers and the databases is a distributed one allowing efficient distribution of workload and implementation of reliable recovery mechanisms. Processing moves from operation to operation .

At operation a response based on the result of processing the request is provided to the requesting tenant. In the case of asynchronous processing the client is not held until the processing is completed. Instead the client is released and enabled to poll at a later time to check on the progress of the asynchronous processing. After operation processing moves to a calling process for further actions.

The operations included in process are for illustration purposes. Providing scalable multi tenant asynchronous processing may be implemented by similar processes with fewer or additional steps as well as in different order of operations using the principles described herein.

The above specification examples and data provide a complete description of the manufacture and use of the composition of the embodiments. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims and embodiments.

