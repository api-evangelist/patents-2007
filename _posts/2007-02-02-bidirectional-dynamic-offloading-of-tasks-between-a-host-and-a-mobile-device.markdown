---

title: Bidirectional dynamic offloading of tasks between a host and a mobile device
abstract: One or more functions are exposed by a mobile device to a host connected to the mobile device. A function of the one or more functions is executed at the mobile device in response to a request from the host, wherein the function is associated with a host task. The result of the function is returned to the host.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07966039&OS=07966039&RS=07966039
owner: Microsoft Corporation
number: 07966039
owner_city: Redmond
owner_country: US
publication_date: 20070202
---
Today s mobile devices often have advanced processing power and specialized circuitry. An example of such specialized circuitry includes a Digital Signal Processor DSP in a mobile phone. Mobile devices may be connected to a host such as a personal computer for exchanging data between the mobile device and the host. However current designs do not consistently allow for host workflows to be performed by the computational resources of a connected mobile device and in cases of traditionally constrained devices like flash memory drives make it almost impossible.

The following presents a simplified summary of the disclosure in order to provide a basic understanding to the reader. This summary is not an extensive overview of the disclosure and it does not identify key critical elements of the invention or delineate the scope of the invention. Its sole purpose is to present some concepts disclosed herein in a simplified form as a prelude to the more detailed description that is presented later.

Embodiments of the invention provide offloading of tasks between a host and a mobile device. In one embodiment a host may use a function of a mobile device to perform host tasking. The processing power and dedicated circuitry of a connected mobile device may be exploited by the host system to optimize the workflow of the host system. In another embodiment a mobile device may offload device tasking to a host.

Many of the attendant features will be more readily appreciated as the same become better understood by reference to the following detailed description considered in connection with the accompanying drawings.

The detailed description provided below in connection with the appended drawings is intended as a description of the present examples and is not intended to represent the only forms in which the present examples may be constructed or utilized. The description sets forth the functions of the examples and the sequence of steps for constructing and operating the examples. However the same or equivalent functions and sequences may be accomplished by different examples.

Embodiments of the invention may be used with short lived tasks invoked on demand. In one example a personal computer host may offload complex cryptography computations to a storage device having cryptography dedicated circuitry. In general cryptography may be performed much faster in hardware than by software instructions executed by a processor. Further cryptography performed by the dedicated circuitry is usually more secure than software instructions and dedicated circuitry may be required for using some cryptography algorithms e.g. government use .

In another example a personal computer host may offload digital rights management computations or media content watermarking to a connected device such as a digital camera . The digital cameral may include dedicated circuitry or special routines that may be more efficient than the personal computer in performing these media related tasks.

Connection may include a wired or a wireless connection between host at interface and mobile device at interface . In one embodiment host and mobile device are in close proximity to one another as part of a user s Personal Area Network PAN . Examples of connection include USB wired or wireless firewire IEEE 1394 radio frequency e.g. Bluetooth Wi Fi etc. infrared and the like.

In one embodiment a mobile device may be host capable and serve as a host in some scenarios. For example a mobile phone may act as mobile device connected to a laptop computer acting as host . In another example the same mobile phone may act as host connected to a memory card acting as mobile device . In this example the memory card is a host dependent mobile device.

Host may include a processing unit and memory . Host also includes an interface for inputting outputting data from host . Host may also include a storage device such as a Hard Disk Drive or flash memory not shown .

Mobile device may include a controller coupled to storage . Controller may manage the reading writing of data on storage as well as perform other functions. Storage may include a magnetic disc drive an optical drive non volatile storage such as flash memory and the like.

From the viewpoint of host mobile device is considered a transient device. Mobile device may be connected disconnected from host without warning to host . It will be appreciated that mobile device may be connected disconnected from host without restarting host . The transient nature of mobile device leads to the dynamic aspect of embodiments herein. Host may take advantage of the processing capabilities of mobile device when the mobile device is present but when mobile device is disconnected the host simply notes the unavailability of the device for completing host tasking. Failover handling of situations when mobile device is disconnected from host before an offloaded task is completed is discussed below. Also in some embodiments tasks of mobile device may be offloaded to host for completion. Thus the offloading of tasks between host and mobile device may be bi directional.

Turning to an embodiment of mobile device is shown. Mobile device may include a smart storage device such as a USB Flash Device UFD a memory card and the like. In one embodiment a smart storage device is host dependent for operability. Mobile device may also include free standing devices such as media players mobile phones Personal Digital Assistants PDAs and the like.

Controller may include a processing unit and non volatile storage NVS . Processing unit may include a general processor such as a 32 bit Reduced Instruction Set Computing RISC processor. While a single processing unit is shown embodiments of mobile device may include multiple processing units such as multiple processors multiple cores and the like.

In one embodiment NVS has stored firmware that may be executed by processing unit . Firmware may include an operating system such as a Real Time Operating System RTOS one or more applications and the like for mobile device . Firmware may also include instructions for executing embodiments of the invention.

In the embodiment of controller includes dedicated circuitry . Dedicated circuitry includes hardware that may perform specialized operations. Examples of dedicated circuitry include an Application Specific Integrated Circuit ASIC a Field Programmable Logic Array FPLA Field Programmable Gate Array FPGA and the like. Functionality performed by dedicated circuitry may include cryptography digital signal processing digital rights management and the like. Embodiments herein enable host to utilize the functionality of dedicated circuitry for more efficiently completing host workflows.

Turning to a flowchart shows the logic and operations of offloading tasks from a host to a mobile device in accordance with an embodiment of the invention. Flowchart of discussed below shows embodiments where device tasks are offloaded to the host for the host to complete. It will be understood that at least some of the logic of flowcharts and may occur at the same time. In other words in some instances host may offload tasks to mobile device while at the same time mobile device offloads tasks to host . Thus the offloading of tasks between host and mobile device may be bi directional.

In one embodiment the logic of flowchart occurs during a session when the mobile device is connected to the host. A single session begins when the mobile device is connected to the host and ends when the mobile device is disconnected from the host. From the perspective of the host the mobile device is transient and the presence of the mobile device is unpredictable. Further the length of any session with the mobile device is unpredictable and the time between sessions is also unpredictable. As discussed below embodiments of the invention cope with the transient nature of the mobile device when offloading host tasks.

Starting in block a mobile device connects to a host. The connection may be via wired connection or a wireless connection. In one embodiment of the invention the host does not need prior knowledge of the mobile device or task offloading in order to implement embodiments of the invention. This may be the first time the host has seen the mobile device. The mobile device may provide the host the means for offloading tasks to the mobile device. In one embodiment setting up the connection may include establishing a secured communication session between the host and the mobile device.

In one example the mobile device may be used with a public host such a public computer at a kiosk. For example a user wishes to use a public computer at an airport to check email on the user s corporate network. However the connection requires a certain cryptography algorithm that is not supported by the public computer or may take too long to execute by the limited processing capabilities of the public computer. The user may connect their USB Flash Drive UFD that contains dedicated cryptography circuitry to the public computer. With embodiments herein the public computer may use the dedicated cryptography circuit of the UFD to connect to the user s corporate network. In this example all footprints of the session with the public host may be removed when the session ends.

Proceeding to block the mobile device exposes its functions to the host. In one embodiment the mobile device functions are exposed as interfaces that may be utilized by the host. For example the mobile device may expose an ENCRYPT interface that will encrypt a block of data for the host. Embodiments of exposing device functions are discussed below in connection with .

Continuing to block the mobile device uploads host policies to the host for offloading host tasks. In one embodiment this may be the first connection between the host and the mobile device and the host may not have stored host policies. Also by providing the host with default host policies prior knowledge of task offloading by the host is not necessary to carry out embodiments of the invention.

Continuing to block the host applies host policies. In one embodiment the host has received polices from the mobile device as described in block . In another embodiment the host may have already stored host policies or have stored host policies from a previous session with the mobile device. In yet another embodiment the host may acquire and then merge with any policies already stored on the host host policies from a central server in a managed network. For example a managed network may want to push the same policy to all or groupings of managed hosts. Alternatively policy stored at a central server may be tailored for each particular host. Also the ability to update the policy at a central server location would ease system administration of the managed network.

As used herein a host task refers to a computational task to be performed by the host. When a mobile device is connected the host policies determine whether execution of a host task may be performed by a function exposed by the mobile device. In general one or more device functions may be used to complete a host task.

For example a host task may be to encrypt a text document of 500 KB using encryption algorithm A. The mobile device has exposed a function that will encrypt 100 KB blocks of data using encryption algorithm A with dedicated circuitry. The host may complete the host tasking of encrypting the text document by calling the device function 5 times to complete the host tasking.

In one embodiment multiple functions may be called in the form of a batch using a script language executable by the mobile device. The mobile device would have knowledge of the batch language and be able to execute the batch language for executing multiple functions.

Host polices control offloading of tasks to the mobile device. For example a host policy may be if a device with encryption algorithm A is present then offload algorithm A encryption tasks to the device. The host polices may be modifiable by a user or a system administrator. In one embodiment host policies may be associated with an administrative polices such as security. For example the host may not offload tasks until the mobile device can be authenticated.

In another embodiment host policies may be associated with host performance issues. For example tasks will be offloaded where a significant increase in performance is expected e.g. above some threshold . In another example a task that is relied upon for a lengthy series of follow on tasks may not necessarily be offloaded. This is because of the expected transient nature of the mobile device. If the mobile device is disconnected while the mobile device is still performing the task then the host will not receive the results of the offloaded task. In this instance the host may have to perform the task itself from the beginning and thus waste time.

In another embodiment host policies may monitor the health of the mobile device. The host may monitor performance factors of the mobile device such as processor load available memory space and the like. Another mobile device health indicator may include execution time of an offloaded task. Host policies may suspend host task offloading until mobile device health improves.

Proceeding to block of flowchart the host offloads a task to the mobile device by calling one or more exposed mobile device functions as described in block . As discussed further below in one embodiment these functions may be exposed as interfaces such as APIs to applications and the operating system.

In an alternative embodiment the host may offload a task by downloading an executable image or an intermediate language to the mobile device. For example the offloaded task may include an executable routine written in a platform neutral language. The mobile device may advertise support for the platform neutral language during the connection handshake. The device driver on the host may download the executable routine to the mobile device when needed i.e. on the fly . The return of the completed task may also be handled by the device driver. In another example the intermediate language may include an interpreted language that may be run using an interpreter on the host or a compatible interpreter on the mobile device.

While flowchart shows an embodiment of offloading one task from the host it will be appreciated that more than one task may be offloaded to the mobile device at one time. It will also be understood that one or more tasks may be offloaded at different times to the mobile device without regards to when results of the tasks are returned to the host. These embodiments and others may be implemented through the host polices. For example task A may be offloaded at time T and task B offloaded at time T. The execution of tasks A and B may occur without regard to the other. Also tasks A and B may not even be associated with each other. For example task A may be related to encrypting data for storage on the mobile device and task B may be related to signal processing of a Wi Fi signal by the DSP of the mobile device.

Continuing to block the mobile device performs the function in compliance with mobile device policies. A mobile device s policies may be related to security administrative items and the like. For example a mobile device may need to authenticate the host before performing any offloaded task requests. In another example a UFD may include crypto hardware for use by a government agency. The host may request use of the crypto hardware for encrypting an email being sent from a user s personal non government email e.g. a Hotmail account . The mobile device may have a policy of only encrypting email being sent from or to a government email address because the encryption algorithm is classified. Because of this policy the mobile device may refuse to perform the encryption for the user s personal email. In one embodiment device policies may be updated when connected to a host such as an administrative host. The updated device policies may then be enforced by the device in future task offloading from the currently connected host or other hosts.

Mobile device polices may also indicate if particular mobile device activities take precedent over host task offloading. For example if the device is a mobile phone when a call arrives for the mobile phone any DSP activity for the host is suspended until the phone call for the mobile phone is completed.

Continuing to block the host receives the results of the function from the mobile device. The results may be in any appropriate form such as Boolean integer floating point integer string and the like. For example the mobile device may expose an encryption function with two parameters 100 KB data block to encrypt and a key. The mobile device performs the encryption and returns an encrypted data block to the host. The host may then use the encrypted block as desired e.g. save on local storage send to network storage send as email etc. .

Proceeding to decision block the logic of flowchart determines if the mobile device has been disconnected. In one embodiment the logic of flowchart is alerted by the host OS when the mobile device is removed using well known methods. If the answer to decision block is no then the logic returns to block to offload another task to the mobile device from the host. Flowchart may repeatedly loop through blocks offloading tasks from the host to the mobile device until the mobile device is disconnected from the host.

If the answer to decision block is yes then the logic continues to decision block . At decision block the logic determines if the host has received results from all called functions. Since the mobile device is transient in nature the mobile device may be removed at anytime while the host is running. Thus the mobile device may be removed when the host is still waiting for results of an offloaded task.

If the answer to decision block is yes then flowchart ends. If the answer to decision block is no then the logic proceeds to block for performing failover handling by the host. In one embodiment the host inventories the task s that did not complete before the mobile device was disconnected. The function s associated with these incomplete task s will then be completed by the host. These tasks may be re started and performed by the host or may be offloaded to another mobile device that is connected to the host and supports task offloading as described herein. After block flowchart ends.

Turning to an embodiment of exposing functions by the mobile device to the host is shown. In a host is connected to a mobile device . In order to expose its available functions mobile device sends a software module executable on the host stored on mobile device to host .

In one embodiment software module includes one or more interfaces such as APIs that may be used by host . In one embodiment the APIs may be exposed to host as a library of Component Object Model COM objects for use by applications and or an OS operating on host . The use of the mobile device for executing the APIs may be transparent to the applications and or OS. The APIs would divert computations to the mobile device. In other embodiments software module may include language neutral objects such as Java objects Common Language Runtime CLR objects and the like.

In one embodiment when mobile device is disconnected from host the APIs of software module are marked as unavailable from host . In this way software executing on host will not attempt to call APIs that are no longer available since mobile device has been disconnected. In alternative embodiments uploaded software module is purged from host after mobile device is disconnected.

In one embodiment host may authenticate software module . Such authentication techniques may include use of a certificate a signature and the like. In other embodiments software module may need to be digitally signed to be recognized and loaded in accordance with host policies.

Turning to another embodiment of exposing functions by the mobile device is shown. shows mobile device connected to host . Host includes an application supported by OS . OS includes a device driver for communicating with mobile device . Mobile device may report to driver that the mobile device has available functions. The functions may be expressed using a self describing language. Device driver is aware of the self describing language. For example the concept of Web Services Description Language WSDL may be applied to exposing functions to driver in the host driver stack. NVS may have stored a set of interfaces that correspond to the mobile device functions that are provided to driver using the self describing language. Driver may use an interface to request mobile device perform the corresponding function. In this example specific interfaces supported by the mobile device do not need to by known by the host OS or host applications in advance i.e. prior to connection of the mobile device . These interfaces may be discovered upon mobile device connection and then bind to the host. This example differs from other implementations in which the host would either have to have pre loaded libraries that are compatible with the mobile device or upload a whole library on connection to the mobile device such as discussed in .

In one embodiment host and mobile device may extend a well known protocol for exposing and calling the device functions. For example in the case of a storage device a Small Computer System Interface SCSI protocol may be extended for embodiments herein. The SCSI protocol may be extended to enable the mobile device to report the function descriptors to the host using a self describing language. The SCSI host driver may be extended to understand these function descriptors. The extended SCSI host driver would use the self describing language to expose these capabilities to the host OS and host applications so they can utilize the device functions. The extended SCSI host driver would report the connected mobile device to OS and expose the available functions to OS and application . When a function is requested by OS or application then the SCSI host driver may manage the calling of the function on the mobile device.

An embodiment of an array of descriptors that may be provided by mobile device is shown in . Array includes the function name input argument s and return value s . For example function ENCRYPT  encrypts a block of data from 0 to 100 KB using a provided 128 bit key. The function returns the data in encrypted form in a 0 100 KB data block.

It will be appreciated that in the embodiments of execution code for the functions is not being inserted into the host system. The code for the functions is kept on the mobile device and executed on the mobile device. Also the calling and return of a function is kept at the driver level of host .

It will also be appreciated that the host device driver does not have to be updated to utilize the functions of the mobile device. The extended host device driver may query the mobile device for its functions. Since the mobile device functions are expressed in a self describing language the extended host device driver does not need prior knowledge of the mobile device functions to utilize those mobile device functions. This self describing feature may differentiate embodiments of the invention from today s mobile devices that require the host to be loaded with a new driver in order to utilize the mobile device.

Embodiments of the invention are also distinguishable from Plug and Play PnP . In PnP the host OS must find a matching device driver in local storage or in a network storage in order to fully utilize the mobile device. In embodiments herein the mobile device provides the host with the ability to utilize the mobile device s functionality. The host is not required to provide specialized device drivers for the mobile device functions.

Turning to a flowchart shows the logic and operations of offloading a task from a mobile device to a host in accordance with an embodiment of the invention. Similarly as with flowchart flowchart shows the offloading of a single task but one skilled in the art having the benefit of this description will appreciate that more than one task may be offloaded at a time from the mobile device to the host. Also multiple mobile device tasks are not necessarily offloaded at the same time. Further multiple device tasks may be executed by the host using batch programming.

Starting in block the mobile device connects to the host. Continuing to block the mobile device applies device polices. The mobile device may include modifiable policies about which tasks may be offloaded and when tasks may be offloaded. For example device policies may require the mobile device to authenticate the host before offloading any tasks to the host. In another example the device policies may allow offloading device tasks when the host meets particular performance thresholds such as host processor speed.

Proceeding to block the mobile device offloads the device task to the host. In one embodiment the mobile device loads the host memory with executable code for execution on the host processor. A host executable image may be stored on the mobile device. Any data the host is to operate on may also be offloaded to the host.

In one embodiment if the offloaded task is a continuation of a previously offloaded device task then the offloaded device task may continue from a position indicated by saved state information discussed further below .

Next in block the host performs the device task. For example the mobile device may have stored numerous music files that need to be indexed. While the mobile device may have the ability to index the music files itself the mobile device may utilize the processing power of the host if the host has a faster processor. In this example the mobile device may include a media player a mobile phone with media player capabilities and the like. In another example the mobile device may use the host for transcoding of media content stored on the mobile device. Normally transcoding i.e. reformatting media content for use with various applications and platforms is a computationally expensive operation. With embodiments herein the mobile device may use the computing power of the host for transcoding when connected to the host.

In block the mobile device may periodically store the state of the device task being performed by the host. Since the mobile device is of a transient nature the mobile device saves the task state so that the task may be offloaded and continued at a subsequent session with the host or another host . In an alternative embodiment the mobile device may be able to complete the task without a host by continuing from the saved task state.

Proceeding to block the mobile device receives the results of the task from the host. In decision block the logic determines if the mobile device has been disconnected. If the answer to decision block is no then the logic returns to block to offload another task. If the answer to decision block is yes then the logic continues to decision block .

At decision block the logic determines if the mobile device received the results of all offloaded tasks. If the answer to decision block is yes then flowchart ends. If the answer to decision block is no then the logic continues to block where the mobile device performs failover handling. In one embodiment the mobile device may preserve the saved state of the task so that the next time the mobile device connects to a host the mobile device may offload the task for completion. In another embodiment the mobile device if free standing may finish the task itself by continuing from the saved task state. In yet another embodiment the mobile device may ignore the saved task state. In this embodiment the task may be restarted from the beginning the next time the mobile device is connected to a host.

Embodiments of the invention provide for offloading tasks between a host and a mobile device. In one embodiment when connected to a host a mobile device exposes functions to the host that the host may utilize. In this way the host may utilize the processing capability and or specialized hardware of the mobile device for more efficiently completing host workflows. Similarly the mobile device may offload tasks to the host for execution by the host.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement embodiments of the invention may be stored in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allow device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency infrared Near Field Communication NFC and other wireless media.

Device may include input device s such as keyboard mouse pen voice input device touch input device infra red cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments of the invention. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device . Those skilled in the art will also realize that all or a portion of the computer readable instructions may be carried out by a dedicated circuit such as a Digital Signal Processor DSP programmable logic array and the like.

Various operations of embodiments of the present invention are described herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment of the invention.

The above description of embodiments of the invention including what is described in the Abstract is not intended to be exhaustive or to limit the embodiments to the precise forms disclosed. While specific embodiments and examples of the invention are described herein for illustrative purposes various equivalent modifications are possible as those skilled in the relevant art will recognize in light of the above detailed description. The terms used in the following claims should not be construed to limit the invention to the specific embodiments disclosed in the specification. Rather the following claims are to be construed in accordance with established doctrines of claim interpretation.

