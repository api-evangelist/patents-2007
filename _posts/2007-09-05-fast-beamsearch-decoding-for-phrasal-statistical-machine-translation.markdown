---

title: Fast beam-search decoding for phrasal statistical machine translation
abstract: Improved systems, methods and apparatuses are provided for fast beam-search decoding for phrasal statistical machine translation. The provided techniques incorporate a front-loaded distortion penalty estimate for future estimated distortion penalty and/or early pruning to reduce the search space. The improvements result in up to an order of magnitude increase in translation speed for statistical machine translation systems. The disclosed details enable various refinements and modifications according to decoder and system design considerations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08180624&OS=08180624&RS=08180624
owner: Microsoft Corporation
number: 08180624
owner_city: Redmond
owner_country: US
publication_date: 20070905
---
The subject disclosure relates to machine translation and more particularly to beam search decoding for phrasal statistical machine translation.

Statistical machine translation SMT is a machine translation technique where translations are generated on the basis of statistical models. The models parameters are derived from the analysis of one or more bilingual text corpora where a text corpus is a large and structured set of texts e.g. usually electronically stored and processed . The statistical approach contrasts with the rule based machine translation RBMT to machine translation as well as with example based machine translation EBMT .

The ideas behind SMT systems come from information theory. Essentially a document is translated on the probability that a string in a native language e.g. English is a translation of a string in a foreign language e.g. German . Benefits of SMT over other techniques include better use of resources e.g. a great deal of natural language is in machine readable format SMT systems are not limited to any specific pair of languages and RBMT systems require manual development of linguistic rules which can be costly and often do not generalize to other languages and more natural translations.

In word based SMT the translated elements are words where the number of words in translated sentences are different due to compound words morphology and idioms. Simple word based translation is not able to translate language pairs with fertility rates different from one without mapping a single word in the foreign language to multiple words in the native language. However the mapping typically does not work in the reverse translation.

As a result phrase based translation systems were developed to overcome this limitation where translating sequences of words to sequences of words where the lengths of phrases can differ. The sequences of words are called for example blocks or phrases where the phrases are found using statistical methods from the corpus rather than linguistic phrases because the use of linguistic phrases has been shown to decrease translation quality.

Statistical machine translation systems are widely advocated as a promising approach to achieving translation quality at least comparable to the best RBMT systems with greatly reduced effort to adapt to new language pairs and new domains provided that sufficient parallel training data is available. One such system is the widely used Pharaoh phrasal SMT decoder hereinafter Pharaoh or Pharaoh Decoder . However to date SMT systems have been much slower than the best RBMT systems. For example LANGUAGE WEAVER currently the only commercial provider of SMT systems claims to translate 5 000 words per minute per CPU while SYSTRAN the market leader in commercial RBMT claims to translate up to 450 words per second 27 000 words per minute per CPU.

As a result there is a desire to increase the speed and computational efficiency of SMT algorithms while preserving the advantages of SMT over other techniques e.g. high translation quality and efficient adaptability to new language pairs .

In consideration of the above described deficiencies of the state of the art the invention provides a fast beam search decoding techniques for phrasal statistical machine translation systems methods and decoding apparatuses.

Advantageously the provided techniques increase the speed and computational efficiency of SMT while preserving the high translation quality and efficient adaptability to new language pairs provided by SMT systems.

According to various non limiting embodiments the invention provides techniques to improve the estimated cost function used by Pharaoh to rank partial hypotheses by incorporating an estimate of the distortion penalty to be incurred in translating the rest of the sentence.

The invention further provides techniques that use early pruning of possible next phrase translations to cut down the overall size of the search space. Taken together techniques enable decoding speed ups of an order of magnitude or more with no reduction in the quality of the resulting translations as measured by Bleu score.

According to further non limiting embodiments as described in further detail below various techniques provided by the invention can be applied to general sequence translation problems depending on the problem context regardless of whether a phrase based model exists and whether or not reordering is required.

Additionally various modifications are provided which achieve a wide range of performance and translation quality trade offs according to system design considerations.

A simplified summary is provided herein to help enable a basic or general understanding of various aspects of exemplary non limiting embodiments that follow in the more detailed description and the accompanying drawings. This summary is not intended however as an extensive or exhaustive overview. Instead the sole purpose of this summary is to present some concepts related to some exemplary non limiting embodiments of the invention in a simplified form as a prelude to the more detailed description of the various embodiments of the invention that follows.

As discussed in the background there exists a desire to increase the speed and computational efficiency of SMT algorithms while preserving the advantages of SMT. According to various non limiting embodiments of the invention the Pharaoh decoder can be improved with the techniques provided herein. The techniques provided by the subject invention permit much faster decoding without losing translation quality as measured by the Bleu metric.

According to various embodiments of the invention one technique improves the estimated cost function used by Pharaoh to rank partial hypotheses by incorporating an estimate of the distortion penalty yet to be incurred in translating the rest of the sentence. A second technique uses early pruning of possible next phrase translations to cut down the overall size of the search space. Taken together techniques enable decoding speed ups of an order of magnitude or more with no reduction in the Bleu score of the resulting translations.

Although the description of the techniques herein is described primarily with respect to Pharaoh SMT for language translation problems it is to be appreciated that one or more of the techniques can be applied in other circumstances for other problems and the application of such techniques in connection with such problems is intended to fall within the scope of the hereto appended claims. Such problems can generally include any problem that can be viewed as a sequence translation problem.

More specifically the provided distortion penalty estimation techniques would be particularly useful in situations where the sequence translation problem is not monotone e.g. where there is some notion that reordering could occur . However the provided early pruning techniques would be useful even in cases where there is no re ordering involved. As a result the application of such techniques in connection in the aforementioned context e.g. sequence translation problems with or without reordering and whether or not a phrase based model exists is intended to fall within the scope of the hereto appended claims.

For example some cases of the general sequence translation problem include language translation spelling correction e.g. where it is desired to translate a sequence that has misspelled words in it to a sequence that has correctly spelled words in it text to speech e.g. where an orthographic sequence is translated to a phoneme sequence some cases of grammar correction e.g. where a sequence having incorrect grammar is translated to a sequence having correct grammar or any other sequence translation problem whether an analogue of a phrase based model exists or otherwise.

Phrasal SMT translates a source sentence into a target sentence by decomposing the source sentence into a sequence of source phrases which can be any contiguous sequences of words or tokens treated as words in the source sentence. For each source phrase a target phrase translation is selected and the target phrases are arranged in some order to produce the complete translation. A set of possible translation candidates created in this way is scored according to a weighted linear combination of feature values and the highest scoring translation candidate is selected as the translation of the source sentence. Symbolically 

According to various non limiting embodiments the invention can use a phrasal SMT model that includes the following features the sum of the log probabilities of each source phrase in the hypothesis given the corresponding target phrase the sum of the log probabilities of each target phrase in the hypothesis given the corresponding source phrase the sum of lexical scores for each source phrase given the corresponding target phrase the sum of lexical scores for each target phrase given the corresponding source phrase the log of the target language model probability for the sequence of target phrases in the hypothesis the total number of words in the target phrases in the hypothesis the total number of source target phrase pairs composing the hypothesis a distortion penalty reflecting the degree of divergence of the order of the target phrases from the order of the source phrases. It should be noted that prior implementations describe the translation model and the operation of Pharaoh in terms of products of probabilities rather than sums of log probabilities. However the choice of sums of log probabilities is completely equivalent since the product of a set of probabilities is monotonically related to the corresponding sum of log probabilities.

Additionally according to various non limiting embodiments the values of the aforementioned features and their corresponding weights are estimated as follows The probabilities of source phrases given target phrases and target phrases given source phrases are estimated from a word aligned bilingual corpus. Furthermore the phrasal SMT model uses lexical scores computed as the log of the unnormalized probability of the Viterbi alignment for a phrase pair under IBM word translation Model 1. In addition for each phrase pair extracted from the word aligned corpus the values of these four features are stored in a phrase table . The target language model is a trigram model smoothed with bigram and unigram language models estimated from the target language half of the bilingual training corpus. The distortion penalty is computed as required by the Pharaoh decoder which is further explained with reference to the present invention below. In addition the feature weights are trained for the overall translation model to maximize the Bleu metric using a minimum error rate training procedure.

The following discussion provides additional background information regarding a Pharaoh phrasal SMT decoder implementation to facilitate understanding the techniques described herein.

Referring to the core algorithm of a Pharaoh decoder is presented wherein the algorithm uses a beam search to try to find the translation of an input source sentence that has the highest score according to the phrasal SMT model. To that end the decoder creates a set of possible translations building each target language string from left to right. At each step it extends a partial translation hypothesis by picking a source phrase covering words that have not yet been translated in that partial hypothesis and a possible target language translation for that phrase and appending the target language phrase to the incomplete target language string. The search through the partial hypotheses proceeds in order of the number of source words translated. All the partial hypotheses that cover the same number of source words are compared to each other and this set is pruned before any members of the set are extended.

There are at least two key features of Pharaoh that are not revealed at the level of detail presented in . First in addition to beam search pruning Pharaoh also performs lossless pruning whenever multiple partial hypotheses agree in the source words already translated the last two target words produced and the position of the final word of last source phrase translated. In this situation any given hypothesis completion will incur the same incremental cost starting from any of these hypotheses. As a result the best scoring member of a set of such hypotheses cannot be surpassed by any other in the set. Pharaoh keeps only the highest scoring such hypothesis in the beam search although the others are saved in case multiple translation hypotheses are desired.

The second key feature of Pharaoh not revealed in is how Pharaoh computes the partial hypothesis scores used for pruning. The score that Pharaoh uses to compare competing hypotheses consists of two components an exact score for the part of the translation that the hypothesis is committed to and an estimated score for the portion of the source sentence remaining to be translated. To compute the estimated scores before starting to translate a sentence Pharaoh finds the best possible estimated phrase pair score for each source phrase in the phrase table that matches some contiguous subsequence of the input source sentence. An estimated score for every contiguous subsequence of the input is then computed by finding the sequence of source phrases covering the input subsequence with the highest sum of estimated scores. This is computed in O n time by dynamic programming.

The estimated score for each phrase pair is computed as the sum of the feature values in the phrase table for that phrase pair along with the target word count and phrase pair count plus an approximate target language score for the target phrase in the pair all weighted by the corresponding translation model weights. The target language model score can only be approximated because it is not yet known what the language model context will be if the phrase pair in question is actually used to complete the translation of the input source sentence. The approximate target language model score therefore uses the unigram probability estimate for the first word of the target phrase the bigram probability estimate for the second word of the target phrase and the full trigram probability estimate only for the third and subsequent words of the target phrase.

According to various non limiting embodiments of the invention the above general description of a Pharaoh decoder can be improved by incorporating an estimate of the distortion penalty yet to be incurred into the estimated score for the portion of the source sentence remaining to be translated. Notably such an estimate is absent from the score used by Pharaoh for pruning sets of competing partial hypotheses. For example the value of the distortion penalty feature used by Pharaoh is the sum of the distances between source phrases whose target phrase translations are adjacent in the target language string. Specifically an implementation of Pharaoh defines the incremental distortion penalty for each pair of adjacent target phrases as 

In terms of these definitions the two cases are If is to the right of Eqn. 3 If is to the left of Eqn. 4

According to various non limiting embodiments of the invention an estimated distortion penalty yet to be incurred by a partial hypothesis can be defined to be the minimum possible additional distortion penalty given the source words translated so far and the final word position of the last source phrase translated. It follows by mathematical induction on the number of untranslated words for any partial hypothesis the minimum additional distortion penalty is that produced by picking as the next source phrase to translate one that begins with the left most untranslated source word and proceeding left to right covering all the remaining untranslated source words in order. This requires assuming that a distortion penalty increment is incurred if the last source phrase translated does not occur at the end the source sentence.

The computationally simplest way to take this minimum possible additional distortion penalty into account is just to fold it into the distortion penalty as we incrementally accumulate it e.g. at of . This modification can be described using the previous definitions and also defining S to be the longest fully translated initial segment of the source sentence prior to translating S and D S S to be the number of words between S and S . Note that S immediately precedes the left most untranslated word. The computation of the modified d can be broken down four cases as follows If S is adjacent to S d 0 Eqn. 5 Otherwise if is to the left of 2 Eqn. 6 Otherwise if is a subsequence of 2 Eqn. 7 Otherwise 2 Eqn. 8

It follows that the modified distortion penalty can be shown to have the same value as that used in Pharaoh over an entire completed translation hypothesis. For example if a single word towards the beginning of a source sentence is skipped over and then a number of phrases is translated monotonically the distortion penalty as calculated by Pharaoh will be 1 until the decoder jumps back to translate the skipped word. Using the modified distortion penalty of the present invention as more and more words are translated beyond the skipped word a progressively larger distortion penalty is accumulated because the skipped word must eventually be translated by jumping back in the source sentence to translate the skipped word. The invention advantageously takes account of such knowledge on the front end to prune sets of competing partial hypotheses and improve the translation speed. Note that this requires making the same assumption as noted earlier that a distortion penalty increment is incurred if the last source phrase translated does not occur at the end the source sentence.

Accordingly various non limiting embodiments of the invention can further improve the Pharaoh decoder by pruning the search earlier than Pharaoh does. This is accomplished in a way that enables elimination of multiple possible next source phrases and multiple possible translations for source phrases not eliminated without even examining them provided that it is acceptable to forgo having the pruning take into account the language model score adjustment and line .. for the last phrase translated in a given partial hypothesis.

The early pruning modification of the Pharaoh algorithm addresses the sixth line in for each new hyp that can be derived from hyp or element of . A consequence of this line in conventional Pharaoh implementations is that subject to static phrase table and distortion limits discussed below every possible translation of every possible next phrase not involving words already translated will be considered as an extension to a given partial hypothesis. As a result no pruning of any possible extension is considered until an estimated score for the extension has been computed as described with reference to or in or in .

Recall that in order to have an estimated score for each possible subsequence of the input source ready an estimated score for each possible phrase translation that includes all aspects of the translation model is precomputed except for the distortion penalty and a language model score adjustment that replaces the unigram and bigram scores for the first two words of the target phrase with their full trigram scores.

Taking advantage of this observation according to various non limiting embodiments of the invention the search can be pruned earlier than Pharaoh does in a way that can advantageously eliminate multiple possible next source phrases and multiple possible translations for source phrases not eliminated without even examining them. As described above this requires forgoing the language model score adjustment for the last phrase translated in a given partial hypothesis for pruning.

According to various embodiments additional points at which the search is pruned can be introduced into the algorithm by comparing the scores for possible extensions of partial hypotheses covering n source words to the highest score for any partial hypothesis covering n source words. The search for extensions of a given partial hypothesis covering n source words can be stopped when the estimated scores of its extensions before making the language model score adjustment become worse by more than a fixed threshold than the highest score for any partial hypothesis covering n words. Furthermore this pruning step can advantageously be performed in addition to performing Pharaoh s pruning step which compares all partial hypotheses covering n source words to each other using an estimated score that does include the language model score adjustment.

Several observations are helpful in organizing the search through possible extensions to a given partial hypothesis. First for any given starting point for the next phrase to be translated a phrase of length will produce the minimum additional distortion penalty. Second the minimum additional distortion penalty given a starting point never decreases as we move the starting point from left to right. Third for any given starting point the additional distortion penalty never decreases as we increase the length of the source phrase to be translated.

Based on these observations for each set of partial hypotheses covering the same number of source words a minimum acceptable score for extensions of these hypotheses can be established equal to the highest score for any hypothesis in the set minus our early pruning threshold according to various embodiments of the invention. Then the search can be performed from left to right through the possible starting positions for the next source phrase to translate. For each position the minimum additional distortion penalty for a source phrase starting at that position can be determined. If a possible starting position is found such that the minimum additional distortion penalty weighted by the corresponding translation model weight results in a score worse than the current minimum acceptable score the search for possible next source phrases to translate can be stopped because all possible starting position that have not been considered will also have scores worse than the current minimum acceptable score.

For each possible starting position that passes this test the search can proceed through possible ending positions from left to right. If a possible ending position is found such that the weighted additional distortion penalty for the phrase spanning the starting and ending positions results in a score worse than the current minimum acceptable score the search for possible ending positions for that starting position can be stopped because all the possible ending positions that have not been considered will also have weighted additional distortion penalties that result in scores worse than the current minimum acceptable score.

Accordingly each starting and ending position pair that passes this test defines a possible next source phrase to translate. For each such source phrase that has entries in the phrase table its possible translations can be searched through for example from highest scoring to lowest scoring. For each translation considered the estimated score of the resulting partial hypothesis can be computed taking into account everything except the language model score adjustment. If this estimated score is worse than the current minimum acceptable score the search for possible translations for this source phrase can be stopped because all the translations that have not been considered will also yield estimated scores worse than the current minimum acceptable score.

Processor can be a processor dedicated to analyzing information received by input component and or generating information for transmission by an output component . Processor can be a processor that controls one or more portions of system and or a processor that analyzes information received by receiver generates information for transmission by output component and performs various decoding algorithms of decoding component . System can include a decoding component that can perform the various techniques as described herein in addition to the various other functions required by the sequence translation problem context . While decoding component is shown external to the processor and memory it is to be appreciated that decoding component can include decoding code stored in storage component and subsequently retained in memory for execution by processor . The decoding code can utilize artificial intelligence based methods in connection with performing inference and or probabilistic determinations and or statistical based determinations in connection with sequence translation problems.

System can additionally comprise memory that is operatively coupled to processor and that stores information such as described above parameters information translation tables and the like wherein such information can be employed in connection with implementing the improved SMT techniques as described herein. Memory can additionally store protocols associated with generating lookup tables etc. such that system can employ stored protocols and or algorithms further to the performance of sequence translation. It will be appreciated that either storage component or memory or both described herein can be either volatile memory or nonvolatile memory or can include both volatile and nonvolatile memory. By way of illustration and not limitation nonvolatile memory can include read only memory ROM programmable ROM PROM electrically programmable ROM EPROM electrically erasable ROM EEPROM or flash memory. Volatile memory can include random access memory RAM which acts as external cache memory. By way of illustration and not limitation RAM is available in many forms such as synchronous RAM SRAM dynamic RAM DRAM synchronous DRAM SDRAM double data rate SDRAM DDR SDRAM enhanced SDRAM ESDRAM Synchlink DRAM SLDRAM and direct Rambus RAM DRRAM . The memory is intended to comprise without being limited to these and any other suitable types of memory. In addition by way of illustration and not limitation storage component can include conventional storage media as in known in the art e.g. hard disk drive .

The following provides a description of the invention with respect to particular implementations and wherein certain details and parameters are provided for illustration. It is to be appreciated that the provided embodiments are exemplary and non limiting implementations of the techniques provided by the present invention. As a result such examples are not intended to limit the scope of the hereto appended claims. For example certain parameters or combinations thereof are listed for illustration only and are not intended to imply that other parameters or combinations thereof are not possible or desirable. Similarly while the following describes the implementations in a byte code interpreted language e.g. Perl for evaluation purposes it should be apparent to one skilled in the art that the algorithm can be implemented in any suitable programming language. Accordingly such modifications as would be apparent to one skilled in the are intended to fall within the scope of the hereto appended claims.

The above described modifications to the Pharaoh decoding algorithm have been shown to result in decoding speed ups of more than an order of magnitude. The decoding speed of 3.59 milliseconds per word produced by accepting a score lower than the best obtainable by just 0.02 Bleu is equivalent to translating more than 16 700 words per minute. While the described modifications were implemented in Perl there seems little doubt that the improvements provided by the subject invention could easily obtain translation speeds comparable to those of commercial RBMT systems simply by coding the algorithm in a language that compiles to native machine code.

Experiments were conducted evaluating three different algorithms the original Pharaoh algorithm the Pharaoh algorithm plus distortion penalty estimation and the Pharaoh algorithm plus distortion penalty estimation and early pruning. It is noted that without distortion penalty estimation early pruning can lead to failure to find a translation because it is possible for all extensions of all partial hypotheses covering some particular number of source words to fail the early pruning test. Advantageously the distortion penalty estimate as provided by the present invention avoids such a case because the highest scoring partial hypothesis covering a given number of source words will have at least one extension with the same estimated score before making the language model score adjustment which therefore passes the early pruning test.

In order to measure as accurately as possible the effects of modifying the Pharaoh algorithm according to various aspects of the present invention the Pharaoh algorithm has been implemented in such a way that the three systems are identical except for the algorithmic differences under evaluation. As mentioned all three algorithms have been implemented in Perl which is a byte code interpreted language so the absolute time measurements are slower that what would be expected from implementations that compile to native machine code. However the relative timings should still be indicative of the relative efficiency of the algorithms and the benefits provided by the subject invention. Moreover a measure of the search space explored is shown that should be independent of other implementation details e.g. the number of partial hypotheses evaluated per source word .

Because decoding effort depends on several pruning parameters a fair evaluation of the Pharaoh algorithm and its variants requires testing many combinations of settings for these parameters. There are four main pruning parameters 

Where discussed below particular vectors of pruning parameter settings are given in the order above. A fifth parameter that can be viewed as a pruning parameter is the distortion limit which can restrict the maximum distortion increment permitted between source phrases whose translations are adjacent in the output target sentence. However this can also be viewed as a model parameter because setting it to an optimum value usually improves translation quality over leaving it unrestricted. For all the experiments reported herein the distortion limit is set to 5 which seems to be within the range of typical settings for using Pharaoh. It is also noted that it appeared in informal experimentation that for settings greater than 5 translation quality started to decline markedly given our data and models.

According to particular non limiting embodiments the version of distortion limit implemented herein allows one more word in the backward direction than in the forward direction. Otherwise a distortion limit of 1 would allow no distortion at all since the minimum cost of a backwards jump is 2 as follows from the description above. In addition configurations where jumping back to the left most untranslated word would violate the distortion limit were disallowed. For all three algorithms tested the conventional definition of distortion was used for applying the distortion limit even when the modified version was used in the beam search.

For the decoder with early pruning the early pruning threshold might also be treated as an independent parameter. However there is a close connection between the early pruning threshold and the T table threshold. For example if the T table threshold is increased beyond the early pruning threshold none of the additional phrase table entries will ever survive early pruning. Therefore according to particular non limiting embodiments the same setting for the T table and early pruning thresholds were used.

In addition a hill climbing search for combinations of settings of the four pruning parameters that produce good trade offs of decoding time vs. Bleu score was performed. For example five different settings for each of the pruning parameters were explored e.g. 0.5 1.0 1.5 2.0 and 2.5 for the threshold parameters and 5 10 15 20 and 25 for the limit parameters . For the modified algorithms this appeared to be a sufficient range to find the operating points that produced the highest Bleu score. However because the baseline Pharaoh algorithm seemed to require a greater beam limit to avoid losing translation quality beam limits of 30 35 40 45 50 60 75 and 100 were tested with the baseline system with the other parameters set to selected combinations of settings that produced acceptable time quality tradeoffs at lower beam limits.

The training and test data was a standard English French bilingual corpus of Canadian Hansards parliamentary proceedings for which automatic sentence alignment was conducted. For training both the phrase translation models and IBM Model 1 lexical scores 500 000 sentences pairs from this corpus were used. Additionally the training data was word aligned using a state of the art word alignment method and all pairs of phrases up to 7 words in length were extracted and their translation probabilities estimated using conventional methods. A separate set of 500 sentence pairs was used to train the translation model weights and an additional 2000 sentence pairs were used for test data.

From it is clear that all three algorithms eventually produce the same highest value for the Bleu score 30.22 Bleu but the algorithm that employs distortion penalty estimation advantageously does so with much less decoding effort than the baseline algorithm. Furthermore the algorithm that uses both distortion penalty estimation and early pruning requires even less decoding effort. This is true whether decoding effort is measured in terms of time or search space. Indeed for each of the three algorithms the correlation between the decoding time and the number of partial hypotheses evaluated is greater than 0.99. In a particular non limiting embodiment the pruning parameter vectors that produced the highest Bleu score were 1.5 1.0 20 10 for both of the modified algorithms and 1.5 1.0 20 75 for the Pharaoh baseline algorithm.

Comparing the decoding times needed to obtain the highest Bleu score the Pharaoh algorithm takes 106.0 milliseconds per word adding distortion penalty estimation reduced this to 34.2 milliseconds per word and adding early pruning reduced the time to 9.02 milliseconds per word. As one possible decoding design trade off accepting a Bleu score 0.02 Bleu lower 30.20 e.g. lower translation quality the Pharaoh algorithm takes 38.6 milliseconds per word adding distortion penalty estimation yields a time of 14.7 milliseconds per word and adding early pruning yields 3.59 milliseconds per word.

The ratio of decoding times for the Pharaoh algorithm compared to that for the best system is 11.8 to 1 to reach the highest Bleu score and 10.8 to 1 to reach a score of 30.20 Bleu . The ratios of search space for the Pharaoh algorithm compared to that for the best system are even more dramatic. The ratio to reach the highest Bleu score is 18.4 and the ratio to reach a score of 30.20 Bleu is 20.5.

By comparing the algorithms at the same pruning settings and looking at differences in Bleu score and decoding time ratios an additional insight into where the decoding speed increases are produced. Comparing the original Pharaoh algorithm to the Pharaoh algorithm plus distortion penalty estimation up to a beam limit of 25 the decoding time ratio for the same pruning settings ranged from 0.88 to 1.19 very little difference. However the difference in Bleu score when distortion penalty estimation was used ranged from 0.17 Bleu to 0.68 Bleu . Thus the speed up from resulting from the distortion penalty estimation of the present invention appears to come from being able to obtain a given Bleu score at much tighter pruning settings than were necessary with the baseline algorithm rather than speeding up decoding at a given combination of pruning settings.

Additionally comparing distortion penalty estimation to distortion penalty estimation plus early pruning the difference in Bleu score at the same pruning settings ranged only from 0.024 Bleu to 0.016 Bleu . The decoding time ratio however ranged from 1.37 to 6.36 times faster for the decoder with early pruning. Thus early pruning makes almost no difference in Bleu score at a given combination of pruning settings but it makes decoding up to six times faster.

One of ordinary skill in the art can appreciate that the invention can be implemented in connection with any computer or other client or server device which can be deployed as part of a computer network or in a distributed computing environment connected to any kind of data store. In this regard the present invention pertains to any computer system or environment having any number of memory or storage units and any number of applications and processes occurring across any number of storage units or volumes which may be used in connection with beam search phrasal SMT decoding in accordance with the present invention. The present invention may apply to an environment with server computers and client computers deployed in a network environment or a distributed computing environment having remote or local storage. The present invention may also be applied to standalone computing devices having programming language functionality interpretation and execution capabilities for generating receiving and transmitting information in connection with remote or local services and processes. Beam search phrasal SMT decoding and thus the techniques for general sequence translation in accordance with the present invention can be applied with great efficacy in those environments and in some cases regardless of whether a phrase based model exists or whether reordering is indicated.

Distributed computing provides sharing of computer resources and services by exchange between computing devices and systems. These resources and services include the exchange of information cache storage and disk storage for objects such as files. Distributed computing takes advantage of network connectivity allowing clients to leverage their collective power to benefit the entire enterprise. In this regard a variety of devices may have applications objects or resources that may implicate the systems and methods for beam search phrasal SMT decoding of the invention.

It can also be appreciated that an object such as may be hosted on another computing device etc. or etc. Thus although the physical environment depicted may show the connected devices as computers such illustration is merely exemplary and the physical environment may alternatively be depicted or described comprising various digital devices such as PDAs televisions MP3 players etc. any of which may employ a variety of wired and wireless services software objects such as interfaces COM objects and the like.

There are a variety of systems components and network configurations that support distributed computing environments. For example computing systems may be connected together by wired or wireless systems by local networks or widely distributed networks. Currently many of the networks are coupled to the Internet which provides an infrastructure for widely distributed computing and encompasses many different networks. Any of the infrastructures may be used for exemplary communications or transmissions made incident to performing beam search phrasal SMT decoding according to the present invention.

In home networking environments there are at least four disparate network transport media that may each support a unique protocol such as Power line data both wireless and wired voice e.g. telephone and entertainment media. Most home control devices such as light switches and appliances may use power lines for connectivity. Data Services may enter the home as broadband e.g. either DSL or Cable modem and are accessible within the home using either wireless e.g. HomeRF or 802.11B or wired e.g. Home PNA Cat 5 Ethernet even power line connectivity. Voice traffic may enter the home either as wired e.g. Cat 3 or wireless e.g. cell phones and may be distributed within the home using Cat 3 wiring. Entertainment media or other graphical data may enter the home either through satellite or cable and is typically distributed in the home using coaxial cable. IEEE 1394 and DVI are also digital interconnects for clusters of media devices. All of these network environments and others that may emerge or already have emerged as protocol standards may be interconnected to form a network such as an intranet that may be connected to the outside world by way of a wide area network such as the Internet. In short a variety of disparate sources exist for the storage and transmission of data and consequently any of the computing devices of the present invention may share and communicate data in any existing manner and no one way described in the embodiments herein is intended to be limiting.

The Internet commonly refers to the collection of networks and gateways that utilize the Transmission Control Protocol Internet Protocol TCP IP suite of protocols which are well known in the art of computer networking. The Internet can be described as a system of geographically distributed remote computer networks interconnected by computers executing networking protocols that allow users to interact and share information over network s . Because of such wide spread information sharing remote networks such as the Internet have thus far generally evolved into an open system with which developers can design software applications for performing specialized operations or services essentially without restriction.

Thus the network infrastructure enables a host of network topologies such as client server peer to peer or hybrid architectures. The client is a member of a class or group that uses the services of another class or group to which it is not related. Thus in computing a client is a process i.e. roughly a set of instructions or tasks that requests a service provided by another program. The client process utilizes the requested service without having to know any working details about the other program or the service itself. In a client server architecture particularly a networked system a client is usually a computer that accesses shared network resources provided by another computer e.g. a server. In the illustration of as an example computers etc. can be thought of as clients and computers etc. can be thought of as servers where servers etc. maintain the data that is then replicated to client computers etc. although any computer can be considered a client a server or both depending on the circumstances. Any of these computing devices may be processing data or requesting services or tasks that may implicate the methods and systems for beam search phrasal SMT decoding in accordance with the invention.

A server is typically a remote computer system accessible over a remote or local network such as the Internet or wireless network infrastructures. The client process may be active in a first computer system and the server process may be active in a second computer system communicating with one another over a communications medium thus providing distributed functionality and allowing multiple clients to take advantage of the information gathering capabilities of the server. Any software objects utilized pursuant to the techniques for beam search phrasal SMT decoding of the present invention may be distributed across multiple computing devices or objects.

Client s and server s communicate with one another utilizing the functionality provided by protocol layer s . For example HyperText Transfer Protocol HTTP is a common protocol that is used in conjunction with the World Wide Web WWW or the Web. Typically a computer network address such as an Internet Protocol IP address or other reference such as a Universal Resource Locator URL can be used to identify the server or client computers to each other. The network address can be referred to as a URL address. Communication can be provided over a communications medium e.g. client s and server s may be coupled to one another via TCP IP connection s for high capacity communication.

Thus illustrates an exemplary networked or distributed environment with server s in communication with client computer s via a network bus in which the present invention may be employed. In more detail a number of servers etc. are interconnected via a communications network bus which may be a LAN WAN intranet GSM network the Internet etc. with a number of client or remote computing devices etc. such as a portable computer handheld computer thin client networked appliance or other device such as a VCR TV oven light heater and the like in accordance with the present invention. It is thus contemplated that the present invention may apply to any computing device in connection with which it is desirable to perform sequence translation using the provided beam search phrasal SMT decoding techniques.

In a network environment in which the communications network bus is the Internet for example the servers etc. can be Web servers with which the clients etc. communicate via any of a number of known protocols such as HTTP. Servers etc. may also serve as clients etc. as may be characteristic of a distributed computing environment.

As mentioned communications may be wired or wireless or a combination where appropriate. Client devices etc. may or may not communicate via communications network bus and may have independent communications associated therewith. For example in the case of a TV or VCR there may or may not be a networked aspect to the control thereof. Each client computer etc. and server computer etc. may be equipped with various application program modules or objects etc. and with connections or access to various types of storage elements or objects across which files or data streams may be stored or to which portion s of files or data streams may be downloaded transmitted or migrated. Any one or more of computers etc. may be responsible for the maintenance and updating of a database or other storage element such as a database or memory for storing data processed or saved according to the invention. Thus the present invention can be utilized in a computer network environment having client computers etc. that can access and interact with a computer network bus and server computers etc. that may interact with client computers etc. and other like devices and databases .

As mentioned the invention applies to any device wherein it may be desirable to perform beam search phrasal SMT decoding. It should be understood therefore that handheld portable and other computing devices and computing objects of all kinds are contemplated for use in connection with the present invention i.e. anywhere that a device may perform sequence translation or otherwise receive process or store data. Accordingly the below general purpose remote computer described below in is but one example and the present invention may be implemented with any client having network bus interoperability and interaction. Thus the present invention may be implemented in an environment of networked hosted services in which very little or minimal client resources are implicated e.g. a networked environment in which the client device serves merely as an interface to the network bus such as an object placed in an appliance.

Although not required the invention can partly be implemented via an operating system for use by a developer of services for a device or object and or included within application software that operates in connection with the component s of the invention. Software may be described in the general context of computer executable instructions such as program modules being executed by one or more computers such as client workstations servers or other devices. Those skilled in the art will appreciate that the invention may be practiced with other computer system configurations and protocols.

With reference to an exemplary remote device for implementing the invention includes a general purpose computing device in the form of a computer . Components of computer may include but are not limited to a processing unit a system memory and a system bus that couples various system components including the system memory to the processing unit . The system bus may be any of several types of bus structures including a memory bus or memory controller a peripheral bus and a local bus using any of a variety of bus architectures.

Computer typically includes a variety of computer readable media. Computer readable media can be any available media that can be accessed by computer . By way of example and not limitation computer readable media may comprise computer storage media and communication media. Computer storage media includes both volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CDROM digital versatile disks DVD or other optical disk storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computer . Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media.

The system memory may include computer storage media in the form of volatile and or nonvolatile memory such as read only memory ROM and or random access memory RAM . A basic input output system BIOS containing the basic routines that help to transfer information between elements within computer such as during start up may be stored in memory . Memory typically also contains data and or program modules that are immediately accessible to and or presently being operated on by processing unit . By way of example and not limitation memory may also include an operating system application programs other program modules and program data.

The computer may also include other removable non removable volatile nonvolatile computer storage media. For example computer could include a hard disk drive that reads from or writes to non removable nonvolatile magnetic media a magnetic disk drive that reads from or writes to a removable nonvolatile magnetic disk and or an optical disk drive that reads from or writes to a removable nonvolatile optical disk such as a CD ROM or other optical media. Other removable non removable volatile nonvolatile computer storage media that can be used in the exemplary operating environment include but are not limited to magnetic tape cassettes flash memory cards digital versatile disks digital video tape solid state RAM solid state ROM and the like. A hard disk drive is typically connected to the system bus through a non removable memory interface such as an interface and a magnetic disk drive or optical disk drive is typically connected to the system bus by a removable memory interface such as an interface.

A user may enter commands and information into the computer through input devices such as a keyboard and pointing device commonly referred to as a mouse trackball or touch pad. Other input devices may include a microphone joystick game pad satellite dish scanner or the like. These and other input devices are often connected to the processing unit through user input and associated interface s that are coupled to the system bus but may be connected by other interface and bus structures such as a parallel port game port or a universal serial bus USB . A graphics subsystem may also be connected to the system bus . A monitor or other type of display device is also connected to the system bus via an interface such as output interface which may in turn communicate with video memory. In addition to a monitor computers may also include other peripheral output devices such as speakers and a printer which may be connected through output interface

The computer may operate in a networked or distributed environment using logical connections to one or more other remote computers such as remote computer which may in turn have media capabilities different from device . The remote computer may be a personal computer a server a router a network PC a peer device or other common network node or any other remote media consumption or transmission device and may include any or all of the elements described above relative to the computer . The logical connections depicted in include a network such local area network LAN or a wide area network WAN but may also include other networks buses. Such networking environments are commonplace in homes offices enterprise wide computer networks intranets and the Internet.

When used in a LAN networking environment the computer is connected to the LAN through a network interface or adapter. When used in a WAN networking environment the computer typically includes a communications component such as a modem or other means for establishing communications over the WAN such as the Internet. A communications component such as a modem which may be internal or external may be connected to the system bus a via the user input interface of input or other appropriate mechanism. In a networked environment program modules depicted relative to the computer or portions thereof may be stored in a remote memory storage device. It will be appreciated that the network connections shown and described are exemplary and other means of establishing a communications link between the computers may be used.

Various distributed computing frameworks have been and are being developed in light of the convergence of personal computing and the Internet. Individuals and business users alike are provided with a seamlessly interoperable and Web enabled interface for applications and computing devices making computing activities increasingly Web browser or network oriented.

For example MICROSOFT s managed code platform i.e. .NET includes servers building block services such as Web based data storage and downloadable device software. Generally speaking the .NET platform provides 1 the ability to make the entire range of computing devices work together and to have user information automatically updated and synchronized on all of them 2 increased interactive capability for Web pages enabled by greater use of XML rather than HTML 3 online services that feature customized access and delivery of products and services to the user from a central starting point for the management of various applications such as e mail for example or software such as Office .NET 4 centralized data storage which increases efficiency and ease of access to information as well as synchronization of information among users and devices 5 the ability to integrate various communications media such as e mail faxes and telephones 6 for developers the ability to create reusable modules thereby increasing productivity and reducing the number of programming errors and 7 many other cross platform and language integration features as well.

While some exemplary embodiments herein are described in connection with software such as an application programming interface API residing on a computing device one or more portions of the invention may also be implemented via an operating system or a middle man object a control object hardware firmware intermediate language instructions or objects etc. such that the methods for sequence translation using beam search phrasal SMT decoding in accordance with the invention may be included in supported in or accessed via all of the languages and services enabled by managed code such as .NET code and in other distributed computing frameworks as well.

There are multiple ways of implementing the present invention e.g. an appropriate API tool kit driver code operating system control standalone or downloadable software object etc. which enables applications and services to use the systems and methods for fast beam search phrasal SMT decoding of the invention. The invention contemplates the use of the invention from the standpoint of an API or other software object as well as from a software or hardware object that performs beam search phrasal SMT decoding in accordance with the invention. Thus various implementations of the invention described herein may have aspects that are wholly in hardware partly in hardware and partly in software as well as in software.

The word exemplary is used herein to mean serving as an example instance or illustration. For the avoidance of doubt the subject matter disclosed herein is not limited by such examples. In addition any aspect or design described herein as exemplary is not necessarily to be construed as preferred or advantageous over other aspects or designs nor is it meant to preclude equivalent exemplary structures and techniques known to those of ordinary skill in the art. Furthermore to the extent that the terms includes has contains and other similar words are used in either the detailed description or the claims for the avoidance of doubt such terms are intended to be inclusive in a manner similar to the term comprising as an open transition word without precluding any additional or other elements.

As mentioned above while exemplary embodiments of the present invention have been described in connection with various computing devices and network architectures the underlying concepts may be applied to any computing device or system in which it is desirable to perform beam search phrasal SMT decoding. For instance the techniques of the invention may be applied to the operating system of a computing device provided as a separate object on the device as part of another object as a reusable control as a downloadable object from a server as a middle man between a device or object and the network as a distributed object as hardware in memory a combination of any of the foregoing etc. While exemplary programming languages names and examples are chosen herein as representative of various choices these languages names and examples are not intended to be limiting. One of ordinary skill in the art will appreciate that there are numerous ways of providing object code and nomenclature that achieves the same similar or equivalent functionality achieved by the various embodiments of the invention.

As mentioned the various techniques described herein may be implemented in connection with hardware or software or where appropriate with a combination of both. As used herein the terms component system and the like are likewise intended to refer to a computer related entity either hardware a combination of hardware and software software or software in execution. For example a component may be but is not limited to being a process running on a processor a processor an object an executable a thread of execution a program and or a computer. By way of illustration both an application running on computer and the computer can be a component. One or more components may reside within a process and or thread of execution and a component may be localized on one computer and or distributed between two or more computers.

Thus the methods and apparatus of the present invention or certain aspects or portions thereof may take the form of program code i.e. instructions embodied in tangible media such as floppy diskettes CD ROMs hard drives or any other machine readable storage medium wherein when the program code is loaded into and executed by a machine such as a computer the machine becomes an apparatus for practicing the invention. In the case of program code execution on programmable computers the computing device generally includes a processor a storage medium readable by the processor including volatile and non volatile memory and or storage elements at least one input device and at least one output device. One or more programs that may implement or utilize the beam search phrasal SMT decoding techniques of the present invention e.g. through the use of a data processing API reusable controls or the like are preferably implemented in a high level procedural or object oriented programming language to communicate with a computer system. However the program s can be implemented in assembly or machine language if desired. In any case the language may be a compiled or interpreted language and combined with hardware implementations.

The methods and apparatus of the present invention may also be practiced via communications embodied in the form of program code that is transmitted over some transmission medium such as over electrical wiring or cabling through fiber optics or via any other form of transmission wherein when the program code is received and loaded into and executed by a machine such as an EPROM a gate array a programmable logic device PLD a client computer etc. the machine becomes an apparatus for practicing the invention. When implemented on a general purpose processor the program code combines with the processor to provide a unique apparatus that operates to invoke the functionality of the present invention. Additionally any storage techniques used in connection with the present invention may invariably be a combination of hardware and software.

Furthermore the disclosed subject matter may be implemented as a system method apparatus or article of manufacture using standard programming and or engineering techniques to produce software firmware hardware or any combination thereof to control a computer or processor based device to implement aspects detailed herein. The term article of manufacture or alternatively computer program product where used herein is intended to encompass a computer program accessible from any computer readable device carrier or media. For example computer readable media can include but are not limited to magnetic storage devices e.g. hard disk floppy disk magnetic strips . . . optical disks e.g. compact disk CD digital versatile disk DVD . . . smart cards and flash memory devices e.g. card stick . Additionally it is known that a carrier wave can be employed to carry computer readable electronic data such as those used in transmitting and receiving electronic mail or in accessing a network such as the Internet or a local area network LAN .

The aforementioned systems have been described with respect to interaction between several components. It can be appreciated that such systems and components can include those components or specified sub components some of the specified components or sub components and or additional components and according to various permutations and combinations of the foregoing. Sub components can also be implemented as components communicatively coupled to other components rather than included within parent components hierarchical . Additionally it should be noted that one or more components may be combined into a single component providing aggregate functionality or divided into several separate sub components and any one or more middle layers such as a management layer may be provided to communicatively couple to such sub components in order to provide integrated functionality. Any components described herein may also interact with one or more other components not specifically described herein but generally known by those of skill in the art.

In view of the exemplary systems described supra methodologies that may be implemented in accordance with the disclosed subject matter will be better appreciated with reference to the pseudo code and flowcharts of . While for purposes of simplicity of explanation the methodologies are shown and described as a series of blocks or numbered steps it is to be understood and appreciated that the claimed subject matter is not limited by the order of the blocks or numbered steps as some blocks or steps may occur in different orders and or concurrently with other blocks or steps from what is depicted and described herein. Where non sequential or branched flow is illustrated via flowchart or pseudo code it can be appreciated that various other branches flow paths and orders of the blocks may be implemented which achieve the same or a similar result. Moreover not all illustrated steps or blocks may be required to implement the methodologies described hereinafter.

Furthermore as will be appreciated various portions of the disclosed systems above and methods below may include or consist of artificial intelligence or knowledge or rule based components sub components processes means methodologies or mechanisms e.g. support vector machines neural networks expert systems Bayesian belief networks fuzzy logic data fusion engines classifiers . . . . Such components inter alia can automate certain mechanisms or processes performed thereby to make portions of the systems and methods more adaptive as well as efficient and intelligent.

While the present invention has been described in connection with the preferred embodiments of the various figures it is to be understood that other similar embodiments may be used or modifications and additions may be made to the described embodiment for performing the same function of the present invention without deviating therefrom. For example while exemplary network environments of the invention are described in the context of a networked environment such as a peer to peer networked environment one skilled in the art will recognize that the present invention is not limited thereto and that the methods as described in the present application may apply to any computing device or environment such as a gaming console handheld computer portable computer etc. whether wired or wireless and may be applied to any number of such computing devices connected via a communications network and interacting across the network. Furthermore it should be emphasized that a variety of computer platforms including handheld device operating systems and other application specific operating systems are contemplated especially as the number of wireless networked devices continues to proliferate.

While exemplary embodiments refer to utilizing the present invention in the context of particular programming language constructs the invention is not so limited but rather may be implemented in any language to provide methods for fast beam search phrasal SMT decoding. Still further the present invention may be implemented in or across a plurality of processing chips or devices and storage may similarly be effected across a plurality of devices. Therefore the present invention should not be limited to any single embodiment but rather should be construed in breadth and scope in accordance with the appended claims.

