---

title: Efficient data structures for multi-dimensional security
abstract: Efficient data structures are generated to enforce permissions on a multi-dimensional representation in a performance management application. A model site is generated having at least one model with at least one dimension. User permissions and group permissions are set for the model. The user permission and the group permissions are deployed to a relational database. A collective user permission table is generated based on the user permissions and the group permissions. Thus, an end user may receive permissions associated with a model and permissions associated with particular dimensions of a model without an inefficient consumption of resources.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08196184&OS=08196184&RS=08196184
owner: Microsoft Corporation
number: 08196184
owner_city: Redmond
owner_country: US
publication_date: 20070216
---
Enterprise businesses continuously strive to improve operations products services and efficiency. For example many enterprise businesses use integrated performance management applications for managing business data. Modelers associated with the integrated performance management application may generate model sites to include models model dimensions users and business roles. End users of the model site may view the models of the enterprise business generate reports and analyze trends associated with the enterprise business. In many instances a modeler may desire restricting permissions associated with a model site models and or dimensions of a model. The modeler may desire restricting a permission of a user and or a permission of a business role. Such restricting is difficult to implement in a model and is tacking on resources when pushed from a relative data store to a multi dimensional store.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key and or essential features of the claimed subject matter. Also this Summary is not intended to limit the scope of the claimed subject matter.

The disclosure pertains to generating efficient data structures to enforce permissions associated with a multi dimensional representation. A model site is generated having a model with a dimension. User permissions and group permissions are set for the model and the dimension. The user permissions and the group permissions are deployed to a relational database. A collective user permissions table is generated based on the user permissions and the group permissions to efficiently provide security for the model site.

In this manner setting user permissions and setting group permissions are more efficient and versatile. Also the tacking of system resources is reduced by generating a collective user permissions table to push from a relative data store to a multi dimensional store. Thus an end user may receive permissions associated with a model and or permissions associated with particular dimensions of a model without an inefficient consumption of resources.

Embodiments are described more fully below with reference to the accompanying drawings which form a part hereof and which show specific exemplary embodiments. However embodiments may be implemented in many different forms and should not be construed as limited to the embodiments set forth herein rather these embodiments are provided so that this disclosure will be thorough and complete and will fully convey the scope. Embodiments may be practiced as methods systems or devices. Accordingly embodiments may take the form of an entirely hardware implementation an entirely software implementation or an implementation combining software and hardware aspects. The following detailed description is therefore not to be taken in a limiting sense.

The logical operations of the various embodiments are implemented 1 as a sequence of computer implemented steps running on a computing system and or 2 as interconnected machine modules within the computing system. The implementation is a matter of choice dependent on the performance requirements of the computing system implementing the invention. Accordingly the logical operations making up the embodiments described herein are referred to alternatively as operations steps or modules.

A business modeler is used in integrated performance management applications in order to manage application metadata and business data. A business modeler may create a model site that includes one or more models for conveying information about a business. For example the model may include a financial model for an entire corporation. In generating a model site a business modeler may also identify users for the model site. For example the business modeler may identify a particular set of employees for associating with a model of the model site. A business modeler may also associate a group with the model site. For example in an enterprise business the modeler may identify that regional managers are to be associated with a particular model.

To provide security for the data of the model site the modeler may grant several permissions. Permissions may include a read permission a write permission a read write permission calculation permission no permission and or any other type of permission granted for data security. Permissions may be granted in the situation where some employees are to have access to a first set of data and other employees are to have access to a second set of data. The modeler defines group permissions. In the situation where the group is a regional manager role the modeler may set default permissions for all the regional managers associated with the enterprise. The modeler may also customize permissions for a particular user. For example the modeler may desire a regional manager of Washington to have access to the regional data from Washington but not have access to the regional data of Nebraska.

A modeler deploys the permissions to a relational store. A collective user permissions table is generated. The collective user permissions table identifies user permissions based on the user permissions assigned by the modeler and the group permissions assigned by the modeler. The collective user permissions table is a consolidated table in relation to the individual user permissions and the group permissions. The collective user permissions table reduces resources needed to identify user permissions. The collective user permissions are pushed to a multi dimensional store. An end user may then receive permissions with a model. As an example the end user may have access to a particular model a portion of the dimensions of a model and or a portion of the data of a model.

System includes business modeler component . Business modeler component may include one or more programs for creating modifying and managing data associated with model sites models dimensions hierarchical views permissions and or any other data that may be utilized by multi dimensional store component . Business modeler component may be configured as a graphical user interface tool to allow users to create modify and manage data associated with access to a multi dimensional data store. For example business modeler component may be utilized by an enterprise manager to grant permissions to cells of an OnLine Analytical Processing OLAP cube.

Business modeler component may facilitate the generation of model site . For example model site may include a model site for the financials of the United States division of an enterprise business. Model site may include model group permissions and user permissions . Model may include a model and a set of dimensions that are related to the model site . Model site provides an interface for turning a model on or off for each business role. For example model site may include a plurality of accessible models associated with various entities of an enterprise business. In the financial example a modeler may turn on all or a portion of the models associated with finances while turning off models associated with human resources.

As an example of a model model may include a profit model. Model may include one or more hierarchical views associated with model . Model may include a plurality of hierarchical views that are relevant in formulating model . In the profit example the hierarchical views may include a sales hierarchical view and an expenses hierarchical view that facilitate the generation of model .

Model may also include one or more dimensions associated with model . Dimension permissions of the model may be static or dynamic. A static dimension permission locks the dimensions broadest value. A dynamic dimension permission may be narrowed or customized from the broadest value. For example a modeler may mark a dimension permission as static by locking the dimension member permission to the USA region. In such a situation permissions granted for the model will include permission for the USA region. When the dimension is marked as dynamic the modeler may customize the dimension member permissions. For example the region dimension may include the USA region. However a modeler may set a user permission to the Washington region. In such a situation the user permission is granted for a lesser member of the dimension i.e. Washington is a lesser member of USA .

Model site may also include group permissions . A group includes a set of similarly situated users. For example a group may include regional managers. In model site the regional managers group includes a set of users. A modeler may assign a permission to a group for a model hierarchical view and or dimension. The permission may include a read permission a write permission a read write permission and or any other type of permission associated with the access of data. When a modeler assigns a permission to a group all the users of the group are given the same permission unless the modeler customizes the permission of a specific user associated with the group.

Model site may also include user permissions . A user may or may not be associated with a group. For example a group of a model may include regional managers. A user may be included as a regional manager. A user of a model may also include a member that is not part of a group such as a CEO. A modeler may assign a permission to a user for a model hierarchical view and or dimension. The permission may include a read permission a write permission a read write permission and or any other type of permission associated with the access of data.

Business modeler component is in communication with serving component . For example business modeler component may communicate with serving component via a wired wireless or a combination of communication networks. In one aspect business modeler component communicates with serving component using web services application programming interfaces APIs . Serving component is configured to respond to various requests from business modeler component and user interface component .

System includes relational store component . Relational store component stores date in the form of related tables. Permissions are deployed from business modeler component to relational database store component . Relational store component includes collective user permissions table . The generation of collective user permissions table is more fully set forth in .

System also includes multi dimensional store component . The multi dimensional store component stores models in one or more cubes and or sub cubes. Collective user permissions are pushed via a star schema or other type of multi dimensional schema such as a snowflake schema from relational store component to multi dimensional store component .

Multi dimensional store component is associated with user interface component via serving component . In one aspect user interface component is associated with a spreadsheet application. Interface component is configured to provide various client side operations such as submitting data reviewing data approving submissions and the like. In one aspect user interface component queries multi dimensional store component to obtain data associated with a cube. User interface component is granted permissions to the cube based on the collective user permissions pushed from relational store component to multi dimensional store component .

Permissions may be associated with the model site on one of the models of the model site and or a dimension of the model site. The permission may include group permission and or user permissions. As an example a group permission may include regional managers and the user permission may include a permission for one of the regional managers. Permission for the regional managers may be set to a low default. A user who is a regional manager may be given a permission that is high or further restricted from the low permission. In this manner a modeler may customize permissions for a model site model and or a dimension of a model.

After the model is generated the model may be deployed as represented by operation . The permissions may be deployed by a user input or deploying the permission may be automatic. The permissions are sent to a relational store via a serving component. Operational flow flows to operation where a collective user permission table is generated. The collective user permission table is further discussed in below. Operational flow continues to operation where the collective user permissions are pushed to the multi dimensional database. The multi dimensional database generates one or more OLAP cubes via a Star Schema or other type of multi dimensional schema such as a snowflake schema. User permissions are enforced on a user interface component as represented by operation . Stated another way a user may query the generated OLAP cube. The data associated with the OLAP cube is secured in association with the collective user permissions. Operational flow continues to end operation .

Operational flow continues to operation . At operation user permissions are determined for each of the N dimensions. A user permission may include an access permission such as a read permission a read write permission and or any other permission for securing data. A user permission may include a permission for the model site model and or a dimension of the model.

Operational flow continues to operation . At operation group permissions are determined for each of the N dimensions. A group permission may include an access permission such as a read permission a read write permission and or any other permission permitted for securing data. A group permission may include a permission for the model site model and or a dimension of the model. A user may be part of the group.

Operational flow continues to operation where a security table for each of the N dimensions is generated.

From security X and security Y an area view is created for the model. Following the above example the area view is a union of user permissions and group permissions. In one aspect the area view is generated as follows via Create View statement 

The Null identifier is interpreted as no restriction to the dimension. If the Area view is pushed to the multi dimensional store to define security copies of Group1 Model1 and Group1 Model2 are copied into table Security X table Security Y and the model table with ObjectID User1 . This process is repeated for each user that is a member of the group. Such a process consumes a vast amount of system resources and may be inefficient for resolving the exact permissions for each user. Therefore operational flow continues to operation where a collective user permissions table is generated from the above Area View and a User Group relationship table.

The collective user permissions table describes user membership in different groups. The area defined by the collective user permission table is defined by the user specific area definitions and the group specific area definitions. The collective user permissions table is a consolidated table in relation to the individual user permissions table and the independent group permissions table. From operation operation flow continues to end operation .

As set forth herein resolving user permissions and resolving group permissions are more efficient and versatile via the collective user permissions table. Also the tacking of system resources is reduced by generating a collective user permission table to push from a relative store to a multi dimensional store. Thus an end user may receive permissions associated with a model and permissions associated with particular dimensions of a model without an inefficient consumption of resources.

Referring to an exemplary system for implementing the invention includes a computing device such as computing device . In a basic configuration computing device may include any type of stationary computing device or a mobile computing device. Computing device typically includes at least one processing unit and system memory . Depending on the exact configuration and type of computing device system memory may be volatile such as RAM non volatile such as ROM flash memory and the like or some combination of the two. System memory typically includes operating system one or more applications and may include program data . In one embodiment applications further include application for providing multi dimensional security. This basic configuration is illustrated in by those components within dashed line .

Computing device may also have additional features or functionality. For example computing device may also include additional data storage devices removable and or non removable such as for example magnetic disks optical disks or tape. Such additional storage is illustrated in by removable storage and non removable storage . Computer storage media may include volatile and non volatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions data structures program modules or other data. System memory removable storage and non removable storage are all examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM digital versatile disks DVD or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by computing device . Any such computer storage media may be part of device . Computing device may also have input device s such as a keyboard mouse pen voice input device touch input device etc. Output device s such as a display speakers printer etc. may also be included.

Computing device also contains communication connection s that allow the device to communicate with other computing devices such as over a network or a wireless network. Communication connection s is an example of communication media. Communication media typically embodies computer readable instructions data structures program modules or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal may include a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media may include wired media such as a wired network or direct wired connection and wireless media such as acoustic RF infrared and other wireless media. The term computer readable media as used herein includes both storage media and communication media.

Although the invention has been described in language that is specific to structural features and or methodological steps it is to be understood that the invention defined in the appended claims is not necessarily limited to the specific features or steps described. Rather the specific features and steps are disclosed as forms of implementing the claimed invention. Since many embodiments of the invention can be made without departing from the spirit and scope of the invention the invention resides in the claims hereinafter appended.

