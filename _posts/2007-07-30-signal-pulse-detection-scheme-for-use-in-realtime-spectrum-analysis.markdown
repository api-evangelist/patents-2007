---

title: Signal pulse detection scheme for use in real-time spectrum analysis
abstract: A spectrum analysis engine (SAGE) that comprises a spectrum analyzer component, a signal detector component, a universal signal synchronizer component and a snapshot buffer component. The spectrum analyzer component generates data representing a real-time spectrogram of a bandwidth of radio frequency (RF) spectrum. The signal detector detects signal pulses in the frequency band and outputs pulse event information entries output, which include the start time, duration, power, center frequency and bandwidth of each detected pulse. The signal detector also provides pulse trigger outputs which may be used to enable/disable the collection of information by the spectrum analyzer and the snapshot buffer components. An alternative pulse detection module is provided that tracks signal pulses by comparing peak data from successive FFT cycles with existing signal pulse data that is derived from comparing peak data for prior FFT cycles. Peaks for new FFT cycles are matched to data associated with signal pulses determined to be occurring over many FFT intervals.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07606335&OS=07606335&RS=07606335
owner: Cisco Technology, Inc.
number: 07606335
owner_city: San Jose
owner_country: US
publication_date: 20070730
---
This application is a continuation of U.S. application Ser. No. 10 909 450 filed Aug. 2 2004 which in turn claims priority to U.S. Provisional Application No. 60 587 834 filed Jul. 14 2004 and is a continuation in part of U.S. application Ser. No. 10 757 704 filed Jan. 4 2004 now U.S. Pat. No. 7 224 752 B2 which is a continuation of U.S. application Ser. No. 10 246 365 filed Sep. 18 2002 now U.S. Pat. No. 6 714 605 that in turn claims priority to U.S. Application No. 60 374 365 filed Apr. 22 2002 U.S. Application No. 60 380 890 filed May 16 2002 U.S. Application No. 60 319 435 filed Jul. 30 2002 and U.S. Application No. 60 319 542 filed Sep. 11 2002.

The entirety of each of the aforementioned applications and patent is incorporated herein by reference.

This application is related to each of the following commonly assigned U.S. Applications filed on Sep. 18 2002 the entirety of each of which is incorporated herein by reference 

U.S. application Ser. No. 10 246 364 now U.S. Pat. No. 6 850 735 entitled System and Method for Classification of Unknown Signals in a Frequency Band. 

U.S. application Ser. No. 10 246 363 corresponding to U.S. Application Publication No. 2003 0198200 A1 entitled System and Method for Spectrum Management of a Shared Frequency Band. 

The present invention is directed to technology used in a radio communication device to derive information about the signals active in a radio frequency band where the radio communication device is operating such as an unlicensed radio frequency band shared by many different devices.

In certain radio communication systems it would be desirable to know whether and what types of other signals or devices are active. For example an unlicensed radio frequency band is by its nature free to be used by any device that emits radiowave energy within certain power levels in that part of the allocated spectrum. It is possible that many devices would share the unlicensed frequency band at the same time potentially causing interference with each other. Under these circumstances what would be useful is to provide the capability of processing signals that represent activity in the frequency spectrum over a time interval to derive information about the basic characteristics of those signals in order to identify or classify them.

A real time spectrum analysis engine SAGE is provided that generates information about the signal activity in a frequency band. The SAGE has several components to produce generalized spectrum information as well as specific information concerning the type of signal pulses in the frequency band at any given time.

The SAGE is for example a hardware accelerator that resides in a communication device and comprises a spectrum analyzer component a signal detector component a universal signal synchronizer component and a snapshot buffer component. The spectrum analyzer component generates data representing a real time spectrogram of a bandwidth of radio frequency RF spectrum. The signal detector detects signal pulses in the frequency band and outputs pulse event information entries which include the start time duration power center frequency and bandwidth of each detected pulse. The signal detector also provides pulse trigger outputs which may be used to enable disable the collection of information by the spectrum analyzer and the snapshot buffer components. The snapshot buffer collects a set of raw digital signal samples useful for signal classification and other purposes. The universal signal synchronizer synchronizes to periodic signal sources useful for instituting schemes to avoid interference with those signals. Some or all of the functions of the SAGE may be implemented entirely in software executed by a processor.

An alternative pulse detection module is provided that tracks signal pulses by comparing peak data from successive FFT sampling cycles with existing signal pulse data that is derived from comparing peak data for prior FFT cycles. Peaks for new FFT sampling cycles are matched to data associated with signal pulses determined to be occurring over longer periods of time e.g. several sampling cycles.

The spectrum analysis techniques described herein may be applied to an unlicensed frequency band or another frequency band in which it is desired to monitor RF activity.

The above and other objects and advantages will become readily apparent when reference is made to the following description taken in conjunction with the accompanying drawings.

The spectrum analysis engine hereinafter referred to as SAGE is a hardware accelerator useful to generate in real time information about received RF energy in a frequency band. is a block diagram showing the SAGE together with other hardware components that SAGE interacts with during operation. The SAGE and related components may be implemented in a variety of ways. One way is with field programmable gate arrays FPGAs on a single or multiple semiconductor chips configured to perform the functions described herein. Another way with digital logic gates implemented in a semiconductor integrated circuit. For example the majority of the SAGE can be implemented as part of or the entirety of an application specific integrated circuit ASIC . It is also envisioned that for certain applications some or all of the functions of the SAGE are implemented with software instructions stored on a processor readable medium and executed by a processor such as the MCU or another processor in another device coupled to receive as input the output an ADC that converts the downconverted signals to a digital signal.

The SAGE comprises a spectrum analyzer SA a signal detector SD a snapshot buffer SB and a universal signal synchronizer USS . The SA generates data representing a real time spectrogram of a bandwidth of radio frequency RF spectrum such as for example up to 100 MHz. As such the SA may be used to monitor all activity in a frequency band for example the 2.4 2.483 GHz ISM band or the 5.15 5.35 GHz and 5.725 5.825 GHz UNII bands. Power vs. frequency information generated by SAGE is stored in a dual port RAM DPR and is also used by the signal detector . The bandwidth capabilities of the SA depends on the frequency band of application.

The signal detector detects signal pulses in the frequency band and outputs pulse event information entries which include one or more of the start time duration power center frequency and bandwidth of each detected pulse. The signal detector also provides pulse trigger outputs which may be used to enable disable the collection of information by the spectrum analyzer and the snapshot buffer components.

The snapshot buffer collects a set of raw digital signal samples useful for signal classification and other purposes such as time of arrival location or received signal strength RSS measurements. The snapshot buffer can be triggered to begin sample collection from either the signal detector or from an external trigger source using the snapshot trigger signal SB TRIG.

The universal signal synchronizer synchronizes to periodic signal sources such as Bluetooth SCO headsets and cordless phones. The USS interfaces with medium access control MAC logic that manages scheduling of packet transmissions in the frequency band according to a MAC protocol such as for example the IEEE WLAN 802.11 protocols. The MAC logic may be implemented in DSP firmware or in higher level software.

The SAGE is useful in a radio communication device where a radio transceiver or a radio receiver is used to process received RF signals and convert them to baseband signals. A microprocessor control unit MCU interfaces with the SAGE to receive spectrum information output by SAGE and to control certain operational parameters of SAGE for particular functions described in detail hereinafter. The MCU may be any suitable microprocessor that resides either on the same semiconductor chip as the SAGE or on another chip. The MCU interfaces with SAGE through the DPR and the control registers . The SAGE interfaces with the MCU through a memory interface I F that is coupled to the DPR .

The control registers include registers to enable the MCU to configure control and monitor the SAGE . There is a control status register an interrupt enable register an interrupt flags register spectrum analyzer control registers signal detector control registers snapshot buffer control registers and USS control registers. The control status register includes a field to perform a reset of the SAGE components. The interrupt enable register is used to indicate one or more pending interrupt conditions to the MCU . The MCU also uses the interrupt flags register to clear any processed interrupts.

Two clock signals are used to drive the SAGE . The main clock signal CLK runs at the sampling rate of the ADC and controls most of the SAGE logic. The other clock BUSCLK is used to control the MCU side of DPR interface to the control registers the global timer interfaces GFIs and the lower medium access control LMAC interfaces. The DPR is driven using a separate clock on each port CLK on the SAGE side and BUSCLK on the MCU side. The control registers may be double buffered to avoid synchronization problems between SAGE and MCU control logic.

The SAGE operates on digital signals derived from the baseband signals output by the radio transceiver . An RF interface is provided that pre processes the baseband signals for processing by the SAGE .

Turning to the RF interface will be described. The RF interface comprises an analog to digital converter ADC block an automatic gain control AGC block a direct current DC correction block and an amplitude phase correction block .

The radio transceiver that generates the received Rx baseband signals may have an RF receiver in which the local oscillator LO for the quadrature downconverter is placed at the center of the band of interest. As such DC amplitude and phase offset compensation circuits are employed before the Fast Fourier Transform FFT to maximize LO and sideband suppression.

The Rx baseband signals are sampled at the CLK frequency using two ADCs one for the in phase signal I and another for the quadrature signal Q . Only one ADC is shown in for simplicity. An example of a CLK and ADC frequency is 120 MHz which is sufficient to digitize the entire 2.4 GHz band as an example. Consequently the maximum FFT rate is 468.8 kHz 2.13 microseconds per FFT at CLK 120 MHz though faster or slower rates may be suitable for other applications.

The AGC block dynamically adjusts the gain of the receiver to optimize the placement of the Rx signal within the dynamic range of the ADC . A slow feedback driven algorithm is useful in which the Rx gain is adjusted to place the maximum signal level received in the last T seconds nominally T 1 second 6 dB below full scale on the ADC . The use of a slow AGC algorithm is beneficial because it prevents the ADC from saturating when sampling the entire frequency band of interest wideband mode whenever strong signals appear suddenly in the band without requiring rapid adjustments in gain which can cause distortion and discontinuities in Rx signal pulses. The output of the AGC is an AGCcomp signal the use of which is described hereinafter.

The DC correction and amplitude phase correction blocks and respectively compensate for LO leakage and amplitude phase imbalance in the quadrature mixer of the radio transceiver. DC correction is performed adaptively by estimating the DC offset at the ADC output and updating a correction DAC to remove large DC offsets. Any residual DC offset after course correction is removed after the ADC via digital subtraction. The MCU estimates the amplitude and phase imbalance and programs the correction values into the appropriate control registers.

The output of the RF interface comprises a digital signal DataI representing The in phase received signal and a digital signal DataQ representing the quadrature phase received signal. The signals DataI and DataQ represent the output of the summer uncorrected for DC and amplitude phase and can be supplied as the raw data to the snapshot buffer .

The SAGE can be used in a radio communication device that includes a RF receiver capable of operating in a wideband mode or narrowband mode. In a wideband mode the RF receiver may downconvert an entire or a substantial portion of a frequency band in which the radio communication device operates. In the wideband mode the RF interface supplies digital signals representing activity in the entire frequency band for successive time intervals as input to the SAGE . In a narrowband mode the RF receiver may downconvert only a single RF channel or other designated portion of the frequency band in which case the RF interface would supply digital signals representing activity in that single RF channel or portion of the frequency band. An example of a radio receiver having a wideband mode as part of a radio transceiver is disclosed in commonly assigned U.S. Provisional Application No. 60 319 434 filed Jul. 30 2002 the entirety of which is incorporated herein by reference.

With reference to the spectrum analyzer performs real time FFT based spectrum analysis on the DataI and DataQ signals. As an example the SA is capable of providing real time spectrum analysis information for up to 120 MHz of RF bandwidth and as such can be used to monitor all activity in either the 2.4 GHz or 5.7 GHz ISM bands. Other applications for monitoring smaller or greater bandwidths are also possible using similar techniques.

The spectrum analyzer comprises a windowing block a Fast Fourier Transform FFT block a power calculation block a lowpass filter block a linear to log converter dB conversion block a history buffer statistics stats logic block and a spectrum analyzer memory controller .

As shown in the windowing block performs pre FFT windowing on the I and Q data using either a Hanning or rectangular window with a multiplier and a ROM that stores slope coefficients for the windowing process.

The output of the windowing block is coupled to the input of the FFT block . The FFT block is for example a 256 frequency bin FFT block that provides I and Q FFT data for each of 256 frequency bins that span the bandwidth of frequency band of interest. An example of the FFT data field is shown in . For each FFT sampling time interval the FFT block outputs M such as 10 bits of data for each FFT frequency bin for example 256 bins. Thus it can be seen that two dimensional data structure can be defined for the FFT data fields across time intervals. This diagram is a useful paradigm to understand the further operations that are performed on the FFT data.

The output of the FFT block is coupled to the power calculation block . The power calculation block comprises two multipliers and and an adder . The multipliers and compute FFTdataI and FFTdataQ respectively and the adder adds them together to output a power value.

The lowpass filter block comprises a multiplier multiplier an adder a flip flop and a history RAM . The lowpass filter block performs a unity gain single pole lowpass filtering operation on the power values of the signal at each FFT frequency bin. Using P k to denote the power value at FFT frequency f k the lowpass filter output P k is updated once per FFT interval t as follows P k t P k t 1 P k t 1 1 k 256 where and 1 are parameters for the multipliers and respectively specifying the LPF bandwidth which is configured by the MCU . The history RAM stores the FFT power data for the previous FFT interval that is used with multiplier according to the mathematical relationship described above.

The dB conversion block at the output of the lowpass filter block computes the decibel value PDB k 10 log P k t for each FFT bin value P k t in dBFS i.e. dB from full scale on the ADC . The ROM stores a table used for the dB conversion computation and the adder subtracts the gain compensation AGCcomp output by the AGC . The output of the dB conversion block is a PDB k data field k number of frequency bins containing dB power data at each frequency bin and a PDBSTART signal that indicates the start of the following PDB k field. 

The spectrum analyzer has two operating modes for writing data into the DPR . In a continuous mode one power vs. frequency value is written to the DPR every N FFT cycles N decimation factor . In a transitional mode a power vs. frequency value is written whenever a pulse event is detected by the signal detector in response to a spectrum analyzer trigger event signal SD SAEVT described hereinafter. The transitional mode generally improves DPR storage efficiency over the continuous mode since in the former case power vs. frequency information is written to the DPR only after pulse transitions.

Examples of control registers for the spectrum analyzer include a control field a register for the lowpass filter parameter registers for the DPR address of the DPR buffers that store the spectrum analyzer stats a register that counts the number of times the stats have been updated a register that stores a value that determines the number of FFT intervals for a statistic update cycle a register that stores the power threshold value for the duty cycle stats described hereinafter and a register for the structure for the power vs. frequency circular list.

The spectrum analyzer control register includes fields to among other things indicate received signal strength indicator RSSI mode absolute or relative. The relative mode means that power measurements are in units of dB full scale absolute mode means the measurements are in units of dBm. In addition there is a field to indicate the operational mode of the spectrum analyzer continuous mode or transitional mode.

With reference to in conjunction with the signal detector identifies signal pulses in the Rx data path filters these signals based on their spectral and temporal properties and passes characteristic information about certain detected pulses to the MCU via the DPR . The signal detector also provides pulse timing information to the universal signal synchronizer to allow it to synchronize its clocks to transmissions to from other devices operating in the frequency band for example to eliminate interference with QoS sensitive devices such as cordless phones Bluetooth headsets video over 802.11 devices etc.

As shown in the signal detector comprises a peak detector and a one or more pulse detectors and . The peak detector looks for spectral peaks in the FFT sequence at its input and reports the bandwidth center frequency and power for each detected peak. The output of the peak detector is one or more peaks and related information. The pulse detectors and detect and characterize signal pulses based on input from the peak detector .

The peak detector detects a peak as a set of FFT points in contiguous FFT frequency bins each above a configured minimum power level. Once per FFT interval the peak detector outputs data describing those frequency bins that had a FFT value above a peak threshold and which frequency bin of a contiguous set of frequency bins has a maximum value for that set. In addition the peak detector passes the PDB k data field for each FFT interval. This can be represented by the pseudo code where k is the frequency bin index 

The peak detector as shown in comprises a comparator a register file a FIFO and a FIFO . The comparator compares the dB power value PDB k with the peak threshold SD PEAKTH . The FIFO stores a data word that indicates which frequency bins k had a power value above the peak threshold and which did not. For example if the FFT outputs 256 FFT values the FIFO stores a 256 bit word with 1 s indicating FFT values that exceed the peak threshold and 0 s indicating FFT values that do not exceed the peak threshold. The register file stores the maximum peak power value in any set of contiguous FFT values that exceed the peak threshold. This maxpeak information is used in the pulse detector. The FIFO stores the PDB k data field corresponding to the data stored in the register file and FIFO .

As an alternative it is not necessary that the peak detector detect a peak as a set of FFT points in contiguous frequency bins. For example it may be desirable to account for frequency selective fading channel conditions in which case a peak may span a non contiguous set of bins. Similarly it may be desirable to employ a peak threshold that is not absolute but rather is varies or is relative to the power level of a nearby frequency bin such as an adjacent bin or bins so as to allow for more precise recognition of one or more peaks that might otherwise be detected as a single peak.

The signal detector has one or more pulse detectors such as 4 allowing several pulses to be detected and characterized simultaneously. As shown in each pulse detector comprises a pulse identifier block a pulse finder block a pulse tracking block and a detect buffer . These components described further in conjunction with are operated with configurable parameters to execute a set of rules 

Pulse Shaping Rules How should pulse information be extracted from raw peak information performed by the pulse identifier .

Pulse Detection Rules Under what conditions is the start of a pulse detected performed by the pulse finder .

Pulse Termination Rules Under what conditions should an individual pulse be considered complete performed by the pulse tracker .

For a detected FFT peak at frequency index k the bandwidth of the peak is defined as FP Bandwidth Hz kh k 1 fs NFFT where k and kh are the smallest and largest integers respectively satisfying 1 k k kh and 2 P k P k BW THRESH for any k k kh where fs is the ADC sampling rate in Hz NFFT is the number of points bins in the FFT and P k denotes the power in milliwatts at FFT frequency bin k.

Similarly the center frequency of the peak is FP Center Frequency Hz kh k 2 fs NFFT. This definition of center frequency locates the signal in the Nyquist band only. The actual center frequency at RF is given by RF Center Frequency Hz FPCenter fs 2 fLO where fLO is the RF LO frequency used to convert the FFT band to baseband and a zero IF receiver architecture is assumed i.e. the LO is in the center of the RF band .

The peak detector uses the following formula to estimate the power of a peak Power dBm PDB k from k k to kh. This is only an estimate and its accuracy depends on the signal itself and the value of BW THRESH. The pulse identifier shown in comprises components to perform the pulse shaping rules using the bandwidth threshold BW THRESH parameter to identify those pulses that have a bandwidth that is greater than or exceeds the bandwidth threshold.

Pulse Detection Rules. The pulse detection rules specify the conditions under which the start of a pulse is to be detected and these rules are performed by the pulse finder . For example a pulse is considered DETECTED if there is a peak from the pulse shaping rules that satisfies ALL of the following conditions 

1 Estimated power is between the peak detector minimum power and the peak detector maximum power. The pulse power level DETECT POWER which triggered the detection of this specific pulse is used by the pulse termination rules.

2 Center frequency of the peak is between a center frequency minimum and a center frequency maximum. The detected center frequency DETECT CFREQ is used in pulse termination rules.

Pulse Termination Rules. A pulse may be considered TERMINATED if for example the pulse duration exceeds a duration maximum or NONE of the detected peaks from the peak detector satisfies ALL of the following conditions 

1 Estimated power of the peak is within a power hold value of the power of the pulse when it was originally detected.

2 Center frequency of the peak is within a frequency hold value of the center frequency of the peak when it was originally detected.

3 Bandwidth of the peak is within a bandwidth hold value of the bandwidth of the peak when it was originally detected.

The pulse tracker comprises components to detect the termination of a pulse according to these rules.

When a pulse terminates the pulse detector writes a pulse event entry into the pulse event list if the pulse duration exceeds a pulse duration threshold value. Otherwise the pulse event entry is discarded. The conditions which terminate the pulse are stored in a bit field which is included in the pulse event structure for the pulse. The pulse event structure will be described hereinafter.

Each pulse detector has its own configuration register as part of the signal detector control registers that stores values for each of the pulse parameters described above within which a pulse detector will process peak information. The following are examples of these parameters.

Each pulse detector can be configured by the MCU . The MCU writes appropriate values to the configuration register s of the signal detector to configure one or more pulse detectors to look for and characterize a certain type of pulse in the frequency band. The control register controls clearing and resetting of a pulse detector so that it can be reconfigured to look for a different type of pulse. The pulse detector control register includes a field that identifies which if any universal clock module of the universal signal synchronizer is to be associated with the pulse detector. The universal clock module UCM is described hereinafter. When there is an association between the pulse detector and the universal clock module the pulse detector stores the counter value of that universal clock module into the pulse event list whenever it detects a pulse. The counter values can be used by the MCU to phase lock a universal clock module to a periodic interference source as described hereinafter.

Each pulse detector outputs pulse event data for storage in the DPR . The following is an example of pulse event data.

The signal detector outputs descriptions of detected pulses as pulse events containing the data described in the table above may be for example into a circular list called the pulse event list in the DPR . A single list may be used for all of the pulse detectors. The source pulse detector of an individual pulse event in the list is indicated by the pulse event SDID field.

The peak calculation module takes the peak detector output start pulse for each FFT cycle timestamp of each FFT power per FFT bin power exceeding defined threshold and maximum power of a group of contiguous bins above the threshold and calculates a frequency location of the peak such as the starting lefthand frequency. In addition the peak calculation module computes the bandwidth and maximum power per peak for up to a maximum number of peaks e.g. the first 24 peaks per FFT cycle. The peak calculation module also filters out peaks that are above the peak detector threshold for less than a configurable number of FFT bins minimum bandwidth based filtering . The number of peaks that can be detected is a system design decision and more or less may be appropriate.

As an optional alternative the peak calculation module may compute the sum of each of the lefthand frequencies righthand frequencies and power for each peak in order to compute or allow computation of the average lefthand frequency average righthand frequency and average power across peaks.

The incoming data FIFO stores the data from the peak calculation module for up to two FFTs and thereby buffers out the incoming peaks to allow for processing latency as well as latency caused by waiting for access to the DPR to store results.

The pulse comparison module compares data associated with pulses determined to occur from one or more previous FFT cycles stored in the existing data structure portion of the module with data associated with peaks in the current FFT cycle stored in the incoming data FIFO and writes the results to the updated data structure portion of the module . The pulse comparison module may take one of several actions add a new pulse extend a previous pulse with a current peak or terminate an existing pulse. After processing the peaks for an FFT interval the pulse comparison module signals to the memory I F to start its function.

The memory I F transfers to the SAGE memory I F data from the existing data structure portion of module for any peaks that were terminated or that have exceeded a configurable maximum duration. The range of addresses to be used is defined by the associated Clist module .

The configuration block has registers to store values for the following configuration. These values control the filtering functions of the pulse detector as performed by operations of the various modules described above.

The peak calculation module calculates left frequency power and bandwidth for the peaks derived from the data output by the peak detector and stores that data in the incoming data FIFO except for those peaks that are less than the configured minimum bandwidth . A method is used to specify the comparison logic on the other side of the FIFO the boundaries of each FFT cycle. This method may involve passing an additional bit through the FIFO as a start of FFT or the write address of the last word of the incoming FFT data which the other side can compare against the read address . The timestamp is stored for each incoming FFT so that it can be passed to the host as part of the pulse data structure.

The data structure module may be a two port SRAM 1 R and 1 W. The RAM is deep enough to contain the existing data structure e.g. 24 words and the updated data structure e.g. 24 words for a total depth of 48 words for example. Each of the power bandwidth and frequency sections are further divided into three bytes maximum value minimum value and initial value. The incoming peaks data are sorted by increasing frequency bin index. The data in the existing data structure is sorted by increasing frequency bin index.

The following definitions are provided for purposes of explaining the operation of the pulse comparison module.

For each entry in the incoming FIFO module and in the existing data structure portion of the data structure module the pulse comparison module performs a pulse comparison algorithm summarized by the pseudo code below.

The pulse comparison logic described above in pseudo code performs the follow functions. Two lists are involved in the comparison process an incoming peak list stored in the incoming data FIFO and an existing pulse list stored in the existing data structure in module . Items in each list are sorted by increasing lefthand i.e. starting frequency. The incoming peak list tracks the peaks that are currently detected by the peak detector module. The existing pulse list tracks pulses that are currently being monitored from previous peak measurements. An updated pulse list stored in the updated data structure in module is generated from the existing pulse list by removing old pulses that do not continue and inserting new pulses for peaks in the incoming peak list that did not previously exist and the algorithm repeats until all pulses and peaks have been processed in both lists.

Since signal measurements may not always match up to the same FFT bin for successive FFT cycles an exact match in frequency is not required. For example there may be two pulses in the existing pulse list both of which are a sufficiently close match to a peak in the incoming peak list. A goal is to find the closest match to a pulse in the existing pulse list for the peak in the incoming peak list and likewise to find the closest match to a peak in the incoming peak list with the pulse in the existing pulse list.

A comparison is made between data associated with a peak in the incoming peak list with data associated with the next two pulse items in the existing pulse list. If there is a better match in frequency of the peak to the first of these two pulse items the pulse comparison logic will test the hold criteria to determine if the match is accepted for extending a pulse by a time period equal to one FFT cycle to the updated pulse list. If there is a better match in frequency of the peak to the second of these two pulse items the first pulse item is terminated as not matching and the algorithm will repeat. Similarly data associated with a pulse in the existing pulse list is compared to data associated with the next two peak items in the incoming peak list and will be used to add new pulses to the updated pulse list.

Each comparison pass results in consuming the first item in either the incoming peak list or existing pulse list or consuming the first item in both lists. This process generates the updated pulse list which becomes the existing pulse list for the next batch of incoming peak data and entries in the existing pulse list for transfer to the memory I F .

For purposes of further explanation of the operation of the pulse detector reference is made to . shows exemplary input to the pulse detector . In this case the peak calculation sub block would identify three distinct peaks whose characteristic frequency power and bandwidth are labeled in . As an example it is assumed the configuration registers for the pulse detector have the following values frequency hold 4 power hold 6 bandwidth hold 3 and that there are two pulses in the existing data structure with the following characteristics 

The pulse data produced by the pulse detector transferred to memory from the existing data structure is passed to a host processor via the memory I F and SAgE DPR. A software FIFO is constructed by using a circular list Clist maintained by the Clist module to configure the address range in the DPR and interrupts to the host to signify the status of the Clist not empty above a configured threshold and full .

The signal pulse data that is output for processing may comprise data for at least one of power frequency bandwidth and duration for each signal pulse. Alternatively or in addition the signal pulse data may comprise ranges for at least one of power frequency bandwidth and duration for each signal pulse. As still another alternative the signal pulse data may comprise averages for at least one of power frequency bandwidth and duration for signal pulses detected over time.

Some software post processing on the pulse data produced by the pulse detector may be desirable to clean up the measurements and convert to a more useable format for subsequent processing. In one embodiment the output data is captured into a software buffer during the course of a dwell time measurement interval comprising many FFT sampling cycles and then processed as a group at the end of the dwell. The processing may include one or more of the following steps 

Joining pulses that may have been broken up by measurement with pulses that start soon after their termination time at a nearby frequency. This is useful in the event fading conditions or modulation variations cause a peak to temporarily drop below the peak threshold and then subsequently appear with slightly different peak characteristics. It is desirable to be flexible to these variations because the subsequent peak may be part of the same pulse that may have otherwise not been recognized.

Subsetting the data to coincide with the actual dwell times. Latency of the hardware may cause data to cross over from one dwell interval to another. It may be necessary to separate the data cleanly between their respective dwell intervals.

Converting to more global measurement units such as converting a weighted average of FFT bins to absolute frequency measurements in kHz .

In doing so a list of pulses and their associated pulse event data starting frequency bandwidth power and time duration is produced for a certain time interval of received RF energy. This pulse event list may be used for generating pulse histograms signal classification recognizing a type of signal occurring such as an interferer for triggering pulse event based alerts and for triggering the timing and application of suitable interference mitigation algorithms when the pulse events are representative of interferer activity with respect to other desired signal or wireless network traffic. Pulse histograms may statistically track distributions of center frequency bandwidth power and duration of signal pulses detected over time by the SAGE.

Two pulse detectors are configured in a device where it is expected that an 802.11b signal and a frequency hopping signal would occur. A first pulse detector is configured to detect signals such as the 802.11 signals and would have the following parameters 

A second pulse detector is configured to detect signals such as the frequency hopping signal and would have for example the following parameters 

Alternatively the pulse detector may be configured to detect all of these types of signal pulses. In this case an SSID associated with detected signal pulses is not necessary.

Exemplary pulse event data for these pulses are listed below. For simplicity the time on data associated with these pulses is omitted.

The pulse event data for pulses are very similar to each other with the exception of the center frequency. For example pulses may have a pulse bandwidth of 1 MHz a pulse duration of 350 microsec whereas the center frequency will vary across nearly all of the 2400 MHz to 2483 MHz frequency band. The SDID for pulses is 2 since pulse detector is configured to detect these types of pulses.

There are other signal detector functions. One or more pulse detectors or pulse detector in the signal detector may be configured to monitor pulse activity and the signal detector may send a snapshot buffer trigger signal SD SBEVT to the snapshot buffer when a pulse event occurs corresponding to a configured pulse detector. The signal detector will monitor all pulse detectors and if any one of them detects such an event the snapshot trigger signal SD SBEVT is generated either on the rising edge or falling edge of the detected pulse. The snapshot buffer trigger signal SD SBEVT will cause the snapshot buffer to capture samples of the DataI and DataQ signals as described hereinafter.

Similarly the signal detector may be configured to monitor activity on each pulse detector or pulse detector and send a spectrum analyzer trigger signal SD SAEVT to the spectrum analyzer presumed to be in the transitional mode when a desired pulse event is detected by any one of the pulse detectors. Again this spectrum analyzer trigger signal is generated either on the rising edge or falling edge of the detected pulse. The SD SAEVT signal is coupled to the SA memory controller which will output to the DPR samples snapshots of the PDB k data fields.

Turning to the stats logic block has modules to accumulate statistics for power duty cycle maximum power and a peaks histogram. Statistics are accumulated in the DPR over successive FFT time intervals. After a certain number of FFT intervals determined by a configurable value stored in the spectrum analyzer control registers an interrupt is generated to the MCU so that the MCU reads out the stats from the DPR into its memory. For example the stats are maintained in the DPR for 10 000 FFT intervals before the MCU reads out the values from the DPR.

To accumulate power stats the PDB k data field is supplied to the stats logic block . It may be decimated by an optional decimator . The power at each frequency bin for a previous time interval is added by the adder to the power at that frequency bin for the current time interval. The running power sum at each frequency bin is output to the DPR as a SumPwr stat.

A duty count stat is generated by comparing the PDB at each frequency bin k with a power threshold SA PWRTHRESH at the adder and MSB block . Each time the power at a frequency bin exceeds the power threshold the previous duty count statistic for that frequency bin is incremented by the increment block . The output of the increment block is the duty count stat DutyCnt which again is a running count of the number of times the power at a FFT frequency exceeds the power threshold.

A maximum power stat MaxPwr is tracked at each frequency bin. The current maximum power value at each frequency k is compared to the new power value at each frequency k by the adder and MSB block . The multiplexer selects for output either the current power maximum or the new PDB k depending on whether the new PDB k exceeds the current power maximum at the frequency.

The number of peaks that are detected by the peak detector during each FFT time interval is counted by the counter buffered in the flip flop FF and stored in the histogram registers for output to the DPR . The PEAKEN signal is the output of the peak detector that goes high when a peak is detected. The PKDETSTART signal restarts the counting process for a statistic update cycle.

The snapshot buffer is a flexible data storage and triggering mechanism used to collect a set of raw ADC samples DataI and DataQ or DataI and DataQ for post processing by the MCU . When a snapshot trigger condition is detected the snapshot buffer buffers up a set of ADC samples and asserts an interrupt to the MCU . The MCU may then perform background level processing on the ADC samples for the purposes of identifying or locating another device operating in the frequency band or these samples may be passed to a different processor for processing.

In a pre store mode the snapshot buffer writes continuously to the DPR and stops writing and interrupts the MCU when a snapshot trigger signal is detected. In a post store mode the DPR write operation begins only after a trigger is detected. A combination pre and post store scenario may be created using the DELAYSTART and DELAYEND control registers to capture samples of the receive data signals both before and after a snapshot trigger condition.

There are two types of snapshot trigger signals supported SB TRIG and SD SBEVT. The snapshot trigger signal SD SBEVT is sourced from the signal detector as described above and the SB TRIG signal is sourced from a module external to the SAGE such as a location measurement module. For example the MCU may be programmed to collect raw ADC samples when a particular signal pulse is detected for signal classification processes. The MCU configures a pulse detector to generate the snapshot trigger signal SD SBEVT upon detecting a pulse that meets a certain set of characteristics as described above. The snapshot buffer clears this bit when it has finished its processing usually within one clock .

The snapshot buffer samples may be stored in a variety of formats. One example of a format is one complex sample per 32 bit word. The high order 16 bits contain the real part of the sample the low order 16 bits contain the imaginary part. The real and imaginary parts may be stored in a Q format where 0 represents 0V on the ADC in the RF Interface 800 and 0x7FFF and 0x8000 represent positive and negative full scale respectively. A B bit QN fractional number x takes on the values n 2 n 2 . . . 2 1. The B bit signed integer n 2 x is used to represent x and is usually stored as a signed two s complement integer.

Referring first to the DPR is partitioned into several buffers or storage areas to store information generated by the spectrum analyzer signal detector and snapshot buffer . A power vs. frequency circular buffer PF Buf stores real time power vs. frequency information output by the spectrum analyzer . The table on the left in generally resembles the PF Buffer . A stats buffer stores SumPwr DutyCnt MaxPwr and peaks statistics output by stats logic module. show represented data that is stored by the stats buffer . A pulse event circular buffer stores pulse event data output by the pulse detectors in the signal detector . A snapshot circular buffer stores raw ADC samples from the snapshot buffer . In addition a buffer stores pulse events output by the pulse detector . Information is exchanged between elements of the SAGE and the DPR via the memory interface I F .

The DPR is for example a 32 bit wide synchronous DPR. Different clocks are used to drive the logic at each port. The CLK signal is used on SAGE components side and the BUSCLK signal is used on the MCU side. The DPR is word addressable from the SAGE side and byte addressable from the MCU side. An AHB bus interface maps an internal MCU byte address into the corresponding word addresses MDADDR and byte enable MDBYTEN signals attached to the MCU side of the DPR.

The data structures used to manage the DPR buffers are stored in the control registers associated with DPR. The MCU is responsible for configuring the addresses and relative sizes of each buffer using these control registers after reset.

Referring to the SAGE uses circular lists to manage some of the data stored in the DPR . As indicated above buffers and use circular lists. A circular list Clist consists of a list of fixed sized entries ClistEntries and a management structure ClistMgt . The ClistEntries portion of the list is stored in the DPR . Each Clist has an associated ClistMgt structure which resides within the peripheral address space. The DPR location of the ClistEntries is held within ClistMgt. The entry size ClistMgt.sizeofEntry of the list is configurable. The Clist is essentially a circular buffer i.e. a first in first out FIFO buffer.

When performing input output with a circular list read and write indices are maintained to indicate the next entry to be read or written. Whenever the end of the list is reached the index is wrapped back to the starting position i.e. circular list . Whenever a read or write index is wrapped to the starting position a corresponding read pass number or write pass number is incremented. This combination of index and pass number is called a position or ClistPosition. The ClistPosition is for example a 32 bit quantity consisting of a 16 bit pass and a 16 bit index. When the pass number is updated the entire 32 bit ClistPosition is written out as a single atomic operation. Similarly a read operation reads the entire 32 bit ClistPosition to ensure the pass number and index components are consistent when wrap occurs.

The universal signal synchronizer is useful to lock to interfering periodic signal sources. The USS consists of multiple programmable clock generators referred to as USS clock modules UCMs . The MCU can detect interference from a periodic signal source such as a Bluetooth headset a cordless phone etc. by examining traffic statistics gathered by the host communication device. For example the MAC logic will accumulate traffic statistics indicating how successful the host communication device has been in transmitting to and receiving information from other devices according to a MAC protocol such as IEEE 802.11x employed by the device. Traffic statistics that may reveal the presence of an interferer are 1 un acknowledged messages 2 repeated cyclic redundancy code CRC errors 3 low received signal strength etc. For example the fact that several messages are sent from the device that are not acknowledged by the intended destination device is very revealing of interference in the frequency band.

When the MCU determines to look for the cause of the interference it configures the appropriate frequency and phase parameters corresponding to the interference source into a UCM and using pulse timing information from the signal detector phase frequency locks the UCM timing to the transmit timing for the interference source. After phase frequency lock has taken place the UCM can be used as a timing reference to prevent data transmissions to from the MAC logic from overlapping and interfering with data exchanges with the interference source.

A block diagram of a UCM is shown in . A timing diagram for an exemplary interferer such as a Bluetooth signal is shown in . Each UCM clock interval consists of two on off segments on logic 1 off logic 0 the duration of which is specified by the DurOn DurOff DurOn and DurOff registers and respectively. The two segment UCM clock scheme is used to accommodate interference sources such as Bluetooth SCO links that exchange bidirectional data using two unequally spaced pulses as shown in . A multiplexer selects input from one of the registers through where selection from register is via an adder coupled between the register and an input to the multiplexer .

A down counter is connected to the output of the multiplexer and counts down from the duration of each duration segment. A mod N counter is connected to the down counter and is used to reload the down counter with the duration of the next segment after the down counter counts down to zero. For the case shown the mod N counter is a mod counter. An accumulator is coupled to the mod counter and has a carry output that is coupled back to the adder . The most significant bit MSB output of the mod counter is used to drive the count input of the accumulator . The accumulator is a Z bit accumulator used to offset the UCM clock frequency advancing or delaying the UCM clock by one TMR CLK cycle every 2 freqOffset UCM cycles where the freqOffset parameter is configurable by the MCU via an adder coupled to the accumulator . There is a phaseOffset register and a freqOffset register that the MCU writes to for the purposes explained hereinafter.

In general the clock module comprises at least N registers each of which stores a programmable duration value associated with one of two states of a pulse of the communication signal where N is equal to 2 times the number of pulses in a cycle of the communication signal and the mod N counter coupled to the down counter counts up to N 1 by one in response to the down counter reaching zero and when reaching N 1 causing content of the next of the N registers to be loaded into the down counter. The count input of the Z bit accumulator is coupled to an output of the mod N counter and the adder adds an output of the accumulator with the frequency offset value and supplies the sum to an input of the accumulator wherein a carry output of the accumulator is coupled to the Nth register to increment or decrement the value of the Nth register before it is loaded into the counter thereby extending or contracting the length of a cycle of the clock signal used to drive the down counter by one clock pulse every 2 frequency offset value clock cycles.

A UCM TMR CLK frequency of f 2 MHz provides sub microsecond timing granularity on the pulse duration intervals. An 18 bit register size for the duration registers accommodates transmission frequencies as low as 10 Hz. A 16 bit Z 16 accumulator is suitable for the accumulator to provide less than 0.01 ppm frequency resolution for a UCM clock frequency of 1 kHz. The following additional characteristics may apply to the UCM shown in 

Output clock frequency range 1.9 Hz DurOn DurOff DurOn DurOff 2 1 to 500 kHz DurOn DurOff DurOn DurOff 1 

When the MCU detects and classifies a periodic interference source it takes the following steps to lock the UCM timing to the transmission timing associated with the interference source.

First the MCU initializes and configures a UCM to the appropriate nominal frequency using the DurOn and DurOff registers and it sets the content of the freqOffset register to zero. The MCU writes values to the duration registers based on knowledge gained about the interferer from pulse events output by a pulse detector and or from snapshot buffer data supplied to the MCU that lead to the MCU determine that there is an interference event. The MCU also associates a pulse detector with the UCM and configures the pulse detector to measure the phase offset between the interference source and the UCM . During the synchronization process information about the timing of the interferer signal is obtained from pulse events generated by the assigned pulse detector and the MCU compares them against the duration values written into the duration registers. The pulse events include the count values of the down counter and the mod N counter at the detection of a pulse as described above in connection with the description of the signal detector.

The MCU examines the count values of the down counter and the mod N counter to measure a phase error between the clock signal that drives the down counter and the occurrence of the pulse of the communication signal. The MCU removes the initial phase offset error between the UCM and the interference source by loading a phase adjustment value into the PhaseOffset register . This causes the UCM to retard the phase by the value specified in the PhaseOffset register the next time the down counter and mod counter cycle to zero.

After removing the initial phase offset the MCU periodically monitors the phase count values of the down counter and the mod N counter in the pulse event data to measure the phase error. The MCU generates a frequency offset between the interference source from the pulse detector and the UCM clock and updates the FreqOffset register to compensate for frequency drift between the two signals. A block diagram of an update technique using a second order phase lock loop PLL is shown in which will be described hereinafter. The MCU writes a value into the FreqOffset register that causes the accumulator to retard or advance depending on the sign of the adder the frequency a certain number of times per UCM clock cycles.

When the phase offset samples converge to zero the UCM is said to be phase frequency locked to the interference source. Once the loop is locked the MCU may let the UCM clock flywheel for a period of time without monitoring the phase offset from the interference source. The MCU may continue to periodically monitor the phase offset and update the loop parameters since the clocks will eventually drift primarily due to temperature changes in the near and far end reference oscillators . A good rule of thumb to use for estimating the drift rate in this case is microsecond per second assuming an oscillator with 20 ppm of variation over 70 degrees C. 4 7 ppm per degree C. and 3 degrees F 1.7 degrees C. temperature variation over 5 minutes due to air conditioner hysteresis etc. .

Reference is now made to which shows a process useful by the MCU to update for clock drifts. The process updates the frequency offset between the clock of the interfering signal and the local clock operating the UCM. Step represents the pulse detector associated with the particular interfering signal generating phase information by reading the states of down counter and mod N counter and step represents retrieving of information from the pulse event circular list in the pulse event buffer of the DPR . Multiple pulse events from the signal detector may be buffered up in the DPR before the MCU has time to retrieve them. Next in step the phase detection information is updated depending on the value of the down counter relative to the value of the DurOn register . If the down counter value is less than the value of DurOne divided by 2 then the phase detection information is set equal to the value of the down counter . Otherwise the phase detector information is set equal to the value of the down counter less the value of the DurOn register . In step output of step is averaged to reduce noise effects. Next a filter or phase lock loop PLL process is performed to lock to the phase and frequency of the interfering signal clock. Any suitable first order or second order filtering or PLL process can be used. shows a second order PLL process comprising two scaling operations and an adder a zblock and an accumulator . The parameters k and k are PLL constants that depend on the UCM clock rate and a buffering factor of the pulse event circular list in the DPR. The output of the process is a frequency offset value that is stored for later use in synchronizing to the near clock and the far end clock that of the particular interfering signal . Once the frequency offset value is computed the interfering signal can be ignored for a period of time and the UCM can more quickly lock to the interfering signal by loading the stored frequency offset FreqOffset into the FreqOffset register of the UCM as shown in .

The USS passes UCM timing information to an external component such as the MAC logic using the NEXTINTFDUR and NEXTINTFTIME signals described hereinafter. The USS SELECT signals also described in the table above allow for selection of which UCMs to include in next event calculation.

With reference to other interfaces to the SAGE will be described. The global timer interfaces GTI are used by the spectrum analyzer and signal detector to timestamp transmission events in the sampled frequency band. The GTI comprises for example the timestamp signal TMR TSTMP and a global timer clock signal TMR PULSE where TMR PULSE 1 on the positive edge of BUSCLK indicates a new value of TMR TSTMP. The GTI logic runs at the BUSCLK clock frequency. The TMR TSTMP field is updated periodically such as at 2 MHz during BUSCLKs in which TMR CLK 1.

The SAGE communicates timing information for periodic interference sources such as Bluetooth headsets or cordless phones to another hardware element external to the SAGE such as the MAC logic . There are primarily three MAC interface signals USS SELECT NEXTINTFDUR and NEXTINTFTIME. NEXTINTFDUR is the duration in TMR PULSEs of the next interference event among the selected UCM clocks via USS SELECT. The interference condition is said to be active due to an interferer s transmission when any of the selected UCM clocks is high. When all of the selected interference sources are inactive i.e. all UCM clocks are low NEXTINTFDUR indicates the duration of the next interference event in TMR PULSEs. When at least one of the interference sources is active NEXTINTFDUR indicates the time in TMR PULSEs until the end of the current interference transmission and is updated once per TMR PULSE.

NEXTINTFTIME is the time remaining in TMR PULSEs until the next interference event among the selected UCM clocks via USS SELECT. The interference condition is said to be active due to an interferer s transmission when any of the selected UCM clocks is high. When all of the selected interference sources are inactive NEXTINTFTIME indicates the time until the next interference event and is updated once per TMR PULSE. When at least one of the interference sources is active NEXTINTFTIME reads zero.

USS SELECT is a signal that selects which USS UCMs to include in the next interference event calculations as reported to the MAC logic through the NEXTINTFXXX signals. USS SELECT i 1 means include UCM i in the calculation.

With reference to one example of how the SAGE may be operated is described. The SAGE may reside in a communication device that comprises the radio transceiver and a MCU . In addition for higher level processing a host processor may also be provided that is coupled to the MCU . The MCU and host processor may share responsibility for configuring the SAGE and the radio transceiver . The host processor may be responsible for more complex functions. However it should be understood that the functions of the MCU and the host processor may be executed by a single processor of suitable processing capability and power consumption characteristics. The radio transceiver is shared by the SAGE and other communication device functions such as receiving signals from or transmitting signals to another communication device.

There are many ways to employ the features and functions of the SAGE some examples of which are explained. The MCU or the host processor may be programmed to configure the receiver portion of the radio transceiver to operate in a wideband mode thereby sampling activity in an entire frequency band for a time period such as 100 msec or longer. In addition the MCU or host processor may configure certain basic parameters of the SAGE such as the decimator factor the cycle count of the number of spectrum analyzer updates i.e. FFT intervals before forwarding the stats to the MCU the minimum power threshold for duty counting the lowpass filter parameter of the spectrum analyzer. The receiver portion of the radio transceiver may also be configured to operate in a narrowband mode at a configurable center frequency and bandwidth.

While the radio transceiver is operated in a wideband mode the SAGE is activated to sniff the spectrum with the spectrum analyzer component of the SAGE . The spectrum analyzer stats such as those shown in are accumulated in the DPR and read by the MCU and further processed by the host processor . During this sniff mode the pulse detectors of the signal detector component may be configured in a default mode to look for signal pulses of commonly expected signals in the frequency band. In the case of an unlicensed frequency band such signals may include an IEEE 802.11 signal a cordless phone signal or a Bluetooth frequency hopping signal. Alternatively during the sniff mode the output of the pulse detectors may be completed ignored and the spectrum analyzer stats processed to determine generally what is happening in the frequency band. Based on intelligence gathered by the spectrum analyzer stats generated from the sniff mode the host processor or MCU may configure one or more pulse detectors of the SAGE to look for certain types of signal pulses in the frequency band using the pulse detector configuration parameters described above.

Still another possibility is to iteratively change the configuration of one or more pulse detectors so as to cycle through pulse detector configurations over time. For example the center frequency bandwidth pulse duration and or time between pulses parameters can be changed to process incoming signal data. The incoming signals are processed during each cycle with the one or more pulse detectors. Eventually by cycling through different pulse detector configurations the goal is to eventually find a pulse detector configuration that fits the type of signal activity occurring in the frequency band. This is useful for example in a signal classification process.

Further operation of the SAGE to gather output from the signal detector may occur while the radio is in a wideband mode or a narrowband mode depending on the demands of the radio for communication services and the type of signals suspected to be present in the frequency band. Whether configured based on information gathered from a sniff mode or operated using predetermined configuration information the pulse detectors will generate pulse event information that is output to the MCU together with spectrum analyzer stats and any snapshot buffered data. In addition the universal signal synchronizer component of the SAGE may be operated by the MCU to synchronize to the clocks of potentially interfering communication signals in the frequency band. This synchronization information can be used in an interference mitigation or co existence algorithm executed by the MCU or the host processor to schedule transmissions by the communication device so as to avoid collisions with other communication signals in the frequency band.

In addition the output of the SAGE can be used in a signal classification process to identify classify signals in a frequency band such as for example a wireless headset operating with a frequency hopping communication protocol e.g. Bluetooth wireless file print services radar systems microwave ovens an IEEE 802.11 wireless local area network a HomeRF network a FHSS cordless phone an analog cordless phone wireless infant security monitors devices operating using the IEEE 802.15.3 communication protocol. A signal classification process is disclosed in the aforementioned commonly assigned patent application.

One or more radio receivers may be coupled to the radio I F . For example one radio receiver may be dedicated to one frequency band such as the 2.4 GHz unlicensed band and another radio receiver may be dedicated to another frequency band such as the 5 GHz unlicensed bands . Each radio receiver and may have the capability of operating in a wideband mode for purposes of downconverting energy in the entire frequency band for a time interval. An example of a radio receiver is identified above. A switch selects the baseband analog output from one of the radio receivers and couples it to an ADC which is in turn coupled to the radio I F . The DAC is used to couple control signals to the radio receivers to for example control the bandwidth of operation of the radio receiver for wideband or narrowband operation. The dotted block around the radio receivers and the ADC and DAC the SAGE the DPR and the radio I F in is meant to indicate that these components may integrated in a PC card device such as a PC card that interfaces with the host device . Thus the card device essentially is a spectrum analyzer device and much more for a radio frequency band that interfaces to a host device . The two radios and may optionally be implemented by a single multi band radio. The DAC may also be unnecessary.

In this use of the SAGE the host processor performs the functions that are otherwise performed by the MCU to control and interface with the SAGE as well as other functions. One use of the SAGE is to display the various outputs of the SAGE . For example an application program residing in the memory of the host device may generate a graphic user interface display of the SAGE output.

Moreover the radio I F SAGE and DPR are shown in phantom to indicate that all of the functions of these components may be performed by a software program stored in the memory and executed by the host processor . In this configuration the output of the ADC is coupled through an interface such as the cardbus interface to the host processor which executes processes that would otherwise be performed in hardware by the SAGE as well as the other processes referred to above.

In sum a method is provided for detecting signal pulses from received radio frequency RF energy comprising steps of storing peak data describing at least one of frequency bandwidth and power for each of one or more peaks of RF energy comparing the peak data for one or more peaks detected for a current sampling cycle with the peak data for one or more peaks detected during a previous sampling cycle and based on the step of comparing storing a list of signal pulses representing the occurrence of peaks having similar peak data over multiple sampling cycles. The step of comparing may comprise matching peaks with respect to frequency bandwidth and power for the current sampling cycle with the data in the list of signal pulses. The list of signal pulses is updated with data for a peak that matches data for a signal pulse in the list to thereby a extend a duration the signal pulse for a period of time corresponding to the sampling cycle b add new signal pulse data the list for a peak associated with the current sampling cycle or c terminate a signal pulse in the list.

Similarly a signal pulse detector is provided that detects signal pulses from received radio frequency RF energy comprising a peak calculation module that computes peak data describing at least one of frequency bandwidth and power for each of one or more peaks of RF energy that exceed a power threshold and a minimum bandwidth threshold during each of a plurality of sampling cycles a first memory that stores an incoming peak list comprising peak data for one or more peaks detected for a current sampling cycle and a pulse comparison module coupled to the first memory and which compares the peak data in the incoming peak list with existing pulse data to determine whether to i extend an existing pulse 2 terminate an existing pulse or 3 add a new pulse to the existing pulse data. A second memory may be provided that stores the existing pulse data in an existing pulse list for signal pulses determined to occur based on peak data in the incoming peak list and that stores an updated pulse list containing changes to the existing pulse list based on comparison of data in the incoming peak list for the current sampling cycle with the pulse data in the existing pulse list.

The signal pulse detector may be part of a spectrum analysis system that includes a Fast Fourier Transform FFT block that receives as input a digital signal representing received RF energy and computes FFT values for a plurality of frequency bins for a time interval a power calculation block coupled to the FFT block that computes the power at each frequency bin at each time interval a peak detector that receives as input an output of the power calculation block for successive time intervals detects one or more peaks in the output of the power calculation block and outputs data describing peaks of RF energy for each time interval and a statistics computation module coupled to the power calculation module that computes one or more of a running sum of the power at each frequency bin over time intervals a duty count comprising a running sum at each time interval of the number of times the power at each frequency bin exceeds the power threshold a maximum power for each frequency bin for the current and prior time intervals and a running count of the number of time intervals in which a certain number of peaks have been detected.

A method is provided for use in a radio communication device that operates in a frequency band the method for analyzing activity in the frequency band based on signals received by the communication device comprising steps of computing Fast Fourier Transform FFT values at a plurality of frequency bins from a digital signal representing activity in a frequency band during a time interval computing the power at each frequency bin adding the power at each frequency bin for a current time interval with the power at the corresponding frequency bin for a previous time interval to obtain a running sum of the power at each frequency bin comparing the power at each frequency bin with a power threshold to obtain a duty count of the number of times that the power at each frequency bin exceeds the power threshold over time intervals and comparing the power at each frequency bin for a current time interval with the power at the corresponding frequency bin for a previous time interval to track the maximum power in each frequency bin over time intervals. This process may also be implemented by instructions encoded on a processor readable medium that when executed by a processor cause the processor to perform these same steps.

Still further provided is a spectrum analysis device for use in a radio communication device that operates in a frequency band comprising a Fast Fourier Transform FFT block that receives as input a digital signal representing activity in the frequency band for a time interval wherein the FFT block computes FFT values for each of a plurality of frequency bins from the digital signal a power calculation block that computes the power at each frequency bin and outputs a power data field comprising power values for the plurality of frequency bins and a signal detector circuit. The signal detector circuit comprises a peak detector that receives as input the power data field for successive time intervals of activity in a frequency band and detects one or more peaks in the spectral information the peak detector outputting information identifying peaks for each time interval and at least one pulse detector coupled to the peak detector that detects signal pulses that satisfy configurable characteristics based on the output of the peak detector.

Still further provided is a method for detecting radio signals in a frequency band comprising steps of operating a radio receiver in a wideband mode so as to generate a downconverted signal representing activity in the entire frequency band performing spectral analysis on the downconverted signal to generate spectral information of the frequency band and detecting signal pulses of signals expected to be present in the frequency band from the downconverted signal based on knowledge gained from the spectral information of the frequency band.

Yet further provided is a processor readable medium encoded with instructions that when executed by a processor cause the processor to perform steps of computing a Fast Fourier Transform FFT values for each of a plurality of frequency bins from a digital signal representing activity in a frequency band for a time interval computing the power at each frequency bin from the FFT values detecting one or more peaks from the FFT values and detecting signal pulses that meet one or more characteristics from the detected one or more peaks.

The above description is intended by way of example only and is not intended to limit the present invention in any way.

