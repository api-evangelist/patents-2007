---

title: Methods and apparatus to control a voice extensible markup language (VXML) session
abstract: Methods and apparatus to control a voice eXtensible Markup Language (VXML) session are disclosed. An example application server comprises an interface to send a first protocol message to a media server to initiate a communication session to provide first VXML content to the media server, and a session controller to detect an event at the application server and to direct the interface to send a second protocol message to the media server to interrupt the first VXML content at the media server and to direct the media server to obtain second VXML content via the communication session.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07912963&OS=07912963&RS=07912963
owner: AT&T Intellectual Property I, L.P.
number: 07912963
owner_city: Atlanta
owner_country: US
publication_date: 20070628
---
This disclosure relates generally to voice eXtensible Markup Language VXML sessions and more particularly to methods and apparatus to control a VXML session.

Many voice over Internet protocol VoIP applications are implemented using a combination of session initiated protocol SIP and voice eXtensible Markup Language VXML . VXML is a mark up based programming language defined by the World Wide Web Consortium W3C and designed for creating audio dialogs that feature synthesized speech digitized audio recognition of spoken and dual tone multiple frequency DTMF key input recording of spoken input telephony and or mixed initiative conversations. One of the goals of VXML is to bring the advantages of Web based development and or content delivery to interactive voice applications. A common SIP VXML architecture for implementing VoIP applications utilizes application servers that implement VXML servers and media servers that implement VXML clients . A media server e.g. a VXML client requests and obtains VXML content and or data from an application server e.g. a VXML server using a hyper text transfer protocol HTTP communication session. The media server then executes the obtained VXML content and or data including in some instances requesting obtaining and or executing additional VXML content and or data.

Methods and apparatus to control a voice eXtensible Markup Language VXML session are disclosed. A disclosed example method includes detecting an occurrence of an event at an application server and sending a protocol message to a media server to interrupt execution of first voice eXtensible Markup Language VXML content at the media server and to direct the media server to request second VXML content from the application server.

A disclosed example application server includes an interface to send a first protocol message to a media server to initiate a communication session to provide first VXML content to the media server and a session controller to detect an event at the application server and to direct the interface to send a second protocol message to the media server to interrupt the first VXML content at the media server and to direct the media server to obtain second VXML content via the communication session.

A disclosed example media server includes an interface to receive a protocol message from an application server and a voice eXtensible Markup Language VXML client to obtain first VXML content from the application server the VXML client to interrupt execution of the first VXML content and to obtain second VXML content from the application server in response to the protocol message.

Another disclosed example method includes receiving a protocol message from an application server and interrupting execution of first voice eXtensible Markup Language VXML content and requesting second VXML content from the application server in response to the protocol message.

In the interest of brevity and clarity throughout the following disclosure references will be made to the example Internet protocol IP Multimedia subsystem IMS based voice over IP VoIP communication system of . Moreover the following disclosure will utilize session initiation protocol SIP messages and or SIP based message exchanges. However it should be understood that the methods and apparatus described herein to provide call associated content services are applicable to other VoIP communication systems and or networks e.g. networks based on soft switches VoIP devices IMS devices application servers media servers tElephone NUMber mapping ENUM servers border elements access networks IP networks IMS networks and or IMS communication systems and or other types of protocols messages and or message exchanges.

To access IMS communication services throughout and or within a site location building geographic area and or geographic region the example IMS communication system of includes any number and or type s of access networks one of which is designated in with reference number . In general the example access network provides and or facilitates a communicative coupling of the VoIP user device to and or with an IMS network . The IMS network provides and or enables IMS communication services e.g. telephone services Internet services data services messaging services instant messaging services electronic mail email services chat services video services audio services gaming services voicemail facsimile services etc. to the VoIP device . However in some examples a VoIP device may access the IMS network without use of an access network . The example access network can be implemented using any number and or type s of past present and or future standards specifications communication devices networks technologies and or systems such as public switched telephone network PSTN systems public land mobile network PLMN systems e.g. cellular wireless distribution systems wired or cable distribution systems coaxial cable distribution systems Ultra High Frequency UHF Very High Frequency VHF radio frequency systems satellite or other extra terrestrial systems cellular distribution systems power line broadcast systems fiber optic networks and or any combination and or hybrid of these devices systems and or networks.

While in the illustrated example of the example VoIP device is depicted as having an associated access network such a depiction is merely illustrative. For example a VoIP device may be configured and or capable to utilize more than one access network at the same and or different times a VoIP device may be configured to access the IMS network directly and or via an IP network without an intervening access network etc.

To provide VoIP and or IMS communication sessions and or services the example IMS based VoIP communication system of includes one or more IMS networks one of which is designated in with reference numeral . As described more fully below in connection with the example IMS network of implements VoIP applications e.g. voice activation applications interactive voice response IVR applications blind call transfers supervised call transfers etc. based on SIP and voice eXtensible Markup Language VXML .

To provide and or implement VoIP applications the example IMS network of includes one or more application servers one of which is designated at reference numeral and one or more media servers one of which is designated at reference numeral . Application servers are sometimes referred to as feature servers. In addition to VoIP and or IMS functions and or services e.g. call barring calling name delivery and or blocking call blocking call forward call busy transfer call screening call forking call trace voicemail announcement servers call trees etc. the example application server of includes and or implements a VXML server to provide VXML content and or pages e.g. VXML code scripts instructions and or data to the example media server to execute e.g. carry out . By executing one or more VXML pages the example media server of implements a particular VoIP application and or VXML session e.g. a particular voice dialog session for a VoIP user device . In an example scenario a user of the VoIP device initiates a telephone call to a destination not shown that does not respond e.g. does not answer . Because the destination did not answer the example IMS network of redirects the requested communication session to the example application server . Alternatively the telephone call may originally have been directed to the application server . The example application server of in turns directs the example media server to download and execute VXML content of interest. For example executing the VXML content may cause an audio message prompting the user to speak their name to play and the name spoken by the user to be recorded. An example manner of implementing the example application server of is described below in connection with . An example manner of implementing the example media server of is described below in connection with .

As described more fully below in connection with the example application server of is able to interrupt the execution of VXML content while it is being executed by the example media server . To interrupt VXML content execution the example application server sends a SIP REFER message to the media server that is executing the VXML page. An example SIP REFER message includes a hyper text transfer protocol HTTP uniform resource identifier URI for a replacement VXML page that the media server is to obtain from the application server and then begin executing. The example SIP REFER message also includes a REFRESH parameter and or field that indicates to the media server that the identified and or specified replacement VXML page is to be executed instead of the currently executing VXML page. An example data structure that may be used to implement a SIP REFER message to interrupt the execution of VXML content is described below in connection with .

In an example scenario the application server directs e.g. by sending a SIP INVITE message to the media server the media server to execute first VXML content that provides music on hold to the VoIP device while the application server and or the IMS network performs a call transfer supervised and or blind to a destination e.g. a destination selected via a VXML session and or automatically selected by the application server . Once the call transfer has completed the application server interrupts the execution of the first VXML content by the media server e.g. by sending a SIP REFER message to the media server . In response to the interruption the media server obtains and then executes second VXML content from the application server that causes and or directs the VoIP device to become communicatively coupled to the destination thereby ending the voice dialog session e.g. VoIP applications between the VoIP device the media server and the application server . The example media server of may also request obtain and or execute VXML content based upon an event and or condition e.g. a user input received at the media server that occurs at and or is detected by and or at the media server .

In contrast traditional application servers cannot interrupt the execution of VXML content by a media server. Instead VXML content provided by a traditional application server must include instructions that for example cause and or direct the media server to periodically refresh VXML content to allow the application server an opportunity to direct the media server to different VXML content. However such refresh operations are inherently burdensome on the communication resources of the IMS network and or limit the types of voice dialog sessions e.g. VoIP applications that can be implemented. For at least these reasons the example application server and or the example media server implement methods and or apparatus that facilitate more robust and or flexible control of VXML sessions while simultaneously reducing the communication resources required to provide enhanced VXML sessions.

As illustrated in the example application server and the example media server exchange control and or signaling data and or information using SIP protocol messages e.g. a SIP INVITE message and or a SIP REFER message and use HTTP to transfer VXML content. Audio data e.g. audio prompts synthesized speech spoken words dual tone multiple frequency DTMF signals are exchanged between the VoIP device and the media server using a real time protocol RTP communication session. The example VoIP user device and the application server exchange control and or signaling information via SIP protocol messages. The example SIP HTTP and RTP communications illustrated in do not necessary flow directly between the VoIP device the application server and or the media server . Instead for example SIP protocol messages exchanged by the VoIP device and the application server pass through one or more of the example access network an IP network and or one or more servers e.g. a proxy call session control function P CSCF server .

In the example IMS communication system of the example VoIP device is communicatively coupled to the example IMS network via the example access network and or any number and or type s of private and or public IP based communication networks such as for example the Internet one of which is illustrated in with reference numeral . While in the illustrated example of the example VoIP device is depicted as having an associated IP network such a depiction is merely illustrative. For example the example VoIP device may be configured and or capable to utilize more than one IP network at the same and or different times etc. In general the example IP network of provides and or facilitates a communicative coupling of the VoIP device to and or with the IMS network .

In some examples the VoIP device may be communicatively coupled to the access network via one or more additional IP based networks and or devices not shown such as a local area network LAN a gateway and or a router located within a place of business a school and or a residence. The example VoIP device of is communicatively coupled to the example access network the example IP network and or more generally the example IMS network via any number and or type s of past current and or future communication network s communication system s communication device s transmission path s protocol s technique s specification s and or standard s . For instance the example VoIP device may be coupled to the example access network the example IP network and or the example IMS network via any type s of voice band modem s digital subscriber line DSL modem s cable modem s Ethernet transceiver s optical transceiver s IP virtual private network VPN connection s Institute of Electrical and Electronics Engineers IEEE 802.11x a.k.a. WiFi transceiver s IEEE 802.16 a.k.a. WiMax wireless local area network WLAN access point s general packet radio services GPRS networks in 3G wireless networks etc. Moreover any or all of the example IMS network the example access network and or the example IP network of may extend geographically to include one or more locations near to and or encompassing one or more of the VoIP devices . For example the access network may include a wireless access point not shown by which for example a WiFi IP phone connects to the IP network and the IMS network .

In the example IMS communication system of the example access network the example IP network and the IMS network need not be owned implemented and or operated by a single service provider. For example the VoIP device may access IMS services provided by an IMS network that is owned operated and or implemented by a first service provider via an access network which is owned operated and or implemented by a different service provider. However any or all of the access network the IMS network and or the IP network may be operated by the same service provider.

In the illustrated example IMS communication system of each VoIP device e.g. the example VoIP device that is registered to the example IMS network is associated with and or assigned to a serving call session control function S CSCF server one of which is designated in with reference numeral . The example S CSCF server of is responsible for handling incoming and or outgoing IMS e.g. VoIP communication sessions e.g. telephone calls and or data and or video sessions associated with its registered VoIP devices.

While one S CSCF server is illustrated in the IMS network may include any number and or type s of S CSCF servers and each such S CSCF server may support any number and or type s of VoIP devices. The example S CSCF server of performs session control maintains session states and or enables communications with call feature servers e.g. the example feature servers of for its associated and or registered VoIP devices. For instance when a VoIP device initiates for example an outgoing telephone call a communication session initiation message e.g. a SIP INVITE message is routed by the IMS network from the VoIP device to the S CSCF server associated with that particular VoIP device . The example S CSCF server also enables communication with application servers e.g. the example application server for its associated and or registered VoIP devices .

To locate and or identify the VoIP device and or endpoint e.g. the example content server associated with a called party e.g. a called telephone number the example IMS network of includes any number of ENUM servers one of which is designated in with reference numeral . Based upon an ENUM query request message received from a S CSCF server e.g. the example S CSCF server the example ENUM server of performs an ENUM database lookup to identify one or more uniform resource identifiers URIs e.g. a SIP URI an HTTP URI etc. for a called party identifier e.g. E.164 telephone numbers .

In response to the communication session initiation message the example S CSCF server sends an ENUM query request message to an ENUM server e.g. the example ENUM server to obtain an identifier e.g. a SIP URI for the called party e.g. the example application server . The URI obtained from the example ENUM server is used by the S CSCF server to establish the requested communication session.

To provide an access entry point for a VoIP device e.g. the example VoIP device into the IMS network the example IMS network of includes any number and or type s of P CSCF servers one of which is designated in with reference numeral . The example P CSCF server of among other things routes SIP messages between VoIP devices and their associated S CSCF server s .

To locate and or identify the S CSCF server e.g. the example S CSCF server associated with a VoIP device the example IMS network of includes any number and or type s of interrogating call session control function I CSCF servers one of which is designated in with reference number . The example I CSCF server of serves as a contact point within the example IMS network for connections destined for a VoIP device of the IMS communication system and or for a VoIP device currently located within the serving area of the IMS network e.g. a roaming subscriber . For example for a destination identified by the example ENUM server the example I CSCF server identifies to which S CSCF server the final destination VoIP device is registered. IMS protocol messages e.g. SIP messages directed to the destination VoIP device are then routed to the S CSCF server identified by the I CSCF . If a destination identified by the ENUM server is associated with a device not associated with the IMS network e.g. a public switched telephone network PSTN device a public land mobile network PLMN device and or a VoIP device served by a different IMS and or VoIP network protocol messages directed to the destination are routed to an appropriate border element e.g. a media gateway a peered border element etc. not shown .

To manage subscriber information and or to enable subscribers and or servers to locate other servers subscribers and or destinations the example IMS network of includes any number and or type s of home subscriber server s HSSs one of which is designated in with reference numeral . The example HSS of maintains a device profile and or one or more preferences for each subscriber and or VoIP device of the IMS network . The example I CSCF server of uses information contained in the HSS to for example determine and or locate the S CSCF server associated with a particular subscriber and or VoIP device .

As illustrated in the example application server the example media server the example S CSCF server the example ENUM server the example P CSCF server the example I CSCF server and or the example HSS communicate and or are communicatively coupled via any number type s and or combination of communication paths communication networks busses and or communication devices .

While an example IMS based VoIP communication system and an example IMS network have been illustrated in the devices networks systems servers and or processors illustrated in may be combined divided re arranged eliminated and or implemented in any way. For example it will be readily appreciated by persons of ordinary skill in the art that the example application server the example media server the example S CSCF server the example ENUM server the example P CSCF server the example I CSCF server and or the example HSS illustrated in are logical entities of the example IMS network . They may therefore be implemented separately and or in any combination using for example machine accessible instructions executed by one or more computing devices and or computing platforms e.g. the example processing platform of . Further the example VoIP device the example application server the example media server the example S CSCF server the example ENUM server the example P CSCF server the example I CSCF server and or the example HSS and or more generally the example IMS network may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Further still the example IMS based VoIP communication system and or the example IMS network may include additional devices servers systems networks gateways portals and or processors in addition to or instead of those illustrated in and or may include more than one of any or all of the illustrated devices servers networks systems gateways portals and or processors. For example an IMS network may include any number and or type s of media gateways media gateway control function BGCF servers breakout gateway control function BGCF severs soft switches and or session border controllers.

To provide VXML content e.g. VXML pages data code and or instructions the example application sever of includes an HTTP interface and a VXML server . The example HTTP interface of receives content request messages e.g. an HTTP GET protocol message from media servers e.g. the example media server of . The example HTTP interface also sends and or provides VXML content to media servers via content messages e.g. an HTTP 200 OK protocol message .

The example VXML server of processes a content request message received from a media server via the example HTTP interface and selects and or identifies requested VXML content from a VXML content database based on the received content request message. The example VXML server directs the HTTP interface to send the requested VXML content to the media server . The example VXML database of stores any number and or type of VXML content e.g. pages code instructions data and or information using any number and or type s of data structures. The example VXML database may be stored and or implemented by any number and or type s of memory ies and or memory devices not shown .

To detect the occurrence of events at the example application server of the application server includes a session controller . Using any method s logic s variable s trigger s and or condition s the example session controller detects the occurrence of event s that necessitate s the interruption of executing VXML content. Any event that is detectable at and or receivable by the application server can be used to trigger the application server to interrupt current VXML processing at the media server . Example events include but are not limited to the completion of a call transfer and or a SIP protocol message received at and or processed by the application server e.g. DTMF signals can be provided to the application server via a SIP INFO message and or a SIP NOTIFY message . Events may also be detected via any other interface e.g. internet message access protocol IMAP simple mail transfer protocol SMTP lightweight directory access protocol LDAP etc. that is exposed at the application server . Another example interface is a web services application programming interface API used to for example integrate the application server with other platforms for portal integration and or provisioning. For example an action taken by a web services client could in turn modify a mailbox that is currently being accessed and thus require the application server to interrupt the current activity of the media server . When an event is detected by the example session controller that necessitates the interruption of executing VXML content the session controller notifies the example VXML server . When notified by the example session controller the example VXML server of selects replacement VXML content from the VXML database and sends a VXML interrupt protocol message e.g. a SIP REFER protocol message to the media server that is executing the VXML content to interrupt execution of the VXML content. An example VXML interrupt protocol message includes an HTTP URI e.g. an HTTP uniform resource locator URL for the replacement VXML content.

While an example manner of implementing the application server of has been illustrated in one or more of the interfaces data structures elements processes and or devices illustrated in may be combined divided re arranged omitted eliminated and or implemented in any other way. For example the application server may be implemented by modifying and or enhancing a traditional and or existing application server by the addition of one or more functions of the example HTTP interface the example VXML server the example VXML database and or the example session controller . Further the SIP interface the HTTP interface the VXML server the session controller and or more generally the application server may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Further still the example application server may include interfaces data structures elements processes and or devices instead of or in addition to those illustrated in and or may include more than one of any or all of the illustrated interfaces data structures elements processes and or devices.

To obtain VXML content e.g. VXML pages data code and or instructions the example media server of includes an HTTP interface and a VXML client . To request VXML content the example HTTP interface of sends content request messages e.g. an HTTP GET protocol message to an application server . The example HTTP interface also receives VXML content from the application server via content messages e.g. an HTTP 200 OK protocol message .

The example VXML client of processes protocol messages e.g. a SIP INVITE message and or a SIP REFER message received from an application server via the SIP interface . Based on the VXML content identified by a received protocol message the example VXML client requests e.g. by sending an HTTP GET protocol message to the application server and obtains VXML content e.g. by receiving an HTTP 200 OK protocol message from the application server via the example HTTP interface . If the received protocol message is a VXML execution interruption message e.g. a SIP REFER message the example VXML client of a interrupts the currently executing VXML content b identifies the replacement VXML content based on the interruption message c requests e.g. by sending an HTTP GET protocol message and obtains e.g. by receiving an HTTP 200 OK protocol message the replacement VXML content from the application server via the HTTP interface and d begins executing the replacement VXML content.

To execute VXML content the example media server of includes one or more output modules one of which is designated at reference numeral and one or more input modules one of which is designated at reference numeral . In addition to processing VXML interrupt protocol messages requesting VXML content and or obtaining VXML content the example VXML client of also interprets VXML content e.g. page s code script s instruction s data and or information using any method s logic and or algorithm s . Based on received VXML content the example VXML client directs the operation of the example output module and or the example input module to execute the VXML content. Example output modules include but are not limited to an audio codec a video codec an audio playback module a video playback module and or a speech synthesis module. Example input modules include but are not limited to an audio codec an audio recording module a speech recognition module and or a DTMF decoder.

To exchange audio data with a VoIP device the example media server of includes an RTP interface . Using any method s logic message s and or protocol s the example RTP interface sends real time audio data generated by the example output module to the VoIP device and receives real time audio data from the VoIP device for processing by the example input module .

While an example manner of implementing the media server of has been illustrated in one or more of the interfaces data structures elements processes and or devices illustrated in may be combined divided re arranged omitted eliminated and or implemented in any other way. For example the media server may be implemented by modifying and or enhancing a traditional and or existing media server by the addition of one or more functions of the example HTTP interface the example VXML client the example output module and or the example input module . Further the SIP interface the HTTP interface the VXML client the output module the input module the RTP interface and or more generally the media server may be implemented by hardware software firmware and or any combination of hardware software and or firmware. Further still the example media server may include interfaces data structures elements processes and or devices instead of or in addition to those illustrated in and or may include more than one of any or all of the illustrated interfaces data structures elements processes and or devices.

To identify the SIP message the example data structure of includes a name field . The example name field of includes an alphanumeric string that identifies the SIP message and identifies a destination for the example message. The example SIP message illustrated in is a SIP REFER message and thus the example name field contains a string that includes REFER SIP In the illustrated example data structure the SIP message is addressed to the media server executing the VXML content that is to be interrupted. The name field could alternatively or additionally be used to identify other types of SIP messages and or other destinations.

To provide additional values and or parameters the example data structure of includes one or more header fields . Example header fields include but are not limited to a from field a call identification field a command sequence number field and or payload length field. The number of header fields in some examples depends upon the type of SIP message and or the protocol s implemented by either endpoint. To convey and or carry any number and or type s of additional data and or information the example data structure of may include a payload .

To interrupt the execution of VXML content and to specify replacement VXML content the example header fields of include a refer to field and a refresh field . The example refer to field of contains an embedded string that specifies a HTTP URI e.g. an HTTP URL for the replacement VXML content. The example refresh field of contains a string that includes REFRESH to cause the media server that receives the example SIP message of to interrupt currently executing VXML content and then request obtain and begin executing the replacement VXML content identified in the refer to field .

While an example data structure is illustrated in the example data structures may be implemented using any number and or type s of other and or additional fields and or data. Further the fields and or data illustrated in may be combined divided re arranged eliminated and or implemented in any desired manner. Moreover the example data structures may include fields and or data in addition to or instead of those illustrated in and or may include more than one of any or all of the illustrated fields and or data.

For ease of illustration and discussion intervening devices servers and or networks of the example IMS based VoIP communication system of are not depicted in . Persons of ordinary skill in the art will readily appreciate that for example a VoIP device does not directly exchange protocol messages with an application server . Instead such protocol messages are exchanged between the VoIP device and the application server via one or more call session control function servers access networks and or IP networks.

The example protocol message exchanges of begin with a VoIP device e.g. the example VoIP device of sending a SIP INVITE message to an application server e.g. any of the example application servers of and or . In response to the SIP INVITE message the application server responds to the VoIP device with a SIP TRYING message and sends a SIP INVITE message to a media server e.g. the example media server of and or . The example VoIP device and the example media server then establish an RTP communication session for a voice dialog communication session.

Based on one or more parameters e.g. an HTTP URI contained in the SIP INVITE message the example media server sends an HTTP GET protocol message to the application server to request the VXML content associated with the HTTP URI. The example application server responds to the HTTP GET message by sending the requested VXML content to the media server via an HTTP 200 OK protocol message . When the VXML content is received the media server e.g. the example VXML client the example output module and or the example input module of begins executing the received VXML content block . As specified by the received VXML content audio data is exchanged between the media server and the VoIP device via the RTP communication session.

When an occurrence of an event that necessitates the interruption of executing VXML content by the media server is detected at the application server block the example application server sends a SIP REFER message e.g. the example SIP REFER message of to interrupt the execution of the VXML content and to identify replacement VXML content. In response to the SIP REFER message the example media server interrupts execution of the VXML content block and requests the replacement VXML content by sending an HTTP GET protocol message to the application server .

The example application server responds to the HTTP GET message by sending the requested replacement VXML content to the media server via an HTTP 200 OK protocol message . When the VXML content is received the media server e.g. the example VXML client the example output module and or the example input module of begins executing the received replacement VXML content block . As specified by the received VXML content different audio data is exchanged between the media server and the VoIP device via the RTP communication session.

The machine accessible instructions of begin when an application server e.g. any of the example application servers of and or and or more specifically the example session controller of detects an event that necessitates the interruption of VXML content being executed by a media server e.g. any of the example media servers of and or . The application server e.g. the example VXML server identifies the event and selects replacement VXML content from for example the example VXML database block .

The application server e.g. the example SIP interface of sends a SIP REFER message to the media server to interrupt execution of the executing VXML content and to identify the replacement VXML content to the media server block . When the application server e.g. the example HTTP interface receives an HTTP GET message for the replacement VXML content from the media server block the HTTP interface returns the VXML content to the media server via an HTTP 200 OK message block . Control then exits from the example machine accessible instructions of .

The example machine accessible instructions of begin when a media server e.g. any of the example media servers of and or and or more specifically the example SIP interface receives a SIP REFER message from an application server e.g. any of the example application servers of and or . The media server e.g. the example VXML client interrupts the execution of currently executing VXML content block and extracts the HTTP URI for replacement VXML content from the SIP REFER message block .

The media server e.g. the example HTTP interface sends an HTTP GET message to the application server to request the replacement VXML content block and receives the replacement VXML content via an HTTP 200 OK message block . The media server e.g. the example VXML client the example output module the example input module and or the example RTP interface begins executing the received replacement VXML content block . Control then exits from the example machine accessible instructions of .

The processor platform of the example of includes at least one general purpose programmable processor . The processor executes coded instructions and or present in main memory of the processor e.g. within a RAM and or a ROM . The processor may be any type of processing unit such as a processor core a processor and or a microcontroller. The processor may execute among other things the example protocol message exchanges and or the example machine accessible instructions of and or to implement the example methods and apparatus described herein.

The processor is in communication with the main memory including a ROM and or the RAM via a bus . The RAM may be implemented by DRAM SDRAM and or any other type of RAM device and ROM may be implemented by flash memory and or any other desired type of memory device. Access to the memory and may be controlled by a memory controller not shown . The memory and or may be used to implement the example VXML database of .

The processor platform also includes an interface circuit . The interface circuit may be implemented by any type of interface standard such as an external memory interface serial port general purpose input output etc. One or more input devices and one or more output devices are connected to the interface circuit . The input devices and or output devices may be used to for example implement the example SIP interface and or the example HTTP interface of and or the example SIP interface the example HTTP interface and or the example RTP interface of .

Of course persons of ordinary skill in the art will recognize that the order size and proportions of the memory illustrated in the example systems may vary. Additionally although this patent discloses example systems including among other components software or firmware executed on hardware it will be noted that such systems are merely illustrative and should not be considered as limiting. For example it is contemplated that any or all of these hardware and software components could be embodied exclusively in hardware exclusively in software exclusively in firmware or in some combination of hardware firmware and or software. Accordingly persons of ordinary skill in the art will readily appreciate that the above described examples are not the only way to implement such systems.

At least some of the above described example methods and or apparatus are implemented by one or more software and or firmware programs running on a computer processor. However dedicated hardware implementations including but not limited to an ASIC programmable logic arrays and other hardware devices can likewise be constructed to implement some or all of the example methods and or apparatus described herein either in whole or in part. Furthermore alternative software implementations including but not limited to distributed processing or component object distributed processing parallel processing or virtual machine processing can also be constructed to implement the example methods and or apparatus described herein.

It should also be noted that the example software and or firmware implementations described herein are optionally stored on a tangible storage medium such as a magnetic medium e.g. a disk or tape a magneto optical or optical medium such as a disk or a solid state medium such as a memory card or other package that houses one or more read only non volatile memories random access memories or other re writable volatile memories or a signal containing computer instructions. A digital file attachment to e mail or other self contained information archive or set of archives is considered a distribution medium equivalent to a tangible storage medium. Accordingly the example software and or firmware described herein can be stored on a tangible storage medium or distribution medium such as those described above or equivalents and successor media.

To the extent the above specification describes example components and functions with reference to particular devices standards and or protocols it is understood that the teachings of the invention are not limited to such devices standards and or protocols. Such systems are periodically superseded by faster or more efficient systems having the same general purpose. Accordingly replacement devices standards and or protocols having the same general functions are equivalents which are intended to be included within the scope of the accompanying claims.

Although certain example methods apparatus and articles of manufacture have been described herein the scope of coverage of this patent is not limited thereto. On the contrary this patent covers all methods apparatus and articles of manufacture fairly falling within the scope of the appended claims either literally or under the doctrine of equivalents.

