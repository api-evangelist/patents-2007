---

title: Device management system for mobile devices that supports multiple-point transport
abstract: A device management server uses both point-to-point and broadcast transport protocols to remotely manage a plurality of electronic devices. The server uses extensions to a standard device management protocol to access, via the point-to-point transport protocol, device management information in memory of the electronic device. The device management information permits the electronic device to receive information using the broadcast transport protocol. Results from processing the received information are returned to the server using the point-to-point transport protocol. The device management server also employs handset control and enterprise control management objects to conduct device wipe, lock, unlock and other operations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08095634&OS=08095634&RS=08095634
owner: Hewlett-Packard Development Company, L.P.
number: 08095634
owner_city: Houston
owner_country: US
publication_date: 20070815
---
The present application makes reference to claims priority to and claims benefit of U.S. Provisional Application Ser. No. 60 838 028 entitled DEVICE MANAGEMENT SYSTEM FOR MOBILE DEVICES THAT SUPPORTS MULTIPLE POINT TRANSPORT filed Aug. 15 2006 the complete subject matter of which is hereby incorporated herein by reference in its entirety.

In addition the present application makes reference to U.S. Provisional Patent Application Ser. No. 60 249 606 entitled System and Method for Updating and Distributing Information filed Nov. 17 2000 and International Patent Application Publication No. WO 02 41147 A1 entitled System And Method For Updating And Distributing Information filed Nov. 19 2001 and having publication date Mar. 23 2002 the complete subject matter of each of which is hereby incorporated herein by reference in its entirety.

Non volatile memory is employed in a wide variety of electronic devices such as for example mobile handsets cellular phones personal digital assistants PDA s pagers and handheld personal computers. The non volatile memory in these devices contains firmware application software data and configuration information that makes the devices operational and may be provided by the manufacturers of the electronic devices by system operators of telecommunication carrier networks or by third parties developers. If defects are found in such firmware software or if new features are to be added to such devices the software and or firmware in the affected electronic devices may need to be updated. Errors and or interruptions that may occur during the updating of such operational code may leave the electronic device in a partly or completely non functional state. To avoid this problem present methods of updating such software and or firmware involve returning the electronic device to the manufacturer to the system operator or to the third party so that an update of memory contents may be performed using a direct connection to the electronic device. This is both costly and inconvenient to both the user of the electronic device and to one performing the update.

Configuration parameters and other information for an electronic device may be stored in the non volatile memory of such devices and information about the device capabilities the hardware software and manufacturer of the device and particulars for a given instance of the device in a network may be stored in databases used by for example device management and customer service operations. Such databases may be accessible to device management and customer service operations through database access mechanisms using for example structured query language SQL or similar database management tools.

Updates to firmware and or software in an electronic device may be developed by a number of parties including for example the manufacturer of the electronic device the provider of services of a communication network accessed by the electronic device or a third party. While the manufacturer and or third party may be technically qualified and capable of creating workable updates for the firmware and or software in an electronic device such updated firmware and or software may not be planned for or compatible with the services and communication capabilities of the communication network of the service provider. Although the user of the electronic device may have authorization to use the network an update to the firmware software of the electronic device may not be authorized for use in electronic device served by the communication network of the service provider.

Different electronic devices have for example different resources available different sets of operating parameters and the like that may be changed to support personalization of the electronic device. A user typically has no means to determine what resources and or parameters are involved in a desired personalization or how the user is to go about personalizing the phone. Determining which electronic devices are capable of or allow such personalization in a device can be a problem for both users and support staff of communication system network operators.

Problems occur when the electronic device of a subscriber is not functioning properly. There are many problems that may arise including for example outdated software both at the firmware and application level incorrect setting of various service parameters and the like. Current support tools used by communication network system operators are of little help in fixing such problems when they are reported.

Management of an electronic device is difficult to perform without the use of a device management solution such as an automated device management system. The Open Mobile Alliance OMA Device Management DM specifications are based on point to point transport protocols such as the hypertext transport protocol HTTP and OBject EXchange OBEX protocol. However with 40 million or more devices users in a large communication network device management DM using point to point transport is very inefficient. It is also very demanding in terms of server side support. Device management DM servers such as for example those servers supporting the OMA DM protocol may be involved in the establishment of millions of DM sessions with electronic devices. Each of the DM sessions is a drain on resources of the communication network.

A user is generally not capable of determining the impact of device management sessions on their electronic device or on the supporting communication networks. The operators of those supporting communication conduct DM sessions for various reasons. Conducting individual device management sessions for each electronic device is a time consuming and resource intensive operation. It is desirable to minimize the impact of device management activities both on the communication network and on the use of the electronic device by the user.

Aspects of the present invention relate generally to the updating of memory in electronic devices and more specifically to methods and systems supporting device management of multiple electronic devices using communication networks that employ broadcast or multipoint communication protocols. Device management may comprise for example the processing and distribution of updates for firmware software configuration parameters and file systems in memory of an electronic device such as for example non volatile FLASH type memory. While the following discussion focuses primarily on mobile electronic devices such as for example a mobile handset a cellular phone a personal digital assistant a pager and a handheld personal computer this is by way of example and not by way of specific limitations of the present invention. The teaching contained herein may also be applicable to a variety of other electronic devices having a processor and memory containing software firmware configuration information data files and the like for which updating of memory contents may be desirable.

Representative embodiments of the present invention may be employed during updates using wired or wireless communication links such as for example a public switched telephone network a wired local or wide area network a wired wide area network an intranet the Internet and wireless cellular paging local area personal area short range broadcast metropolitan access and or multipoint networks such as those wireless networks referred to as Wi Fi networks IEEE 802.11 a b g n compatible networks networks referred to as Imax networks IEEE 802.16d e networks the short range wireless technology known as Bluetooth and similar types of communication links.

In a representative embodiment of the present invention information for updating memory in an electronic device such as those described above is communicated using for example an update package comprising a set of instructions executable by firmware and or software in the electronic device to transform or convert an existing version of software firmware and or data in the electronic device into a new or updated version of the software firmware and or data. Such an update package may also contain metadata related to the update.

As shown in the illustration of the network in one representative embodiment of the present invention comprises the electronic device a device management DM server a provisioning server a customer care server and a download server . Although not illustrated in a representative embodiment of the present invention may also comprise other application servers such as for example a diagnostics server and a self care website portal. The electronic device of is able to communicate with the DM server the download server the customer care server and the provisioning server via communication paths and respectively. Although the communication paths are illustrated as being separate paths between the electronic device and their respective servers this is only for purpose of illustration and is not a specific limitation of a representative embodiment of the present invention. The communication paths may be combined into one or more paths that may comprise any of the wired or wireless networks previously mention above including point to point and or broadcast wired or wireless communication paths such as for example a local area network a public switched telephone network a wireless personal local or wide area network and a cellular or paging network to name only a few possibilities. Although not shown in the illustration of the electronic device also comprises interfaces used to communicate over the communications paths and that have been omitted from the illustration solely to improve clarity to aid in understanding the figure.

As illustrated in an electronic device in accordance with one representative embodiment of the present invention comprises a processor random access memory RAM and non volatile memory NVM . The NVM may comprise for example NAND or NOR type flash memory or other suitable type of NVM. The NVM may contain a number of software firmware code components of the electronic device including for example application software a device management DM client an update package update package array a provisioning client a hand off module an operating system OS firmware and one or more update agent s . Additional software firmware code components may also be present in the RAM and NVM . The term code may be used herein to represent one or more of executable instructions operand data configuration parameters and other information stored in memory of the electronic device and the term update package catalog may be used interchangeably with the term update package array to refer to received update information that comprises multiple update packages. The term application software or software application may be used herein to refer to code that provides functionality apparent to the user of the electronic device as opposed to that code in the electronic device that supports application software such as for example an operating system a file system software support for communications protocols and the like. Application software includes for example Internet web browsers calendars and or contact managers and software for engaging in a particular user or enterprise task to name just a few examples. The electronic device may also comprise interface circuitry not shown to enable operable connection of a subscriber identity module SIM card that may be employed in accordance with aspects of the present invention described later in this document.

In one representative embodiment of the present invention an electronic device such as for example the electronic device of employs an update package e.g. the update package update package array delivered by a remote server such as for example the download server to update firmware software data and configuration information in memory of the electronic device . Such an update package comprises update information including for example metadata describing an update checksums and instructions executable by one or more update agents such as for example the update agent of . The update agent processes a set of executable instructions which are used as a compact means to encode differences between existing first and updated second versions of firmware software data and configuration parameters for the electronic device . The executable instructions may be assembled into update packages to be transmitted to an electronic device for use in updating memory of the electronic device. One or more update agent s in the electronic device process respective portions of the executable instructions from an update package to convert transform corresponding portions of an existing first version of code in memory of the electronic device to portions of an updated second version of code. The electronic device may also receive provisioning information from for example the device management server the customer care server and or the provisioning server to fix configuration problems or reconfigure software and hardware.

In addition to those elements described above the electronic device may comprise a downloaded diagnostic client not shown that facilitates remote diagnosis and a traps client not shown that facilitates the setting of traps and retrieving of collected information. The DM client of the electronic device may interact with the DM server the diagnostic client and the traps client to receive DM commands from the DM server and to implement them in the electronic device . The download server may be employed to download firmware and software updates e.g. update information in the form of for example update packages . The download server may also be used to download new firmware software such as for example the diagnostics client mentioned above which may then be installed and activated in the electronic device .

As described briefly above an electronic device in accordance with a representative embodiment of the present invention e.g. electronic device receives update information e.g. an update package for processing by one or more update agents e.g. update agent to convert transform software e.g. application software and or firmware e.g. firmware to produce updated software firmware in the electronic device. In some representative embodiments of the present invention the update agent comprises multiple update agents each of the update agents appropriately arranged to process different types of update information for updating different types formats of software firmware user data and configuration parameters in the memory of the electronic device . Each of the update packages received is processed in the electronic device by an appropriate one of the update agent s to update an associated type of information in the memory of the electronic device .

In one representative embodiment of the present invention an Open Mobile Alliance OMA device management DM based applications server is composed of two parts an OMA DM based application and an OMA DM server such as for example the DM server shown in . An OMA DM based application is mainly focused on business processes logic and data. An OMA DM server however is mainly focused on the functionality used to support the OMA DM protocol by which the OMA DM based application manipulates OMA DM capable electronic devices such as for example the electronic device of .

An OMA DM common framework in accordance with a representative embodiment of the present invention is arranged to support a set of application programming interfaces APIs and call back services so that OMA DM based applications may be easily and effectively integrated with an OMA DM server such as the DM server of for example. One example of an OMA DM based application server is the Mobile Variance Platform MVP Server developed by Hewlett Packard Company. An OMA DM based common framework in accordance with a representative embodiment of the present invention supports a set of APIs and call back services that permit the integration of multiple applications including for example a customer care service application and other servers with an OMA DM based server such as the DM server of

A customer care server such as for example the customer care server of may provide an API for issuing OMA DM commands and values to OMA DM capable electronic devices including the ability to explore the device management tree DM tree on the electronic device. Bootstrapping the electronic device may be supported along with the ability to configure one or more bootstrap messages. A customer care server such as the customer care server may support a simple graphical user interface UI to allow OMA DM compatible electronic devices to be bootstrapped and for commands to be issued to allow the electronic device to be explored and configured via a browser such as for example an Internet browser.

In one representative embodiment of the present invention the code to support OMA DM based device management for customer care activities of a customer care server e.g. customer care server of is shared with an OMA DM based application server. By employing a representative embodiment of the present invention a system operator ensures that an application server and a customer care server produce identical behavior in their interactions with electronic devices under OMA DM based device management.

An OMA DM common framework in accordance with one representative embodiment of the present invention provides for the real time sharing of data by multiple OMA DM Based applications and may include sharing of the data from a DM tree in an electronic device such as the electronic device of . In a representative embodiment of the present invention each OMA DM based application may access the data used to create OMA DM commands for the electronic device.

Currently each manufacturer of an electronic device such as the electronic device of may place electronic device setting parameters e.g. GPRS setting in different locations within the DM tree of an electronic device they manufacture. This may cause the node uniform resource identifier URI of a given parameter to be different for each electronic device make model and version MMV . Some representative embodiments of the present invention provide a data store to be used in managing DM tree information. Such a data store may hold single device information such as the international mobile equipment identity IMEI of the electronic device a password and a nonce to name only a few examples. Some data may be customized for each OMA DM based application including for example the type of authentication scheme to be used and bootstrap content. Some representative embodiments of the present invention allow a user of a customer care system to modify the bootstrap content to specify the security type and profile type for devices. The security type may for example be one or both of Networkpin and Userpin . Some representative embodiments of the present invention permit notification and bootstrap functionality to be shared by OMA DM based customer care and application servers such as the customer care server and DM server of for example. Such an arrangement permits a user of the customer care server to specify for example a short message service center SMSC to be used for the sending of notification and bootstrap messages. Some representative embodiments of the present invention provide this functionality through a set of APIs and call back services that support the sending of DM commands and receipt of results.

In a representative embodiment of the present invention the electronic devices support applications and or features the use of which may involve device management operations e.g. provisioning installation of software and or firmware updates to software firmware configuration parameters or personalization.

In a representative embodiment of the present invention the electronic device can be used to request device management services via a device management DM server such as for example the DM server of . The content manager server provides a service to the user subscriber of the electronic device by retrieving personalization content as necessary and forwarding it to the electronic device .

The network in a representative embodiment of the present invention supports management of electronic devices using a device management protocol that employs a broadcast or multipoint i.e. multi cast transport protocol. The individual electronic devices that engage in device management operations with a DM server such as for example the DM server are identified by information identifiers such as for example the make the model and the version MMV of the electronic device engaged in DM operations including for example electronic device identification information and subscriber identification information. In one representative embodiment of the present invention the DM server conducts DM operations with one electronic device at a time employing a point to point transport protocol such as the hypertext transport protocol HTTP . The DM server e.g. DM server of a representative embodiment of the present invention is also capable of conducting DM operations with a plurality of electronic devices at the same time employing a multi point transport protocol such as for example the IEEE 802.16 d e protocols a.k.a. fixed and mobile WiMAX respectively . Other representative embodiments of the present invention employ a combination of point to point protocols and multi point protocols in the network . For example in one representative embodiment of the present invention a DM server such as for example the DM server employs an Open Mobile Alliance OMA device management DM protocol carried over the HTTP protocol to configure individual electronic devices e.g. electronic device with device specific or subscriber specific information. In another representative embodiment of the present invention the DM server employs an OMA DM protocol transported over WiMAX IEEE 802.16 d e to concurrently or simultaneously bootstrap electronic device such as for example the electronic devices . In such a representative embodiment such bootstrapping activity employs a device management account DMAcc or other connectivity management objects or connectivity parameters. Such device management accounts DMAccs connectivity management objects and connectivity parameters may be electronic device agnostic and be common or generic to all electronic devices and user accounts supported by the network .

In a representative embodiment of the present invention OMA DM and or OMA client provisioning CP based bootstrap provisioning is conducted using broadcast or multipoint transport protocols using OMA DM commands. A representative embodiment of the present invention supports communication of packages of firmware and or software update information to a plurality of electronic devices e.g. electronic devices using OMA DM commands communicated over broadcast or multipoint multi cast transport protocols. In addition a representative embodiment of the present invention permits individual electronic devices e.g. electronic device to be configured using point to point transport protocol such as for example HTTP in order to enable them to participate in subsequent device management operations using OMA DM commands and messages distributed using broadcast or multi cast device management sessions employing a broadcast or multipoint multicast transport protocol.

A DM server such as for example the DM server in a representative embodiment of the present invention employs handset control and or enterprise control management objects MOs to enable electronic device management operation such as for example device wipe device lock device unlock to name only a few operations. Managements objects and their nodes and sub nodes of representative embodiments of the present invention are extensions to those defined by a device management protocol such as for example the Open Mobile Alliance OMA device management DM V1.2 protocol developed under the direction of the Open Mobile Alliance Ltd. For example in a representative embodiment of the present invention a DM server e.g. the DM server sends one or more commands to a DM client e.g. the DM client of an electronic device e.g. the electronic devices instructing the DM client in the electronic device to set identified management objects in a management tree stored in memory e.g. non volatile memory of the electronic devices to particular values. The management objects managed by the DM server and the DM client of the mobile device may for example direct the electronic device to consume data and content from specific authorized service providers and servers.

In one representative embodiment of the present invention a DM server e.g. the DM server employs OMA DM commands and messages transported over for example the HTTP protocol to instruct a DM client in an electronic device e.g. the DM client of electronic device to set up a firmware update management object FUMO in the management tree of the electronic device. The DM server subsequently delivers a package of update information to the electronic device and to other similar electronic devices using a broadcast transport mechanism e.g. a broadcast protocol . In a representative embodiment of the present invention the electronic devices and other similar electronic devices determine whether the broadcast update package is intended for them and if so store the received update package in memory of the electronic device for subsequent processing. In a representative embodiment of the present invention the DM server for example then sends an OMA DM message invoking an OMA DM Exec command on the FUMO node associated with the received update package present in each of the electronic devices. Invoking the Exec command using a broadcast based transport protocol over communication path then starts the update process in each of electronic devices that received and stored the update package. The individual electronic devices e.g. electronic devices that respond to the Exec command received from the DM server conduct update activities and subsequently send the results of the update activity e.g. result codes status information etc. to the DM server using OMA DM protocols transported by a point to point e.g. HTTP transport protocol. In one representative embodiment of the present invention at the end of an update activity each of the electronic devices e.g. electronic devices then communicates an OMA DM Alert 1226 based message also referred to as a Generic Alert message to a DM server e.g. the DM server over communication path using the OMA DM protocol carried by an HTTP transport protocol.

In one representative embodiment of the present invention the DM clients e.g. DM client in the electronic devices are configured to monitor a broadcast channel that provides device management commands messages and instructions to the DM clients. The monitoring of the broadcast channel is conducted per a schedule that is communicated to the electronic device. In addition the device management commands messages and instructions to the DM clients e.g. DM client are executed by the electronic device e.g. electronic device only after the DM client determines that the device management commands messages and instructions to the DM clients are appropriate for the electronic device based upon for example the make model and version MMV information of the electronic device e.g. electronic device .

In one representative embodiment of the present invention the application ID node is an identifier provided by a 3rd party vendor e.g. of the application software that is used to identify an application e.g. application software in an electronic device e.g. the electronic device . In another representative embodiment the application ID node may contain a standard identifier that is registered with a standards body such as for example the Open Mobile Alliance Ltd. OMA . The data wipe node is a parameter or flag that can be set to a designated value by a DM server e.g. DM server to cause the DM client e.g. DM client in the electronic device e.g. electronic device to wipe i.e. clear remove or destroy any data associated with the application identified by the application ID mode . The wipe operation may comprise invoking functions or features provided by the application itself or by an operating system e.g. OS that make it possible to determine where application data is located how it can be deleted or erased and how to report success or failure of the wipe operation back to the DM client e.g. DM client and ultimately to the managing DM server e.g. DM server .

In a representative embodiment of the present invention a lock node of an application MO such as for example the lock node enables an application e.g. the application software to be locked so that it cannot be used or invoked again until it is has been unlocked . This has utility when for example a user of an electronic device e.g. electronic device loses the electronic device. In such a situation the user may choose to have a particularly important software application locked to keep it from being misused. In one representative embodiment of the present invention the user employs a web browser application in communication with a self care portal accessible via the Internet to cause the software application to be locked. In a representative embodiment of the present invention the self care portal is communicatively coupled to a DM server e.g. DM server that acts upon the user request placed through the self care portal to send the appropriate device management commands to a DM client e.g. DM client in the electronic device. The DM client of the electronic device then acts upon DM command to modify the lock node e.g. the lock node to cause the software application to be locked and unusable. In another representative embodiment of the present invention the user may place a telephone call to a customer care representative e.g. employed by the operator of the network or the provider of the software application and have the customer care representative lock the software application. In yet another representative embodiment of the present invention a software application associated with a service is locked by a service provider if the user s subscription to an associated service of the provider expires or if the user decides to cancel an associated service of the provider.

In a representative embodiment of the present invention an unlock node of an application MO such as for example the unlock node enables a software application e.g. the software application to be unlocked and made available for use if it has been in a locked condition. The software application may have been previously locked by for example an operator of the network or the user of the electronic device e.g. via a self care portal as described above. In a representative embodiment of the present invention a DM server such as the DM server of for example acts as the conduit for such locking and unlocking of software applications in an electronic device and a DM client such as the DM client of provides device side support for such activities.

Software applications in an electronic device such as the application software of the electronic device may be updated using software component update techniques. A user of the electronic device may not however be satisfied with the results of such an update and may wish to revert back to a previous version of the application software. In a similar way an operator of the network for example may decide that an updated application e.g. application software has a negative impact on the performance of the network and may want to revert the application software back to a previous version. In a representative embodiment of the present invention a node of a management object such as for example the revert to previous version node of the application MO of provides a means to handle such operations. A DM server such as for example the DM server issues device management commands to set the revert to previous version node associated with the software application to a designated value to cause a DM client in the electronic device e.g. DM client of electronic device to take appropriate actions to revert the software application back to the previous version. In one representative embodiment of the present invention this action involves the download of software and or firmware components and an update of memory in the electronic device using such downloaded components. In another representative embodiment of the present invention this action involves the creation of the earlier version of the application software in the memory of the electronic device using the current version of the application software. In yet another representative embodiment of the present invention this action involves the restoring to a usable state from a backup memory an earlier version of the software application.

In a representative embodiment of the present invention a registration node of an application MO such as for example the registration node of application MO enables a DM server such as for example the DM server to register one or more servers with a software application in an electronic device such as the application software for example. In one representative embodiment the identities of the servers to be registered with the software application identified in the application MO are provided via a server ID sub node shown in as the server ID sub node . A name sub node shown in as name sub node provides for storage of a registered name associated with the application MO . Credentials for authorizing and or authenticating the application software the identified servers are provided in a credentials sub node . Through the use of the registration node and its server ID sub node name sub node and credentials sub node the application software is made aware of servers with which it can communicate data or content e.g. multimedia content for consumption by a user. Application software on the electronic device such as for example MP3 players or media players may consume streaming media provided to them by one or more authorized servers. In one representative embodiment of the present invention content provided by unauthorized servers is ignored and or deleted unless the user indicates their approval for the display rendering of such content from such unauthorized sources. The registration node of a representative embodiment of the present invention provides a means for specifying authorized sources of data and content to individual software applications.

In a representative embodiment of the present invention a factory reset sub node such as the factory reset sub node of permits a DM server such as the DM server of to invoke a factory reset operation upon an electronic device such as the electronic device of . In a representative embodiment of the present invention a factory reset of the electronic device is initiated by the DM server when the factory reset sub node is set to a designated value e.g. the value 1 . This action causes the DM client to for example invoke a configuration and or a firmware update operation in the electronic device resetting the firmware and configuration in the electronic device to a predefined configuration and set of values for the electronic device e.g. those installed at the time the electronic device was manufactured. If for example the firmware and or software and configuration information of the electronic device have not been changed by the user since the electronic device was initially purchased then no additional DM operations e.g. configuration firmware updates etc. may be involved as part of a factory reset . If the user of the electronic device has made software firmware and or configuration changes or stored personal data on the electronic device a data wipe operation may be involved in restoring a factory reset condition. Such a data wipe operation to remove user data may be performed according to the policies of the operator of the network the manufacturer of the electronic device or a third party.

In a representative embodiment of the present invention a data wipe sub node such as the data wipe sub node of is a parameter or flag that can be set to a designated value by a DM server e.g. DM server to cause the DM client e.g. DM client in the electronic device e.g. electronic device to wipe i.e. clear remove or destroy any data associated with all application software in the electronic device . For example in one representative embodiment of the present invention user address book entries and email messages are deleted in response to the invocation of a data wipe operation. For example the setting of the data wipe sub node by a DM server causes the DM client to invoke an address book application and or an email client in the electronic device to conduct data cleanups for their respective user data. In a representative embodiment of the present invention activating or invoking a data wipe operation via the setting of a data wipe sub node such as the data wipe sub node comprises invoking functions and or features provided by the applications software application software or by an operating system e.g. OS . In a representative embodiment of the present invention the application software determines where the respective data is located how it is deleted or erased performs the cleanup and determines how the success or failure of the data wipe operation is to be reported back to the DM client and therefore to the DM server .

In a representative embodiment of the present invention a device lock sub node such as the device lock sub node enables a DM server e.g. the DM server to lock the electronic device . In one representative embodiment the device lock operation includes all application software e.g. the application software of so that the electronic device is unavailable for further use. In other representative embodiments of the present invention all application software except for emergency related operations such as for example calling police or 911 are locked and made unavailable for further use. In a representative embodiment of the present invention such a device lock condition is maintained so that the electronic device cannot be used and any applications software cannot be invoked until the electronic device is unlocked . This aspect of the present invention is desirable when the electronic device is stolen or if it is misplaced by the user. In such a situation the user may choose to have the electronic device including for example all applications software on the electronic device locked to stop the electronic device from being misused. In one representative embodiment of the present invention the user employs a web browser to access via the Internet a self care portal that is communicatively coupled to a DM server such as the DM server for example. This permits the user to cause a device lock sub node e.g. the device lock sub node in a handset control MO in the electronic device to be set to a designated value thereby causing the electronic device to be locked. In another representative embodiment of the present invention the user may call and speak with a customer care representative to request that the customer care service lock the electronic device e.g. electronic device . In yet another representative embodiment a provider of a service to which the user is subscribed may employ a device lock sub node such as the device lock sub node if a user s subscription to a service expires or if the user decides to cancel the subscription.

In a representative embodiment of the present invention a device unlock sub node such as for example the device unlock sub node shown in enables a DM server e.g. the DM server to unlock the electronic device such that it can be used again by a user. As described above in regards to the device lock sub node an electronic device such as the electronic device may be locked by a system operator or by a user e.g. via a self care portal . In some representative embodiments of the present invention the electronic device must then be unlocked In order to again be made usable. In one representative embodiment of the present invention the user employs a web browser to access via the Internet a self care portal that is communicatively coupled to a DM server such as the DM server for example. This permits the user to cause a device unlock sub node e.g. the device lock sub node in a handset control MO in the electronic device to be set to a designated value thereby causing the electronic device to be unlocked. In another representative embodiment of the present invention the user may call and speak with a customer care representative to request that the customer care service unlock the electronic device e.g. electronic device . In yet another representative embodiment a provider of a service to which the user was subscribed or to which the user would like to subscribe may employ a device unlock sub node such as the device unlock sub node following reinstatement of a user s expired subscription to a service or if the user decides to enter into a subscription to a service. In one representative embodiment of the present invention the receipt of a device management command to set a device unlock sub node in the electronic device to a designated value causes the DM client to invoke or initiate functions in the application software in the electronic device e.g. application software in the electronic device to make the application software once again available for use. Such a device management command may be sent to the electronic device by a DM server such as the DM server for example.

In one representative embodiment of the present invention individual software applications e.g. application software are managed using software component update techniques and may be managed by particular service providers i.e. by the servers associate with a service provider . To provide an authorization mechanism and to prevent unauthorized access to applications by servers a representative embodiment of the present invention supports establishment and maintenance of a mapping between software applications in an electronic device such as for example the application software of the electronic device and the servers that are authorized to manage the software application and or provide content to the software application. In a representative embodiment of the present invention an application MO such as for example the application MO of in a device management tree of an electronic device e.g. the electronic device enables a device management server e.g. DM server to remotely manage a list of servers X for the software application associated with the application MO . In a representative embodiment of the present invention each authorized server in the list of servers X has an associated server ID sub node a name sub node and a credentials sub node for each application. In some representative embodiments of the present invention the servers in the list of servers X comprises one or more servers that are authorized to provide content to the electronic device such as for example streaming media e.g. audio video etc. configuration parameters and information user preferences service provider network operator policies to provide just a few examples. In some representative embodiments of the present invention servers in the list of servers X comprises those server that are authorized to manage the application software associated with application MO and or to provide content. In a representative embodiment of the present invention servers not present in the list of servers X are not allowed to manage or provide content to the application associated with the application MO . In some representative embodiments of the present invention an additional leaf sub node not shown in that may be named for example role is provided for each server in the list of servers X . The role sub node can take one or more values associated with the roles of for example manage provide content and configure .

In a representative embodiment of the present invention an application node such as the application MO node is used for registration of each of a list of servers X associated with each application. The list of servers X enables registration of one or more servers e.g. via the associated server ID sub node and the associated credentials sub node with the application software e.g. application software of . In this way the application software is made aware of servers that are authorized to communicate data or content to the electronic device for playback display to the user.

An enterprise may choose to restrict an electronic device such as the electronic device for example to enable use of only those specialized e.g. enterprise specific applications applications or services that the enterprise has authorized. An authorized services sub node of an enterprise control MO in accordance with a representative embodiment of the present invention such as for example the authorized services sub node of provides a list of those services authorized by the manager of the enterprise for use in the electronic device. In some representative embodiments of the present invention the list of service in the authorized services sub node is maintained by a DM server e.g. the DM server of using an OMA DM v1.2 compliant protocol.

In one representative embodiment of the present invention the list of services contained in the authorized services sub node are those services to be affected when for example the data wipe sub node is set to the value designated to initiate a wiping clearing erasing of data. In a representative embodiments of the present invention if a user attempts to download a new software application for a service e.g. application software of a DM client such as the DM client of the electronic device of for example checks whether the new software application is authorized for use on the electronic device . In one representative embodiment of the present invention if the DM client determines that the new software application is not authorized by the enterprise the DM client warns the user that such a software application should not be downloaded or installed. In another representative embodiment the DM client does not permit the user to download or install the unauthorized software application. Based upon the information residing in the authorized services sub node a representative embodiment of the present invention does not permit a user to delete remove or otherwise disable an authorized software application.

Although a system and method according to the present invention has been described in connection with the preferred embodiment it is not intended to be limited to the specific form set forth herein but on the contrary it is intended to cover such alternative modifications and equivalents as can be reasonably included within the scope of the invention as defined by this disclosure and appended diagrams.

Accordingly a representative embodiment of the present invention may be realized in hardware software or a combination of hardware and software. Representative embodiments of the present invention may be realized in a centralized fashion in at least one computer system or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system or other apparatus adapted for carrying out the methods described herein is suited. A combination of hardware and software may be a general purpose computer system with a computer program that when being loaded and executed controls the computer system such that it carries out the methods described herein.

A representative embodiment of the present invention may also be embedded in a computer program product which comprises all the features enabling the implementation of the methods described herein and which when loaded in a computer system is able to carry out these methods. Computer program in the present context means any expression in any language code or notation of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a conversion to another language code or notation b reproduction in a different material form.

While aspects of the present invention have been described with reference to certain embodiments it will be understood by those skilled in the art that various changes may be made and equivalents may be substituted without departing from the scope of the representative embodiments of the present invention. In addition many modifications may be made to adapt a particular situation or material to the teachings of a representative embodiment of the present invention without departing from its scope. Therefore it is intended that embodiments of the present invention not be limited to the particular embodiments disclosed herein but that representative embodiments of the present invention include all embodiments falling within the scope of the appended claims.

