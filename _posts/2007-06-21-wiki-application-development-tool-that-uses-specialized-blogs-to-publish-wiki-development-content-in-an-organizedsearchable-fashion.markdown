---

title: WIKI application development tool that uses specialized blogs to publish WIKI development content in an organized/searchable fashion
abstract: The present invention discloses a software development system for WIKIs including a WIKI server, a BLOG server, and a data store. The WIKI server can serve WIKI pages to WIKI clients. The BLOG server can serve BLOGs to BLOG clients. The data store can manage WIKI BLOG entries. Each WIKI BLOG entry can include a link to one of the WIKI pages and metadata for the linked WIKI page. The metadata can include a WIKI page title, a WIKI page version, a WIKI page description, design notes, and other information. Searchable keywords can be generated from the metadata. WIKI BLOG entries can be searched by WIKI developers to find WIKI pages having designer specified criteria based on a keyword search. Wherein searching for WIKI BLOG entries and editing discovered WIKI pages associated with WIKI BLOGs can be performed by a WIKI client via a WIKI interface.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08074202&OS=08074202&RS=08074202
owner: International Business Machines Corporation
number: 08074202
owner_city: Armonk
owner_country: US
publication_date: 20070621
---
This continuation in part application claims the benefit of U.S. patent application Ser. No. 11 765 900 filed Jun. 20 2007 the benefit of U.S. patent application Ser. No. 11 765 928 filed Jun. 20 2007 and the benefit of U.S. patent application Ser. No. 11 765 962 filed Jun. 20 2007 which are incorporated by reference herein.

The present invention relates to the field of WIKI applications and more particularly to a WIKI application development tool that uses specialized BLOGs to publish WIKI developmental content in an organized searchable fashion.

A WIKI is a collaborative web application that allows end users to add and edit content. A WIKI application refers to a collection of WIKI pages written in a markup language that are interconnected via hyperlinks. WIKIs are served by a WIKI server to standard Web browsers which function as WIKI clients. A WIKI server can also serve a special Web page that is a WIKI editor where users add and edit content. Some WIKI sites permit WIKI content to be written in accordance with a WIKI syntax such as having special characters to indicate hyperlinked content bulleted content and the like. WIKI syntax is generally designed to be more intuitive for end users to utilize than standard markup languages.

Although WIKI pages are quickly and easily developed by relatively novice developers conventional development techniques for WIKIs have many significant disadvantages. At present WIKIs are developed in an ad hoc loosely coupled manner. Each WIKI page generally behaves in an autonomous fashion in accordance with internally defined standards. A WIKI application formed from multiple linked WIKI pages typically has a non cohesive feel. In other words unlike conventional applications that have many common and consistent components such as common color schemes common font sizes and types common toolbars and toolbar icons common pop up windows common hot key combinations and the like a look and feel of a WIKI application can vary greatly from page to page. Further a current lack of cohesion among WIKI pages makes it difficult to establish settings that affect an entire WIKI application. State information is generally not retained from page to page or session to session.

Additionally WIKI syntax and WIKI editors are presently not standardized and WIKI implementation specifics can vary from one WIKI server to another. Thus a WIKI developer creating a set of one or more linked WIKI pages for execution on one WIKI server may have to manually adjust or recreate the set of WIKI pages for execution on a different WIKI server.

Generally software design principles used for most types of programming such as modularization software re use documenting code documenting an application and the like have not been applied to WIKI applications. This lack of foundational structure has relegated WIKIs to small scale software efforts which can be quickly created by a single developer.

At present no community collaboration toolsets exist that facilitate integrated development efforts other than providing content to an otherwise static WIKI application. Tools do not exist to permit developers to collaborate on creating modifying the WIKI application itself. Existing WIKI tools do not encourage developers to create re usable code components to share code components with others or to utilize code components created by others. What is needed is a mechanism to facilitate sharing and re use of WIKI application code preferably in a fashion consistent with general Web 2.0 techniques and protocols.

More specifically a WIKI developer can utilize an editor of a WIKI server to create a WIKI . Upon creating the WIKI the developer will be provided an option to publish the WIKI content which triggers a publication event. In one embodiment the WIKI server can automatically initiate the publication event upon WIKI creation or modification. The publication event causes a publication engine to convey WIKI data to the BLOG server where it is ultimately processed to create a BLOG for WIKI publication which is stored in data store . The newly created WIKI can be placed in data store where it is served as a WIKI page which may be linked to other pages to create a WIKI application.

Other developers can specify criteria used by resource searching engine to search the data store for matching BLOG for WIKI publications. These discovered publications can link the developer to a related WIKI page which can be edited by the developer. The developer can for example incorporate the discovered WIKI content into a new project thus leveraging pre existing software that should minimize the development time. In another example the developer can customize a pre existing WIKI so that it behaves in a user desired manner. Thereafter the user and others preferring the customization can use the modified WIKI instead of the base WIKI.

In one embodiment publishing WIKI data to the BLOG server can entail copying all the related files for the WIKI to an external data space such as data store . A WIKI developer can modify the stored WIKI by first accessing a WIKI server . The WIKI server can query the data store can retrieve the stored WIKI data and can store this data in data store . The WIKI server which is different from the original server can publish the WIKI version that was modified by the developer .

Additionally the BLOG server can include a Rich Site Summary RSS engine which establishes RSS feeds related to the BLOG for WIKI publications. Developers can subscribe to the RSS engine and can receive update notifications whenever changes are made to a corresponding WIKI page.

Unlike WIKIs BLOGs are highly organized often using the ATOM PUBLISHING PROTOCOL APP or other organized structure for storing and linking content. BLOG for WIKI publication shows a exemplary structure for a sample BLOG for WIKI publication. The publication is associated with a WIKI application that stored different categories of accessible content in a hierarchy. Categorized content can include category entries such as literature and music. The music category can include subcategories of rock classical and other types of music. Each type of music can be broken down into entries for artist album song and the like.

Each BLOG for WIKI item can include an introspection document an entries link and a resource link in accordance with the APP or other utilized protocol. Each entry can be associated with a WIKI application page or page element. A special type of entry can be a metadata entry which provides metadata information concerning a parent item such as version title summary and the like. In another embodiment the metadata can be associated with special markup tags which can be introspected and need not be implemented as a separate entry .

A set of resources can also be associated with each item of the BLOG for WIKI publication . Resources can contain media that is applicable at each level of the WIKI. In one embodiment these resources can include speech resources used to speech enable the associated WIKI. To illustrate the music entry of category links to media resources . These resources include a media plug in for playing music and a set of input output I O controls. The I O controls are linked to speech processing resources such as automatic speech recognition ASR resource and text to speech TTS resource. These resources can be further configured such as by specifying speech recognition grammars a speech synthesis language and the like.

The interface can be rendered in a standard browser which is able to render pages served by a WIKI server. A special WIKI application is shown which is transparently integrated to a BLOG server and which stores BLOG for WIKI publications. The publish WIKI tab can permit the rendered WIKI page to function as a BLOG editor for BLOG for WIKI publications. In one embodiment a user can also view edit and search BLOG for WIKI publications through a BLOG interface not shown served by a BLOG server.

A second special WIKI application is associated with the search for WIKI tab that is configured to permit a user to search BLOG entries associated with WIKIs e.g. BLOG for WIKI publications to choose entries of interest. More specifically the search application can include a criteria specification element which permits a user to enter search terms. These terms are compared against indexed keywords. The indexed keywords can be constructed by analyzing metadata associated with WIKI for BLOG publications and or by analyzing content of WIKI for BLOG publications. In system resource searching engine can perform tasks associated with querying a data store for entries that satisfy the criteria entered in element .

Upon pressing a find button a set of results can be presented. These results can include a title of a matching entry version information ownership information and other metadata associated with a WIKI. For example user criteria of authentication based on speech can produce results including 1. SIV speech identification and verification WIKI a 2. Speech Construction WIKI 3. Speech Authentication treatise and 4. Authentic Speeches WIKI as shown in . Each returned WIKI result can be further decomposed into sub elements as shown by the sub elements of SIV Resource Audio Input Resource Enrollment Resource and Authentication Dialog Entry which each correspond to the SIV WIKI component. 

Sub elements are in accordance with an underlying organizational structure which can conform to an APP based protocol. Thus the BLOG for WIKI publication of system would include sub elements of literature and music. The music sub element would have further sub elements of rock and classical. The rock sub element would have sub elements of artist 1 and artist N. Appreciatively organizing WIKI applications in the specified structure permits fine grained control of WIKI entries and resources which lends itself to software re use and sharing. User facing tools such as interface permits advantages of the organized structure to be exploited by WIKI application developers.

Each returned WIKI result item can be associated with one or more user selectable actions. One selectable action can be to subscribe to an RSS feed associated with an item. Pressing the RSS button corresponding to the SIV resource for example can ensure a user is provided with notices whenever the SIV resource is modified. Another selectable action is a retrieve action. This action can cause the selected item to be retrieved. Retrieving an item can load syntax for that item into a WIKI editor. Thus retrieving the SIV WIKI component and then pressing the WIKI markup tab can result in a presentation of editable WIKI markup for the SIV WIKI component. The actions are not intended to be exhaustive and other actions are contemplated. For example actions to edit view metadata to upload WIKI server data for publication in a specified WIKI server to solicit an owner for permission to modify a secure or proprietary WIKI item and other actions are to be considered within the scope of the present invention.

In system Web 2.0 clients can communicate with Web 2.0 servers utilizing a REST ATOM protocol. The Web 2.0 servers can serve one or more speech enabled applications where speech resources are provided by a Web 2.0 for Voice System . One or more of the speech enabled applications can include AJAX or other JavaScript code. In one embodiment the AJAX code can be automatically converted from WIKI or other syntax by a transformer of a server . The servers can communicate with each other using a REST ATOM protocol. For example the WIKI server can publish WIKI data to BLOG server which organizes and indexes the WIKI data in an APP compliant format. Special WIKI applications can search entries managed by the BLOG server as described in .

Communications between the Web 2.0 servers and system can be in accordance with REST ATOM protocols. Each speech enabled application can be associated with an Atom container which specifies Web 2.0 items resources and media . One or more resource can correspond to a speech engine . REST ATOM protocols can include HyperText Transfer Protocol HTTP and similar protocols that are RESTful by nature as well as APP or other protocols that are specifically designed to conform to REST principles.

The Web 2.0 clients can be any client capable of interfacing with a Web 2.0 server . For example the clients can include a Web or voice browser as well as any other type of interface which executes upon a computing device. The computing device can include a mobile telephone a mobile computer a laptop a media player a desktop computer a two way radio a line based phone and the like. There are no assumptions regarding the client other than an ability to communicate with a Web 2.0 server using Web 2.0 conventions.

The Web 2.0 servers can be any server that provides Web 2.0 content to clients and that optionally provides speech processing capabilities through the Web 2.0 for voice system . The Web 2.0 servers can include a WIKI server a BLOG server a MASHUP server a FOLKSONOMY server a social networking server and any other Web 2.0 server .

The Web 2.0 for voice system can utilize Web 2.0 concepts to provide speech capabilities. A server side interface is established between the voice system and a set of Web 2.0 servers . Available speech resources can be introspected and discovered via introspection documents which are one of the Web 2.0 items . Introspection can be in accordance with the APP specification or a similar protocol. The ability for dynamic configuration and installation is exposed to the servers via the introspection document.

That is access to Web 2.0 for voice system can be through a Web 2.0 server that allows users e.g. clients to provide their own customizations personalizations. Appreciably use of the APP opens up the application interface to speech resources using Web 2.0 JAVA 2 ENTERPRISE EDITION J2EE WEBSPHERE APPLICATION SERVER WAS and other conventions rather than being restricted to protocols such as media resource control protocol MRCP real time streaming protocol RTSP or real time protocol RTP .

The Web 2.0 for Voice system is an extremely flexible solution that permits users of clients to customize numerous speech processing elements. Customizable speech processing elements can include speech resource availability request characteristics result characteristics media characteristics and the like. Speech resource availability can indicate whether a specific type of resource e.g. ASR TTS SIV VoiceXML interpreter is available. Request characteristics can refer to characteristics such as language grammar voice attributes gender rate of speech and the like. The result characteristics can specify whether results are to be delivered synchronously or asynchronously. Result characteristics can alternatively indicate whether a listener for callback is to be supplied with results. Media characteristics can include input and output characteristics which can vary from a URI reference to an RTP stream. The media characteristics can specify a codec e.g. G711 a sample rate e.g. 8 KHz to 22 KHz and the like. In one configuration the speech engines can be provided from a J2EE environment such as a WAS environment. This environment can conform to a J2EE Connector Architecture JCA .

In one embodiment a set of additional facades can be utilized on top of Web 2.0 protocols to provide additional interface and protocol options e.g. MRCP RTSP RTP Session Initiation Protocol SIP etc. to the Web 2.0 for voice system . Use of facades can enable legacy access use of the Web 2.0 for voice system . The facades can be designed to segment the protocol from underlying details so that characteristics of the facade do not bleed through to speech implementation details. Functions such as the WAS 6.1 channel framework or a JCA container can be used to plug in a protocol which is not native to the J2EE environment . The media component of the container can be used to handle media storage delivery and format conversions as necessary. Facades can be used for asynchronous or synchronous protocols .

In the system a browser can communicate with WIKI server via a REST ATOM based protocol. The WIKI server can communicate with system via a REST ATOM based protocol.

The WIKI server can include a data store in which speech enabled applications and other server applications are stored. In one embodiment the applications can be written in a WIKI syntax contained in an APP format.

The contents of an application can be accessed using editor . The editor can be a standard WIKI editor having a voice plug in or extensions . Modifications made to the application via the editor can be published to a BLOG server where WIKI data is able to be stored as BLOG entries.

The transformer can convert WIKI syntax into standard markup for browsers. In one embodiment the transformer can be an extension of a conventional transformer that supports HTML and XML. The extended transformer can be enhanced to handle JavaScript such as AJAX. For example resource links of application can be converted into AJAX functions by the transformer having an AJAX plug in . The transformer can also include a VoiceXML plug in which generates VoiceXML markup for voice only clients.

Each of the speech enabled WIKI applications can be organized in an APP based format as shown by WIKI application . The application includes an introspection document and a link to an entries collection and a resource collection . Each of these collections and can be linked to other collections . For example entry collection can be a collection of WIKI pages which are linked to WIKI page sections collections . The resource collection can include speech processing resources which are linked to resource specifics collection .

The present invention may be realized in hardware software or a combination of hardware and software. The present invention may be realized in a centralized fashion in one computer system or in a distributed fashion where different elements are spread across several interconnected computer systems. Any kind of computer system or other apparatus adapted for carrying out the methods described herein is suited. A typical combination of hardware and software may be a general purpose computer system with a computer program that when being loaded and executed controls the computer system such that it carries out the methods described herein.

The present invention also may be embedded in a computer program product which comprises all the features enabling the implementation of the methods described herein and which when loaded in a computer system is able to carry out these methods. Computer program in the present context means any expression in any language code or notation of a set of instructions intended to cause a system having an information processing capability to perform a particular function either directly or after either or both of the following a conversion to another language code or notation b reproduction in a different material form.

This invention may be embodied in other forms without departing from the spirit or essential attributes thereof. Accordingly reference should be made to the following claims rather than to the foregoing specification as indicating the scope of the invention.

