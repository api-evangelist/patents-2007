---

title: System and method of filtering search results
abstract: A system and method of filtering search results is provided. Certain embodiments provide an improved user experience in filtering large sets of data in a computer system through the use of multidimensional associative arrays which allow results to be filtered within a web interface without needing additional calls to web server or online database.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08458157&OS=08458157&RS=08458157
owner: Disney Enterprises, Inc.
number: 08458157
owner_city: Burbank
owner_country: US
publication_date: 20070928
---
This application relates to filtering of search results in a computer application. More particularly this application discloses a simplified search filter which is used to filter search results in a web browser without needing to reload page data from a web server.

Many web based applications allow users to search online databases for data by submitting a search request to a web server. Search results may be returned to the user s web browser and listed for viewing. In some applications a large number of listed results are returned and the user may wish to filter the listed results so as to lessen the number of items to scan to find the content in which they are interested. Existing search filtering systems use multi select menus that populate which each selection. These selection menus often take the form of a series of dropdown menus which allow the user to select filtering criterion from the offered menu selections. In some implementations the dropdown menus are positioned such that a user may first make a selection from a first dropdown menu. The system then makes a request to the server to filter the options presented in the second dropdown based on the selection in the first dropdown menu. The user then makes a selection from the second dropdown menu and submits the filtering request to the web server by clicking a SUBMIT button for example . At that point the web browser sends an HTTP POST command to the server specifying parameters with which to filter the search results. In response the server sends a new page having only the results that satisfy the parameters selected from the dropdown menus. Thus each selection made by the user requires a request be made to the server and the page to be reloaded in the browser window.

In one embodiment a search filter in a graphical user interface for filtering a record set of data is provided. The record set of data comprises a plurality of records having a plurality of attributes. The search filter comprises a filter table including a plurality of columns each column being related to an attribute of the records in the record set each column further displaying distinct values for attributes among the records in the record set each of the displayed distinct values being selectable the filter table being generated based on values stored in a first array the first array being a multidimensional array and a filter list comprising a listing of records the filter list being modifiable in response to a selection of one or more displayed distinct values the filter list being generated based at least in part on values stored in a second array.

In another embodiment a computer implemented method for filtering a set of data in a web browser is provided. The data set comprises a plurality of records having a plurality of attributes defined therefore. The method includes passing the plurality of record objects into a first array the first array being a multidimensional record listing array generating a second array comprising at least a first and second dimension the first dimension being related to attributes of the plurality of records and the second dimension being related to distinct values of the attributes among the plurality of records receiving a selection of at least one of the distinct values adding data indicative of the selected distinct value to a third array the third array comprising array elements related to each of the attributes comparing elements in the third array to elements in the record listing array and displaying the elements from the record listing array having elements of the third array using cascading style sheets.

In still another embodiment a computer readable medium is provided having computer executable instructions stored thereon which when transmitted to a computer having a web browser cause the web browser to perform a method for filtering a record object in a web browser. The record object comprises a plurality of records having a plurality of defined attributes. The method includes passing the plurality of record objects into a first array the first array being a multidimensional record listing array generating a second array comprising at least a first and second dimension the first dimension being related to attributes of the plurality of records and the second dimension being related to distinct values of the attributes among the plurality of records receiving a selection of at least one of the distinct values adding data indicative of the selected distinct value to a third array the third array comprising array elements related to each of the attributes comparing elements in the third array to elements in the record listing array and displaying the elements from the record listing array having elements of the third array using cascading style sheets.

Various embodiments set forth in this specification are directed to specific embodiments which provide an improved user experience in filtering large sets of data in a computer system. However the invention can be embodied in a multitude of different ways as defined and covered by the claims. In this description reference is made to the drawings wherein like parts are designated with like numerals throughout.

The systems and methods described herein may be implemented in a general purpose computing environment. In one illustrative embodiment various general purpose computing devices such as personal computers may be used to implement and run software configured to perform the methods described herein. Specialized computing devices such as computer network appliances may also be used. Other types of computing devices may also provide platforms on which the system may be run. The system may be implemented in a networked computing environment. In some embodiments a wide area network such as the Internet may be utilized to communicate information between computing devices. The system may be implemented as a thin client server application web based application accessible through browsing software or it may be implemented utilizing some other computer medium.

Referring now to an example of one exemplary configuration of a general purpose computing environment is provided. The computing environment may include one or more servers . In some embodiments the servers may be web servers configured to host one or more websites and one or more web applications. The servers may be in communication with one or more databases which store data that is used by the servers to provide content to the server applications. The databases may be stored on the same hardware as the servers or they may reside on a separate computing device. The computing environment may typically includes a network which is accessed by the servers via some type of network connection interface. In some embodiments the network is a wide area network such as the Internet for example. The servers and databases may be shielded from a network by a firewall . The firewall may be configured to protect the servers and the database from unauthorized network traffic and access attempts. In some embodiments the servers may be placed in front of the firewall while the database may remain behind the firewall to protect sensitive data. The firewall may be configured to allow appropriate traffic to pass through to the servers and the database in a manner well known in the art.

Connected to the wide area network may be one or more client computing devices which access the Internet via a network connection. The client computing devices may take various forms including but not limited to general purpose computers running web browsing software notebook computers tablet computers personal digital assistants cellular telephones other handheld devices or some other computing device capable of accessing the network through a defined application programming interface. The client computing devices may be operated by various users to access application modules within the servers and or databases . Although describes a particular architecture and configuration for implementation one of skill in the art will readily appreciate that the computing environment described is but one of many possible configurations that may be utilized without departing from the scope of the invention. For example the server and database may reside on a single computer or they may be distributed among several computers. Also the firewall may be integrated into the server the database or even both via a separate network interface.

Referring now to a more detailed diagram showing various software modules that may be included in a server . The server may be a computer running a general purpose operating system such as Windows MAC OS Linux or the like. The server may include various modules as shown in . These modules may take the form of software hardware or combination of the two. One of the modules in the server may be a web server . The web server may be a commercial off the shelf web server such as Apache or IIS or it may take the form of a more customized web serving software. As is well known in the art the web server receives requests from client computing devices on behalf of users and sends web page data in response to the requests. The server may further include a Java engine which is used to interpret and handle Java code. The Java engine may be Java virtual machine JVM . The Java engine may cooperate with the web server to deliver web pages generated programmatically by code provided to the Java engine. The server may further include a content management service CMS . The CMS is typically used to deliver page content to the web server for transmission is response to client requests. The CMS may take the form of a middleware application that accesses content stored in the database and provides it to the web server and Java engine for formatting and transmission to the client computing devices over the network . Although provides a specific example of one configuration for the server a skilled artisan will readily appreciate that various configurations of for the server and its associated modules may be used and that the specific example of the server configuration and the network environment are not intended to be limiting. Moreover other types of files such as JavaScript files .js files and or web page images for example may be served from an optional media server instead of directly from the web server .

As noted previously the web server running on the server may receive requests from client computing devices and respond to those requests accordingly. With reference to an example of a client computing device is provided. The client computing device which may take various forms typically includes a memory such as random access memory RAM which stores data for quick access by a processing unit such as central processing unit CPU . The client computing device may also include a non volatile memory such as a hard disk drive for example which may be used to store application data and other types of data. Also included in a typical client computing device is a web browser . The web browser may be a commercially available browser such as Internet Explorer or Firefox which has generalized capability of accessing the Internet or it may be a custom developed browser with a more specific functionality or capability.

The web browser may include modules which enhance the web browsing experience for the user of the client computing device . For example the web browser may include a script interpreter . The script interpreter receives program files from an external source such as web server for example and interprets the scripts into HTML and passes the HTML to a rendering engine . The rendering engine takes the HTML and generates a web page which is displayed on a display device of the client computing device . The script interpreter may be a JavaScript engine a JVM or both. The script interpreter may further include other interpreters which take program code and transform it into HTML which can be understood and output by the rendering engine .

The client computing device may further include an input device such as a keyboard mouse stylus touchscreen or one or more in combination which allows the user to interact with and control the behavior of the web browser and other software on the computing device. The client computing device may be any of various types of hardware including a personal computer a notebook computer a mobile phone a tablet PC a handheld computer and other computing devices.

As noted previously various embodiments described herein provide a simplified search filter which is used to filter search results in a web browser without needing to reload page data from a web server. In one embodiment the search results may be data stored in the database and provided by a content management system cooperates with the web server to deliver page data to the web browser of a client computing device . Referring now to an example of a database table which may be used to store content displayed in the web browser to the user . Although the example provided herein for purposes of illustration is a database table a skilled artisan will recognize and appreciate that the data may be stored in various formats including as a flat file an object oriented data structure or some other format.

As shown in the figure the table includes a plurality of database records which are organized according to the structure also sometimes referred to as a schema defined for the database table . The structure of the database includes a series of fields which typically store data related to some attribute associated with the record . Generally one or more of the fields will serve to uniquely identify each particular record among the records in the table . In the example provided in the RECORD ID field is the unique identifier for the records . Each record may also include various associated attributes which are stored in one or more of the fields defined in the table . In the example provided the table includes four attribute fields ATTRIBUTE  ATTRIBUTE  ATTRIBUTE  and ATTRIBUTE  . The records store values in each of the fields which are indicative of the attributes of the entity represented by the record .

In some embodiments the values stored in the attribute fields may be scalar values. Most of the records show in this example has atomic values in the attribute fields. However it is possible for attribute fields in a record to include multiple scalar values associated with the attribute. For example in the record having the RECORD ID value of 06 the value for ATTRIBUTE  includes two values delimited by a comma. The example table shown in is a simplified version of a database table suitable for implementing various embodiments described herein. In practice the database table may be much more detailed and be part of a normalized grouping of database tables in which attribute values are unique identification values which are normalized into separate database tables in a manner well known in the art.

Various embodiments of the present application will now be described in the context of a web based application which may be used to filter search results based on specified criteria associated with shore excursion activities provided in connection with cruise ship travel. Although this implementation is specific to a particular industry and business environment a skilled artisan will readily appreciate that this example is merely illustrative of one particular usage scenario and it not intended to be limiting in any respect.

In order to provide a more readily understood description of the various embodiments disclosed herein it is useful to first describe the operation of a web browser interface within the context of various embodiments described below. provide an example of a user interface for a web browser executing instructions in accordance with various embodiments described with reference to below.

Because the user may have certain preferences or requirements for the items of interest the interface includes a filtering table which allows the user to selectively filter the records listed in the dynamic record listing to limit the displayed records to those which meet criterion specified by the user . The filtering table lists various attributes about the database records associated with the excursions. In this example there are four filtering attributes which are listed in separate columns cruise activity type activity level and ages . Each attribute column is configured so that the selected item in the column provides an indication of its selection. In the user interface provided in the selection of an attribute in the attribute column is indicated by boldface font. Other indicators may be used however such as italics a change in background or some other visual element.

Because shows a full listing of the records the All Results value which results in no filter being applied for an attribute for each attribute column is highlighted. Next to each selectable attribute in the attribute columns is a qualifying records indicator which indicates how many records in the currently displayed record set satisfy the selectable attribute and as a result will be listed in the dynamic record listing if that particular attribute value is additionally selected by the user . Thus if the user selects Mild 61 in the Activity Level attribute column the listing summary is automatically e.g. without requiring an additional call to the server updated to read 61 of 111 excursions and the dynamic record listing is reduced to listing the 61 records that satisfy the selected filter.

The user may further refine or broaden by selecting an All Results filter the desired excursion attributes by selecting another attribute parameter value from one of the other columns . Turning now to an example of the user interface generated in response to an additional selection of the All Ages filtering parameter is provided. As with the previous selections the qualifying records indicators for each of the listed attributes are updated in response to the selection. In addition the listing summary and the dynamic record listing are updated accordingly. also provides a similar illustration of the user further narrow the dynamic records listing by selecting the Beach Water attribute from the Activity Type attribute column . The dynamic records listing includes only a single record that matches the specified parameters and the listing summary has also been updated accordingly. At any point during the process illustrated in the user may select the Reset Filters element which removes each of the selected parameters and returns the user to the initial screen as shown in .

As discussed previously various embodiments provide systems and methods for filtering search results received from a web server in a web browser without needing to send additional requests over the network to the web server . The operation of a browser interface according to various exemplary embodiments has been described above with reference to . provide a more detailed description of how the record filtering operations are provided through the use of multidimensional associative arrays to track filters and results data and the use of Cascading Style Sheets to show and hide the appropriate data according to the data stored in the associative arrays.

In general operation the user interface from is typically generated when a client device makes a request to the web server via a browser . In response to the request data from the database including attributes from the database records are returned from the web server to the web browser and are placed in local variables generally stored in the memory of the client device . In some embodiments the local variables are Javascript variables.

Based on the data returned by the web server the web browser generates a web page having at least a record listing area and a record filtering module. Initially all database records delivered from the web server are displayed in the dynamic record listing . As described above in connection with a filtering module is displayed that allows the user to narrow the recording listing by selecting certain attribute values from the filtering module which will in turn automatically narrow the record listing to those records meeting the selected attributes. In performing these selection operations no further requests are made from the web server as all of the record display operations are handled locally by the script interpreter and or the rendering engine in conjunction with other components of the web browser . In this way record listings are hidden if they do not match filter values requested by the user in the filtering module.

The data returned in response to the query may be written into the associative array shown in . The associative array in is a multidimensional array and is given the name arrFilters. This array may be used to create a filtering table as shown in below which allows a user to select attributes for filtering data displayed in the web browser . The first dimension of the associative array has values which represent each of the attributes in the table . Thus in the example shown in the database table schema includes first dimension array values for four attribute fields Cruise ActivityTypes ActivityLevels and Ages . In this particular example the associative array is formed as an object so the array values may be extended to include properties defined for the object. In the case of the first dimension of the associative array each value is given a name property which may be used to identify the object and a title property used for displaying information to a user in an easy to understand form . For example the arrFilters ActivityLevels object may include a Name property value of ActivityLevel and a Title property value of Activity Level which is more readable for a user.

The associative array may further include a second dimension which allows for specifying the distinct values for the associated with the attributes . These distinct values may be obtained in various ways. For example a SELECT DISTINCT statement may be included in the SQL query sent to the database . Alternatively the dataset returned from the database may be scanned for distinct values by the JavaScript during the initial page render. In this particular example the database table has three distinct values Mild Moderate and Active for the attribute ActivityLevels . Accordingly a second dimension array and is generated for each of these distinct values. The second dimension array may be extended to include additional information that is displayed to the user in the search filter table from . As noted above these associated values may be extended using object properties or as shown in the example of arrFilters ActivityLevel it may be extended using additional dimensions for the array.

The second dimension arrays and each represent a distinct value for the ActivityLevels attribute as stored in the database table . Additional properties may be defined for each distinct value represented by the second dimension array. For example for each distinct value the total number of records in the table having that specific attribute value may be defined. Thus if there are five database records having an activity level of Active the arrFilters ActivityLevel Active Total may be given a value of 5 to indicate that there are 5 records with an activity level attribute set to the value Active . Although not shown in additional second dimension arrays may also be defined for the first dimension arrays arrFilters Cruise and arrFilters Ages .

Turning now to examples of two arrays are provided which may be used to control the behavior of the filter table its associated listing of records and record count as shown in and described in further detail below . The first associative array is a filter selection array called in this example arrFilterChoices. This associative array may be used to track filter selections within the web browser interface. When a user selects filters from the filter table the values associated with the array are updated to reflect the user s selections. In some embodiments the default values will be All indicating that all results are currently displayed and the user has not narrowed the listing by selecting elements from the filtering table . As selections of filter choices are made by the user the arrFilterChoices associative array is updated to reflect those choices. In this particular example the array has been updated to reflect that the user has specified an activity level of Moderate from the Activity Level attribute column in . The array has been further updated in response to a user selection of the Water Sports attribute from the Activity type attribute column of the values for arrFilterChoices Ages and arrFilterChoices Cruise have not been selected or have been returned to the non filtered state as indicated by their respect assigned value in the array .

While the above detailed description has shown described and pointed out novel features as applied to various embodiments it will be understood that various omissions substitutions and changes in the form and details of the device or process illustrated may be made by those skilled in the art without departing from the spirit of the invention. As will be recognized the present invention may be embodied within a form that does not provide all of the features and benefits set forth herein as some features may be used or practiced separately from others. The scope of the invention is indicated by the appended claims rather than by the foregoing description.

