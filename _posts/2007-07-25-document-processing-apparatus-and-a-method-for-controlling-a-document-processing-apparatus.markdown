---

title: Document processing apparatus and a method for controlling a document processing apparatus
abstract: The present invention enables page-level or document-level print setup of an XPS document via a user interface. The print ticket of a page of interest is obtained by merging a job-level print ticket  to which the page of interest belongs, a document-level print ticket  to which the page of interest belongs, and a page-level print ticket  of the page of interest. The obtained individual page print tickets are compared with the job-level print ticket and if there are differences, it is determined that this particular page has exception settings and the exception settings are saved and displayed.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07916332&OS=07916332&RS=07916332
owner: Canon Kabushiki Kaisha
number: 07916332
owner_city: 
owner_country: JP
publication_date: 20070725
---
The present invention relates to a document processing apparatus and a method for controlling a document processing apparatus for processing documents with print settings.

According to publicly announced plans XPS XML Paper Specification an XML based document format will be supported in Windows Vista a product of Microsoft Corporation XML Paper Specification Version 0.9 May 18 2006 Microsoft Corporation search results as of Jul. 25 2006 called XML Paper Specification . An XPS document is a document composed of three hierarchical levels called FixedDocumentSequence FixedDocument FixedPage as shown in . FixedDocumentSequence FixedDocument and FixedPage correspond to nodes in the respective hierarchical levels with the XPS document having a tree structure made up of these nodes. FixedDocumentSequence describes a FixedDocument sequence. FixedDocument describes a sequence of FixedPages. FixedPage comprises page contents. XML documents containing print attributes called print tickets can be associated with the nodes of the respective hierarchical levels Print Ticket and Print Capabilities Support in Windows Print Drivers Feb. 6 2006 Microsoft Corporation search results as of Jul. 25 2006 called Print Ticket . It should be noted that print attributes are sometimes referred to as print settings. As shown in the example illustrated in a job level print ticket is associated with FixedDocumentSequence. In addition a document level print ticket is associated with FixedDocument. Moreover a page level print ticket is associated with FixedPage. The ability to specify print tickets for each node of each hierarchical level makes it possible to change the output paper size for each FixedPage of an XPS document as well as change the way each FixedDocument is stapled. It should be noted that a job level print ticket is a print ticket associated with FixedDocumentSequence. A document level print ticket is a print ticket associated with a FixedDocument. A page level print ticket is a print ticket associated with a FixedPage.

As mentioned in XML Paper Specification one aspect of such an XPS document is that it can double up as a print spooler format during printing and another is that it can be used as an ordinary document. Regarding the document aspect an XPS document in the same manner as an Adobe PDF file can be used as a document format for the purpose of public disclosure and dissemination of various documents. As described above in an XPS document each node of the hierarchical levels can hold a print ticket and as a result by virtue of the fact that the print tickets contain print settings it is possible to create and distribute XPS documents associated with print settings.

In addition in the so called print on demand POD market which involves printing on an as required basis as well as in the field of high end business printer drivers and hot folders it is desirable to specify print attribute settings for each page in addition to print attribute settings for the job as a whole. For instance in certain cases when creating a document made up of multiple sections it may be desirable to use colored paper for the first pages of the sections and white paper for the rest of the pages. In such cases the entire job is configured to use white paper and only the first pages of each section have a print attribute setting that specifies colored paper that is different from the print attribute settings for the job as a whole. In other cases it might be preferable for the configuration of other settings for example paper size simplex duplex post print finishing color settings etc. for a specific page or range of pages to be different from the print attribute settings of the job as a whole. It should be noted that as used in the present embodiment the term hot folder refers to a folder associated with print settings. Because print settings associated with a hot folder are provided in document files saved in the hot folder there is no need to reconfigure print settings for documents saved in the hot folder.

When different print attribute settings are configured for each page in such a printer driver or hot folder a property panel or a dialog used to configure page exceptions is opened in order to specify a page or a page range and create a partition. In many cases print attributes can be further configured for the partition through a lower level dialog see Japanese Patent Laid Open No. 2004 110638 or Japanese Patent Laid Open No. 2005 250606 .

According to Japanese Patent Laid Open No. 2004 110638 a functional module for section level setup is provided in a printer driver in order to permit different print attribute settings for different sections by saving them as section setup information files. Moreover Japanese Patent Laid Open No. 2005 250606 proposes a method for advance determination of exception print conditions that constitute exceptions to the basic setup conditions. For instance let us suppose that the exception setup condition is A3 paper size the print condition is one up printing and the basic setup conditions are A4 and two up . If the document to be printed is made up of 5 pages consecutively sized A4 A4 A3 A4 and A4 then the first and second pages are A4 sized and therefore match the basic setup conditions. For this reason these two pages are printed two up. In addition the third page is A3 sized and corresponds to the exception setup condition. For this reason the third page is printed one up. The fourth and fifth pages match the basic setup conditions too and are printed two up. It should be noted that the expression n up refers to a print setting used when printing n pages of a target document on one side of a sheet using reduced scale layout. N up printing is sometimes called reduced scale layout .

Furthermore the method adopted in postscript printer drivers from Xerox Corporation and in postscript printer drivers from Heidelberger Druckmaschinen AG requires that the user first of all configure exception settings for pages or page ranges and create partitions. Next exception settings are configured for the partitions using other print attribute setup panels or dialogs.

In the above described background technology an XPS document with print attributes may be distributed by the author of the document among multiple users. In such a case if the application used to create the XPS document is unavailable for the users who receive the XPS document the users will display and print it using a simple viewer or the like distributed free of charge which will allow them to read and print the XPS document. Such a simple viewer has limited functionality and it is believed that in many cases it will not support displaying and modifying print attributes for each page contained in the hierarchical structure of the XPS document. Checking and modifying print attributes for each page on screen is not feasible when displaying a distributed XPS document using such a simple viewer. For instance even though the author of the XPS document may use a large output paper size for a particular page all the paper sizes in the XPS document will appear identical in the simple viewer. The reason for this is that document print attributes are given priority and at the same time the print attributes of pages that is a lower hierarchical level cannot be understood when using such a simple viewer. However when the document is printed page print tickets are sent to the printer driver as well which is why paper media of larger sizes will be used for specific pages for printing in accordance with the print settings of individual pages. Thus the problem is that output obtained as a result of actual printing cannot be confirmed in the preview display window. Moreover another problem is that it is impossible to confirm and modify print settings on a page by page basis.

Furthermore in order to display and edit the print attributes of each node at each hierarchical level of an XPS document in the user interface window for exception setup the program used to edit the XPS document needs to identify exception settings incorporated in the XPS document. For instance the editing application will be able to identify exception settings by comparing the print attributes of each FixedPage contained in an XPS document. When there is a wide variety of setup features used for print attributes in an XPS document and furthermore when there are a large number of FixedPages in the document comparing the print attributes of all the nodes will require a large amount of time. Therefore the problem is that a lot of time will be necessary to display them on the user interface and no increase in operability or productivity will be achieved.

Moreover because the editing application is launched by the user and the XPS file can be read as described above it is possible to display print settings in the UI on a page by page basis. However the user interface of a conventional printer driver is called by the operating system in order to configure print settings and it cannot read an XPS file which is managed by the application acting as the printing source. For this reason a conventional printer driver cannot be aware of the print attributes set on a page by page basis and ends up displaying a print setup UI with default settings. Therefore it is believed that the user will face the problem of being unaware of the fact that print attributes have been predefined on a page by page basis in the XPS document.

The present invention provides a document processing apparatus and a method for controlling a document processing apparatus in which page exception settings assigned to a document such as for example an XPS document can be presented to the user prior to a print instruction by displaying them in the print setup user interface of the printer driver.

Furthermore it provides a document processing apparatus and a method for controlling a document processing apparatus wherein as a result the user can easily monitor print attributes for each page in the document with the help of the printer driver and accordingly can prevent unintended print output.

According to one aspect of the present invention a document processing apparatus in which document data having a tree structure made up of a plurality of hierarchical levels and allowing print attributes to be associated with nodes at each hierarchical level can be operated upon by a printer driver used to handle the print attributes the apparatus comprises

attribute reading unit configured to read print attributes associated with the nodes in the document data read by the document reading unit 

an extracting unit configured to extract an exception setting different from the print attributes associated with the whole document from among the print attributes read by the attribute reading unit and

a first displaying unit configured to display the exception setting extracted by the extracting unit in the user interface of the printer driver.

According to another aspect of the present invention a document processing apparatus has a printer driver the apparatus comprises

a document reading unit configured to read document data in accordance with a read instruction entered through a user interface of the printer driver 

an attribute reading unit configured to read print attributes set the document data read by the document reading unit 

an extracting unit configured to extract an exception setting different from the print attributes associated with the whole document from among the print attributes read by the attribute reading unit and

a first displaying unit configured to display the exception setting extracted by the extracting unit in the user interface of the printer driver.

Because the present invention allows the user to easily monitor print attributes for each page in a document with the help of the printer driver it can prevent unintended print output.

Further features of the present invention will become apparent from the following description of exemplary embodiments with reference to the attached drawings.

Several applications used to create documents etc. and printer drivers used to output application data to the printer are installed on the client PC . It should be noted that means other than printer drivers for instance hot folders and the like can also be used when outputting the application data to the printer if print attribute setup means are available.

The client PC is a general purpose personal computer. The client PC has a RAM which is used for storing software programs and data a CPU which executes the software programs and processes the data and a file storage unit such as a hard disk which is used for saving the software programs and data as files. In addition it is equipped with human interface devices such as a display a keyboard and a pointing device as well as an NIC used for connecting to a network. Furthermore an operating system OS which manages software resources and hardware resources is installed on the client PC and is run by the CPU. In the present embodiment the operating system is preferably one that supports XPS e.g. Windows Vista from Microsoft Corporation.

The printer driver displays a GUI graphical user interface provided with a display window structure suitable for issuing instructions regarding print operations and other output operations to be performed by the printer of this system. The GUI is made up of windows shown on the display screen when for instance the user issues an instruction to display printer related properties. By operating the GUI the user can configure the desired setup parameters of the print attributes print attribute data . The printer driver exercises control such that the configured user print attribute settings are transmitted to a printer or another transmission destination also called an output destination along with the desired image data through a network or another communication medium. to show examples of the GUI with print attribute settings displayed by the printer driver.

In a window of the printer driver is displayed for instance when selecting printer property settings supplied by the operating system. In the window a selection column is a transmission destination selection column used for selecting the output destination serving as the target destination. The user can select the desired output destination device of the system using the selection column .

A control is a page setup control used to select output pages from a job. Using the radio buttons of the control the user decides which page of the document text file created by the application software running on the client PC is to be output. Using the page setup control the user can select the page to be outputted for printing to a printer or another device in the system. Along with printing all the pages the user can also have a specific page printed without printing all the pages.

A control is a control used for setting the number of copies to specify the number of copies of a job to be submitted for print output to the printer or another device in the system. By moving the cursor to this position and clicking the arrows scrollbar arrows shown in the user can increase or decrease the number of copies. The print attribute data entered using the controls to is saved in association with the entire document file to be output.

A property button is a property button used for configuring setup details for the transmission destination device selected in the transmission destination selection column . The printer driver exercises control such that various detail windows shown in to are displayed on the display screen of the computer in response to entries made by the user with the help of the button .

After configuring the desired settings using the various control windows shown in to the user by pressing an OK button can initiate printing in accordance with the print settings desired by the user. When cancelling this process the user presses a close button as a result of which a controller accepts the instruction discontinues printing discards the current user settings and terminates the display of the window .

In addition when the user presses clicks on an OK button print settings entered up to that point since opening the print setup window are saved as effective settings and the display returns to the window of . In addition when a Cancel button is pressed clicked settings entered up to that point since opening the print setup window are invalidated and discarded and the display returns to the window of .

Moreover in the same way a Paper Supply tab permits selection of settings such as paper feed stages for example a Print Quality tab permits selection of resolution and half tone related settings etc. All of these are print attributes used on an individual print job basis for a single document file to be printed .

After setup these settings are saved on a print job basis and passed on to the image forming device selected by the user with the help of the control window of . The image forming device performs printing and finishing operations in accordance with the print settings.

Next the method used for configuring a page or a range of pages with print attributes different from the print attributes of the job as a whole referred to as basic attributes will be described. Configuring different print attributes only for a page or a range of pages in this manner is called exception setup.

It should be noted that there may be cases in which the same print attributes are configured for adjacent pages or page ranges in the exception settings list created by the user. In such cases the selected exception ranges are merged when the user selects the exception ranges to be merged from the exception settings list and presses a Merge button . A Delete button is provided for deleting exception ranges selected from the exception settings list . To do so the exception ranges one wants to delete from the exception settings list are pre selected and deleted by pressing this button. The ranges features and contents of the settings in the exception ranges included in the exception settings list can be modified using a Set button . To do so the exception ranges one wants to change can be pre selected from the exception settings list and reconfigured by pressing the button . The modified exception settings list is reflected in the exception setup information.

The tabbed panel Special Settings and Exception Page Setup dialog permit configuration of page exception settings. It should be noted that although an exemplary method of exception setup has been described herein as explained in Background Art there are other methods of configuring page exception settings.

The basic operating procedure is to specify a page or a page range and to configure exception settings with the help of dialogs or tabbed panels used to configure exception settings for print attributes.

While the window illustrated in is a window that opens when configuring printer settings in an application program is a dialog that opens from a menu used to configure printer settings in a printer driver. In a Device Setup panel is additionally displayed. The tabbed panel Device Setup of makes it possible to provide device setup information and configure the printer driver. A control is a control used to configure how paper supply options are installed. A control is a control used to configure how paper output options are installed. After configuring the desired settings using the various controls shown in the user can apply the settings desired by the user by pressing an OK button . When cancelling the settings the user presses a Cancel button as a result of which the printer driver receives the instruction discards the contents of the settings and terminates the display of .

As described above the user makes use of the various print setup windows of to on the client PC to configure the desired output conditions among the printing conditions including various detailed settings and page exception settings. Upon completion the client computer sends a print job output request print condition data print attributes for the job and the print data associated with the print job. By doing so the client PC can control the output device selected by the user from the devices that the system is equipped with including various printers MFP devices and other image forming devices in accordance with the configured print attributes.

The printer driver has a user I F driver and a graphic driver . The user I F driver displays a user I F saves settings etc. The graphic driver converts graphic commands issued by the application program via the OS into code that can be interpreted by a printer . The user I F driver displays the property panels and print setup dialogs of to when print settings are specified by the application program through the OS .

It should be noted that a print setup storage area of the printer driver is part of the storage area managed by the OS . The print attributes configured by the user using the user I F driver are saved in the print setup storage area . Moreover the user I F driver graphic driver and application program can access the print setup storage area through the OS and can read the print attributes configured by the user. The print attribute setup values saved in the print setup storage area can be referenced as the default values of the print settings. For instance print attributes can be provided in an XPS document by associating print tickets with the document. However default values are required for the print settings when there are features that are not defined in the print tickets associated with the document or when no print tickets are associated therewith. Accordingly the setup values saved in the print setup storage area are referenced as the default values.

The exception setup storage area which is used to store exception setup information is stored by the printer driver . This is an area used to save exception setup information created in accordance with the procedures of and . The exception setup storage area is created based on the print tickets associated with the XPS document.

In addition it is connected to a communication I F of the client PC and to a communication I F of the printer through a network or another communication channel. The graphic driver can transmit print data to the printer through the OS . Moreover setup information status and other information on the printer can also be acquired via the OS .

The components of the client PC shown in are implemented as software modules executed by the CPU of the client PC.

Next workflow will be described in which the user selects a print menu from an application menu configures print attributes in the printer driver and obtains print output. and are flow diagrams illustrating the procedure from the moment when the user issues a print instruction to the moment the job is printed.

In S and S are carried out by the application program and S along with the subsequent steps is executed by the printer driver .

First of all in S the application program receives print setting menu selections made by the user. As a result of this operation in S the application program calls the API of the OS and instructs the printer driver to display the print attribute setup property panel. The term API is an abbreviation of Application Programming Interface . At such time the application program secures an area for saving print settings in memory and informs the API of the secured print setup storage area. Based on this instruction the OS issues an instruction to the printer driver to display the print attribute setup property window.

Upon receipt of the instruction in S the user I F driver of the printer driver displays the print attribute setup property window depicted in . Subsequently in S the user I F driver receives the entry of print attribute settings by the user through the dialogs and property windows shown in to above. After configuring the print attribute settings the user confirms the configured print attributes by pressing the OK button on the property window of . Upon depression of the OK button in Step S the user I F driver saves the entered print attribute setup values in the print setup storage area specified by the API call. This completes the setup of print attributes and saving of the setup values.

In S the graphic driver reads the print attribute setup values held in the print setup storage area specified in S in response to the print start instruction generates print attribute setup code and transmits it to the printer . It should be noted that when print tickets are associated with the XPS document the job level print ticket is read by the user I F driver and merged with the default values saved in the print setup storage area . The merged print setup information is preferably saved in another area without overwriting the print setup storage area . In S print attribute setup code is generated based on the merged print setup information. When there are exception settings document level or page level print tickets specifying page ranges in the subsequent Step S they may be associated with the relevant pages of the document data and transmitted to the printer. The exception setup information created according to the procedures of and described below is referenced when generating print attribute setup code for exception settings. In and the retrieved exception setup features are limited to the features set in advance as shown in described below . Therefore even if print settings that cannot be modified on a page by page basis are described in a print ticket they may not be reflected in the printing process. An alternative method that may be used is to recreate the print attribute setup code before and after the page range with exception settings and transmit this print attribute setup code first of all prior to the document data.

On the other hand after S the application program in S carries out a drawing process based on the document data to be printed. The drawing process is carried out through the API provided by the OS with graphic commands passed on to the printer driver .

In S the graphic commands directed to the OS are input into the graphic driver . The graphic driver converts the received graphic commands into print code that can be interpreted by the printer and transmits it to the printer.

In S the printer carries out rendering based on the received graphic code and print attribute setup values and completes the print job by carrying out printing.

The above described procedure allows the user to configure print attributes and produce print output.

The flow of print attribute setup in the present embodiment will be explained next. In the present embodiment the print settings of an XPS document such as the one illustrated in are displayed and edited and the document is printed. The XPS document shown in is a FixedDocumentSequence corresponding to a document composed of two FixedDocuments corresponding to sections each having four FixedPages corresponding to pages . A print ticket represents the print attributes of the entire FixedDocumentSequence that is the document. In the print ticket JobPunch which is a hole punching function attribute is set to On and PageColor which is a color attribute is set to a monochromatic setting Mono . PageInputBin which is a paper feed stage attribute of the output paper media is set to an automatic setting Auto and PageMediaSize which is an output paper size attribute is set to A4 . The print attributes shown in FixedDocumentSequence are inherited by the lower level FixedDocuments and FixedPages as basic settings. A print ticket is associated with FixedPage and FixedPage which belong to the lower level of the FixedDocument and a print ticket is associated with Fixedpage. If conflicting values are set up for the same attribute feature in an upper level print ticket and a lower level print ticket the lower level print ticket is given priority. In other words the contents of the print attributes of the print ticket are overwritten by the print attributes of the print tickets . Moreover because no print tickets are specified for FixedPage it inherits the print attributes of the print ticket as is .

A print ticket is associated with FixedPage and FixedPage which belong to the lower layer of the FixedDocument and a print ticket is associated with FixedPage. Here if the print attributes of the print ticket of the FixeDocumentSequence and the print attributes of the print tickets to of the FixedPages are different it can be inferred that the print attributes of said FixedPages have exception settings.

As shown in the document retrieval window has a text box which is used to specify the XPS file path a file path information button a retrieved setup range specification section and a retrieval method specification section . Furthermore it has a retrieved setup feature specification section an OK button and a cancel button . The user specifies the file path of the XPS document the user wants to retrieve print attributes for on the special settings panel in the text box . The file path can also be specified in a file specification dialog not shown by pressing the file path information button . The settings received in are saved for example in the print setup storage area .

The retrieved setup range specification section is used to specify the level of the retrieved print tickets of the XPS document specified in the text box . It permits selection of options such as retrieving a print ticket with the global print job level settings only or retrieving print tickets for all the FixedPages belonging to the FixedDocumentSequence of the XPS document. The operation of the user I F driver which receives this selection corresponds to a range selecting means step .

The retrieval method specification section makes it possible to select whether to retrieve all the attributes specified in the print tickets in the XPS document or only the attributes selected by the retrieved setup feature specification section . Here when the Retrieve All Features option is selected in the retrieval method specification section the retrieved setup feature specification section is not displayed. The operation of the user I F driver which receives this selection corresponds to a feature selecting means step .

When the configuration of all the settings in the document retrieval window is complete and the user presses the OK button the user I F driver retrieves the print tickets of the XPS document specified in the text box . The retrieval of print tickets performed by the user I F driver will be now explained using the flow charts of to D. Here it is assumed that an XPS document has been specified that has print tickets such as those shown in . Despite the fact that the explanations mention the reference numerals of the procedure of to D is applicable to XPS documents of any structure.

In S the apparatus reads the XPS document specified in the text box from the specified location for instance a file storage unit such as a hard disk and loads it into memory. The XPS document is described using XML with FixedDocumentSequence FixedDocuments and FixedPages defined using tags in the document. S corresponds to a document reading step.

The job level print ticket associated with the FixedDocumentSequence of the XPS document loaded into memory is extracted in S. S corresponds to an attribute reading step. In S with account taken of the setup values of the retrieved setup range specification section it is determined whether the configured range encompasses all pages or individual pages. In S processing advances to S if it is determined that the setting is to Show only global settings at job level in the UI . On the other hand in S processing advances to S if it is determined that the setting is to Show detailed settings for each page in the UI .

In S the program focuses on the FixedDocuments and the print tickets associated with the FixedDocuments are extracted. Attention to the FixedDocuments is directed in the order of their descriptions in FixedDocumentSequence. In the XPS document of no print tickets are specified for any FixedDocument. Accordingly each FixedDocument inherits the print attributes of the print ticket specified in the FixedDocumentSequence.

Next in S the document level print tickets extracted in S are merged with the job level print ticket. Because no document level print tickets are specified the print ticket obtained after merging has the same contents as the job level print ticket shown in .

Next in S attention is directed to the FixedPages described in the FixedDocuments of interest and the print tickets associated with the FixedPages are extracted. Attention to the FixedPages is directed in the order of their descriptions in FixedDocuments.

Next in S the document level print tickets obtained by merging in S are merged with the page level print tickets extracted in S. The processing carried out in S determines the print tickets of the pages of interest.

In S a compatibility check is carried out to determine whether there are mutually contradictory settings in the determined print tickets. If there are mutually contradictory settings at such time the setup values are modified reconciled to avoid contradictions. As for attribute features with incompatible setup values the features and the values are saved for instance in a table etc. and the table is used to decide whether they are incompatible. Moreover setup values used to eliminate the contradictions are saved in the table as well. Thus incompatible settings are determined using the table and either some or all of the setup values are modified. This process corresponds to a reconciliation step.

In S it is determined whether the settings of the print tickets have been reconciled in S which is called validation . If it is determined that the settings have been reconciled processing advances to S. On the other hand if it is determined that the settings have not been reconciled processing advances to S. Here determination as to whether the settings have been reconciled is made possible by comparing print tickets before the compatibility check with print tickets after the compatibility check and verifying whether the values of the attributes have changed.

In S conflict information regarding the attributes reconciled in S is stored in conflict information of . In this embodiment the conflict information is described using XML as well. The conflict information has a hierarchical structure. A conflict information tag indicates conflict information as a whole. A document number tag shows the document number of the FixedDocument comprising the FixedPages between which the conflict took place. In addition a conflicting page information tag shows information on the pages between which the conflict took place. The conflicting page information tag includes a start page number tag which shows the starting number of the pages between which the conflict took place and an end page number tag which shows their ending number and a setup feature tag which shows the conflicting setup features. In addition the setup feature tag shows the title of the setup feature that experienced a conflict and was reconciled. A pre modification setup tag and a post modification setup tag are included in the setup feature tag . These are areas used to store settings before and after reconciliation respectively. The conflict information corresponds to a reconciliation information holding means. In addition S corresponds to a reconciliation information holding step.

In addition in S the tags through are used to store setup reconciliation information which permits display of a conflict information window as shown in . The conflict information can be displayed by pressing the conflict information display button shown in . In the conflict information window information based on conflict information is displayed in areas through . The user I F driver displays the information of the document number tag in a document number display area and in addition displays the information of the starting page number tag and ending page number tag in a page number area . Moreover it respectively displays setting titles corresponding to the contents of the setup feature tag in a conflicting setting content display area the information of the pre modification setup tag in a pre modification setup display area and the information of the post modification setup tag in a post modification setup display area . This process corresponds to a step for displaying reconciliation information. The term reconciliation information corresponds to conflict information.

When the saving of the conflict information in S is over processing advances to the following step S. In S it is determined whether the setting configured in the retrieval method specification section of is to Retrieve All Features or to Retrieve Selected Features Only . If the configured setting is Retrieve All Features then in S all the page level print attributes obtained by merging in S are compared with the job level print attributes extracted in S. Comparing the job level and page level print attributes makes it possible to determine whether the current FixedPage has exception settings.

On the other hand if it is determined in S that the configured setting is Retrieve Selected Features Only then in S the features selected in the retrieval setup feature specification section are compared with the corresponding features contained in the job level print attributes extracted in S. S and S correspond to an exception extracting step.

Next in S the results of comparisons conducted in S or S are used to determine whether the attribute values of the page level print tickets print tickets determined in S and the job level print ticket of the current pages of interest are different or not. If it is determined in S that the values of the attributes are different processing advances to S. In S setup features determined to have different attribute values as a result of comparison conducted in S or S are extracted and exception settings are stored in exception setup information shown in .

The exception setup information contains an exception setup information tag a document number tag a page exception setup information tag an exception start page number tag an exception end page number tag and an exception setting content tag . The exception setup information tag shows the entire exception setup information. The document number tag shows the number of the FixedDocument comprising the exception setup information. The page exception setup information tag shows page exception setup information. The exception start page number tag shows the starting page number of the page exceptions. The exception end page number tag shows the end page number of the page exceptions. The exception setting content tag shows the setup features of the page exceptions. For instance referring to FixedPage of the XPS document of the print ticket associated therewith has a different PageColor attribute and PageInputBin attribute in comparison with the job level print ticket . Thus it is evident that this information is stored in the exception setting content tag in exception setup information .

Next in S the page number of the current page that is the page of interest is stored in the exception start page number tag of the exception setup information . In S the print ticket of the following FixedPage is acquired. In S it is determined whether the acquired print ticket has the same print attributes as the print attributes of the print ticket of the previous FixedPage. In addition the print ticket of the following FixedPage is read if it is determined that the print attributes are the same. The processing of S and S is repeated until the print attributes change or there are no subsequent FixedPages. Because in the exemplary XPS document of the print ticket is associated with FixedPage and FixedPage it can be determined that FixedPage and FixedPage have the same print attributes. For this reason the processing of S and S is carried out until the FixedPage is read in with said page having associated therewith a print ticket which has print attributes different the print ticket .

If it is determined in S that there are no subsequent FixedPages or that the print attributes are different from the print ticket of the previous FixedPage processing advances to S. In S the page number of the current FixedPage is stored in the exception end page number tag of the exception setup information . When the exception settings of the print ticket of the XPS document of are saved the page number is stored in the exception end page number tag .

Next in S it is determined whether the print tickets of all the FixedPages in the FixedDocument have been read. If it is determined that the process is not over processing advances to S and upon acquisition of the print ticked of the next FixedPage processing branches to S. In this manner processing from S to S is repeated until print tickets are tested for all the FixedPages in the FixedDocument. On the other hand processing advances to S when it is determined in S that processing of all the FixedPages in the FixedDocument is over.

In S it is determined whether processing of all the FixedDocuments in the FixedDocumentSequence is over or not. If it is determined that it is not over processing branches to S and the steps from S to S are repeated. On the other hand if it is determined in S that processing of all the FixedDocuments is over processing advances to S and the exception settings list of is displayed in accordance with the contents of the exception setup information . It is understood that the contents of the exception setup information is reflected in the special settings display section of .

In addition in S the contents of the job level print ticket are reflected in the UI windows other than the special settings display section and processing is terminated. S corresponds to an exception setting displaying step.

In this manner exception setup information can be created based on the print tickets of an XPS document. Therefore the user can easily understand exception settings. Moreover the user can change the exception settings and the contents of the changes can be reflected in the print tickets.

First of all in S the state of the exception setup window in the print setup window is saved in the format of the exception setup information . The initial exception setup information tag of the exception setup information is acquired in S. In S the contents of the exception setting content tag are saved in the print tickets associated with the FixedPages described in the exception start page number tag and exception end page number tag . In other words the reconfiguration of the print attributes is reflected in the XPS document.

Next in S it is determined whether all the page exception setup information of the exception setup information has been processed. If it is determined that processing of page exception setup information is not over then in S exception setup information for the next page is acquired and the processing of S to S is repeated. On the other hand processing is terminated if it is determined in S that processing of all the page exception setup information in the exception setup information is over.

The above described procedure makes it possible to modify print attributes and retrieve print tickets of the various hierarchical levels in the XPS document into the exception setup window.

In addition as a result of that the user can easily monitor print attributes for each page in the XPS document with the help of the printer driver and therefore can prevent unintended print output.

Moreover because the user can select the ranges and features used when retrieving print attributes contained in the XPS document the contents of the print attributes can be efficiently displayed in the user interface.

In addition because conflicts arising in case of invalid combinations of print attributes in the XPS document can be solved and the contents can be displayed user can easily recognize reconciled settings.

It should be noted that in the present embodiment explanations have been provided regarding an XPS document as a document example. However in case of document data permitting configuration of exception settings for pages and page ranges the present invention can be applied to documents other than XPS.

The client PC is a document processing apparatus in which document data having a tree structure made up of a plurality of hierarchical levels and allowing print attributes to be associated with nodes at each hierarchical level can be operated upon by a printer driver used to handle the print attributes permitting association of the print attributes with each node in each hierarchical level.

A document reading unit reads document data in accordance with read instructions entered through the user interface of the printer driver. Of course the read instruction can be input in other ways such as via a dialog window in a software application program.

An attribute reading unit reads print attributes associated with nodes in the document data read in by the document reading unit .

An extraction unit extracts exception settings different from the print attributes associated with the document as a whole from among the print attributes read in by the attribute reading unit .

A first display unit displays the exception settings extracted by the extraction unit in an exception setup window in the user interface of the printer driver.

Based on selection instructions entered through the user interface of the printer driver a range selection unit obtains hierarchical options read in by the attribute reading unit from among the plurality of hierarchical structures of the document data.

Based on feature selection instructions entered through the user interface of the printer driver a feature selection unit receives selections of print attribute features read in as exception settings among the print attribute features of various hierarchical levels of the document data.

A processing unit performs processing to reconcile attribute values so as to produce correct combinations of attributes when there are attribute features configured with incompatible values in the print attributes associated with the nodes of each hierarchical level read in by the attribute reading means.

It should be noted that the present invention may be applied to a system composed of a plurality of devices e.g. a host computer interface devices readers printers etc. and may also be applied to an apparatus constituted by a single device e.g. a copy machine a facsimile machine etc. . Moreover the object of the present invention is also achieved if a storage medium containing a record of program code implementing the functionality of the above described embodiment is supplied to a system or apparatus and the computer of the system or apparatus reads and executes the program code stored on the storage medium. In such a case the program code read from the storage medium implements the functionality of the above described embodiment and therefore the program code itself and the storage medium on which the program code is stored form part of the present invention.

Namely the present invention also includes cases in which an OS operating system etc. running on a computer partially or entirely carries out actual processing based on the instructions of the program code and the functionality of the above described embodiment is realized by this processing. Furthermore the present invention is also applicable to cases wherein the program code read from the storage medium is written to a memory provided on an expansion card inserted in the computer or an expansion unit connected to the computer. In such a case based on the instructions of the program code written thereto a CPU etc. provided in the expansion unit or expansion card partially or entirely executes actual processing and the functionality of the above described embodiment is implemented based on this processing.

While the present invention has been described with reference to exemplary embodiments it is to be understood that the invention is not limited to the disclosed exemplary embodiments. The scope of the following claims is to be accorded the broadest interpretation so as to encompass all such modifications and equivalent structures and functions.

This application claims the benefit of Japanese Patent No. 2006 208933 filed Jul. 31 2006 which is hereby incorporated by reference herein in its entirety.

