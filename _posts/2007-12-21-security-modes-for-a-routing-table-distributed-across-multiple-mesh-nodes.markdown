---

title: Security modes for a routing table distributed across multiple mesh nodes
abstract: A mesh is joined by a node, wherein the mesh includes a Distributed Routing Table (DRT) for determining addresses of nodes in the mesh. A DRT message is processed in accordance with a security mode of the DRT.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07987290&OS=07987290&RS=07987290
owner: Microsoft Corporation
number: 07987290
owner_city: Redmond
owner_country: US
publication_date: 20071221
---
Peer to peer P2P networks provide a serverless communications environment. Most P2P networks today are open and unsecure. A peer within a P2P network may provide routing information to another peer and lookup routing information at another peer without security considerations such as authentication or authorization.

The following presents a simplified summary of the disclosure in order to provide a basic understanding to the reader. This summary is not an extensive overview of the disclosure and it does not identify key critical elements of the invention or delineate the scope of the invention. Its sole purpose is to present some concepts disclosed herein in a simplified form as a prelude to the more detailed description that is presented later.

Embodiments of the invention provide security modes for a Distributed Routing Table DRT . A DRT includes a table with entries that are distributed across a group of machines that can be used to map keys to endpoints by finding routes through a network of peers. In one example a basic security mode requires nodes to prove the right to publish keys. In another example a membership security mode requires nodes to prove the right to publish keys and lookup keys. In yet another example a confidentiality security mode requires nodes to prove the right to publish keys lookup keys and at least a portion of data in DRT messages is encrypted so that the data is obscured from unauthorized nodes sniffing DRT traffic.

Many of the attendant features will be more readily appreciated as the same become better understood by reference to the following detailed description considered in connection with the accompanying drawings.

The detailed description provided below in connection with the appended drawings is intended as a description of the present examples and is not intended to represent the only forms in which the present examples may be constructed or utilized. The description sets forth the functions of the examples and the sequence of steps for constructing and operating the examples. However the same or equivalent functions and sequences may be accomplished by different examples.

A peer to peer network provides a serverless environment for collaboration between multiple computing devices. A P2P network connects devices in an ad hoc manner into a collection of nodes called a mesh or overlay network . A mesh operates on an underlying transport layer e.g. an IPv4 or IPv6 network or physical network e.g. a wireless transmission capability . Also the DRT is agnostic to this layer and is abstracted into one of the separable and pluggable layers called transport .

A DRT supports the routing of information in a mesh. The DRT comprises a set of routing tables distributed across several nodes in the mesh. The DRT may be used by a node to determine a route e.g. a series of Internet Protocol IP addresses physical addresses e.g. MAC addresses or device IDs to a target node in the mesh and the network address of the target node itself. The DRT may include routing entries for a key e.g. a numeric identification ID for a node a string ID for a node etc. and its corresponding network address. Each node may use a portion of the DRT stored locally or at another node to search for a key. Once the node finds the desired key in the DRT the node can determine the network address for the target node the set of nodes whose local DRT portions were queried during the key lookup process together form a route to the target node. The node may then use the target node s network address and or the route discovered during key lookup to contact the target node for establishing communications e.g. file sharing .

System includes a DRT for supporting a mesh including nodes . Nodes are executing on computing devices respectively. DRT is distributed across multiple nodes seeking to collaborate via a same application. Each node includes a separate portion of DRT . In one embodiment a single device may support two or more nodes also referred to as node instances that are participating in one or more meshes. For example a single application may instantiate two different nodes that participate in the same mesh.

Applications and are shown on each device respectively. The application uses the P2P mesh for exchanging information relevant to the application. Example applications include file sharing real time collaboration distributed search engines Voice over Internet Protocol VoIP etc.

In one embodiment nodes use a componentized model. A node component includes protocol handlers and core APIs. The node component references pluggable modules for separable subsystems that may include routing table management transport bootstrap security and logging. Each module can be instantiated by an application.

An embodiment of a pluggable module includes a security module. In one embodiment each node in a mesh uses the same security module implementation for operating and managing security modes as described herein such as security modules shown at nodes respectively. A security module allows DRT to implement a set of security modes that allow application authors to configure security settings for their P2P meshes. Applications may configure a DRT with various security settings as desired. More security generally costs more in routing bandwidth and requires more computation but allows for tighter management and better privacy.

Embodiments of security modes for DRT include from least security level to highest security level basic security mode membership security mode and confidentiality security mode. In one embodiment a security mode includes the features of the security modes below it. For example membership mode includes the security features of the basic mode as well as adding its own security features.

Turning to an embodiment of a mesh for a P2P network is shown. Mesh includes five nodes each node having a security module respectively. The nodes may be supporting applications or services on a mix of computing devices such as desktop PCs servers mobile devices and the like not shown .

Mesh is formed on top of underlying transport layer e.g. an IPv4 or IPv6 network or physical network shown as network . Each node stores and maintains a portion of the distributed routing table. A node s portion of the DRT is referred to as the node s local DRT. In nodes store local DRTs respectively. The combination of local DRTs make up the whole DRT for the mesh.

In order to find an address e.g. IP address to a node in the mesh a node may search for another node s key. The searching node may perform lookup operations with other nodes local DRTs until the target key of the search is found. A node may also publish its own key to the mesh in order to populate the DRT with its key.

In one embodiment of a search algorithm a node may search for a key by looking for the key in the node s local DRT. If the key is not found then the node starts searching the local DRTs of other nodes. For example a searching node asks a node that has a key closest numerically to the desired key whether the node has the key in its local DRT. The node in turn looks in its own local DRT and returns either the address of the requested node corresponding to the key or the address of a node publishing the key numerically closest in its local DRT. This is repeated until either the key is found or it has been determined that no such key exists. Examples of such a routing system include a Distributed Hash Table DHT and a Peer Name Resolution Protocol PNRP . The DRT provides a routing cache infrastructure for these routing systems.

A DHT is used to store information identified by keys. In DHT a keyspace includes a set of keys. The keyspace is split up among the nodes in the mesh. Each node is responsible for a range of keys. When a node wants to store or retrieve information for a particular key it must first find a node that is responsible for the key the node searches for a node that is responsible for that key range. For example in node may have a root of 15 and be responsible for keys node may have a root of 26 and be responsible for keys and so on. Usually only one node publishes the keys for a particular key range. When nodes enter and leave the mesh the key ranges assigned to the nodes are adjusted. The adjustment may be made across all nodes or a portion of the nodes in the mesh.

In PNRP a node maintains the stored information for its own keys published to the mesh. Thus a node may publish multiple keys and a particular key may be published by more than one node as compared to DHT which normally assigns each key to only one node . Also as a node communicates with other nodes the keys for those others nodes are added to the node s local DRT.

It will be appreciated by one skilled in the art having the benefit of this description that PNRP secure names may be distinguished from DRT security as described herein. A PNRP secure name allows a node to prove that it owns a particular key to prevent spoofing of a key it achieves this by combining the name with the public key of the registering node and providing a certificate proving ownership of the public key. However PNRP does not have security measures that control the right of a node to publish a key or look up a key.

An example of PNRP is shown in . Each node has its own key i.e. its root and respectively. Each node stores its own key as well as other keys in its local DRT. Assume node wants to determine the endpoint i.e. node for the key i.e. PNRP ID of . Node looks in its own local DRT for key and does not find it. Node then finds the key in its local DRT that is numerically closest to the desired key . In this case key is closest to key so node sends a PNRP request message to the node corresponding to key i.e. node . Because node has key in its cache i.e. local DRT node sends the address e.g. IPv6 address of node which corresponds to key to node . Node may then send a PNRP request message to node using the address to begin communications with node . Node also adds key to its own local DRT .

Whether using DHT PNRP or some other routing system embodiments herein provide security regarding publication of and access to information in DRTs.

Turning to a flowchart shows operations of using security modes with a distributed routing table in accordance with an embodiment of the invention. In one embodiment at least a portion of flowchart may be implemented by computer readable instructions executable by one or more computing devices.

Starting with operation a security ID is obtained. The security ID may be obtained out of band from participation in the mesh. For example a computing device may connect to a security ID service such as a Web site and obtain a security ID.

The security ID may be valid for a particular term such as a single P2P session. For example a user may want to join a P2P network as part of a news web site. The user obtains a certificate from the news web site and uses the certificate in DRT messages. Each node receives a unique security ID that can be traced back to an issuer e.g. via a certificate chain . All nodes in a mesh receive a security ID so that the nodes may authenticate various DRT messages from each other as described below.

Next in operation an application for use with a P2P network is launched. In one embodiment the application is pre preprogrammed with the desired security mode. In one embodiment security modes are not mixed in the mesh so all nodes use the same DRT security mode. When an application wishes to join a mesh there may be certain mesh wide configuration expectations. For example an application may be expected to communicate using a Transmission Control Protocol TCP instead of another protocol like User Datagram Protocol UDP . Similarly the mesh will expect joining applications to use a particular security mode as described herein.

Continuing to operation a node is created and joins a mesh. For example a node instance of the DRT for the mesh is opened. Next in operation DRT messages are processed using a security mode as described herein. Processing a DRT message includes constructing and sending DRT messages as well as receiving authenticating and processing authenticated DRT messages. A DRT message includes messages related to local DRT cache maintenance and searching operations such as a flood message used to signal the presence of a key to peers a lookup message used to find the owner of a key an inquire message used to request a security ID for authentication an authority message used to deliver a security ID for authentication and the like.

Proceeding to operation the node leaves the mesh. For example the node instance of the DRT is closed.

An example of the operations of is as follows. A sports web site has a mesh for distributing sports blogs to users. A user goes to the sports web site and signs up for the blogs. During the signup process the user receives a certificate for use with the mesh. The user then launches an application on their client machine to join the mesh. When the node associated with the user registers its presence in the mesh e.g. publish its key the other nodes will authenticate the certificate to ensure that the user s node is authorized to publish keys in the mesh.

Further the user s certificate may have a limited term. For example the sports blog service may cost users a monthly fee. The certificate is renewed each month when the user pays the monthly fee. If the user does not pay the monthly fee then the certificate expires and the user can no longer use the sports blog mesh. The user in practical terms cannot use the mesh because any publish key messages sent by the user s node will be ignored by the other nodes in the mesh. Since the node s key will not be added to the DRT other nodes will not be able to find the node s network address.

Turning to flowcharts and show operations of a basic security mode in accordance with an embodiment of the invention. In one embodiment at least a portion of flowcharts and may be implemented by computer readable instructions executable by one or more computing devices. In another embodiment logic of flowcharts and or are implemented by a security module at a node.

In one embodiment basic security mode is used for control of publishing keys. This way nodes in a mesh are assured that an unauthorized node is not seeding DRTs with false keys. Such false keys may be used to point peers to addresses having malicious purposes. It will be appreciated that basic mode does not prevent a peer node from searching a node s local DRT i.e. performing a DRT lookup . In basic mode any node can still search another node s local DRT.

Flowchart shows operations of publishing a key in accordance with an embodiment of the invention. The node publishing a key searches the mesh for neighbor nodes that need to be made aware of the new key operation . In doing so the publishing node requests a security ID from the neighboring nodes that are found. In turn the neighbors send their security IDs to the publishing node for authentication operation . All authenticated neighbors will receive a flood message as described below. In one embodiment a potential neighbor includes nodes having keys close to the publishing node s key as well as random nodes in the mesh. By publishing its key to various nodes in the mesh the publishing node seeds other nodes local DRTs with its key.

The publishing node alerts these neighbor nodes i.e. future neighbors in the keyspace of the presence of the new key by sending a DRT flood message to the neighbors operation . A flood message signals the presence of a key to the publishing node s neighbors.

In turn the neighbors request authentication from the publishing node and the publishing node supplies its security ID to the requesting neighbors operation . In one embodiment a neighbor sends an inquire message to the publishing node to request the security ID and the publishing node responds with an authority message having the security ID to the neighbor. In an alternative embodiment the security ID is provided to the neighbor by including the security ID of the publishing node in the DRT flood message sent in operation .

Flowchart shows the operations of a node receiving a DRT flood message in accordance with an embodiment of the invention. Starting in operation the node receives the DRT flood message. Next in operation the node authenticates the security ID of the publishing node associated with the received flood message. In one embodiment the receiving node requests and receives the publishing node s security ID in an inquire authority message exchange. In another embodiment the publishing node s security ID is included in the DRT flood message.

The receiving node validates the security ID by comparing the issuer of the attached security ID to the issuer of the receiving node s own security ID and ensuring the issuers match e.g. security ID service . For example the attached certificate is compared by the receiving node against a configured root certificate chain for its own certificate. The sending node is authenticated if its certificate chain has the same root chain.

If the security ID is authenticated then the DRT flood message is processed as shown in operation . For example the key and corresponding IP address in the DRT flood message are added to the node s local DRT.

If the security ID is not authenticated then the logic proceeds to operation to fail the received DRT flood message. In one embodiment the node ignores the message e.g. lets the message time out . In another embodiment the node responds that it did not understand the message.

Turning to flowcharts and show operations of a membership security mode in accordance with an embodiment of the invention. In one embodiment at least a portion of flowcharts and may be implemented by computer readable instructions executable by one or more computing devices. In another embodiment logic of flowcharts and or are implemented by a security module at a node.

In one embodiment membership mode requires nodes to prove their membership in the mesh before being allowed to publish keys and to lookup keys. In membership mode a node has to prove the right to search another node s local DRT. Membership mode ensures that nodes that attempt to connect to other nodes i.e. find their network address are valid participants in the mesh. Membership mode includes the publish key security measures as described above in connection with .

Flowchart shows operations of sending a DRT lookup message in accordance with an embodiment of the invention. Starting in operation a node constructs a DRT lookup message. A DRT lookup message asks a node to search for a particular key in its local DRT. Next in operation the node sends the DRT lookup message to a node. In turn the node receiving the DRT lookup message requests authentication from the sending node and the sending node provides its security ID to the receiving node operation . In an alternative embodiment the security ID is provided by including the security ID in the DRT lookup message in operation .

Flowchart shows operations of receiving a DRT lookup message in accordance with an embodiment of the invention. Starting in operation a node receives a DRT lookup message. Next in operation the logic authenticates a security ID of the node sending the DRT lookup message. In one embodiment the receiving node requests the sending node s security ID in an inquire message and receives the sending node s security ID in an authority message from the sending node. In another embodiment the sending node s security ID is included in the DRT lookup message itself.

In another embodiment authentication includes checking anti tampering mechanisms included in a DRT message associated with a key lookup. In this embodiment in each of the lookup inquire authority messages anti tampering mechanisms are employed where the sending node secures parts of the message with digital signatures that are validated by the receiving node.

If the security ID is authenticated then the logic proceeds to operation to process the DRT lookup message. In one embodiment to process the DRT lookup message the node looks for the desired key in its local DRT and returns the corresponding network address if the key is found. If the node does not find the desired key then the node returns the network address for the closest key in the node s local DRT.

If the security ID fails authentication then the logic proceeds to operation to fail the DRT lookup message. For example the failed message may be ignored or responded to with an error message.

Turning to flowcharts and show operations of a confidentiality security mode in accordance with an embodiment of the invention. In one embodiment at least a portion of flowcharts and may be implemented by computer readable instructions executable by one or more computing devices. In another embodiment logic of flowcharts and or are implemented by a security module at a node.

Confidentiality security mode includes the publish key and key lookup security measures as described above in connection with . In addition confidentiality mode encrypts at least a portion of DRT messages between nodes in a mesh.

Flowchart shows operations of sending a DRT message when in confidentiality security mode in accordance with an embodiment of the invention. Starting in operation the sending node establishes encryption with the peer node. The encryption may include an asymmetric key scheme e.g. public private key a symmetric key scheme a hybrid scheme e.g. use asymmetric keys to distribute symmetric keys and then use the symmetric keys for follow on communications and the like. For example in a private public key pair encryption scheme the sending node asks the receiving node to compute a public private key pair and sends the public key to the sending node.

In another example in hybrid mode the sending node generates a symmetric key that is used for encrypting parts of the message and encrypts the symmetric key with the target node s public key. The encrypted symmetric key is included in the message. The target node i.e. the receiving node obtains the symmetric key by decrypting it with its private key. In this scheme privacy is achieved without prior key exchange of the symmetric keys. The target node s public key is obtained in a prior exchange. It is cached in the source node for use when sending messages to the target node.

Next in operation the node constructs the DRT message. Continuing to operation the sending node encrypts at least a portion of the DRT message. For example the sending node may encrypt a portion using the key as derived in operation . Next in operation the DRT message is sent to a receiving node.

In one embodiment the encryption established between two nodes in a mesh is unique for that node pair. For example in a key pair e.g. symmetric or asymmetric used by nodes and is different than a key pair used by nodes and .

Flowchart shows operations of receiving a DRT message when in confidentiality security mode in accordance with an embodiment of the invention. Starting with operation encryption with a peer node is established such as setting up a symmetric or an asymmetric key pair. For example the node to receive the DRT message may derive a public private key pair. The receiving node then sends the public key to the sending node and keeps the private key.

Next in operation the receiving node receives a DRT message having at a portion that is encrypted. Continuing to operation the receiving node decrypts the encrypted portion. For example the receiving node uses its private key for decryption. Next in operation the receiving node processes the DRT message as appropriate. In one embodiment a security module establishes a hybrid encryption scheme that sends a symmetric key along with the DRT message as described above.

Embodiments of the confidentiality secure mode obscure parts of a DRT message from prying eyes. This way intermediate entities such as routers between two nodes are prevented from seeing sensitive aspects of a DRT message. Example portions that may be encrypted include a part of a message for resolving the IP address associated with a key an application payload a collection of IP addresses that a node has in its local DRT etc. In one instance only a portion of a DRT message is encrypted so that an intermediate entity such as an Internet Service Provider ISP may determine that a message is related to P2P activity but still not view sensitive parts of the DRT message.

Embodiments of the invention are directed to security modes for a distributed routing table. An application author may assign a security mode as appropriate for the sensitivity of information to be handled by a mesh. The ability to add security as necessary makes a DRT a suitable platform for a wide range of public and commercial P2P systems. DRT security modes may support large open systems like PNRP as well as controlled private corporate P2P networks.

Although not required embodiments of the invention are described in the general context of computer readable instructions being executed by one or more computing devices. Computer readable instructions may be distributed via computer readable media discussed below . Computer readable instructions may be implemented as program modules such as functions objects Application Programming Interfaces APIs data structures and the like that perform particular tasks or implement particular abstract data types. Typically the functionality of the computer readable instructions may be combined or distributed as desired in various environments.

In other embodiments device may include additional features and or functionality. For example device may also include additional storage e.g. removable and or non removable including but not limited to magnetic storage optical storage and the like. Such additional storage is illustrated in by storage . In one embodiment computer readable instructions to implement embodiments of the invention such as security module node and application may be in storage . Storage may also store other computer readable instructions to implement an operating system an application program and the like.

The term computer readable media as used herein includes computer storage media. Computer storage media includes volatile and nonvolatile removable and non removable media implemented in any method or technology for storage of information such as computer readable instructions or other data. Memory and storage are examples of computer storage media. Computer storage media includes but is not limited to RAM ROM EEPROM flash memory or other memory technology CD ROM Digital Versatile Disks DVDs or other optical storage magnetic cassettes magnetic tape magnetic disk storage or other magnetic storage devices or any other medium which can be used to store the desired information and which can be accessed by device . Any such computer storage media may be part of device .

Device may also include communication connection s that allow device to communicate with other devices. Communication connection s may include but is not limited to a modem a Network Interface Card NIC an integrated network interface a radio frequency transmitter receiver an infrared port a USB connection or other interfaces for connecting computing device to other computing devices. Communication connection s may include a wired connection or a wireless connection. Communication connection s may transmit and or receive communication media.

The term computer readable media may include communication media. Communication media typically embodies computer readable instructions or other data in a modulated data signal such as a carrier wave or other transport mechanism and includes any information delivery media. The term modulated data signal means a signal that has one or more of its characteristics set or changed in such a manner as to encode information in the signal. By way of example and not limitation communication media includes wired media such as a wired network or direct wired connection and wireless media such as acoustic radio frequency infrared Near Field Communication NFC and other wireless media.

Device may include input device s such as keyboard mouse pen voice input device touch input device infrared cameras video input devices and or any other input device. Output device s such as one or more displays speakers printers and or any other output device may also be included in device . Input device s and output device s may be connected to device via a wired connection wireless connection or any combination thereof. In one embodiment an input device or an output device from another computing device may be used as input device s or output device s for computing device .

Components of computing device may be connected by various interconnects such as a bus. Such interconnects may include a Peripheral Component Interconnect PCI such as PCI Express a Universal Serial Bus USB firewire IEEE 1394 an optical bus structure and the like. In another embodiment components of computing device may be interconnected by a network. For example memory may be comprised of multiple physical memory units located in different physical locations interconnected by a network.

In the description and claims the term coupled and its derivatives may be used. Coupled may mean that two or more elements are in contact physically electrically magnetically optically etc. . Coupled may also mean two or more elements are not in contact with each other but still cooperate or interact with each other for example communicatively coupled .

Those skilled in the art will realize that storage devices utilized to store computer readable instructions may be distributed across a network. For example a computing device accessible via network may store computer readable instructions to implement one or more embodiments of the invention. Computing device may access computing device and download a part or all of the computer readable instructions for execution. Alternatively computing device may download pieces of the computer readable instructions as needed or some instructions may be executed at computing device and some at computing device . Those skilled in the art will also realize that all or a portion of the computer readable instructions may be carried out by a dedicated circuit such as a Digital Signal Processor DSP programmable logic array and the like.

Various operations of embodiments of the present invention are described herein. In one embodiment one or more of the operations described may constitute computer readable instructions stored on one or more computer readable media which if executed by a computing device will cause the computing device to perform the operations described. The order in which some or all of the operations are described should not be construed as to imply that these operations are necessarily order dependent. Alternative ordering will be appreciated by one skilled in the art having the benefit of this description. Further it will be understood that not all operations are necessarily present in each embodiment of the invention.

The above description of embodiments of the invention including what is described in the Abstract is not intended to be exhaustive or to limit the embodiments to the precise forms disclosed. While specific embodiments and examples of the invention are described herein for illustrative purposes various equivalent modifications are possible as those skilled in the relevant art will recognize in light of the above detailed description. The terms used in the following claims should not be construed to limit the invention to the specific embodiments disclosed in the specification. Rather the following claims are to be construed in accordance with established doctrines of claim interpretation.

