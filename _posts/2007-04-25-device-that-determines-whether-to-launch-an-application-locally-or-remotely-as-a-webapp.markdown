---

title: Device that determines whether to launch an application locally or remotely as a webapp
abstract: A utility program executing on a mobile communication device decides whether to launch an application remotely as a Webapp or whether to launch the application locally on the mobile communication device. The decision is based at least in part on an estimate of how much of a resource the application would consume were the application to be launched and executed on the mobile communication device. Examples of resources include battery capacity, memory capacity, and processing power capacity. If the total amount of a resource consumed by currently executing applications and the application to be launched would exceed a threshold amount, then the utility uses a browser on the mobile communication device to launch the application remotely as a Webapp, otherwise the utility program causes the application to be launched locally. The utility program has a graphical user interface (GUI) whereby utility program operation can be configured and customized.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08355709&OS=08355709&RS=08355709
owner: QUALCOMM Incorporated
number: 08355709
owner_city: San Diego
owner_country: US
publication_date: 20070425
---
The present Application for Patent claims priority to Provisional Application No. 60 862 535 entitled. COMPUTE POWER AS SERVICE FROM SERVICE PROVIDER filed on Oct. 23 2006 and assigned to the assignee hereof and hereby expressly incorporated by reference herein.

Cellular telephones execute ever more complex application programs. Examples of complex application programs include video messaging programs mobile television viewing programs and three dimensional multi user video game programs. A contemporary user of a cellular telephone often does not just use the cellular telephone to engage in wireless telephone conversations. Rather the user uses the cellular telephone as an input output device to interact with and access services and data provided by and on other remote computers. In one example the cellular telephone of each of a plurality of users executes a copy of a video game application program. The cellular telephones communicate with each other either directly or through a central computer such that the users can all play the same multi user video game in a common virtual environment.

Executing such a complex application program on a cellular telephone may however consume a large proportion of the resources of the cellular telephone. Examples of cellular telephone resources include battery capacity memory capacity and processing power. Executing the complex application program may take up a lot of the available battery capacity. Playing the video game may in fact use so much battery energy that there is inadequate battery energy left over for the cellular telephone to communicate as a cellular telephone. Alternatively playing the video game may consume battery energy quickly without the user recognizing that the resulting discharged battery is so discharged that it cannot power the cellular telephone for a cellular telephone call of ordinary duration.

Not only can a complex application use a large amount of the available battery energy but the complex application program may also use a large proportion of the available random access memory RAM of the cellular telephone. If the cellular telephone is being used to the play the multi user video game then so much of the available memory may be used by the video game application that the cellular telephone may not be able to invoke another application program at the same time. Executing the complex application program may also require and use a large proportion of the available processing power of the central processing unit CPU of the cellular telephone. If the cellular telephone is being used to the play the multi user video game then so much of the processing power of the cellular telephone may be used that it may not be possible to execute another application program with a desired processing speed or responsiveness.

Some of these problems can be addressed by executing the complex application program on a remote computer and using the cellular telephone as an input output device to interact with an application. Browser software executing on the cellular telephone that is used to interact with the remote computer uses a smaller amount of resources than the complex application program would were the complex application program executed on the cellular telephone. The usage of resources in the cellular telephone is therefore reduced. The application program that executes on the remote computer is sometimes called a web browser application a web application or a Webapp because the browser executing on the cellular telephone is used to communicate across the World Wide Web with the application running on the remote computer. Internet access to such applications executing on a cluster of computers sometimes referred to as a server farm may be provided for a fee for use by cellular telephone users as Webapps. In one example the multi user video game application program is executing on a computer in such a server farm. Rather than consuming large amounts of cellular telephone resources executing the complex application program on the cellular telephone the user only executes the browser on the cellular telephone and interacts with the complex application program that is executing on the computer in the server farm.

It is not however always desirable to execute such a complex application program on a remote computer. There may be cost issues or communication latency or reliability issues or other issues that favor execution of the complex application on the cellular telephone in a particular circumstance. Where the resources of the cellular telephone are stretched thin due to usage of such application programs there may be only a small amount of spare resources available on the cellular telephone. If for example a higher priority application is then to be used it may not be possible to invoke the higher priority application program if the total amount of resource usage would exceed the total available amount of resources on the cellular telephone. The situation could also involve a resource being used so heavily that when an incoming cellular telephone call is to be received the cellular telephone does not have adequate resources to receive the call. Managing the resources and deciding which application programs to offload as Webapps and which application programs not to offload or not invoke in a given circumstance can be cumbersome and difficult.

A utility program executing on a mobile communication device for example a cellular telephone decides whether to launch a first instance of an application program locally on the mobile communication device or to launch a second instance of the application program remotely as a web application hereinafter Webapp . The decision is based at least in part on an estimate of how much of a resource the first instance would consume were it to be launched and executed on the mobile communication device. Examples of resources include battery capacity or battery energy usage memory capacity or memory usage and processing power capacity or usage. In one example if the total amount of a particular resource consumed by executing currently executing applications and the first instance of the application program would exceed a threshold amount then the utility program uses a browser program on the mobile communication device to launch the second instance of the application program remotely as a Webapp otherwise the utility program causes the first instance of the application program to be launched locally. The utility program interacts with the operating system of the mobile communication device to cause the decided upon type of launching. Examples of the application program include a multi user electronic game a video game a video editing program a video messaging program and a computationally intensive financial analysis program.

In some embodiments the first and second instances are identical programs. In one embodiment the first instance is a simplified version of the application that is customized and adapted for execution on a device having limited resources. The second instance on the other hand is appropriate for execution on the remote computer that does not have the resource constraints of a mobile communication device.

The utility program has a graphical user interface GUI whereby a user of the mobile communication device can configure and customize utility program operation. The GUI is for example usable to change the conditions under which the decision is made to launch an application remotely as a Webapp. The user can use the GUI to disable offloading of a particular application.

In a specific example the GUI causes a resource usage table to be displayed on the display of the mobile communication device in response to an appropriate prompt by the user. The table lists all the application programs that are executing on the mobile communication device. In addition the table lists the application program that is to be launched. For each application program listed the table includes a usage value for each type of resource. In the case of the application program to be launched the usage values are estimated usage values. The estimated usage values are usages that would occur were a first instance of the application program to be executed locally on the mobile communication device. Based at least in part on the resource usage values of the currently executing application programs and the estimated resource usage values of the application program to be launched the utility program determines whether the application program to be launched should be executed on the mobile communication device or should not be executed on the mobile communication device. If the determination is that the application program should not be executed on the mobile communication device then the utility program uses the browser program on the mobile communication device to launch a second instance of the application program remotely as a Webapp. In this scenario the second instance of the application program is not split such that some of the application program is executing on the mobile communication device and such that another part of the application program is executing remotely. No part of the second instance of the application program is executing on the mobile communication device. If however the determination is that the application program should be executed on the mobile communication device then the utility causes the first instance of the application program to be launched locally on the mobile communication device. The first instance of the application program is not split between the mobile communication device and the remote computer. No part of the first instance of the application program is executing on the remote computer.

In some embodiments the utility program can terminate execution of the second instance of the application program on the remote computer under some resource usage conditions. The first instance of the application program is launched on the mobile communication device in the state that the second instance was in when it was terminated. Execution of the application program therefore migrates back from the remote computer under the control the utility program.

The foregoing is a summary and thus contains by necessity simplifications generalizations and omissions of detail consequently those skilled in the art will appreciate that the summary is illustrative only and does not purport to be limiting. Other aspects inventive features and advantages of the devices and or processes described herein as defined solely by the claims will become apparent in the non limiting detailed description set forth herein.

Resource usage table includes in the left most column a list of various programs that are executing on the cellular telephone. The SYSTEM entry refers to the operating system and the novel utility application program. Although the utility program is an application layer program it is tightly coupled to the operating system and is therefore listed as part of the operating system. For each of the listed programs resource usage table includes a numerical value that is indicative of an amount of a resource that is being used or is otherwise allocated to or reserved by the program. In the example of there are three different resources listed battery power usage listed on the display as BATT memory usage listed as MEM and processing power usage listed as CPU . The email program designated EMAIL for example is indicated to be using three units of the power usage resource BATT two units of the memory usage resource MEM and one unit of the processing power resource CPU . The bottom row of the resource usage table sets forth a threshold value for each of the three resources. The units of the usage values and threshold values in resource usage table are normalized with respect to each other. In one example the threshold values are fixed values that cannot be changed by the user. In another example the GUI allows a user of mobile communication device manually to change the threshold values within predetermined ranges.

The right most column of resource usage table includes an indication of whether each of the programs has been offloaded to execute as a Webapp on a remote computer. In the example of the video game application GAME is executing on a remote computer and the browser of cellular telephone and the cellular telephone hardware itself are being used to interact with the remotely executing game program on the remote computer. The fact that the application program GAME has been offloaded is designated by the check mark in the right most column. The GUI allows the user manually to disable offloading of a selected one of the listed programs. In the example of the user has disabled offloading of the email program designated EMAIL . The offload disabled state is indicated in resource usable table by the cross is the right most column.

In ordinary operation of mobile communication device the utility program does not cause resource usage table to be displayed. Rather resource usage table is displayed in response to appropriate user prompts to the utility program. In this way the user can enter a prompt using the GUI thereby causing table to appear can then interact with the utility using the GUI and the table and can then enter an appropriate prompt that causes table to be displayed no longer. The utility program however continues to execute in the background even though table is not being displayed.

The user then takes an action to invoke the multi user video game application program designed GAME . The user may for example select an icon of the video game GAME that appears on display . The operating system detects this condition and issues a request to the utility program to invoke the GAME application. The utility program receives the request to invoke step .

Next step the utility program estimates the amount of each resource that would be consumed by the application layer program if the application layer program were to be executed. In one example the processing power that would be consumed by the new application program is determined by historical empirical data. If for example every time the GAME program was executed previously six usage units of CPU processing power were consumed on average then this average usage value of six is stored and used as the estimated CPU usage value. The amount of processing power actually being used by the other programs that are already executing can be determined in any one of many suitable ways. For example the utility program or the operating system may periodically interrupt the CPU to check CPU activity. In a crude example a low priority task is periodically issued to the CPU and data is collected as to whether the operating system allowed the task to be executed. The operating system may output CPU usage data that is usable by the utility program. This data may be collected and output in the way that the task manager of a conventional Windows operating system collects and outputs CPU usage data.

The estimated amount of power consumption resource BATT may similarly be determined by historical empirical data. The power management integrated circuit PMIC within the cellular telephone may monitor battery voltage at discrete times. Changes in the voltage measured indicate the amount of energy consumption. By analyzing battery voltage when selected individual application programs are being executed or when selected subgroups of individual application programs are being executed information on the battery energy consumption of each individual application program is collected.

The estimated amount of memory usage resource MEM may similarly be determined by historical empirical data. The amount of memory allocated to each application layer program is generally known to the operating system. These usage values are supplied to the utility program. If every time the GAME application program was executed it consumed six usage units then the estimate is that this next time the GAME program is executed it will likely consume six usage units as well. The actual memory usages of the various application programs executing are output by the operating system and are used by the utility program as set forth above. Accordingly at this point in the method of all the usage values set forth in resource usage table of are known to the utility program.

Next step for each resource the estimated usage of the application program to be invoked is summed with the resource usage values of the other programs that are executing. In the present example the sum for the BATT resource is sixteen units. The sum for the MEM resource is also sixteen units. The sum for the processing power resource CPU is twelve units.

Next step a decision is made as to whether the application program to be launched should be launched and executed on the mobile communication device or should be launched and executed on a remote computer. This decision is based at least in part on 1 the estimated resource usage values for the application to be launched and 2 the amount of resources consumed by the other programs currently executing on the mobile communication device . In the example of the utility program of if the sum of any of the three resources as determined in step exceeds a corresponding predetermined threshold value for that resource then it is determined that the application program to be launched should not be executed on the mobile communication device but rather an instance of the application program should be executed on a remote computer as a Webapp.

If the sum as determined in step for each of the three resources were below its corresponding threshold value then processing would proceed to step . The utility program would communicate with the operating system and would cause the application program the GAME program in this case to be launched on the mobile communication device. Thereafter step the application program would execute in normal fashion on mobile communication device .

In the present example however the sum for the BAT resource is sixteen and the corresponding threshold value for the BATT resource is fifteen. Also the sum for the MEM resource is sixteen and the corresponding threshold values for the MEM resource is fifteen. The decision of step is therefore not to launch the GAME application program on the mobile communication device but rather to invoke a client interface step . The client interface is interface software that is integrated into the web browser program of the mobile communication device. When the client interface is integrated into the browser in this fashion the browser is usable to communicate with a corresponding host interface on a remote computer. The client interface captures user inputs such as keypad key press information and communicates them across the internet to the host interface. The host interface in turn supplies the user input to the application program executing on the remote computer so that to the application program executing on the remote computer it appears that the user input were generated locally in normal fashion. Data output from the application program such as display data passes in the opposite direction through the host interface across the internet and to the browser and client interface. The browser displays the display data on display of mobile communication device in a similar way to the way that the display data would ordinarily have been displayed on a display local to the remote computer. This client interface and the associated host interface software is conventional Webapp software. An example of this interface software is available from Citrix Systems Inc. of Fort Lauderdale Fla.

Once the client interface has been invoked step then the utility program acts through the client interface and host interface and causes the GAME application program to be launched step on the remote computer. Thereafter the GAME application program executes on the remote computer step . At no time did the GAME application program ever execute on the mobile communication device . The GAME application program was not split such that some of the application executed on the mobile communication device and another part of the GAME application program was executed on the remote server. A instance of the GAME application program is executed on the remote computer as a Webapp with the browser on the mobile communication device and the mobile communication device hardware being used to interact with the Webapp. In this instance the instances of the application program that execute on the mobile communication device and on the remote computer differ in that the instance that is on the mobile communication device executes on a different processor and has reduced functionality so that it can execute with adequate speed on the mobile communication device that has limited resources as compared to the remote computer.

Software executing on the remote computer includes an operating system the second instance of the application program to be launched and host interface functionality . Remote computer is a computer that is a part of a server farm of computer resources. The second instance of the application program is usable as a Webapp by a user of mobile communication device . Dashed arrow represents information flow from mobile communication device to the remote computer . This information flow involves user entry data and input information such as key press information on which keys of keypad the user pressed. This information passes from mobile communication device across a wireless link for example a CDMA wireless link and through other networks and the internet to the server farm and remote computer . Dashed arrow represents information flow from remote computer to mobile communication device . This information flow involves display data that is output by the second instance of the application program that is executing on remote computer . Rather than this display data being displayed on a monitor or screen or other display of remote computer the display data is communicated across the internet and the wireless link to mobile communication device . The browser on mobile communication device renders the information such that it is displayed on display of mobile communication device .

Remote computer is one of several computers in server farm . The block labeled A within remote computer designates the second instance of the application program to be launched. This second instance of the application program is the program that can be executed remotely on remote computer as a Webapp.

Communication between mobile communication device and remote computer passes through a wireless link a cellular telephone network in this case a CDMA network and a wide area network WAN . WAN CDMA network and the wireless link can all be considered to be a part of the internet . Arrow represents user entry information passing from mobile communication device to the Webapp executing on remote computer . Arrow represents display data that is output by the Webapp executing on remote computer and that passes from remote computer to mobile communication device .

In one embodiment an application execution request includes the telephone number of a requesting mobile communication device. The operator of the server farm maintains information on the telephone numbers of mobile communication device users and also maintains associated billing information on the users. When an application execution request is received at the server farm the telephone number in the incoming request is used to identify associated billing information and to bill the user of the mobile communication device for use of the provided Webapp application program. Alternatively identification information other than a telephone number is embedded in the application execution request and this other identification information is used to facilitate the operator s billing of the user for use of the Webapp application program.

In some embodiments there is a second application program executing on the remote computer. This second application program causes the host interface to include advertising information into the communication back to the client interface along with the Webapp display data. The client interface and browser executing on the mobile communication device receives the communication and causes the advertisement to be rendered on the display of the mobile communication device along with the Webapp display data. In another example the second application program causes advertising information to be loaded and stored into the mobile communication device when there is communication between the remote computer and the mobile communication device. When the first instance of the application program is invoked locally on the mobile communication device then the stored advertising information is automatically displayed along with the display data of the application program. This display occurs even if at the time of invocation there is no communication between the mobile communication device and the remote computer at the server farm.

Although certain specific embodiments are described above for instructional purposes the teachings of this patent document have general applicability and are not limited to the specific embodiments described above. Examples of a mobile communication device include a cellular telephone a personal digital assistant PDA a laptop computer a tablet personal computer a smart phone or any mobile device that executes a web browser. Accordingly various modifications adaptations and combinations of the various features of the described specific embodiments can be practiced without departing from the scope of the claims that are set forth below.

