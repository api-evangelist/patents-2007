---

title: Method and apparatus for restoring backup data to a computer
abstract: Method and apparatus for restoring backup data to a computer is described. In one example, selected resources of within the backup data to be restored are specified. An installation package is generated that provides a hierarchical archive of the selected resources and is configured for execution by an operating system of the computer. The installation package is provided to the computer for execution thereon to effect a restoration of the selected resources onto the computer.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07797285&OS=07797285&RS=07797285
owner: Symantec Corporation
number: 07797285
owner_city: Mountain View
owner_country: US
publication_date: 20070928
---
The present invention relates generally to computer backup systems and software. More particularly the present invention relates to a method and apparatus for restoring backup data to a computer.

Computer systems and their components are subject to various failures that may result in the loss of data. For example a storage device used in or by the computer system may experience a failure e.g. mechanical electrical magnetic etc. that may make any data stored on the device unreadable. To mitigate the risk of losing data a computer system may include backup software for making backup copies of data stored on various storage devices. Some types of backup involve backing up data from a source system to a remote storage server over a network. The data may be backed up initially to disk based storage and then migrated to an archival storage such as tape based storage.

The traditional process by which a data backup is restored to the source system requires substantial interaction between storage devices possibly remote over a network backup software components and the target system. This interaction yields the following problems file transfer between a remote storage server and the target system becomes a likely point of failure due to increase failure opportunity in network environments. The complexity of the restore process increases if backup software components are required to be installed on the target system prior to initiating restoration. A restore process can place a significant burden on a remote storage server s resources and complicates or prohibits multiple simultaneous restores to different target systems. Accordingly there exists a need in the art for an improved method and apparatus for restoring backup data to a computer.

Method and apparatus for restoring backup data to a computer is described. In one embodiment selected resources of within the backup data to be restored are specified. An installation package is generated that provides a hierarchical archive of the selected resources and is configured for execution by an operating system of the computer. The installation package is provided to the computer for execution thereon to effect a restoration of the selected resources onto the computer.

Another aspect of the invention relates to backing up data from a computer. Resources on the computer to be backed up are selected. A backup job specifying an installation package medium and the selected resources is generated. The backup job is executed to form an installation package having the selected resources using an install application programming interface API of an operating system.

The computer illustratively includes a processor a memory various support circuits an I O interface . The processor may include one or more microprocessors known in the art. The support circuits for the processor include conventional cache power supplies clock circuits data registers I O interfaces and the like. The I O interface may be directly coupled to the memory or coupled through the processor . The I O interface may also be configured for communication with input devices and or output devices such as network devices various storage devices mouse keyboard display and the like not shown . The I O interface is also coupled to the network . The I O interface may also be coupled to a storage system . The storage system may include various storage devices e.g. disc drives tape drives etc. . The memory may include one or more of the following random access memory read only memory magneto resistive read write memory optical read write memory cache memory magnetic read write memory and the like as well as signal bearing media as described below. The computer may be configured with an operating system OS which may include OS 2 Java Virtual Machine Linux Solaris Unix HPUX AIX Windows Windows Server among other known platforms. At least a portion of the OS may be disposed in the memory .

The server illustratively includes a processor a memory various support circuits an I O interface . The processor may include one or more microprocessors known in the art. The support circuits for the processor include conventional cache power supplies clock circuits data registers I O interfaces and the like. The I O interface may be directly coupled to the memory or coupled through the processor . The I O interface is also coupled to the network . The I O interface may be further coupled to a storage system . The storage system may include a plurality of storage devices e.g. disc drives tape drives etc. . The memory may include one or more of the following random access memory read only memory magneto resistive read write memory optical read write memory cache memory magnetic read write memory and the like as well as signal bearing media as described below. The server may be configured with an operating system which may include Linux Solaris Unix HPUX AIX Windows Server among other known platforms. At least a portion of the OS may be disposed in the memory .

One aspect of the invention relate to backing up resources on the computer . The resources may include user data e.g. user files such as pictures documents etc. application data e.g. application files system data e.g. OS files system state information e.g. user settings application settings OS settings etc. and the like. In an embodiment resources are backed up to an installation package. An installation package is an hierarchical archive of resources and is configured for execution by an operating system of a computer. An installation package may be generated using an installer application programming interface API of an operating system. An installation API of an operating system provides an engine for installation maintenance and removal of software managed by the operating system. The installation information including the files to be installed are packaged into an installation package. Exemplary installation packages are MSI files produced by the MICROSOFT WINDOWS Installer provided with the MICROSOFT WINDOWS operating systems. Other operating systems utilize similar installation packages as is known in the art such as RPM files under the LINUX operating system.

The computer may be configured with a user interface to the backup service . The user interface may be a separate component may be part of another application such as an Internet browser or a web service or may be part of the OS . The user interface allows a user of the computer to initiate and or schedule backups of target resources on the computer .

The method begins at step where a user selects resources on the computer to be backed up. The user may further specify a backup to installation package option to the backup service . In response at step the backup service generates a backup job specifying the installation package medium and the selected resources in the backup data . At step the backup service executes the backup job to form an installation package having the selected resources using an installer API in the OS . The installation package is in essence a archive of the backed up resources at a particular point in time. The installation package may be subsequently used to restore resources back to the computer or to another computer.

Another aspect of the invention relates to restoring backup data to the computer . The backup data may include a copy or copies as of some point or points in time of various types of resources of the computer referred to as target resources including user data e.g. user files such as pictures documents etc. application data e.g. application files system data e.g. OS files system state information e.g. user settings application settings OS settings etc. and the like. In some cases the backup data includes one or more full copies of the target resources along with one or more sets of incremental or differential changes to the target resources. In some embodiments the computer backs up target resources to the server over the network remote backup . In some embodiments the computer backs up target resources to the storage system local backup . Various embodiments of restoring backup data to the computer are described below.

In particular at step the user specifies selected resources on the computer within the backup data to be restored. Resources may be selected individually e.g. particular files or settings or automatically by specifying a point in time from which to restore all or a portion of backed up resources. The user may further specify a restore to installation package option to the backup service . In response the backup service selects a restoration medium of installation package.

At step the backup service generates a restore job specifying the installation package medium and the selected resources in the backup data . At step the backup service executes the restore job to form an installation package having the selected resources using an installer API in the OS . At step the backup service sends the installation package to the computer over the network . At step the user may execute the installation package to restore the selected resources. Execution of the installation package is handled by an installer in the OS . The installer may optionally prompt the user to decide whether any files of the selected resources that are being overwritten should be backed up to an alternate location.

In this manner selected resources that have been backed up may be restored to the computer without the computer having backup software installed thereon. That is the computer does not need a local backup service for restoring backup data. Rather aspects of the invention leverage the installation API already present in the OS to restore the backup data. In some embodiments the computer may be configured with a local backup service . In such embodiments the restoration process may proceed substantially as described above. However the installation package received by the computer may be automatically handled by the backup service . The backup service may interact with the user or may automatically execute the installation package to restore the backup data. In any embodiments should the restore process be interrupted i.e. execution of the installation package is interrupted the OS may automatically perform a rollback operation. Such a rollback is supported by the API .

In particular at step the user specifies selected resources on the computer within the backup data to be restored. Resources may be selected individually e.g. particular files or settings or automatically by specifying a point in time from which to restore all or a portion of backed up resources. The user may further specify a restore to installation package option to the backup service . In response the backup service selects a restoration medium of installation package.

At step the backup service generates a restore job specifying the installation package medium and the selected resources in the backup data . At step the backup service executes the restore job to form an installation package having the selected resources using an installer API in the OS . At step the user may execute the installation package to restore the selected resources. Execution of the installation package is handled by an installer in the OS as described above.

At step the user specifies selected resources on the computer within the backup data to be restored. Resources may be selected individually e.g. particular files or settings or automatically by specifying a point in time from which to restore all or a portion of backed up resources. The user may further specify a restore to installation package option to the backup service . In response the backup service selects a restoration medium of installation package.

At step a determination is made whether the backup service can form an installation package. In some embodiments the backup data from which the resources are being restored from is encrypted. For example when the resources are backed up from the computer the computer encrypts the resources before sending them to a backup service. The computer maintains the cryptographic keys that can be used to recover the encrypted resources. If the resources selected for restoration are encrypted the backup service may not be able to generate an installation package using an install API. For example some install APIs require access to the resources to form metadata as part of the installation package. Accordingly if the selected resources are encrypted and the backup service does not have access to the cryptographic keys necessary to decrypt the resources then the backup service may be incapable of forming an installation package. In such case the method proceeds to step . If the backup service can form an installation package either because the resources are not encrypted or because the backup service has the cryptographic keys then the method proceeds to step .

At step the backup service generates an installation package having the selected resources. The method then proceeds to step . At step a determination is made whether the installation package if formed or the selected resources exceeds a threshold storage size. A threshold storage size may be set to avoid sending installation packages or resources of a particular threshold size to the computer over the network . If the installation package or resources exceeds the threshold size the method proceeds to step otherwise the method proceeds to step . At step the backup service sends the installation package if formed or the selected resources to the computer over the network . At step the backup service causes the installation package if formed or the selected resources to be stored on a disc drive FLASH memory DVD CD or other type of storage device for transport to the computer referred to as the transport storage device .

At step the storage device is attached to the computer e.g. via the interface . The storage device may be accessed via the user interface or the backup service if available . At step a determination is made whether the storage device includes an installation package. As described above the backup service in the server may form an installation package at step and the installation package may be stored on the storage device at step . If the storage device does not include an installation package the method proceeds to step . Otherwise the method proceeds to step .

At step the computer forms an installation package having the selected resources using an installer API in the OS . The selected resources may be obtained from the storage device. If the selected resources are encrypted the computer first decrypts the selected resources using the appropriate cryptographic keys. The method then proceeds to step . At step the user may execute the installation package to restore the selected resources. Execution of the installation package is handled by an installer in the OS as described above.

In any of the methods described above execution of the installation package may be restricted for security or configurability reasons. For example the installation package may include files of copyrighted application software. Thus the installation package may be generated such that its execution is restricted to a particular OS and or to a particular OS running on a particular computer. Mechanisms for identifying particular computers are well known in the art.

In the embodiments described above a memory may store processor executable instructions and or data that may be executed by and or used by a processor. These processor executable instructions may comprise hardware firmware software and the like or some combination thereof. Modules having processor executable instructions that are stored in a memory may include backup services user interfaces and the like. In other embodiments all or a portion of each of these modules may be implemented in hardware software or a combination of hardware and software including implementations using programmable logic devices PLDs application specific integrated circuits ASICs and the like. Thus the term module as used herein encompasses software implementations hardware implementations or a combination of software and hardware implementations.

Aspects of the methods described above may be implemented as a program product for use with a computer system. Program s of the program product defines functions of embodiments and can be contained on a variety of signal bearing media which include but are not limited to i information permanently stored on non writable storage media e.g. read only memory devices within a computer such as CD ROM or DVD ROM disks readable by a CD ROM drive or a DVD drive ii alterable information stored on writable storage media e.g. floppy disks within a diskette drive or hard disk drive or read writable CD or read writable DVD or iii information conveyed to a computer by a communications medium such as through a computer or telephone network including wireless communications. The latter embodiment specifically includes information downloaded from the Internet and other networks. Such signal bearing media when carrying computer readable instructions that direct functions of the invention represent embodiments of the invention.

While various embodiments have been described above it should be understood that they have been presented by way of example only and not limitation. Thus the breadth and scope of a preferred embodiment should not be limited by any of the above described exemplary embodiments but should be defined only in accordance with the following claims and their equivalents.

