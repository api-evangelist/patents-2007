---

title: Foregoing user credential collection if sending system is in an unauthenticated mutually exclusive connection state
abstract: A method comprises a receiving system establishing a first connection to a sending system. The method also comprises determining whether the sending system is in an unauthenticated mutually exclusive connection (UMEC) state. The method further comprises foregoing collecting user credentials to establish a connection between the receiving and sending systems if the sending system is in the UMEC state, and collecting user credentials to establish a connection between the receiving and sending systems if the sending system is not in the UMEC state.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07797435&OS=07797435&RS=07797435
owner: Hewlett-Packard Development Company, L.P.
number: 07797435
owner_city: Houston
owner_country: US
publication_date: 20070131
---
Some electronic systems permit a user of one computer to view on his or her display images graphics and text that are generated on another computer remotely located from the user s computer. In some such remote visualization systems the remote computer which generates the graphics data transmits compressed or uncompressed images to the user s computer that cause the user s computer to copy or move pixel data around on the user s display to replicate the images on the remote computer where the images originated.

In such remote visualization systems the user often is authenticated twice first by user s computer gathering a credential to be authenticated by the remote computer to log on to the remote computer and again by the remote computer to log the user on to operating system s desktop of the remote computer. Authenticating a user comprises the user entering his or her credentials e.g. a username and password . Authenticating the user multiple times is inconvenient and bothersome to the user.

In some embodiments the sending system has a display coupled thereto but in other embodiments the sending system s display is not included. The receiving system may include an input device such as a keyboard or mouse which permits a user of the receiving system to effectively interact with the graphics application as if the graphics application were being executed on the receiving system .

Referring to sending system executes a graphics application that causes images e.g. text lines fills to be shown by the graphics subsystem on the display . The graphics application comprises any one or more of a plurality of executable programs that use a graphics API. The APIs used by the graphics application are implemented by the graphics subsystem . The graphics application causes images to be shown on display by providing graphics commands to the graphics subsystem which creates and stores images in a frame buffer in the graphics subsystem . The sender reads the images from the graphics subsystem s frame buffer and in at least some embodiments compresses the images for subsequent transmission to the receiving system . Via network the sending system sends the compressed images to the receiving system . The receiving system receives the compressed images from the sending system decompresses the images and shows the decompressed images on display . The process is repetitive as the sending system continues to render new or updated images in its own graphics subsystem .

In accordance with various embodiments through the network the receiver establishes a communication connection to the sender of a particular sending system . Establishing a connection means Once the connection is established the graphics images generated by the sending system are replicated on the receiving system s display as described above.

In at least some situations the user of the receiving system is authenticated multiple times once for example to establish the connection between the receiver and the sender and again to log in to the sending system s desktop or console. For each authentication process the user enters his or credentials. Credentials comprise any type of information by which the user can be authenticated. An example of user credentials comprises a username and password that are entered by an input device such as the input device of the receiving system . Such credentials can be entered for example in a login dialog box. Other examples comprise biometrics e.g. fingerprint retinal scan a smart card etc.

In at least some embodiments a user of the receiving system is prompted to enter his or credentials to establish a connection to the sender . If the user is successfully authenticated a connection is established between the receiver and sender . If the sending system is at a state in which no user is logged in to the desktop or console of the sending system s operating system the user again authenticates himself or herself this time to the desktop or console of the sending system s operating system . If the user is successfully authenticated to the desktop or console the user is permitted to access various resources on the sending system otherwise the user is denied access to the sending system s resources. The sending system s process for authenticating the user is implemented in at least some embodiments by the sending system s operating system . In at least some situations therefore the user of the receiving system will enter his or her credentials at least twice.

It is possible however that a user has already logged in to the desktop or console of the sending system s operating system when a new user causes his or her receiver to establish a connection to the same sender . In this situation the new user has already been authenticated once to establish the connection between the receiver and sender . The sender responds to the establishment of the new connection by showing a dialog box on the display of the senior user i.e. the user that has already logged in to the operating system s desktop or console requesting the current user to allow or disallow the new user from accessing the sending system . If allowed the two users enter a collaboration mode in which the displays of both users receiving systems are presented with the same images i.e. the images generated by the sending system to which both users receivers have connected . In these situations in which a user has already logged in to the sending system s operating system by the time a subsequent junior user attempts to establish a connection to the same sending system the new user will have entered his credentials to establish the receiver sender connection but not a second time to access the sending system s operating system and or desktop console. In such situations the user s credentials are entered only once.

Thus in situations in which a user is already logged in to the desktop or console of the sending system s operating system a subsequent user is authenticated once and thus provides his or her credentials only once. However in situations in which no user is already logged in to the desktop or console of the sending system s operating system a user attempting to connect to the sender of the sending system is authenticated twice and thus provides the credentials twice once to establish the receiver sender connection and again to log in to the sending system s desktop console. To preclude the user from having to twice authenticate himself or herself in these latter situations in which multiple authentications would otherwise occur the receiver foregoes providing the credentials to establish the connection.

However it is not always possible or desirable to forego having the user to enter his or her credentials to establish the connection. For example it is possible for multiple users to attempt concurrently to log in to the desktop or console of the sending system s operating system . It is thus possible for user A to connect to a sending system s sender and enter his or her credentials e.g. username and password in the sending system s desktop login dialog box. Such a dialog box may require the user to click an OK CONTINUE or equivalent button once the credentials are entered. However before user A clicks the OK or CONTINUE button a user B could establish a connection with the same sender . At that point user B would see on his or her own display the same login dialog box in which user A has already entered his or her valid credentials. User B would have only to click the OK or CONTINUE button to log in to the sending system s desktop or console even though user B might not otherwise have had access to a valid set of credentials. A security breach would thus have occurred.

Another example of when foregoing receiving system user authentication is not desirable is as follows. User A may have already logged in to the desktop or console of the sending system s operating system . User B then may attempt to connect to the same sender to which user A is already connected. If user B s receiving system does not collect a credential for authentication by the sending system to authenticate user B and user A is already logged in to the desktop or console user B will not be authenticated at all.

To address security loopholes such as those mentioned above in accordance with various embodiments the receiver foregoes collection of a credential for authentication by the sending system for user authentication if the sending system is in an unauthenticated mutually exclusive connection UMEC state. By way of an exemplary definition a UMEC state is a state in which it is not possible for another user to have already started to log in to desktop or console of the sending system nor for another user to even be able to log in to or unlock the sending system s desktop or console.

In at least some embodiments the UMEC state is determined to exist if the following three illustrative conditions are true. The first condition is that the sending system comprises a system that does not enable user authentication via a mechanism other than by way of a receiving system . This condition is met if for example the sending system comprises a headless computer i.e. a computer such as a blade computer that does not provide physical connections for an input output device which a user would otherwise be able to interact with the sending system .

The second condition that defines an embodiment of the UMEC state in at least some embodiments is that besides the present connection no other connection has already been established between the sender and a receiver or between the sender and a receiver of another receiving system .

The third condition that defines an embodiment of the UMEC state in at least some embodiments is that the sending system s graphics subsystem is currently generating a graphic that indicates no user is currently logged into the sending system s desktop or console or that that while a user is logged in to the desktop or console the desktop or console is in a locked state. In some embodiments this graphic comprises either of a logged out notice dialog graphic or a locked notice dialog graphic. An embodiment of the logged out notice dialog graphic is illustrated in and an embodiment of the locked notice dialog graphic is illustrated in . The logged out notice dialog graphic indicates that the user is to concurrently press the and keys to permit the user to then enter a username and password via a login dialog box. The locked notice dialog graphic indicates a user previously logged into the sending system but that currently no one is logged into the desktop or console and that the sending system s desktop or console is locked. The graphic of instructs the user to concurrently press the and keys to permit the user to then enter a username and password to unlock the operating system s desktop or console.

If as determined at the sending system is not in the UMEC state then at the sender replies to the receiver with the authentication type s supported by the sending system . At the receiver collects the user credentials e.g. username and password and provides the credentials to the sending system for authentication of the attempted receiver sender connection. If the user is authenticated then the receiver sender connection is allowed . Otherwise if the user is not authenticated at the sender disallows the attempted sender receiver connection.

Upon performing action the connection between the receiver and sender has been allowed. The user may or may not have been authenticated depending on whether the sending system was in the UMEC state as explained above. Regardless of whether the user has been authenticated at the user is prompted to provide his or her credentials for purpose of logging in to the desktop or console or unlocking a locked desktop console. If the sending system has been in the UMEC state then per the user will have been prompted to provide the credentials only once to establish the connection between the receiver and sender as well as to log in to the desktop console. If however the sending system was not in the UMEC state at then the user will have entered the credentials twice once at and again at .

In accordance with various embodiments the sending system employs various software components to permit a user to login to the desktop or console of the operating system . Such software components comprise in some embodiments such as that illustrated in a login process and one or more graphical identification and authentication GINA libraries . The login process may be part of or associated with the operating system . Additionally each GINA library or simply GINA is part of or associated with the operating system . Each GINA library comprises for example a Dynamic Link Library DLL file type. Each GINA library provides one or more application programming interfaces to various graphics based software modules. Such modules render various images on a display. Examples of such images comprise the logged out notice dialog graphic of the locked notice dialog graphic of and other graphics. Such GINA libraries can be chained together in some embodiments such as the embodiment depicted in .

In the login process makes a call to the GINA libraries to cause for example a particular graphical image to be generated. The last GINA library in the chain i.e. GINA library performs the requested the graphics operation. The intervening GINA libraries e.g. GINA libraries and evaluate the request from the login process . The intervening GINAs and perform various functions for example altering the displayed appearance of the logged out locked notices providing third party authentication etc. Each GINA passes on the request to the next GINA in the chain until the last GINA library receives the request and responds as indicated by the request.

In accordance with various embodiments a state recording GINA is included in the chain of GINAs. The state recording GINA may be included as the first GINA in the chain or at another location with the chain. The state recording GINA evaluates the request to determine what image will be generated by GINA once GINA processes the request. The image to be generated may comprise for example the logged out notice dialog graphic or the locked notice dialog graphic of respectively. The state recording GINA stores an indication of the new graphics state in storage of the sending system . The sender accesses the storage to determine the graphics state of the sending system . The sender makes the determination of by for example reading the state of the sending system . The state will indicate whether the logged out notice dialog graphic or the locked notice dialog graphic is currently being generated for the sending system. The sender thus reads the state to determine in part whether the sending system is in the UMEC state.

The above discussion is meant to be illustrative of the principles and various embodiments of the present invention. Numerous variations and modifications will become apparent to those skilled in the art once the above disclosure is fully appreciated. It is intended that the following claims be interpreted to embrace all such variations and modifications.

