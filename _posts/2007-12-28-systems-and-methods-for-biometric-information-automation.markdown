---

title: Systems and methods for biometric information automation
abstract: A method identifies persons based on biometric information. The method includes providing a cache of biometric templates. The cache stores segments of the biometric templates associated with biometric features contained in the segments. The method also includes receiving a sample biometric template to be identified; dividing the sample biometric template into jobs based on the biometric features contained in the sample biometric template; comparing the jobs to the segments corresponding to the biometric features of the sample biometric template to determine candidate biometric templates associated with the segments that match the jobs; and generating a candidates list identifying the candidate biometric templates and entities related to the candidate biometric templates.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08218828&OS=08218828&RS=08218828
owner: 
number: 08218828
owner_city: Haymarket
owner_country: US
publication_date: 20071228
---
This application claims priority to U.S. Provisional Patent Application Ser. No. 60 877 609 filed on Dec. 29 2006 the disclosure of which is incorporated in its entirety by reference herein.

The development of this invention was supported in part by the Department of the Army under contract number GS 35F 0885N Task Order GST0904DF7064. The United States Government may have certain rights in this invention pursuant.

Biometric authentication and biometric identification have become important processes for identifying and verifying the identity of a person. Biometric authentication and biometric identification include automated methods of recognizing a person based on a physiological or behavioral characteristic. Among the features measured are face fingerprints hand geometry handwriting iris hand geometry gait DNA retinal vein and voice.

Biometric authentication and biometric identification are becoming the foundation of an extensive array of highly secure identification and personal verification systems. As the level of security breaches and transaction fraud increases the need for highly secure identification and personal verification technologies is becoming apparent. Biometric authentication is being utilized in a wide array of settings such as enterprise wide network security infrastructures government IDs secure electronic banking investing and other financial transactions retail sales law enforcement and health and social services.

Biometric authentication and identification involve the comparison of a sample template and one or more stored templates. A template may be a synthesis of all the characteristics extracted from the source in the optimal size to allow for adequate identifiability. Biometric authentication typically involves the use of a credential a badge a submitted name etc. and results in a 1 to 1 match. The subject s biometric template is retrieved via a lookup using the credential and a biometric matching occurs between a sample template and the retrieved template. Biometric identification typically involves receiving a sample template without a credential. In biometric identification exhaustive matching 1 to n is performed to identify the candidate from a database of templates without having a credential to narrow possible candidates.

However in typical biometrics identification the stored templates can be numerous. As such the template comparison can take a significant amount of time as each stored template is retrieved and compared. Thus there is a need in the art for a mechanism to provide streamlined and efficient biometrics identification and biometrics authentication.

An embodiment is directed to a method of identifying persons based on biometric information. The method includes providing a cache of biometric templates. The cache stores segments of the biometric templates associated with biometric features contained in the segments. The method also includes receiving a sample biometric template to be identified dividing the sample biometric template into jobs based on the biometric features contained in the sample biometric template comparing the jobs to the segments corresponding to the biometric features of the sample biometric template to determine candidate biometric templates associated with the segments that match the jobs and generating a candidates list identifying the candidate biometric templates and entities related to the candidate biometric templates.

Another embodiment is directed to an apparatus for identifying persons based on biometric information. The apparatus includes a cache configured to store biometric templates. The cache stores segments of the biometric templates associated with biometric features contained in the segments. The apparatus also includes an interface configured to receive a sample biometric template to be identified and a jobs thread coupled to the interface. The jobs thread is configured to divide the sample biometric template into jobs based on the biometric features contained in the sample biometric template. The apparatus also includes a matchers thread coupled to the jobs thread. The matchers thread is configured to compare the jobs to the segments corresponding to the biometric features of the sample biometric template to determine candidate biometric templates associated with the segments that match the jobs and configured to generate a candidates list identifying the candidate biometric templates and entities related to the candidate biometric templates.

Another embodiment is directed to a system for identifying persons based on biometric information. The system includes a server configured to receive a sample biometric template to be identified over a network and a database coupled to the server. The database is configured to store biometric templates. The system also includes a biometric engine coupled to the server and database for identifying and managing the biometric information. The biometric engine includes a cache configured to store segments of the biometric templates associated with biometric features contained in the segments an interface configured to receive the sample biometric template from the server and a jobs thread coupled to the interface. The jobs thread is configured to divide the sample biometric template into jobs based on the biometric features contained in the sample biometric template. The biometric engine also includes a matchers thread coupled to the jobs thread. The matchers thread is configured to compare the jobs to the segments corresponding to the biometric features of the sample biometric template to determine candidate biometric templates associated with the segments that match the jobs and configured to generate a candidates list identifying the candidate biometric templates and entities related to the candidate biometric templates.

Additional embodiments will be set forth in part in the description which follows and in part will be obvious from the description or may be learned by practice of the embodiments. Embodiments will be realized and attained by means of the elements and combinations particularly pointed out in the appended claims.

It is to be understood that both the foregoing general description and the following detailed description are exemplary and explanatory only and are not restrictive of the invention as claimed.

Embodiments of the present disclosure are directed to a Biometrics Automated Toolset BAT and a system implementing BAT. The BAT allows wide scale capture of biometric information storage of biometric information transmission of biometric information and high speed streamlined match processing of the biometric information. The BAT can be implemented in a client server hierarchy in an entity identification and tracking system either on a stand alone computing platform or in a multiple computer networked architecture. As such single or multiple computer systems can capture process and share biometric information.

The BAT in the client server hierarchy includes an UltraEngine. The UltraEngine receives and processes all types of biometric information. Thus the UltraEngine consolidates multiple types of biometric information processing in a pluggable framework in lieu of a separate application for each type of information such as fingerprint iris facial voice vein hand geometry gait DNA or handwriting.

The UltraEngine contains an internal caching mechanism called the UltraCache. The UltraCache caches biometric templates from the BAT database for rapid retrieval and biometric matching. Further the UltraEngine streamlines the request for biometric matching in order to reduce processing time for matching.

Reference will now be made in detail to the exemplary embodiments of the disclosure an example of which is illustrated in the accompanying drawings. Wherever possible the same reference names and numbers will be used throughout the drawings to refer to the same or like parts.

In the following description reference is made to the accompanying drawings that form a part thereof and in which is shown by way of illustration specific exemplary embodiments. These embodiments are described in sufficient detail to enable those skilled in the art to practice the embodiments and it is to be understood that other embodiments can be used and that changes can be made without departing from the scope of this disclosure. The following description is therefore merely exemplary.

The Biometrics Automated Toolset BAT allows wide scale capture of biometric information and high speed streamlined processing of the biometric information. is a diagram illustrating an entity identification and tracking system implementing BAT consistent with embodiments of the disclosure. The system includes multiple computing systems located in various geographic regions. Each computing system in system implements an instance of BAT. Each of the computing systems capture biometric information from entities and use BAT to process and share the biometric information.

As illustrated in the computing systems can be located in seven different geographic regions Region Region Region Region Region Region and Region . The geographic regions can be located at any place in the world. For example the geographic regions can be located in a single city. Furthermore the geographic regions can be spread out over the entire globe with multiple regions located in different countries or on different continents. One skilled in the art will realize that the geographic regions and computing systems illustrated in are exemplary and that system can include any number of computing systems located in any number of geographic regions.

As shown Region can include several laptop computing systems networked to a server computing system . Region can include several handheld computing systems networked to a workstation computing system . Region can include several workstation computing systems networked to a server computing system . Region can include a mainframe computing system networked to the computing systems in Regions and . Region can include a satellite uplink to transmit information to other regions via satellite .

Region can include another mainframe computing system networked to the computer systems in Region and can include a satellite uplink to transmit information to other regions such as Regions and via satellite . Region can include several workstation computing systems networked to a server computing system . Region can include a laptop computing system and a satellite uplink to communicate to other geographic regions via satellite .

The computing systems can communicate with one another via any type of communication channel and protocol. For example the computing systems in a particular geographic region can be networked in a LAN configuration. Further all the computing systems in system can be networked in a WAN configuration. The computing systems can communicate via any type of communication channel such wired satellite cellular radio frequencies including WiFi 802.11a b g n or any other current or future wired or wireless protocols.

System allows the capture processing and sharing of biometric information from entities. The biometric information allows system to identify classify and track the entities that come in contact with system . In order to identify classify and track the entities the computing systems of the geographic regions can implement BAT. For example the computing system can implement an application providing the features and functionality of BAT.

For example system can be used in a conflict setting in which biometric information can be used to distinguish friend from foe. As such geographic Regions and can be located in the theater of conflict. Military personnel can desire to identity and track entities in the theater in order to distinguish friend and foe. Accordingly the personnel in Regions and can use the computing systems with BAT to capture biometric information such as fingerprints iris prints retinal prints facial prints handwriting samples vein profiles hand geometry gait profiles DNA samples and voice samples in order to identify and track the entities. The personnel can use BAT to compare the biometric information to stored biometric information templates to identify the entities and classify them as friend for foe.

The personnel can also use BAT to share and retrieve biometric information from other geographic regions. This allows the personnel for example to identify personnel in real time at virtually any location and thereby identify and prevent foes from traveling region to region and creating mischief. Further the personnel can use BAT to transmit the biometric information and retrieve biometric information from regions outside the theater of conflict such as Regions and .

System above illustrates computing systems positioned and communicating in several configurations. One skilled in the art will realize that the configuration of the computing systems in system is exemplary and that the computing systems can be arranged in various configurations according to local capability and need in order to communicate by various procedures.

For example a single laptop computing system can be located in another geographic region. As such data can be moved using removable and recordable media such as a USB drive or a CD R instead of by direct network link. Additionally for example several laptops computing systems can be networked together with one designated as the local server. 

As mentioned above the computer systems of system utilize BAT to capture share and analyze biometric information for identifying recording and tracking entities. is a diagram of a computing system that can be used as a computing system in system to implement BAT for capturing processing and sharing of biometric information. As illustrated computing system can include a computing platform and one or more biometric collection devices . One skilled in the art will realize that computing system can include any additional hardware to allow the implementation of BAT for capturing processing and sharing biometric information.

Computing platform can be any type of computing platform capable of implementing BAT. For example computing platform can include a processor not shown memory not shown busses not shown video hardware not shown sound hardware not shown networking hardware not shown communication hardware not shown and input output ports not shown . One skilled in the art will realize that computing platform can include any type of conventional computing hardware and software.

The processor can be for example a central processing unit CPU a micro controller unit MCU digital signal processor DSP or the like. The memory can be a read only memory ROM a random access memory RAM or a memory with other access options. The memory can be physically implemented by computer readable media such as for example magnetic media such as a hard disk a floppy disk or other magnetic disk a tape a cassette tape optical media such as optical disk CD ROM DVD semiconductor media such as DRAM SRAM EPROM EEPROM or memory stick. Further portions of the memory can be removable or non removable.

Computing system can also include one or more biometric collection devices . Biometric collection device can collect biometric information such as fingerprint iris retinal voice vein facial hand geometry DNA gait and handwriting information. One skilled in the art will realize that computing system can include any number and types of biometric collection devices.

For example biometric collection device can be any fingerprint reader. The fingerprint reader can be permanently coupled to computing platform or can be separate from computing platform transported by a user and connected to computing platform . The fingerprint reader can be an optical scanner or a capacitive scanner. An optical scanner would contain a charged coupled device CCD for capturing an image of the fingerprint. A capacitive scanner would include semiconductor circuitry and conductor plates for detecting fingerprint detail.

Biometric collection device can be connected to computing platform through a PC card or other suitable peripheral connectors. Biometric collection device can be physically attached to computing platform . Additionally biometric collection device can be integrated into computing platform such that it is part of the housing of computing platform . Alternatively biometric collection device can be a separate device which can be carried by the user Biometric collection device can be powered by power supply of computing platform either AC or DC power or by its own internal power supply.

Biometric collection device s can also comprise other devices for capturing biometric information such as facial images fingerprint and palm images iris images retinal images handwriting samples vein profiles hand geometry gait profiles DNA samples and voice samples. For example biometric collection devices can include a camera. The camera can collect biometric information such as facial images iris images or retinal images. The camera can be selectively detachable from computing platform . The camera can be a video camera a still image camera or a combination of video or still camera.

The camera can be powered by power supply of computing platform either AC or DC power or by its own internal power supply. For example the camera can be integrated with an expansion card to allow the camera to be connected to computing platform directly at an expansion port. The camera can be integrated into computing platform such that it is part of the housing of computing platform . Alternatively the camera can be a separate device which can be carried by the user.

In order to facilitate the capturing processing and sharing of biometric information implantations of BAT are designed to allow the computing systems in system to operate in a client server hierarchy. In the client server hierarchy the client can capture biometric information and forward the biometric information to the server for processing. The server can then perform analysis on the biometric information such as information matching and database updating. The server can also forward the information to and receive information from other computing systems in system .

For example BAT can be implemented in a web application with the components to allow the computing systems in system to function as web clients and web servers. The client can communicate with the server via a web browser using well known protocols. The server implements BAT which hosts an interface for receiving and processing biometric information.

As mentioned above BAT allows the computing systems of system to function in a client server hierarchy. According to embodiments of the present disclosure BAT allows any computing system in system to function as a client or a server. As such the various computing systems in system can interchange roles of client and server depending on certain factors in system such as computing power computing speed usage workload or the like. To allow the dual functionality implantations of BAT can include modules that allow the computing system to function as either a client or a server.

As illustrated laptop computing systems can implement a BAT and server computing system can implement a BAT . BATs can include a client module a server module and a database module . BAT can include a client module server module and a database module . Client modules and allow user to interact with BAT to provide biometric information for processing. Server modules and can perform the functionality of BAT such as processing and matching of biometric information. Database modules and can store the biometric information for comparison and matching.

According to embodiments either laptop computing systems or server computing system can be configured to function as either a client or server since BATs and BAT include client modules server modules and database modules. In the exemplary configuration laptop computing systems are configured to function as clients. As such laptop computing systems utilize client modules to capture biometric information from entities and forward the information to server computing system .

In the exemplary configuration server computing system is configured to function as a server in the client server hierarchy. As such server computing system can utilize server module to receive the biometric information from laptop computing systems and processes the biometric information. For example server module can match the biometric information to biometric templates stored in database using components and methods described below. Server computing system can communicate with other computing systems in other regions. For example server computing system can transmit or receive biometric information for other regions.

Additionally a computing system such as laptop computing systems including a client module has the ability to connect to more than one server simultaneously such as a server in other regions and to submit biometrics and queries and to access and modify information from any or all of these servers.

As mentioned above BAT can be configured to run in either a client or server mode in a client server hierarchy. According to embodiments BAT can be implemented in an application which is executed by any computing system in system .

BAT can be implemented as an application executed by computing platform . As such application can be embodied on storage medium or memory as illustrated as instructions for causing computing platform to perform the instructions. Storage medium and memory can include computer readable signals in compressed or uncompressed form. Exemplary computer readable signals whether modulated using a carrier or not are signals that a computing system can be configured to access including signals downloaded through the Internet or other networks. Concrete examples of the foregoing include distribution of executable software programs of the computer program on a CD ROM or via Internet download. In a sense the Internet itself as an abstract entity is a computer readable medium. The same is true of computer networks in general.

Processor provides an execution platform for BAT implemented in application for performing biometric information capturing processing and sharing. Commands and data from processor can be communicated over a communication bus to and from memory . Memory can be for example a Random Access Memory RAM . Memory can store an operating system OS such as those from MICROSOFT .

As illustrated memory can also store application which can be executed during runtime by processor . As such the various modules such as client server and database can be loaded into memory depending on their particular role. As such processor can execute application stored in memory to perform the capturing processing storage and sharing of biometric information. Application can be written in program code and executed by computing platform . Application can be implemented in computer languages such as PASCAL C C JAVA HTML XML and the like. One skilled in the art will realize that the components functions and methods described above and below can be implemented in any computer language and any application capable of implementing BAT.

As illustrated application can be stored in memory during runtime. Additionally a copy of application whole or in part can be stored in storage medium . For example application can be stored in storage medium and during runtime application whole or in part can be loaded into memory . Storage medium can be for example a hard disk drive and or a removable storage drive representing a floppy diskette drive a magnetic tape drive a compact disk drive etc.

As mentioned above BAT is designed to capture and process biometric information and can be configured to function as either a client or server. is a diagram illustrating a BAT application configured to function as a server. It should be readily apparent to those of ordinary skill in the art that the diagram depicted in represents a generalized schematic illustration and that other components may be added or existing components may be removed or modified.

As illustrated application can be configured to include a server module and a database module . These modules can be implemented as software firmware or some combination of both which can be executed on the computer systems in system . The software modules can be written in a variety of programming languages such as Visual Basic C C Java etc. Further the components can use well known software applications from companies such as MICROSOFT .

Server module can be configured to include a BAT server and an UltraEngine . BAT server can be a standard server application in a client server environment. BAT server can be configured to manage biometric information input and output from database and UltraEngine . BAT server can be configured to provide an interface for receiving biometric information to be processed. As such BAT server provides interface access and communication to UltraEngine . Such communications can be based on well known protocols and programming languages such as ASP XML SOAP .NET SQL HTTP TCP IP and Java. Interfaces provided by BAT server can be implemented using well known Internet technologies such as web pages which are well known to those skilled in the art.

Database module manages biometric information such as identity information and biometric templates. Database module can be implemented as a standard database server such as a SQL server. Database module can be implemented using well known database technology such as relational databases or object oriented databases. Database module can be configured to include two separate databases a BAT Database and an UltraEngine Database . UltraEngine Database and BAT Database can be used to store the biometric information captured by the computer systems and biometric templates previously captured.

Database module stores the biometric information captured and used by system . The biometric information can be stored in any well known format such as biometric templates. Additionally the biometric templates can include a unique identification such as a unique number that uniquely identifies the biometric template in system . Database module can include the entire biometric database or module can include only a portion of the entire biometric database. The size of the database can depend on the particular computing system in which application is implemented.

UltraEngine receives and processes all types of biometric information. According to embodiments UltraEngine consolidates all types of biometric information processing in lieu of a separate component for each type of information such as fingerprint iris facial voice vein hand geometry gait DNA or handwriting. UltraEngine contains an internal caching mechanism called an UltraCache not shown . The UltraCache caches biometric templates from BAT database for rapid retrieval and processing such as biometric matching by UltraEngine . Further UltraEngine streamlines the request for biometric matching in order to reduce processing time for matching.

By utilizing UltraEngine with the UltraCache the computing systems including computing platforms of system are capable of performing quick real time biometric analysis without overwhelming the computing systems processing memory and I O resources.

UltraEngine for example can be an ASP.NET 1.1 Web Application. In this example communication between BAT Server and UltraEngine occurs via a Web Service SOAP DIME XML call. For example UltraEngine can be implanted in a client server application such as Internet Information Services IIS .

UltraEngine can use UltraEngine database to store configuration information and to store information related to the UltraCache. The UltraCache can be an inner component of UltraEngine responsible for organizing and retrieving groups of biometric templates for UltraEngine matching processes. Consequently UltraEngine can use the following system software Microsoft IIS 5.5 or 6.0 Microsoft Web Services Enhancements WSE 3.0 Microsoft SOAP Toolkit 3.0 Microsoft .NET Framework 1.1 Microsoft SQL Server 2000 MSDE Personal Standard or Enterprise .

As described above UltraEngine can be a module of application . Likewise UltraEngine can be a standalone application that can be configured to operate independently and communicate with other UltraEngine modules and BAT applications.

UltraEngine can include four threads to perform the biometric processing Transactions thread Jobs thread Matchers thread and UltraCache . The four threads running in UltraEngine handle the four primary sub processes in UltraEngine Jobs Management Cache Updating Transaction Management and Matching including specific matching.

Transactions thread can be configured to receive transactions for processing by UltraEngine . Transactions thread can manage all transactions received in UltraEngine . Transactions thread can determine whether the transactions should be passed to the Jobs thread for jobs assignment. Further Transactions thread can also determine whether the transaction has already undergone candidate matching and can be passed to Matchers thread for specific matching. Additionally Transactions thread can also determine whether the transaction includes aggregated candidates for specific matching.

Jobs thread can be configured to break out the individual templates in the transactions and to assign them to Jobs. Jobs thread can assign templates to Jobs based on the biometric template type and biometric features of the template. Each Job corresponds to a particular template Bin within UltraCache .

UltraCache can be configured to cache biometric templates from BAT database for rapid retrieval and processing by Matchers thread . UltraCache can be configured to divide BAT database biometric templates into Bins each Bin represents one feature of a particular biometric type. Each Bin consists of one or more Segments. Each Segment includes one or more cached biometric templates.

For example in fingerprint biometric information each finger can be assigned a separate Bin. As such an exemplary Bin can be right index finger . The right index finger Bin would include Segments that contain right index finger templates from BAT database .

UltraCache can include a Global Unique Identifier GUID of the cache. The GUID associates UltraCache to the instance of UltraEngine that creates UltraCache and distinguishes UltraCache from other UltraCaches.

UltraCache can be configured to control updating the templates in UltraCache . UltraCache can be configured to frequently update Bins with any new templates that can arrive in BAT Database . To achieve this UltraEngine can query BAT Database for a count of any new templates that have arrived since a bracketed time period all templates that arrived between the last check time and the current check time . If UltraEngine determines that there are new templates UltraEngine adds the templates to UltraCache to the available Segment of its appropriate Bin .

Matchers thread can be configured to initiate a group of Matchers. The Matchers can be configured to perform the exhaustive matching for the jobs and the specific matching. When the matcher makes a match the Candidate information is stored such as the Global identifier of the Candidate along with the Match Instance information the confidence score of the match or the like . The Matcher performs the matching by comparing the templates of the job to the templates in the segments of the corresponding Bin.

As UltraEngine identifies candidates for a Transaction UltraEngine can perform specific matching of the candidates. UltraEngine can perform parallel 1 to 1 matching on the database templates of each candidate and depending on the match behavior of the transaction can halt a transaction if UltraEngine locates a positive match.

Matchers thread can also perform specific matching without candidate matching. For example transaction thread can directly pass a transaction with candidate matches or aggregated candidates to Matchers thread . As such the Matcher can perform specific matching between the template of the transaction and the candidate matches.

By utilizing UltraEngine with UltraCache the computing systems of system are capable of performing quick real time biometric analysis without overwhelming the computing systems processing memory and I O resources. For example UltraEngine with UltraCache is available for matching as soon as UltraEngine is started without the need to perform a lengthy re initialization each time.

Also an UltraEngine regulates memory usage by rapidly loading caches as needed and discarding them from memory once matching against that segment is complete resulting in the ability to match many more templates on a given system than can be held in volatile memory alone.

Additionally the amount of biometric information that can be matched is limited only by non volatile storage space i.e. Hard Drive not volatile memory RAM . Additionally since UltraCache is not purged from memory matching on an already initialized UltraCache persisted biometric information can begin almost immediately after the computer is powered up.

Additionally by using UltraEngine with UltraCache multiple transactions can be processed in parallel because like templates from multiple different transactions can be added to the same Job and matched against the Bins and Segments simultaneously.

Additionally UltraEngine can be extended to incorporate other biometric matching algorithms and biometric modalities by adding new matchers to Matchers thread around third party biometric algorithms. An UltraEngine Matcher has a well defined interface and code library structure. Matchers can be added or removed from UltraEngine independent of each other providing a flexible scalable extensible multimodal biometric match engine architecture.

Process begins when a client submits identification data to BAT Server in step . The client can submit the identification information via an interface such as a web page or DCOM interface generated by Bat Server . For example the identification information can include one or more sample biometrics templates to be matched. The identification information can also include specific candidates with which to match the sample biometrics templates.

Then BAT server creates a Transaction including the identification information for processing by UltraEngine and transmits the Transaction to UltraEngine in step . BAT server can create the Transaction in an XML form to submit to UltraEngine for processing.

Once received by UltraEngine UltraEngine assigns a unique identification UID to the transaction in step . The UID allows UltraEngine to identify the particular transactions.

UltraEngine determines if the transaction contains candidates for specific searching in step . If the transaction does not have specific candidates the UltraEngine breaks out the individual templates in the Transaction and assigns them to Jobs in step . For example UltraEngine assigns templates to jobs based on the template type and biometric features of the template. Each Job corresponds to a particular template Bin within UltraEngine internal UltraCache . The Bin consists of one or more Segments which in turn contain one or more cached biometric templates.

If the transaction contains specific candidates UltraEngine can perform specific searching on the transactions candidates in steps and . For example the transaction can contain specific candidates to match with sample biometric templates. The specific candidates may have been generated by pervious matching performed by any BAT application or UltraEngine. Likewise the specific candidate can be input by the client.

After the Job is formed UltraEngine passes the Jobs to the matcher step . When a Matcher receives Jobs for a particular transaction the Matcher proceeds to match the job s templates from an inbound transaction against the templates in the Bin until all the Jobs have been process in step . When the matcher makes a match the Candidate information such as the Global identifier of the Candidate along with the Match instance information the confidence score etc. is associated with the transaction.

After the candidate matching UltraEngine determines whether specific matching is to be performed in step . If specific matching is to be performed UltraEngine proceeds to specific matching in step . If specific matching is not to be performed UltraEngine proceed to step .

As UltraEngine identifies candidates for a transaction UltraEngine can perform parallel 1 to 1 matching on the database templates of each candidate in step . Depending on the match behavior of the transaction UltraEngine can halt a transaction if it locates a positive match in step .

Once the transaction is complete either full exhaustive matching or after halting on a positive match UltraEngine marks the transaction as complete in step . After marked as complete BAT Server retrieves the completed transaction in step . For example BAT server can retrieve the completed transaction in XML form. The transaction can contain all of the candidate and match information that BAT Server requires in order to formulate a response back to the BAT Client. After the specific searching UltraEngine formulates a response with the results of the specific searching to return to the BAT client in step .

In process UltraEngine is not required to perform a job it creates. Since each computing system in system can include a BAT application UltraEngine can pass the Job to another computing system for processing. UltraEngine can make this determination based on its and other computing systems available computing resources. The UltraEngine can scale up by using more computing system in system . The UltraEngine can scale out by passing Jobs to adjacent BAT applications.

In this configuration the UltraEngine for example UltraEngine passing the Job can be called the master UltraEngine and the receiving UltraEngine can be called UltraEngine Nodes. Other computing systems in system can serve as UltraEngine Nodes which can receive Jobs Bins and Segments from the master UltraEngine.

The UltraEngine uses a drop off notify and pick up mechanism to ensure that the rate of biometric matching is optimized. The master UltraEngine which receives the transaction can drop off a Job with an UltraEngine Node. The master UltraEngine polls a local status indicator which is set to Complete via a web service call from the UltraEngine Node once it has completed processing the Job. The master UltraEngine can then pick up the results of the Job and aggregate any candidates.

The master UltraEngine can be configured to specify how many Jobs an UltraEngine Node can simultaneously process. By specifying the Max Jobs Maximum number of Jobs that an UltraEngine node can process in parallel it is possible to commit from 0 to n processors in an n processor node to the UltraEngine. For example the master UltraEngine can be configured to handle Max Jobs of 0 meaning that it does no matching aside from specific 1 1 matching on its own platform. A worker UltraEngine Node running on a 4 processor computer can be set to Max Jobs of 3 so that at any one time the UltraEngine can only send it up to 3 concurrent Jobs.

Additionally UltraEngine Nodes receiving Jobs for matching can add segments from a master UltraEngine to their own UltraCache thereby increasing the efficiency of matching by reducing the number of segment files that has to be retrieved or sent from the master UltraEngine.

Further a given template type e.g. Right Index Finger templates from Company X s Match Algorithm can be split into several narrower Bins by specifying a Bin Width Factor or other specific biometric features e.g. the number of minutia points in a fingerprint . Jobs containing a given template can be run against several Bins which allows the Jobs and narrower Bins to be farmed out to UltraEngine Nodes for parallel processing.

For example a Right Index template was grouped by the minutia count 0 20 minutia in Right Index Bin 1 21 40 in Right Index Bin 2 41 60 in Right Index Bin 3 etc. . If a Right Index is submitted to the engine for matching then a Job would be created to match the Right Index against Right Index Bin 1 a Job would be created to match the Right Index against Right Index Bin 2 etc. Each of these jobs could be farmed out to a different UltraEngine Node and run in parallel.

Once the UltraEngine Node completes the matching the UltraEngine Node can return the Job to the master UltraEngine with the candidates. Then the master UltraEngine can perform specific candidate matching. Additionally the master UltraEngine can return the results to the client.

By allowing multiple processing CPU utilization even in a scaled out scenario where jobs are dropped off at UltraEngine Node is near 100 because of the efficiency of dropping off Jobs running Jobs signaling the completion of a Job and picking up a Job.

Any computing systems in system can cooperate together to share UltraEngine processing. is a diagram of Region configured to share UltraEngine processing. It should be readily apparent to those of ordinary skill in the art that the diagram depicted in represents a generalized schematic illustration and that other components may be added or existing components may be removed or modified.

As illustrated server computing system can be configured to implement application including UltraEngine . Laptop computing systems can be configured to implement a BAT application including UltraEngines . UltraEngine processing can be shared between UltraEngine and Ultra Engines

For example UltraEngine can be established as the master UltraEngine and UltraEngines can be established as UltraEngine Nodes. As such UltraEngine can pass Jobs to UltraEngines for processing as mentioned above.

The status of UltraEngine can be checked by interacting with an interface generated by UltraEngine . For example because UltraEngine can be a Web Application the status of UltraEngine can be checked by navigating to an UltraEngine Status web page using a program such as Microsoft Internet Explorer. is a diagram illustrating an exemplary UltraEngine Status page consistent with embodiments. UltraEngine Status page can provide information regarding the operation of UltraEngine .

UltraEngine Status page can shows statistics and status information for UltraEngine . UltraEngine Status page can include such fields as Engine information cache information performance matcher information node information transaction information and match job information .

Engine Information can include an Engine Status indicator that indicates one of three statuses Running Shutting Down and Stopped. Engine Information can include two command buttons start button and stop button to allow UltraEngine to be Stopped and Started.

Engine Information can include can include threads status fields . Threads status field can include four colored balls to represent the status of the four internal threads of UltraEngine Jobs Manager responsible for assigning match jobs to the match engines Cache Manager responsible for checking BAT database and periodically updating the Cache with new templates Transaction Manager responsible for checking the status of a submitted transaction to determine if the transaction is complete and Search Manager responsible for submitting transactions for specific searches against known candidates .

When UltraEngine is running all four color indicators should show Green. When UltraEngine is shut down all four color indicators should show Red. When UltraEngine is initializing or shutting down indicators can become red and others show green as the processes start up or shut down in sequence. If one or more of the internal processes has failed and shows red consistently while the others are green then it can indicate an internal problem with UltraEngine .

Cache Information can indicate the Global Unique Identifier GUID of the UltraCache instance that is being utilized by UltraEngine . Each UltraCache has its own global unique identifier so that inner cache bins and cache bin segments can be tagged with the GUID of their parent cache. Cache Information can indicate the status of the UltraCache. The UltraCache can be in one of three states Empty Updating and Ready.

Cache Information can include two command buttons Reinitialize button and Purge button to allow UltraEngine to Reinitialize or Purge the UltraCache. If Reinitialize button is selected UltraEngine can first shut down. Then the UltraCache can delete at cache bins and segments that belong to the local UltraCache instance. Finally the UltraCache can reinitialize its bins and segments from the local database and the UltraEngine restarts.

If Purge button is selected UltraEngine can first shut down. Then the UltraCache can delete all cache bins and segments that belong to any UltraCache instance. Where operating in a master node configuration where a remote UltraEngine submits job to the local UltraEngine the local UltraEngine can have stored one or more cache segments belonging to another UltraEngine. Purge clears these as well as those belonging to the local UltraCache instance . Following a Purge the UltraEngine can remain stopped. UltraEngine can be restarted by clicking Reinitialize button .

Performance can provide metrics on the number of biometric comparisons made by UltraEngine and any other UltraEngine Node.

Matcher Information can show the status of each individual biometric modality matchers that are plugged into UltraEngine . The status can include the template type indicators that a given matcher is responsible for as well as the number of biometric comparisons that have been performed by that matcher. The status can include other performance metrics specific to the individual matcher.

Node Information can show the status of each of the individual UltraEngine Nodes that are available to perform matching. The status can include information on the master UltraEngine Node as well as any configured worker UltraEngine Nodes.

Transaction information can provide information on the transaction being processed by UltraEngine . Transaction information can include a test transaction button in order to place a test transaction in UltraEngine . Match job information provides information on job being processed by UltraEngine

Other embodiments of the present teaching will be apparent to those skilled in the art from consideration of the specification and practice of the invention disclosed herein. It is intended that the specification and examples be considered as exemplary only with a true scope and spirit of the invention being indicated by the following claims.

