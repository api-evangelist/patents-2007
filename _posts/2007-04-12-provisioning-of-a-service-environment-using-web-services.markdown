---

title: Provisioning of a service environment using web services
abstract: To perform service provisioning in an infrastructure, a provisioning system receives a request to provision a service environment for an application. In response to the request, the provisioning system employs web services to configure resources of the infrastructure for the application. The provisioning system defines interactions between the web services, and provides the service environment based on the configuring performed by the web services.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08078704&OS=08078704&RS=08078704
owner: Hewlett-Packard Development Company, L.P.
number: 08078704
owner_city: Houston
owner_country: US
publication_date: 20070412
---
In many enterprises such as businesses educational organizations government agencies many applications can share a common resource such as a server farm in a data center. To provision virtual environments in the shared infrastructure for such applications where a virtual environment refers to some partition of the shared infrastructure for the respective application information technology IT personnel typically have to perform manual configuration of hardware and or software resources of the shared infrastructure. Manually configuring an environment for an application is a time consuming and labor intensive process that can take many days or even weeks. Also making changes to such an environment is also a relatively long process.

To support manual configuration of environments in a large enterprise a large number of IT personnel typically has to be available. However cost constraints have reduced the number of IT personnel that are available to an enterprise which makes timely deployment of relatively large numbers of applications difficult.

In accordance with some embodiments to provision create or modify service environments also referred to as virtual environments or more simply environments for multiple applications that share a common infrastructure such as a server farm in a data center an automated environment provisioning technique is used. The automated environment provisioning technique allows a user to simply fill out a form or otherwise provide user input such as in a graphical user interface GUI and to click on a control element at the GUI e.g. a GUI button provided by a provisioning system to initiate the automatic environment provisioning procedure.

An application refers to a use of a system or technology which in this case is the shared infrastructure including software and or hardware components . Example applications include accounting applications human resource applications customer support applications customer order applications and so forth. In a given enterprise such as a business educational organization or government agency there may be many possible applications that share the common infrastructure. An environment refers to a partition of the shared infrastructure that is allocated to the application. Provisioning an environment refers to creating a combination of configurations of the shared infrastructure for the corresponding application.

In response to activation of the control element provided by the provisioning system the automated service provisioning procedure is started. The service provisioning procedure is performed by modular services e.g. web services and a business logic layer that defines interactions among the modular services. The modular services and business logic layer are part of the provisioning system.

The output of the provisioning procedure is an automatically generated service environment which is in the form of a container. A container refers to an interface between an application component or application components and the underlying infrastructure. The container includes input output variables as well as the configurations of the underlying infrastructure allocated to the corresponding application. Once the container is defined an application component or application components can be deployed into the container. In one implementation the container can be a J2EE Java Platform Enterprise Edition container. J2EE provides a platform independent Java centric environment for developing building and deploying web based applications. The J2EE platform includes a set of services application programming interfaces APIs and protocols that provide the functionality for developing multi tiered web based applications.

The automated service provisioning procedure can reduce the amount of time involved in provisioning a service environment for an application compared to manual configurations performed using conventional techniques . As a result IT personnel involvement in deploying applications on a shared infrastructure is reduced so that usage of IT personnel is made more efficient to reduce costs.

In some embodiments the modular services of the provisioning system are web services. A web service is a self contained application that performs predefined functions from simple requests to complicated business processes. In some embodiments a service oriented architecture SOA defines the framework in which web services are able to support functionalities requested by users which can be an actual human user or a software process such as another service or some application . According to SOA independent web services have defined interfaces that can be called to perform tasks in a standard way without the service having prior knowledge of the calling application and without the calling application having to know how the service actually performs the service s tasks. In the service oriented architecture the basic unit of communication is a message such that services interact with each other by passing messages.

Thus according to some embodiments web services for performing provisioning tasks are arranged according to SOA. Interaction between the web services are supported by a business logic layer discussed further below .

A provisioning task that can be performed by a web service is a configuration task where a configuration refers to a setup of hardware and or software components of the shared infrastructure. Configuring hardware and or software components may include one or more of the following allocating disk space or file system space to an application configuring a hardware load balancer configuring a workload manager creating an account e.g. a UNIX application account creating a WebLogic domain where a WebLogic domain includes one or more WebLogic server instances and associated resources and where a WebLogic server is an application server that is in the middle tier of a multi tier architecture of software components and other tasks. A virtual environment created by the provisioning system for a particular application includes multiple configurations produced by the various web services.

The provisioning system according to some embodiments includes two main types of components 1 web services that encapsulate work units that are devoid of business logic where these work units change little over time and are based on open standards that can be written in many different languages and 2 an organizing framework or glue that coordinates the web services and facilitates the execution of business logic. Business logic refers to a set of business rules that define how the web services are to interact. For the provisioning system the business logic refers to the set of rules that define how provisioning is to be performed. The organizing framework or glue is provided by a business logic layer.

According to an embodiment the business logic layer is implemented using the Business Process Execution Language BPEL process where BPEL is a business process modeling language that is executable. A BPEL process is able to integrate relatively complex interactions among web services. Basically a BPEL process wires the web services together and contains logic with conditional statements to decide which web services are to be invoked to perform desired tasks. In some embodiments a BPEL process is able to keep a detailed audit trail of all activities such that an enterprise can later review the audit trail to identify problems when problems occur. A BPEL process is itself a web service that has a defined interface that is invocable by other services.

BPEL processes are expected to change relatively frequently whereas web services are expected not to change or to change much less frequently . Changes to the BPEL process can be made by business analysts which are the business users so that the work of making changes to BPEL processes do not have to be performed by IT personnel. Consequently IT personnel can focus on providing web services that are durable and pervasive.

To decide what functionality a web service should have three criteria can be used frequency of change BPEL process capability and ownership. The functionality of a web service is primarily defined by the interface or variables available for the web service to act upon. If a variable is expected to be changed frequently e.g. more than once a year then the variable is pushed into the higher level orchestration process the BPEL process .

The second criterion is related to the limitations of functionality of the BPEL process. If a desired functionality cannot be handled by the BPEL process then the functionality is pushed to a web service instead of being performed by the BPEL process.

The third criterion is ownership. If it is desirable for a functionality to be controlled by a particular enterprise then the functionality can be pushed out of a web service and into the BPEL process.

The user account web service sets up a user account or user accounts for a particular application. The web service assigns values to variables associated with the user account web service where the example variables of include a user identifier ID a group ID and other variables. Note that in other examples other variables can be associated with the user account web service and with the other web services .

The power broker web service sets permissions e.g. file access permissions for the user accounts of the particular application. The file system web service allocates storage space e.g. disk space for the particular application. The HWLB web service defines load balancing for the particular application where the load balancing defines how requests are forwarded between various servers allocated to the particular application. The WLM web service defines workload management between applications by virtualizing the shared infrastructure for example the WLM web service can allocate half a CPU central processing unit to a particular application. The WLS service creates a WebLogic domain for the particular application.

The information filled in by the user is received at by the provisioning system. Note that the provisioning system can also derive certain variables based on responses from users. For example a user may be asked if the user wants a small medium or large container. Based on the response the provisioning system can translate small medium or large to a specific allocation of hardware and or software resources.

The provisioning system can receive at a command indicating that the automated provisioning procedure is to be started. The command can be in response to a click of a GUI element selection of a GUI pull down menu item a command entered into a command line prompt and so forth.

The BPEL process and web services of the provisioning system are then invoked at so that the web services can perform the configurations of the shared infrastructure for defining the service environment. The BPEL process and web services create at a container e.g. a J2EE container into which application component s of the particular application can be deployed.

The output generated by the WLM web service is received at by provisioning procedure which then assigns at output variables from the received output of the WLM web service to include in a report.

The provisioning procedure next assigns at another subset of the received input variables for the WLS web service . The provisioning procedure then invokes at the WLS web service and receives at output generated by the WLS web service . Output variables from the received output are then assigned at for inclusion in a report.

The provisioning procedure then performs at a callback of the client where the callback provides an indication to the client that the provisioning procedure is complete.

Based on the sets of user input variables and derived variables the provisioning tool creates containers that correspond to different applications. Note that the containers depicted in are actually logical concepts and not physical entities . A container is a logical allocation of resources defined based on one or more variables such as CPU allocation memory allocation network allocation etc. Application component s can be deployed into each container . Each container represents a virtual environment in the shared infrastructure which in one example can be a server farm having plural servers e.g. application servers web servers database servers etc. .

Note that automated provisioning procedure discussed above can be applied to either create a new service environment for an application or to modify an existing environment of the application.

Instructions of software described above including provisioning software tool web services BPEL process and so forth are loaded for execution on a processor such as one or more CPUs in . The processor includes microprocessors microcontrollers processor modules or subsystems including one or more microprocessors or microcontrollers or other control or computing devices. A processor can refer to a single component or to plural components.

Data and instructions of the software are stored in respective storage devices which are implemented as one or more computer readable or computer usable storage media. The storage media include different forms of memory including semiconductor memory devices such as dynamic or static random access memories DRAMs or SRAMs erasable and programmable read only memories EPROMs electrically erasable and programmable read only memories EEPROMs and flash memories magnetic disks such as fixed floppy and removable disks other magnetic media including tape and optical media such as compact disks CDs or digital video disks DVDs .

In the foregoing description numerous details are set forth to provide an understanding of the present invention. However it will be understood by those skilled in the art that the present invention may be practiced without these details. While the invention has been disclosed with respect to a limited number of embodiments those skilled in the art will appreciate numerous modifications and variations therefrom. It is intended that the appended claims cover such modifications and variations as fall within the true spirit and scope of the invention.

