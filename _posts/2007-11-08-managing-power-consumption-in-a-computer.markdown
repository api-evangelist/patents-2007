---

title: Managing power consumption in a computer
abstract: Methods, apparatus, and products are disclose for managing power consumption in a computer, the computer including random access memory (‘RAM’) implemented in two or more memory modules, the computer having installed upon it an operating system, the operating system including a power management module, that includes: freeing, by the operating system from one or more of the memory modules, at least the amount of allocated memory in one memory module; selecting, by the operating system, at least one memory module to power down; moving, by the operating system, content of the selected memory module to other memory modules; and powering, by the operating system, down the selected memory module.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08166326&OS=08166326&RS=08166326
owner: International Business Machines Corporation
number: 08166326
owner_city: Armonk
owner_country: US
publication_date: 20071108
---
The field of the invention is data processing or more specifically methods apparatus and products for managing power consumption in a computer.

The development of the EDVAC computer system of 1948 is often cited as the beginning of the computer era. Since that time computer systems have evolved into extremely complicated devices. Today s computers are much more sophisticated than early systems such as the EDVAC. Computer systems typically include a combination of hardware and software components application programs operating systems processors buses memory input output devices and so on. As advances in semiconductor processing and computer architecture push the performance of the computer higher and higher more sophisticated computer software has evolved to take advantage of the higher performance of the hardware resulting in computer systems today that are much more powerful than just a few years ago.

In order to deliver powerful computing resources computer architects must design powerful computer processors and high speed memory modules. Current computer processors for example are capable of executing billions of computer program instructions per second. Operating these computer processors and memory modules requires a significant amount of power and often processors can consume over 100 watts during operation. As computer become more and more dependent on battery power for portability and as computer architects design environmentally sensitive computers that use less energy readers will appreciate any improvements for managing power consumption in a computer.

Methods apparatus and products are disclose for managing power consumption in a computer the computer including random access memory RAM implemented in two or more memory modules the computer having installed upon it an operating system the operating system including a power management module that includes freeing by the operating system from one or more of the memory modules at least the amount of allocated memory in one memory module selecting by the operating system at least one memory module to power down moving by the operating system content of the selected memory module to other memory modules and powering by the operating system down the selected memory module.

The foregoing and other objects features and advantages of the invention will be apparent from the following more particular descriptions of exemplary embodiments of the invention as illustrated in the accompanying drawings wherein like reference numbers generally represent like parts of exemplary embodiments of the invention.

Exemplary methods apparatus and products for managing power consumption in a computer in accordance with the present invention are described with reference to the accompanying drawings beginning with . sets forth a block diagram of automated computing machinery comprising an exemplary computer useful in managing power consumption in a computer according to embodiments of the present invention. The computer of includes at least one computer processor or CPU as well as random access memory RAM which is connected through a high speed memory bus and bus adapter to processor and to other components of the computer . In this example the RAM is implemented in two or more memory modules . A memory module is a group of RAM integrated circuits mounted on a printed circuit board. A memory module may be implemented as a single in line memory module SIMM dual in line memory module DIMM and in other form factors as will occur to those of skill in the art.

Stored in RAM is an operating system that includes a power management module a page table and a frame table . The operating system also includes a set of memory management functions that allocate memory free memory select memory modules for powering down move contents of memory from module to module disk to module or module to disk and so on. The memory management functions expose an application programming interface API through which the power management module can access the memory management functions of the operating system . Operating systems that may be improved for managing power consumption in a computer according to embodiments of the present invention include UNIX Linux Microsoft XP AIX IBM s i5 OS and others as will occur to those of skill in the art. The operating system in the example of is shown in RAM but many components of such software typically are stored in non volatile memory also such as for example on a disk drive .

In the example of the power management module is a module of computer program instructions that carry out in coordination with the memory management functions of the operating system power management in accordance with embodiments of the present invention. To facilitate such coordination the power management module exposes an API through which the memory management functions of the operating system may communicate with the power management module .

The page table of is used by a virtual memory system in the operating system to store a mapping between virtual memory addresses and physical memory addresses in main memory. The mapping between virtual addresses and physical addresses in the example of is represented by virtual address page numbers and physical address frame numbers respectively. The page table in the exemplary computer of also includes additional information about a memory page such as for example whether the memory page is presently in RAM . Whether the page is presently in RAM is represented in this example by a present bit on each entry in the page table. The example page table in also includes in the form of a dirty bit an indication whether a page has been modified after the page was loaded into RAM . A memory page that has been modified is written back to a disk in order to preserve any changes. Readers will note that the exemplary page table of is for explanation and not for limitation. Other page tables having other formats as will occur to those of skill in the art may also be useful in managing power consumption in a computer according to embodiments of the present invention.

The frame table of is also used by a virtual memory system in an operating system . The frame table records which frames of physical memory are free to be mapped to pages of virtual memory using an allocated bit . A frame of physical memory is allocated when the frame is mapped to a page of virtual memory and a frame of physical memory is unallocated when the frame is not mapped to a page of virtual memory. In some operating systems the frame table may also hold additional information such as for example statistical information or other background information. Such statistical information may be implemented as for example the number of times that a frame is accessed an indication of when the frame was last accessed and so on. The statistical information may be stored in the frame table as statistic statistic and statistic associated with the frame number . Readers will note that the exemplary frame table of is for explanation and not for limitation. Other frame tables having other formats as will occur to those of skill in the art may also be useful in managing power consumption in a computer according to embodiments of the present invention.

In the example of the operating system operates generally at the behest of the power management module in this example to manage power consumption on the computer by 

Upon request from the power management module in the example of the memory management functions of the operating system may free at least the amount of allocated memory in one memory module by invalidating entries in the page table for a number of frames whose combined size is at least the amount of allocated memory in one memory module and for each page table entry number so invalidated writing the contents of a corresponding frame to disk if the contents were changed since the contents were stored in the corresponding frame. A request from the power management module is an instruction from the power management module to the memory management functions of the operating system to make a memory module available for powering down. The memory management functions may identify the amount of allocated memory in one memory module by scanning the frame table to identify the number of entries for that memory module s frames in which the allocated bit is set and multiplying the number of entries identified times the size of each frame. The memory management functions may invalidate entries in a page table by resetting the present bit in each page table entry to be invalidated to indicate that a memory page corresponding to that entry is not loaded into RAM . Whether the contents of a corresponding frame need to be written to disk is determined by reading the status of a dirty bit in the page table entry to be invalidated because as mentioned above a dirty bit that is set indicates that the contents of the corresponding frame in main memory have changed after loading the frame into main memory.

In the example of upon request from the power management module the memory management functions of the operating system may select at least one memory module to power down by selecting a memory module that bears in comparison with other memory modules the largest amount of free memory after freeing at least the amount of allocated memory in one memory module from one or more of the memory modules. The memory management functions may identify the memory module that bears the largest amount of free memory in comparison with other memory modules by scanning the frame table to identify the number of entries for each memory module in which the allocated bit is not set. The memory module having the most entries in the frame table in which the allocated bit is not set is the memory module that bears the largest amount of free memory in comparison with other memory modules.

Upon request from the power management module in the example of the memory management functions of the operating system may move the content of the selected memory module to other memory modules by for each frame in the selected memory module having a valid entry in a page table selecting from a list of free frames a new frame from a memory module other than the selected memory module copying to the new frame the contents of a frame in the selected memory module and replacing in the page table the frame number of the frame in the selected module with the frame number of the new frame. The new frame is a frame of physical memory in one of the memory modules not selected to be powered down.

When a frame in the selected module having contents moved to a new frame in another memory module is referenced in a translation lookaside buffer TLB and cache memory the memory management functions may also update the TLB and cache memory to reflect that the content of the frame is moved to another memory module. The TLB is a table that stores a subset of the entries in the page table typically the most recently accessed entries in the page table by the virtual memory subsystem for faster access than is normally achieved when accessing entries from the page table. Similarly the cache memory of stores the contents for a subset of the frames of RAM for faster access by the CPU than is normally achieved when accessing frame contents from RAM . When a frame in the selected module having contents moved a new frame in another memory module is referenced in the TLB or the cache memory the memory management functions may move the content of the selected memory module to other memory modules by adjusting entries in a translation lookaside buffer as needed to reflect the use of the new frame as storage for the contents of the frame in the selected memory module and adjusting entries in cache memory as needed to reflect the use of the new frame as storage for the contents of the frame in the selected memory module.

In the example of the operating system upon request from the power management module may power down the selected memory module by instructing the CPU to turn off power to the selected memory module through an out of band network OOBN . The OOBN may be implemented as an IC bus for example a multi master serial computer bus invented by Philips that is used to attach low speed peripherals to a motherboard or an embedded system. IC is a simple low bandwidth short distance protocol that employs only two bidirectional open drain lines Serial Data SDA and Serial Clock SCL pulled up with resistors. Through the OOBN the CPU controls the memory modules individually. Although the exemplary computer utilizes the IC protocol readers will note this is for explanation and not for limitation. In addition to the IC protocol the OOBN may be implemented using other technologies as will occur to those of ordinary skill in the art including for example technologies described in the Intelligent Platform Management Interface IPMI specification the System Management Bus SMBus specification the Joint Test Action Group JTAG specification and so on. Furthermore readers will note that although the operating system may power down the selected memory module using the CPU other components may be configured to control power to the memory modules such as for example a baseboard management controller BMC . A BMC is a specialized microcontroller that may be embedded on the motherboard of a computer to manage the interface between system management software and the platform hardware.

In the example of the operating system upon request from the power management module may also power down the selected memory module by instructing a memory management unit MMU of the computer to remove the selected memory module from use. An MMU is a computer component responsible for handling access requests by a CPU to a computer s memory. An MMU performs translation of virtual addresses to physical addresses memory protection cache control bus arbitration and so on. The operating system may instruct a memory management unit MMU of the computer to remove the selected memory module from use by setting register values in the MMU to prevent access to frames of physical memory in the memory module selected for power removal.

As mentioned above the operating system of operates to manage the power consumption in the computer according to embodiments of the present invention at the behest of a power management module . In the example of the power management module may operate generally for managing power consumption in the computer by determining whether to power down a memory module in dependence upon system performance of the computer . The power management module may determine whether to power down a memory module by comparing a performance metric representing system performance with a predetermined threshold for that performance metric. System performance represents the operational state of the computer and may include for example memory usage hard page faults per second and many others. A performance metric that represents memory usage may be implemented as a ratio of the amount of allocated memory in RAM to the size of the page file used to store contents of RAM that are swapped to a disk. The smaller ratio value the higher the probability that not all main memory is currently in use and that powering down a memory module will not degrade overall computer performance. A performance metric that represents a hard page fault per second may be implemented as the number of times per second that a CPU requests access to a page of memory that is not loaded in RAM . The lower the value for the performance metric representing a hard page fault per second the higher the probability that not all main memory is currently in use and that powering down a memory module will not degrade overall computer performance.

In the example of the bus adapter includes an MMU a TLB and memory cache . As mentioned above the MMU translates virtual memory addresses specified by the CPU into physical memory addresses. The MMU performs this translation process by identifying the virtual memory page number using the most significant bits of the virtual memory address and looking up the frame number that corresponds with the page number in the TLB . The least significant bits of the virtual memory address form an offset which when appended to the page number s corresponding frame number form the physical memory address. If the MMU does not locate the page number in the TLB then the MMU looks up the frame number that corresponds with the page number in the page table . After identifying the frame number the MMU determines whether the content of the frame specified by the frame number are located in cache memory . If the content of the frame specified by the frame number are located in cache memory the MMU provides the frame contents to the CPU from the cache . If the content of the frame specified by the frame number are not located in cache the MMU either provides the frame contents to the CPU from RAM or triggers a page fault interrupt to have the operating system retrieving the frame contents from disk .

The computer of includes disk drive adapter coupled through expansion bus and bus adapter to processor and other components of the computer . Disk drive adapter connects non volatile data storage to the computer in the form of disk drive . Disk drive adapters useful in computers for managing power consumption in a computer according to embodiments of the present invention include Integrated Drive Electronics IDE adapters Small Computer System Interface SCSI adapters and others as will occur to those of skill in the art. Non volatile computer memory also may be implemented for as an optical disk drive electrically erasable programmable read only memory so called EEPROM or Flash memory RAM drives and so on as will occur to those of skill in the art.

The example computer of includes one or more input output I O adapters . I O adapters implement user oriented input output through for example software drivers and computer hardware for controlling output to display devices such as computer display screens as well as user input from user input devices such as keyboards and mice. The example computer of includes a video adapter which is an example of an I O adapter specially designed for graphic output to a display device such as a display screen or computer monitor. Video adapter is connected to processor through a high speed video bus bus adapter and the front side bus which is also a high speed bus.

The exemplary computer of includes a communications adapter for data communications with other computers and for data communications with a data communications network . Such data communications may be carried out serially through RS 232 connections through external buses such as a Universal Serial Bus USB through data communications data communications networks such as IP data communications networks and in other ways as will occur to those of skill in the art. Communications adapters implement the hardware level of data communications through which one computer sends data communications to another computer directly or through a data communications network. Examples of communications adapters useful for managing power consumption in a computer according to embodiments of the present invention include modems for wired dial up communications Ethernet IEEE 802.3 adapters for wired data communications network communications and 802.11 adapters for wireless data communications network communications.

The arrangement components making up the exemplary computer illustrated in are for explanation not for limitation. Computers useful according to various embodiments of the present invention may include additional components data communications buses or other computer architectures not shown in as will occur to those of skill in the art. In such a manner various embodiments of the present invention may be implemented on a variety of hardware platforms in addition to those illustrated in .

For further explanation sets forth a flow chart illustrating an exemplary method for managing power consumption in a computer according to embodiments of the present invention. The exemplary method of is implemented by an operating system of the computer at the behest of a power management module of the operating system .

The method of includes determining by a power management module whether to power down a memory module in dependence upon system performance of the computer . The power management module may determine whether to power down a memory module according to the method of by comparing a performance metric representing system performance with a predetermined threshold for that performance metric. When the performance metric reaches a predetermined threshold the power management module may determine to power down a memory module. If the performance metric does not reach the predetermined threshold however the power management module may determine not to power down a memory module.

The system performance of represents the operational state of the computer . As mentioned above system performance may be implemented as memory usage hard page faults per second or others as will occur to those of skill in the art. A performance metric that represents memory usage may be implemented as a ratio of the amount of allocated memory in RAM to the size of the page file used to store contents of RAM that are swapped to a disk. The smaller ratio value the higher the probability that not all main memory is currently in use and that powering down a memory module will not degrade overall computer performance. A performance metric that represents a hard page fault per second may be implemented as the number of times per second that a CPU requests access to a page of memory that is not loaded in RAM . The lower the value for the performance metric representing a hard page fault per second the higher the probability that not all main memory is currently in use and that powering down a memory module will not degrade overall computer performance.

In addition system performance may also be implemented as power utilization for the system. In such an example the power management module may determine whether to power down a memory module according to the method of by comparing a performance metric representing the system s power utilization with a predetermined threshold in a power policy. When the power utilization reaches the predetermined threshold in the power policy the power management module may determine to power down a memory module. If the power utilization does not reach the predetermined threshold in the power policy however the power management module may determine not to power down a memory module.

The method of also includes allowing by the power management module a predetermined time period to elapse if the power management module determines not to power down a memory module. The power management module may allow a predetermined time period to elapse according to the method of by setting the length of the predetermined time period as a value for a counter instructing the counter to begin counting down to zero from the counter value and detecting when the counter reaches zero. Upon detecting that the counter value has reached zero the power management module may again determine whether to power down a memory module in dependence upon system performance of the computer .

The method of includes freeing from one or more of the memory modules at least the amount of allocated memory in one memory module. Freeing at least the amount of allocated memory in one memory module according to the method of may be carried out by identifying the amount of allocated memory in one memory module. Identifying the amount of allocated memory in one memory module may be carried out by scanning the frame table to identify the number of entries for that memory module s frames in which the allocated bit is set and multiplying the number of entries identified times the size of each frame. In the method of freeing at least the amount of allocated memory in one memory module includes invalidating entries in a page table for a number of frames whose combined size is at least the amount of allocated memory in one memory module and for each page table entry number so invalidated writing the contents of a corresponding frame to disk if the contents were changed since the contents were stored in the corresponding frame.

Invalidating entries in a page table according to the method of may be carried out by selecting page table entries to invalidate and resetting the present bit explained in detail above with reference to in each page table entry to be invalidated to indicate that a memory page corresponding to that entry is not loaded into RAM . Selecting page table entries to invalidate in the page table may be carried out using any number of algorithms as will occur to those of skill in the art such as for example a Least Recently Used LRU algorithm or a First In First Out FIFO algorithm. An LRU algorithm selects the page of memory that has been least recently used by the CPU because typically pages of memory that have been most recently used by the CPU in the previous instructions are most likely to be used by the CPU in the next few instructions. In contrast a FIFO algorithm selects the page of memory that has been in main memory the longest in time.

Writing for each page table entry to be invalidated the contents of a corresponding frame in main memory to disk according to the method of is carried out if the contents were modified after the contents were stored in main memory. In the method of writing for each page table entry to be invalidated the contents of a corresponding frame in main memory to disk may be carried out by retrieving the value of the dirty bit for that page table entry and copying the contents of the frame in main memory corresponding to that page table entry to non volatile storage if the dirty bit is set. Readers will recall from above that a dirty bit which is set indicates that the content of the corresponding frame in main memory have changed after loading the frame contents into main memory.

The method of also includes selecting at least one memory module to power down. In the method of selecting at least one memory module to power down includes selecting a memory module that bears in comparison with other memory modules a largest amount of free memory after freeing from one or more of the memory modules at least the amount of allocated memory in one memory module. Selecting a memory module that bears in comparison with other memory modules a largest amount of free memory after freeing from one or more of the memory modules at least the amount of allocated memory in one memory module according to the method of may be carried out by scanning the frame table to identify the number of entries for each memory module in which the allocated bit is not set and selecting the memory module having the most entries in the frame table in which the allocated bit is not set. Readers will recall from above that the allocated bit indicates whether frames of physical memory are free to be mapped to pages of virtual memory.

The method of also includes moving the content of the selected memory module to other memory modules. Moving the content of the selected memory module to other memory modules according to the method of may be carried out by copying the contents of each frame of memory still in use in the selected module after freeing an amount of memory into available frames of the remaining other memory modules and updating the page table and the frame table used by the operating system to reflect that the contents were moved.

The method of includes powering down the selected memory module. Powering down the selected memory module according to the method of may be carried out by instructing the CPU or some other electronic component to turn off power to the selected memory module through an out of band network. The out of band network may be implemented for example as an IC bus an IPMI bus a System Management Bus a JTAG bus specification or any other out of band network as will occur to those of skill in the art. In the method of powering down the selected memory module includes instructing a memory management unit of the computer to remove the selected memory module from use. Instructing a memory management unit of the computer to remove the selected memory module from use may be carried out by setting register values in the MMU to prevent access to frames of physical memory in the memory module selected for power removal.

For further explanation of moving content of the selected memory module to other memory modules sets forth a flow chart illustrating a further exemplary method for managing power consumption in a computer according to embodiments of the present invention. The method of is similar to the method of in that the method of includes determining by the power management module in dependence upon system performance of the computer whether to power down a memory module freeing from one or more of the memory modules at least the amount of allocated memory in one memory module selecting at least one memory module to power down moving the content of the selected memory module to other memory modules and powering down the selected memory module.

In the method of however moving the content of the selected memory module to other memory modules includes for each frame in the selected memory module having a valid entry in a page table selecting from a list of free frames a new frame from a memory module other than the selected memory module copying to the new frame the contents of a frame in the selected memory module and replacing in the page table the frame number of the frame in the selected module with the frame number of the new frame. The new frame represents a frame of physical memory in one of the memory modules not selected for powering down.

Selecting from a list of free frames a new frame from a memory module other than the selected memory module according to the method of may be carried out by scanning the frame table for an entry for a memory module other than the selected memory module in which the allocated bit is not set and selecting the new frame as the frame corresponding to the frame table entry in which the allocated bit is not set. Readers will recall from above that the allocated bit in a frame table entry indicates whether the corresponding frame of physical memory is mapped to a page of virtual memory. Copying to the new frame the contents of a frame in the selected memory module according to the method of may be carried out by retrieving the contents from the frame in the selected memory module and storing the contents in the new frame in another memory module. Replacing in the page table the frame number of the frame in the selected module with the frame number of the new frame according to the method of may be carried out by locating the page table entry that associates a page number with the frame number for the frame in the memory module selected for powering down and associating the page number with the frame number for the new frame in the memory module not selected for powering down. When the content of each frame in the selected memory module are moved to other memory modules each frame may be processed as described above in an atomic transaction to ensure that a process does not access the content of a frame that is mapped to that process virtual memory space after the contents of the frame have been moved to a new frame but before the page table has been updated to reflect the move.

When a frame in the selected module having contents moved a new frame in another memory module is referenced in a TLB and cache memory the TLB and cache memory are also typically updated to reflect that the content of the frame is moved to another memory module. As mentioned above the TLB is a table that stores a subset of the entries in the page table typically the most recently accessed entries in the page table by the virtual memory subsystem for faster access than is normally achieved when accessing entries from the page table. Similarly the cache memory stores the contents for a subset of the frames of main memory for faster access by the CPU than is normally achieved when accessing frame contents from main memory.

When a frame in the selected module having contents moved a new frame in another memory module is referenced in the TLB or the cache memory the operating system may move the content of the selected memory module to other memory modules by adjusting entries in a TLB as needed to reflect the use of the new frame as storage for the contents of the frame in the selected memory module and adjusting entries in cache memory as needed to reflect the use of the new frame as storage for the contents of the frame in the selected memory module. Adjusting entries in a TLB according to the method of may be carried out by scanning the TLB for an entry that specifies the frame number for the frame in the memory module selected to be powered down and replacing the frame number in the TLB entry with the frame number for the new frame into which the contents were moved. Adjusting entries in cache memory according to the method of may be carried out by scanning the cache for an entry that specifies the frame number for the frame in the memory module selected to be powered down and replacing the frame number in the cache entry with the frame number for the new frame into which the contents were moved.

The method of then repeats the method of moving the contents of the memory module selected to be powered down to other memory module as described above. Repeating the method of moving the contents of the memory module selected to be powered down to other memory module occurs for each frame in the selected memory module having a valid entry in the page table.

Exemplary embodiments of the present invention are described largely in the context of a fully functional computer system for managing power consumption in a computer. Readers of skill in the art will recognize however that the present invention also may be embodied in a computer program product disposed on computer media for use with any suitable data processing system. Such computer readable media may be transmission media or recordable media for machine readable information including magnetic media optical media or other suitable media. Examples of recordable media include magnetic disks in hard drives or diskettes compact disks for optical drives magnetic tape and others as will occur to those of skill in the art. Examples of transmission media include telephone networks for voice communications and digital data communications networks such as for example Ethernets and networks that communicate with the Internet Protocol and the World Wide Web as well as wireless transmission media such as for example networks implemented according to the IEEE 802.11 family of specifications. Persons skilled in the art will immediately recognize that any computer system having suitable programming means will be capable of executing the steps of the method of the invention as embodied in a program product. Persons skilled in the art will recognize immediately that although some of the exemplary embodiments described in this specification are oriented to software installed and executing on computer hardware nevertheless alternative embodiments implemented as firmware or as hardware are well within the scope of the present invention.

It will be understood from the foregoing description that modifications and changes may be made in various embodiments of the present invention without departing from its true spirit. The descriptions in this specification are for purposes of illustration only and are not to be construed in a limiting sense. The scope of the present invention is limited only by the language of the following claims.

