---

title: Techniques for creating computer generated notes
abstract: Text is extracted from and information resource such as documents, emails, relational database tables and other digitized information sources. The extracted text is processed using a decomposition function to create. Nodes are a particular data structure that stores elemental units of information. The nodes can convey meaning because they relate a subject term or phrase to an attribute term or phrase. Removed from the node data structure, the node contents are or can become a text fragment which conveys meaning, i.e., a note. The notes generated from each digital resource are associated with the digital resource from which they are captured. The notes are then stored, organized and presented in several ways which facilitate knowledge acquisition and utilization by a user.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08024653&OS=08024653&RS=08024653
owner: Make Sence, Inc.
number: 08024653
owner_city: Road Town
owner_country: VG
publication_date: 20070612
---
This application claims priority to provisional application Ser. No. 60 804 495 filed Jun. 12 2006 entitled Techniques for Use of Computer Generated Notes the contents of which are hereby incorporated into this application by reference in their entirety. This application is also a continuation in part of and claims priority to both 1 U.S. Ser. No. 11 273 568 filed Nov. 14 2005 entitled Techniques For Knowledge Discovery By Constructing Knowledge Correlations Using Concepts Or Terms by inventors Mark Bobick and Carl Wimmer and 2 U.S. Ser. No. 11 314 835 filed Dec. 21 2005 entitled Techniques For Knowledge Discovery By Constructing Knowledge Correlations Using Concepts Or Terms by inventors Mark Bobick and Carl Wimmer the contents of both of which are hereby incorporated into this application by reference in their entirety.

The invention is related to information technology and more particularly to the use of computer generated notes to improve comprehension and utilization of digitized information.

Note taking is a basic function of human knowledge acquisition from printed or digitized information sources familiar to every student professional or worker who must select words or phrases of interest from a page or a document. Like the manual process of note taking computer facilitated or computer automated implementations of note taking including the current invention all produce value to a user by distillation and or reduction of the original text of a document into a form more readily managed by a user. The user may perform or seek the reduction and or distillation of a page or document for the purposes of review and study or for the purpose of correlating the resulting notes together to produce facts assertions and conclusions. While notes generated by a human note taker may sometimes be phrases sentences or paragraphs captured or paraphrased specifically to be quoted elsewhere manual note taking for the purpose of knowledge acquisition typically aims to capture from a page or document some fragments which convey meaning the fragments having a significance subjectively determined by a user. Alternatively the user may seek only a more or less minimal description of what the document or page is about . A number of software program products have been developed over time to assist and facilitate the note taking function.

Manual note taking for the purpose of creating and publishing study guides is familiar to every student. In the United States Cliffs Notes a product of Wiley Publishing Inc. are fixtures of secondary school homework regimes.

Document summarization is related to note taking in that the summarization function attempts to distill the contents of a page or document into a paraphrased form which is ideally of the minimum word length while including the maximum of the page or document s relevant content. Academic and commercial attention to page and document summarization has increased over recent years especially as part of the effort to improve internet search. Text summarization is difficult computationally expensive and requires extremely sophisticated algorithms operating upon extensive supporting semantic lexical and database infrastructure. Because of these factors true text summarization is not yet considered practical. Extractor a product of DBI Technologies Inc. of Canada illustrates the current limitations of the technology.

Many so called note taking software products currently available are used as a simple means to capture store and organize the text fragment notes generated by the user while reviewing documents web pages or other material either digitized or printed. An example is MagicNotes a product of Rose City Software Inc. . Other products capture some or all of digitized source page or document but require the user to edit out any unwanted material. An example is Zoot a product of Zoot Software Inc. . In this group of software products that capture store and organize user generated or user edited notes the most sophisticated is Questia a product of Questia Media America Inc. . Questia is an online research and library service with an extensive user interface that presents each page of a user selected digitized reference such as a digitized encyclopedia to the user. The user can then highlight and capture as a note any text fragment phrase paragraph or larger text fragment and store that fragment in an online project folder preserving the location from which the fragment was copied. Questia then supports composition of research papers by allowing the easy pasting of the captured text fragments into a document and then automatically generating and placing correctly formed bibliographic references.

The present invention automatically generates notes from a page or document or from any other digitized information source. None of the currently available products is able to do so. Further as described more hereinafter the novel features and uses of the present invention optimize the utility of the generated notes.

The present invention discloses a method and apparatus for utilizing the nodes generated by the decomposition function described more hereinafter and in said Ser. No. 11 273 568 as notes. A decomposition function creates nodes from documents emails relational database tables and other digitized information sources. Nodes are a particular data structure that stores elemental units of information. The nodes can convey meaning because they relate a subject term or phrase to an attribute term or phrase. Removed from the node data structure the node contents take the form of a text fragment which conveys meaning i.e. a note. The notes generated from each digital resource are associated with the digital resource from which they are captured. The notes are then stored organized and presented in several ways which facilitate knowledge acquisition and utilization by a user.

When the note set is complete all notes are placed into the note container by the note conversion function .

A note taking program then receives the output of the note conversion function and displays the document in the window together with a notes selection window containing notes and with one or more save notes buttons .

The Serial Analyzer extracts Sentences from an input Document . The Sentences do not need to conform to actual sentences in an input text but often do. The sentences are aligned in a stack termed a Document of Sentences . Each Sentence in the Document of Sentences is then run through the Tagger which assigns to each word in the Sentence a part of speech token. The parts of speech are for the most part the same parts of speech well known to school children although among Taggers there is no standard for designating tokens. In the Hepple Tagger a singular Noun is assigned the token NN an adjective is assigned the token JJ an adverb is assigned the token RB and so on. Sometimes additional parts of speech are created for the benefit of downstream uses. In the described embodiment the Hepple Tagger created part of speech TO is an example. The part of speech tokens are maintained in a token sequence which is checked for one to one correspondence with the actual words of the sentence upon which the token sequence is based. The Sentence Token Sequence Pair is then presented to the Node Generation Function .

A significant element of the present invention are novel Patterns of Tokens Patterns and Per Pattern Token Seeking Behavior Constraints Constraints which are applied to the Sentence Token Sequence Pair within the Node Generation Function to produce Nodes where such Nodes are specifically intended to be converted into Notes where said Notes conform with specific exceptions to notes composed by hand and ad hoc by a human reviewer of the underlying Document and where the set of said Notes represents with specific exceptions an exhaustive extraction of all knowledge from said Document .

There are several uses for part of speech patterns and token seeking rules documented in the literature of Information Extraction the domain with which the current invention is associated and in the related field of Information Retrieval. Text analysis for the purpose of automated document classification or indexing for search engine based retrieval is a primary use of part of speech patterns. Part of speech patterns and token seeking rules are used in text analysis to discover keywords phrases clauses sentences paragraphs concepts and topics. Although the meanings of keyword clause sentence and paragraph conform to the common understanding of the terms the meanings of phrase concept and topic varies by implementation. Sometimes the word phrase is defined using its traditional meaning in grammar. In this use types of phrases include Prepositional Phrases PP Noun Phrases NP Verb Phrases VP Adjective Phrases and Adverbial Phrases. For other implementations the word phrase may be defined as any proper name for example New York City . Most definitions require that a phrase contain multiple words although at least one definition permits even a single word to be considered a phrase. Some search engine implementations utilize a lexicon a pre canned list of phrases. The WordNet Lexical Database is a common source of phrases. The Notes generated by the preset invention can not be classified as keywords phrases clauses or sentences or any larger text unit using the well known definitions of these terms except by serendipitous execution of the described functions.

The word concept generally refers to one of two constructs. The first construct is concept as a cluster of related words similar to a thesaurus associated with a keyword. In a number of implementations this cluster is made available to a user via a Graphic User Interface GUI for correction and customization. The user can tailor the cluster of words until the resulting concept is most representative of the user s understanding and intent. The second construct is concept as a localized semantic net of related words around a keyword. Here a local or public ontology and taxonomy is consulted to create a semantic net around the keyword. Some implementations of concept include images and other non text elements. Topics in general practice need to be identified or detected from a applying a specific set of operations against a body of text. Different methodologies for identification and or detection of topics have been described in the literature. The Notes generated by the current invention can not be classified as concepts or topics using the well know definitions of these terms except by serendipitous execution of the described functions.

In the prior art necessary use of part of speech pattern examination is applied within the boundaries of an individual text intralinguistic to resolve endophoric ambiguity. For example in the text I had a professor who always carried an umbrella. He never opened it even when it rained. the second sentence is endophora because it refers to something the professor who was mentioned earlier in the text but is not clearly named in the second sentence. Likewise one it in the second sentence refers to umbrella in the first sentence. For those applications which require determining what a document is about such use of part of speech patterns is critical. A token seeking rule which might be applied in this case when processing the second sentence might be to go back to find the noun in the first sentence to which the He or the it in the second sentence applies. The Constraints described herein do not mirror the token seeking rules present in the prior art except in the most abstract of characteristics. The Constraints can not be used to identify keywords phrases clauses sentences concepts or topics. The Patterns crafted for the present invention can not be used to identify keywords phrases clauses sentences concepts or topics in the formally accepted structures of instantiations of those terms. Further the Patterns and Constraints required for the current invention differ from those required for Ser. No. 11 273 568 and Ser. No. 11 314 835. The fundamental difference is that the Pattern and Constraints are designed and intended to produce optimally correlatable Nodes such Nodes ideally capturing a Relation value of Bond between the values of Subject and Attribute . The present invention sets no such standard for Node creation but instead establishes Patterns and Constraints which can ultimately produce Notes at machine speed.

The two methods of resource decomposition applied in current embodiments of the present invention are word classification and intermediate format. Word classification identifies words as instances of parts of speech e.g. nouns verbs adjectives . Correct word classification often requires a text called a corpus because word classification is dependent upon not what a word is but how it is used. Although the task of word classification is unique for each human language all human languages can be decomposed into parts of speech. The human language decomposed by word classification in the preferred embodiment is the English language and the means of word classification is a natural language parser NLP e.g. GATE a product of the University of Sheffield UK . In one embodiment 

Where the resource contains at least one formatting processing or special character not permitted in plain text the method is 

For decomposition XML files by means of word classification decomposition is applied only to the English language content enclosed by XML element opening and closing tags with the alternative being that decomposition is applied to the English language content enclosed by XML element opening and closing tags and any English language tag values of the XML element opening and closing tags. This embodiment is useful in cases of the present invention that seek to harvest metadata label values in conjunction with content and informally propagate those label values into the nodes composed from the element content. In the absence of this capability this embodiment relies upon the XML file being processed by a NLP as a plain text file containing special characters. Any dialect of markup language files including but not limited to HyperText Markup Language HTML and Extensible HyperText Markup Language XHTML projects of the World Wide Web Consortium RuleML a project of the RuleML Initiative Standard Generalized Markup Language SGML an international standard and Extensible Stylesheet Language XSL a project of the World Wide Web Consortium is processed in essentially identical fashion by the referenced embodiment.

Email messages and email message attachments are decomposed using word classification in a preferred embodiment of the present invention. As described earlier the same programmatically invoked utilities used to access and search email repositories on individual computers and servers are directed to the extraction of English language text from email message and email attachment files. Depending upon how clean the resulting extracted English language text can be made the NLP used by the present invention will process the extracted text as plain text or plain text containing special characters. Email attachments are decomposed as described earlier for each respective file format.

Decomposition by means of word classification being only one of two methods for decomposition supported by the present invention the other means of decomposition is decomposition of the information from a resource using an intermediate format. The intermediate format is a first term or phrase paired with a second term or phrase. In a preferred embodiment the first term or phrase has a relation to the second term or phrase. That relation is either an implicit relation or an explicit relation and the relation is defined by a context. In one embodiment that context is a schema. In another embodiment the context is a tree graph. In a third embodiment that context is a directed graph also called a digraph . In these embodiments the context is supplied by the resource from which the pair of terms or phrases was extracted. In other embodiments the context is supplied by an external resource. In accordance with one embodiment of the present invention where the relation is an explicit relation defined by a context that relation is named by that context.

In an example embodiment the context is a schema and the resource is a Relational Database RDB . The relation from the first term or phrase to the second term or phrase is an implicit relation and that implicit relation is defined in an RDB. The decomposition method supplies the relation with the pair of concepts or terms thereby creating a node. The first term is a phrase meaning that it has more than one part e.g. two words a word and a numeric value three words and the second term is a phrase meaning that it has more than one part e.g. two words a word and a numeric value three words .

In another embodiment the decomposition function takes as input the RDB schema plus at least two values from a row in the table. The method includes

The entire contents of the RDB can be decomposed and because of the implicit relationship being immediately known by the semantics of the RDB the entire contents of the RDB can be composed into nodes without additional processing of the intermediate format pair of terms or phrases.

Where the context is a tree graph and the resource is a taxonomy the relation from the first term or phrase to the second term or phrase is an implicit relation and that implicit relation is defined in a taxonomy.

The decomposition function will capture all the hierarchical relations in the taxonomy. The decomposition method is a graph traversal function meaning that the method will visit every vertex of the taxonomy graph. In a tree graph a vertex except for the root can have only one parent but many siblings and many children. The method includes 

The parent child relations of entire taxonomy tree can be decomposed and because of the implicit relationship being immediately known by the semantics of the taxonomy the entire contents of the taxonomy can be composed into nodes without additional processing of the intermediate format pair of concepts or terms.

In another embodiment the decomposition function will capture all the sibling relations in the taxonomy. The method includes 

All sibling relations in the entire taxonomy tree can be decomposed and because of the implicit relationship being immediately known by the semantics of the taxonomy the entire contents of the taxonomy can be composed into nodes without additional processing of the intermediate format pair of terms or phrases.

Where the context is a digraph and the resource is an ontology the relation from the first term or phrase to the second term or phrase is an explicit relation and that explicit relation is defined in an ontology.

The decomposition function will capture all the semantic relations of semantic degree 1 in the ontology. The decomposition method is a graph traversal function meaning that the method will visit every vertex of the ontology graph. In an ontology graph semantic relations of degree 1 are represented by all vertices exactly 1 link hop removed from any given vertex. Each link must be labeled with the relation between the vertices. The method includes 

The degree one relations of entire ontology tree can be decomposed and because of the explicit relationship being immediately known by the labeled relation semantics of the ontology the entire contents of the ontology can be composed into nodes without additional processing of the intermediate format pair of terms or phrases.

A node is comprised of parts. The node parts can hold data types including but not limited to text numbers mathematical symbols logical symbols URLs URIs and data objects. The node data structure is sufficient to independently convey meaning and is able to independently convey meaning because the node data structure contains a relation. The relation manifest by the node is directional meaning that the relationships between the relata may be uni directional or bi directional. A uni directional relationship exists in only a single direction allowing a traversal from one part to another but no traversal in the reverse direction. A bi directional relationship allows traversal in both directions.

A node is a data structure comprised of three parts in one preferred embodiment and the three parts contain the relation and two relata. The arrangement of the parts is 

In another preferred embodiment a node is a data structure and is comprised of four parts. The four parts contain the relation two relata and a source. One of the four parts is a source and the source contains a URL or URI identifying the resource from which the node was extracted. In an alternative embodiment the source contains a URL or URI identifying an external resource which provides a context for the relation contained in the node. In these embodiments the four parts contain the relation two relata and a source and the arrangement of the parts is 

The generation of nodes A B is achieved using the products of decomposition by a natural language processor NLP including at least one sentence of words and a sequence of tokens where the sentence and the sequence must have a one to one correspondence . All nodes A B that match at least one syntactical pattern can be constructed. The method is 

The generation of nodes is achieved using the products of decomposition by a natural language processor NLP including at least one sentence of words and a sequence of tokens where the sentence and the sequence must have a one to one correspondence. All nodes that match at least one syntactical pattern can be constructed. The method is 

A preferred embodiment of the present invention is directed to the generation of nodes using all sentences which are products of decomposition of a resource. The method includes an inserted step q which executes steps a through p for all sentences generated by the decomposition function of an NLP.

In an improved approach nodes are constructed using more than one pattern and the method for constructing nodes uses a sorted list of patterns. In this embodiment 

Additional interesting nodes can be extracted from a sequence of tokens using patterns of only two tokens. The method searches for the right token in the patterns and the bond value of constructed nodes is supplied by the node constructor. In another variation the bond value is determined by testing the singular or plural form of the subject corresponding to the left token value. In this embodiment 

Using a specific pattern of three tokens the method for constructing nodes searches for the left token in the patterns the bond value of constructed nodes is supplied by the node constructor and the bond value is determined by testing the singular or plural form of the subject corresponding to the left token value. In this embodiment 

Nodes are constructed using patterns where the left token is promoted to a left pattern containing two or more tokens the center token is promoted to a center pattern containing no more than two tokens and the right token is promoted to a right pattern containing two or more tokens. By promoting left center and right tokens to patterns more complex and sophisticated nodes can be generated. In this embodiment the NLP s use of the token TO to represent the literal to can be exploited. For example 

Under certain conditions it is desirable to filter out certain possible node constructions. Those filters include but are not limited to 

Where the nodes are comprised of four parts the fourth part contains a URL or URI of the resource from which the node was extracted. In this embodiment in addition to the sentence sequence of words and corresponding sequence of tokens the URL or URI from which the sentence was extracted is passed to the node generation function. For every node created from the sentence by the node generation function the URL or URI is loaded into the fourth part called the Sequence of the node data structure.

Where the four part nodes are generated using the RDB decomposition function the RDB decomposition function will place in the fourth sequence part of the node the URL or URI of the RDB resource from which the node was extracted typically the URL by which the RDB decomposition function itself created a connection to the database. An example using the Java language Enterprise version using a well known RDBMS called MySQL and a database called mydb jdbc mysql localhost mydb . If the RDBMS is a Microsoft Access database the URL might be the file path for example c anydatabase.mdb . This embodiment is constrained to those RDBMS implementations where the URL for the RDB is accessible to the RDB decomposition function. Note that the URL of a database resource is usually not sufficient to programmatically access the resource.

A note selection window is shown associated with two save buttons A and B. If it is desirable only to save certain notes from the note selection window those notes will be selected using typically standard operating system functionality followed by selection of the save selection button A. When button A is activated the items that were identified for saving are stored on a hard disk for example hard disk using the save function of . If it is desirable to save all of the notes that have been generated the save all button B can be selected.

In one embodiment associated with the Nodes B generated by the Document Decomposition Function are composed of four parts the fourth part of such Nodes B containing bibliographic information. With reference to of Ser. No. 11 273 568 the fourth part of such Nodes B is referred to as a Sequence or Source . The type of bibliographic information that may be captured in the fourth part of such Nodes B will vary depending upon the application programming interfaces API extent for each type of Document and each type of Computer Program used to display the Document . At minimum the bibliographic information captured in the fourth part of said Node B will include the URL or URI of the Document . In other embodiments the title author publication date of the Document may be captured in the fourth part of said Node B. In further embodiments the chapter page paragraph or line of the Document where the text which served as the basis for creation of the Node B will be captured in the fourth part of said Node B. As previously described herein and in Ser. Nos. 11 273 568 and 11 314 835 Nodes which are acquired from a Document by the Document Decomposition Function are not clipped or cut and pasted from the text of a Document . Rather Nodes may be said to be associated with a location in the text of a Document that location being the location in the text corresponding to the location in the Sentence Token Sequence Pair where the first token of a Pattern was found by the Constraint as it operated upon the Sentence Token Sequence Pair and was successfully able to complete the generation of a Node . Where the type of Document and Computer Program permit that location will be captured in the fourth Sequence part of the Node B. Referring to note B made from a four part Node B is composed of two parts a Note Content part and a Note Source part . In one embodiment in addition to the Note Content the bibliographic material in the Note Source also can be displayed in the Note Selection Window and subsequently printed or emailed.

As noted above there is specific exception to the conformity of Notes constructed by the current invention to notes constructed by hand and ad hoc by a human reviewer of the same Document . That exception is for quotations that is text passages found in Documents delimited by a single pair of complementary quotation marks.

In the case of quotations where strictly accurate representation of a written or spoken text is required one embodiment the current invention excludes quotations found in text from the default Tagger algorithm. Instead the Tagger will when encountering either an open or a close quotation marks character utilize a created part of speech token QS for a open quotation and QT for a closed quotation to delimit the quotation in the Token Sequence. Subsequently the Node Generation Function when processing the Sentence Token Sequence Pair will use a special Constraint when a QS token is encountered. The Constraint will then seek the following complementary closed quotation mark QT token. All text referenced by tokens between the complementary quotation tokens is moved into a temporary memory buffer. If no closed quotation mark token is found no further special action will be taken by the Node Generation Function . If a complementary closed quotation token is found the Node Generation Function will construct a two part Quotation Node as shown in the Quotation Node having a first part called the Quote and the Quotation Node having a second part called the Sequence or Source . The Quote part of the Quotation Node holds the entire quoted text and the Sequence part holding bibliographic information. For a Note B made from a Quotation Node the entire quoted text will be placed in the Note Content and the available bibliographic information will be placed in the Note Source .

In another embodiment the User can elect to not respect quotations in which case quoted text will be processed by the Tagger and the Node Generation Function as is other text in the Document . In one embodiment the User can elect to respect quotations but not to preserve quotations in Quotation Nodes . Using this method when a open quotation token is encountered by the Node Generation Function quotation token delimited words and tokens from the Sentence Token Sequence Pair will be processed into Nodes by the Node Generation Function independently of the other words and tokens in the Sentence Token Sequence Pair .

While various embodiments of the present invention have been illustrated herein in detail it should be apparent that modifications and adaptations to those embodiments may occur to those skilled in the art without departing from the scope of the present invention.

