---

title: Spam filtering system and method
abstract: A spam filter system and method, for maintaining at least one database of permitted email addresses; automatically communicating with an email server, and selectively downloading and storing email not corresponding to entries in the database; automatically sending a challenge message in response to messages from non-permitted email addresses; if an appropriate response is received to the challenge message, adding the non-permitted email address to the database of permitted email addresses; and automatically restoring downloaded email messages from email addresses which become permitted.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=09177293&OS=09177293&RS=09177293
owner: Cousins Intellectual Properties LLC
number: 09177293
owner_city: Vero Beach
owner_country: US
publication_date: 20070720
---
The present application claims benefit of priority from U.S. Provisional Application 60 820 022 filed Jul. 21 2007 which is expressly incorporated herein by reference.

The present invention relates to computer software. More particularly the invention is to directed to a system and method for identifying unsolicited and unwanted e mail through a sender authentication authorization filter that has been personalized for or by a user.

Electronic messaging particularly electronic mail e mail over the Internet has became quite pervasive in society. Its ease of use low cost and integration with common office computer tools and business process work flow make it a preferred method of communication for many individuals and organizations.

Unfortunately as has occurred with more traditional forms of communication such as a postal mail and telephone e mail recipients are being subjected to unsolicited mass mailings. With the explosion particularly in the last few years of Internet based commerce a wide and growing variety of electronic merchandisers are repeatedly sending unsolicited mail advertising their products and services phishing for confidential information pump and dump of small cap equities transmission of an wanted or malicious software other nefarious or unknown motivations. Most consumers who order products or otherwise transact with a merchant over the Internet expect to and in fact do regularly receive such solicitations from those merchants. However electronic mailers are continually expanding their distribution lists to penetrate deeper into society in order to reach more people. In that regard recipients who merely provide their e mail addresses in response to requests for visitor information generated by various web sites often later find that they have been included on electronic distribution lists. This occurs without the knowledge let alone the assent of the recipients. Moreover as with postal direct mail lists an electronic mailer will often disseminate its distribution list whether by sale lease or otherwise to another such mailer for its use and so forth with subsequent mailers. Further given the low cost of sending an e mail message automated processes which randomly generate e mail addresses to existing domains or derive e mail addresses from various lists or databases send massive floods of messages. Consequently over time e mail recipients often find themselves increasingly barraged by unsolicited mail resulting from separate distribution lists maintained by a wide variety of mass mailers or spammers. Though certain avenues exist through which an individual might request that their name be removed from most e mail lists from legally compliant entities many sources of e mail are not compliant or use loop holes in existing regulation.

Various proposals and systems have been implemented to generate white lists and black lists of individual senders IP address or domains. However the normal e mail protocols are susceptible to spoofing and therefore an analysis of the e mail message may not properly reflect its origin. Likewise spam may be sent from zombie machines and thus exploit the infrastructure owned by others who may be white listed . Further new domains are constantly being added and thus a simple list based filter generally precludes normal delivery of many messages that would be authorized by the recipient and thus suffers from a very high false positive reject rate. Likewise the spoofing of valid addresses raises the possibility at least of false negative rejections. This unsolicited mail usually increases over time. The sender can effectively block recipient requests or attempts to eliminate this unsolicited mail. For example the sender can prevent a recipient of a message from identifying the sender of that message such as by sending mail through a proxy server . This precludes that recipient from contacting the sender in an attempt to be excluded from a distribution list. Alternatively the sender can ignore any request previously received from the recipient to be so excluded.

An individual can easily receive hundreds of pieces of unsolicited postal mail in less than a year. By contrast given the extreme ease and insignificant cost through which e distribution lists can be readily exchanged and e mail messages disseminated across extremely large numbers of addresses a single e mail addressee included on several distribution lists can expect to receive a considerably large number of unsolicited messages over a much shorter period of time.

Furthermore while many unsolicited e mail messages are benign such as offers for discount office or computer supplies or invitations to attend conferences of one type or another others such as pornographic inflammatory and abusive material are highly offensive to their recipients. All such unsolicited messages whether e mail or postal mail collectively constitute so called junk mail. To easily differentiate between the two junk e mail is commonly known and will alternatively be referred to herein as spam .

Similar to the task of handling junk postal mail an e mail recipient may sift through his her incoming mail to remove the spam. United States Patent Application 20040083270 Heckerman David et al. Apr. 29 2004 provides an intelligent content sensitive filtering process which responds to user feedback. See also US 20040139160 20040139165 20040177110 20040215977 expressly incorporated herein by reference. Simple concrete email filter classification systems are known. See 20040193684 20040199595 20040210639 20040205127 20040205126 20040210640 expressly incorporated herein by reference.

Drawbacks of many prior art systems and methods are that these systems either take time to setup and configure or they do not allow the user sufficient flexibility to personalize the email filter.

The systems methods and concepts disclosed in the above patents and patent applications may be used in conjunction with or appropriate components substitute for and or supplement the elements of the preferred embodiment of the invention disclosed herein below to the extent consistent therewith.

In light of the foregoing there exists a need to provide a system and method that will enable the identification and classification of spam versus desired e mail. Furthermore there exists a need for a method of quickly and easily configuring and controlling the spam filter while still enabling the user to personalize the spam filter if they so desire to further facilitate appropriately restrictive filtering criteria while permitting appropriate and or authorized e mail to be delivered. Further there exists a need for a system and method of filtering spam that functions with minimal configuration while minimizing the false positive reject rate and protecting emails from desired senders from being lost.

The present invention is directed to a method and system for use in a computing environment to implement a filter to restrict normal delivery of e mail messages to a recipient. The system preferably employs a set of rule bases which filter received messages according to a predetermined protocol. A received message may pass fail or be subjected to further verification and or challenge. Further the classification is not limited to pass or fail and thus multiple classifications are possible.

A first component of the system called SpamMonster is a spam filter based on a white list black list approach. When properly trained it can achieve a 95 rate of accuracy against spam and a 98 accuracy identifying friendly emails. All the emails it deletes i.e. emails removed from the normal delivery protocol are saved. These may be saved in an alternate email box database file system or the like.

SpamMonster is not an email client or server and it can run on the email client computer or any other system which is capable of interacting with the email server. It is based on the basic assumption that the mail spamming computers do not intelligently reply to emails however it can selectively filter email from auto senders. The reason why spamming computers do not respond to emails is that they would require a much more considerable bandwidth and more resources and in any case it should ignore these emails because they are likely due to invalid email addresses.

SpamOut uses the POP3 protocol and periodically scans emails that are waiting on an email server. Of course in known manner other email server protocols such as IMAP may be supported. When SpamMonster sees an email on the server it saves a copy and applies a set of rules to it. There are three possible outcomes to the application of the rules 

The rules are applied by simple string matching between email fields and entries found in of the following 5 lists that are maintained jointly by the user and SpamMonster 

As shown in the FIGURE the system starts by checking to see of there are new emails on the server . If a new email is found it is initially processed to determine whether it is part of an email loop that is the response of the system to the email generates a response that requires similar processing by the system. The system implements a series of optional tests on the email and thus the particular tests described hereinbelow their order and implementation are exemplary but not limiting on the scope of the invention. A first test determines whether a filter is to be applied to the email and a second test applies that filter. A first exemplary test is to determine whether an email is from an autosender which if implemented checks the email against known autosenders or for characteristics common to autosenders . If the email is from an authorized autosender the remainder of the process is bypassed Done and the next email message is processed. A second exemplary test is to determine whether an email is from a blacklisted sender . A third exemplary test is to determine whether the email represents a system message other than a registration message that is a message intended for the system itself and not for the user. If the message is not a system message it is then optionally tested for size . A fourth exemplary test is whether the message is large e.g. greater than 25 kB. A large message is rarely from a spammer a large message may be delivered with low risk. A fifth exemplary test determines whether it contains a black listed subject word . A sixth test determines if the email is from a friend . If the email is from an email address on the Friends list whitelist it is delivered . A seventh test determines whether the email is a registration email . If the email is not a registration email the system sends a registration reply to invite the sender to register with the system . In each case where the email fails to qualify for delivery email loop blacklisted sender blacklisted subject awaiting registration the email is saved locally i.e. off of the mail server and deleted from the mail server . The system then checks whether there are emails to restore to the server based on successful qualification of a previously removed email and completes its processing waiting for new emails . If an email is a registration email that is a response to an invitation to become a friend the sender of the email is added to the friends list and previous emails from that sender are marked for restoration . Optionally a user is notified whether there are new emails to review . After processing of the various emails the emails marker for restoration are restored . If the email contains a system message the message is authenticated to ensure that the message is legitimate. If authenticated the system message is processed . If the system message is not authenticated the system message is not processed and other steps may be taken such as adding the sender to the blacklist producing a system warning producing a lockout temporary or manually resettable to impede an attack or the like. System messages or messages which fail system message authentication are saved locally and removed from the server .

The Friends list indicates a set of preauthorized senders. Upon installation of SpamMonster the user can populate this list with the email addresses or part thereof of the people he wants to receive emails from. This can also be filled automatically from an address book or email archive. As senders register themselves to SpamMonster by replying to a challenge email SpamMonster will add such senders to the Friends list itself. It should be noted that the friends list does not need to be populated when SpamMonster is first installed and the user can choose to let the list become populated as senders register themselves.

The Pre Approved subjects list is a list of subjects that will make SpamMonster consider the email as friendly. One classic example of a word that can be used in this list is order . When an order for goods is placed on the Internet the vendor usually emails a copy of the order. By telling SpamMonster to accept all the emails where the word order appears on the subject line the emails from these stores will not be rejected. It is noted that this list can have undesirable effects since it potentially permits all spam with the word order in the subject field to effectively bypass the SpamMonster filtering. In addition to the simple string matching technology a more intelligent content based or activity based filtering protocol may be implemented. For example a filtering component may match a cache of visited web sites with email from corresponding domains to thus match an email confirming an order with the Internet activity which generated the order. Likewise other sorts of intelligent or adaptive learning filtering schemes may be implemented.

The Undesirable senders list is a list of senders that are black listed and thus are bounced no matter what. Entries in that list could include specific political organizations likely phishing threats e.g. PayPal on line banks etc. with which the recipient has no established relationship. Further even of there is a relationship the email could be scrutinized for the existence of hyperlinks to third party sites or IP addresses different from the domain of the apparent email sender. During setup an interview could inquire as to accounts maintained by the user. Often these addresses will be the address of an email robot that replies to the registration emails. This list has priority over all the other rules so that users on that list can not register to become authorized. Because accidental matches may make a recipient outright unreachable to people whose email addresses match the list such listing preferably do not use wildcards or only Internet domains but must match the full email addressee. For example entering de to block pornographic emails from Denmark will also have the side effect of blocking emails from domains like delta.com and as such this list should include only entries including a full email addresses.

The Undesireable subjects list is a list of subjects the user wants bounced no matter what. Typical entries are words like mortgage if you re not in the market for one Xanax Viagra Cialis etc. Like the Undesirable senders list because accidental matches may make a recipient unreachable by people accidentally typing undesired subjects it is preferred that entries be as complete as possible. This list can also have undesirable effects and must also be used with caution.

The Autosenders list is a list that can be populated with known addresses and domains of autosenders such as postmaster or mailer to prevent autoreplies to challenge messages from registering with the system.

The filtering rules are applied to each email on the next scheduled scan after it arrives on the server according to the flow diagram shown in . Emails that do not have elements from one of the five lists are referred to as being from unknown senders. That will be the case of the majority of emails for the typical user. As seen in the flow chart if an email is rejected for reasons other than being in a loop or having a blacklisted element the email is saved locally and SpamMonster sends a registration reply also referred to as a challenge message to the sender similar to the following 

After successfully saving a copy of the email locally and sending the challenge message the email is deleted from the server.

When generating the registration email for an unknown sender SpamMonster may generate as part of the registration email Subject line an 8 character code that is unique to the computer it runs on. To that effect SpamMonster may use elements including but not limited to an Operating System CPU hard drive or other hardware serial number that is guaranteed to be unique. In order to be successful a reply to the registration email effectively a subscription must have in its subject line that exact unique code. If it does not it is an unauthorized attempt to subscribe and the subscription does not succeed.

This ensures that only the senders specifically invited by the user s computer will be able to add themselves to the friends list. It protects against spammers mass subscribing to all SpamMonster users with one email.

SpamMonster pays attention to emails received in short intervals with identical subject lines. That usually signifies that the automatic mode of SpamMonster is conversing with the automatic mode of some server so SpamMonster stops sending registration emails.

SpamMonster scans all the subjects of incoming emails for the magic Your last email to User Name needs confirmation and the matching eight character code if one is being used. If the sender does as instructed and just replies to the registration email SpamMonster will recognize this as a registration email and 

When on a permanent non dial up Internet connection SpamMonster is configured to loop. The SpamMonster system works better if the local email client does not check email regularly since the two clients are competing for the messages on the server. Because SpamMonster can be configured to alert the user when an email is received the user can then go and check his or her email with the email client. On the other hand the spam filter may be synchronized to perform its tasks before the email client draws messages from the server. Thus the auto check feature may trigger SpamMonster first and then immediately thereafter download the mails. SpamMonster may also be configured to cause the email client to check emails after it finishes a scan. It is also possible for an implementation of SpamMonster to operate on the local email archive and thus filter the email after downloading.

When on an on demand phone modem connection it is best if the user runs SpamMonster upon connecting and before the running the email client so SpamMonster can clean up the server before email is downloaded.

The argument has been made that by replying to a spam email may have the effect of confirming your email address to the spammer computer. However when one considers that 99 of the replies the spammer computer gets are bounced from mail servers because the addresses are expired and invalid the email a spammer computer would end up confirming mostly invalid addresses so the possibility is doubtful and of limited adverse impact. Moreover if an advanced spammer software assumes that any reply indicates a bad email address and updates its lists SpamMonster may have the effect of actually removing one s email address from a spammer s list.

One implementation of SpamMonster known as SpamOut is implemented as about 509 lines of Perl script. It leverages the power the Mail POP3Client and Net SMTP Perl modules to implement all the functionality described hereinabove.

An alternate implementation of SpamMonster provides a windows GUI and multi threading. It is written in C to Win32 and its POP3 and SMTP classes directly use the MFC CSocket class. There are of course many other known implementation classes of the POP3 and SMTP protocols. The classes were enhanced with advanced logging and because the MFC CSocket class does not have a timeout feature the POP3 and SMTP classes have a watch dog algorithm running in a separate thread can sever communications after it identifies a timeout. It should be noted that other alternate implementations can be written in other languages such as Java Visual C .Net etc.

Although a GUI is not required to run SpamMonster as demonstrated by the Perl implementation in the interest of useability and simplicity of use the main SpamMonster window is simple a large toolbar and a list of emails. The window is resizeable during which the columns are not resized in a uniform way but according to the need of their content some do not resize others resize as a percentage of the total available area. The status bar shows information about the current communication the time of the last scan and the current status scanning or idle . Of course after setup the program runs silently and does not require generally an interactive user interface. The software controls may also be conveniently accessible in a taskbar such as is generally at the bottom of a Windows Explorer user interface. Indeed the user interface is separate from the application programming interface API of the underlying engine and therefore various types of interfaces or shells may be provided.

Before deleting an email each and every email that is to be deleted by SpamMonster is saved locally that is on the machine on which SpamMonster executes and as such these deleted emails can be restored by SpamMonster or otherwise recovered by the user. The user can inspect emails by right clicking on it and selecting the Properties option.

SpamMonster may also be implemented in an Enterprise version aimed at the Corporate environment with the SpamMonster engine running on a remote server and thus a single SpamMonster engine instance can be used to filter spam according to an individual set common set or hierarchal rules some enterprise wide rules some individual rules in an ordered scheme for each mailbox separately. In this enterprise version optionally individual users may be given access to the GUI or a limited function GUI to manage their own emails. In the case of a multi user system separate encryption of various accounts may be provided and in a corporate environment integration with document management storage and retrieval policies provided. Indeed such policies may be directly implemented in the SpamMonster system both for its own database of removed email messages and for the email system s with which it interoperates. Therefore the SpamMonster system may permit third party separately management email hosts to be integrated with corporate email asnd document management systems.

SpamMonster may also respond to a remote user through commands sent through the email. For example the owner of a computer running SpamMonster while away can ask SpamMonster to do something by sending an email to a monitored account and writing in the subject line of the email something like 

 SM where is a private security password that can be set in the SpamOut Settings dialog is the command you want SpamOut to execute.

Since static passwords transmitted over the internet by email can be intercepted and read this can compromise the security of the computer that is running SpamMonster with remote commands enabled it may be desirable to have embodiments that provide security for this feature. To do this these alternate embodiments use additional information to insure the email is coming from the sender. The following are some methods that can be used alone or in combination with each other to achieve this purpose. In some cases this effectively requires special software on the sending computer. In other cases a manual authentication is possible permitting use of a standard text email client.

A dynamic password may be generated by combining a user password and a time dependent function such that the communication is only valid for a short period. For example including another code similar to the eight digit code used in the anti spoofing feature can be placed in the subject line or body of the email in addition to or in place of the password. For purposes of this discussion that code is referred to as the security code. The security code is unique to the computer sending the email and is generated by a utility from one or a combination of the processor serial number hard drive serial number MAC address or unique hardware installed in the sending computer can be used. The code may be time dependent and pseudorandom and include a digital signature or hash of the message so that interception of the email does not reveal sufficient information to compromise security. The hash or digital signature prevent an unauthorized user from changing the intended command.

The security code s for the computer s that the user wants to send commands from is are entered into a list in SpamMonster or generated automatically during an authentication enrollment protocol. When SpamMonster receives an email with a command it will only process the command if the security code matches a security code in the list. This insures the email is indeed coming from a computer that is authorized to send commands to the computer running SpamMonster.

The security of this method can be further enhanced by using the same utility that generates the security code on the computer sending the email. In this method the security code an encryption key and the time of day are used to generate another code on the fly which is referred to in this discussion as the date security code. The date security code indicates the time the email was sent. The user enters the security code and encryption key for each computer from which SpamMonster will accept commands and indicates a time interval for commands to be valid. For example if the user sets SpamMonster to scan the server every five minutes the user might set the security time interval in SpamMonster to 6 minutes. The user can then send an email with a command to SpamMonster and SpamMonster will see it within the valid time range. When sending an email with a command the utility is used to generate the date security code before sending the email and this code is included in the email. When SpamMonster receives an email with a command it will test the date security code to the list of security codes and corresponding encryption keys and time in order to determine if the command was emailed from an allowed computer within the valid time range. This method results in a date security code that is different each time an email is sent thereby preventing someone from copying and reusing the date security code even within the permitted time. Under this method the user can change the encryption key used by SpamMonster and the utility from time to time. To further enhance the security of this method the algorithm used by SpamMonster and the utility to generate the security code and date security code and be stored externally to SpamMonster and the utility and the algorithm itself can be changed from time to time. In this case the algorithm must be changed on the computer running SpamMonster and all the computers that are allowed to send commands to SpamMonster. In some embodiments SpamMonster can be configured to use a different algorithm for each allowed computer.

One of the advantages of using a security code and date security code as discussed above is that if an allowed computer is lost or stolen the user needs only remove its security code from the list in SpamMonster and the lost or stolen computer can no longer process commands on the computer running SpamMonster.

Another method to insure an email with a command was sent by the user is to utilize a list of trusted IP addresses. In this method trusted IP addresses are entered into a list in SpamMonster and SpamMonster scans the header of the email to determine if the email with the command was sent from a trusted IP address. The command is processed only if there is a match. Likewise other information in the message header can be used for this purpose.

SpamMonster can also use a rolling code authentication protocol to insure a email containing a command was actually sent by an authorized user who may have an automatically generated or manual printed rolling code list.

Interactive challenge response authentication may also be implemented for example a cryptographic protocol personal private information queries e.g. mother s maiden name etc. or the like. In order to subvert man in the middle attacks known cryptographic schemes may be employed.

When using an interactive authentication method SpamMonster can be configured to store commands in a queue and send an authentication message when the number of commands in the queue reaches a predetermined number or when the user requests one. In this way the user can send multiple commands and authenticate them all at once. This especially useful where the protocol limits the communication of multiple commands in a single message.

Yet another method of security is to maintain either a white list of commands that SpamMonster is allowed to process or a black list of commands SpamMonster is not allowed to process.

These examples are not meant to be limiting but to demonstrate that there are various ways to secure remote commands. From these examples methods for securing remote commands will become obvious to a person skilled in the art.

Finally SpamMonster can be programmed to send a reply to the sender of a command to indicate that SpamMonster has received and processed the command.

The software may also respond to FTP and or HTTP requests and or implement a local server using a standard or proprietary protocol.

As would be understood by those skilled in the art the functions discussed herein can be performed on a client side a server side or both. These functions could also be performed on any one or more computing devices in a variety of combinations and configurations and such variations are contemplated and within the scope of the present invention.

Additional aspects of the invention together with the advantages and novel features appurtenant thereto will become apparent to those skilled in the art upon examination of the foregoing. The objects and advantages of the invention may be realized and attained by means instrumentalities and combinations particularly pointed out in the appended claims. The present invention has been described in relation to particular embodiments which are intended in all respects to be illustrative rather than restrictive. Alternative embodiments will become apparent to those skilled in the art to which the present invention pertains without departing from its scope.

From the foregoing it will be seen that this invention is one well adapted to attain all the ends and objects set forth above together with other advantages which are obvious and inherent to the system and method. It will be understood that certain features and sub combinations are of utility and may be employed without reference to other features and sub combinations. This is contemplated and within the scope of the claims.

