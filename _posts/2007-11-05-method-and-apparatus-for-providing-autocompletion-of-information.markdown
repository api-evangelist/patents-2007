---

title: Method and apparatus for providing auto-completion of information
abstract: An approach is provided for auto-completion functions. Textual input is received from a user via an application, a profile metadata is retrieved based on the textual input, a script is generated based on the profile metadata, and the script is transmitted to the application, wherein the script provides auto-completion of information corresponding to the textual input using the profile metadata.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08713029&OS=08713029&RS=08713029
owner: Verizon Patent and Licensing Inc.
number: 08713029
owner_city: Basking Ridge
owner_country: US
publication_date: 20071105
---
The advent of global communication networks e.g. the Internet has served as a catalyst for the ubiquity of digital computing devices as well as the inauguration of increasingly more data centric applications such as web based entry forms and questionnaires including multiple input fields. In addition to enabling businesses such as service providers to collect vast amounts of consumer data these applications also enable information to be efficiently stored and passed between one or more end points. As such when customers sign up for new services or participate in surveys online service providers generally require consumers to repeatedly enter large quantities of information such as mundane personal information e.g. name address telephone number etc. Generally the amount of time taken by a customer to input this information is directly proportional the nature of the information being requested and the accuracy with which a customer enters the data. Accordingly data entry often becomes trite and rather burdensome. It is not surprising then that the automated software industry is becoming a critical and ever growing market segment. Even still advances in technology services and affordability can be better applied to foster the accuracy interactivity and speed with which automating software performs.

Therefore there is a need for an approach that seamlessly provides robust techniques for efficient automatic and accurate completion of information.

A preferred apparatus method and software for providing auto completion of information are described. In the following description for the purposes of explanation numerous specific details are set forth in order to provide a thorough understanding of the preferred embodiments of the invention. It is apparent however that the preferred embodiments may be practiced without these specific details or with an equivalent arrangement. In other instances well known structures and devices are shown in block diagram form in order to avoid unnecessarily obscuring the preferred embodiments of the invention.

It is noted that address validation is typically one of the first operations that businesses dealing with consumers perform. Within online environments consumers and or customer service representatives generally input addressing information into web based applications such as web browsers. Conventional web browsers however are generally made thin i.e. typically focus primarily on conveying input and output between a user and a server. As such entering information into these interfaces usually requires a user to manually input the entirety of an input parameter. New classes of web browsers including rich internet applications may provide auto complete functions however these applications generally require previous entries to be remembered before the auto completion features are made available. While useful these auto completions are limited to previously acknowledged information and therefore are unavailable for first time entries. Thus it is apparent that improvements are needed.

As shown system includes an application server accessible to one or more client devices via for example network e.g. the Internet. Application server may access as well as provide access to one or more repositories of network such as databases and . In this manner application server includes an auto completion module configured to facilitate data entry in applications such as a browser application executing on a client device such as client device . According to one embodiment browser application provides information gathering functions for or related to customer service procedures of a telecommunications service providers. For example the information can relate to one or more wire centers . It is contemplated however that system may embody many forms and include multiple and or alternative components and facilities.

According to one embodiment textual input fields are provided by browser application for users e.g. customers customer service representatives at client devices to enter data i.e. textual information. Textual information may include any type of data related to the processes of application but more specifically may include textual information such as demographic information e.g. names gender race occupation etc. addressing information e.g. street city state zip code etc. credentials information e.g. social security numbers credit card numbers telephone numbers user names passwords etc. business information e.g. wire center names trouble ticket codes purchasing data medical data recruitment data etc. and financial information e.g. bank account numbers routing numbers etc. as well as any other suitable textual input. As such application server is configured to receive textual input from a user to generate one or more scripts which provide client devices e.g. browser applications with auto completion functions even when the user is entering the information for the first time. That is scripts may be custom built based on the input of a user and implemented to predict and auto complete the rest of the data to be input using pre built profiles describing the data. Thus certain embodiments of system stem from the recognition that users can benefit from more flexible robust methods of auto completion that are driven based on the incremental input of the users and operate so as to reduce the number of keystrokes or other input means the user must perform.

As seen in components at and included within system are connected to one or more networks e.g. network and or network . These networks may include any type of network such as for example a public data network e.g. the Internet various intranets local area networks LAN wide area networks WAN the public switched telephony network PSTN integrated services digital networks ISDN other private packet switched networks or telephony networks as well as any additional equivalent system or combination thereof. Networks and may employ various access technologies such as cable networks satellite networks subscriber television networks digital subscriber line DSL networks optical fiber networks hybrid fiber coax networks worldwide interoperability for microwave access WiMAX networks wireless fidelity WiFi networks other wireless networks e.g. 3G wireless broadband networks mobile television networks radio networks etc. terrestrial broadcasting networks provider specific networks e.g. Verizon FiOS network and the like. As such networks and may utilize any suitable protocol supportive of data communications e.g. transmission control protocols TCP internet protocols IP user datagram protocols UDP remote desktop protocol RDP hypertext markup languages HTML dynamic HTML DHTML simple object access protocol SOAP file transfer protocols FTP telnet hypertext transfer protocols HTTP asynchronous transfer mode ATM wireless application protocols WAP socket connections e.g. secure sockets layer SSL Ethernet frame relay and the like to logically connect the various components of system .

Accordingly client devices upon which various embodiments may be executed can include for example any computing telephony or mobile apparatus capable of sending and or receiving data. Computing devices may include desktop computers notebook computers servers terminal workstations console gaming systems multi processor systems microprocessor based or programmable consumer electronics minicomputers mainframe computers customized hardware or other equivalent apparatus. Telephony devices may comprise plain old telephones wireless telephones cellular telephones satellite telephones voice over internet protocol telephones and the like. Mobile devices may include personal digital assistants PDA pocket personal computers smart phones tablets handsets portable gaming systems pagers and customized hardware as well as any other suitable mobile technology. Moreover client devices may be used alone or in combination with one another to implement various exemplary embodiments.

Databases and may be multi dimensional analytical processing and or any other suitable database for storing business intelligence such as the informational forms previously delineated. As such communication between database database and application server may be accomplished via one or more application programming interfaces API supporting one or more query languages such as common query language CQL extensible markup language XML path language object query language OQL and or structured query language SQL as well as any other suitable language. According to one embodiment data stored in or to databases and is structured or compartmentalizes into fields tables or any other suitable data structure such as delimited text files. For example addressing information may be stored to database having a data structure including columns and rows corresponding to particular data fields and data entries respectively. The data structure may be propagated with data entries corresponding to the addressing information for the purpose of forming scripts and or auto complete functions. It is noted that the aforementioned data structures are merely exemplary and are not intended to limit the nature or structure of databases and . The various components of addressing information are explained in more detail according to .

For the purposes of illustration the auto completion module operates to auto complete address information. Accordingly a profile can contain information such as the number of streets present and or information regarding the directional prefixes in the streets.

As mentioned address validation is one of the first operations that companies which directly deal with customers perform. The address could be entered directly by a customer such as in a website or by a customer service representative who would get the address from the customer and input the information into a software application. In either instance however these individuals may utilize a browser application e.g. browser application to input the information. This process can be time consuming depending on the address itself the communication between the representative and the customer and the accuracy of the data entered. Table 1 enumerates exemplary address information.

In this manner an exemplary address may be provided as follows 1 E Telecom Parkway SW Temple Terrace Fla. 33617. It is noted that software applications e.g. application that perform address validation might require the address to be input as individual address components listed above or as a complete string or as a combination of both address components and strings. To automate the address input process part of the address first may be obtained and then used to determine predict the rest of the address thereby reducing the number of keystrokes performed the user e.g. customer service representative as well as the possibility of mismatches and or typographical errors.

For example a user may seek to enter the address 1 E Telecom Parkway SW Temple Terrace Fla. 33617. In this case the user may be prompted by browser application to input the zip code and or city first. In the event there is only one city in the zip code the user may not be prompted to enter the city name. In the event that there is more than one city associated to the zip code the user may be prompted to choose one of the cities before proceeding. Once input the street name E Telecom Parkway SW may be automatically completed if 33617 Temple Terrace only includes one street E Telecom Parkway SW. If however two streets exist E Telecom Parkway SW and W Telecom Parkway SW then the street name may be auto completed as soon as the customer types E or W or the streets may be provided within a drop list of selectable entries for the user to choose from. Accordingly the process of data entry may be automated even for first time entries. In the above examples the profile metadata built for 33617 Temple Terrace would indicate that there is only one or two streets and hence the auto completion module would proceed to retrieve the actual street names and send it to the browser application . However if the profile metadata indicates that there are more than for example 100 streets in Temple Terrace 33617 the auto completion module would proceed to retrieve other profile metadata examples listed below such as total number of streets with prefixes and to generate a script using the profile metadata. The auto completion module may send the script or the profile metadata or both to the application . In some cases the profile metadata may be embedded in the script as well. The script may also contain custom built information using the profile metadata or the data or both which might aid in auto completion or recognizing a precise moment for auto completion. According to one embodiment the script when run in the application can continuously process the textual input by the user recognize various components of the data input by the user and use them to detect the moment at which a query can be submitted to a backend application for successful auto completion using the least amount of data exchange between the browser and the backend application using the least number of key strokes .

Further the address information categories of Table 1 may also be utilized for storage purposes. That is the categories may be made to correspond to elements of a multidimensional relational table of database wherein actual address information is parsed into its individual components and stored according to one or more zip code and or community city name combinations. The relational table may include one or more rows and or columns wherein individual rows may be utilized to correspond to complete address entries while individual columns may be utilized to correspond to the various address information components. Such architecture enables application server for instance to efficiently acquire necessary information from database . It is contemplated however that any other storage scheme may be utilized such as a hierarchical model network model etc. as well as combinations thereof.

According to one embodiment a profile metadata can be built based on the data stored in database . That is profile metadata can be structured and encoded to correspond to particular zip code and community city name combinations. The information built in the profile metadata may be utilized to assist with auto completing the address input to a input field of an application e.g. application by the user. It is noted that metadata is generally considered data about data but more specifically metadata can be utilized to describe all aspects of and data distributed through system . In this manner profile metadata provides a deeper understanding of the information quality and structure of the data as it resides in for example an underlying database. As such profile metadata may be generated and periodically updated by a computing device such as a back server not illustrated of network . Namely the actual data upon which profile metadata is constructed may be retrieved from database and analyzed by the computing device to structure and encode profile metadata. According to certain embodiments profile metadata includes statistics and information about the underlying data which may be utilized to determine uses of the actual data provide metrics on data quality assess whether data may be integrated into an application and create an enterprise view of the data as well as any other suitable use. Thus components of system may utilize generated metadata for control guiding and or data entry purposes such as for auto completion purposes.

In an exemplary embodiment Table 2 provides the information built in the metadata profile for given community and zip code combinations 

According to certain embodiments the profile metadata information e.g. total number of streets and total number of streets with directional prefix can be utilized in a variety of ways. In the case of the total number of streets if a zip code community combination has only one street then the street can be completely auto populated the moment the customer finalizes a community and zip code input. Namely it will not be necessary to wait for the user to start typing the street name to populate a corresponding input field s . Also if a particular zip code and community combination includes a predetermined number of values e.g. 10 streets all the 10 streets may be displayed upfront for the user to select from which can be provided even before the user begins to type anything. This may be accomplished via for example a drop down list of selectable entries.

As for the total number of streets with a directional prefix if none of the streets have directional prefixes the recognition of the street name is simplified. In such case it can be assumed that what the user inputs e.g. types is part of the street name. If there is only one directional prefix for the entire zip community combination then any textual input other than that directional prefix can be assumed to be a part of the street name.

In this example the browser application resides within a computing device which may include desktop computers notebook computers pocket personal computers servers terminal workstations personal digital assistants PDA smart phones tablets handsets gaming systems customized hardware or other equivalent apparatus such as the computing hardware described with respect to .

In general the purpose of the profile metadata is to recognize the possibility of auto completion instantaneously. The actual data associated profile metadata by itself or supporting data wherein the data is of a manageable size and can be sent to the computing device for auto completion alternatively any one of such data can aid in the generation of a client side script which when run in the computing device can be used for auto completion either by using the data metadata or by initiating a transaction to a backend application or processor not shown at the appropriate moment to provide the necessary information for auto completion. The profile metadata thus is useful in auto completion using the least amount of keystrokes while at the same time minimizing the data exchange between the browser and the backend application for auto completion.

In step the browser application may receive the script the profile metadata the actual data or any combination thereof for auto completion of the information. That is the profile metadata itself or the actual data can be used to auto complete the information in such a case the script may not be generated at all. However in the case in which a script is needed upon receipt of the script the browser application can execute the script to perform auto completion of the information that the user has input e.g. typed as in step . According to particular embodiments browser application may also be provided via application server with all or portions of the actual data utilized to construct the profile metadata. In one implementation generated scripts are constructed to include apart from auto completion commands the metadata and or the actual data corresponding to the zip code and community combination input by the user to browser application .

The above processes are now illustrated with respect to addressing information. In an address validation scenario as performed using the browser application of the auto completion operation is as follows. The user inputs a part of the address information such as zip code and community parameters. The request is sent to application server which retrieves the profile metadata for the input combination of zip code and community. The application server then generates a customized client side script based on the profile metadata and in certain instances supporting data retrieved from the database . Application server then sends the script to the browser application . The client side script via browser application processes the inputs from the user to aid the user in auto completing the information and if necessary by using supporting data. The supporting data for example may be actual street names house numbers etc. The client side script can also initiate a transaction to the backend application to retrieve data which will aid in auto completion of customer input.

It is noted that conventionally browsers have been provided with a mechanism to remember previous entries and auto complete the same when the user tries reenter the data. However for this mechanism to operate the user must have entered the data already and such data must have been stored locally in for instance a memory of an executing computing device. By contrast the auto completion module provides auto completion functions to software applications such as browser applications even when the user is inputting the data for the first time i.e. no locally stored information and does not require any information to be stored on the local computing device.

The processes described herein for providing auto completion of information may be implemented via software hardware e.g. general processor Digital Signal Processing DSP chip an Application Specific Integrated Circuit ASIC Field Programmable Gate Arrays FPGAs etc. firmware or a combination thereof. Such exemplary hardware for performing the described functions is detailed below.

The computer system may be coupled via the bus to a display such as a cathode ray tube CRT liquid crystal display active matrix display or plasma display for displaying information to a computer user. An input device such as a keyboard including alphanumeric and other keys is coupled to the bus for communicating information and command selections to the processor . Another type of user input device is a cursor control such as a mouse a trackball or cursor direction keys for communicating direction information and command selections to the processor and for controlling cursor movement on the display .

According to an embodiment of the invention the processes described herein are performed by the computer system in response to the processor executing an arrangement of instructions contained in main memory . Such instructions can be read into main memory from another computer readable medium such as the storage device . Execution of the arrangement of instructions contained in main memory causes the processor to perform the process steps described herein. One or more processors in a multi processing arrangement may also be employed to execute the instructions contained in main memory . In alternative embodiments hard wired circuitry may be used in place of or in combination with software instructions to implement the embodiment of the invention. Thus embodiments of the invention are not limited to any specific combination of hardware circuitry and software.

The computer system also includes a communication interface coupled to bus . The communication interface provides a two way data communication coupling to a network link connected to a local network . For example the communication interface may be a digital subscriber line DSL card or modem an integrated services digital network ISDN card a cable modem a telephone modem or any other communication interface to provide a data communication connection to a corresponding type of communication line. As another example communication interface may be a local area network LAN card e.g. for Ethernet or an Asynchronous Transfer Model ATM network to provide a data communication connection to a compatible LAN. Wireless links can also be implemented. In any such implementation communication interface sends and receives electrical electromagnetic or optical signals that carry digital data streams representing various types of information. Further the communication interface can include peripheral interface devices such as a Universal Serial Bus USB interface a PCMCIA Personal Computer Memory Card International Association interface etc. Although a single communication interface is depicted in multiple communication interfaces can also be employed.

The network link typically provides data communication through one or more networks to other data devices. For example the network link may provide a connection through local network to a host computer which has connectivity to a network e.g. a wide area network WAN or the global packet data communication network now commonly referred to as the Internet or to data equipment operated by a service provider. The local network and the network both use electrical electromagnetic or optical signals to convey information and instructions. The signals through the various networks and the signals on the network link and through the communication interface which communicate digital data with the computer system are exemplary forms of carrier waves bearing the information and instructions.

The computer system can send messages and receive data including program code through the network s the network link and the communication interface . In the Internet example a server not shown might transmit requested code belonging to an application program for implementing an embodiment of the invention through the network the local network and the communication interface . The processor may execute the transmitted code while being received and or store the code in the storage device or other non volatile storage for later execution. In this manner the computer system may obtain application code in the form of a carrier wave.

The term computer readable medium as used herein refers to any medium that participates in providing instructions to the processor for execution. Such a medium may take many forms including but not limited to non volatile media volatile media and transmission media. Non volatile media include for example optical or magnetic disks such as the storage device . Volatile media include dynamic memory such as main memory . Transmission media include coaxial cables copper wire and fiber optics including the wires that comprise the bus . Transmission media can also take the form of acoustic optical or electromagnetic waves such as those generated during radio frequency RF and infrared IR data communications. Common forms of computer readable media include for example a floppy disk a flexible disk hard disk magnetic tape any other magnetic medium a CD ROM CDRW DVD any other optical medium punch cards paper tape optical mark sheets any other physical medium with patterns of holes or other optically recognizable indicia a RAM a PROM and EPROM a FLASH EPROM any other memory chip or cartridge a carrier wave or any other medium from which a computer can read.

Various forms of computer readable media may be involved in providing instructions to a processor for execution. For example the instructions for carrying out at least part of the embodiments of the invention may initially be borne on a magnetic disk of a remote computer. In such a scenario the remote computer loads the instructions into main memory and sends the instructions over a telephone line using a modem. A modem of a local computer system receives the data on the telephone line and uses an infrared transmitter to convert the data to an infrared signal and transmit the infrared signal to a portable computing device such as a personal digital assistant PDA or a laptop. An infrared detector on the portable computing device receives the information and instructions borne by the infrared signal and places the data on a bus. The bus conveys the data to main memory from which a processor retrieves and executes the instructions. The instructions received by main memory can optionally be stored on storage device either before or after execution by processor.

While the invention has been described in connection with a number of embodiments and implementations the invention is not so limited but covers various obvious modifications and equivalent arrangements.

