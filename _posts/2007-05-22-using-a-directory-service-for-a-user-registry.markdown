---

title: Using a directory service for a user registry
abstract: An apparatus and method provide an architected way for a web server to access a user registry in a directory service such as LDAP. In the preferred embodiments, the logic for presenting and processing a web page is encapsulated from the logic that interacts with the directory service, making it easy for a programmer to make changes to the a user registration form without having to have a detailed knowledge of the directory service and its interfaces.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=07653750&OS=07653750&RS=07653750
owner: International Business Machines Corporation
number: 07653750
owner_city: Armonk
owner_country: US
publication_date: 20070522
---
This application is a divisional of patent application APPARATUS AND METHOD FOR USING A DIRECTORY SERVICE FOR A USER REGISTRY Ser. No. 09 799 902 filed by Patrick J. Fleming on Mar. 6 2001 which is incorporated herein by reference.

This invention generally relates to computer systems and more specifically relates to an apparatus and method for tracking users of a computer system.

Since the dawn of the computer age computer systems have evolved into extremely sophisticated devices and computer systems may be found in many different settings. The widespread proliferation of computers prompted the development of computer networks that allow computers to communicate with each other. With the introduction of the personal computer PC computing became accessible to large numbers of people. Networks for personal computers were developed that allow individual users to communicate with each other.

One significant computer network that has recently become very popular is the Internet. The Internet grew out of this proliferation of computers and networks and has evolved into a sophisticated worldwide network of computer system resources commonly known as the world wide web or WWW. A user at an individual PC i.e. workstation that wishes to access the Internet typically does so using a software application known as a web browser. A web browser makes a connection via the Internet to other computers known as web servers and receives information from the web servers that is rendered to the user s workstation. Information transmitted from the web server to the web browser is generally formatted using a specialized language called Hypertext Markup Language HTML and is typically organized into pages known as web pages.

Web servers or web sites often need to maintain a list of users who have registered with the web server. This list is often referred to as a user registry. The user registry contains information about the user that allows the web server to authenticate and authorize the user and to customize information presented to the user. Past web server applications included a custom user registry. This required each application to maintain its own user registry.

The development of directory services has made it possible to share information between applications in an efficient manner. LDAP is the Lightweight Directory Access Protocol which is one example of a known protocol for accessing a directory service in a computer network such as the Internet. With the commercial acceptance of LDAP several web server applications may now access a common user registry by providing logic that accesses Application Programming Interfaces APIs that interact with the LDAP directory in a defined manner. However this requires that each application understand the schema for the LDAP directory and contain the logic for interacting with the LDAP directory. This places a large burden on each application that must be maintained as the application changes. Without an apparatus and method for encapsulating different portions of code for a user registry in a directory service into different segments that may be separately maintained programmers will be forced to continue to provide user registry logic and directory service interface logic in each application thereby providing a great duplication of effort resulting in unnecessary effort and cost to the industry.

According to the preferred embodiments an apparatus and method provide an architected way for a web server to access a user registry in a directory service such as LDAP. In the preferred embodiments the logic for presenting a web page is encapsulated from the logic that interacts with the directory service making it easy for a programmer to make changes to the a user registration form without having to have a detailed knowledge of the directory service and its interfaces.

The foregoing and other features and advantages of the invention will be apparent from the following more particular description of preferred embodiments of the invention as illustrated in the accompanying drawings.

The method and apparatus of the present invention has particular applicability to users that access information via the Internet and to the use of directory services on a web server. For those individuals who are not familiar with the Internet or with directory services a brief overview of relevant concepts is presented below.

An example of a typical Internet connection is shown by the apparatus in . A user that wishes to access information on the Internet typically has a computer workstation referred to as a web client that executes an application program known as a web browser . Under the control of web browser web client workstation sends a request for a web page over the Internet . Each web server on the Internet has a known address termed the Uniform Resource Locator URL which the web browser uses to connect to the appropriate web server. Because web server can contain more than one web page the user will also specify in the address which particular web page he or she wants to view on web server . A web server computer system executes a web server application monitors requests and services requests for which it has responsibility. When a request specifies web server web server application generally accesses a web page corresponding to the specific request and transmits the web page to the web browser on the user s workstation . Known web browsers include Netscape Communicator and Microsoft Internet Explorer.

A web page may contain various types of data including text graphics and other forms of information collectively known as MIME data. Most web pages include visual data that is intended to be displayed on the monitor of user workstation . Web pages are generally written in Hypertext Markup Language HTML or as Java server pages .jsp files . When web server receives a web page request it will send the requested web page across the Internet to the requesting web browser . Web browser understands HTML and Java and interprets the web page and outputs the web page to the monitor or display of user workstation . This web page displayed on the user s screen may contain any suitable MIME data including text graphics audio elements video elements and links which reference addresses of other web pages . The user can invoke other web pages by clicking on these links using a mouse or other pointing device. This entire system of web pages with links to other web pages on other servers across the world is known as the World Wide Web .

One function that is common among many web sites is the need to register users to the web site. The registration may serve one or more important functions such as receiving from the user security information to allow the user to access the web site customizing the presentation of web pages according to the answers to questions in a questionnaire that is provided to the user during registration allowing the user to enter credit card information for purchases at the web site and many other functions.

Referring now to an apparatus includes a client server computer system that includes a web client connected to a web server via the Internet . The web browser application on the web client receives web pages such as registration page from the web server application in the web server computer system . We assume that a web server application includes a userRegistration.jsp program which is a Java server page that is sent as a registration page to the web browser . Registration page is preferably a form that a user can use to submit required information so register with the web site. The user fills in the form with appropriate information then clicks on a submit or equivalent button on the registration page to submit the information in the form to the web server application . The form information is passed to a userRegistration servlet which takes the data in the form and places it in a dedicated user registry within the user registration servlet .

One significant disadvantage of having a user registry within a user registration servlet is that the user registry is only accessible to the user registration servlet and hence the web server application that includes the user registration servlet . In most web server computer system there are a multitude of web server applications like in all executing at the same time. If each web server application has to build its own user registry a great duplication of effort will occur in the coding of each web server application. Recent developments centralize information in a directory service that allows multiple applications to access the same data. One example of a known directory service access method is Lightweight Directory Access Protocol LDAP discussed below.

LDAP is the Lightweight Directory Access Protocol which is a known protocol for accessing a directory service in a computer network such as the Internet. The predecessor for LDAP is Directory Access Protocol DAP which is part of X.500 a standard for directory services in a network. DAP is very powerful but has substantial overhead as well. Researchers at the University of Michigan developed LDAP in an attempt to lighten up DAP to provide many of its benefits without all of the associated overhead. Their attempts have met with resounding success as measured by the widespread acceptance by many companies of LDAP as a standard for networked directory services.

LDAP is a directory service that runs over Transmission Control Protocol Internet Protocol TCP IP . The LDAP directory service follows a client server model. One or more LDAP servers contain the directory data. An LDAP client connects to an LDAP server and makes a request. The server responds with a reply or with a pointer or referral to another LDAP server. Because LDAP is a directory service rather than a database the information in an LDAP directory is usually descriptive attribute based information. LDAP users generally read the information in the directory much more often than they change it. Updates are typically simple all or nothing changes. Common uses of LDAP directories include online telephone directories and e mail directories and more recently user registries.

The LDAP information model is based on an entry which contains information about some object. Entries are typically organized into a specified tree structure the organization of which is defined by a Directory Information Tree DIT . LDAP defines a number of directory service operations with respect to the tree and data contained therein including authentication search and retrieval entry addition deletion and entry modification.

In an LDAP directory an entry is a collection of attributes that has a name called a distinguished name DN . The DN is used to refer to the entry unambiguously. Each of the entry s attributes has a type and one or more values. The types are typically mnemonic strings like cn for common name or mail for an e mail address. The values depend on what type of attribute it is. For example a mail attribute might contain a text e mail address while a jpegPhoto attribute would contain a photograph in binary JPEG JFIF format.

LDAP allows control over which attributes are required and allowed in an entry through the use of a special attribute called objectclass. The values of the objectclass attribute determine the schema rules the entry must obey. An entry is referenced by its distinguished name which is constructed by taking the name of the entry itself called the relative distinguished name or RDN and concatenating the names of its ancestor entities. Details of LDAP are available in W. Yeong T. Howes and S. Kille Lightweight Directory Access Protocol Network Working Group Request for Comments 1777 March 1995.

Recent developments in web servers have recognized the value of providing an LDAP server so that multiple applications may access the same directory defined and maintained by LDAP. One suitable configuration for a prior art client server computer system that includes an LDAP directory is shown in . A web client computer system includes a web browser that displays a registration page which is the userRegistration.jsp page after it is transmitted from web server application via Internet to web browser application . A user registration servlet includes LDAP logic that invokes the LDAP Application Programming Interfaces APIs within the LDAP client to access information stored in the user registry within LDAP storage . The LDAP server receives the commands from the LDAP client and processes the commands according to LDAP schema to access the LDAP storage wherein is contained the user registry . Note that LDAP schema is the Directory Information Tree DIT referenced above. Storage contains a plurality of entries. These entries can have different forms depending on their relationship to the other entries as defined in the LDAP schema . For example one entry may represent a company while another entry may represent an employee of the company. Entries are typically in cleartext form and may therefore be easily read by the user or application that accesses them.

The problem with the prior art configuration shown in is that each web server application must include logic e.g. that knows how to invoke LDAP APIs to interact with the LDAP server . As a result web server application includes code from a variety of different disciplines web page presentation e.g. design of the registration page web page presentation logic e.g. userRegistration.jsp business logic e.g. User Registration Servlet that processes data from the registration form and that determines what operations on the user registry are required and directory service logic e.g. LDAP logic that knows how to accomplish the operations on the user registry in the specific directory service being used. Due to the specialization that generally occurs in the computer programming field these different disciplines will likely require code from different programmers. As a result a typical web server application as known in the prior art in may be a combination of code from several different programmers that is put together to achieve the overall desired functionality of the web server application . Having code from several different disciplines and programmers makes the web server application much more difficult to maintain. It would be preferable if the code for the different disciplines could somehow be encapsulated from each other so that changes to code in one of these disciplines would not require a knowledge of the other disciplines or corresponding changes to the code in the other disciplines.

The preferred embodiments of the present invention achieve encapsulation between web page presentation and display logic and directory service logic so that maintenance of the code is greatly simplified. This encapsulation allows a programmer to make changes to the web page presentation and display logic without necessarily requiring changes in the directory service logic. The result is code that is much easier to maintain.

Referring now to a client server computer system includes a web client computer system running a web browser . The web browser is coupled to the Internet which is in turn coupled to a web server computer system . The web server computer system includes a web server application a formatting mechanism a directory service interface and a directory . The web server application suitably includes a web page and an input and formatting mechanism for receiving and formatting form data submitted to the web server application by a user. The input and formatting mechanism produces an output in a first format which is input to a formatting mechanism which formats data on its input into a second format. The data in the second format is then processed by the directory service interface which processes the received data and generates therefrom one or more commands to the directory server within the directory . The directory server processes the commands according to the schema defined for the directory to access the user registry within the directory storage .

A specific implementation of the embodiment in is shown as client server computer system in which replaces the abstract implementations in with more concrete implementations that will function together in an architected way. A web client web browser application and registration page are suitably similar to the corresponding elements and in . The web server computer system includes a web server application that includes logic to display a web page to a web browser and that includes logic for processing form data submitted by a web browser. The userRegistration.jsp is a Java server page that defines the registration page that is displayed to a user. The User Registration servlet is a Java servlet that extracts data from an input form and that generates from the extracted data an Extensible Markup Language XML document which is output to a UserRegistry bean . XML is a World Wide Web Consortium standard that lets a person create their own schema for tagging data. The UserRegistry bean uses information in an Extensible Stylesheet Language XSL stylesheet to process the XML document into a Directory Services Markup Language DSML document. An XSL stylesheet is simply a set of rules that describe how to convert one XML format into some output form which is a DSML document for the specific embodiment shown in . DSML is an accepted specification for providing directory services via a markup language. The DSML document is output to an LDAP bean which processes the DSML document and generates therefrom appropriate commands to the LDAP interface which is termed the Java Naming and Directory Interface JNDI . Note that JNDI is a trademark of Sun Microsystems.

Commands to the JNDI result in the LDAP server performing one or more operations according to its schema to access the user registry within LDAP storage . The LDAP bean effectively encapsulates knowledge of the LDAP directory so that a programmer can access the user registry without having any knowledge of the internal workings or command syntax of LDAP.

Referring now to a method shows the steps that are suitably performed in accordance with the preferred embodiments for the specific configuration shown in . Method begins when a user references a URL that includes a reference to a web page userRegistration.jsp step . In response to the request from the user the userRegistration.jsp web page is sent to the browser as a user registration form step . The user then fills out the registration form and submits the form which passes the form to the userRegistration servlet step . The userRegistration servlet the extracts the data from the form and formats the data into an XML document which it passes to the userRegistry bean step . Next the userRegistry bean uses an XSL stylesheet to convert the XML document into a DSML output document which is output to the LDAP bean step . The LDAP bean then converts the DSML document to calls to the JNDI step . The calls to JNDI then access the user registry in the LDAP server according to the LDAP schema step .

A specific example in accordance with the client server computer system of is shown in . shows a sample display window that is displaying a user registration form to a user. We assume for this example that the user registration form requests the user s first name last name userID password eMail address and telephone number and that a user named Joe Miller inputs his information in the appropriate fields as shown in . Once the user has entered the appropriate information the user clicks on the Submit button . If the user decides not to register the user may click on the Cancel button to cancel the registration operation.

A suitable XML document that could represent the data in the user registration form of is shown in . Since it is an XML document it starts out with the standard XML header . The XML document consists of elements. Each element starts and ends with a tag which is contained within . An element starts with a begin tag for example and ends with an end tag for example which is denoted by the before the tag name. The use of elements and tags is a standard XML convention. The outer most element VisitorRegistrationInfo describes all of the information obtained from the user during registration. Within this element are additional elements describing information about a single visitor user . Note that the XML document defines tags FirstName LastName UserID Password eMail and Telephone which correspond to the fields where the user may enter information on the form as shown in . Note that the values for the respective fields in are the values that were entered into the form of by the user. The XML document of is therefore the output of the userRegistration servlet shown in . This XML document is then passed to the userRegistry bean .

A suitable DSML document that could represent the data in the XML document of is shown in . The DSML document follows the DSML 1.0 specification as defined by the DSML organization and found at the following URL www.dsml.org. The information within a DSML document is sufficient to describe one or more directory entries. Since a DSML document is a type of XML document the DSML document is comprised of elements where each element is denoted with a start and end tag. A dsml entry element describes a single directory entry. The element starts with the Distinguished Name DN of the directory entry to be created in the user registry containing the visitor s information. The dsml objectclass element specifies the object classes to be used for the directory entry. These object classes are further defined in the LDAP server s schema. Each of the dsml attr elements specify the value of a directory entry s attribute. The name of the attribute is denoted by the value of name parameter. The dsml value element denotes the value of the attribute. For example the first dsml attr element in is for the attribute cn which defines the user s common name and the attribute has a value of Joe Miller .

The userRegistry bean uses an XSL stylesheet as shown in to process the XML document and generate therefrom the DSML document shown in . Each DSML tag shown in is copied to the DSML document. For the dsml attr element the xsl value of element is used to select the value from the specified XML document tag. The transformation is performed by XMLTransform class s transformXMLToDSMLDDocument method that is invoked by the UserRegistration servlet.

LDAP schema is used by LDAP server to identify the attributes and object classes allowed when creating directory entries. If we assume that web server computer system is an IBM iSeries 400 computer system running OS 400 directory services the LDAP schema that is provided with OS 400 directory services will need to be modified to support additional attributes for creating directory entries in the user registry. Most of the attributes needed for visitor information such as those shown in are provided with OS 400 directory services. However one additional attribute userInterests and its corresponding object class need to be added to the schema. One suitable way to modify the LDAP schema for OS 400 V4R5 is to use the ldapmodify utility from a workstation command line OS 400 command line or OS 400 Qshell command line. The schema modifications must be defined in a text file in LDAP Definition Interchange Format LDIF . The command from the OS 400 Qshell would be ldapmodify d w f Note that when using ldapmodify from the OS 400 command line the text file must be located in the Integrated File System IFS and the h hostname and p port number options are not required. One suitable example of the LDIF file to modify the schema is shown in . For this example we use a text string to represent the object identifier of the new attribute and the object class. Lines through of the LDIF file shown in are based on the LDIF standards and denote that the LDIF file is being used to modify the server s schema by adding a new attribute type. Lines through describe the attribute being added. The required information object identifier name syntax access class and length is provided for the new attribute type. The last four lines of specify modifying the server s schema by adding a new object class called Visitor. The required information for an object class object identifier name superior type of object class and optional attributes is provided in the last line of . Once the schema is modified the LDAP server is ready to be used for the user registry.

Referring now to one specific implementation of a web server computer system in accordance with the preferred embodiments is an IBM iSeries 400 computer system . Computer system comprises a processor connected to a main memory a mass storage interface a display interface and a network interface . These system components are interconnected through the use of a system bus . Mass storage interface is used to connect mass storage devices such as a direct access storage device to computer system . One specific type of direct access storage device is a read write CDROM drive which may store data to and read data from a CDROM .

Main memory in accordance with the preferred embodiments contains data an operating system web server application userRegistry bean LDAP bean and LDAP directory . Computer system utilizes well known virtual addressing mechanisms that allow the programs of computer system to behave as if they only have access to a large single storage entity instead of access to multiple smaller storage entities such as main memory and DASD device . Therefore while data operating system web server application userRegistry bean LDAP bean and LDAP directory are shown to reside in main memory those skilled in the art will recognize that these items are not necessarily all completely contained in main memory at the same time. It should also be noted that the term memory is used herein to generically refer to the entire virtual memory of computer system .

Data represents any data that serves as input to or output from any program in computer system . Operating system is a multitasking operating system known in the industry as OS 400 however those skilled in the art will appreciate that the spirit and scope of the present invention is not limited to any one operating system. The specific functions for each of the web server application userRegistry bean LDAP bean and LDAP directory are described above with reference to .

Processor may be constructed from one or more microprocessors and or integrated circuits. Processor executes program instructions stored in main memory . Main memory stores programs and data that processor may access. When computer system starts up processor initially executes the program instructions that make up operating system . Operating system is a sophisticated program that manages the resources of computer system . Some of these resources are processor main memory mass storage interface display interface network interface and system bus .

Although computer system is shown to contain only a single processor and a single system bus those skilled in the art will appreciate that the present invention may be practiced using a computer system that has multiple processors and or multiple buses. In addition the interfaces that are used in the preferred embodiment each include separate fully programmed microprocessors that are used to off load compute intensive processing from processor . However those skilled in the art will appreciate that the present invention applies equally to computer systems that simply use I O adapters to perform similar functions.

Display interface is used to directly connect one or more displays to computer system . Display may be simple display devices or fully programmable workstations and are used to allow system administrators to communicate with computer system .

Network interface allows computer system to send and receive data to and from any network to which the computer system may be connected to communicate with one or more computer systems that are coupled to the network . Network may be a local area network LAN a wide area network WAN or more specifically the Internet. Suitable methods of connecting to the Internet include known analog and or digital techniques as well as networking mechanisms that are developed in the future. Many different network protocols can be used to implement a network. These protocols are specialized computer programs that allow computers to communicate across a network. TCP IP Transmission Control Protocol Internet Protocol used to communicate across the Internet is an example of a suitable network protocol.

At this point it is important to note that while the present invention has been and will continue to be described in the context of a fully functional computer system those skilled in the art will appreciate that the present invention is capable of being distributed as a program product in a variety of forms and that the present invention applies equally regardless of the particular type of signal bearing media used to actually carry out the distribution. Examples of suitable signal bearing media include recordable type media such as CDROM e.g. of and floppy disks and transmission type media such as digital and analog communications links.

The preferred embodiments described above extract form data convert it to a first format then convert it to a second format. One might be tempted to ask why the data from the user registration form goes through two different formats. The answer lies in the desire to encapsulate different functions of a web server into compartmentalized areas of speciality according to the functions performed. For example returning to by providing the userRegistration.jsp and userRegistration servlet within the web server application the presentation logic of the web server application is kept separate from the business logic provided in the userRegistry bean and is kept separate from the back end logic e.g. in LDAP bean that is required to access the user registry in the LDAP directory . The output from the userRegistration servlet is an XML document which is a tagged markup language document similar in syntax to HTML. Should the programmer of the presentation logic need to add a new field to a user registration form the programmer can simply add the field in the HTML form that is rendered to the user add a corresponding new line in the XML document type definition DTD that defines the document format and add a line to the XSL stylesheet definition to account for the newly added entry. In similar fashion the business logic is encapsulated from the presentation logic residing in the web server application and from the business data residing in the LDAP directory . This allows a programmer that is familiar with Java beans and with the details of DSML and LDAP to concentrate on providing the translation from DSML to commands on the JNDI without being concerned about the implementation within the presentation logic or the business data. Likewise the internal implementation of the LDAP directory is hidden from the presentation logic and the business logic because the business logic simply communicates with a defined interface e.g. JNDI without concern for the internal implementation. This allows programmers that program the implementation of an LDAP directory to concentrate on this specialized job without having to worry about the business logic or the presentation logic. The preferred embodiments as described herein provide three distinct portions of code that are each encapsulated from the other. This arrangement makes maintenance of the code much easier because a programmer need not be an expert in web page design form processing business logic and LDAP implementation details in order to maintain their encapsulated portion of the program. Instead each programmer can maintain his or her portion of the program without worrying about the other portions.

The apparatus methods and program products described herein encapsulate each of a plurality of different software functions by defining a uniform interface between the different software functions to provide the functions of a user registry in a directory service. In this manner each software function can be maintained in a more efficient manner with minimal effect on the other portions while allowing a number of different software applications to reference the same user registry.

One skilled in the art will appreciate that many variations are possible within the scope of the present invention. Thus while the invention has been particularly shown and described with reference to preferred embodiments thereof it will be understood by those skilled in the art that these and other changes in form and details may be made therein without departing from the spirit and scope of the invention. For example while the flow diagram of and the block diagram of relate to the specific example in that uses an LDAP directory service one skilled in the art will recognize that a flow diagram similar to and a block diagram similar to could be readily generated based on the broader implementation of the preferred embodiments as shown in . The preferred embodiments expressly extend to a method and apparatus for practicing the invention as described in .

