---

title: Image processing apparatus and information processing system
abstract: A disclosed image processing apparatus includes process components configured to input, process, or output image data; and a registration unit configured to obtain a list of the process components available in the image processing apparatus, to display on a display unit a screen for selecting one or more of the process components from the list and thereby defining a combination of the process components which combination implements an application program for performing an image processing task, and to register the combination with an identifier in the image processing apparatus.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08031980&OS=08031980&RS=08031980
owner: Ricoh Company, Ltd.
number: 08031980
owner_city: Tokyo
owner_country: JP
publication_date: 20070523
---
The present invention generally relates to an image processing apparatus and an information processing system.

Nowadays an image forming apparatus such as a printer a copier a scanner a facsimile or a multifunction copier having functions of these apparatuses normally has a configuration although its memory is limited similar to that of a general purpose computer where functions are implemented by a CPU and application programs.

For example in an image forming apparatus disclosed in patent document 1 common functions used by multiple application programs are provided as a platform and therefore application programs can be implemented using application programming interfaces APIs provided by the platform. Such an image forming apparatus having common functions as a platform makes it possible to avoid overlapping functions being provided in multiple application programs and thereby to improve efficiency in developing application programs.

One difficulty in providing common functions or APIs as a platform in an image forming apparatus is to appropriately design the granularity of the functions or APIs in the platform. If the granularity is not designed appropriately improvement in efficiency of application program development may not be expected.

For example too fine granularity may make it necessary to call many APIs even when developing a simple application program and thereby complicate the source code of the application program.

On the other hand too coarse granularity may increase the chance of having to modify an API in or add a new API to the platform in developing an application program involving a function slightly different from that provided in the platform and therefore may reduce development efficiency. Especially when the dependency between modules or APIs in the platform is high in addition to modifying or adding an API it may become necessary to modify other dependent APIs.

Also with the technology disclosed in patent document 1 it is not possible to implement a new application program providing a service similar to an existing application program by calling a part of the existing application program and by writing code only for a function for example image input unique to the new application program. In other words it is necessary to write source code from the scratch even to develop an application program similar to an existing application program.

To obviate the above problems the present applicant inventor is pursuing the possibility of developing a new framework where an application program executed in an image forming apparatus is composed of functions for inputting processing and outputting data. For example an application program for copying may be composed of functions for inputting image data from a scanner for processing for example N up processing N up processing means combining multiple pages into one page the image data and for outputting the image data on a plotter. Also as another example an application program for processing print requests from a client PC may be composed of functions for inputting or receiving print data via a network for processing for example rendering the print data and for outputting the print data on a plotter. Compared with an environment where addition and removal of functions are possible only in units of application programs a framework where application programs are composed of functional components hereafter called process components allows adding and removing functions based on the process components and thereby makes it possible to improve efficiency in developing application programs and to flexibly provide services to the user.

With such a framework for example an application program for scanning and an application program for copying may use the same process component for outputting image data on a plotter. Also an application program for scanning and an application program for facsimile transmission may use the same process component for inputting image data from a scanner. Further such a framework makes it possible to allow a user of an image forming apparatus to select process components for inputting processing or outputting data and thereby to provide various services according to the user s needs.

However there is also a disadvantage in providing a user interface that allows the user to select process components. While such a user interface provides better flexibility it may increase the number of user steps to perform a task for example copying and thereby degrade operability.

The present invention provides an image processing apparatus and an information processing system that substantially obviate one or more problems caused by the limitations and disadvantages of the related art.

Embodiments of the present invention provide an image processing apparatus and an information processing system that make it possible to implement an application program by combining process components while maintaining good operability.

According to an embodiment of the present invention an image processing apparatus includes process components configured to input process or output image data and a registration unit configured to obtain a list of the process components available in the image processing apparatus to display on a display unit a screen for selecting one or more of the process components from the list and thereby defining a combination of the process components which combination implements an application program for performing an image processing task and to register the combination with an identifier in the image processing apparatus.

According to another embodiment of the present invention an image processing apparatus includes process components configured to input process or output image data a storing unit configured to store combinations of the process components wherein each of the combinations implements an application program for performing an image processing task an analysis unit configured to determine whether the combinations are executable based on availability information sent from the process components and indicating whether the process components are available and a display control unit configured to display a list of the combinations on a display unit based on determination results from the analysis unit in such a manner that executable ones of the combinations are distinguishable.

According to still another embodiment of the present invention an information processing system includes multiple electronic apparatuses configured to implement an application program for performing an information processing task by a combination of process components configured to input process or output electronic data wherein the information processing system is configured such that a first one of the electronic apparatuses executes one of the process components in the combination to input the electronic data and a second one of the electronic apparatuses executes at least another one of the process components in the combination to process or output the electronic data.

Preferred embodiments of the present invention are described below with reference to the accompanying drawings. is a drawing illustrating an exemplary configuration of an image processing system according to a first embodiment of the present invention. As shown in the image processing system includes one or more image forming apparatuses image forming apparatuses and which hereafter may also be collectively called an image forming apparatus es a management server and one or more client PCs client PCs and which hereafter may also be collectively called a client PC s . The above components of the image processing system are connected via a network such as a local area network LAN .

The image forming apparatus is an example of an image processing apparatus such as a copier printer or multifunction copier. The image forming apparatus is designed such that application programs can be added or removed after shipment. Application programs for the image forming apparatus may be developed for example by using Java registered trademark or C language. An application program in this embodiment refers to a piece of software executed by the image forming apparatus to provide a particular service or to perform a particular task sequence of jobs from input of a request to output of the result for the user. More specifically the image forming apparatus is designed so as to allow addition or removal of functional components process components constituting application programs. For example an application program of the image forming apparatus may be composed of process components for inputting processing or outputting data. Compared with an environment where addition and removal of functions are possible only in units of application programs a framework where application programs are composed of process components allows adding and removing functions based on the process components and thereby makes it possible to improve efficiency in developing application programs and to flexibly provide services to the user. In this embodiment a process component for inputting data is called an input component a process component for processing data is called a processing component and a process component for outputting data is called an output component.

The management server may be implemented by a general purpose computer having functions for managing one or more image forming apparatuses . The client PC may be implemented by a general purpose computer that provides a user interface for operating the image forming apparatuses and the management server .

The communication unit controls network communications. The operations panel control unit controls input and output of information from to the operations panel . The flow registration unit controls a process of registering a job flow. A job flow refers to information for controlling the sequence of jobs in an application program and includes a list of process components and the execution sequence of the process components. Thus the image forming apparatus of this embodiment is configured to allow the user to register combinations of process components as job flows and to use a service of the image forming apparatus by selecting the corresponding job flow. The flow storing unit stores job flows registered by the flow registration unit in the HDD in a predetermined format and manages the stored job flows. The flow analysis execution unit controls execution of a job flow selected by the user. Also the flow analysis execution unit displays a list of process components available in the image forming apparatus when the user registers a job flow via the flow registration unit .

The HDD control unit the plotter control unit the image data processing device control unit and the scanner control unit are examples of process components and may be stored in a storage unit such as an HDD. The HDD control unit is a process component for storing outputting data in and retrieving inputting data from the HDD . The plotter control unit is a process component for outputting image data on the plotter . The image data processing device control unit is a process component for causing the image data processing device to convert process image data. The scanner control unit is a process component for inputting image data by reading a document with the scanner . In this embodiment a job flow is composed of one or more of the HDD control unit the plotter control unit the image data processing device control unit and the scanner control unit . Also as described above it is possible to add or remove process components to from the image forming apparatus . For example it is possible to develop and install a process component having a function different from those of the process components shown in .

The management server includes a communication unit and a flow registration unit as software components. The communication unit and the flow registration unit have substantially the same functions as those of the communication unit and the flow registration unit of the image forming apparatus .

The client PC includes a communication unit and a remote user interface UI as software components. The communication unit controls network communications. The remote UI is a user interface for operating the image forming apparatuses and the management server via a network. In this embodiment a Web browser is used as the remote UI . However the remote UI may be implemented by a dedicated application program.

Exemplary processes in the image processing system are described below. First an exemplary process of registering a job flow is described. are sequence charts showing an exemplary process of registering a job flow in an image forming apparatus.

When the user requests the remote UI of the client PC to display a job flow generation screen of one of the image forming apparatuses for example the image forming apparatus the remote UI requests the communication unit to obtain the job flow generation screen S . A job flow generation screen in this case refers to a screen for selecting combining process components to generate define a job flow and registering the generated job flow. For example the user selects one of the image forming apparatuses as a registration destination and requests a job flow generation screen on a Web page provided by the selected image forming apparatus and displayed by the remote UI . In this exemplary process it is assumed that the image forming apparatus is selected. The communication unit requests the communication unit of the image forming apparatus to send the job flow generation screen S .

According to the request from the client PC the communication unit requests the flow registration unit to generate the job flow generation screen S The flow registration unit requests the flow analysis execution unit to obtain a list of process components available in the image forming apparatus which list is necessary to generate the job flow generation screen. Each of the image forming apparatuses retains a list of available process components process component list for example in the HDD . The flow analysis execution unit retrieves the process component list and sends the retrieved process component list to the flow registration unit S . A process component list is updated when a process component is added or removed installed or uninstalled . The flow registration unit generates the job flow generation screen as HTML data using the process component list S and sends the HTML data to the communication unit S .

The communication unit sends the HTML data to the communication unit of the client PC S . The communication unit sends the received HTML data to the remote UI S . Then the remote UI displays the job flow generation screen based on the HTML data on a display unit of the client PC S .

The job flow generation screen includes a job flow generation pane and a process component list pane . The process component list pane lists icons or buttons process component icons representing process components available in the image forming apparatus . The job flow generation pane is used to generate define a job flow using the process component icons listed in the process component list pane . As shown in the user can generate a job flow by dragging the process component icons into the job flow generation pane and connecting them in the order of execution. For example a job flow for copying may be generated by connecting a process component for inputting image data by scanning a document scanning component a process component for converting image data image data conversion component and a process component for outputting image data on a plotter plotter output component . Double clicking a process component icon in the job flow generation pane displays a screen for specifying the execution conditions of the corresponding process component. For example the execution conditions for a scanning component may include resolution and paper size. Precisely speaking the remote UI as a Web browser communicates with a Web server in this case the image forming apparatus each time when the job flow generation screen changes. However descriptions of communications with a Web server are omitted here for brevity.

A job flow may include multiple input components multiple processing components and or multiple output components. For example at least two input components and two output components are necessary to generate a job flow that synthesizes a scanned image and an image stored in the HDD of the image forming apparatus and prints and faxes the combined image.

When generation of a job flow is completed on the job flow generation screen and an OK button is clicked on the remote UI displays a screen for entering a name of the generated job flow job flow name . After a job flow name is entered on the screen the remote UI sends a request for registering the job flow job flow registration request to the communication unit S in . The job flow registration request includes information job flow information specified on the job flow generation screen such as a job name identifiers of process components constituting the job flow an execution sequence of the process components and execution conditions of the process components. The communication unit sends the job flow registration request to the communication unit of the image forming apparatus S .

According to the job flow registration request the communication unit requests the flow registration unit to register the job flow S . The flow registration unit requests the flow storing unit to store the job flow information S . The flow storing unit requests the HDD control unit to store the job flow information in the HDD in a predetermined format S . After storing the job flow information the HDD control unit reports completion of storing the job flow information to the flow storing unit S . Then the flow storing unit reports the completion of storing the job flow information to the flow registration unit S .

The job flow registration unit sends a job flow registration completion report via the communication unit to the communication unit of the client PC S S . The communication unit sends the job flow registration completion report to the remote UI S . The remote UI then displays a message indicating the completion of job flow registration S . Also the remote UI may be configured to display the details of the registered job flow together with the message.

An exemplary process of registering a job flow in multiple image forming apparatuses in one operation is described below. are sequence charts showing a process of registering a job flow in multiple image forming apparatuses in one operation. In to distinguish components of the image forming apparatus and components of the image forming apparatus a is attached to the reference numbers of components of the image forming apparatus and b is attached to those of the image forming apparatus

When the user requests the remote UI of the client PC to display a job flow generation screen for two or more of the image forming apparatuses in this example it is assumed that the image forming apparatuses and are selected the remote UI requests the communication unit to obtain the job flow generation screen S . The request from the remote UI to obtain the job flow generation screen includes the image forming apparatuses and as registration destinations. The communication unit requests the communication unit of the image forming apparatus to send the job flow generation screen S . According to the request from the client PC the communication unit requests the flow registration unit to generate the job flow generation screen for the image forming apparatuses and S . The registration destinations in this case the image forming apparatuses and are specified in the request for generating the job flow generation screen and are thereby reported to the flow registration unit

According to the request for generating the job flow generation screen the flow registration unit collects a list of process components in all of the image forming apparatuses specified as registration destinations. In this step the flow registration unit first obtains a list of process components available in the image forming apparatus from the flow analysis execution unit S S . Then the flow registration unit requests the communication unit to obtain a list of process components available in the image forming apparatus S . The communication unit requests the communication unit of the image forming apparatus to send the list of process components S . According to the request from the communication unit the communication unit obtains the list of process components available in the image forming apparatus from the flow analysis execution unit S S and sends the list to the communication unit S .

When receiving the list from the communication unit the communication unit sends the list to the flow registration unit S . The flow registration unit obtains the logical sum of the process component list of the image forming apparatus and the process component list of the image forming apparatus generates the job flow generation screen as HTML data using the process component list obtained as the logical sum S and sends the HTML data to the communication unit S . Subsequent steps S through S are substantially the same as steps S through S shown in . The resulting job flow generation screen to be displayed in step S includes the logical sum of the process component lists of the image forming apparatuses and . The operation of the job flow generation screen is substantially the same as described above with reference to . The user selects process components from the process component list logical sum of the process component lists and generates a job flow.

When completing generation of a job flow on the job flow generation screen the user clicks on the OK button and enters a job flow name. Then the remote UI sends a request job flow batch registration request for registering the job flow in the image forming apparatuses and via the communication unit to the image forming apparatus S in .

The job flow batch registration request contains in addition to the job flow information identifiers for example host names or IP addresses of the image forming apparatuses in this case the image forming apparatuses and where the job flow is to be registered.

According to the job flow batch registration request the communication unit of the image forming apparatus requests the flow registration unit to register the job flow in the image forming apparatuses and S . The flow registration unit requests the flow storing unit to store the job flow information S . The flow storing unit requests the HDD control unit to store the job flow information in the HDD in a predetermined format S . After storing the job flow information the HDD control unit reports completion of storing the job flow information to the flow storing unit S . When receiving the completion report the flow storing unit reports the completion of storing the job flow information to the flow registration unit S . Subsequently the flow registration unit requests the communication unit to register the job flow in the image forming apparatus contained as a registration destination in the job flow batch registration request S .

The communication unit requests the communication unit of the image forming apparatus to register the job flow S . After the request is received by the communication unit the job flow job flow information is registered in the image forming apparatus through steps S to S that are substantially the same as steps S to S shown in . In the above exemplary process the same job flow information is registered in both of the image forming apparatuses and . The communication unit reports the completion of job flow registration in the image forming apparatus to the communication unit of the image forming apparatus S . The communication unit reports the completion of job flow registration to the flow registration unit S . The flow registration unit confirms that the job flow has been registered in all of the image forming apparatuses contained as registration destinations in the job flow batch registration request and when the completion is confirmed sends a job flow registration completion report via the communication unit to the client PC S S . The remote UI then displays a message indicating the completion of job flow registration S .

Thus the above exemplary method makes it possible to register a job flow in multiple image forming apparatuses by one operation on the job flow generation screen . In other words compared with a method of registering a job flow in one image forming apparatus at a time the above method improves the efficiency of registering a job flow. Although the client PC is used as a front end of the image forming apparatus in the management server may also be used as a front end. For example the management server receives a job flow batch registration request from the client PC and requests the image forming apparatuses specified as registration destinations to register job flow information. In this case the communication unit and the flow registration unit of the management server perform substantially the same steps as those performed by the communication unit and the flow registration unit in . One difference is that a job flow is not registered in the management server itself.

Also instead of the remote UI used as a user interface for registering a job flow in the operations panel of the image forming apparatus may be used as a user interface. In this case the operations panel also functions as a display unit to display for example a job flow generation screen.

Next an exemplary process of executing a registered job flow is described. is a sequence chart showing an exemplary process of executing a job flow.

When the image forming apparatus is turned on each process component reports its availability to the flow analysis execution unit . For example the scanner control unit checks the status of the scanner and if the scanner is working normally reports to the flow analysis execution unit that the scanner control unit a function to input data from the scanner is available S . Similarly the plotter control unit checks the status of the plotter and if the plotter is working normally reports to the flow analysis execution unit that the plotter control unit a function to output data on the plotter is available S . The image data processing device control unit checks the status of the image data processing device and if the image data processing device is working normally reports to the flow analysis execution unit that the image data processing device control unit a function to process image data is available S . And the HDD control unit checks the status of the HDD and if the HDD is working normally reports to the flow analysis execution unit that the HDD control unit a function to store retrieve data in from the HDD is available S . Also if an additional process component has been installed the additional process component also reports its availability.

Meanwhile when the power is turned on the flow storing unit retrieves job flow information stored in the HDD and sends the job flow information to the operations panel control unit S . Based on the job flow information the operations panel control unit displays on the operations panel a list screen job flow list screen listing job flows job flow names registered in the image forming apparatus S . As another example the image forming apparatus may be configured to display the job flow list screen on a display unit of an external device such as a PC connected to the image forming apparatus via a network.

When the user selects a job flow from the job flow list screen on the operations panel S the operations panel control unit sends the identifier for example job flow name of the selected job flow hereafter called a current job flow to the flow analysis execution unit and thereby requests the execution of the current job flow S . In this exemplary process it is assumed the current job flow is configured to input image data from the scanner to process for example to N up process the image data to output the processed image data on the plotter and also to store the processed image data in the HDD .

The flow analysis execution unit obtains the job flow information of the current job flow based on the job flow name sent from the operations panel control unit and dynamically controls subsequent steps based on the obtained job flow information. First the flow analysis execution unit determines the process components constituting the current job flow and executes each of the process components. For example as shown in the flow analysis execution unit sends execution requests simultaneously to the scanner control unit that is a scanning component the image data processing device control unit that is an N up processing component the plotter control unit that is a plotter output component and the HDD control unit that is an HDD storage component S through S .

In this embodiment the execution requests are sent to the process components simultaneously and the execution of the process components is controlled or synchronized via pipes connecting the process components. A pipe in this case is an abstract concept referring to a data communication channel between process components and may be implemented by a memory. When sending an execution request to a process component the flow analysis execution unit also specifies an input pipe and an output pipe for the process component. Each of the process components waits until data are input to the input pipe and when data are input processes the input data and outputs the processed data to the output pipe. The output pipe of a preceding process component and the input pipe of a succeeding process component are the same. Therefore when a process component outputs processed data to the output pipe the next process component detects input of data to the input pipe and performs the corresponding job. As an exception a process component that functions as an input component receives data from the corresponding device the scanner a network etc. instead of from the input pipe. As another exception a process component that functions as an output component outputs data to the corresponding device the HDD the plotter etc. instead of to the output pipe. Also the flow analysis execution unit may be used instead of pipes to synchronize process components. In this case the flow analysis execution unit sends an execution request to the next process component after execution of the previous process component is completed.

When receiving an execution request from the flow analysis execution unit the scanner control unit inputs image data from the scanner S . The scanner control unit outputs the image data to the pipe hereafter called a pipe A between itself and the image data processing device control unit S and reports the completion of the scanning job to the flow analysis execution unit S .

The image data processing device control unit when detecting the input of the image data to the pipe A processes for example N up processes the image data S . After completing the image data processing job the image data processing device control unit outputs the processed image data to the pipe hereafter called a pipe B between itself and the plotter control unit and to the pipe hereafter called a pipe C between itself and the HDD control unit S S and reports the completion of the image data processing job to the flow analysis execution unit S .

The plotter control unit and the HDD control unit are executed concurrently. The plotter control unit when detecting the input of the processed image data to the pipe B outputs prints the processed image data on the plotter S . The HDD control unit when detecting the input of the processed image data to the pipe C outputs stores the processed image data to the HDD S . When completing the respective jobs the plotter control unit and the HDD control unit report the completion of the jobs to the flow analysis execution unit S S .

After receiving completion reports from all of the process components in the current job flow the flow analysis execution unit reports the completion of the current job flow execution to the operations panel control unit S . The operations panel control unit then displays a message indicating the completion of the current job flow execution on the operations panel .

Thus the image forming apparatus of this embodiment is configured to allow the user to perform a certain task by selecting and executing a pre registered job flow.

Meanwhile as described above the image forming apparatus is configured to allow the user to add or remove process components. This in turn means that a process component contained in a job flow may be uninstalled from the image forming apparatus after the job flow is registered and therefore may be unavailable when the job flow is executed. Also when a job flow is generated as shown in based on a list of process components collected from multiple image forming apparatuses and registered in the respective image forming apparatuses. it is possible that a process component in the job flow registered in an image forming apparatus is not available in that image forming apparatus . Further it is possible that a process component becomes unavailable because of for example a malfunction of the corresponding device.

An exemplary process of executing a job flow taking into account a situation where a process component in a job flow is not available as mentioned above is described below with reference to . is a sequence chart showing another exemplary process of executing a job flow.

Steps S through S are substantially the same as steps S through S shown in and therefore descriptions of those steps are omitted here.

After step S when the power is turned on the flow storing unit retrieves job flow information stored in the HDD and sends the job flow information to the flow analysis execution unit S . The flow analysis execution unit determines whether each of the job flows in the job flow information is executable S . are drawings used to describe. a step of determining whether a job flow is executable. shows a case where a job flow is determined to be executable and shows a case where a job flow is determined to be not executable.

A table and a table in respectively correspond to the table shown in . Each of the tables and is a part of the job flow information and shows process components constituting a job flow and the execution sequence of the process components. Process component information is generated by the flow analysis execution unit based on availability reports from process components and includes names of available process components and names of programs implementing the process components. The process component names and the program names are associated with each other. A program name in the process component information is an identifier used to dynamically call the corresponding program. An address indicating the location of a program may also be used as a program name. Program names are sent to the flow analysis execution unit from process components together with availability reports. Thus the flow analysis execution unit dynamically generates the process component information . This configuration makes it possible for the flow analysis execution unit to obtain information regarding functions process components and corresponding programs available in the image forming apparatus before executing a job flow.

Based on the process component information the flow analysis execution unit determines whether each of the job flows in the job flow information is executable. For example when a job flow is composed of a scanning component and a plotter output component as shown in the job flow analysis execution unit searches the process component information for entries corresponding to the scanning component and the plotter output component. When entries corresponding to the scanning component and the plotter output component exist in the process component information the flow analysis execution unit determines that the job flow is executable.

As another example when a job flow is composed of a scanning component and an e mail transmission component as shown in the job flow analysis execution unit searches the process component information for entries corresponding to the scanning component and the e mail transmission component. Since the process component information does not include an entry corresponding to the e mail transmission component a part of the job flow e mail transmission cannot be executed. In this case the job flow analysis execution unit determines that the job flow is not executable.

After determining whether the job flows are executable the job flow analysis execution unit sends the results executability information together with the job flow information to the operations panel control unit S S .

The operations panel control unit then displays a job flow list screen on the operations panel based on the executability information and the job flow information S . is a drawing illustrating an exemplary job flow list screen.

As shown in a job flow list screen lists executable job flows and non executable job. flows in separate areas so that the user can easily distinguish the executable job flows from the non executable job flows.

In the job flow list screen job flows are represented by selectable buttons. When a job flow is selected and a detail button is pressed the operations panel control unit displays a detail screen job flow detail screen for the selected job flow on the operations panel . are drawings illustrating exemplary job flow detail screens.

When an executable job flow is selected and an execute button is pressed on the job flow list screen the operations panel control unit sends the identifier for example job flow name of the selected job flow to the flow analysis execution unit and thereby requests the execution of the selected job flow S . Step S and subsequent steps are substantially the same as step S and subsequent steps shown in and therefore descriptions of those steps are omitted here. In steps S through S the flow analysis execution unit dynamically calls programs corresponding to the process components in the selected job flow according to the process component information shown in . This also applies to steps S through S in . Thus the image forming apparatus is configured to dynamically call programs performing functions of process components in a job flow when executing the job flow. This configuration makes it possible for the image forming apparatus to flexibly adapt to addition of process components or functions.

Other exemplary processes of executing job flows are described below. is a drawing illustrating a job flow detail screen for a job flow A.

As shown in the job flow A is designed to input image data from a scanner to process for example to N up process the image data to output the processed image data on a plotter and then to store the processed image data in an HDD. The job flow A is different from the job flow shown in in that the plotter output component and the HDD storage component are executed in series.

When receiving a request for executing the current job flow job flow A from the operations panel control unit the flow analysis execution unit sends execution requests simultaneously to the process components constituting the job flow A excluding the HDD control unit S through S . In other words when a job flow contains multiple output components to be executed in series the flow analysis execution unit sends an execution request only to the first one of the output components at this timing. In this example the flow analysis execution unit sends execution requests to the scanner control unit the image data processing device control unit and the plotter control unit .

When receiving the execution request from the flow analysis execution unit the scanner control unit inputs image data from the scanner S . The scanner control unit outputs the image data to the pipe A between itself and the image data processing device control unit S and reports the completion of the scanning job to the flow analysis execution unit S .

When detecting the input of the image data to the pipe A the image data processing device control unit processes for example N up processes the image data S . After completing the image data processing job the image data processing device control unit outputs the processed image data to the pipe B between itself and the plotter control unit and to the pipe C between itself and the HDD control unit S S and reports the completion of the image data processing job to the flow analysis execution unit S .

When detecting the input of processed image data to the pipe B the plotter control unit outputs prints the processed image data on the plotter S and reports the completion of the plotter output job to the flow analysis execution unit S . Meanwhile the HDD control unit does not start its job even when the processed image data are input to the pipe C. In other words since no execution request has been sent from the flow analysis execution unit to the HDD control unit at this stage the HDD control unit is not waiting for the input of the processed image data to the pipe C.

When receiving the completion report from the plotter control unit the flow analysis execution unit sends an execution request to the HDD control unit that is the second output component in the job flow A S . The HDD control unit when receiving the execution request detects the input of the processed image data to the pipe C and outputs stores the processed image data to the HDD S . After outputting the processed image data to the HDD the HDD control unit reports the completion of the HDD storage job to the flow analysis execution unit S .

After receiving completion reports from all of the process components in the job flow A the flow analysis execution unit reports the completion of the job flow A execution to the operations panel control unit S . The operations panel control unit then displays a message indicating the completion of the job flow A execution on the operations panel .

Thus the image forming apparatus of this embodiment may also be configured to be able to control the execution of a job flow containing two or more output components executed in series. This configuration makes it possible to generate various types of job flows and thereby to improve the usability of the image forming apparatus .

Next an exemplary process of executing a job flow B shown in is described. is a drawing illustrating a job flow detail screen for the job flow B. In the job flow detail screen shown in a triangle indicates that the execution of the job flow B is interrupted until a user input for example pressing a start button is received. The job flow B is designed to input image data from a scanner to process for example to N up process the image data and after receiving a user input to output the processed image data on a plotter and to an HDD concurrently. The job flow B is different from the job flow shown in in that the execution is interrupted after the image data are processed until a user input is received.

When receiving a request for executing the current job flow job flow B from the operations panel control unit the flow analysis execution unit sends execution requests simultaneously to the process components constituting the job flow B excluding the plotter control unit and the HDD control unit S S . In other words when a job flow contains a pause interrupt to wait for a user input the flow analysis execution unit does not send execution requests at this timing to the process components to be executed after the pause. In this example the flow analysis execution unit sends execution requests to the scanner control unit and the image data processing device control unit .

The scanner control unit when receiving the execution request from the flow analysis execution unit inputs image data from the scanner S . The scanner control unit outputs the image data to the pipe A between itself and the image data processing device control unit S and reports the completion of the scanning job to the flow analysis execution unit S .

The image data processing device control unit when detecting the input of the image data to the pipe A processes for example N up processes the image data S . After completing the image data processing job the image data processing device control unit reports the completion of the image data processing job to the flow analysis execution unit S and outputs the processed image data to the pipe B between itself and the plotter control unit and to the pipe C between itself and the HDD control unit S S . At this stage since execution requests have not been sent from the flow analysis execution unit the plotter control unit and the HDD control unit do not start their respective jobs even when the processed image data are input to the pipe B and the pipe C.

When receiving the completion report from the image data processing device control unit the flow analysis execution unit requests the operations panel control unit to display a prompt for a user input and waits for the user input S . The operations panel control unit for example displays a message such as Continue the processing as a prompt. When the user chooses to continue the processing job flow B and for example presses a start button the operations panel control unit requests the flow analysis execution unit to continue the job flow B.

Then the flow analysis execution unit sends execution requests to the process components to be executed after the pause. In this example the flow analysis execution unit sends execution requests simultaneously to the plotter control unit and the HDD control unit S S . Step S and subsequent steps output to the plotter and the HDD are substantially the same as step S and subsequent steps shown in and therefore descriptions of those steps are omitted here.

Thus the image forming apparatus of this embodiment may also be configured to be able to control the execution of a job flow containing a pause interrupt to wait for a user input. This configuration makes it possible for the user to control execution timings of process components and thereby makes it possible to improve the usability of the image forming apparatus .

The job flow B described above is a simple example of a job flow involving a user input. A job flow C shown in is a more practical example. is a drawing illustrating a job flow detail screen for the job flow C.

As shown in the job flow C is designed to synthesize scanned image data and image data from a PC to display a preview image of the synthesized image data on an operations panel and to wait for a user input. When the preview image is satisfactory the user enters a command to continue the job flow C. Then the plotter output component and the HDD storage component are executed. When the preview image is not satisfactory the user changes conditions to synthesize the image data. In this case the image data are synthesized again and a preview image is displayed again.

Next an exemplary process of executing a job flow D shown in is described. is a drawing illustrating a job flow detail screen for the job flow D. In the job flow detail screen shown in a circle indicates that the execution of the job flow D is interrupted for a period of time indicated by a number in the circle. The job flow D is designed to input image data from a scanner to process for example to N up process the image data and after a pause interrupt of 30 seconds to output the processed image data on a plotter and to an HDD concurrently. The job flow D is different from the job flow shown in in that the execution is interrupted for a specified period of time after the image data are processed.

When receiving a request for executing the current job flow job flow D from the operations panel control unit the flow analysis execution unit sends execution requests simultaneously to the process components constituting the job flow D excluding the plotter control unit and the HDD control unit S S . In other words when a job flow contains a pause interrupt of a specified period of time the flow analysis execution unit does not send execution requests at this timing to the process components to be executed after the pause. In this example the flow analysis execution unit sends execution requests to the scanner control unit and the image data processing device control unit .

When receiving the execution request from the flow analysis execution unit the scanner control unit inputs image data from the scanner S . The scanner control unit outputs the image data to the pipe A between itself and the image data processing device control unit S and reports the completion of the scanning job to the flow analysis execution unit S .

When detecting the input of the image data to the pipe A the image data processing device control unit processes for example N up processes the image data S . After completing the image data processing job the image data processing device control unit reports the completion of the image data processing job to the flow analysis execution unit S and outputs the processed image data to the pipe B between itself and the plotter control unit and to the pipe C between itself and the HDD control unit S S . At this stage since execution requests have not been sent from the flow analysis execution unit the plotter control unit and the HDD control unit do not start their respective jobs even when the processed image data are input to the pipe B and the pipe C.

The flow analysis execution unit when receiving the completion report from the image data processing apparatus control unit starts counting the specified period of time S . When the specified period of time elapses s the flow analysis execution unit sends execution requests to the process components to be executed after the pause. In this case the flow analysis unit sends execution requests simultaneously to the plotter control unit and the HDD control unit S S . Step S and subsequent steps output to the plotter and the HDD are substantially the same as step S and subsequent steps shown in and therefore descriptions of those steps are omitted here.

Thus the image forming apparatus of this embodiment may also be configured to control the execution of a job flow containing a pause interrupt of a specified period of time. This configuration makes it possible to control execution timings of process components using a pause and thereby to improve the usability of the image forming apparatus . A pause may be inserted anywhere for example between an input component and a processing component or between serially connected output components. Also instead of specifying a period of time it is possible to specify time of day for example to specify the time when a fax transmission is performed .

As described above the image forming apparatus of the first embodiment makes it possible to generate and register a job flow defining a combination and an execution sequence of process components. Also the image forming apparatus is configured to dynamically control execution of registered job flows. With the image forming apparatus the user can execute an application or perform a task by just selecting the corresponding job flow.

Further the image forming apparatus configured to dynamically control execution of job flows can flexibly adapt to addition and removal of process components. This in turn makes it possible to expand functionality of the image forming apparatus by adding process components or generating new combinations job flows of process components while minimizing the need to modify existing process components or applications.

A second embodiment of the present invention is described below. In the second embodiment synchronization of process components using pipes is described in more detail. Here differences from the first embodiment are mainly described and descriptions in the first embodiment may also apply to the second embodiment unless otherwise mentioned.

As described above in the first embodiment a process component waits until image data are input to the input pipe and when the image data are input starts the corresponding job. In such a process a process component may not have to wait until the input of image data to a pipe is completed before starting its job. For example when image data are composed of multiple pages process components may be synchronized page by page. Further when each page of image data is composed of multiple units process components may be synchronized unit by unit.

When image data have a structure as described above process components may be synchronized at various timings or by various units image data by image data page by page plane by plane or band by band . In the second embodiment when process components are synchronized page by page plane by plane or band by band other than image data by image data the process components are considered as being executed concurrently concurrent execution . A process component waiting for the input of image data to the pipe can start its job before the previous process component completes for example inputting processing or outputting the entire image data. Therefore at one point during the process the two process components may run concurrently. On the other hand when process components are synchronized image data by image data the process components are considered as being executed in series serial execution .

In this embodiment the user can select concurrent execution or serial execution by specifying a property of a line connecting process components on the job flow generation screen . For example the user displays a context menu including menu items such as serial and concurrent by clicking the right mouse button on a line between process components and selects either serial or concurrent . When serial is selected the process components are executed in series and when concurrent is selected the process components are executed concurrently. Also the job flow generation screen may be configured to change the appearance of a line connecting two process components depending on whether serial or concurrent is selected so that the user can easily identify the property of the line.

A job flow shown in is composed of process components A through C. A line lconnecting the process components A and C has an arrow at an end. The line lindicates that the process components A and C are executed in series. On the other hand a line lconnecting the process components A and B has no arrow. The line lindicates that the process components A and B are executed concurrently.

After the job flow is generated on the job flow generation screen as shown in and the OK button is clicked on the job flow information of the generated job flow is stored in the HDD through steps as described above with reference to .

When a job flow is executed based on the job flow information including the units of synchronization each process component starts its job according to the specified unit of synchronization. For example when the unit of synchronization for a process component is page the process component starts its job when a page of image data is input to the pipe. When the unit of synchronization for a process component is plane the process component starts its job when a plane of image data is input to the pipe. When the unit of synchronization for a process component is band the process component starts its job when a band of image data is input to the pipe. The input of a unit of image data to the pipe may be monitored by the process component itself or by a separate program module. When a program module is used the program module reports the input of a unit of image data to the process component waiting for the input.

As described above the image forming apparatus of the second embodiment makes it possible to more flexibly specify the timing unit of synchronization at which two adjacent process components are synchronized.

A third embodiment of the present invention is described below. According to the third embodiment executability of a job flow is determined according to the attribute information of constituent process components when the job flow is registered. In the third embodiment differences from the first and second embodiments are mainly described and descriptions in the first and second embodiments may also apply to the third embodiment unless otherwise mentioned.

When the registration of a job flow is requested in step S the flow registration unit determines the executability of the job flow based on the attribute information of the constituent process components specified in the job flow information included in the registration request S . According to the third embodiment the flow registration unit determines the executability of a job flow by determining whether process components are connectable based on formats of image data that the process components can receive from pipes and formats of image data that the process components can output to pipes. The image forming apparatus of the third embodiment stores attribute information for each process component. For a process component that receives data from a pipe the attribute information includes a format of image data input data format that the process component can receive from the pipe. For a process component that outputs data to a pipe the attribute information includes a format of image data output data format that the process component can output to the pipe. The attribute information is hereafter called process component interface information. In step S the flow registration unit determines whether process components are connectable based on the process component interface information.

The flow registration unit compares the output data format s of a preceding process component and the input data format s of a succeeding process component and thereby determines whether the adjacent process components are connectable. More specifically the flow registration unit determines that the adjacent process components are connectable if one of the output data formats of the preceding process component matches one of the input data formats of the succeeding process component. If none of the output data formats of the preceding process component matches the input data formats of the succeeding process component the flow registration unit determines that the adjacent process components are not connectable.

The process component interface information may be retained separately by respective process components or stored collectively in the HDD . In the former case the flow registration unit refers to process components for the process component interface information. In the latter case the flow registration unit retrieves the process component interface information from the HDD .

If all the process components in a job flow are connectable in step S the flow registration unit determines that the job flow is executable and steps S through S are performed.

If any pair of the process components in a job flow is not connectable in step S the flow registration unit determines that the job flow is not executable generates HTML data to display an error screen reporting that the job flow is not executable S and sends the HTML data to the communication unit S .

The communication unit sends the HTML data to the communication unit of the client PC S . The communication unit sends the received HTML data to the remote UI S . Then the remote UI displays the error screen based on the HTML data on a display unit of the client PC S .

As described above the image forming apparatus of the third embodiment determines whether a generated job flow is executable by determining whether the constituent process components are connectable and thereby makes it possible to register only correctly configured job flows. In other words the image forming apparatus of the third embodiment makes it possible to prevent malfunctioning of a job flow resulting from the difference in data formats the process components can handle.

The operations panel control unit the flow registration unit the flow analysis execution unit and the flow storing unit of the image forming apparatus are examples of a display control unit a registration unit an analysis unit and a storing unit respectively.

The image forming apparatus is an image processing apparatus such as a copier printer or multifunction copier and is an example of an electronic apparatus in this embodiment. The image forming apparatus is designed such that application programs can be added or removed after shipment. Application programs for the image forming apparatus may be developed for example by using Java registered trademark or C language. In this embodiment an application program is a piece of software executed by the image forming apparatus to provide a particular service sequence of jobs from input of a request to output of the result for the user. More specifically the image forming apparatus is designed so as to allow addition or removal of functional components process components constituting application programs. For example an application program of the image forming apparatus may be composed of process components for inputting processing or outputting data. Compared with an environment where addition and removal of functions are possible only in units of application programs a framework where application programs are composed of process components allows adding and removing functions based on the process components and thereby makes it possible to improve efficiency in developing application programs and to flexibly provide services to the user. In this embodiment a process component for inputting data is called an input component a process component for processing data is called a processing component and a process component for outputting data is called an output component.

The client PC is implemented by a general purpose computer and provides a user interface for operating the image forming apparatuses .

The communication unit controls network communications. The job flow execution unit controls processes for registering a job flow and executing a registered job flow. A job flow refers to information for controlling the sequence of jobs in an application program and includes a list of process components and the execution sequence of the process components. Thus the image forming apparatus of this embodiment is configured to allow the user to register combinations of process components as job flows and to use a service of the image forming apparatus by selecting the corresponding job flow.

The function execution units are programs that implement process components in the image forming apparatus and may be stored in a storage unit such as an HDD. The number and types of the function execution units may differ depending on the image forming apparatus . Examples of the function execution units include a scanning component for inputting image data from a scanner a processing component for processing for example N up processing image data a plotter output component for outputting image data on a plotter and a facsimile component for faxing image data. In this embodiment a job flow is composed of one or more function execution units . Also as described above it is possible to add or remove process components or functional execution units to from the image forming apparatus . In other words it is possible to develop a new function execution unit and install it in the image forming apparatus .

The client PC includes a communication unit and a user interface UI display unit as software components. The communication unit controls network communications. The UI display unit provides a user interface for operating the image forming apparatuses via a network. In this embodiment a Web browser is used as the UI display unit . However the UI display unit may be implemented by a dedicated application program.

The controller includes a CPU an ASIC an NB an SB a MEM P a MEM C a hard disk drive HDD a memory card slot a network interface controller NIC a USB interface an IEEE 1394 interface and a Centronics interface .

The CPU is an IC for information processing. The ASIC is an IC for image processing. The NB is the northbridge of the controller . The SB is the southbridge of the controller . The MEM P is a system memory of the image forming apparatus . The MEM C is a local memory of the image forming apparatus . The HDD is a storage device of the image forming apparatus . The memory card slot is a card slot for a memory card . The NIC is a controller for controlling network communication based on MAC addresses. The USB interface is for connecting USB devices. The IEEE 1394 interface is for connecting devices conforming to the IEEE standard. The Centronics interface is for connecting devices conforming to the Centronics standard. The operations panel functions both as an operations unit for user input and a display unit for displaying information from the image forming apparatuses .

The communication unit the job flow execution unit the function execution units and the UI display unit may be stored in the MEM C or the memory card and executed by the CPU .

Exemplary processes in the image processing system are described below. First an exemplary process of registering a job flow is described. are sequence charts showing a process of registering a job flow according to the fourth embodiment. In to distinguish components of the image forming apparatus and components of the image forming apparatus a is attached to the reference numbers of components of the image forming apparatus and b . is attached to those of the image forming apparatus . The same applies to sequence charts shown in and .

When the user requests the UI display unit of the client PC to display a job flow generation screen for two or more of the image forming apparatuses in this example it is assumed that the image forming apparatuses and are selected the UI display unit requests the communication unit to obtain a list of functions process components available in the image forming apparatus and a list of functions process components available in the image forming apparatus S . A job flow generation screen in this case refers to a screen for combining process components thereby generating defining a job flow and registering the generated job flow. For example the user selects two or more of the image forming apparatuses as registration destinations and requests a job flow generation screen from a Web page provided by either of the selected image forming apparatuses and displayed by the UI display unit . In this exemplary process it is assumed that the image forming apparatuses and are selected. When receiving a request from the UI display unit the communication unit requests the image forming apparatuses and to send a list of available process components S S .

The communication unit of the image forming apparatus refers to the process components the function execution units installed in the image forming apparatus for their availability S S generates a list of process components available in the image forming apparatus and sends the list to the client PC S .

Also the communication unit of the image forming apparatus queries the process components the function execution units installed in the image forming apparatus for their availability S S generates a list of process components available in the image forming apparatus and sends the list to the client PC S .

The communication unit of the client PC sends the lists of process components from the image forming apparatuses and to the UI display unit S S . The UI display unit displays a job flow generation screen based on the lists of process components on a display unit of the client PC S .

The job flow generation screen includes a job flow generation pane and a process component list pane . The process component list pane lists icons or buttons hereafter called process component icons representing process components available in the image forming apparatuses and separately. In process components A through D are listed as process components available in an image forming apparatus A in this case the image forming apparatus . Also process components A B and E are listed as process components available in an image forming apparatus B in this case the image forming apparatus .

The job flow generation pane is used to generate define a job flow using the process component icons listed in the process component list pane . As shown in the user can generate a job flow by dragging the process component icons in the process component list pane into the job flow generation pane and connecting them in the order of execution. For example a job flow for copying may be generated by connecting a process component for inputting image data by scanning a document scanning component a process component for converting image data image data conversion component and a process component for outputting image data on a plotter plotter output component . Double clicking a process component icon in the job flow generation pane displays a screen for specifying the execution conditions of the corresponding process component. For example the execution conditions for a scanning component may include resolution and paper size.

A job flow may include job components from multiple image forming apparatuses . Also it is possible to include multiple input components multiple processing components and or multiple output components in a job flow. For example at least two input components and two output components are necessary to generate a job flow that combines a scanned image and an image stored in the HDD of the image forming apparatus and prints and faxes the combined image.

When generation of a job flow is completed on the job flow generation screen and an OK button is clicked on the UI display unit displays a screen for entering a name of the generated job flow job flow name . After a job flow name is entered on the screen the UI display unit sends a request for registering the job flow job flow registration request to the communication unit S in . The job flow registration request includes information job flow information or control information specified on the job flow generation screen such as a job name identifiers of process components constituting the job flow an execution sequence of the process components execution conditions of the process components and identifiers host names or IP addresses of the image forming apparatuses on which the process components are to be executed. The communication unit sends the job flow registration request at least to the communication units and of the image forming apparatuses the image forming apparatuses and on which the process components in the job flow are to be executed.

According to the job flow registration request the communication unit of the image forming apparatus requests the job flow execution unit to register the job flow S . The job flow execution unit stores the job flow information in the HDD of the image forming apparatus in a predetermined format. Similarly according to the job flow registration request the communication unit of the image forming apparatus requests the job flow execution unit to register the job flow S . The job flow execution unit stores the job flow information in the HDD of the image forming apparatus in a predetermined format.

Next exemplary processes for executing the registered job flow E are described. is a sequence chart showing a first exemplary process of executing the job flow E according to the fourth embodiment. In the first exemplary process the user requests the execution of the job flow E on the image forming apparatus

When receiving a request from the user the UI display unit of the image forming apparatus displays a job flow list screen on the operations panel based on job flow information stored in the HDD S .

As an exception for example when the input component of a job flow is an HDD input component for retrieving image data from the HDD the HDD input component and the HDD may be in a remote image forming apparatus other than the current image forming apparatus because the user can select the image data in the HDD of the remote image forming apparatus via a network. Thus it is more preferable to determine the executability of a job flow based on whether the first process component to be executed first in the job flow is available in the current image forming apparatus and whether the first process component requires a manual operation by the user. In this case job flow information preferably includes information on whether each process component is operable from a remote apparatus.

Also the image forming apparatus may be configured to request other image forming apparatuses where process components in a job flow are to be executed to send information on whether the process components are executable.

When an executable job flow in this case job flow E is selected and an execute button is pressed on the job flow list screen the UI display unit sends the identifier for example job flow name of the job flow E to the job flow execution unit and thereby requests the execution of the job flow E S . As another example the image processing system may be configured to display the job flow list screen on a display unit of an external device such as a PC connected to the image forming apparatus via a network and to allow the user to send an execution request of a job flow from the external device.

The job flow execution unit obtains the job flow information of the job flow E based on the job flow name sent from the UI display unit and dynamically controls the execution of the job flow E based on the obtained job flow information. As shown in the process component A is to be executed first in the job flow E and to be executed on the image forming apparatus A the image forming apparatus . Therefore the job flow execution unit calls the function execution unit of the image forming apparatus which function execution unit corresponds to the process component A S . The function execution unit for example retrieves image data from the HDD and temporarily stores the retrieved image data in a storage area S . After completing the job the function execution unit reports the completion of the job to the job flow execution unit S .

The job flow execution unit when receiving the completion report requests the UI display unit to display a job flow progress screen indicating the completion of the process component A execution S . The UI display unit displays the job flow progress screen on the operations panel .

At the same time the job flow execution unit determines the next process component to be executed based on the job flow information S . As shown in the process component B follows the process component A and the process component B is to be executed on the image forming apparatus B the image forming apparatus . Therefore the job flow execution unit sends a request for executing the job flow E via the communication unit to the image forming apparatus S S . The execution request includes the name of a job flow job flow E to be executed and an identifier of a process component process component B to be executed. Also the image data temporarily stored in a storage area by the process component A are sent to the image forming apparatus together with the execution request.

When receiving the execution request for the job flow E the communication unit of the image forming apparatus requests the job flow execution unit to execute the process component B and sends the image data to the job flow execution unit S . The job flow execution unit temporarily stores the image data in a storage area and calls the function execution unit corresponding to the process component B S . The function execution unit for example converts the image data and temporarily stores the converted image data in a storage area S . After completing the job the function execution unit reports the completion of the process component B execution to the job flow execution unit S . Then the job flow execution unit reports completion of the process component B execution via the communication unit to the image forming apparatus S S . Also the job flow execution unit sends the image data converted by the process component B to the image forming apparatus together with the completion report.

When receiving the completion report of the process component B execution the communication unit of the image forming apparatus sends the completion report and the converted image data to the job flow execution unit S . The job flow execution unit when receiving the completion report requests the UI display unit to display a job flow progress screen indicating the completion of the process component B execution S . The UI display unit displays the job flow progress screen on the operations panel .

At the same time the job flow execution unit determines the next process component to be executed based on the job flow information. As shown in the process component D follows the process component B and the process component D is to be executed on the image forming apparatus A the image forming apparatus . Therefore the job flow execution unit calls the function execution unit of the image forming apparatus which function execution unit corresponds to the process component D S . The function execution unit for example outputs prints the image data on a plotter the print unit S . After completing the job the function execution unit reports the completion of the job to the job flow execution unit S . In step S since the process component D is an output component it does not store the image data in a storage area.

The job flow execution unit when receiving the completion report requests the UI display unit to display a job flow progress screen indicating the completion of the process component D execution S . The UI display unit displays the job flow progress screen on the operations panel . At the same time the job flow execution unit determines the next process component to be executed based on the job flow information S . As shown in the process component D is the last process component to be executed in the job flow E. Therefore the job flow execution unit requests the UI display unit to display a message indicating that the execution of the job flow E is completed S . The UI display unit for example displays the message on the operations panel .

In a job flow progress screen indicates the job flow E before being executed. In the job flow progress screen rectangles represent process components constituting the job flow E and the process components are arranged in the order of execution. A job flow progress screen indicates that the process component A execution has been completed and corresponds to step S shown in . In the job flow progress screen the rectangle representing the process component A is shaded to indicate that the process component A execution has been completed. A job flow progress screen indicates that the process component B execution has been completed and corresponds to step S shown in . In the job flow progress screen the rectangle representing the process component B is shaded to indicate that the process component B execution has been completed.

Thus the job flow progress screens enable the user to easily check the progress of a job flow. In the number 100 100 displayed under each completed process component indicates a percentage of completion. Thus the job flow progress screen may be configured to indicate a percentage of completion of executing a process component by changing the number during the execution of the process component. In this case the UI display unit updates the job flow progress screen according to the progress of each process component execution in a job flow.

Although two image forming apparatuses the image forming apparatuses and are used in the exemplary process shown in a job flow may be executed by three or more image forming apparatuses .

As described above the image processing system of the fourth embodiment makes it possible to execute a job flow composed of process components selected from multiple image forming apparatuses and thereby to provide better usability. For example the image processing system enables the user to use more functions than available with one image forming apparatus . More specifically the image processing system enables the user to use functions not available in one image forming apparatus by making other image forming apparatuses perform those functions. In other words the user can use functions of remote image forming apparatuses by remote controlling the remote image forming apparatuses through a local image forming apparatus .

Also the fourth embodiment makes it possible to implement an application that is normally available only in a high end image forming apparatus by combining process components in low end image forming apparatuses and thereby makes it possible to avoid costs necessary to purchase a high end image forming apparatus.

Further the fourth embodiment makes it possible to use process components in remote image forming apparatuses. This in turn eliminates the need to install all necessary process components in each image forming apparatus and thereby reduces the workload to maintain process components.

Meanwhile in the first exemplary process of executing the job flow E described above the image forming apparatus takes a passive role. In the first exemplary process the image forming apparatus controls the execution of the job flow E based on the job flow information and the image forming apparatus just executes the process component B as requested by the image forming apparatus and reports the completion of the process component B execution to the image forming apparatus . Controlling a job flow or managing job flow information solely by the image forming apparatus eliminates the need to store the job flow information in the image forming apparatus and therefore simplifies the management of job flow information.

One disadvantage of the first exemplary process is that it requires passive image forming apparatuses to send resulting image data to a controlling image forming apparatus each time the execution of the corresponding process component is completed. Accordingly executing a job flow involving execution of process components on many image forming apparatuses as in the first exemplary process may increase the number of times image data are transmitted and therefore increase the network traffic. A second exemplary process described below is designed to solve the above problem.

When receiving the completion report from the function execution unit corresponding to the process component B S the job flow execution unit of the image forming apparatus reports the completion of the process component B execution via the communication unit to the image forming apparatus S S . Unlike in the first exemplary process the job flow execution unit does not send the image data converted by the process component B to the image forming apparatus together with the completion report.

Instead the job flow execution unit determines the next process component to be executed based on the job flow information registered in the image forming apparatus S . As shown in the process component D follows the process component B and the process component D is to be executed on the image forming apparatus A the image forming apparatus . Therefore the job flow execution unit sends a request for executing the job flow E via the communication unit to the image forming apparatus S S . The execution request includes the name of a job flow job flow E to be executed and an identifier of a process component process component D to be executed. The job flow execution unit also sends the image data converted by the process component B to the image forming apparatus together with the execution request.

When receiving the execution request for the job flow E and the image data the communication unit of the image forming apparatus requests the job flow execution unit to execute the process component D and sends the received image data to the job flow execution unit S . Step S and subsequent steps the execution of the process component D to the display of a completion message are substantially the same as step S and subsequent steps shown in and therefore descriptions of those steps are omitted here.

Thus in the second exemplary process each image forming apparatus determines the next process component to be executed and requests execution of the next process component. In other words an execution request and the accompanying image data are sent from one image forming apparatus to another without going through a controlling image forming apparatus. Therefore compared with the first exemplary process the second exemplary process makes it possible to reduce the network traffic and to improve the process efficiency. Even in the second exemplary process job flow information is not necessarily registered in each image forming apparatus . For example job flow information may be sent from one image forming apparatus to another together with the execution request of a process component.

Next a third exemplary process of executing the job flow E is described. is a sequence chart showing the third exemplary process of executing the job flow E. In the third exemplary process it is assumed that the user requests the execution of the job flow E on the image forming apparatus where the first process component of the job flow E is not available.

When receiving a request from the user the UI display unit of the image forming apparatus displays the job flow list screen as shown in on the operations panel based on job flow information stored in the HDD S . Executable job flows listed in the job flow list screen displayed by the image forming apparatus do not necessarily match those listed in the job flow list screen displayed by the image forming apparatus since the executability of a job flow is determined as described above by the type of the first process component in the job flow. Here it is assumed that the job flow E is executable on both the image forming apparatuses and

When an executable job flow in this case job flow E is selected and the execute button is pressed on the job flow list screen the UI display unit sends the identifier for example job flow name of the job flow E to the job flow execution unit and thereby requests the execution of the job flow E S .

The job flow execution unit obtains the job flow information of the job flow E based on the job flow name sent from the UI display unit and determines the first process component to be executed in the job flow E based on the obtained job flow information S . As shown in the process component A is to be executed first in the job flow E and to be executed on the image forming apparatus A the image forming apparatus . Therefore the job flow execution unit sends a request for executing the job flow E via the communication unit to the image forming apparatus S S . The execution request includes the name of a job flow job flow E to be executed and an identifier of a process component process component A to be executed.

When receiving the execution request for the job flow E the communication unit of the image forming apparatus requests the job flow execution unit to execute the process component A S . The job flow execution unit calls the function execution unit corresponding to the process component A S . The function execution unit performs a job executes a function corresponding to the process component A and saves the resulting image data in a storage area S . After completing the job the function execution unit reports the completion of the process component A execution to the job flow execution unit S . The job flow execution unit reports the completion of the process component A execution via the communication unit to the image forming apparatus S S . When receiving the completion report of the process component A execution the communication unit of the image forming apparatus sends the completion report to the job flow execution unit S . The job flow execution unit when receiving the completion report requests the UI display unit to display a job flow progress screen indicating the completion of the process component A execution S The UI display unit displays the job flow progress screen on the operations panel .

The job flow execution unit of the image forming apparatus when receiving the completion report in step S also determines the next process component the process component B to be executed on the image processing apparatus based on the job flow information S . Then the job flow execution unit sends a request for executing the job flow E via the communication unit to the image forming apparatus S S . The execution request includes the name of a job flow job flow E to be executed and an identifier of a process component process component B to be executed. The job flow execution unit also sends the image data temporarily stored in a specified storage area by the process component A to the image forming apparatus together with the execution request.

In the subsequent steps S through S as in steps S through S shown in the process component B is executed on the image forming apparatus . When receiving the completion report of the process component B execution S the job flow execution unit requests the UI display unit to display a job flow progress screen indicating the completion of the process component B execution S . The UI display unit displays the job flow progress screen on the operations panel .

The job flow execution unit when receiving the completion report in step S also determines the next process component the process component D to be executed on the image processing apparatus based on the job flow information registered in the image forming apparatus S . Then the job flow execution unit sends a request for executing the job flow E via the communication unit to the image forming apparatus S S . The execution request includes the name of a job flow job flow E to be executed and an identifier of a process component process component D to be executed. The job flow execution unit also sends the image data converted by the process component B to the image forming apparatus together with the execution request.

In the subsequent steps S through S as in steps S through S shown in the process component D is executed on the image forming apparatus . When receiving the completion report of the process component D execution S the job flow execution unit reports the completion of the process component D execution via the communication unit to the image forming apparatus S S . The communication unit of the image forming apparatus when receiving the completion report of the process component D execution sends the completion report to the job flow execution unit S . The job flow execution unit then requests the UI display unit to display a job flow progress screen indicating the completion of the process component D execution S . The UI display unit displays the job flow progress screen on the operations panel .

The job flow execution unit of the image forming apparatus when receiving the completion report in step S also determines that execution of the job flow E has been completed based on the job flow information S . Then the job flow execution unit sends a completion report of the job flow E execution via the communication unit to the image forming apparatus S S .

When receiving the completion report of the job flow E execution the communication unit of the image forming apparatus sends the completion report to the job flow execution unit S . The job flow execution unit requests the UI display unit to display a message indicating that the execution of the job flow E has been completed S . The UI display unit for example displays the message on the operations panel .

Thus the fourth embodiment also makes it possible to request execution of a job flow on an image forming apparatus in which the first process component of the job flow is not available and thereby to improve the usability of the image processing system .

The job flow execution unit of the image forming apparatus is an example of a job flow execution control unit.

Embodiments of the present invention provide an image processing apparatus and an information processing system that make it possible to implement an application program by combining process components while maintaining good operability.

According to an embodiment of the present invention an information processing system includes at least one image processing apparatus including process components configured to input process or output image data and an information processing apparatus connected via a network to the image processing apparatus and configured to obtain a list of the process components available in the image processing apparatus to display on a display unit a screen for selecting one or more of the process components from the list and thereby defining a combination of the process components which combination implements an application program for performing an image processing task and to register the combination with an identifier in the image processing apparatus.

An embodiment of the present invention provides a method of registering an application program for performing an image processing task which application program is implemented by a combination of process components configured to input process or output image data. The method includes a list obtaining step of obtaining a list of the process components available in an image processing apparatus a list display step of displaying on a display unit a screen for selecting one or more of the process components from the list and thereby defining the combination of the process components and a registration step of registering the combination with an identifier in the image processing apparatus.

In the above method of registering an application program the execution sequence of the process components in the combination may be specified on the displayed screen.

The above method of registering an application program may also include an identifier entering step of entering the identifier of the combination.

As an alternative the identifier of the combination may be automatically generated based on the process components in the combination.

The above method of registering an application program may also include a second list obtaining step of obtaining a list of the process components available in another image processing apparatus connected via a network to the image processing apparatus. In this case the list display step may be designed to display on the display unit a screen for selecting one or more of the process components from the lists of the process components available in the image forming apparatus and the another image forming apparatus and thereby defining the combination of the process components and the registration step may be designed to register the combination with the identifier in the image processing apparatus and the another image processing apparatus.

Another embodiment of the present invention provides a method of registering an application program in an information processing system including at least one image processing apparatus and an information processing apparatus connected via a network to the image processing apparatus. The method is performed by the information processing apparatus and includes a list obtaining step of obtaining a list of process components available in the image processing apparatus which process components are configured to input process or output image data a list display step of displaying on a display unit a screen for selecting one or more of the process components from the list and thereby defining a combination of the process components which combination implements an application program for performing an image processing task and a registration step of registering the combination with an identifier in the image processing apparatus.

Another embodiment of the present invention provides a method of executing an application program for performing an image processing task which application program is implemented by a combination of process components configured to input process or output image data. The method includes a storing step of storing combinations of the process components an analysis step of determining whether the combinations are executable based on availability information sent from the process components and indicating whether the process components are available and a display control step of displaying a list of the combinations on a display unit based on determination results from the analysis step in such a manner that executable ones of the combinations are distinguishable.

The analysis step of the above method of executing an application program may be designed to determine that a combination is not executable if one or more of the process components in the combination are not available.

The display control step of the above method of executing an application program may be designed to display availability of each of the process components on the display unit.

The above method of executing an application program may also include an execution control step of controlling execution of a selected one of the combinations included in the displayed list.

In the above method of executing an application program the process components send identifiers of programs performing the functions of the process components together with the availability information and the execution control step may be designed to dynamically call the programs corresponding to the process components in the selected one of the combinations based on the identifiers.

According to another embodiment of the present invention an information processing system includes multiple electronic apparatuses configured to implement an application program for performing an information processing task by a combination of process components configured to input process or output electronic data wherein the information processing system is configured such that a first one of the electronic apparatuses executes one of the process components in the combination to input the electronic data and a second one of the electronic apparatuses executes at least another one of the process components in the combination to process or output the electronic data.

In the above information processing system at least the first one of the electronic apparatuses may retain control information containing identifiers of the process components in the combination an execution sequence of the process components in the combination and identifiers of the electronic apparatuses that execute the process components in the combination and the first one of the electronic apparatuses may be configured to cause the second one of the electronic apparatuses to execute the at least another one of the process components based on the control information.

In the above information processing system the second one of the electronic apparatuses may be configured to determine a next one of the process components to be executed based on the control information.

In the above information processing system the second one of the electronic apparatuses may also retain the control information.

In the above information processing system at least one of the electronic apparatuses may be configured to obtain a list of the process components available in the at least one of the electronic apparatuses and other ones of the electronic apparatuses connected via a network to the at least one of the electronic apparatuses to display on a display unit a screen for selecting one or more of the process components from the list and thereby defining the combination of the process components and to register the control information of the combination in at least each of the electronic apparatuses that execute the process components in the combination.

In the above information processing system the first one of the electronic apparatuses may be configured to transfer the control information to the second one of the electronic apparatuses.

The above information processing system may be configured to display the progress of execution of the process components on the display unit.

According to another embodiment of the present invention an electronic apparatus includes an execution control unit configured to implement an application program for performing an information processing task by a combination of process components configured to input process or output electronic data wherein the execution control unit causes another electronic apparatus connected to the electronic apparatus to execute at least one of the process components in the combination to input process or output the electronic data.

Another embodiment of the present invention provides an information processing method in an information processing system including multiple electronic apparatuses configured to implement an application program for performing an information processing task by a combination of process components configured to input process or output electronic data. The method includes the steps of inputting the electronic data by one of the process components of a first one of the electronic apparatuses and processing or outputting the electronic data by one of the process components of another one of the electronic apparatuses.

Still another embodiment of the present invention provides an information processing method in an information processing system including multiple electronic apparatuses configured to implement an application program for performing an information processing task by a combination of process components configured to input process or output electronic data. The information processing method includes the step of executing the combination on a first one of the electronic apparatuses wherein the first one of the electronic apparatuses causes another one of the electronic apparatuses to execute at least one of the process components in the combination.

The present invention is not limited to the specifically disclosed embodiments and variations and modifications may be made without departing from the scope of the present invention.

The present application is based on Japanese Priority Application No. 2006 148861 filed on May 29 2006 Japanese Priority Application No. 2006 148862 filed on May 29 2006 Japanese Priority Application No. 2006 148863 filed on May 29 2006 and Japanese Priority Application No. 2007 088518 filed on Mar. 29 2007 the entire contents of which are hereby incorporated herein by reference.

