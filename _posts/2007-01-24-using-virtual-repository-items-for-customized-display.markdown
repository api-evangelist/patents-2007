---

title: Using virtual repository items for customized display
abstract: In one embodiment, a computer system performs a method for providing repository item information from one or more different perspectives using virtual repository items within a customizable presentation scheme. A computer system accesses a user-defined presentation scheme that describes a manner in which repository items are to be presented. The computer system generates virtual repository items for actual repository items based on the user-defined presentation scheme. The virtual repository items are generated for presentation along with their actual repository items. The computer system maps the virtual repository items to different virtualized sets of repository items according to the user-defined presentation scheme. The virtualized sets comprise at least one of actual repository items and virtual repository items. The computer system presents the virtualized sets of repository items in one or more different perspectives within the user-defined presentation scheme.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08190661&OS=08190661&RS=08190661
owner: Microsoft Corporation
number: 08190661
owner_city: Redmond
owner_country: US
publication_date: 20070124
---
Computers are used all over the world to perform a wide variety of tasks. Computers perform these tasks by executing software code. Software code is typically written by one or more software developers using some type of integrated development environment IDE . In many cases developers are given a set of design instructions and using a programming language draft software code that will implement the functions described in the design specifications. Depending on the nature and scope of the design specifications or any subsequent modifications thereto the software program can be both large and complex.

Enterprise software programs for example may involve many hundreds or thousands of software files each file designed to interact with other files within the program and externally with other software programs and or operating systems. Often supplemental programs or databases are used to organize search and maintain the metadata which describes the program and its files. Program metadata consists of information such as the structure of program components behavior of those components and other characteristics useful for organization and control. File metadata consists of information such as the date the file was last modified the size of the file the file s relation to other files within the software program and other characteristics useful for organization and control.

Software programs such as repositories typically display and store a software program s files and their corresponding metadata together using an entity property value approach also called the universal schema approach . For example a repository might list the files alphabetically with the metadata alongside each portion of metadata corresponding to the appropriate file. In such an example the repository would list the file i.e. the entity each file property s name and a value for the property. Related files would for example be shown as a list of related files headed by the kind of relationship e.g. files related to the file by an automatic generation process . This common entity property value approach however is cumbersome and ill suited to providing a customized user centric approach. As well as being displayed to the user in this way the metadata is also stored in the repository in an analogous way as a table of entities a table of property value pairs and a table of relationship first entity second entity triples.

Furthermore current software repositories typically allow a user e.g. a developer to search and or browse all of the files and their corresponding metadata in the software program. Such search features however are only useful to a limited extent and lack many significant features. For example in practice repositories contain a wide variety of metadata and often the best way to display this metadata will vary between different metadata representations. Current software repositories typically only allow one method of displaying software metadata i.e. the entity property value approach . Furthermore current software repository search techniques are unacceptably slow and inefficient.

Embodiments of the present invention are directed to providing repository item information from different perspectives using virtual repository items within a customizable presentation scheme. In one embodiment of this invention a computer system performs a method for providing repository item information from different perspectives using virtual repository items within a customizable presentation scheme. A computer system accesses a user defined presentation scheme that describes a manner in which repository items are to be presented. The computer system generates virtual repository items for actual repository items based on the user defined presentation scheme. The virtual repository items are generated for presentation along with their actual repository items. The computer system maps the virtual repository items to different virtualized sets of repository items according to the user defined presentation scheme. The virtualized sets comprise at least one of actual repository items and virtual repository items. The computer system presents the virtualized sets of repository items in different perspectives within the user defined presentation scheme.

This Summary is provided to introduce a selection of concepts in a simplified form that are further described below in the Detailed Description. This Summary is not intended to identify key features or essential features of the claimed subject matter nor is it intended to be used as an aid in determining the scope of the claimed subject matter.

Embodiments are directed to providing repository item information from different perspectives using virtual repository items within a customizable presentation scheme. In one embodiment a computer system performs a method for providing repository item information from different perspectives using virtual repository items within a customizable presentation scheme. Next a computer system accesses a user defined presentation scheme that describes a manner in which repository items are to be presented. The computer system generates virtual repository items for actual repository items based on the user defined presentation scheme. The virtual repository items are generated for presentation along with their actual repository items. The computer system maps the virtual repository items to different virtualized sets of repository items according to the user defined presentation scheme. The virtualized sets include actual repository items and virtual repository items. Next the computer system presents the virtualized sets of repository items in different perspectives within the user defined presentation scheme. The embodiments of the present invention may comprise a special purpose or general purpose computer including various types of computer hardware as discussed in greater detail below.

Embodiments within the scope of the present invention also include computer readable media for carrying or having computer executable instructions or data structures stored thereon. Such computer readable media can be any available media that can be accessed by a general purpose or special purpose computer. By way of example and not limitation such computer readable media can comprise physical or recordable type computer readable media including RAM ROM EEPROM CD ROM or other optical disk storage magnetic disk storage or other magnetic storage devices or any other medium which can be used to carry or store desired program code in the form of computer executable instructions or data structures and which can be accessed by a general purpose or special purpose computer. Additionally when information is transferred or provided over a network or another communications connection either hardwired wireless or a combination of hardwired or wireless to a computer the computer properly views the connection as a computer readable medium. Thus any such connection is also properly termed a computer readable medium. Combinations of the above should also be included within the scope of computer readable media.

Computer executable instructions comprise for example instructions and data which cause a general purpose computer special purpose computer or special purpose processing device to perform a certain function or group of functions. Although the subject matter has been described in language specific to structural features and or methodological acts it is to be understood that the subject matter defined in the appended claims is not necessarily limited to the specific features or acts described above. Rather the specific features and acts described above are disclosed as example forms of implementing the claims.

In some embodiments user defined presentation scheme may be only partially customizable. For example some elements of the presentation scheme may be locked so as to be unavailable for changing. This may be beneficial for computer administrators who might want to ensure uniformity in the way certain information is presented to the users. In other embodiments one or more of the layout or structural elements can be user defined up to and including all aspects of the presentation scheme.

Computers system includes presentation scheme access module . In some embodiments presentation scheme access module may be used to access user defined presentation scheme . For example if a user defines and enters a user defined presentation scheme into computer system presentation scheme access module may be configured to receive and access the scheme . Furthermore presentation scheme access module may be configured to pass user defined presentation scheme to virtual repository item generation module . In some embodiments user defined presentation scheme may be the same as user defined presentation scheme in which case scheme is accessed by access module and passed directly on to generation module . In other embodiments presentation scheme access module may access other user defined presentation schemes that may have been stored on a hard drive or other storage medium and pass those accessed schemes on represented in this example as user defined presentation scheme .

Computer system also includes virtual repository item generation module . In some embodiments generation module may be configured to receive user defined presentation scheme as well as actual repository items . A repository as used herein may be any type of information store such as a database directory system registry or other means of storing various types of information. Actual repository items may include but are not limited to metadata for program files file references namespaces base classes interfaces program settings registry settings or any other information item that may be stored in a repository. Virtual repository item generation model may be configured to generate a virtual repository item based on the received user defined presentation scheme and actual repository items as will be discussed in greater detail below. Generated virtual repository items may be sent to repository item mapping module .

In some embodiments repository item mapping module may be configured to receive virtual repository items and map virtual repository items to different virtualized sets of repository items as will be described in greater detail below. Mapping module may send virtualized sets to display device . In some embodiments virtualized sets may be sets of any types of information paired or mapped by mapping module . For example a virtualized set may include an actual repository item and a virtual repository item. As one would appreciate virtualized set may include any combination of actual repository items and virtual repository items. Furthermore virtualized sets may be customized according to user defined presentation scheme . Display device may be any type of device capable of displaying information. For example devices capable of displaying text graphics motion pictures or other types of information including computer monitors televisions laptops touch screens or any other type of display come within the scope of display device .

Method includes an act of accessing a user defined presentation scheme that describes a manner in which repository items are to be presented act . For example presentation scheme access module may access user defined presentation scheme that describes a manner in which repository items are to be presented. In some embodiments the user defined presentation scheme uses monikers to refer to repository items and virtual repository items. As used herein a moniker or moniker family can refer to any type of naming system or to a specific name. For example a moniker that refers to a type of naming system may be a globally unique identifier GUID . A moniker that refers to a specific name might be Conic.Circle as listed under Types in .

Method includes an act of generating virtual repository items for actual repository items based on the user defined presentation scheme wherein virtual repository items are generated for presentation along with their actual repository items act . For example virtual repository item generation module may generate virtual repository items for actual repository items based on user defined presentation scheme . Virtual repository items may be generated for presentation along with actual repository items . In some embodiments generating the virtual repository items includes accessing an actual repository item for use in generating the virtual repository item. For example generation module may access actual repository items and determine which actual repository items are going to be displayed multiple times. For those actual repository items that are to be presented multiple times in the same presentation generation module may generate one or more virtual repository items corresponding to each actual repository item. This allows for the simultaneous display of actual repository items that otherwise would not be able to be displayed at the same time.

Method includes an act of mapping the virtual repository items to different virtualized sets of repository items according to the user defined presentation scheme wherein the virtualized sets comprise at least one of actual repository items or virtual repository items act . For example repository item mapping module may map virtual repository items to different virtualized sets of repository items according to user defined presentation scheme . Virtualized sets may include at least one of actual repository items or virtual repository items .

In some embodiments virtualized set includes at least one of a plurality of actual repository items a plurality of virtual repository items or a combination of actual repository items and virtual repository items . For example virtualized set may include three actual repository items and five virtual repository items note that these numbers were chosen arbitrarily and that any combination of numbers could be used . In this example the five virtual as repository items may represent two virtual repository items for two of the actual repository items and one virtual repository item for the remaining actual repository item. Thus in such an example one two or all three actual repository items may be presented as well as any one or more of the five virtual repository items. Furthermore any combination of actual and virtual repository items may be presented. Note also that virtual repository items may be presented without presenting the corresponding actual repository item.

In some embodiments a browser may be used to view virtualized sets. A browser may be any type of metadata viewer such as a hierarchical tree based browser or other means of browsing information. As explained above a virtualized set may include any combination of virtual and actual repository items. Such browsers may be capable of presenting any number of actual repository items virtual repository items or virtualized sets. In some embodiments user defined presentation scheme may be scalable to include any number of virtualized sets. These sets and repository items may be browseable and or searchable as will be explained in greater detail below.

Method includes an act of presenting the virtualized sets of repository items in one or more different perspectives within the user defined presentation scheme act . For example computer system may present virtualized sets of repository items in one or more different perspectives within user defined presentation scheme . In some embodiments a computer system user may be able to dynamically restructure the presentation of the virtualized sets based on a modification of user defined presentation scheme .

For example a user may wish to display repository items in column including the types and namespaces of Shapes.dll. If computer system was previously configured to display the types and namespaces as a diagram and the user wishes to display them as a categorized list each item followed by its moniker the user could specify such a display by modifying user defined presentation scheme and inputting the scheme into computer system . Other presentation schemes may include formatted reports or formatted documents. Additionally or alternatively as mentioned above other presentation schemes may be stored on a hard drive or other storage medium accessible by computer system and may similarly be modified to alter the presentation of virtualized sets .

In some embodiments a user may desire to present virtualized sets according to the namespace to which the actual repository item belongs. For example if Pentagon and Rectangle belong to the namespace Polygon in Pentagon and Rectangle can be presented as indented entries categorized under the namespace name Polygon. In other embodiments the virtualized set entries may be presented paired with the namespace. For example Polygon.Pentagon Polygon.Rectangle and Polygon.Triangle may be presented as namespace class name pairs under Types .

Computer system may be used to efficiently search virtualized sets by deferring the loading of providers and the execution of provider instructions until appropriate. Providers as used herein include any type of application programming interface or other means whereby information is accessed searched loaded saved or otherwise manipulated. In some cases users may desire to browse and or search repository information. Such browsing and searching may be efficiently performed by deferring the loading of providers until deemed appropriate by computer system .

By not loading at least some of the providers less information will be as accessed at browser startup time thus ensuring a quicker startup time. Similarly once the provider has searched and located one or more repository items computer system may defer the execution of provider instructions until appropriate. For example a browser s interface may have various buttons that allow access to different operations that may be performed using the retrieved repository information. Although the provider has retrieved information regarding the repository items and provided instructions on how the information is to be used the execution of the instructions may be deferred until actuated by a user and or until deemed appropriate by computer system .

In some embodiments a repository information browser may include custom search panels. Such search panels may allow a user to specify various types of information that the browser and or provider may use in searching repository information. For example a search panel may allow searching based on accessibility base classes interface namespace size modification date or other characteristics. Computer system may also allow users to add various other characteristics to search by. In some embodiments a user search queries actual repository item providers to determine which is able to display a selected moniker. For example if a user had chosen a moniker of 271f64d9 7bde 4091 990b 53f85934e820 13 Provider X may respond that it is capable of displaying all monikers that start with 271f64d9 7bde 4091 990b 53f85934e820. Thus in this case Provider X would be able to display all of the virtualized sets under Types as each starts with 271f64d9 7bde 4091 990b 53f85934e820 and ends with a different number e.g. Polygon.Pentagon ends with 13 Polygon.Rectangle ends with 12 and so on .

In such embodiments multiple versions the same actual repository item may be simultaneously presented. For example under item s moniker notice that Polygon.Rectangle has the same GUID followed by the same number 13 when listed under Types as when listed under Namespaces . Thus the Rectangle repository item may be presented in multiple ways at the same time as an actual repository item a virtual repository item or a combination of actual and virtual repository items mapped into virtualized sets and displayed on display .

The present invention may be embodied in other specific forms without departing from its spirit or essential characteristics. The described embodiments are to be considered in all respects only as illustrative and not restrictive. The scope of the invention is therefore indicated by the appended claims rather than by the foregoing description. All changes which come within the meaning and range of equivalency of the claims are to be embraced within their scope.

