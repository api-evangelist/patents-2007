---

title: System and method for service oriented email client application
abstract: A system to facilitate a service oriented email client application. The system includes a service registry, a service address book coupled to an email client, and an email composer coupled to the service address book. The service registry includes service information. The service information describes how to invoke a web service. The service address book includes a web service entry linked to the service information for the web service in the service registry. The email composer generates a user input form with a custom input field corresponding to the service information for the web service.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08676902&OS=08676902&RS=08676902
owner: International Business Machines Corporation
number: 08676902
owner_city: Armonk
owner_country: US
publication_date: 20071128
---
Service Oriented Architecture SOA is an architectural design approach to define relationships between service producers and consumers. In a service oriented architecture environment independent services are accessible to different consumers without requiring knowledge of the underlying platform implementations of the available services. Service oriented architecture introduced a new emerging computing standard which allows the software components or systems to be exposed and consumed as loosely coupled services. This technology gives the potential to extend the capability and primary functions of a conventional email system. In particular service oriented architecture technology provides an ability to extend the functionality of a conventional email client.

Conventional email systems are primarily used for human to human communications. Conventional email systems do not support human to computer service applications. In applications that imitate human to computer service applications email systems typically interface with a custom application programming interface API that has limited functionality tied to a particular service offering. While existing standards such as Simple Object Access Protocol SOAP and Simple Mail Transfer Protocol SMTP provide an infrastructure foundation for human to computer communications conventional email systems do not take advantage of these and other standards to facilitate human to computer software services.

Embodiments of a system are described. In one embodiment the system is a system to facilitate a service oriented email client application. An embodiment of the system includes a service registry a service address book coupled to an email client and an email composer coupled to the service address book. The service registry includes service information. The service information describes how to invoke a web service. The service address book includes a web service entry linked to the service information for the web service in the service registry. The email composer generates a user input form with a custom input field corresponding to the service information for the web service.

In some embodiments the system also includes an email server coupled to the email client and an adapter coupled between the email server and a web service endpoint corresponding to the web service in the service registry. The email server receives a service request from the email client. The adapter receives the service request from the email client and communicates the service request to the web service endpoint. In some embodiments the adapter is also configured to receive a synchronous reply from the web service endpoint and to communicate the synchronous reply to the email server for communication to the email client. The adapter may be a Simple Mail Transfer Protocol SMTP adapter or another type of email adapter. In some embodiments the system accommodates an asynchronous service request.

In some embodiments the system also includes a service data transformer coupled to the email composer. The service data transformer transforms a service request from the email composer into a message format compatible with the service information for the web service. In some embodiments the system also includes a user interface controller coupled to the email composer. The user interface controller generates a graphical user interface for display on a display device. The graphical user interface directs a user to provide input according to the user input form with the custom input field corresponding to the service information for the web service. In some embodiments the system also includes a service analyzer coupled to the email composer. The service analyzer analyzes the service information for the web service and determines the custom input field corresponding to the service information for the web service. In some embodiments the system also includes a service registry cache coupled to the service address book. The service registry cache stores a map of the service information from the service registry in the service address book. The service address book may be local to the email client. In some embodiments the email composer generates the user input form with a free text input field to allow a free text input corresponding to a service request for the web service in the service registry. Other embodiments of the system are also described.

Embodiments of a method are also described. In one embodiment the method includes obtaining service information descriptive of invocation procedures for a web service. The service information includes metadata corresponding to a custom input field for the web service. The method also includes generating a custom user interface to facilitate user input according to the custom input field for the web service. The method also includes using an email protocol to invoke a service request for the web service based on the user input. Other embodiments of the method are also described.

Embodiments of an apparatus are also described. In one embodiment the apparatus is a computer program product which includes a computer useable storage medium to store a computer readable program that when executed on a computer causes the computer to perform operations. In one embodiment the operations include an operation to link a web address entry of an address book in an email client to service information from a service registry. The service information corresponds to a web service. The operations also include operations to generate a user input form with a custom input field corresponding to the service information for the web service and to invoke a service request for the web service via an email message according to user input via the custom input field of the user input form.

In another embodiment the apparatus is an apparatus to facilitate an email client as a web service consumer. An embodiment of the apparatus includes means for mapping a service endpoint from a service registry into an email address book and means for automatically generating a custom email composer interface based on a service description of the service endpoint. The custom email composer interface includes a custom input field for user input of custom data specified by the service description. The apparatus also includes means for automatically transforming the custom data into a message format compatible with the service description and means for invoking a service request for the service endpoint over an email protocol. Other embodiments of the apparatus are also described.

Other aspects and advantages of embodiments of the present invention will become apparent from the following detailed description taken in conjunction with the accompanying drawings illustrated by way of example of the principles of the invention.

In the following description specific details of various embodiments are provided. However some embodiments may be practiced with less than all of these specific details. In other instances certain methods procedures components structures and or functions are described in no more detail than to enable the various embodiments of the invention for the sake of brevity and clarity.

While many embodiments are described herein at least some of the described embodiments bridge the gap of how an email client system can be service aware and allow the users of the email client system to request heterogeneous services without knowing the particular details of the requested service. Some of the described embodiments include three technical components namely a service address book a mapped service registry and an email client. The service address book component of the system stores service registry information in the email client. The service registry contains the information e.g. metadata about a particular service. A user looks up a service from the service address book which in turn connects to the mapped service registry and returns information about the requested service to the email client. The returned information contains the specific details of how and where to invoke the service.

Once the service description information is acquired the email client analyzes the service information and invokes or generates an email composer. The email composer understands the format of the service message and the appropriate input form. Also the generated email composer can transform the input provided by the user into a message format accepted by the service provider for the requested service. Other embodiments are also described below with specific reference to the corresponding figures.

The email client includes a service requester to invoke a service request. The service request is communicated by the service requester to the email server via an email protocol such as Simple Mail Transfer Protocol SMTP or another type of email protocol. The email server then relays the service request from the email client to the corresponding web service . In one embodiment an adapter e.g. an SMTP adapter associated with the web service receives the service request from the email server . Since the service request in this example is an asynchronous service request the adapter communicates the service request to the web service but a response from the web service to the email client is not necessarily provided and if provided may be communicated at a later time.

It should be noted that the depicted asynchronous service oriented email client application is not restrictive with respect to the type of email client email server or web service that is implemented. The email client may be any type of email client and the email server may be any type of email server. In other embodiments the functionality of the email client and the email server may be combined in a single hardware implementation and or software interface. Additionally some embodiments of the asynchronous service oriented email client application may be implemented in conjunction with internet based email systems.

Also the adapter may be any type of standard email adapter. Since the service requester invokes a service request that is tailored to the requested web service the adapter does not necessarily have any custom software code or other customized design elements to facilitate an interface between the email client and the web service . Although this description frequently references an exemplary SMTP adapter other embodiments described herein may utilize other types of email adapters . Similarly SMTP or other types of email protocols may be implemented within the various embodiments described herein.

The illustrated web service mapping architecture includes the email client and a service registry . In one embodiment the email client is coupled to the service registry by a communication channel which is representative of various types of wired and or wireless communication channels.

In general the service registry includes a service description or service information for one or more web services . In particular the service information of the service registry includes metadata indicative of invocation procedures for one or more web services . The web services correlate to one or more web service endpoints which are shown in and described in more detail below. Hence the service information indicates how and where to invoke a particular web service . In one embodiment the service registry is stored in an electronic data storage device not shown remote from the email client .

The email client is coupled to the service registry to invoke a service request for the web service of at least one of the web service endpoints. More specifically the email client invokes the service request using an email protocol. In order to facilitate the service request invocation the email client includes an address book . The address book includes one or more web service entries which are linked to the service information for the web services in the service registry . In one embodiment the web service entries appear as contacts within the address book . However the web service entries are linked to corresponding service descriptions in the service registry rather than email addresses for conventional email recipients. Nevertheless the address book may store both email addresses and web service entries within the same data structure. Alternatively the web service entries may be stored in a separate data structure from the email addresses used by the email client .

Additionally the email client may include a service registry cache . The service registry cache stores a map of the service description or service information from the service registry in the service address book . Alternatively the service registry cache is coupled to the address book . Although the service address book is shown in as being local to the email client other embodiments may include an address book that is remote from the email client .

In contrast to the asynchronous service oriented email client application of the synchronous service oriented email client application of facilitates a synchronous reply communication from the web service to the email client . In particular the adapter sends a reply payload to the email server over the reply communication channel using an email protocol such as SMTP. The email server then directs the reply payload to the email client over the reply communication channel using the email protocol. Although the reply communication channels and are shown as distinct communication channels from the communications channels and some embodiments of the synchronous service oriented email client application may use the same communication channels and for both the service request communication to the web service and the reply payload to the email client .

In general the email composer interface facilitates entry of data pertinent to a requested web service . In particular the email composer interface allows a user to input data that is specific to the requested web service in accordance with the service description corresponding to the requested web service .

In the illustrated embodiment the email composer interface includes a title bar and a menu bar . The title bar and the menu bar function similar to conventional title and menu bars. The email composer interface also includes a send button a to button and a to address input field . The send button operates similar to conventional send buttons to transmit the email message from the email client to the email server . The to button allows the user to access the address book for example by opening up a separate window to display the address book entries including the web service entries . Alternatively a user may manually enter a web service email address into the to address input field similar to addressing a conventional email message using an email address corresponding to an intended recipient.

The illustrated email composer interface also includes a custom input field . In the depicted example the custom input field is a symbol field for a stock quote. As an example the user may enter a ticker symbol for a stock in the custom input field and address the web service request to a stock quote web service e.g. Stock Quote Service at request stokquote.com in order to request a synchronous email reply with a current or recent stock price corresponding to the ticker symbol.

The email composer interface also may include a subject identifier . In some embodiments the subject identifier is automatically populated according to the service description for the requested web service . Other embodiments may omit the subject identifier .

In some embodiments the email composer interface also includes a button to allow a user to enter free text to invoke the service request for the requested web service . When selected the free text button provides a free text input field to allow a user e.g. a human operator an automated computer program etc. to provide free text input e.g. extensible markup language XML code or another type of programming code according to the service description for the requested web service .

The illustrated service oriented email system includes the email client the email server the adapter the service registry and a service network with a plurality of service endpoints . The email client is coupled to the email server by the communication channel and potentially the communication channel as described above. The email server is coupled to the adapter by the communication channel and potentially the communication channel and the adapter is coupled to the service network by the communication channel . Similarly the email client is coupled to the service registry by the communication channel as described above and the service registry is coupled to the service network by the communication channel . Any or all of the communication channels may be representative of any combination of wired and or wireless communication channels that establish any type of direct or networked communication path between the corresponding components of the service oriented email system .

As explained above the email server receives a service request from the email client and communicates the service request to the adapter . The service request is invoked using an email protocol such as SMTP or another type of email protocol. The adapter receives the service request from the email client and communicates the service request to the corresponding web service endpoint within the service network . The service request may be a synchronous service request for which a reply payload is generated and returned to the email client or an asynchronous service request for which a reply payload is not anticipated or generated. For a synchronous service request the adapter receives the synchronous reply from the web service endpoint and communicates the synchronous reply to the email server . The email server then communicates the synchronous reply to the email client . An example of a synchronous service request is a request for a stock price quote which returns the current price of a stock. An example of an asynchronous request is a request to update user account information. In this case the user may not require any type of response from the corresponding service endpoint after the updated account information is submitted via the email client to the corresponding service endpoint .

The email client includes the service address book a service analyzer an email composer generator and the email service requester . The email client also includes a protocol handler a user interface UI controller and a service data transformer . Other embodiments of the email client may include fewer or more components and or implement more or less functionality.

In one embodiment the email composer generator or simply email composer generates a user input form with a custom input field corresponding to the service description or service information for the web service . In some embodiments the email composer generates the user input form with a free text input field to allow a free text input corresponding to a service request for the web service in the service registry . The free text input field may be the same as or different from the custom input field .

In one embodiment the service data transformer transforms a service request from the email composer into a message format compatible with the service description or service information for the web service . Additionally the service data transformer may transform a reply payload from the message format compatible with the service description to a format compatible with the email client for display to a user.

In one embodiment the user interface controller generates a GUI e.g. the GUI of for display on a display device. The GUI directs a user to provide input according to the user input form with the custom input field corresponding to the service description or service information for the web service . In one embodiment the service analyzer analyzes the service information for the web service and determines the custom input field corresponding to the service information for the web service .

In one embodiment the protocol handler manages one or more email protocols and facilitates compliance of outgoing email messages with at least one of the email protocols. In one embodiment the email service requestor invokes the service request via the email protocol. The service request includes the user input in the message format compatible with the service information for the web service .

In one embodiment the service oriented email method includes obtaining service information descriptive of invocation procedures for a web service . The service information includes metadata corresponding to a custom input field for the web service . In one embodiment the service address book accesses the service description to obtain the service information. The email client then generates a custom user interface to facilitate user input according to the custom input field for the web service . In one embodiment the email client may implement the service analyzer the email composer generator and or the user interface controller to generate the custom user interface . After receiving user input corresponding to the custom input field of the custom user interface the email service requestor uses an email protocol to invoke a service request for the web service based on the user input. The depicted service oriented email method then ends.

In another embodiment the service oriented email method may include one or more additional operations to implement the functionality of the service oriented email system and other embodiments described herein. For example an embodiment of the service oriented email method includes storing a web service entry in an address book of an email client . The web service entry includes a service request email address for invoking the service request for the web service . In this embodiment generating the custom user interface includes providing an email address input field for user input of the service request email address corresponding to the web service . In another embodiment the service oriented email method includes generating the custom user interface with a free text input field for free text input of custom data according to the custom input field for the web service .

In one embodiment the service oriented email method includes mapping the service registry into the service address book of the email client . Subsequently the email client receives a user request to look up a service via the service address book . In one embodiment a user may select the to button within the email composer interface to initiate a lookup operation for a web service entry in the service address book . Alternatively the user may type in a service request email address in the email address input field of the email composer interface .

After receiving the user request to look up a web service in the service address book the email client determines if the service is located in the service address book . If the service is not located in the service address book then the email client may con the service address book . An example of the configuration operation is shown in and described in more detail below. Otherwise if the service is located in the service address book then the email client connects to the service registry . In particular the email client uses the web service entry in the service address book which points to the service description in the service registry to retrieve the service information corresponding to the requested web service . The service analyzer then analyzes the service information e.g. metadata for the requested web service to determine how to invoke the corresponding web service . The email composer generator then generates an email composer that is tailored to the web service according to the service information. The email composer may be graphically implemented as the email composer interface by the user interface controller .

Using the email composer interface a user may input the information for the service request. The user interface controller receives the user input for the service request and the service data transformer transforms the user information into an acceptable message format for the requested web service . Using this transformed data the email service requester invokes the service request using an email protocol.

As explained above the service request may be a synchronous service request. If the service request is determined to be a synchronous service request then upon receipt of the reply payload from the corresponding web service endpoint the service data transformer transforms the service response i.e. the reply payload to a local message format compatible with the email client . The depicted service oriented email method then ends.

In one embodiment the email client receives user input to specify service registry information. In other words a user may input service information via the email client . The email client then determines if the service registry information received from the user is already in the service registry cache local to the email client . If the service registry information is not in the service registry cache then the email client stores the service registry information received from the user in the service registry cache . After configuring the local address book or if the service registry information is already in the service registry cache then the email client links to the service registry and creates a map for the service registry information in the local address book . The depicted configuration operation then ends.

The illustrated client computer includes a processor a display device and an electronic memory device . In one embodiment the processor is a central processing unit CPU . In other embodiments the processor is a graphical processing unit GPU or another type of processing device such as a general purpose processor an application specific processor or a microprocessor. In general the processor executes one or more instructions to provide operational functionality to the client computer . The instructions may be stored locally in the processor in the electronic memory device or in another data storage device. Alternatively the instructions may be distributed across one or more devices such as the processor the electronic memory device or another data storage device.

In some embodiments the display device is a graphical display such as a cathode ray tube CRT monitor a liquid crystal display LCD monitor or another type of display device. The display device is coupled to the processor for example via a data bus . In one embodiment the display device is configured to convey a visual representation of a email composer interface described above and shown in .

The electronic memory device is also coupled to the processor . In one embodiment the electronic memory device is local memory within the processor . In other embodiments the electronic memory device is separate from the processor and coupled to the processor via one or more data address and or control buses . An embodiment of the email client may be at least partially implemented on the electronic memory device .

As an example of some of the embodiments described above the email client may be used to implement a service oriented email system in which email is used to request and quote a stock price. Many organizations and companies provide conventional electronic services for investors to quote the current price of a particular stock. Most of these conventional electronic services are implemented using a web browser based client available to input the stock information and make request. However similar functionality can be achieved via the service oriented email system of or similar systems and methods.

In one embodiment the email client includes a local service address book to store a service registry location for a corresponding web service . This can be implemented using Universal Description Discovery and Integration UDDI or another protocol. The service registry information is mapped to a local address name such as Stock Quote. Once the user initiates an email session the email client allows the user to type in the service name e.g Stock quote in the to address input field of the email composer interface .

Subsequently the email client automatically searches for an entry in the local address book for a service registry mapping. Once the email client locates the service registry the email client makes a call to the service registry and retrieves the specific information back to the email client . The service information can be represented in Web Services Description Language WSDL or another format which contains metadata to describe the service end point address and message format information. Based on the information acquired from the service registry lookup the email client parses the WSDL file and invokes an internal code generator to dynamically create an email composer which has a custom input field such as a stock quote input field. Using the custom input field the user can type in the appropriate information for the service request.

Once the input is completed the email composer understands the input format and automatically transforms the input data into the service recognizable message. An exemplary format includes XML format in SOAP standard. Then when the user clicks the send button the email client triggers the invocation of the stock quote service. Optionally the user can also specify a reply option either synchronously or asynchronously. In this example of a stock quote service a synchronous response represents a real time quote while an asynchronous response represents a delayed quote.

From the foregoing description it can be understood that embodiments described herein can implement many functions within a service oriented email environment. Some embodiments extend the capability of a conventional email system to be service oriented and service aware. This allows the email client to invoke services over email protocols such as SMTP. Some embodiments map the service endpoint from various service registries into the email address book of an email client. This allows the email client to retrieve the service information from the service registry. Some embodiments auto generate the email composer or editor based on the service description. Some embodiments auto transform the email body into the service recognizable message format. Some embodiments identify the service invocation protocol and complete the service request.

Accordingly an embodiment of an apparatus to facilitate an email client as a web service consumer may be implemented. In one embodiment the apparatus includes means for mapping a service endpoint from a service registry into an email address book and means for automatically generating a custom email composer interface based on a service description of the service endpoint. The custom email composer interface includes a custom input field for user input of custom data specified by the service description. The apparatus also includes means for automatically transforming the custom data into a message format compatible with the service description and means for invoking a service request for the service endpoint over an email protocol. In another embodiment the apparatus also includes means for accommodating the email client as the web service consumer of heterogeneous web services via a single type of email adapter.

It should also be noted that at least some of the operations for the methods and or systems described herein may be implemented using software instructions stored on a computer useable storage medium for execution by a computer. As an example an embodiment of a computer program product includes a computer useable storage medium to store a computer readable program that when executed on a computer causes the computer to perform operations including an operation to link a web address entry of an address book in an email client to service information from a service registry. The service information corresponds to a web service. The operations also include operations to generate a user input form with a custom input field corresponding to the service information for the web service and to invoke a service request for the web service via an email message according to user input via the custom input field of the user input form.

Another embodiment of the computer program product includes an operation to store a map of the service information from the service registry in a service registry cache coupled to the address book in the email client. In another embodiment the operations include an operation to analyze the service information for the web service and to determine the custom input field corresponding to the service information for the web service. In another embodiment the operations include an operation to generate a graphical user interface for display on a display device. The graphical user interface directs a user to provide input according to the user input form with the custom input field corresponding to the service information for the web service. In another embodiment the operations include an operation to transform a service request with the user input from the user input form into a message format compatible with the service information for the web service. In another embodiment the operations include an operation to generate the user input form with a free text input field to allow a free text input corresponding to a service request for the web service in the service registry. Other embodiments of the computer program product may include operations to implement additional functionality as described herein.

Embodiments of the invention can take the form of an entirely hardware embodiment an entirely software embodiment or an embodiment containing both hardware and software elements. In one embodiment the invention is implemented in software which includes but is not limited to firmware resident software microcode etc.

Furthermore embodiments of the invention can take the form of a computer program product accessible from a computer usable or computer readable storage medium providing program code for use by or in connection with a computer or any instruction execution system. For the purposes of this description a computer usable or computer readable storage medium can be any apparatus that can store the program for use by or in connection with the instruction execution system apparatus or device.

The computer useable or computer readable storage medium can be an electronic magnetic optical electromagnetic infrared or semiconductor system or apparatus or device or a propagation medium. Examples of a computer readable storage medium include a semiconductor or solid state memory magnetic tape a removable computer diskette a random access memory RAM a read only memory ROM a rigid magnetic disk and an optical disk. Current examples of optical disks include a compact disk with read only memory CD ROM a compact disk with read write CD R W and a digital video disk DVD .

An embodiment of a data processing system suitable for storing and or executing program code includes at least one processor coupled directly or indirectly to memory elements through a system bus such as a data address and or control bus. The memory elements can include local memory employed during actual execution of the program code bulk storage and cache memories which provide temporary storage of at least some program code in order to reduce the number of times code must be retrieved from bulk storage during execution.

Input output or I O devices including but not limited to keyboards displays pointing devices etc. can be coupled to the system either directly or through intervening I O controllers. Additionally network adapters also may be coupled to the system to enable the data processing system to become coupled to other data processing systems or remote printers or storage devices through intervening private or public networks. Modems cable modems and Ethernet cards are just a few of the currently available types of network adapters.

Although the operations of the method s herein are shown and described in a particular order the order of the operations of each method may be altered so that certain operations may be performed in an inverse order or so that certain operations may be performed at least in part concurrently with other operations. In another embodiment instructions or sub operations of distinct operations may be implemented in an intermittent and or alternating manner.

Although specific embodiments of the invention have been described and illustrated the invention is not to be limited to the specific forms or arrangements of parts so described and illustrated. The scope of the invention is to be defined by the claims appended hereto and their equivalents.

