---

title: Manageability platform in an unified system
abstract: An unified system that comprises a host system platform that includes a host operating system, a host processor that operates to execute host system applications within the host OS. The unified system also includes a manageability platform dedicated to performing manageability operations to manage the host system platform and includes, a manageability OS, a manageability processor dedicated to execute the manageability operations within the manageability OS, wherein the manageability processor is a general-purpose processor, an automation engine integrated in the manageability platform and executed by the manageability processor to perform the manageability operations, and a plurality of interfaces that provide the manageability processor with access to the host system platform to support the performance of the manageability operations.
url: http://patft.uspto.gov/netacgi/nph-Parser?Sect1=PTO2&Sect2=HITOFF&p=1&u=%2Fnetahtml%2FPTO%2Fsearch-adv.htm&r=1&f=G&l=50&d=PALL&S1=08185913&OS=08185913&RS=08185913
owner: Hewlett-Packard Development Company, L.P.
number: 08185913
owner_city: Houston
owner_country: US
publication_date: 20070731
---
This application is related to U.S. patent application Ser. No. 11 888 349 filed on Jul. 31 2007 and entitled SYSTEMS AND METHODS FOR EXCHANGING RUNTIME FUNCTIONALITIES BETWEEN SOFTWARE STACKS and U.S. patent application Ser. No. 11 888 348 filed on Jul. 31 2007 and entitled STORAGE CENTRIC MANAGEABILITY IN A SYSTEM which are herein incorporated by reference in their entireties.

Manageability is a key requirement for a broad spectrum of information technology IT systems ranging from laptops to blade servers to clusters to large scale data centers. With rising complexity and scale in tomorrow s enterprise IT systems management has become a dominating cost. As referred herein manageability includes management and maintenance tasks or operations. As also referred herein and as understood in the art information technology or IT encompasses all forms of technology including but not limited to the design development installation and implementation of hardware and software information or computing systems and software applications used to create store exchange and utilize information in its various forms including but not limited to business data conversations still images motion pictures and multimedia presentations technology and with the design development installation and implementation of information systems and applications. Thus examples of IT management and maintenance tasks or operations include diagnostics and recovery security protection backups resource provisioning and asset management of IT systems.

At a broader level the scope of IT manageability may be associated with the lifecycle phases for servers and data centers including bring up operation failures changes and retire shutdown phases. Various tasks are performed at each of these life cycle stages. Examples include systems security protection against viruses and spyware backup protection against disasters disk maintenance to improve performance fault diagnostics and recovery and asset management to track resources. Currently there are several efforts underway to address this growing problem of manageability. For example software based solutions have been proposed to address manageability at the different lifecycle phases. In such solutions several of the manageability tasks execute during the operation phase of the servers sharing hardware and software resources with host applications. This sharing leads to resource interference and hence degradation in performance. Such degradation is expected to worsen with growing IT complexity and corresponding increases in the growing number and sophistication of manageability tasks.

One approach to address the above concerns is to provide better platform support for manageability tasks. An emerging trend towards this direction is the use of manageability processors MPs dedicated hardware processors that only execute manageability tasks and provide an out of band channel for remote management. A typical MP is a small embedded application specific integrated circuit ASIC customized for specific manageability uses or operations. It can be hooked off for example the peripheral component interconnect PCI bus at an input output I O bus e.g. the southbridge of computerized systems such as servers and personal computers PCs . Instantiations of such MP architectures or platforms follow an asymmetrical model. The host system includes a powerful processor or central processing unit CPU large memory network interface cards or modules NIC a server operating system OS while the manageability system includes a cheaper embedded processor a small dedicated memory NIC and a private embedded OS that executes independently of the host system. Such asymmetry and independence aids in removing resource interference for processors buses caches and memory thereby resulting in improved performance for host workloads that are CPU and memory bound.

For simplicity and illustrative purposes the principles of the embodiments are described by referring mainly to examples thereof. In the following description numerous specific details are set forth in order to provide a thorough understanding of the embodiments. It will be apparent however to one of ordinary skill in the art that the embodiments may be practiced without limitation to these specific details. In other instances well known methods and structures have not been described in detail so as not to unnecessarily obscure the embodiments.

Existing manageability processor MP architectures or platforms as discussed earlier have several limitations. For example they support limited manageability functionality and have non standard interfaces. Additionally there is an inefficient separation of capabilities between existing hardware and software IT manageability solutions that create islands of disjoint management efforts. Furthermore existing IT manageability solutions are not fully automated thereby resulting in higher total cost of ownership of IT systems.

Accordingly described herein are methods and systems for providing an extensible unified architecture for a manageability processor in a host system such as a computerized system. Such an architecture includes a powerful manageability platform that supports general purpose service processors an operating system OS stack embedded in the manageability platform an automation engine with rich policy and model stacks that is integrated in the manageability platform and rich interfaces between the manageability platform and the rest of the host system to provide dedicated control paths to other aspects of the host system. Consequently the various embodiments of an extensible unified manageability architecture as described herein enable a much richer set of management capabilities through good coordination among the software and hardware based manageability solutions so as to provide an efficient integration of manageability functionalities and a better utilization of available management capabilities for manageability including new applications in diagnostics asset management resource provisioning and security management.

The platform layer includes hardware enhancements an automation engine and an embedded OS. For hardware enhancements instead of conventionally implementing the MP as an ASIC with specific purposes a general purpose processor is implemented as the MP in the manageability platform . The general purpose processor may be a CPU or any other multi purpose processor or microprocessor. Examples of a general purpose processor include a processor of any of a number of computer processors such as processors from Intel AMD and Cyrix. It should be noted that although the MP is implemented by a general purpose processor its specific purpose is to manage a host system in which it is implemented or embedded. That is the MP is dedicated to performing manageability tasks for management of the host system. The hardware enhancements in the platform layer of the manageability platform also include dedicated control paths from the MP to the data storage subsystem such as a disk storage subsystem of the host system. This enables data centric tasks or operations to be delegated to the MP. The implementation of the MP as a general purpose processor with enhanced processing capabilities in turn allows implementation of an embedded OS with an enhanced OS stack at the platform layer with richer semantics for file system support and web services support.

The interfaces layer provides a bridge between a the MP and the OS the host system MP OS to coordinate various runtime structures and the execution of manageability tasks or operations b the MP and the user MP user to provide richer command line interfaces to the end user based on standards such as systems management architecture for server hardware SMASH to enable to the user to remotely access the MP c the MP and the hardware of the host system MP HW to directly access such hardware to perform manageability tasks and d the MP and any available software based management solutions MP NM such as a data center management software to send notification events to and exchange data with such management solutions using any available software management model such as the common information model CIM .

The solutions layer provides manageability solutions with enhanced functionality via manageability applications hosted by the manageability platform and executed by the MP therein. As discussed earlier Examples of manageability applications include provisioning and installation of servers monitoring performance and health of systems security protection against viruses and spyware backup protection against disasters disk maintenance to improve performance fault diagnostics and recovery and asset management to track resources.

The manageability platform is extensible to provide a combined hardware and software platform for use in a host system ranging from a single server or a mainframe computer to a rack enclosure with multiple blade servers to large scale data centers with multiple rack enclosures with multiple blade servers therein. For example in a single computer or server the platform layer includes the use of a general purpose processor as a MP with an embedded OS and an automation engine in the server. In another example for a rack enclosure with multiple blade servers the platform layer is extended to include the use of a general purpose processor as a MP an embedded OS and an automation engine in each of the blade servers or the use of one MP one embedded OS and one automation engine for the entire rack enclosure. In a further example for a data center with multiple rack enclosures the platform layer is further extended to include one or more MPs embedded OS es and automation engines for use in each rack enclosure and a master MP a master embedded OS and a master automation engine may be used for the entire data center. Accordingly such an extensible platform layer is operable to support virtual machine VM architectures wherein each VM acts like a single system and overlay architectures wherein a peer to peer P2P layer or an overall management layer e.g. an overall data center layer is provided over multiple systems. Extensible interfaces layer and solutions layer are then provided to the extensible platform layer .

Commands and data from the host processor are communicated over a system bus with other components in the unified system such as one or more memory controllers like the memory controller that handle communication between the host processor and the main memory device where software is resident during runtime. The main memory device is typically a semiconductor memory chip such as a random access memory RAM module although any other suitable type of memory device such as an optical or magnetic memory device is operable as the main memory device as well.

The host system platform also includes an I O controller that handles communication to and from one or more secondary memory devices such as the secondary memory device where host system software is installed for execution by the host system platform . The second memory device is typically a storage drive such as a magnetic hard disk or tape drive an optical disk drive although any other suitable type of memory device such as a semiconductor memory device e.g. flash memory is operable as the secondary memory device as well. Commands and data to and from the I O controller are communicated over an I O bus with other components in the unified system such as the memory controller and the manageability platform . Because it is desirable to have a common manageability solution across different kinds of systems adding the manageability platform at the I O bus enables portability of such a platform across multiple vendors. Additionally a number of commercially available servers include small embedded ASICs at the I O bust level that provide limited manageability functions like remote power on. Enhancing those ASICS to be general purpose processors or controllers is often more cost effective than adding a new processor core or an all new processor.

The manageability platform includes a MP dedicated to perform manageability tasks to manage the unified system . As discussed earlier a general purpose processor is used to implement the MP . Compared to the host processor the MP may be a smaller embedded processor. Consequently the unified architecture for the unified system is more power efficient compared to traditional approaches. Isolating the two processors also provide greater opportunity for dynamic power control techniques like voltage and frequency scaling. As with the host system platform the manageability platform includes a first memory device and a second memory device . Commands and data from the MP are communicated over a memory bus with the first and second memory devices . In one example the first memory device is a flash memory that maintains the firmware for the manageability platform and the MP and the second memory device is a RAM such as a SDRAM where manageability software or application is resident during runtime. The manageability platform also includes new hardware interfaces to provide control and data paths from the MP to other parts of the unified system such as sensors storage and network. For example as illustrated in the MP includes a hardware interface to sensors such as power consumption and temperature sensors a hardware interface to a separate network port such as a network interface card NIC to the host OS and software not shown and a hardware interface to the I O bus to provide access to storage such as the disk memory device via the I O controller . In one embodiment the manageability platform is separately powered from the host system platform so as to provide two separate power domains in the unified system .

Separation of the manageability and host application domains have several advantages. First system administrators often prefer additional control on manageability applications to have stricter controls on disabling or changing parameters. For example disabling virus scanning to improve performance might be disastrous. Second from a fault tolerance perspective having separate hardware fault domains for the manageability and host processing provides valuable benefits such as isolating failures due to software errors hardware errors security attacks so that these failure do not spread from one domain to another. Furthermore having the manageability platform and the MP therein in a separate power domain has additional value. For example manageability applications such as disk indexing or virus scanning are executable even when the host system is not running.

The host interface includes one or more application programming interfaces APIs that enable the manageability platform to access the host system software including the host OS stack such as OS file system OS drivers etc. to coordinate and exchange the various runtime data structures between software stacks to provide semantic interfaces as described in U.S. application Ser. No. 11 888 349 and the execution of manageability tasks. These APIs also enable the manageability platform to access the OS and applications logs in the host system software which are useful for manageability solutions such as remote diagnostics. Such APIs may be provided or exposed by the host system software through software development kits. Although the host system software is described as including an OS stack it should be understood that the host system software may include a hypervisor stack for hosting virtual machines or any other OS like stack for operating a device. Likewise the manageability platform may be implemented within a hypervisor.

The sensor interface includes one or more device drivers that are operable to access the sensors and other desired hardware devices block in the unified system .

The file system support provides support for the manageability platform to access data storage areas in the unified system in a manner consistent with the particular file system s used in such data storage areas.

The user interface includes one or more interfaces that allow an end user of the unified system to remotely access the manageability platform and the MP therein. For example the user interface includes command line interfaces to the end user based on standards such as systems management architecture for server hardware SMASH to enable to the end user to remotely access the manageability platform and the MP therein.

The external management interface to the external software based management solutions e.g. network management of a data center relies on exchange of data e.g. notification events using any IT management modeling standard. For example the CIM as defined and published by the Distributed Management Task Force DMTF may be employed for the interface . By representing software components as CIM objects in CIM and by using SMASH managed element addressing which leverages web services manageability operations may be passed to the appropriate component software or hardware without requiring explicit knowledge of the component except for where it resides.

The enhanced applications are manageability applications with enhanced functionalities that may be embedded in the manageability platform to take advantage of the increased processing capabilities of the MP which is now a general purpose processor the local automation capabilities provided by the policy model stack and the various interfaces . Delegating the manageability applications to a dedicated MP eliminates resource contention and interference at all higher levels of the unified system including at the thread level at the shared caches level and at the memory system bus level.

The policy model stack which may be implemented at the firmware level of the manageability platform includes a policy stack and a model stack. The policy stack expresses obligation policies of the manageability applications as hosted by the manageability platform . Obligation policies specify actions to be performed when certain events happen. For example security management policies specify what actions must be specified when security violations occur and who must execute those actions. In another example performance management policies could relate to tuning actions. In still another example fault management policies could have actions specified to re configure or restart components. Obligation policies are event triggered examples of events are internal timer events or an external event notified by monitoring service components e.g. a temperature exceeding a threshold or a component failing. Composite events are also possible. Obligation policies can be expressed as reactive rules by using the format ON event IF condition is satisfied THEN trigger actions . Obligation policies may be application specific to specify pre defined policies for performing particular manageability tasks or applications. Alternatively they may be application agnostic to specify pre defined policies that are applicable to all manageability tasks or applications.

The model stack portion of the policy model stack captures information obtained by the manageability platform from interfaces . For example the model stack is used to capture information such as machine status and health in a formal structured manner.

At a manageability platform is incorporated in the host system with connection to the I O bus of the host system.

At an embedded OS is provided in the manageability platform that is separate from the OS of the host system.

At a plurality of manageability applications are delegated or installed in the manageability platform instead of the conventional loading in the host system for execution by the host processor and host OS.

At a general purpose processor is implemented in the manageability platform as a MP that is dedicated to the executing the manageability applications.

At an automation engine is implemented in the manageability platform to provide a policy stack to express obligation and reactive policies for the manageability applications and a model stack to capture information such as machine status and health in a formal structured manner. In one embodiment the policy and model stacks are integrated into a policy model stack.

At the a plurality of interfaces are also implemented in the manageability platform to enable the MP to access the rest of the host system and any hardware user and software based management solutions that are external to the host system to provide manageability of the host system .

The aforementioned unified structure for a host system with an embedded manageability platform and a dedicated MP therein enables a richer set of manageability capabilities and functionalities at a lower cost. It also provides possibilities of embedding new software applications such as those for diagnostics asset management resource provisioning and security management within the MP. For example it is possible to run routine management tasks such as virus scanning and backups out of band with management platform. In addition because an integrated policy model stack is locally provided at the MP enhanced local automation capabilities are provided that include the ability to enable adaptivity and self management at the machine level. Furthermore by providing manageability functions out of band on the MP better performance and power benefits are achievable while leveraging greater security privileges.

What has been described and illustrated herein is an embodiment along with some of its variations. The terms descriptions and figures used herein are set forth by way of illustration only and are not meant as limitations. Those skilled in the art will recognize that many variations are possible within the spirit and scope of the subject matter which is intended to be defined by the following claims and their equivalents in which all terms are meant in their broadest reasonable sense unless otherwise indicated.

